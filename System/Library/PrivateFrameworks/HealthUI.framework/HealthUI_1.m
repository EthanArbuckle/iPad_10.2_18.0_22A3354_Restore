BOOL static CLKDeviceProductFamilyType.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  _BOOL4 v3;

  v3 = a2 == -1 || a1 < a2;
  return a1 != -1 && v3;
}

BOOL sub_1D7AEA674(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == -1)
    return 0;
  return *a2 == -1 || *a1 < *a2;
}

BOOL sub_1D7AEA69C(_QWORD *a1, _QWORD *a2)
{
  if (*a2 == -1)
    return 1;
  return *a1 != -1 && *a2 >= *a1;
}

BOOL sub_1D7AEA6C4(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == -1)
    return 1;
  return *a2 != -1 && *a1 >= *a2;
}

BOOL sub_1D7AEA6EC(_QWORD *a1, _QWORD *a2)
{
  if (*a2 == -1)
    return 0;
  return *a1 == -1 || *a2 < *a1;
}

void sub_1D7AEA714(_QWORD *a1, char a2, _QWORD *a3)
{
  uint64_t v4;
  void *v7;
  void *v8;
  _QWORD *v9;
  id v10;
  id v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  char v19;
  void *v20;
  id v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  void **v28;
  void *v29;
  _QWORD *v30;
  id v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  _BOOL8 v35;
  uint64_t v36;
  char v37;
  char v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;

  v4 = a1[2];
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v7 = (void *)a1[4];
  v8 = (void *)a1[5];
  swift_bridgeObjectRetain();
  v43 = v7;
  v9 = (_QWORD *)*a3;
  v10 = v7;
  v11 = v8;
  v13 = sub_1D7AF44F4((uint64_t)v10);
  v14 = v9[2];
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
    goto LABEL_23;
  v17 = v12;
  if (v9[3] >= v16)
  {
    if ((a2 & 1) != 0)
    {
      if ((v12 & 1) != 0)
        goto LABEL_10;
    }
    else
    {
      sub_1D7AF61E0();
      if ((v17 & 1) != 0)
        goto LABEL_10;
    }
LABEL_13:
    v22 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v13 >> 6) + 64) |= 1 << v13;
    v23 = 8 * v13;
    *(_QWORD *)(v22[6] + v23) = v10;
    *(_QWORD *)(v22[7] + v23) = v11;
    v24 = v22[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v22[2] = v26;
    v27 = v4 - 1;
    if (v4 == 1)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    v28 = (void **)(a1 + 7);
    while (1)
    {
      v29 = *v28;
      v43 = *(v28 - 1);
      v30 = (_QWORD *)*a3;
      v31 = v43;
      v11 = v29;
      v32 = sub_1D7AF44F4((uint64_t)v31);
      v34 = v30[2];
      v35 = (v33 & 1) == 0;
      v25 = __OFADD__(v34, v35);
      v36 = v34 + v35;
      if (v25)
        break;
      v37 = v33;
      if (v30[3] < v36)
      {
        sub_1D7AF4F84(v36, 1);
        v32 = sub_1D7AF44F4((uint64_t)v31);
        if ((v37 & 1) != (v38 & 1))
          goto LABEL_25;
      }
      if ((v37 & 1) != 0)
        goto LABEL_10;
      v39 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v32 >> 6) + 64) |= 1 << v32;
      v40 = 8 * v32;
      *(_QWORD *)(v39[6] + v40) = v31;
      *(_QWORD *)(v39[7] + v40) = v11;
      v41 = v39[2];
      v25 = __OFADD__(v41, 1);
      v42 = v41 + 1;
      if (v25)
        goto LABEL_24;
      v39[2] = v42;
      v28 += 2;
      if (!--v27)
        goto LABEL_22;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_1D7AF4F84(v16, a2 & 1);
  v18 = sub_1D7AF44F4((uint64_t)v10);
  if ((v17 & 1) == (v19 & 1))
  {
    v13 = v18;
    if ((v17 & 1) == 0)
      goto LABEL_13;
LABEL_10:
    v20 = (void *)swift_allocError();
    swift_willThrow();
    v21 = v20;
    sub_1D7AAEAB4();
    if ((swift_dynamicCast() & 1) == 0)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_1D7AA7AD0();
  sub_1D7B4A974();
  __break(1u);
LABEL_26:
  sub_1D7B4A7DC();
  sub_1D7B4A41C();
  sub_1D7AA7AD0();
  sub_1D7B4A86C();
  sub_1D7B4A41C();
  sub_1D7B4A890();
  __break(1u);
}

uint64_t sub_1D7AEAA8C(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

void sub_1D7AEAB14()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F014EA90)
  {
    type metadata accessor for CLKDeviceProductFamilyType(255);
    v0 = sub_1D7B4A4E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F014EA90);
  }
}

id SleepApneaEventAxis.__allocating_init(displayType:)(void *a1)
{
  objc_class *v1;
  char *v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  objc_super v12;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR___HKSleepApneaEventAxis_displayType] = a1;
  v4 = objc_allocWithZone((Class)HKNumericAxisConfiguration);
  v5 = a1;
  v6 = objc_msgSend(v4, sel_init);
  v7 = (void *)objc_opt_self();
  v8 = v6;
  v9 = objc_msgSend(v7, sel_preferredAxisStyle);
  objc_msgSend(v8, sel_setPreferredStyle_, v9);

  v12.receiver = v3;
  v12.super_class = v1;
  v10 = objc_msgSendSuper2(&v12, sel_initWithConfiguration_, v8);

  return v10;
}

id SleepApneaEventAxis.init(displayType:)(void *a1)
{
  char *v1;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  objc_super v11;

  *(_QWORD *)&v1[OBJC_IVAR___HKSleepApneaEventAxis_displayType] = a1;
  v3 = objc_allocWithZone((Class)HKNumericAxisConfiguration);
  v4 = a1;
  v5 = objc_msgSend(v3, sel_init);
  v6 = (void *)objc_opt_self();
  v7 = v5;
  v8 = objc_msgSend(v6, sel_preferredAxisStyle);
  objc_msgSend(v7, sel_setPreferredStyle_, v8);

  v11.receiver = v1;
  v11.super_class = (Class)type metadata accessor for SleepApneaEventAxis();
  v9 = objc_msgSendSuper2(&v11, sel_initWithConfiguration_, v7);

  return v9;
}

uint64_t type metadata accessor for SleepApneaEventAxis()
{
  return objc_opt_self();
}

id SleepApneaEventAxis.__allocating_init(configuration:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithConfiguration_, a1);

  return v3;
}

void SleepApneaEventAxis.init(configuration:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SleepApneaEventAxis.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SleepApneaEventAxis();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D7AEAF94(void *a1, double a2, double a3)
{
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v21;

  v21 = MEMORY[0x1E0DEE9D8];
  v6 = objc_msgSend(objc_allocWithZone((Class)HKAxisLabel), sel_init);
  objc_msgSend(v6, sel_setLabelType_, 1);
  v7 = objc_msgSend(a1, sel_presentation);
  objc_msgSend(v7, sel_adjustedDoubleForDaemonDouble_, a2);

  v8 = (void *)sub_1D7B494BC();
  objc_msgSend(v6, sel_setLocation_, v8);

  v9 = v6;
  MEMORY[0x1D829E3EC]();
  if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1D7B4A4C4();
  sub_1D7B4A4DC();
  sub_1D7B4A4B8();
  v10 = objc_msgSend(objc_allocWithZone((Class)HKAxisLabel), sel_init);
  objc_msgSend(v10, sel_setLabelType_, 0);
  v11 = objc_msgSend(a1, sel_presentation);
  objc_msgSend(v11, sel_adjustedDoubleForDaemonDouble_, (a3 - a2) * 0.5 + a2);

  v12 = (void *)sub_1D7B494BC();
  objc_msgSend(v10, sel_setLocation_, v12);

  sub_1D7B4A7DC();
  swift_bridgeObjectRelease();
  if (qword_1F014CF90 != -1)
    swift_once();
  v13 = (id)qword_1F0154598;
  sub_1D7B48F7C();

  v14 = (void *)sub_1D7B4A38C();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setText_, v14, 0xE000000000000000, 0, 0xE000000000000000);

  v15 = v10;
  MEMORY[0x1D829E3EC]();
  if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1D7B4A4C4();
  sub_1D7B4A4DC();
  sub_1D7B4A4B8();
  v16 = objc_msgSend(objc_allocWithZone((Class)HKAxisLabel), sel_init);
  objc_msgSend(v16, sel_setLabelType_, 1);
  v17 = objc_msgSend(a1, sel_presentation);
  objc_msgSend(v17, sel_adjustedDoubleForDaemonDouble_, a3);

  v18 = (void *)sub_1D7B494BC();
  objc_msgSend(v16, sel_setLocation_, v18);

  v19 = v16;
  MEMORY[0x1D829E3EC]();
  if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1D7B4A4C4();
  sub_1D7B4A4DC();
  sub_1D7B4A4B8();

  return v21;
}

uint64_t sub_1D7AEB368(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  id v5;
  uint64_t v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  double v21;
  uint64_t v22;
  id v23;

  v2 = v1;
  swift_getObjectType();
  v4 = objc_msgSend(a1, sel_minValue);
  if (v4)
  {
    v23 = v4;
    if ((swift_dynamicCast() & 1) != 0)
    {
      v5 = objc_msgSend(a1, sel_maxValue);
      if (v5)
      {
        v23 = v5;
        if ((swift_dynamicCast() & 1) != 0
          && (~*(_QWORD *)&v21 & 0x7FF0000000000000) != 0
          && v21 - v21 > 0.0
          && (COERCE_UNSIGNED_INT64(v21 - v21) & 0x7FF0000000000000) != 0x7FF0000000000000)
        {
          return sub_1D7AEAF94(*(void **)(v2 + OBJC_IVAR___HKSleepApneaEventAxis_displayType), v21, v21);
        }
      }
    }
  }
  if (qword_1F014CF10 != -1)
    swift_once();
  v7 = sub_1D7B4969C();
  __swift_project_value_buffer(v7, (uint64_t)qword_1F01544D0);
  v8 = a1;
  v9 = sub_1D7B49684();
  v10 = sub_1D7B4A608();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v12 = swift_slowAlloc();
    v23 = (id)v12;
    *(_DWORD *)v11 = 136446466;
    v13 = sub_1D7B4AA94();
    v22 = sub_1D7AA4DE4(v13, v14, (uint64_t *)&v23);
    sub_1D7B4A704();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2082;
    v15 = v8;
    v16 = objc_msgSend(v15, sel_description, v22, v23);
    v17 = sub_1D7B4A3BC();
    v19 = v18;

    sub_1D7AA4DE4(v17, v19, (uint64_t *)&v23);
    sub_1D7B4A704();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D7813000, v9, v10, "[%{public}s] Asked to create axis labels for incompatible range: %{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D829FFF4](v12, -1, -1);
    MEMORY[0x1D829FFF4](v11, -1, -1);

  }
  else
  {

  }
  return 0;
}

uint64_t method lookup function for SleepApneaEventAxis()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SleepApneaEventAxis.__allocating_init(displayType:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

unint64_t sub_1D7AEB688()
{
  unint64_t result;

  result = qword_1F014EF70;
  if (!qword_1F014EF70)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1F014EF70);
  }
  return result;
}

id AudiogramChartDataFormatter.__allocating_init(displayType:unitController:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return AudiogramChartDataFormatter.init(displayType:unitController:)(a1, a2);
}

uint64_t sub_1D7AEB704()
{
  return 7;
}

uint64_t sub_1D7AEB70C()
{
  return 8;
}

id AudiogramChartDataFormatter.init(displayType:unitController:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  objc_super v11;

  v11.receiver = v2;
  v11.super_class = (Class)type metadata accessor for AudiogramChartDataFormatter();
  v5 = objc_msgSendSuper2(&v11, sel_init);
  v6 = (void *)objc_opt_self();
  v7 = v5;
  v8 = objc_msgSend(v6, sel_hk_chartCurrentValueValueFont);
  objc_msgSend(v7, sel_setMajorFont_, v8);

  v9 = objc_msgSend(v6, sel_hk_chartCurrentValueKindFont);
  objc_msgSend(v7, sel_setMinorFont_, v9);

  objc_msgSend(v7, sel_setUnitController_, a2);
  objc_msgSend(v7, sel_setDisplayType_, a1);

  return v7;
}

uint64_t type metadata accessor for AudiogramChartDataFormatter()
{
  return objc_opt_self();
}

uint64_t sub_1D7AEBA5C(void *a1, void *a2, uint64_t a3)
{
  _QWORD *v3;
  id v7;
  id v8;
  double v9;
  double v10;
  id v11;
  void *v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t result;

  v7 = objc_msgSend((id)objc_opt_self(), sel_decibelHearingLevelUnit);
  v8 = objc_msgSend(a2, sel_doubleValueForUnit_, v7);
  v10 = v9;
  v11 = objc_msgSend(objc_allocWithZone((Class)HKSelectedRangeData), sel_initWithStatisticsType_, (*(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & *v3) + 0x60))(v8));
  v12 = v11;
  switch(a3)
  {
    case 1:
      v13 = 7;
LABEL_5:
      objc_msgSend(v11, sel_setDataType_, v13);
      v14 = objc_msgSend(v3, sel_attributedStringWithValue_unit_showUnit_, v7, 1, v10);
      objc_msgSend(v12, sel_setAttributedString_, v14);

      objc_msgSend(a1, sel_doubleValueForUnit_, v7);
      v15 = (void *)sub_1D7B494BC();
      objc_msgSend(v12, sel_setValueAsNumber_, v15);

      return (uint64_t)v12;
    case 2:
      v13 = 8;
      goto LABEL_5;
    case 0:
      sub_1D7B4A890();
      __break(1u);
      break;
  }
  type metadata accessor for HKAudiogramEar(0);
  result = sub_1D7B4A950();
  __break(1u);
  return result;
}

id AudiogramChartDataFormatter.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AudiogramChartDataFormatter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for AudiogramChartDataFormatter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AudiogramChartDataFormatter.leftEarDataType.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x50))();
}

uint64_t dispatch thunk of AudiogramChartDataFormatter.rightEarDataType.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of AudiogramChartDataFormatter.statisticsType.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of AudiogramChartDataFormatter.__allocating_init(displayType:unitController:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of AudiogramChartDataFormatter.makeSelectedRangeData(sensitivityQuantity:roundedSensitivityQuantity:ear:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

id sub_1D7AEBCE8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR___HKStateOfMindSeries____lazy_storage___gradientFillStyle;
  v2 = *(void **)(v0 + OBJC_IVAR___HKStateOfMindSeries____lazy_storage___gradientFillStyle);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR___HKStateOfMindSeries____lazy_storage___gradientFillStyle);
  }
  else
  {
    v4 = sub_1D7AEBD44();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1D7AEBD44()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  void *v29;
  id v30;

  sub_1D7AAF550();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1D7B858A0;
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 1.0, 0.431372549, 0.160784314, 1.0);
  v2 = (void *)sub_1D7B494BC();
  v3 = objc_msgSend(objc_allocWithZone((Class)HKMultiGradientFillColor), sel_initWithColor_location_, v1, v2);

  *(_QWORD *)(v0 + 32) = v3;
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 1.0, 0.431372549, 0.160784314, 1.0);
  v5 = (void *)sub_1D7B494BC();
  v6 = objc_msgSend(objc_allocWithZone((Class)HKMultiGradientFillColor), sel_initWithColor_location_, v4, v5);

  *(_QWORD *)(v0 + 40) = v6;
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 1.0, 0.623529412, 0.0, 1.0);
  v8 = (void *)sub_1D7B494BC();
  v9 = objc_msgSend(objc_allocWithZone((Class)HKMultiGradientFillColor), sel_initWithColor_location_, v7, v8);

  *(_QWORD *)(v0 + 48) = v9;
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.57254902, 0.850980392, 0.0862745098, 1.0);
  v11 = (void *)sub_1D7B494BC();
  v12 = objc_msgSend(objc_allocWithZone((Class)HKMultiGradientFillColor), sel_initWithColor_location_, v10, v11);

  *(_QWORD *)(v0 + 56) = v12;
  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.321568627, 0.8, 0.768627451, 1.0);
  v14 = (void *)sub_1D7B494BC();
  v15 = objc_msgSend(objc_allocWithZone((Class)HKMultiGradientFillColor), sel_initWithColor_location_, v13, v14);

  *(_QWORD *)(v0 + 64) = v15;
  v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.270588235, 0.545098039, 0.901960784, 1.0);
  v17 = (void *)sub_1D7B494BC();
  v18 = objc_msgSend(objc_allocWithZone((Class)HKMultiGradientFillColor), sel_initWithColor_location_, v16, v17);

  *(_QWORD *)(v0 + 72) = v18;
  v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.270588235, 0.403921569, 0.901960784, 1.0);
  v20 = (void *)sub_1D7B494BC();
  v21 = objc_msgSend(objc_allocWithZone((Class)HKMultiGradientFillColor), sel_initWithColor_location_, v19, v20);

  *(_QWORD *)(v0 + 80) = v21;
  v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.360784314, 0.239215686, 0.8, 1.0);
  v23 = (void *)sub_1D7B494BC();
  v24 = objc_msgSend(objc_allocWithZone((Class)HKMultiGradientFillColor), sel_initWithColor_location_, v22, v23);

  *(_QWORD *)(v0 + 88) = v24;
  v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.360784314, 0.239215686, 0.8, 1.0);
  v26 = (void *)sub_1D7B494BC();
  v27 = objc_msgSend(objc_allocWithZone((Class)HKMultiGradientFillColor), sel_initWithColor_location_, v25, v26);

  *(_QWORD *)(v0 + 96) = v27;
  sub_1D7B4A4B8();
  v28 = objc_allocWithZone((Class)HKMultiGradientFillStyle);
  sub_1D7AAF6EC(0, (unint64_t *)&qword_1F014EBB0);
  v29 = (void *)sub_1D7B4A4A0();
  swift_bridgeObjectRelease();
  v30 = objc_msgSend(v28, sel_initWithColors_, v29);

  return v30;
}

id sub_1D7AEC1B8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR___HKStateOfMindSeries____lazy_storage___inactiveFillStyle;
  v2 = *(void **)(v0 + OBJC_IVAR___HKStateOfMindSeries____lazy_storage___inactiveFillStyle);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR___HKStateOfMindSeries____lazy_storage___inactiveFillStyle);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)HKSolidFillStyle), sel_init);
    v5 = qword_1F014CF28;
    v6 = v4;
    if (v5 != -1)
      swift_once();
    objc_msgSend(v6, sel_setColor_, qword_1F014EAF0);

    v7 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v6;
    v3 = v6;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

id StateOfMindSeries.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id StateOfMindSeries.init()()
{
  char *v0;
  char *v1;
  id v2;
  objc_super v4;

  *(_QWORD *)&v0[OBJC_IVAR___HKStateOfMindSeries____lazy_storage___gradientFillStyle] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___HKStateOfMindSeries____lazy_storage___inactiveFillStyle] = 0;
  v1 = v0;
  *(_QWORD *)&v1[OBJC_IVAR___HKStateOfMindSeries_fixedAxisLabels] = sub_1D7AED514();

  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for StateOfMindSeries();
  v2 = objc_msgSendSuper2(&v4, sel_init);
  objc_msgSend(v2, sel_setAdjustYAxisForLabels_, 0);
  return v2;
}

void sub_1D7AEC39C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char **v22;
  id v23;
  void *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  objc_class *v44;
  char *v45;
  id v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  void *v55;
  void *v56;
  id v57;
  void *v58;
  void *v59;
  id v60;
  uint64_t v61;
  __int128 v62;
  id v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  objc_super v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  *((_QWORD *)&v62 + 1) = a3;
  *(_QWORD *)&v62 = a2;
  swift_getObjectType();
  v10 = sub_1D7B4969C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1D7B49198();
  v66 = *(_QWORD *)(v14 - 8);
  v67 = v14;
  MEMORY[0x1E0C80A78](v14);
  v65 = (uint64_t)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = objc_msgSend(a1, sel_chartPoints);
  if (v16
    && (v17 = v16,
        sub_1D7ADE914(0, (unint64_t *)&qword_1F014DF40),
        v18 = sub_1D7B4A4AC(),
        v17,
        v19 = sub_1D7AE2684(v18),
        swift_bridgeObjectRelease(),
        v19))
  {
    v64 = objc_msgSend(a5, sel_transform);
    v63 = objc_msgSend(a6, sel_transform);
    v75 = MEMORY[0x1E0DEE9D8];
    if (v19 >> 62)
    {
LABEL_26:
      swift_bridgeObjectRetain();
      v20 = sub_1D7B4A8A8();
      swift_bridgeObjectRelease();
      if (v20)
        goto LABEL_5;
    }
    else
    {
      v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v20)
      {
LABEL_5:
        v61 = a4;
        v21 = v19 & 0xC000000000000001;
        a4 = 4;
        v22 = &selRef_localizedDisplayNameForClassification_;
        while (1)
        {
          if (v21)
            v23 = (id)MEMORY[0x1D829E758](a4 - 4, v19);
          else
            v23 = *(id *)(v19 + 8 * a4);
          v24 = v23;
          v25 = a4 - 3;
          if (__OFADD__(a4 - 4, 1))
          {
            __break(1u);
            goto LABEL_26;
          }
          if (objc_msgSend(v23, v22[123]))
          {
            sub_1D7B4A770();
            swift_unknownObjectRelease();
            sub_1D7AA552C(&v70, &v72);
            if (objc_msgSend(v24, sel_minYValue))
            {
              v26 = v19;
              v27 = v20;
              sub_1D7B4A770();
              swift_unknownObjectRelease();
              sub_1D7AA552C(&v69, &v70);
              v28 = v65;
              sub_1D7AA35DC(v65);
              v29 = (void *)sub_1D7B49150();
              (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v28, v67);
              objc_msgSend(v64, sel_coordinateForValue_, v29);
              v31 = v30;

              __swift_project_boxed_opaque_existential_0(&v72, v74);
              v32 = sub_1D7B4A92C();
              v33 = v63;
              objc_msgSend(v63, sel_coordinateForValue_, v32);
              v35 = v34;
              swift_unknownObjectRelease();
              __swift_project_boxed_opaque_existential_0(&v70, v71);
              objc_msgSend(v33, sel_coordinateForValue_, sub_1D7B4A92C());
              v37 = v36;
              swift_unknownObjectRelease();
              sub_1D7AED8F8((uint64_t)v24, 2, v33);
              v39 = v38;
              sub_1D7AED8F8((uint64_t)v24, 1, v33);
              v41 = v40;
              v42 = objc_msgSend(v24, sel_userInfo);
              if (!v42)
              {
                __break(1u);
LABEL_32:
                __break(1u);
                return;
              }
              v43 = v42;
              v44 = (objc_class *)type metadata accessor for StateOfMindCoordinate();
              v45 = (char *)objc_allocWithZone(v44);
              *(_QWORD *)&v45[OBJC_IVAR____TtC8HealthUI21StateOfMindCoordinate_xValue] = v31;
              *(_QWORD *)&v45[OBJC_IVAR____TtC8HealthUI21StateOfMindCoordinate_maxYValue] = v35;
              *(_QWORD *)&v45[OBJC_IVAR____TtC8HealthUI21StateOfMindCoordinate_minYValue] = v37;
              *(_QWORD *)&v45[OBJC_IVAR____TtC8HealthUI21StateOfMindCoordinate_dailyYValueRanges] = v39;
              *(_QWORD *)&v45[OBJC_IVAR____TtC8HealthUI21StateOfMindCoordinate_momentaryYValueRanges] = v41;
              *(_QWORD *)&v45[OBJC_IVAR____TtC8HealthUI21StateOfMindCoordinate_userInfo] = v43;
              v68.receiver = v45;
              v68.super_class = v44;
              v46 = objc_msgSendSuper2(&v68, sel_init);
              MEMORY[0x1D829E3EC]();
              if (*(_QWORD *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                sub_1D7B4A4C4();
              sub_1D7B4A4DC();
              sub_1D7B4A4B8();

              __swift_destroy_boxed_opaque_existential_0((uint64_t)&v70);
              __swift_destroy_boxed_opaque_existential_0((uint64_t)&v72);
              v20 = v27;
              v19 = v26;
              v22 = &selRef_localizedDisplayNameForClassification_;
            }
            else
            {

              __swift_destroy_boxed_opaque_existential_0((uint64_t)&v72);
            }
          }
          else
          {

          }
          ++a4;
          if (v25 == v20)
            goto LABEL_24;
        }
      }
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v47 = a4;
    sub_1D7B49678();
    v48 = sub_1D7B49684();
    v49 = sub_1D7B4A608();
    if (os_log_type_enabled(v48, v49))
    {
      v50 = (uint8_t *)swift_slowAlloc();
      v51 = swift_slowAlloc();
      v67 = v10;
      v52 = v51;
      *(_QWORD *)&v72 = v51;
      *(_DWORD *)v50 = 136446210;
      v53 = sub_1D7B4AA94();
      *(_QWORD *)&v70 = sub_1D7AA4DE4(v53, v54, (uint64_t *)&v72);
      sub_1D7B4A704();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D7813000, v48, v49, "[%{public}s] Unable to create coordinates from unsupported chart points", v50, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D829FFF4](v52, -1, -1);
      MEMORY[0x1D829FFF4](v50, -1, -1);

      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v67);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    }
    sub_1D7ADE914(0, (unint64_t *)&unk_1F014EB10);
    v55 = (void *)sub_1D7B4A4A0();
    v56 = (void *)objc_opt_self();
    v72 = v62;
    v73 = v47;
    v57 = objc_msgSend(v56, sel_coordinateListWithCoordinates_blockPath_, v55, &v72);

    if (v57)
      return;
    __break(1u);
LABEL_24:
    swift_bridgeObjectRelease();
    a4 = v61;
  }
  sub_1D7ADE914(0, (unint64_t *)&unk_1F014EB10);
  swift_bridgeObjectRetain();
  v58 = (void *)sub_1D7B4A4A0();
  swift_bridgeObjectRelease();
  v59 = (void *)objc_opt_self();
  v72 = v62;
  v73 = a4;
  v60 = objc_msgSend(v59, sel_coordinateListWithCoordinates_blockPath_, v58, &v72);

  if (!v60)
    goto LABEL_32;

  swift_bridgeObjectRelease();
}

uint64_t sub_1D7AECB7C(uint64_t result, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, double a6, double a7, double a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, char a17, void *a18)
{
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  double *v31;
  id v32;
  uint64_t v33;
  double v34;
  double v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  CGRect v40;
  CGRect v41;

  if (result)
  {
    type metadata accessor for StateOfMindCoordinate();
    result = swift_dynamicCastClass();
    if (result)
    {
      v26 = result;
      v27 = *(double *)(result + OBJC_IVAR____TtC8HealthUI21StateOfMindCoordinate_xValue);
      swift_unknownObjectRetain();
      v40.origin.x = a2;
      v40.origin.y = a3;
      v40.size.width = a4;
      v40.size.height = a5;
      if (CGRectGetMinX(v40) > v27)
        return swift_unknownObjectRelease();
      v41.origin.x = a2;
      v41.origin.y = a3;
      v41.size.width = a4;
      v41.size.height = a5;
      if (v27 > CGRectGetMaxX(v41))
        return swift_unknownObjectRelease();
      v37 = a18;
      v39 = *(_QWORD *)(v26 + OBJC_IVAR____TtC8HealthUI21StateOfMindCoordinate_momentaryYValueRanges);
      swift_bridgeObjectRetain();
      v28 = swift_bridgeObjectRetain();
      sub_1D7AE7F9C(v28);
      v38 = sub_1D7B02EF8(v39, 8.0);
      v29 = *(_QWORD *)(v38 + 16);
      if (v29)
      {
        v30 = (void *)objc_opt_self();
        v31 = (double *)(v38 + 40);
        do
        {
          v32 = objc_msgSend(v30, sel_bezierPathWithRoundedRect_cornerRadius_, v27 - a6 * 0.5, *(v31 - 1) - a6 * 0.5, a6, a6 * 0.5 + *v31 - (*(v31 - 1) - a6 * 0.5), a6 * 0.5, v37);
          objc_msgSend(a15, sel_appendPath_, v32);

          v31 += 2;
          --v29;
        }
        while (v29);
      }
      swift_bridgeObjectRelease();
      if ((a17 & 1) != 0)
      {
        v33 = *(_QWORD *)(v39 + 16);
        result = swift_bridgeObjectRelease();
        if (v33 == 1)
          a8 = a7;
      }
      else
      {
        result = swift_bridgeObjectRelease();
      }
      v34 = *(double *)(v26 + OBJC_IVAR____TtC8HealthUI21StateOfMindCoordinate_maxYValue);
      v35 = *(double *)(v26 + OBJC_IVAR____TtC8HealthUI21StateOfMindCoordinate_minYValue);
      if (v34 <= v35)
      {
        v36 = objc_msgSend((id)objc_opt_self(), sel_bezierPathWithRoundedRect_cornerRadius_, v27 - a8 * 0.5, v34 - a8 * 0.5, a8, a8 * 0.5 + v35 - (v34 - a8 * 0.5), a8 * 0.5);
        objc_msgSend(v37, sel_appendPath_, v36);

        return swift_unknownObjectRelease();
      }
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1D7AED164()
{
  return swift_bridgeObjectRetain();
}

id sub_1D7AED1D4(_QWORD *a1, char a2, int a3, int a4, int a5, int a6, int a7, int a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15, double a16, uint64_t a17, uint64_t a18)
{
  void *v18;
  id result;
  void *v28;

  result = objc_msgSend(v18, sel_yAxis);
  if (result)
  {
    v28 = result;
    __swift_project_boxed_opaque_existential_0(a1, a1[3]);
    objc_msgSend(v28, sel_renderPositionForLabelLocation_rect_zoomScale_contentOffset_constantOffset_isHorizontal_optionalOffset_, sub_1D7B4A92C(), a2 & 1, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);

    return (id)swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

id StateOfMindSeries.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StateOfMindSeries();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1D7AED4DC()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel_systemGray3Color);
  qword_1F014EAF0 = (uint64_t)result;
  return result;
}

uint64_t sub_1D7AED514()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;

  sub_1D7AAF550();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1D7B858B0;
  sub_1D7B4A7DC();
  swift_bridgeObjectRelease();
  if (qword_1F014CF90 != -1)
    swift_once();
  v1 = (id)qword_1F0154598;
  sub_1D7B48F7C();

  v2 = objc_msgSend(objc_allocWithZone((Class)HKAxisLabel), sel_init, 0xE000000000000000);
  v3 = (void *)sub_1D7B4A38C();
  objc_msgSend(v2, sel_setText_, v3);

  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, 1.05);
  objc_msgSend(v2, sel_setLocation_, v4);

  objc_msgSend(v2, sel_setLabelType_, 1);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 32) = v2;
  sub_1D7B4A7DC();
  swift_bridgeObjectRelease();
  v5 = (id)qword_1F0154598;
  sub_1D7B48F7C();

  v6 = objc_msgSend(objc_allocWithZone((Class)HKAxisLabel), sel_init, 0xE000000000000000);
  v7 = (void *)sub_1D7B4A38C();
  objc_msgSend(v6, sel_setText_, v7);

  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, 0.0);
  objc_msgSend(v6, sel_setLocation_, v8);

  objc_msgSend(v6, sel_setLabelType_, 1);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 40) = v6;
  sub_1D7B4A7DC();
  swift_bridgeObjectRelease();
  v9 = (id)qword_1F0154598;
  sub_1D7B48F7C();

  v10 = objc_msgSend(objc_allocWithZone((Class)HKAxisLabel), sel_init, 0xE000000000000000);
  v11 = (void *)sub_1D7B4A38C();
  objc_msgSend(v10, sel_setText_, v11);

  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, -1.05);
  objc_msgSend(v10, sel_setLocation_, v12);

  objc_msgSend(v10, sel_setLabelType_, 1);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 48) = v10;
  sub_1D7B4A4B8();
  return v0;
}

uint64_t type metadata accessor for StateOfMindSeries()
{
  return objc_opt_self();
}

void sub_1D7AED8F8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t *i;
  double *v9;
  uint64_t v10;
  void *v11;
  double v12;
  double v13;
  void *v14;
  double v15;
  double v16;
  unint64_t v17;
  unint64_t v18;

  v3 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8HealthUI21StateOfMindChartPoint_buckets);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain_n();
    v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    for (i = (uint64_t *)(v3 + 56); ; i += 4)
    {
      v10 = *i;
      if (v10 == a2)
      {
        v11 = (void *)sub_1D7B494BC();
        objc_msgSend(a3, sel_coordinateForValue_, v11);
        v13 = v12;

        v14 = (void *)sub_1D7B494BC();
        objc_msgSend(a3, sel_coordinateForValue_, v14);
        v16 = v15;

        if (v13 > v16)
        {
          __break(1u);
          return;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v7 = sub_1D7ABA3D0(0, v7[2] + 1, 1, v7);
        v18 = v7[2];
        v17 = v7[3];
        if (v18 >= v17 >> 1)
          v7 = sub_1D7ABA3D0((_QWORD *)(v17 > 1), v18 + 1, 1, v7);
        v7[2] = v18 + 1;
        v9 = (double *)&v7[2 * v18];
        v9[4] = v13;
        v9[5] = v16;
      }
      if (!--v4)
      {
        swift_bridgeObjectRelease_n();
        return;
      }
    }
  }
}

uint64_t sub_1D7AEDA6C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  double v6;
  double v7;
  id v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  uint64_t result;
  uint64_t v14;

  v2 = sub_1D7B48DE4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(a1, sel_canonicalSize);
  v7 = v6;
  v8 = objc_msgSend(a1, sel_seriesPointIntervalComponentsAtResolution_, 0);
  sub_1D7B48DB4();

  v9 = (void *)sub_1D7B48DA8();
  objc_msgSend(v9, sel_hk_approximateDuration);
  v11 = v10;

  v12 = floor(v7 / fmax(v11, 1.0));
  result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if ((~*(_QWORD *)&v12 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v12 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v12 < 9.22337204e18)
    return (uint64_t)v12;
LABEL_7:
  __break(1u);
  return result;
}

void sub_1D7AEDB98(void *a1, void *a2, __int128 *a3, uint64_t a4, void *a5, double a6, double a7, double a8, double a9)
{
  void *v9;
  void *v10;
  uint64_t v19;
  id v20;
  id v21;
  unsigned __int8 v22;
  double v23;
  double v24;
  double v25;
  uint64_t v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  uint64_t (*v37)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  __int128 v38;
  __int128 v39;
  __int128 aBlock;
  __int128 v41;
  uint64_t (*v42)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  double v44;
  double v45;

  v10 = v9;
  v38 = a3[1];
  v39 = *a3;
  v19 = *((_QWORD *)a3 + 5);
  v37 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*((_QWORD *)a3 + 4);
  v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3508]), sel_init);
  v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3508]), sel_init);
  v22 = objc_msgSend(a5, sel_seriesDrawingAsTopOverlay_, v10);
  v44 = round(a8 / (double)sub_1D7AEDA6C(a2) * 0.3);
  sub_1D7AA792C();
  sub_1D7B4A2E4();
  v23 = v45;
  v24 = v45 * 0.5;
  v25 = v45 * 1.5;
  v26 = swift_allocObject();
  *(double *)(v26 + 16) = a6;
  *(double *)(v26 + 24) = a7;
  *(double *)(v26 + 32) = a8;
  *(double *)(v26 + 40) = a9;
  *(_QWORD *)(v26 + 48) = v21;
  *(_QWORD *)(v26 + 56) = v10;
  *(double *)(v26 + 64) = v24;
  *(_BYTE *)(v26 + 72) = v22;
  *(double *)(v26 + 80) = v25;
  *(double *)(v26 + 88) = v23;
  *(_QWORD *)(v26 + 96) = v20;
  v42 = sub_1D7AEE398;
  v43 = v26;
  *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v41 = sub_1D7B2DBA0;
  *((_QWORD *)&v41 + 1) = &block_descriptor_5;
  v27 = _Block_copy(&aBlock);
  v28 = v21;
  v29 = v10;
  v30 = v20;
  swift_release();
  aBlock = v39;
  v41 = v38;
  v42 = v37;
  v43 = v19;
  objc_msgSend(a1, sel_enumerateCoordinatesWithTransform_roundToViewScale_block_, &aBlock, 1, v27);
  _Block_release(v27);
  if (!objc_msgSend(v29, sel_allowsSelection))
  {
    v33 = sub_1D7AEC1B8();
    if ((objc_msgSend(v28, sel_isEmpty) & 1) != 0)
    {
LABEL_10:
      v34 = v28;
      goto LABEL_11;
    }
    v35 = objc_msgSend(v28, sel_CGPath);
    objc_msgSend(v33, sel_renderPath_context_axisRect_alpha_, v35, a4, a6, a7, a8, a9, 1.0);
    v36 = v28;
    v28 = v30;
LABEL_9:
    v30 = v35;

    v33 = v36;
    goto LABEL_10;
  }
  v31 = sub_1D7AEBCE8();
  if ((objc_msgSend(v30, sel_isEmpty) & 1) == 0)
  {
    v32 = objc_msgSend(v30, sel_CGPath);
    objc_msgSend(v31, sel_renderPath_context_axisRect_alpha_, v32, a4, a6, a7, a8, a9, 0.15);

    v31 = v32;
  }

  v33 = sub_1D7AEBCE8();
  if ((objc_msgSend(v28, sel_isEmpty) & 1) == 0)
  {
    v35 = objc_msgSend(v28, sel_CGPath);
    objc_msgSend(v33, sel_renderPath_context_axisRect_alpha_, v35, a4, a6, a7, a8, a9, 1.0);
    v36 = v30;
    goto LABEL_9;
  }
  v34 = v30;
  v30 = v28;
LABEL_11:

}

uint64_t sub_1D7AEDF34(double a1, double a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double *v8;
  double v9;
  double v10;
  double v12;
  uint64_t v13;

  type metadata accessor for StateOfMindCoordinate();
  result = swift_dynamicCastClass();
  if (result)
  {
    v5 = result;
    v6 = *(_QWORD *)(result + OBJC_IVAR____TtC8HealthUI21StateOfMindCoordinate_momentaryYValueRanges);
    v13 = *(_QWORD *)(result + OBJC_IVAR____TtC8HealthUI21StateOfMindCoordinate_dailyYValueRanges);
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1D7AE7F9C(v6);
    v7 = *(_QWORD *)(v13 + 16);
    if (v7)
    {
      v8 = (double *)(v13 + 40);
      v9 = 1.79769313e308;
      while (1)
      {
        v10 = *(v8 - 1);
        if (v10 <= a2 && *v8 >= a2)
          break;
        if (v10 <= a2)
          v10 = *v8;
        v12 = sqrt((a2 - v10) * (a2 - v10)+ (a1 - *(double *)(v5 + OBJC_IVAR____TtC8HealthUI21StateOfMindCoordinate_xValue))* (a1 - *(double *)(v5 + OBJC_IVAR____TtC8HealthUI21StateOfMindCoordinate_xValue)));
        if (v9 >= v12)
          v9 = v12;
        v8 += 2;
        if (!--v7)
          goto LABEL_14;
      }
      swift_bridgeObjectRelease();
      return swift_unknownObjectRelease();
    }
    else
    {
LABEL_14:
      swift_unknownObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

double sub_1D7AEE094(double a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double *v5;
  double v6;
  double v7;
  double v9;
  uint64_t v11;

  type metadata accessor for StateOfMindCoordinate();
  v2 = swift_dynamicCastClass();
  if (!v2)
    return 1.79769313e308;
  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8HealthUI21StateOfMindCoordinate_momentaryYValueRanges);
  v11 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8HealthUI21StateOfMindCoordinate_dailyYValueRanges);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D7AE7F9C(v3);
  v4 = *(_QWORD *)(v11 + 16);
  if (v4)
  {
    v5 = (double *)(v11 + 40);
    v6 = 1.79769313e308;
    while (1)
    {
      v7 = *(v5 - 1);
      if (v7 <= a1 && *v5 >= a1)
        break;
      if (v7 <= a1)
        v7 = *v5;
      v9 = vabdd_f64(v7, a1);
      if (v6 >= v9)
        v6 = v9;
      v5 += 2;
      if (!--v4)
        goto LABEL_17;
    }
    v6 = 0.0;
  }
  else
  {
    v6 = 1.79769313e308;
  }
LABEL_17:
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

id _s8HealthUI17StateOfMindSeriesC08standardcdeF005statedE11DisplayType14unitControllerACSo09HKDisplayJ0C_So016HKUnitPreferenceL0CtFZ_0(void *a1, uint64_t a2)
{
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;

  v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for StateOfMindSeries()), sel_init);
  v5 = objc_allocWithZone((Class)HKNumericAxisConfiguration);
  v6 = v4;
  v7 = objc_msgSend(v5, sel_init);
  objc_msgSend(v7, sel_setMaxLabels_, 3);
  objc_msgSend(v7, sel_setLabelDataSource_, v6);
  objc_msgSend(v7, sel_setTopVerticalLabelPadding_, 12.0);
  objc_msgSend(v7, sel_setBottomVerticalLabelPadding_, 12.0);
  v8 = objc_msgSend((id)objc_opt_self(), sel_standardNumericYAxisWithConfigurationOverrides_, v7);

  objc_msgSend(v6, sel_setYAxis_, v8);
  v9 = v6;
  objc_msgSend(v9, sel_setAxisScalingRule_, objc_msgSend(a1, sel_hk_axisScalingRuleForChartSizeClass_unitController_, 0, a2));

  swift_unknownObjectRelease();
  return v9;
}

uint64_t method lookup function for StateOfMindSeries()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StateOfMindSeries.cacheKeys(forModelRange:zoomScale:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of StateOfMindSeries.findAxisLabels(inModelRange:zoomScale:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of StateOfMindSeries.renderPosition(forLabelLocation:rect:zoomScale:contentOffset:constantOffset:isHorizontal:optionalOffset:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t sub_1D7AEE364()
{
  id *v0;

  return swift_deallocObject();
}

uint64_t sub_1D7AEE398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  return sub_1D7AECB7C(a1, *(CGFloat *)(v7 + 16), *(CGFloat *)(v7 + 24), *(CGFloat *)(v7 + 32), *(CGFloat *)(v7 + 40), *(double *)(v7 + 64), *(double *)(v7 + 80), *(double *)(v7 + 88), a2, a3, a4, a5, a6, a7, *(void **)(v7 + 48), *(_QWORD *)(v7 + 56), *(_BYTE *)(v7 + 72), *(void **)(v7 + 96));
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

void *StateOfMindChartDataSource.overlayPredicate.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR___HKStateOfMindChartDataSource_overlayPredicate);
  v2 = v1;
  return v1;
}

id StateOfMindChartDataSource.__allocating_init(displayType:healthStore:overlayPredicate:)(void *a1, void *a2, void *a3)
{
  objc_class *v3;
  id v7;
  id v8;

  v7 = objc_allocWithZone(v3);
  v8 = sub_1D7AF1104((uint64_t)a1, (uint64_t)a2, a3);

  return v8;
}

id StateOfMindChartDataSource.init(displayType:healthStore:overlayPredicate:)(void *a1, void *a2, void *a3)
{
  id v6;

  v6 = sub_1D7AF1104((uint64_t)a1, (uint64_t)a2, a3);

  return v6;
}

uint64_t sub_1D7AEE5E0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  id v25;
  void (*v26)(char *, uint64_t);
  id v27;
  id v28;
  char *v29;
  void (*v30)(char *, char *, uint64_t);
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  id v36;
  id v37;
  char *v38;
  uint64_t v39;
  char v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  id v44;
  char *v45;
  uint64_t v46;
  char v47;
  char v48;
  uint64_t v49;
  void *v50;
  void *v51;
  char *v52;
  uint64_t v53;
  id v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  id v59;
  char *v60;
  void *v61;
  void *v62;
  id v63;
  id v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  id v82;
  uint64_t v83;
  _QWORD aBlock[7];

  v75 = a2;
  v76 = a3;
  v79 = sub_1D7B48DE4();
  v74 = *(_QWORD *)(v79 - 8);
  v4 = MEMORY[0x1E0C80A78](v79);
  v72 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v73 = (char *)&v69 - v6;
  v7 = sub_1D7B49300();
  v83 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v80 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v69 - v10;
  v12 = sub_1D7B4A1C4();
  v77 = *(_QWORD *)(v12 - 8);
  v78 = v12;
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v69 - v16;
  v18 = sub_1D7B49198();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v69 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v69 - v23;
  v82 = a1;
  v25 = objc_msgSend(a1, sel_startDate);
  sub_1D7B49168();

  sub_1D7B49174();
  LOBYTE(v25) = sub_1D7B4915C();
  v26 = *(void (**)(char *, uint64_t))(v19 + 8);
  v26(v22, v18);
  v26(v24, v18);
  if ((v25 & 1) == 0)
    return MEMORY[0x1E0DEE9D8];
  v27 = v82;
  v28 = objc_msgSend(v82, sel_startDate);
  sub_1D7B49168();

  v29 = &v81[OBJC_IVAR___HKStateOfMindChartDataSource_gregorianCalendar];
  v30 = *(void (**)(char *, char *, uint64_t))(v83 + 16);
  v30(v11, &v81[OBJC_IVAR___HKStateOfMindChartDataSource_gregorianCalendar], v7);
  sub_1D7B4A194();
  v31 = objc_msgSend(v27, sel_endDate);
  sub_1D7B49168();

  v30(v11, v29, v7);
  sub_1D7B4A194();
  v32 = sub_1D7B4A1AC();
  v33 = sub_1D7B4A1AC();
  result = sub_1D7B4A1AC();
  if (!__OFSUB__(v33, result))
  {
    v69 = v33 - result;
    v70 = v32;
    v71 = v15;
    v35 = v7;
    v36 = v82;
    v37 = objc_msgSend(v82, sel_statisticsInterval);
    v38 = v73;
    sub_1D7B48DB4();

    v39 = sub_1D7B48DD8();
    LOBYTE(v37) = v40;
    v41 = *(void (**)(char *, uint64_t))(v74 + 8);
    v41(v38, v79);
    if ((v37 & 1) != 0 || v39 != 1)
    {
      v44 = objc_msgSend(v36, sel_statisticsInterval);
      v45 = v72;
      sub_1D7B48DB4();

      v46 = sub_1D7B48D9C();
      v48 = v47;
      v41(v45, v79);
      v42 = (v48 & 1) == 0 && v46 == 1;
    }
    else
    {
      v42 = 2;
    }
    v49 = v35;
    v30(v80, v29, v35);
    v50 = v81;
    v51 = *(void **)&v81[OBJC_IVAR___HKStateOfMindChartDataSource_overlayPredicate];
    v52 = v17;
    v53 = v83;
    if (v51)
      v54 = objc_msgSend(v51, sel_predicate);
    else
      v54 = 0;
    v55 = (_QWORD *)swift_allocObject();
    v56 = v75;
    v57 = v76;
    v55[2] = v50;
    v55[3] = v56;
    v55[4] = v57;
    v58 = objc_allocWithZone(MEMORY[0x1E0D4D180]);
    v59 = v50;
    swift_retain();
    v60 = v80;
    v61 = (void *)sub_1D7B492AC();
    aBlock[4] = sub_1D7AF12FC;
    aBlock[5] = v55;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D7AF0EF4;
    aBlock[3] = &block_descriptor_6;
    v62 = _Block_copy(aBlock);
    v63 = objc_msgSend(v58, sel_initWithDayIndexRange_gregorianCalendar_predicate_options_ascending_limit_resultsHandler_, v70, v69, v61, v54, v42, 1, 0, v62);
    _Block_release(v62);

    (*(void (**)(char *, uint64_t))(v53 + 8))(v60, v49);
    swift_release();
    v64 = v63;
    v65 = objc_msgSend(v59, sel_queryDescription);
    objc_msgSend(v64, sel_setDebugIdentifier_, v65);

    sub_1D7AA7E70(0, (unint64_t *)&qword_1F01493B0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v66 = swift_allocObject();
    *(_OWORD *)(v66 + 16) = xmmword_1D7B83E30;
    *(_QWORD *)(v66 + 32) = v64;
    aBlock[0] = v66;
    sub_1D7B4A4B8();
    v43 = aBlock[0];
    v67 = v78;
    v68 = *(void (**)(char *, uint64_t))(v77 + 8);
    v68(v71, v78);
    v68(v52, v67);
    return v43;
  }
  __break(1u);
  return result;
}

id sub_1D7AEEC48(uint64_t a1)
{
  id v1;
  void *v2;
  unint64_t v4;
  _BYTE v5[24];
  uint64_t v6;

  sub_1D7AB9B80(a1, (uint64_t)v5);
  if (!v6)
  {
    sub_1D7AB1290((uint64_t)v5);
    return 0;
  }
  sub_1D7AE9C70(0, &qword_1F0149378, (unint64_t *)&unk_1F0149390, 0x1E0D4D178, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  v1 = objc_msgSend(objc_allocWithZone((Class)HKGraphSeriesDataBlock), sel_init);
  sub_1D7AF0634(v4, 0);
  sub_1D7ACBA64();
  v2 = (void *)sub_1D7B4A4A0();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setChartPoints_, v2);
  swift_bridgeObjectRelease();

  return v1;
}

uint64_t (*sub_1D7AEEE44(void *a1, void *a2, void (*a3)(_QWORD, _QWORD), uint64_t a4))()
{
  void *v4;
  void *v5;
  uint64_t ObjectType;
  _QWORD *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t i;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  _QWORD v26[6];

  v5 = v4;
  ObjectType = swift_getObjectType();
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = a1;
  v11[3] = a3;
  v11[4] = a4;
  v11[5] = v5;
  v11[6] = ObjectType;
  v26[4] = sub_1D7AF13A8;
  v26[5] = v11;
  v26[0] = MEMORY[0x1E0C809B0];
  v26[1] = 1107296256;
  v26[2] = sub_1D7AEFC30;
  v26[3] = &block_descriptor_9;
  v12 = _Block_copy(v26);
  v13 = a1;
  swift_retain();
  v14 = v5;
  swift_release();
  v15 = objc_msgSend(v14, sel_queriesForRequest_completionHandler_, v13, v12);
  _Block_release(v12);
  sub_1D7AAF6EC(0, (unint64_t *)&unk_1F01493A0);
  v16 = sub_1D7B4A4AC();

  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    v21 = sub_1D7B4A8A8();
    swift_bridgeObjectRelease();
    if (v21 > 0)
    {
      swift_bridgeObjectRetain();
      v22 = sub_1D7B4A8A8();
      if (v22)
      {
        v17 = v22;
        if (v22 >= 1)
        {
LABEL_4:
          for (i = 0; i != v17; ++i)
          {
            if ((v16 & 0xC000000000000001) != 0)
              v19 = (id)MEMORY[0x1D829E758](i, v16);
            else
              v19 = *(id *)(v16 + 8 * i + 32);
            v20 = v19;
            objc_msgSend(a2, sel_executeQuery_, v19);

          }
          goto LABEL_13;
        }
        __break(1u);
      }
LABEL_13:
      swift_bridgeObjectRelease();
      v23 = swift_allocObject();
      *(_QWORD *)(v23 + 16) = v16;
      *(_QWORD *)(v23 + 24) = a2;
      v24 = a2;
      return sub_1D7AF13E4;
    }
  }
  else
  {
    v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v17)
    {
      swift_bridgeObjectRetain();
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRelease();
  a3(0, 0);
  return 0;
}

id sub_1D7AEF094(uint64_t a1, void *a2, void *a3, char *a4, uint64_t a5, void *a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  __CFString *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  id v44;
  uint64_t v45;
  _QWORD *v46;
  os_log_t v47;
  uint64_t v48;
  id v49;
  id v50;
  id v51;
  id v52;
  NSObject *v53;
  os_log_type_t v54;
  uint64_t v55;
  __CFString *v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  id v62;
  uint64_t v63;
  id G0CSaySo30HKMHValenceDistributionSummaryCG_tFZ_0;
  id v65;
  void *v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t);
  id v69;
  void *v70;
  void *v71;
  id v72;
  char *v73;
  void *v74;
  id result;
  void *v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  void *v80;
  id v81;
  id v82;
  char *v83;
  id v84;
  void *v85;
  void *v86;
  char *v87;
  id v88;
  id v89;
  NSObject *v90;
  os_log_type_t v91;
  uint64_t v92;
  uint64_t v93;
  const __CFString *v94;
  __CFString *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  char *v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  _QWORD v108[2];
  int v109;
  _QWORD *v110;
  os_log_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  char *v115;
  void *v116;
  id v117;
  _QWORD *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  __int128 v125;
  uint64_t v126;
  _OWORD v127[2];
  uint64_t v128;

  v117 = a6;
  v123 = a5;
  v128 = *MEMORY[0x1E0C80C00];
  v10 = sub_1D7B48DE4();
  v121 = *(_QWORD *)(v10 - 8);
  v122 = v10;
  MEMORY[0x1E0C80A78](v10);
  v120 = (char *)v108 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1D7B49198();
  v118 = *(_QWORD **)(v12 - 8);
  v119 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v108 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1D7B4969C();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)v108 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v17);
  v22 = (char *)v108 - v21;
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)v108 - v23;
  sub_1D7AB9B80(a1, (uint64_t)&v125);
  if (v126)
  {
    sub_1D7AA552C(&v125, v127);
    if (a2)
    {
      v115 = v14;
      v25 = a2;
      sub_1D7B49678();
      v116 = a3;
      v26 = a3;
      v27 = a2;
      v28 = v26;
      v29 = a2;
      v30 = sub_1D7B49684();
      v31 = sub_1D7B4A5F0();
      v32 = v31;
      if (os_log_type_enabled(v30, v31))
      {
        v33 = swift_slowAlloc();
        v113 = v22;
        v111 = v30;
        v34 = v33;
        v110 = (_QWORD *)swift_slowAlloc();
        v112 = swift_slowAlloc();
        *(_QWORD *)&v125 = v112;
        *(_DWORD *)v34 = 136315650;
        v108[1] = v34 + 4;
        v35 = (id)HKStringForChartDataSourceQueryRequestAudience((uint64_t)objc_msgSend(v28, sel_audience));
        v36 = sub_1D7B4A3BC();
        v109 = v32;
        v37 = a4;
        v38 = v36;
        v114 = v19;
        v40 = v39;

        v41 = v38;
        a4 = v37;
        v124 = sub_1D7AA4DE4(v41, v40, (uint64_t *)&v125);
        sub_1D7B4A704();

        swift_bridgeObjectRelease();
        *(_WORD *)(v34 + 12) = 2080;
        v42 = sub_1D7B4A3BC();
        v124 = sub_1D7AA4DE4(v42, v43, (uint64_t *)&v125);
        sub_1D7B4A704();
        swift_bridgeObjectRelease();
        *(_WORD *)(v34 + 22) = 2114;
        v44 = a2;
        v45 = _swift_stdlib_bridgeErrorToNSError();
        v124 = v45;
        v19 = v114;
        sub_1D7B4A704();
        v46 = v110;
        *v110 = v45;

        v47 = v111;
        _os_log_impl(&dword_1D7813000, v111, (os_log_type_t)v109, "[RemoteCharting]_%s_%s: query returned successfully with error: %{public}@", (uint8_t *)v34, 0x20u);
        sub_1D7AE9C70(0, (unint64_t *)&qword_1ED0AC7F0, (unint64_t *)&qword_1ED0AC800, 0x1E0DE7910, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        swift_arrayDestroy();
        MEMORY[0x1D829FFF4](v46, -1, -1);
        v48 = v112;
        swift_arrayDestroy();
        MEMORY[0x1D829FFF4](v48, -1, -1);
        MEMORY[0x1D829FFF4](v34, -1, -1);

        (*(void (**)(char *, uint64_t))(v16 + 8))(v113, v15);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v16 + 8))(v22, v15);
      }
      v14 = v115;
      a3 = v116;
    }
    sub_1D7AA553C((uint64_t)v127, (uint64_t)&v125);
    sub_1D7AE9C70(0, &qword_1F0149378, (unint64_t *)&unk_1F0149390, 0x1E0D4D178, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    if ((swift_dynamicCast() & 1) == 0)
    {
      v83 = v19;
      v84 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
      v85 = (void *)sub_1D7B4A38C();
      v86 = v84;
      v87 = v83;
      v88 = objc_msgSend(v86, sel_initWithDomain_code_userInfo_, v85, 1000, 0);

      sub_1D7B49678();
      v89 = a3;
      v90 = sub_1D7B49684();
      v91 = sub_1D7B4A608();
      if (os_log_type_enabled(v90, v91))
      {
        v92 = swift_slowAlloc();
        v121 = v16;
        v93 = v92;
        v120 = (char *)swift_slowAlloc();
        *(_QWORD *)&v125 = v120;
        *(_DWORD *)v93 = 136315394;
        v94 = (id)HKStringForChartDataSourceQueryRequestAudience((uint64_t)objc_msgSend(v89, sel_audience));
        v122 = v15;
        v95 = (__CFString *)v94;
        v96 = sub_1D7B4A3BC();
        v114 = v87;
        v97 = a4;
        v98 = v96;
        v100 = v99;

        v101 = v98;
        a4 = v97;
        v124 = sub_1D7AA4DE4(v101, v100, (uint64_t *)&v125);
        sub_1D7B4A704();

        swift_bridgeObjectRelease();
        *(_WORD *)(v93 + 12) = 2080;
        v102 = sub_1D7B4A3BC();
        v124 = sub_1D7AA4DE4(v102, v103, (uint64_t *)&v125);
        sub_1D7B4A704();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D7813000, v90, v91, "[RemoteCharting]_%s_%s: Unable to parse data from query.", (uint8_t *)v93, 0x16u);
        v104 = v120;
        swift_arrayDestroy();
        MEMORY[0x1D829FFF4](v104, -1, -1);
        MEMORY[0x1D829FFF4](v93, -1, -1);

        (*(void (**)(char *, uint64_t))(v121 + 8))(v114, v122);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v16 + 8))(v87, v15);
      }
      v82 = v88;
      ((void (*)(_QWORD, id))a4)(0, v88);
      goto LABEL_18;
    }
    G0CSaySo30HKMHValenceDistributionSummaryCG_tFZ_0 = _s8HealthUI26StateOfMindChartDataSourceC16encodeToProtobuf9summariesSo09HKCodablecdegh5QueryG0CSaySo30HKMHValenceDistributionSummaryCG_tFZ_0(v124);
    swift_bridgeObjectRelease();
    v65 = objc_msgSend(a3, sel_startDate);
    sub_1D7B49168();

    v66 = (void *)sub_1D7B49150();
    v67 = v119;
    v68 = (void (*)(char *, uint64_t))v118[1];
    v68(v14, v119);
    v69 = objc_msgSend(a3, sel_endDate);
    sub_1D7B49168();

    v70 = a3;
    v71 = (void *)sub_1D7B49150();
    v68(v14, v67);
    v72 = objc_msgSend(v70, sel_statisticsInterval);
    v73 = v120;
    sub_1D7B48DB4();

    v74 = (void *)sub_1D7B48DA8();
    (*(void (**)(char *, uint64_t))(v121 + 8))(v73, v122);
    result = objc_msgSend(G0CSaySo30HKMHValenceDistributionSummaryCG_tFZ_0, sel_data);
    if (result)
    {
      v76 = result;
      v77 = sub_1D7B490C0();
      v79 = v78;

      v80 = (void *)sub_1D7B490B4();
      sub_1D7AF1AEC(v77, v79);
      v81 = objc_msgSend(v117, sel_codableQueryDataWithType_startDate_endDate_statisticsInterval_queryDataObject_, 14, v66, v71, v74, v80);

      v82 = v81;
      ((void (*)(id, _QWORD))a4)(v81, 0);

LABEL_18:
      return (id)__swift_destroy_boxed_opaque_existential_0((uint64_t)v127);
    }
    __break(1u);
  }
  else
  {
    v122 = v15;
    sub_1D7AB1290((uint64_t)&v125);
    sub_1D7B49678();
    v49 = a3;
    v50 = a2;
    v51 = v49;
    v52 = a2;
    v53 = sub_1D7B49684();
    v54 = sub_1D7B4A608();
    if (os_log_type_enabled(v53, v54))
    {
      v120 = a4;
      v121 = v16;
      v55 = swift_slowAlloc();
      v118 = (_QWORD *)swift_slowAlloc();
      v119 = swift_slowAlloc();
      *(_QWORD *)&v127[0] = v119;
      *(_DWORD *)v55 = 136315650;
      v56 = (id)HKStringForChartDataSourceQueryRequestAudience((uint64_t)objc_msgSend(v51, sel_audience));
      v57 = sub_1D7B4A3BC();
      v59 = v58;

      *(_QWORD *)&v125 = sub_1D7AA4DE4(v57, v59, (uint64_t *)v127);
      sub_1D7B4A704();

      swift_bridgeObjectRelease();
      *(_WORD *)(v55 + 12) = 2080;
      v60 = sub_1D7B4A3BC();
      *(_QWORD *)&v125 = sub_1D7AA4DE4(v60, v61, (uint64_t *)v127);
      sub_1D7B4A704();
      swift_bridgeObjectRelease();
      *(_WORD *)(v55 + 22) = 2114;
      if (a2)
      {
        v62 = a2;
        v63 = _swift_stdlib_bridgeErrorToNSError();
        *(_QWORD *)&v125 = v63;
        sub_1D7B4A704();
      }
      else
      {
        *(_QWORD *)&v125 = 0;
        sub_1D7B4A704();
        v63 = 0;
      }
      v105 = v121;
      v106 = v118;
      *v118 = v63;

      _os_log_impl(&dword_1D7813000, v53, v54, "[RemoteCharting]_%s_%s: unable to fetch results from query with error: %{public}@", (uint8_t *)v55, 0x20u);
      sub_1D7AE9C70(0, (unint64_t *)&qword_1ED0AC7F0, (unint64_t *)&qword_1ED0AC800, 0x1E0DE7910, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      swift_arrayDestroy();
      MEMORY[0x1D829FFF4](v106, -1, -1);
      v107 = v119;
      swift_arrayDestroy();
      MEMORY[0x1D829FFF4](v107, -1, -1);
      MEMORY[0x1D829FFF4](v55, -1, -1);

      (*(void (**)(char *, uint64_t))(v105 + 8))(v24, v122);
      a4 = v120;
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v16 + 8))(v24, v122);
    }
    return (id)((uint64_t (*)(_QWORD, void *))a4)(0, a2);
  }
  return result;
}

uint64_t sub_1D7AEFC30(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(__int128 *, void *);
  id v6;
  __int128 v8;
  __int128 v9;

  v5 = *(void (**)(__int128 *, void *))(a1 + 32);
  if (a2)
  {
    *((_QWORD *)&v9 + 1) = swift_getObjectType();
    *(_QWORD *)&v8 = a2;
  }
  else
  {
    v8 = 0u;
    v9 = 0u;
  }
  swift_retain();
  swift_unknownObjectRetain();
  v6 = a3;
  v5(&v8, a3);
  swift_release();

  return sub_1D7AB1290((uint64_t)&v8);
}

uint64_t sub_1D7AEFCBC(unint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t i;
  id v7;
  void *v8;

  if (!(a1 >> 62))
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v4)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  result = sub_1D7B4A8A8();
  v4 = result;
  if (!result)
    return swift_bridgeObjectRelease();
LABEL_3:
  if (v4 >= 1)
  {
    for (i = 0; i != v4; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v7 = (id)MEMORY[0x1D829E758](i, a1);
      else
        v7 = *(id *)(a1 + 8 * i + 32);
      v8 = v7;
      objc_msgSend(a2, sel_stopQuery_, v7);

    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_1D7AEFE98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  if (a2)
    v5 = sub_1D7B49024();
  else
    v5 = 0;
  v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);

}

uint64_t sub_1D7AEFEF0(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

id sub_1D7AEFF1C(void *a1, char a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  void *v8;
  id v9;
  unint64_t G0C_tFZ_0;
  id v11;
  void *v12;

  v3 = objc_msgSend(a1, sel_queryDataObject);
  if (v3)
  {
    v4 = v3;
    v5 = sub_1D7B490C0();
    v7 = v6;

    v8 = (void *)sub_1D7B490B4();
    sub_1D7AF1AEC(v5, v7);
  }
  else
  {
    v8 = 0;
  }
  v9 = objc_msgSend(objc_allocWithZone((Class)HKCodableStateOfMindDataSourceQueryData), sel_initWithData_, v8);

  if (!v9)
    return objc_msgSend(objc_allocWithZone((Class)HKGraphSeriesDataBlock), sel_init);
  G0C_tFZ_0 = _s8HealthUI26StateOfMindChartDataSourceC18decodeFromProtobuf05queryG0SaySo30HKMHValenceDistributionSummaryCGSo09HKCodablecdegh5QueryG0C_tFZ_0(v9);
  v11 = objc_msgSend(objc_allocWithZone((Class)HKGraphSeriesDataBlock), sel_init);
  sub_1D7AF0634(G0C_tFZ_0, a2 & 1);
  sub_1D7ACBA64();
  v12 = (void *)sub_1D7B4A4A0();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_setChartPoints_, v12);

  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1D7AF00C0(unint64_t a1, void *a2, void (*a3)(_QWORD, _QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(_QWORD, _QWORD);
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;

  swift_getObjectType();
  v6 = sub_1D7B4969C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v39 - v11;
  if (!a2)
  {
    v43 = v7;
    sub_1D7B49678();
    swift_bridgeObjectRetain_n();
    v27 = sub_1D7B49684();
    v28 = sub_1D7B4A5F0();
    if (os_log_type_enabled(v27, v28))
    {
      v41 = v6;
      v42 = a3;
      v29 = swift_slowAlloc();
      v30 = swift_slowAlloc();
      v44 = v30;
      *(_DWORD *)v29 = 136446466;
      v31 = sub_1D7B4AA94();
      *(_QWORD *)&v45 = sub_1D7AA4DE4(v31, v32, &v44);
      sub_1D7B4A704();
      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 12) = 2080;
      if (a1)
      {
        if (a1 >> 62)
        {
          swift_bridgeObjectRetain();
          v33 = sub_1D7B4A8A8();
          swift_bridgeObjectRelease();
        }
        else
        {
          v33 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
      }
      else
      {
        v33 = 0;
      }
      *(_QWORD *)&v45 = v33;
      BYTE8(v45) = a1 == 0;
      sub_1D7AA7E70(0, &qword_1ED0ACB08, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
      v36 = sub_1D7B4A3E0();
      *(_QWORD *)&v45 = sub_1D7AA4DE4(v36, v37, &v44);
      sub_1D7B4A704();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D7813000, v27, v28, "[%{public}s] Query found %s sample(s).", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D829FFF4](v30, -1, -1);
      MEMORY[0x1D829FFF4](v29, -1, -1);

      (*(void (**)(char *, uint64_t))(v43 + 8))(v10, v41);
      a3 = v42;
      if (!a1)
        goto LABEL_14;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v10, v6);
      if (!a1)
      {
LABEL_14:
        v45 = 0u;
        v46 = 0u;
        goto LABEL_15;
      }
    }
    sub_1D7AE9C70(0, &qword_1F0149378, (unint64_t *)&unk_1F0149390, 0x1E0D4D178, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    *((_QWORD *)&v46 + 1) = v35;
    *(_QWORD *)&v45 = a1;
LABEL_15:
    swift_bridgeObjectRetain();
    a3(&v45, 0);
    return sub_1D7AB1290((uint64_t)&v45);
  }
  v13 = a2;
  sub_1D7B49678();
  v14 = a2;
  v15 = a2;
  v16 = sub_1D7B49684();
  v17 = sub_1D7B4A608();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc();
    v19 = swift_slowAlloc();
    v41 = v6;
    v20 = (_QWORD *)v19;
    v40 = swift_slowAlloc();
    *(_QWORD *)&v45 = v40;
    *(_DWORD *)v18 = 136446466;
    v42 = a3;
    v21 = sub_1D7B4AA94();
    v23 = sub_1D7AA4DE4(v21, v22, (uint64_t *)&v45);
    v43 = v7;
    v44 = v23;
    sub_1D7B4A704();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2114;
    v24 = a2;
    v25 = _swift_stdlib_bridgeErrorToNSError();
    v44 = v25;
    a3 = v42;
    sub_1D7B4A704();
    *v20 = v25;

    _os_log_impl(&dword_1D7813000, v16, v17, "[%{public}s] Query failed with error: %{public}@", (uint8_t *)v18, 0x16u);
    sub_1D7AE9C70(0, (unint64_t *)&qword_1ED0AC7F0, (unint64_t *)&qword_1ED0AC800, 0x1E0DE7910, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    swift_arrayDestroy();
    MEMORY[0x1D829FFF4](v20, -1, -1);
    v26 = v40;
    swift_arrayDestroy();
    MEMORY[0x1D829FFF4](v26, -1, -1);
    MEMORY[0x1D829FFF4](v18, -1, -1);

    (*(void (**)(char *, uint64_t))(v43 + 8))(v12, v41);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  v45 = 0u;
  v46 = 0u;
  v34 = a2;
  a3(&v45, a2);

  return sub_1D7AB1290((uint64_t)&v45);
}

uint64_t sub_1D7AF0634(unint64_t a1, int a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  void *v20;
  int v21;
  uint64_t v22;
  uint64_t v23;

  v3 = v2;
  swift_getObjectType();
  v6 = sub_1D7B4969C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D7B49678();
  swift_bridgeObjectRetain_n();
  v10 = sub_1D7B49684();
  v11 = sub_1D7B4A5F0();
  if (os_log_type_enabled(v10, v11))
  {
    v20 = v3;
    v21 = a2;
    v12 = swift_slowAlloc();
    v13 = swift_slowAlloc();
    v23 = v13;
    *(_DWORD *)v12 = 136446466;
    v14 = sub_1D7B4AA94();
    v22 = sub_1D7AA4DE4(v14, v15, &v23);
    sub_1D7B4A704();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2048;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      v16 = sub_1D7B4A8A8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v16 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    v22 = v16;
    sub_1D7B4A704();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D7813000, v10, v11, "[%{public}s] Mapping %ld sample(s) to chart points.", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D829FFF4](v13, -1, -1);
    MEMORY[0x1D829FFF4](v12, -1, -1);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    LOBYTE(a2) = v21;
    v3 = v20;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  v17 = v3;
  v18 = sub_1D7AF0F94(a1, v17, a2 & 1);

  return v18;
}

id sub_1D7AF08A8@<X0>(id *a1@<X0>, void *a2@<X1>, int a3@<W2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  unint64_t v19;
  uint64_t v20;
  id result;
  _QWORD *v22;
  id v23;
  double v24;
  double v25;
  double v26;
  double v27;
  id v28;
  id v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  void *v42;
  id v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  id v49;
  id v50;
  void (*v51)(char *, uint64_t);
  _QWORD v52[2];
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  int v59;
  _QWORD *v60;
  uint64_t v61;
  id v62;
  char *v63;
  unint64_t v64;
  uint64_t v65;

  v5 = v4;
  v59 = a3;
  v9 = sub_1D7B48D78();
  MEMORY[0x1E0C80A78](v9);
  v57 = (char *)v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_1D7B49198();
  v56 = *(_QWORD *)(v58 - 8);
  v11 = MEMORY[0x1E0C80A78](v58);
  v54 = (char *)v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v53 = (char *)v52 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v55 = (char *)v52 - v16;
  MEMORY[0x1E0C80A78](v15);
  v63 = (char *)v52 - v17;
  v62 = *a1;
  v18 = objc_msgSend(v62, sel_valenceDistributions);
  sub_1D7AAF6EC(0, (unint64_t *)&unk_1F0149380);
  v19 = sub_1D7B4A4AC();

  if (v19 >> 62)
    goto LABEL_14;
  v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
  v60 = a4;
  v61 = v4;
  if (v20)
  {
    while (1)
    {
      v52[1] = a2;
      v65 = MEMORY[0x1E0DEE9D8];
      result = (id)sub_1D7AA5ED4(0, v20 & ~(v20 >> 63), 0);
      if (v20 < 0)
        break;
      v22 = 0;
      v64 = v19 & 0xC000000000000001;
      v5 = v65;
      while (1)
      {
        v23 = v64 ? (id)MEMORY[0x1D829E758](v22, v19) : *(id *)(v19 + 8 * (_QWORD)v22 + 32);
        a2 = v23;
        objc_msgSend(v23, sel_minimumValence);
        v25 = v24;
        objc_msgSend(a2, sel_maximumValence);
        if (v25 > v26)
          break;
        v27 = v26;
        a4 = (_QWORD *)v20;
        v28 = objc_msgSend(a2, sel_sampleCount);
        v29 = objc_msgSend(a2, sel_reflectiveInterval);

        v65 = v5;
        v31 = *(_QWORD *)(v5 + 16);
        v30 = *(_QWORD *)(v5 + 24);
        if (v31 >= v30 >> 1)
        {
          sub_1D7AA5ED4(v30 > 1, v31 + 1, 1);
          v5 = v65;
        }
        v22 = (_QWORD *)((char *)v22 + 1);
        *(_QWORD *)(v5 + 16) = v31 + 1;
        v32 = v5 + 32 * v31;
        *(double *)(v32 + 32) = v25;
        *(double *)(v32 + 40) = v27;
        *(_QWORD *)(v32 + 48) = v28;
        *(_QWORD *)(v32 + 56) = v29;
        v20 = (uint64_t)a4;
        if (a4 == v22)
        {
          swift_bridgeObjectRelease();
          goto LABEL_16;
        }
      }
      __break(1u);
LABEL_14:
      swift_bridgeObjectRetain();
      v20 = sub_1D7B4A8A8();
      swift_bridgeObjectRelease();
      v60 = a4;
      v61 = v5;
      if (!v20)
        goto LABEL_15;
    }
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    v5 = MEMORY[0x1E0DEE9D8];
LABEL_16:
    v33 = (void *)objc_opt_self();
    v34 = v62;
    v35 = objc_msgSend(v62, sel_dayIndexRange);
    v36 = (void *)sub_1D7B492AC();
    v37 = objc_msgSend(v33, sel_hk_dateOnDayIndex_atHour_calendar_, v35, 0, v36);

    v38 = v63;
    sub_1D7B49168();

    v39 = (char *)objc_msgSend(v34, sel_dayIndexRange);
    result = objc_msgSend(v34, sel_dayIndexRange);
    v41 = &v39[v40];
    if (!__OFADD__(v39, v40))
    {
      v42 = (void *)sub_1D7B492AC();
      v43 = objc_msgSend(v33, sel_hk_dateOnDayIndex_atHour_calendar_, v41, 0, v42);

      v44 = v55;
      sub_1D7B49168();

      v45 = v56;
      v46 = *(void (**)(char *, char *, uint64_t))(v56 + 16);
      v47 = v58;
      v46(v53, v38, v58);
      v46(v54, v44, v47);
      v48 = (uint64_t)v57;
      sub_1D7B48D54();
      v49 = objc_allocWithZone((Class)type metadata accessor for StateOfMindChartPoint());
      v50 = StateOfMindChartPoint.init(dateInterval:buckets:isSharingPreview:)(v48, v5, v59 & 1);
      v51 = *(void (**)(char *, uint64_t))(v45 + 8);
      v51(v44, v47);
      result = (id)((uint64_t (*)(char *, uint64_t))v51)(v38, v47);
      *v60 = v50;
      return result;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

id StateOfMindChartDataSource.__allocating_init(displayType:healthStore:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithDisplayType_healthStore_, a1, a2);

  return v5;
}

void StateOfMindChartDataSource.init(displayType:healthStore:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id StateOfMindChartDataSource.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void StateOfMindChartDataSource.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id StateOfMindChartDataSource.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StateOfMindChartDataSource();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D7AF0EF4(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  void (*v7)(id, uint64_t, void *);
  id v8;
  id v9;

  v5 = a3;
  v7 = *(void (**)(id, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    sub_1D7AAF6EC(0, (unint64_t *)&unk_1F0149390);
    v5 = sub_1D7B4A4AC();
  }
  swift_retain();
  v8 = a2;
  v9 = a4;
  v7(v8, v5, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1D7AF0F94(unint64_t a1, void *a2, char a3)
{
  uint64_t v3;
  int v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  id v9;
  void *v10;
  id v12;
  uint64_t v13;
  uint64_t v14;

  LOBYTE(v4) = a3;
  if (a1 >> 62)
    goto LABEL_16;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = MEMORY[0x1E0DEE9D8];
    if (!v6)
      break;
    v14 = MEMORY[0x1E0DEE9D8];
    result = sub_1D7B4A848();
    if (v6 < 0)
    {
      __break(1u);
      return result;
    }
    v8 = 0;
    v4 &= 1u;
    while (v6 != v8)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v9 = (id)MEMORY[0x1D829E758](v8, a1);
      else
        v9 = *(id *)(a1 + 8 * v8 + 32);
      v10 = v9;
      v12 = v9;
      sub_1D7AF08A8(&v12, a2, v4, &v13);

      if (v3)
        return swift_release();
      ++v8;
      sub_1D7B4A830();
      sub_1D7B4A854();
      sub_1D7B4A860();
      sub_1D7B4A83C();
      if (v6 == v8)
        return v14;
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    v6 = sub_1D7B4A8A8();
    swift_bridgeObjectRelease();
  }
  return result;
}

id sub_1D7AF1104(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  id v25;
  void *v26;
  id v27;
  objc_class *v28;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  objc_super v34;

  v31 = a3;
  v32 = a1;
  v33 = a2;
  v4 = sub_1D7B49300();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D7B491C8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (uint64_t *)&v3[OBJC_IVAR___HKStateOfMindChartDataSource_debugIdentifier];
  v13 = v3;
  sub_1D7B491BC();
  sub_1D7B491A4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v14 = sub_1D7B26474(5);
  v16 = v15;
  v18 = v17;
  v20 = v19;
  swift_bridgeObjectRelease();
  v21 = MEMORY[0x1D829E344](v14, v16, v18, v20);
  v23 = v22;
  swift_bridgeObjectRelease();
  *v12 = v21;
  v12[1] = v23;
  v24 = &v13[OBJC_IVAR___HKStateOfMindChartDataSource_gregorianCalendar];
  v25 = objc_msgSend((id)objc_opt_self(), sel_hk_gregorianCalendar);
  sub_1D7B492C4();

  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v24, v7, v4);
  v26 = v31;
  *(_QWORD *)&v13[OBJC_IVAR___HKStateOfMindChartDataSource_overlayPredicate] = v31;
  v27 = v26;

  v28 = (objc_class *)type metadata accessor for StateOfMindChartDataSource();
  v34.receiver = v13;
  v34.super_class = v28;
  return objc_msgSendSuper2(&v34, sel_initWithDisplayType_healthStore_, v32, v33);
}

uint64_t sub_1D7AF12D0()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D7AF12FC(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v3;

  return sub_1D7AF00C0(a2, a3, *(void (**)(_QWORD, _QWORD))(v3 + 24));
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t sub_1D7AF1348()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1D7AF136C(uint64_t a1)
{
  return sub_1D7AEEC48(a1);
}

uint64_t sub_1D7AF1374()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

id sub_1D7AF13A8(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_1D7AEF094(a1, a2, *(void **)(v2 + 16), *(char **)(v2 + 24), *(_QWORD *)(v2 + 32), *(void **)(v2 + 40));
}

uint64_t sub_1D7AF13B8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1D7AF13E4()
{
  uint64_t v0;

  return sub_1D7AEFCBC(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

id sub_1D7AF13EC(void *a1)
{
  id result;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;

  result = objc_msgSend(objc_allocWithZone((Class)HKCodableStateOfMindValenceDistributionSummary), sel_init);
  if (!result)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v3 = result;
  v4 = objc_msgSend(a1, sel_dayIndexRange);
  v6 = v5;
  result = objc_msgSend(objc_allocWithZone((Class)HKCodableDayIndexRange), sel_init);
  if (result)
  {
    v7 = result;
    objc_msgSend(result, sel_setDayIndex_, v4);
    objc_msgSend(v7, sel_setDuration_, v6);
    objc_msgSend(v3, sel_setDayIndexRange_, v7);

    v8 = objc_msgSend(a1, sel_valenceDistributions);
    sub_1D7AAF6EC(0, (unint64_t *)&unk_1F0149380);
    v9 = sub_1D7B4A4AC();

    if (v9 >> 62)
    {
LABEL_17:
      swift_bridgeObjectRetain();
      v10 = sub_1D7B4A8A8();
      swift_bridgeObjectRelease();
      if (v10)
      {
LABEL_5:
        v11 = 4;
        while (1)
        {
          if ((v9 & 0xC000000000000001) != 0)
            v12 = (id)MEMORY[0x1D829E758](v11 - 4, v9);
          else
            v12 = *(id *)(v9 + 8 * v11);
          v13 = v12;
          v14 = v11 - 3;
          if (__OFADD__(v11 - 4, 1))
          {
            __break(1u);
            goto LABEL_17;
          }
          result = objc_msgSend(objc_allocWithZone((Class)HKCodableStateOfMindValenceDistributionData), sel_init);
          if (!result)
            break;
          v15 = result;
          objc_msgSend(v13, sel_minimumValence);
          objc_msgSend(v15, sel_setMinimumValence_);
          objc_msgSend(v13, sel_maximumValence);
          objc_msgSend(v15, sel_setMaximumValence_);
          objc_msgSend(v15, sel_setSampleCount_, objc_msgSend(v13, sel_sampleCount));
          if (objc_msgSend(v13, sel_reflectiveInterval) == (id)2)
            v16 = 2;
          else
            v16 = 1;
          objc_msgSend(v15, sel_setReflectiveInterval_, v16);
          objc_msgSend(v3, sel_addValenceDistributionData_, v15);

          ++v11;
          if (v14 == v10)
            goto LABEL_15;
        }
        __break(1u);
        goto LABEL_20;
      }
    }
    else
    {
      v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v10)
        goto LABEL_5;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    return v3;
  }
LABEL_21:
  __break(1u);
  return result;
}

id _s8HealthUI26StateOfMindChartDataSourceC16encodeToProtobuf9summariesSo09HKCodablecdegh5QueryG0CSaySo30HKMHValenceDistributionSummaryCG_tFZ_0(unint64_t a1)
{
  id result;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;

  result = objc_msgSend(objc_allocWithZone((Class)HKCodableStateOfMindDataSourceQueryData), sel_init);
  if (!result)
    goto LABEL_13;
  v3 = result;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    result = (id)sub_1D7B4A8A8();
    v4 = (uint64_t)result;
    if (result)
      goto LABEL_4;
LABEL_11:
    swift_bridgeObjectRelease();
    return v3;
  }
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = (id)swift_bridgeObjectRetain();
  if (!v4)
    goto LABEL_11;
LABEL_4:
  if (v4 >= 1)
  {
    v5 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x1D829E758](v5, a1);
      else
        v6 = *(id *)(a1 + 8 * v5 + 32);
      v7 = v6;
      ++v5;
      v8 = sub_1D7AF13EC(v6);
      objc_msgSend(v3, sel_addValenceDistributionSummary_, v8);

    }
    while (v4 != v5);
    goto LABEL_11;
  }
  __break(1u);
LABEL_13:
  __break(1u);
  return result;
}

unint64_t sub_1D7AF1778(void *a1)
{
  unint64_t result;
  void *v3;
  id v4;
  void *v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  id v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;

  result = (unint64_t)objc_msgSend(a1, sel_dayIndexRange);
  if (!result)
    goto LABEL_16;
  v3 = (void *)result;
  v4 = objc_msgSend((id)result, sel_dayIndex);

  result = (unint64_t)objc_msgSend(a1, sel_dayIndexRange);
  if (!result)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  v5 = (void *)result;
  v6 = objc_msgSend((id)result, sel_duration);

  v20 = MEMORY[0x1E0DEE9D8];
  result = (unint64_t)objc_msgSend(a1, sel_valenceDistributionDatasCount);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v7 = result;
  if (result)
  {
    v8 = 0;
    do
    {
      v9 = objc_msgSend(a1, sel_valenceDistributionDataAtIndex_, v8);
      if (v9)
      {
        v10 = v9;
        objc_msgSend(v9, sel_minimumValence);
        v12 = v11;
        objc_msgSend(v10, sel_maximumValence);
        v14 = v13;
        v15 = objc_msgSend(v10, sel_sampleCount);
        if (objc_msgSend(v10, sel_reflectiveInterval) == 2)
          v16 = 2;
        else
          v16 = 1;
        objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D4D170]), sel_initWithMinimumValence_maximumValence_sampleCount_reflectiveInterval_, v15, v16, v12, v14);
        MEMORY[0x1D829E3EC]();
        if (*(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1D7B4A4C4();
        sub_1D7B4A4DC();
        sub_1D7B4A4B8();

      }
      ++v8;
    }
    while (v7 != v8);
  }
  v17 = objc_allocWithZone(MEMORY[0x1E0D4D178]);
  sub_1D7AAF6EC(0, (unint64_t *)&unk_1F0149380);
  v18 = (void *)sub_1D7B4A4A0();
  swift_bridgeObjectRelease();
  v19 = objc_msgSend(v17, sel_initWithDayIndexRange_valenceDistributions_, v4, v6, v18);

  return (unint64_t)v19;
}

unint64_t _s8HealthUI26StateOfMindChartDataSourceC18decodeFromProtobuf05queryG0SaySo30HKMHValenceDistributionSummaryCGSo09HKCodablecdegh5QueryG0C_tFZ_0(void *a1)
{
  unint64_t result;
  unint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;

  v7 = MEMORY[0x1E0DEE9D8];
  result = (unint64_t)objc_msgSend(a1, sel_valenceDistributionSummarysCount);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v3 = result;
    if (result)
    {
      v4 = 0;
      do
      {
        v5 = objc_msgSend(a1, sel_valenceDistributionSummaryAtIndex_, v4);
        if (v5)
        {
          v6 = v5;
          sub_1D7AF1778(v5);
          MEMORY[0x1D829E3EC]();
          if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1D7B4A4C4();
          sub_1D7B4A4DC();
          sub_1D7B4A4B8();

        }
        ++v4;
      }
      while (v3 != v4);
      return v7;
    }
    else
    {
      return MEMORY[0x1E0DEE9D8];
    }
  }
  return result;
}

uint64_t sub_1D7AF1AEC(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t type metadata accessor for StateOfMindChartDataSource()
{
  uint64_t result;

  result = qword_1F0149360;
  if (!qword_1F0149360)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D7AF1B6C()
{
  return type metadata accessor for StateOfMindChartDataSource();
}

uint64_t sub_1D7AF1B74()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D7B49300();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for StateOfMindChartDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StateOfMindChartDataSource.__allocating_init(displayType:healthStore:overlayPredicate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1D7AF1C08()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1D7AF1C2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1D7AEFE98(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_1D7AF1C34(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1D7B23440(a1, a2, *(_QWORD *)(v2 + 16));
}

id InternalSettingsTapGestureRecognizer.__allocating_init(target:action:)(_QWORD *a1, uint64_t a2)
{
  objc_class *v2;
  uint64_t v4;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  uint64_t v13;

  v4 = a1[3];
  if (v4)
  {
    v6 = __swift_project_boxed_opaque_existential_0(a1, a1[3]);
    v7 = *(_QWORD *)(v4 - 8);
    MEMORY[0x1E0C80A78](v6);
    v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v7 + 16))(v9);
    v10 = sub_1D7B4A92C();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v4);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    v10 = 0;
  }
  v11 = objc_msgSend(objc_allocWithZone(v2), sel_initWithTarget_action_, v10, a2);
  swift_unknownObjectRelease();
  return v11;
}

id InternalSettingsTapGestureRecognizer.init(target:action:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  objc_class *ObjectType;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  id v14;
  objc_super v16;
  _QWORD v17[3];
  uint64_t v18;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  sub_1D7AB9B80(a1, (uint64_t)v17);
  v7 = v18;
  if (v18)
  {
    v8 = __swift_project_boxed_opaque_existential_0(v17, v18);
    v9 = *(_QWORD *)(v7 - 8);
    MEMORY[0x1E0C80A78](v8);
    v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v9 + 16))(v11);
    v12 = sub_1D7B4A92C();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v7);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
  }
  else
  {
    v12 = 0;
  }
  v16.receiver = v3;
  v16.super_class = ObjectType;
  v13 = objc_msgSendSuper2(&v16, sel_initWithTarget_action_, v12, a2);
  swift_unknownObjectRelease();
  v14 = v13;
  objc_msgSend(v14, sel_setNumberOfTapsRequired_, 3);
  objc_msgSend(v14, sel_setDelegate_, v14);

  sub_1D7AB1290(a1);
  return v14;
}

id InternalSettingsTapGestureRecognizer.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

BOOL _s8HealthUI36InternalSettingsTapGestureRecognizerC07gestureG0_13shouldReceiveSbSo09UIGestureG0C_So7UITouchCtF_0(void *a1, id a2)
{
  id v4;
  id v5;
  void *v6;
  id v7;
  char v8;
  id v9;
  void *v10;
  _BOOL8 v11;

  v4 = objc_msgSend(a2, sel_view);
  v5 = objc_msgSend(a1, sel_view);
  v6 = v5;
  if (!v4)
  {
    if (!v5)
      return 1;
    goto LABEL_8;
  }
  if (!v5)
  {
    v6 = v4;
LABEL_8:

    goto LABEL_9;
  }
  sub_1D7AF20C4();
  v7 = v4;
  v8 = sub_1D7B4A6E0();

  if ((v8 & 1) != 0)
    return 1;
LABEL_9:
  v9 = objc_msgSend(a2, sel_view);
  if (!v9)
    return 1;
  v10 = v9;
  objc_opt_self();
  v11 = swift_dynamicCastObjCClass() == 0;

  return v11;
}

uint64_t type metadata accessor for InternalSettingsTapGestureRecognizer()
{
  return objc_opt_self();
}

unint64_t sub_1D7AF20C4()
{
  unint64_t result;

  result = qword_1F01492B0;
  if (!qword_1F01492B0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1F01492B0);
  }
  return result;
}

void sub_1D7AF2100()
{
  sub_1D7B4A890();
  __break(1u);
}

void sub_1D7AF2158()
{
  sub_1D7B4A890();
  __break(1u);
}

void sub_1D7AF21B0()
{
  sub_1D7B4A890();
  __break(1u);
}

uint64_t sub_1D7AF2208()
{
  return 1;
}

uint64_t DefaultFeatureRegulatoryInfoTransformProvider.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t DefaultFeatureRegulatoryInfoTransformProvider.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t DefaultFeatureRegulatoryInfoTransformProvider.featureRegulatoryInfoTransform(onboardingRecord:pairedDeviceFeatureAttributesProvider:reenableActionConfiguration:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t ObjectType;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  void *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79[7];

  v5 = v4;
  v10 = type metadata accessor for FeatureRegulatoryInfo(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D7AAE0AC(0, &qword_1F014E400, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v58 - v14;
  sub_1D7AAE0AC(0, &qword_1F014E3F8, (void (*)(uint64_t))type metadata accessor for FeatureRegulatoryInfo.ReenableActionConfiguration);
  v17 = MEMORY[0x1E0C80A78](v16);
  v78 = (uint64_t)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v58 - v19;
  v21 = type metadata accessor for FeatureRegulatoryInfo.ReenableActionConfiguration(0);
  v76 = *(_QWORD *)(v21 - 8);
  v77 = v21;
  v22 = (char *)MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v58 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = v10;
  v75 = a4;
  v59 = a3;
  v69 = v15;
  if (!a1)
    goto LABEL_6;
  v22 = (char *)objc_msgSend(a1, sel_onboardingState);
  if ((unint64_t)(v22 - 3) < 2)
  {
    sub_1D7AF272C(a3, (uint64_t)v20);
    v25 = v77;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v20, 1, v77) != 1)
    {
      sub_1D7AACCDC((uint64_t)v20, (uint64_t)v24, type metadata accessor for FeatureRegulatoryInfo.ReenableActionConfiguration);
      if (v24[*(int *)(v25 + 32)] == 1)
      {
        v28 = *(_QWORD *)(a2 + 24);
        ObjectType = swift_getObjectType();
        v60 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 24))(ObjectType, v28);
        sub_1D7AF27CC((uint64_t)v24);
        v27 = 1;
      }
      else
      {
        sub_1D7AF27CC((uint64_t)v24);
        v27 = 1;
        v60 = 1;
      }
      goto LABEL_11;
    }
    sub_1D7AF2780((uint64_t)v20);
    goto LABEL_7;
  }
  if (v22 == (char *)1)
  {
LABEL_6:
    v26 = (*(uint64_t (**)(char *))(*(_QWORD *)v5 + 104))(v22);
    v60 = 0;
    v27 = v26 ^ 1;
    goto LABEL_11;
  }
LABEL_7:
  v60 = 0;
  v27 = 1;
LABEL_11:
  PairedDeviceFeatureAttributesProvider.pairedDeviceAttributes.getter(v79);
  v30 = v79[0];
  v31 = v79[1];
  v33 = (void *)v79[2];
  v32 = v79[3];
  v35 = v79[4];
  v34 = (void *)v79[5];
  v36 = (*(uint64_t (**)(void))(*(_QWORD *)v5 + 80))();
  v67 = v37;
  v68 = v36;
  v38 = (*(uint64_t (**)(void))(*(_QWORD *)v5 + 88))();
  v65 = v39;
  v66 = v38;
  v72 = v32;
  v73 = v30;
  v70 = v35;
  v71 = v31;
  if ((v27 & 1) != 0)
  {
    sub_1D7AC5E74(v30, v31, v33);
    sub_1D7AC5E74(v32, v35, v34);
    v64 = v30;
    v63 = v31;
    v40 = v35;
    v41 = (uint64_t)v33;
    v62 = v32;
    v61 = v40;
    v42 = v34;
  }
  else
  {
    v64 = 0;
    v63 = 0;
    v62 = 0;
    v61 = 0;
    v42 = 0;
    v41 = 1;
  }
  if ((v60 & 1) != 0)
    v43 = sub_1D7AF272C(v59, v78);
  else
    v43 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v76 + 56))(v78, 1, 1, v77);
  v44 = v34;
  v45 = v33;
  v46 = (uint64_t)v69;
  v47 = v74;
  if ((v27 & 1) != 0)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v5 + 96))(v43);
  }
  else
  {
    v48 = sub_1D7B490A8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v46, 1, 1, v48);
  }
  v49 = (uint64_t)&v12[*(int *)(v47 + 32)];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v76 + 56))(v49, 1, 1, v77);
  v50 = (uint64_t)&v12[*(int *)(v47 + 36)];
  v51 = sub_1D7B490A8();
  v52 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v50, 1, 1, v51);
  v53 = v67;
  *(_QWORD *)v12 = v68;
  *((_QWORD *)v12 + 1) = v53;
  v54 = v65;
  *((_QWORD *)v12 + 2) = v66;
  *((_QWORD *)v12 + 3) = v54;
  v55 = v63;
  *((_QWORD *)v12 + 4) = v64;
  *((_QWORD *)v12 + 5) = v55;
  v56 = v62;
  *((_QWORD *)v12 + 6) = v41;
  *((_QWORD *)v12 + 7) = v56;
  *((_QWORD *)v12 + 8) = v61;
  *((_QWORD *)v12 + 9) = v42;
  v12[80] = v27 & 1;
  sub_1D7AF26E0(v78, v49, &qword_1F014E3F8, (void (*)(uint64_t))type metadata accessor for FeatureRegulatoryInfo.ReenableActionConfiguration);
  sub_1D7AF26E0(v46, v50, &qword_1F014E400, v52);
  sub_1D7AACCDC((uint64_t)v12, v75, type metadata accessor for FeatureRegulatoryInfo);
  sub_1D7AC5EE8(v73, v71, v45);
  return sub_1D7AC5EE8(v72, v70, v44);
}

uint64_t sub_1D7AF26E0(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v6;

  sub_1D7AAE0AC(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a2, a1, v6);
  return a2;
}

uint64_t sub_1D7AF272C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D7AAE0AC(0, &qword_1F014E3F8, (void (*)(uint64_t))type metadata accessor for FeatureRegulatoryInfo.ReenableActionConfiguration);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D7AF2780(uint64_t a1)
{
  uint64_t v2;

  sub_1D7AAE0AC(0, &qword_1F014E3F8, (void (*)(uint64_t))type metadata accessor for FeatureRegulatoryInfo.ReenableActionConfiguration);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D7AF27CC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FeatureRegulatoryInfo.ReenableActionConfiguration(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t DefaultFeatureRegulatoryInfoTransformProvider.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t DefaultFeatureRegulatoryInfoTransformProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1D7AF2820@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return DefaultFeatureRegulatoryInfoTransformProvider.featureRegulatoryInfoTransform(onboardingRecord:pairedDeviceFeatureAttributesProvider:reenableActionConfiguration:)(a1, a2, a3, a4);
}

uint64_t dispatch thunk of FeatureRegulatoryInfoTransformProvider.featureRegulatoryInfoTransform(onboardingRecord:pairedDeviceFeatureAttributesProvider:reenableActionConfiguration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t type metadata accessor for DefaultFeatureRegulatoryInfoTransformProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for DefaultFeatureRegulatoryInfoTransformProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DefaultFeatureRegulatoryInfoTransformProvider.productDisplayName.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 80))();
}

uint64_t dispatch thunk of DefaultFeatureRegulatoryInfoTransformProvider.IFUURLProductName.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of DefaultFeatureRegulatoryInfoTransformProvider.appleSupportURL.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of DefaultFeatureRegulatoryInfoTransformProvider.suppressContentBeforeOnboarding.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of DefaultFeatureRegulatoryInfoTransformProvider.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

id BalanceDaySeries.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id BalanceDaySeries.init()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  objc_class *v10;
  objc_super v12;

  v1 = sub_1D7B49228();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D7B49300();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0CB0EF8], v1);
  v9 = v0;
  sub_1D7B49234();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v9[OBJC_IVAR___HKBalanceDaySeries_gregorianCalendar], v8, v5);
  *(_QWORD *)&v9[OBJC_IVAR___HKBalanceDaySeries_sleepingMetrics] = sub_1D7B494EC();

  v10 = (objc_class *)type metadata accessor for BalanceDaySeries();
  v12.receiver = v9;
  v12.super_class = v10;
  return objc_msgSendSuper2(&v12, sel_init);
}

uint64_t type metadata accessor for BalanceDaySeries()
{
  uint64_t result;

  result = qword_1F014ED98;
  if (!qword_1F014ED98)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1D7AF2B74(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char **v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char **v21;
  uint64_t v22;
  id v23;
  void *v24;
  unint64_t v25;
  unint64_t v26;
  void (*v27)(char **, uint64_t);
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  id v32;
  BOOL v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  uint64_t v44;
  id v45;
  void *v46;
  double v47;
  double v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v55;
  id v56;
  void *v57;
  double v58;
  double v59;
  double v60;
  double v61;
  uint64_t v62;
  char v63;
  id v64;
  void *v65;
  double v66;
  double v67;
  void *v68;
  double v69;
  double v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  objc_class *v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  NSObject *v80;
  os_log_type_t v81;
  uint8_t *v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  void *v86;
  void *v87;
  id v88;
  void *v89;
  void *v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  char **v103;
  char **v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  id v110;
  id v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  id v116;
  int v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  void (*v123)(uint64_t, uint64_t, uint64_t);
  uint64_t v124;
  objc_super v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;

  v111 = a6;
  v110 = a5;
  v94 = a4;
  v93 = a3;
  v92 = a2;
  swift_getObjectType();
  v7 = sub_1D7B4969C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v92 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = type metadata accessor for BalanceCoordinateInfo.Context(0);
  MEMORY[0x1E0C80A78](v108);
  v107 = (char *)&v92 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = sub_1D7B49198();
  v105 = *(_QWORD *)(v106 - 8);
  MEMORY[0x1E0C80A78](v106);
  v120 = (char *)&v92 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D7AAE0AC(0, (unint64_t *)&qword_1F014DFD0, (void (*)(uint64_t))MEMORY[0x1E0D28FE0]);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char **)((char *)&v92 - v14);
  v16 = sub_1D7B49504();
  v124 = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x1E0C80A78](v16);
  v109 = (char *)&v92 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = (char **)((char *)&v92 - v20);
  MEMORY[0x1E0C80A78](v19);
  v121 = (uint64_t)&v92 - v22;
  v23 = objc_msgSend(a1, sel_chartPoints);
  if (v23)
  {
    v24 = v23;
    sub_1D7ADE914(0, (unint64_t *)&qword_1F014DF40);
    v25 = sub_1D7B4A4AC();

    v26 = sub_1D7AE2490(v25);
    swift_bridgeObjectRelease();
    if (v26)
    {
      v27 = (void (*)(char **, uint64_t))MEMORY[0x1E0DEE9D8];
      v131 = MEMORY[0x1E0DEE9D8];
      v96 = v26 & 0xFFFFFFFFFFFFFF8;
      if (v26 >> 62)
        goto LABEL_47;
      v28 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_5:
      v29 = v121;
      if (v28)
      {
        v30 = 0;
        v119 = 0;
        v102 = *(_QWORD *)(v115 + OBJC_IVAR___HKBalanceDaySeries_sleepingMetrics);
        v99 = *(_QWORD *)(v102 + 16);
        v100 = v26 & 0xC000000000000001;
        v95 = v26 + 32;
        v103 = v15;
        v104 = v21;
        v98 = v26;
        v97 = v28;
        while (1)
        {
          if (v100)
          {
            v32 = (id)MEMORY[0x1D829E758](v30, v26);
          }
          else
          {
            if (v30 >= *(_QWORD *)(v96 + 16))
              goto LABEL_46;
            v32 = *(id *)(v95 + 8 * v30);
          }
          v116 = v32;
          v33 = __OFADD__(v30++, 1);
          v34 = v99;
          if (v33)
            goto LABEL_45;
          v130 = (unint64_t)v27;
          if (v99)
            break;
          v31 = (unint64_t)v27;
LABEL_8:
          sub_1D7AE82E0(v31);

          if (v30 == v28)
            goto LABEL_40;
        }
        v101 = v30;
        v35 = v115 + OBJC_IVAR___HKBalanceSeries_selectedMetric;
        v114 = (uint64_t)v116 + OBJC_IVAR____TtC8HealthUI17BalanceChartPoint_date;
        v112 = (uint64_t)v116 + OBJC_IVAR____TtC8HealthUI17BalanceChartPoint_collection;
        v36 = v124;
        v37 = v102 + ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80));
        swift_bridgeObjectRetain();
        swift_beginAccess();
        v122 = *(_QWORD *)(v36 + 72);
        v123 = *(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16);
        v26 = v34;
        v38 = v36;
        v113 = v35;
        v123(v29, v37, v16);
        while (1)
        {
          sub_1D7AAF5A8(v35, (uint64_t)v15);
          if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v38 + 48))(v15, 1, v16) == 1)
          {
            sub_1D7AF44A8((uint64_t)v15);
          }
          else
          {
            (*(void (**)(char **, char **, uint64_t))(v38 + 32))(v21, v15, v16);
            sub_1D7AA76D4(&qword_1F014ED68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D28FE0], MEMORY[0x1E0D28FF8]);
            v39 = v38;
            v40 = sub_1D7B4A320();
            v27 = *(void (**)(char **, uint64_t))(v39 + 8);
            v27(v21, v16);
            if ((v40 & 1) == 0)
            {
              v38 = v124;
              goto LABEL_17;
            }
          }
          v41 = sub_1D7AC1774();
          if (*(_QWORD *)(v41 + 16) && (v42 = sub_1D7AF4524(v29), (v43 & 1) != 0))
          {
            v44 = *(_QWORD *)(*(_QWORD *)(v41 + 56) + 8 * v42);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            sub_1D7AF3E80(v29, v114, v120);
            v45 = objc_msgSend(v110, sel_transform);
            v46 = (void *)sub_1D7B49150();
            objc_msgSend(v45, sel_coordinateForValue_, v46);
            v48 = v47;

            v49 = (uint64_t)v109;
            v123((uint64_t)v109, v29, v16);
            v50 = v111;
            v51 = v119;
            v52 = sub_1D7AF7088(v44, v50);
            v119 = v51;
            swift_bridgeObjectRelease();

            v53 = MEMORY[0x1E0DEE9E0];
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v126 = v53;
            sub_1D7AF6B70(v52, v49, isUniquelyReferenced_nonNull_native);
            v55 = v126;
            swift_bridgeObjectRelease();
            v27 = *(void (**)(char **, uint64_t))(v124 + 8);
            v27((char **)v49, v16);
            sub_1D7AC1C20();
            v56 = objc_msgSend(v50, sel_transform);
            v57 = (void *)sub_1D7B494BC();
            v21 = &selRef_clearDisplayTypeStack;
            objc_msgSend(v56, sel_coordinateForValue_, v57);
            v59 = v58;

            v15 = (char **)sub_1D7B494BC();
            objc_msgSend(v56, sel_coordinateForValue_, v15);
            v61 = v60;

            if (v59 > v61)
            {
              __break(1u);
LABEL_44:
              __break(1u);
LABEL_45:
              __break(1u);
LABEL_46:
              __break(1u);
LABEL_47:
              swift_bridgeObjectRetain();
              v28 = sub_1D7B4A8A8();
              swift_bridgeObjectRelease();
              goto LABEL_5;
            }
            v118 = v55;
            if (*(_QWORD *)(sub_1D7AC1D18() + 16))
            {
              v62 = v121;
              sub_1D7AF4524(v121);
              v21 = v104;
              if ((v63 & 1) != 0)
              {
                swift_bridgeObjectRelease();
                v64 = objc_msgSend(v50, sel_transform);
                v65 = (void *)sub_1D7B494BC();
                v15 = &selRef_clearDisplayTypeStack;
                objc_msgSend(v64, sel_coordinateForValue_, v65);
                v67 = v66;

                v68 = (void *)sub_1D7B494BC();
                objc_msgSend(v64, sel_coordinateForValue_, v68);
                v70 = v69;

                if (v67 > v70)
                  goto LABEL_44;
                v117 = 0;
                v71 = *(_QWORD *)&v67;
                v72 = *(_QWORD *)&v70;
              }
              else
              {
                swift_bridgeObjectRelease();
                v71 = 0;
                v72 = 0;
                v117 = 1;
              }
            }
            else
            {
              swift_bridgeObjectRelease();
              v71 = 0;
              v72 = 0;
              v117 = 1;
              v21 = v104;
              v62 = v121;
            }
            sub_1D7AC0938(v112, (uint64_t)&v126);
            v73 = (uint64_t)v107;
            v123((uint64_t)v107, v62, v16);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v124 + 56))(v73, 0, 1, v16);
            *(_BYTE *)(v73 + *(int *)(v108 + 20)) = 0;
            v74 = (objc_class *)type metadata accessor for BalanceCoordinateInfo(0);
            v75 = objc_allocWithZone(v74);
            sub_1D7AC0938((uint64_t)&v126, (uint64_t)v75 + OBJC_IVAR____TtC8HealthUI21BalanceCoordinateInfo_collection);
            sub_1D7ACDA54(v73, (uint64_t)v75 + OBJC_IVAR____TtC8HealthUI21BalanceCoordinateInfo_context);
            v125.receiver = v75;
            v125.super_class = v74;
            v76 = objc_msgSendSuper2(&v125, sel_init);
            sub_1D7ACDA98(v73);
            __swift_destroy_boxed_opaque_existential_0((uint64_t)&v126);
            v77 = objc_allocWithZone((Class)type metadata accessor for BalanceCoordinate());
            v78 = sub_1D7B1BDB8(v118, v71, v72, v117, (uint64_t)v76, v48, v59, v61);

            v79 = v78;
            MEMORY[0x1D829E3EC]();
            if (*(_QWORD *)((v130 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v130 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_1D7B4A4C4();
            sub_1D7B4A4DC();
            sub_1D7B4A4B8();

            (*(void (**)(char *, uint64_t))(v105 + 8))(v120, v106);
            v15 = v103;
            v38 = v124;
            v29 = v121;
            v35 = v113;
          }
          else
          {
            swift_bridgeObjectRelease();
            v38 = v124;
            v27 = *(void (**)(char **, uint64_t))(v124 + 8);
          }
LABEL_17:
          v27((char **)v29, v16);
          v37 += v122;
          if (!--v26)
          {
            swift_bridgeObjectRelease();
            v31 = v130;
            v26 = v98;
            v27 = (void (*)(char **, uint64_t))MEMORY[0x1E0DEE9D8];
            v28 = v97;
            v30 = v101;
            goto LABEL_8;
          }
          v123(v29, v37, v16);
        }
      }
      goto LABEL_40;
    }
  }
  sub_1D7B4966C();
  v80 = sub_1D7B49684();
  v81 = sub_1D7B4A608();
  if (os_log_type_enabled(v80, v81))
  {
    v82 = (uint8_t *)swift_slowAlloc();
    v83 = swift_slowAlloc();
    v126 = v83;
    *(_DWORD *)v82 = 136446210;
    v84 = sub_1D7B4AA94();
    v129 = sub_1D7AA4DE4(v84, v85, &v126);
    sub_1D7B4A704();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D7813000, v80, v81, "[%{public}s] Unable to create coordinates from unsupported chart points", v82, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D829FFF4](v83, -1, -1);
    MEMORY[0x1D829FFF4](v82, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1D7ADE914(0, (unint64_t *)&unk_1F014EB10);
  v86 = (void *)sub_1D7B4A4A0();
  v87 = (void *)objc_opt_self();
  v126 = v92;
  v127 = v93;
  v128 = v94;
  v88 = objc_msgSend(v87, sel_coordinateListWithCoordinates_blockPath_, v86, &v126);

  if (!v88)
  {
    __break(1u);
LABEL_40:
    swift_bridgeObjectRelease();
    sub_1D7ADE914(0, (unint64_t *)&unk_1F014EB10);
    swift_bridgeObjectRetain();
    v89 = (void *)sub_1D7B4A4A0();
    swift_bridgeObjectRelease();
    v90 = (void *)objc_opt_self();
    v126 = v92;
    v127 = v93;
    v128 = v94;
    v91 = objc_msgSend(v90, sel_coordinateListWithCoordinates_blockPath_, v89, &v126);

    if (v91)
      swift_bridgeObjectRelease();
    else
      __break(1u);
  }
}

uint64_t sub_1D7AF38A8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9, double a10, double a11, double a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, void *a17, char a18, uint64_t a19, void *a20,void *a21,void *a22,void *a23,void *a24,void *a25)
{
  void *v37;
  uint64_t v38;
  double v39;
  double *v40;
  double v41;
  id v42;
  id v43;
  const double *v44;
  float64x2_t v45;
  float64x2_t v46;
  char v47;
  void *v48;
  id v49;
  double v50;
  double v51;
  id v52;
  double v53;
  BOOL v54;
  id v56;
  double v57;
  double v58;
  float64x2_t v59;
  double v60;
  _OWORD v61[4];
  uint64_t v62[4];
  _OWORD v63[4];
  char v64;
  CGRect v65;
  CGRect v66;

  if (result)
  {
    v37 = a23;
    type metadata accessor for BalanceCoordinate();
    result = swift_dynamicCastClass();
    if (result)
    {
      v38 = result;
      v39 = *(double *)(result + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_xValue);
      swift_unknownObjectRetain();
      v65.origin.x = a6;
      v65.origin.y = a7;
      v65.size.width = a8;
      v65.size.height = a9;
      if (CGRectGetMinX(v65) - a10 > v39)
        return swift_unknownObjectRelease();
      v66.origin.x = a6;
      v66.origin.y = a7;
      v66.size.width = a8;
      v66.size.height = a9;
      if (v39 > CGRectGetMaxX(v66) + a10)
        return swift_unknownObjectRelease();
      v40 = (double *)(v38 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueWarmupRange);
      if ((*(_BYTE *)(v38 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueWarmupRange + 16) & 1) == 0)
      {
        v57 = *v40;
        v58 = v40[1];
        v41 = *v40 - a10 * 0.5;
        v56 = (id)objc_opt_self();
        v42 = objc_msgSend(v56, sel_bezierPathWithRoundedRect_cornerRadius_, v39 - a10 * 0.5, v41, a10, a10 * 0.5 + v58 - v41, a10 * 0.5);
        objc_msgSend(a15, sel_appendPath_, v42);

        v37 = a23;
        v43 = objc_msgSend(v56, sel_bezierPathWithRoundedRect_cornerRadius_, v39 - a11 * 0.5, v57 - a11 * 0.5, a11, a11 * 0.5 + v58 - (v57 - a11 * 0.5));
        objc_msgSend(a17, sel_appendPath_, v43);

      }
      if ((*(_BYTE *)(v38 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueRange + 16) & 1) != 0)
        return swift_unknownObjectRelease();
      v59 = *(float64x2_t *)(v38 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueRange);
      sub_1D7AF7A58(a19, (uint64_t)v63);
      if ((v64 & 1) == 0)
      {
        v62[0] = a2;
        v62[1] = a3;
        v62[2] = a4;
        v62[3] = a5;
        v61[0] = v63[0];
        v61[1] = v63[1];
        v61[2] = v63[2];
        v61[3] = v63[3];
        if (!HKGraphSeriesDataPointPathInRangeInclusive(v62, (uint64_t *)v61))
          goto LABEL_14;
      }
      if ((a18 & 1) != 0)
      {
        v44 = (const double *)(v38 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueMedialRange);
        v45 = vld1q_dup_f64(v44++);
        v46 = vld1q_dup_f64(v44);
        v47 = vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vcgeq_f64(v46, v59), (int32x4_t)vcgeq_f64(v59, v45))), 0xFuLL)));
        v48 = (void *)objc_opt_self();
        v49 = objc_msgSend(v48, sel_bezierPathWithRoundedRect_cornerRadius_, v39 - a10 * 0.5, v59.f64[0] - a10 * 0.5, a10, a10 * 0.5 + v59.f64[1] - (v59.f64[0] - a10 * 0.5), a10 * 0.5);
        v50 = v59.f64[0] - a12 * 0.5;
        v51 = a12 * 0.5 + v59.f64[1] - v50;
        if ((v47 & 1) == 0)
        {
          objc_msgSend(a22, sel_appendPath_, v49);

          v52 = objc_msgSend(v48, sel_bezierPathWithRoundedRect_cornerRadius_, v39 - a12 * 0.5, v50, a12, v51, a12 * 0.5);
          objc_msgSend(v37, sel_appendPath_, v52);
LABEL_24:

          return swift_unknownObjectRelease();
        }
        objc_msgSend(a20, sel_appendPath_, v49);

        v52 = objc_msgSend(v48, sel_bezierPathWithRoundedRect_cornerRadius_, v39 - a12 * 0.5, v50, a12, v51, a12 * 0.5);
        a24 = a21;
      }
      else
      {
LABEL_14:
        v53 = *(double *)(v38 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueMedialRange);
        v60 = *(double *)(v38 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueMedialRange + 8);
        v52 = objc_msgSend((id)objc_opt_self(), sel_bezierPathWithRoundedRect_cornerRadius_, v39 - a10 * 0.5, v59.f64[0] - a10 * 0.5, a10, a10 * 0.5 + v59.f64[1] - (v59.f64[0] - a10 * 0.5), a10 * 0.5);
        if (v53 > v59.f64[0] || v59.f64[0] > v60 || (v53 <= v59.f64[1] ? (v54 = v59.f64[1] > v60) : (v54 = 1), v54))
          a24 = a25;
      }
      objc_msgSend(a24, sel_appendPath_, v52);
      goto LABEL_24;
    }
  }
  return result;
}

uint64_t sub_1D7AF3E6C()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR___HKBalanceDaySeries_sleepingMetrics) + 16);
}

void sub_1D7AF3E80(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  void *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  void (*v29)(char *, uint64_t, uint64_t);
  void (*v30)(char *, uint64_t, uint64_t);
  NSObject *v31;
  os_log_type_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  os_log_t v45;
  os_log_t v46;
  int v47;
  uint64_t v48;
  uint64_t ObjectType;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;

  v4 = v3;
  v57 = a3;
  ObjectType = swift_getObjectType();
  v7 = sub_1D7B49504();
  v54 = *(_QWORD *)(v7 - 8);
  v55 = v7;
  v8 = MEMORY[0x1E0C80A78](v7);
  v50 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v53 = (char *)&v46 - v10;
  v11 = sub_1D7B4969C();
  v51 = *(_QWORD *)(v11 - 8);
  v52 = v11;
  MEMORY[0x1E0C80A78](v11);
  v56 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1D7B49198();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v46 - v18;
  v20 = *(_QWORD *)(v4 + OBJC_IVAR___HKBalanceDaySeries_sleepingMetrics);
  swift_bridgeObjectRetain();
  v21 = sub_1D7AF430C(a1, v20);
  v23 = v22;
  swift_bridgeObjectRelease();
  if ((v23 & 1) != 0)
  {
    sub_1D7B4966C();
    v29 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
    v29(v17, a2, v13);
    v30 = *(void (**)(char *, uint64_t, uint64_t))(v54 + 16);
    v30(v53, a1, v55);
    v31 = sub_1D7B49684();
    v32 = sub_1D7B4A608();
    v33 = v32;
    if (os_log_type_enabled(v31, v32))
    {
      v34 = swift_slowAlloc();
      v48 = a2;
      v47 = v33;
      v35 = v34;
      v36 = swift_slowAlloc();
      v59 = v36;
      *(_DWORD *)v35 = 136446722;
      v46 = v31;
      v37 = sub_1D7B4AA94();
      v58 = sub_1D7AA4DE4(v37, v38, &v59);
      sub_1D7B4A704();
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2082;
      sub_1D7AA76D4((unint64_t *)&unk_1F014E9A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
      v39 = sub_1D7B4A914();
      v58 = sub_1D7AA4DE4(v39, v40, &v59);
      sub_1D7B4A704();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
      *(_WORD *)(v35 + 22) = 2082;
      v41 = v53;
      v42 = v55;
      v30(v50, (uint64_t)v53, v55);
      v43 = sub_1D7B4A3E0();
      v58 = sub_1D7AA4DE4(v43, v44, &v59);
      sub_1D7B4A704();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v41, v42);
      v45 = v46;
      _os_log_impl(&dword_1D7813000, v46, (os_log_type_t)v47, "[%{public}s] cannot determine position for date %{public}s metric %{public}s", (uint8_t *)v35, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1D829FFF4](v36, -1, -1);
      a2 = v48;
      MEMORY[0x1D829FFF4](v35, -1, -1);

    }
    else
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
      (*(void (**)(char *, uint64_t))(v54 + 8))(v53, v55);

    }
    (*(void (**)(char *, uint64_t))(v51 + 8))(v56, v52);
    v29(v57, a2, v13);
  }
  else
  {
    v24 = (void *)objc_opt_self();
    v25 = *(_QWORD *)(v20 + 16);
    sub_1D7B4924C();
    v26 = (void *)sub_1D7B49150();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
    v27 = (void *)sub_1D7B492AC();
    v28 = objc_msgSend(v24, sel_datePositionForCategoryIndex_categoryCount_startDate_calendar_, v21, v25, v26, v27);

    sub_1D7B49168();
  }
}

uint64_t sub_1D7AF430C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v4 = *(_QWORD *)(sub_1D7B49504() - 8);
  v5 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v6 = *(_QWORD *)(v4 + 72);
  sub_1D7AA76D4(&qword_1F014ED68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D28FE0], MEMORY[0x1E0D28FF8]);
  v7 = 0;
  while ((sub_1D7B4A320() & 1) == 0)
  {
    ++v7;
    v5 += v6;
    if (v2 == v7)
      return 0;
  }
  return v7;
}

uint64_t sub_1D7AF43D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR___HKBalanceDaySeries_gregorianCalendar;
  v2 = sub_1D7B49300();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_bridgeObjectRelease();
}

id BalanceDaySeries.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BalanceDaySeries();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D7AF44A8(uint64_t a1)
{
  uint64_t v2;

  sub_1D7AAE0AC(0, (unint64_t *)&qword_1F014DFD0, (void (*)(uint64_t))MEMORY[0x1E0D28FE0]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1D7AF44F4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D7B4A6D4();
  return sub_1D7AF4738(a1, v2);
}

unint64_t sub_1D7AF4524(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_1D7B49504();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D28FE0];
  sub_1D7AA76D4((unint64_t *)&unk_1F014EE00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D28FE0], MEMORY[0x1E0D28FF0]);
  v3 = sub_1D7B4A29C();
  return sub_1D7AF49C4(a1, v3, v2, &qword_1F014ED68, MEMORY[0x1E0D28FF8]);
}

unint64_t sub_1D7AF45BC(uint64_t a1)
{
  uint64_t v2;

  sub_1D7B4A3BC();
  sub_1D7B4A980();
  sub_1D7B4A3F8();
  v2 = sub_1D7B4A998();
  swift_bridgeObjectRelease();
  return sub_1D7AF4850(a1, v2);
}

unint64_t sub_1D7AF463C(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_1D7B49588();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D29090];
  sub_1D7AA76D4(&qword_1F014EDC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D29090], MEMORY[0x1E0D290A0]);
  v3 = sub_1D7B4A29C();
  return sub_1D7AF49C4(a1, v3, v2, (unint64_t *)&qword_1F014EDD0, MEMORY[0x1E0D290A8]);
}

unint64_t sub_1D7AF46D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D7B4A980();
  sub_1D7B4A3F8();
  v4 = sub_1D7B4A998();
  return sub_1D7AF4AF4(a1, a2, v4);
}

unint64_t sub_1D7AF4738(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  id v6;
  char v7;
  uint64_t v8;
  id v9;
  char v10;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_1D7AAF6EC(0, (unint64_t *)&qword_1F014D240);
    v6 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
    v7 = sub_1D7B4A6E0();

    if ((v7 & 1) == 0)
    {
      v8 = ~v4;
      for (i = (i + 1) & v8; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v8)
      {
        v9 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v10 = sub_1D7B4A6E0();

        if ((v10 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_1D7AF4850(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_1D7B4A3BC();
    v8 = v7;
    if (v6 == sub_1D7B4A3BC() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_1D7B4A938();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_1D7B4A3BC();
          v15 = v14;
          if (v13 == sub_1D7B4A3BC() && v15 == v16)
            break;
          v18 = sub_1D7B4A938();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_1D7AF49C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, unint64_t, uint64_t);
  char v17;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  unint64_t *v21;
  uint64_t v22;

  v21 = a4;
  v22 = a5;
  v6 = v5;
  v19 = a1;
  v20 = a3;
  v8 = a3(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v19 - v10;
  v12 = -1 << *(_BYTE *)(v6 + 32);
  v13 = a2 & ~v12;
  if (((*(_QWORD *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v14 = ~v12;
    v15 = *(_QWORD *)(v9 + 72);
    v16 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    do
    {
      v16(v11, *(_QWORD *)(v6 + 48) + v15 * v13, v8);
      sub_1D7AA76D4(v21, v20, v22);
      v17 = sub_1D7B4A320();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      if ((v17 & 1) != 0)
        break;
      v13 = (v13 + 1) & v14;
    }
    while (((*(_QWORD *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  return v13;
}

unint64_t sub_1D7AF4AF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1D7B4A938() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1D7B4A938() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_1D7AF4BD4(uint64_t a1, int a2)
{
  return sub_1D7AF55E8(a1, a2, (unint64_t *)&unk_1F014EE20, (unint64_t *)&qword_1F014E858);
}

uint64_t sub_1D7AF4BF0(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t *v42;
  int64_t v43;
  _QWORD *v44;
  uint64_t v45;

  v4 = sub_1D7B49504();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = v2;
  v8 = *v2;
  sub_1D7AF7B24();
  v9 = sub_1D7B4A8C0();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
    result = swift_release();
    v38 = v42;
LABEL_42:
    *v38 = v10;
    return result;
  }
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v44 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v43 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  result = swift_retain();
  v17 = 0;
  v41 = a2;
  v18 = 16;
  if ((a2 & 1) != 0)
    v18 = 32;
  v45 = v18;
  while (1)
  {
    if (v14)
    {
      v21 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v22 = v21 | (v17 << 6);
      goto LABEL_24;
    }
    v23 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (v23 >= v43)
    {
      swift_release();
      v38 = v42;
      v24 = v44;
      if ((v41 & 1) != 0)
      {
LABEL_37:
        v39 = 1 << *(_BYTE *)(v8 + 32);
        if (v39 >= 64)
          bzero(v24, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
        else
          *v24 = -1 << v39;
        *(_QWORD *)(v8 + 16) = 0;
      }
LABEL_41:
      result = swift_release();
      goto LABEL_42;
    }
    v24 = v44;
    v25 = v44[v23];
    ++v17;
    if (!v25)
    {
      v17 = v23 + 1;
      if (v23 + 1 >= v43)
        goto LABEL_34;
      v25 = v44[v17];
      if (!v25)
        break;
    }
LABEL_23:
    v14 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v17 << 6);
LABEL_24:
    v27 = *(_QWORD *)(v5 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + v45))(v7, *(_QWORD *)(v8 + 48) + v27 * v22, v4);
    v28 = (uint64_t *)(*(_QWORD *)(v8 + 56) + 16 * v22);
    v30 = *v28;
    v29 = v28[1];
    sub_1D7AA76D4((unint64_t *)&unk_1F014EE00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D28FE0], MEMORY[0x1E0D28FF0]);
    result = sub_1D7B4A29C();
    v31 = -1 << *(_BYTE *)(v10 + 32);
    v32 = result & ~v31;
    v33 = v32 >> 6;
    if (((-1 << v32) & ~*(_QWORD *)(v15 + 8 * (v32 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v34 = 0;
      v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        v36 = v33 == v35;
        if (v33 == v35)
          v33 = 0;
        v34 |= v36;
        v37 = *(_QWORD *)(v15 + 8 * v33);
      }
      while (v37 == -1);
      v19 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(_QWORD *)(v15 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v10 + 48) + v27 * v19, v7, v4);
    v20 = (_QWORD *)(*(_QWORD *)(v10 + 56) + 16 * v19);
    *v20 = v30;
    v20[1] = v29;
    ++*(_QWORD *)(v10 + 16);
  }
  v26 = v23 + 2;
  if (v26 >= v43)
  {
LABEL_34:
    swift_release();
    v38 = v42;
    if ((v41 & 1) != 0)
      goto LABEL_37;
    goto LABEL_41;
  }
  v25 = v44[v26];
  if (v25)
  {
    v17 = v26;
    goto LABEL_23;
  }
  while (1)
  {
    v17 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v17 >= v43)
      goto LABEL_34;
    v25 = v44[v17];
    ++v26;
    if (v25)
      goto LABEL_23;
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_1D7AF4F84(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;

  v3 = v2;
  v5 = *v2;
  sub_1D7AE9F30();
  v6 = sub_1D7B4A8C0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v2;
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v11)
        goto LABEL_33;
      v24 = *(_QWORD *)(v37 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v36;
          if ((a2 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v24 = *(_QWORD *)(v37 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = 8 * v21;
    v31 = *(void **)(*(_QWORD *)(v5 + 48) + v30);
    v32 = *(void **)(*(_QWORD *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      v33 = v31;
      v34 = v32;
    }
    result = sub_1D7B4A6D4();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = 8 * v18;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v19) = v31;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v19) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v36;
  v23 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1D7AF5250(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;

  v4 = sub_1D7B49588();
  v42 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = v2;
  v7 = *v2;
  sub_1D7AF7974();
  v8 = sub_1D7B4A8C0();
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
    result = swift_release();
    v35 = v38;
LABEL_42:
    *v35 = v9;
    return result;
  }
  v10 = 1 << *(_BYTE *)(v7 + 32);
  v11 = *(_QWORD *)(v7 + 64);
  v40 = (_QWORD *)(v7 + 64);
  if (v10 < 64)
    v12 = ~(-1 << v10);
  else
    v12 = -1;
  v13 = v12 & v11;
  v39 = (unint64_t)(v10 + 63) >> 6;
  v14 = v8 + 64;
  result = swift_retain();
  v16 = 0;
  HIDWORD(v37) = a2;
  v17 = 16;
  if ((a2 & 1) != 0)
    v17 = 32;
  v41 = v17;
  while (1)
  {
    if (v13)
    {
      v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v20 = v19 | (v16 << 6);
      goto LABEL_24;
    }
    v21 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (v21 >= v39)
    {
      swift_release();
      v35 = v38;
      v22 = v40;
      if ((v37 & 0x100000000) != 0)
      {
LABEL_37:
        v36 = 1 << *(_BYTE *)(v7 + 32);
        if (v36 >= 64)
          bzero(v22, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
        else
          *v22 = -1 << v36;
        *(_QWORD *)(v7 + 16) = 0;
      }
LABEL_41:
      result = swift_release();
      goto LABEL_42;
    }
    v22 = v40;
    v23 = v40[v21];
    ++v16;
    if (!v23)
    {
      v16 = v21 + 1;
      if (v21 + 1 >= v39)
        goto LABEL_34;
      v23 = v40[v16];
      if (!v23)
        break;
    }
LABEL_23:
    v13 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v16 << 6);
LABEL_24:
    v25 = *(_QWORD *)(v42 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v42 + v41))(v6, *(_QWORD *)(v7 + 48) + v25 * v20, v4);
    v26 = v7;
    v27 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v20);
    sub_1D7AA76D4(&qword_1F014EDC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D29090], MEMORY[0x1E0D290A0]);
    result = sub_1D7B4A29C();
    v28 = -1 << *(_BYTE *)(v9 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v14 + 8 * (v29 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v14 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v14 + 8 * v30);
      }
      while (v34 == -1);
      v18 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v42 + 32))(*(_QWORD *)(v9 + 48) + v25 * v18, v6, v4);
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v18) = v27;
    ++*(_QWORD *)(v9 + 16);
    v7 = v26;
  }
  v24 = v21 + 2;
  if (v24 >= v39)
  {
LABEL_34:
    swift_release();
    v35 = v38;
    if ((v37 & 0x100000000) != 0)
      goto LABEL_37;
    goto LABEL_41;
  }
  v23 = v40[v24];
  if (v23)
  {
    v16 = v24;
    goto LABEL_23;
  }
  while (1)
  {
    v16 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v16 >= v39)
      goto LABEL_34;
    v23 = v40[v16];
    ++v24;
    if (v23)
      goto LABEL_23;
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_1D7AF55E8(uint64_t a1, int a2, unint64_t *a3, unint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t result;
  int64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  _QWORD *v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  int64_t v43;
  _QWORD *v44;
  uint64_t i;
  int v46;

  v7 = v4;
  v9 = sub_1D7B49504();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *v4;
  sub_1D7AF7BB8(0, a3, a4);
  v46 = a2;
  v14 = sub_1D7B4A8C0();
  v15 = v14;
  if (!*(_QWORD *)(v13 + 16))
    goto LABEL_41;
  v16 = 1 << *(_BYTE *)(v13 + 32);
  v17 = *(_QWORD *)(v13 + 64);
  v44 = (_QWORD *)(v13 + 64);
  if (v16 < 64)
    v18 = ~(-1 << v16);
  else
    v18 = -1;
  v19 = v18 & v17;
  v42 = v4;
  v43 = (unint64_t)(v16 + 63) >> 6;
  v20 = v14 + 64;
  result = swift_retain();
  v22 = 0;
  for (i = v13; ; v13 = i)
  {
    if (v19)
    {
      v24 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v25 = v24 | (v22 << 6);
      goto LABEL_22;
    }
    v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v26 >= v43)
      break;
    v27 = v44;
    v28 = v44[v26];
    ++v22;
    if (!v28)
    {
      v22 = v26 + 1;
      if (v26 + 1 >= v43)
        goto LABEL_34;
      v28 = v44[v22];
      if (!v28)
      {
        v29 = v26 + 2;
        if (v29 >= v43)
        {
LABEL_34:
          swift_release();
          v7 = v42;
          if ((v46 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v28 = v44[v29];
        if (!v28)
        {
          while (1)
          {
            v22 = v29 + 1;
            if (__OFADD__(v29, 1))
              goto LABEL_43;
            if (v22 >= v43)
              goto LABEL_34;
            v28 = v44[v22];
            ++v29;
            if (v28)
              goto LABEL_21;
          }
        }
        v22 = v29;
      }
    }
LABEL_21:
    v19 = (v28 - 1) & v28;
    v25 = __clz(__rbit64(v28)) + (v22 << 6);
LABEL_22:
    v30 = *(_QWORD *)(v10 + 72);
    v31 = *(_QWORD *)(v13 + 48) + v30 * v25;
    if ((v46 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 32))(v12, v31, v9);
      v32 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v25);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v12, v31, v9);
      v32 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v25);
      swift_bridgeObjectRetain();
    }
    sub_1D7AA76D4((unint64_t *)&unk_1F014EE00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D28FE0], MEMORY[0x1E0D28FF0]);
    result = sub_1D7B4A29C();
    v33 = -1 << *(_BYTE *)(v15 + 32);
    v34 = result & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v20 + 8 * (v34 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v20 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v36 = 0;
      v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v38 = v35 == v37;
        if (v35 == v37)
          v35 = 0;
        v36 |= v38;
        v39 = *(_QWORD *)(v20 + 8 * v35);
      }
      while (v39 == -1);
      v23 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(_QWORD *)(v20 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v10 + 32))(*(_QWORD *)(v15 + 48) + v30 * v23, v12, v9);
    *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * v23) = v32;
    ++*(_QWORD *)(v15 + 16);
  }
  swift_release();
  v7 = v42;
  v27 = v44;
  if ((v46 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v40 = 1 << *(_BYTE *)(v13 + 32);
  if (v40 >= 64)
    bzero(v27, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v27 = -1 << v40;
  *(_QWORD *)(v13 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v7 = v15;
  return result;
}

uint64_t sub_1D7AF5994(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  _OWORD v35[2];

  v3 = v2;
  v5 = *v2;
  sub_1D7AE2194();
  v6 = sub_1D7B4A8C0();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v34 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33)
          goto LABEL_34;
        v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v33)
            goto LABEL_34;
          v19 = v34[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              v3 = v2;
              if ((a2 & 1) != 0)
              {
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 >= 64)
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_41;
                if (v13 >= v33)
                  goto LABEL_34;
                v19 = v34[v13];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v13 = v20;
          }
        }
LABEL_21:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_1D7AA552C(v24, v35);
      }
      else
      {
        sub_1D7AA553C((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_1D7B4A980();
      sub_1D7B4A3F8();
      result = sub_1D7B4A998();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      result = (uint64_t)sub_1D7AA552C(v35, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1D7AF5C8C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;

  v3 = v2;
  v5 = *v2;
  sub_1D7AE2088();
  v38 = a2;
  v6 = sub_1D7B4A8C0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v35 = v2;
  v36 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v36)
        goto LABEL_33;
      v23 = *(_QWORD *)(v37 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v36)
              goto LABEL_33;
            v23 = *(_QWORD *)(v37 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v33 = v32;
    }
    sub_1D7B4A980();
    sub_1D7B4A3F8();
    result = sub_1D7B4A998();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v22 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

void *sub_1D7AF5F94()
{
  return sub_1D7AF65A0((unint64_t *)&unk_1F014EE20, (unint64_t *)&qword_1F014E858);
}

void *sub_1D7AF5FB0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t (*v22)(unint64_t, char *, uint64_t);
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  __int128 v28;

  v1 = v0;
  v2 = sub_1D7B49504();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D7AF7B24();
  v6 = *v0;
  v7 = sub_1D7B4A8B4();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v8;
    return result;
  }
  v26 = v1;
  result = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v27 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v23 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v23 >= v16)
      goto LABEL_26;
    v24 = *(_QWORD *)(v27 + 8 * v23);
    ++v12;
    if (!v24)
    {
      v12 = v23 + 1;
      if (v23 + 1 >= v16)
        goto LABEL_26;
      v24 = *(_QWORD *)(v27 + 8 * v12);
      if (!v24)
        break;
    }
LABEL_25:
    v15 = (v24 - 1) & v24;
    v18 = __clz(__rbit64(v24)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v3 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v19, v2);
    v20 = 16 * v18;
    v21 = *(_QWORD *)(v8 + 48) + v19;
    v22 = *(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
    v28 = *(_OWORD *)(*(_QWORD *)(v6 + 56) + v20);
    result = (void *)v22(v21, v5, v2);
    *(_OWORD *)(*(_QWORD *)(v8 + 56) + v20) = v28;
  }
  v25 = v23 + 2;
  if (v25 >= v16)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v26;
    goto LABEL_28;
  }
  v24 = *(_QWORD *)(v27 + 8 * v25);
  if (v24)
  {
    v12 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v24 = *(_QWORD *)(v27 + 8 * v12);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1D7AF61E0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_1D7AE9F30();
  v2 = *v0;
  v3 = sub_1D7B4A8B4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(void **)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    v19 = v17;
    result = v18;
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D7AF6380()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_1D7B49588();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D7AF7974();
  v24 = v0;
  v5 = *v0;
  v6 = sub_1D7B4A8B4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v24 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v25 = v5 + 64;
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v18);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D7AF65A0(unint64_t *a1, unint64_t *a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *result;
  unint64_t v13;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  int64_t v30;

  v5 = sub_1D7B49504();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D7AF7BB8(0, a1, a2);
  v28 = v2;
  v9 = *v2;
  v10 = sub_1D7B4A8B4();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v28 = v11;
    return result;
  }
  result = (void *)(v10 + 64);
  v13 = (unint64_t)((1 << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  if (v11 != v9 || (unint64_t)result >= v9 + 64 + 8 * v13)
    result = memmove(result, (const void *)(v9 + 64), 8 * v13);
  v29 = v9 + 64;
  v15 = 0;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v9 + 16);
  v16 = 1 << *(_BYTE *)(v9 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & *(_QWORD *)(v9 + 64);
  v30 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      v19 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v20 = v19 | (v15 << 6);
      goto LABEL_12;
    }
    v24 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v30)
      goto LABEL_26;
    v25 = *(_QWORD *)(v29 + 8 * v24);
    ++v15;
    if (!v25)
    {
      v15 = v24 + 1;
      if (v24 + 1 >= v30)
        goto LABEL_26;
      v25 = *(_QWORD *)(v29 + 8 * v15);
      if (!v25)
        break;
    }
LABEL_25:
    v18 = (v25 - 1) & v25;
    v20 = __clz(__rbit64(v25)) + (v15 << 6);
LABEL_12:
    v21 = *(_QWORD *)(v6 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, *(_QWORD *)(v9 + 48) + v21, v5);
    v22 = 8 * v20;
    v23 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v20);
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v21, v8, v5);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + v22) = v23;
    result = (void *)swift_bridgeObjectRetain();
  }
  v26 = v24 + 2;
  if (v26 >= v30)
    goto LABEL_26;
  v25 = *(_QWORD *)(v29 + 8 * v26);
  if (v25)
  {
    v15 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v15 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v15 >= v30)
      goto LABEL_26;
    v25 = *(_QWORD *)(v29 + 8 * v15);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D7AF67E4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  sub_1D7AE2194();
  v2 = *v0;
  v3 = sub_1D7B4A8B4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_1D7AA553C(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_1D7AA552C(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1D7AF69C4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_1D7AE2088();
  v2 = *v0;
  v3 = sub_1D7B4A8B4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(void **)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = v20;
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1D7AF6B70(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v4 = (_QWORD **)v3;
  v8 = sub_1D7B49504();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1D7AF4524(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1D7AF65A0((unint64_t *)&qword_1F014F4A0, (unint64_t *)&unk_1F014EE10);
    goto LABEL_7;
  }
  sub_1D7AF55E8(v17, a3 & 1, (unint64_t *)&qword_1F014F4A0, (unint64_t *)&unk_1F014EE10);
  v23 = sub_1D7AF4524(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    result = sub_1D7B4A974();
    __break(1u);
    return result;
  }
  v14 = v23;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_1D7AF6F88(v14, (uint64_t)v11, a1, v20);
}

_OWORD *sub_1D7AF6CFC(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1D7AF46D4(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_OWORD *)(v18[7] + 32 * v12);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
        return sub_1D7AA552C(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1D7AF67E4();
      goto LABEL_7;
    }
    sub_1D7AF5994(v15, a4 & 1);
    v21 = sub_1D7AF46D4(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1D7AF7020(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)sub_1D7B4A974();
  __break(1u);
  return result;
}

void sub_1D7AF6E2C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1D7AF46D4(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1D7AF69C4();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];

      *(_QWORD *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      swift_bridgeObjectRetain();
      return;
    }
    goto LABEL_14;
  }
  sub_1D7AF5C8C(v15, a4 & 1);
  v20 = sub_1D7AF46D4(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_1D7B4A974();
  __break(1u);
}

uint64_t sub_1D7AF6F88(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_1D7B49504();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

_OWORD *sub_1D7AF7020(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_1D7AA552C(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_1D7AF7088(uint64_t a1, void *a2)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    sub_1D7AA6010(0, v2, 0);
    v3 = v14;
    v6 = a1 + 32;
    do
    {
      v7 = objc_msgSend(a2, sel_transform);
      v8 = (void *)sub_1D7B494BC();
      objc_msgSend(v7, sel_coordinateForValue_, v8);
      v10 = v9;

      v12 = *(_QWORD *)(v14 + 16);
      v11 = *(_QWORD *)(v14 + 24);
      if (v12 >= v11 >> 1)
        sub_1D7AA6010(v11 > 1, v12 + 1, 1);
      *(_QWORD *)(v14 + 16) = v12 + 1;
      *(_QWORD *)(v14 + 8 * v12 + 32) = v10;
      v6 += 8;
      --v2;
    }
    while (v2);
  }
  return v3;
}

void sub_1D7AF71B0(void *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, uint64_t a6, uint64_t *a7, uint64_t a8, void *a9)
{
  char *v9;
  char *v10;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t);
  id v17;
  id v18;
  id v19;
  id v20;
  unsigned int v21;
  __int128 v22;
  int v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  os_unfair_lock_s *v27;
  uint64_t v28;
  os_unfair_lock_s *v29;
  double v30;
  uint64_t v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  char v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  void *v51;
  id v52;
  id v53;
  id v54;
  id v55;
  uint64_t v56;
  id v57;
  id v58;
  uint64_t v59;
  uint64_t (*v60)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  void *v61;
  uint64_t v62;
  uint64_t v63;
  id v65;
  id v66;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  uint64_t aBlock;
  uint64_t v75;
  uint64_t (*v76)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t);
  void *v77;
  uint64_t (*v78)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  unsigned __int8 v84;

  v10 = v9;
  v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t))a7[2];
  v62 = a7[1];
  v63 = *a7;
  v60 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))a7[4];
  v61 = (void *)a7[3];
  v59 = a7[5];
  v58 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3508]), sel_init);
  v70 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3508]), sel_init);
  v68 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3508]), sel_init);
  v57 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3508]), sel_init);
  v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3508]), sel_init);
  v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3508]), sel_init);
  v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3508]), sel_init);
  v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3508]), sel_init);
  v21 = objc_msgSend(v10, sel_allowsSelection);
  if ((objc_msgSend(a9, sel_seriesDrawingDuringTiling) & 1) != 0)
  {
    v22 = 0uLL;
    v23 = 1;
    v24 = 0uLL;
    v25 = 0uLL;
    v26 = 0uLL;
  }
  else
  {
    v27 = *(os_unfair_lock_s **)&v10[OBJC_IVAR___HKBalanceSeries_lollipopPathRangeLock];
    v28 = (uint64_t)&v27[4];
    v29 = v27 + 21;
    os_unfair_lock_lock(v27 + 21);
    sub_1D7B03408(v28, (uint64_t)&v80);
    os_unfair_lock_unlock(v29);
    v22 = v80;
    v24 = v81;
    v25 = v82;
    v26 = v83;
    v23 = v84;
  }
  HIDWORD(v56) = v23;
  v80 = v22;
  v81 = v24;
  v82 = v25;
  v83 = v26;
  v84 = v23;
  v30 = sub_1D7B03328(a2, a3, a4, a5);
  v31 = swift_allocObject();
  *(CGFloat *)(v31 + 16) = a2;
  *(CGFloat *)(v31 + 24) = a3;
  *(CGFloat *)(v31 + 32) = a4;
  *(CGFloat *)(v31 + 40) = a5;
  *(double *)(v31 + 48) = v30;
  *(_QWORD *)(v31 + 56) = v19;
  *(_QWORD *)(v31 + 64) = v10;
  *(_QWORD *)(v31 + 72) = v20;
  *(double *)(v31 + 80) = v30 * 0.7;
  *(_BYTE *)(v31 + 88) = v21;
  sub_1D7AF7A58((uint64_t)&v80, v31 + 96);
  *(_QWORD *)(v31 + 168) = v17;
  *(_QWORD *)(v31 + 176) = v18;
  *(double *)(v31 + 184) = v30 * 0.5;
  LODWORD(v56) = v21;
  *(_QWORD *)(v31 + 192) = v70;
  *(_QWORD *)(v31 + 200) = v68;
  *(_QWORD *)(v31 + 208) = v57;
  *(_QWORD *)(v31 + 216) = v58;
  v78 = sub_1D7AF7AAC;
  v79 = v31;
  aBlock = MEMORY[0x1E0C809B0];
  v75 = 1107296256;
  v76 = sub_1D7B2DBA0;
  v77 = &block_descriptor_7;
  v32 = _Block_copy(&aBlock);
  v66 = v19;
  v10;
  v33 = v20;
  v73 = v17;
  v72 = v18;
  v71 = v70;
  v69 = v68;
  v34 = v57;
  v35 = v58;
  swift_release();
  aBlock = v63;
  v75 = v62;
  v76 = v16;
  v77 = v61;
  v78 = v60;
  v79 = v59;
  objc_msgSend(a1, sel_enumerateCoordinatesWithTransform_roundToViewScale_block_, &aBlock, 1, v32);
  _Block_release(v32);
  v36 = BYTE4(v56) & v21;
  if ((BYTE4(v56) & v21 & 1) != 0)
    v37 = sub_1D7B03250();
  else
    v37 = sub_1D7B03298();
  v38 = v37;
  v65 = v35;
  if (objc_msgSend(v34, sel_isEmpty, v56))
  {

    if ((v36 & 1) == 0)
    {
LABEL_9:
      v39 = sub_1D7B032BC();
      goto LABEL_12;
    }
  }
  else
  {
    v40 = objc_msgSend(v34, sel_CGPath);
    objc_msgSend(v38, sel_renderPath_context_axisRect_alpha_, v40, a8, a2, a3, a4, a5, 1.0);

    v35 = v65;
    if ((v36 & 1) == 0)
      goto LABEL_9;
  }
  v39 = sub_1D7B03274();
LABEL_12:
  v41 = v39;
  if (!objc_msgSend(v35, sel_isEmpty))
  {
    v42 = objc_msgSend(v35, (SEL)&selRef__cardioFitnessUserInfoCreationBlockWithAge_biologicalSex_ + 5);
    objc_msgSend(v41, sel_renderPath_context_axisRect_alpha_, v42, a8, a2, a3, a4, a5, 1.0);

    v41 = v42;
  }

  v43 = sub_1D7B03250();
  if ((objc_msgSend(v73, sel_isEmpty) & 1) == 0)
  {
    v44 = objc_msgSend(v73, (SEL)&selRef__cardioFitnessUserInfoCreationBlockWithAge_biologicalSex_ + 5);
    objc_msgSend(v43, sel_renderPath_context_axisRect_alpha_, v44, a8, a2, a3, a4, a5, 1.0);

    v43 = v44;
  }

  v45 = sub_1D7B030E8();
  if ((objc_msgSend(v72, sel_isEmpty) & 1) == 0)
  {
    v46 = objc_msgSend(v72, (SEL)&selRef__cardioFitnessUserInfoCreationBlockWithAge_biologicalSex_ + 5);
    objc_msgSend(v45, sel_renderPath_context_axisRect_alpha_, v46, a8, a2, a3, a4, a5, 1.0);

    v45 = v46;
  }

  v47 = sub_1D7B03274();
  if ((objc_msgSend(v71, sel_isEmpty) & 1) == 0)
  {
    v48 = objc_msgSend(v71, (SEL)&selRef__cardioFitnessUserInfoCreationBlockWithAge_biologicalSex_ + 5);
    objc_msgSend(v47, sel_renderPath_context_axisRect_alpha_, v48, a8, a2, a3, a4, a5, 1.0);

    v47 = v48;
  }

  v49 = sub_1D7B030E8();
  if ((objc_msgSend(v69, sel_isEmpty) & 1) == 0)
  {
    v50 = objc_msgSend(v69, (SEL)&selRef__cardioFitnessUserInfoCreationBlockWithAge_biologicalSex_ + 5);
    objc_msgSend(v49, sel_renderPath_context_axisRect_alpha_, v50, a8, a2, a3, a4, a5, 1.0);

    v49 = v50;
  }
  v51 = v66;

  v52 = sub_1D7B032E0();
  if ((objc_msgSend(v66, sel_isEmpty) & 1) == 0)
  {
    v53 = objc_msgSend(v66, (SEL)&selRef__cardioFitnessUserInfoCreationBlockWithAge_biologicalSex_ + 5);
    objc_msgSend(v52, sel_renderPath_context_axisRect_alpha_, v53, a8, a2, a3, a4, a5, 1.0);

    v52 = v53;
    v51 = v66;
  }

  v54 = sub_1D7B03304();
  if ((objc_msgSend(v33, sel_isEmpty) & 1) == 0)
  {
    v55 = objc_msgSend(v33, (SEL)&selRef__cardioFitnessUserInfoCreationBlockWithAge_biologicalSex_ + 5);
    objc_msgSend(v54, sel_renderPath_context_axisRect_alpha_, v55, a8, a2, a3, a4, a5, 1.0);

    v33 = v54;
    v54 = v55;
  }

}

uint64_t sub_1D7AF78E8()
{
  return type metadata accessor for BalanceDaySeries();
}

uint64_t sub_1D7AF78F0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D7B49300();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for BalanceDaySeries()
{
  return swift_lookUpClassMethod();
}

void sub_1D7AF7974()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F014EDC0)
  {
    sub_1D7B49588();
    sub_1D7AA76D4(&qword_1F014EDC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D29090], MEMORY[0x1E0D290A0]);
    v0 = sub_1D7B4A8D8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F014EDC0);
  }
}

uint64_t sub_1D7AF79F4()
{
  id *v0;

  return swift_deallocObject();
}

uint64_t sub_1D7AF7A58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D7AAE0AC(0, (unint64_t *)&unk_1F014EDE0, type metadata accessor for HKGraphSeriesDataPointPathRange);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D7AF7AAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  return sub_1D7AF38A8(a1, a2, a3, a4, a5, *(CGFloat *)(v7 + 16), *(CGFloat *)(v7 + 24), *(CGFloat *)(v7 + 32), *(CGFloat *)(v7 + 40), *(double *)(v7 + 48), *(double *)(v7 + 80), *(double *)(v7 + 184), a6, a7, *(void **)(v7 + 56), *(_QWORD *)(v7 + 64), *(void **)(v7 + 72), *(_BYTE *)(v7 + 88), v7 + 96,
           *(void **)(v7 + 168),
           *(void **)(v7 + 176),
           *(void **)(v7 + 192),
           *(void **)(v7 + 200),
           *(void **)(v7 + 208),
           *(void **)(v7 + 216));
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

void sub_1D7AF7B24()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1F014E848)
  {
    sub_1D7B49504();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D28FE0];
    sub_1D7AA78D4();
    sub_1D7AA76D4((unint64_t *)&unk_1F014EE00, v0, MEMORY[0x1E0D28FF0]);
    v1 = sub_1D7B4A8D8();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1F014E848);
  }
}

void sub_1D7AF7BB8(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t (*v5)(uint64_t);
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    sub_1D7B49504();
    v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D28FE0];
    sub_1D7AF7C5C(255, a3);
    sub_1D7AA76D4((unint64_t *)&unk_1F014EE00, v5, MEMORY[0x1E0D28FF0]);
    v6 = sub_1D7B4A8D8();
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1D7AF7C5C(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1D7B4A4E8();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t sub_1D7AF7CA0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[7] = v0;
  sub_1D7B4A50C();
  v1[8] = sub_1D7B4A500();
  v1[9] = sub_1D7B4A4F4();
  v1[10] = v2;
  return swift_task_switch();
}

uint64_t sub_1D7AF7D0C()
{
  _QWORD *v0;
  id v1;
  _QWORD *v2;

  v1 = objc_msgSend(*(id *)(v0[7] + OBJC_IVAR____TtC8HealthUI45ClinicalAccountsOverviewDataSourceAndDelegate_context), sel_wrappedFlowManager);
  sub_1D7B4A770();
  swift_unknownObjectRelease();
  type metadata accessor for ClinicalAuthorizationFlowManager();
  swift_dynamicCast();
  v0[11] = v0[6];
  v2 = (_QWORD *)swift_task_alloc();
  v0[12] = v2;
  *v2 = v0;
  v2[1] = sub_1D7AF7DC8;
  return sub_1D7ABB340();
}

uint64_t sub_1D7AF7DC8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(*(_QWORD *)v1 + 88);
  *(_QWORD *)(*(_QWORD *)v1 + 104) = a1;
  swift_task_dealloc();

  return swift_task_switch();
}

uint64_t sub_1D7AF7E24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 104);
  swift_release();
  if (v1 < 0 || (v1 & 0x4000000000000000) != 0)
  {
    v5 = swift_bridgeObjectRetain();
    v2 = (uint64_t)sub_1D7AF9874(v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  v6 = v2;
  sub_1D7AF97FC(&v6);
  v3 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v3 + OBJC_IVAR____TtC8HealthUI45ClinicalAccountsOverviewDataSourceAndDelegate_accounts) = v6;
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1D7AF7EE4(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v5 = sub_1D7B490A8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v9 = a2;
    if (qword_1F014CF20 != -1)
      swift_once();
    v10 = sub_1D7B4969C();
    __swift_project_value_buffer(v10, (uint64_t)qword_1F0154500);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a3, v5);
    v11 = a2;
    v12 = a2;
    v13 = sub_1D7B49684();
    v14 = sub_1D7B4A608();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = swift_slowAlloc();
      v24 = (_QWORD *)swift_slowAlloc();
      v25 = swift_slowAlloc();
      v27 = v25;
      *(_DWORD *)v15 = 136315650;
      v26 = type metadata accessor for ClinicalAccountsOverviewDataSourceAndDelegate();
      sub_1D7AFC3AC();
      v16 = sub_1D7B4A3E0();
      v26 = sub_1D7AA4DE4(v16, v17, &v27);
      sub_1D7B4A704();
      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 12) = 2080;
      sub_1D7AA76D4(&qword_1F014EF28, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
      v18 = sub_1D7B4A914();
      v26 = sub_1D7AA4DE4(v18, v19, &v27);
      sub_1D7B4A704();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      *(_WORD *)(v15 + 22) = 2112;
      v20 = a2;
      v21 = _swift_stdlib_bridgeErrorToNSError();
      v26 = v21;
      sub_1D7B4A704();
      v22 = v24;
      *v24 = v21;

      _os_log_impl(&dword_1D7813000, v13, v14, "%s failed to open %s: %@", (uint8_t *)v15, 0x20u);
      sub_1D7AE9C70(0, (unint64_t *)&qword_1ED0AC7F0, (unint64_t *)&qword_1ED0AC800, 0x1E0DE7910, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      swift_arrayDestroy();
      MEMORY[0x1D829FFF4](v22, -1, -1);
      v23 = v25;
      swift_arrayDestroy();
      MEMORY[0x1D829FFF4](v23, -1, -1);
      MEMORY[0x1D829FFF4](v15, -1, -1);

    }
    else
    {

      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
}

uint64_t sub_1D7AF8234(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v4)(uint64_t, void *);
  uint64_t v5;
  id v6;

  v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
    v5 = sub_1D7B4A23C();
  else
    v5 = 0;
  swift_retain();
  v6 = a3;
  v4(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1D7AF82C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v0 = sub_1D7B490A8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1F014CF20 != -1)
    swift_once();
  v4 = sub_1D7B4969C();
  __swift_project_value_buffer(v4, (uint64_t)qword_1F0154500);
  v5 = sub_1D7B49684();
  v6 = sub_1D7B4A620();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v11 = v8;
    *(_DWORD *)v7 = 136315138;
    v10 = sub_1D7AA4DE4(0xD00000000000002DLL, 0x80000001D7B85A80, &v11);
    sub_1D7B4A704();
    _os_log_impl(&dword_1D7813000, v5, v6, "%s will open deep link to add an account", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D829FFF4](v8, -1, -1);
    MEMORY[0x1D829FFF4](v7, -1, -1);
  }

  sub_1D7AE451C((uint64_t)v3);
  sub_1D7AFB62C((uint64_t)v3);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1D7AF84A8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  int v14;
  char **v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  _QWORD v29[2];
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v2 = sub_1D7B490A8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D7B491C8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1F014CF20 != -1)
    swift_once();
  v10 = sub_1D7B4969C();
  __swift_project_value_buffer(v10, (uint64_t)qword_1F0154500);
  v11 = a1;
  v12 = sub_1D7B49684();
  v13 = sub_1D7B4A620();
  v14 = v13;
  v15 = &selRef_hk_populationChartLevelBackgroundColor;
  if (os_log_type_enabled(v12, v13))
  {
    v16 = swift_slowAlloc();
    v32 = v7;
    v17 = v16;
    v31 = swift_slowAlloc();
    v34 = v31;
    *(_DWORD *)v17 = 136315394;
    v30 = v14;
    v33 = sub_1D7AA4DE4(0xD00000000000002DLL, 0x80000001D7B85A80, &v34);
    v29[1] = &v34;
    sub_1D7B4A704();
    *(_WORD *)(v17 + 12) = 2080;
    v18 = objc_msgSend(v11, sel_identifier, v17 + 14);
    sub_1D7B491B0();

    sub_1D7AA76D4((unint64_t *)&qword_1F014E990, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v19 = sub_1D7B4A914();
    v20 = v5;
    v21 = v3;
    v22 = v2;
    v24 = v23;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v9, v6);
    v33 = sub_1D7AA4DE4(v19, v24, &v34);
    sub_1D7B4A704();

    v2 = v22;
    v3 = v21;
    v5 = v20;
    v15 = &selRef_hk_populationChartLevelBackgroundColor;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D7813000, v12, (os_log_type_t)v30, "%s will open deep link to view account %s", (uint8_t *)v17, 0x16u);
    v25 = v31;
    swift_arrayDestroy();
    MEMORY[0x1D829FFF4](v25, -1, -1);
    v26 = v17;
    v7 = v32;
    MEMORY[0x1D829FFF4](v26, -1, -1);

  }
  else
  {

  }
  v27 = objc_msgSend(v11, v15[141]);
  sub_1D7B491B0();

  sub_1D7AE460C((uint64_t)v5);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_1D7AFB62C((uint64_t)v5);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_1D7AF87FC(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;

  v3 = v2;
  v6 = sub_1D7B49474();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  v10 = sub_1D7B49444();
  v11 = OBJC_IVAR____TtC8HealthUI45ClinicalAccountsOverviewDataSourceAndDelegate_accounts;
  v12 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8HealthUI45ClinicalAccountsOverviewDataSourceAndDelegate_accounts);
  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    v13 = sub_1D7B4A8A8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (v10 == v13)
  {
    sub_1D7AF82C8();
LABEL_12:
    v21 = (void *)sub_1D7B49420();
    objc_msgSend(a1, sel_deselectRowAtIndexPath_animated_, v21, 1);

    return;
  }
  v14 = sub_1D7B49444();
  v15 = v14;
  v16 = *(_QWORD *)(v3 + v11);
  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    v22 = sub_1D7B4A8A8();
    swift_bridgeObjectRelease();
    if (v15 >= v22)
      goto LABEL_12;
  }
  else if (v14 >= *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_12;
  }
  v17 = sub_1D7B49444();
  v18 = v17;
  v19 = *(_QWORD *)(v3 + v11);
  if ((v19 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v20 = (id)MEMORY[0x1D829E758](v18, v19);
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if ((v17 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v17 < *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v20 = *(id *)(v19 + 8 * v17 + 32);
LABEL_11:
    sub_1D7AF84A8(v20);

    goto LABEL_12;
  }
  __break(1u);
}

void sub_1D7AF8B00(uint64_t a1, void *a2)
{
  char *v2;
  void *v3;
  void *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  char v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  unint64_t v17;
  id v18;
  void *v19;
  char v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  void *v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  char v54[64];

  v3 = v2;
  v5 = *(void **)&v2[qword_1F014EE90];
  sub_1D7AFC560(a1, (uint64_t)v54);
  sub_1D7B49B4C();
  v6 = objc_msgSend(v5, sel_view);
  if (!v6)
  {
    __break(1u);
    goto LABEL_20;
  }
  v7 = v6;
  objc_msgSend(v6, sel_invalidateIntrinsicContentSize);

  v8 = objc_msgSend(v5, sel_parentViewController);
  if (!v8)
    goto LABEL_5;
  v9 = v8;
  sub_1D7AAF6EC(0, (unint64_t *)&unk_1F014F770);
  v10 = a2;
  v11 = v9;
  LOBYTE(v9) = sub_1D7B4A6E0();

  if ((v9 & 1) != 0)
  {
    v12 = 1;
  }
  else
  {
LABEL_5:
    objc_msgSend(v5, sel_willMoveToParentViewController_, 0);
    v13 = objc_msgSend(v5, sel_view);
    if (!v13)
    {
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
    v14 = v13;
    objc_msgSend(v13, sel_removeFromSuperview);

    objc_msgSend(v5, sel_removeFromParentViewController);
    objc_msgSend(a2, sel_addChildViewController_, v5);
    v12 = 0;
  }
  v15 = objc_msgSend(v3, sel_contentView);
  v16 = objc_msgSend(v15, sel_subviews);

  sub_1D7AAF6EC(0, (unint64_t *)&qword_1F01492B0);
  v17 = sub_1D7B4A4AC();

  v18 = objc_msgSend(v5, sel_view);
  if (!v18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v19 = v18;
  v20 = sub_1D7AF9678((uint64_t)v18, v17);
  swift_bridgeObjectRelease();

  if ((v20 & 1) != 0)
    goto LABEL_16;
  v21 = objc_msgSend(v3, sel_contentView);
  v22 = objc_msgSend(v5, sel_view);
  if (!v22)
    goto LABEL_22;
  v23 = v22;
  objc_msgSend(v21, sel_addSubview_, v22);

  v24 = objc_msgSend(v5, sel_view);
  if (!v24)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v25 = v24;
  objc_msgSend(v24, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  v26 = objc_msgSend(v5, sel_view);
  if (!v26)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v27 = v26;
  v28 = objc_msgSend(v26, sel_leadingAnchor);

  v29 = objc_msgSend(v3, sel_contentView);
  v30 = objc_msgSend(v29, sel_layoutMarginsGuide);

  v31 = objc_msgSend(v30, sel_leadingAnchor);
  v32 = objc_msgSend(v28, sel_constraintEqualToAnchor_, v31);

  objc_msgSend(v32, sel_setActive_, 1);
  v33 = objc_msgSend(v5, sel_view);
  if (!v33)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v34 = v33;
  v35 = objc_msgSend(v33, sel_trailingAnchor);

  v36 = objc_msgSend(v3, sel_contentView);
  v37 = objc_msgSend(v36, sel_layoutMarginsGuide);

  v38 = objc_msgSend(v37, sel_trailingAnchor);
  v39 = objc_msgSend(v35, sel_constraintEqualToAnchor_, v38);

  objc_msgSend(v39, sel_setActive_, 1);
  v40 = objc_msgSend(v5, sel_view);
  if (!v40)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v41 = v40;
  v42 = objc_msgSend(v40, sel_topAnchor);

  v43 = objc_msgSend(v3, sel_contentView);
  v44 = objc_msgSend(v43, sel_layoutMarginsGuide);

  v45 = objc_msgSend(v44, sel_topAnchor);
  v46 = objc_msgSend(v42, sel_constraintEqualToAnchor_, v45);

  objc_msgSend(v46, sel_setActive_, 1);
  v47 = objc_msgSend(v5, sel_view);
  if (!v47)
  {
LABEL_27:
    __break(1u);
    return;
  }
  v48 = v47;
  v49 = objc_msgSend(v47, sel_bottomAnchor);

  v50 = objc_msgSend(v3, sel_contentView);
  v51 = objc_msgSend(v50, sel_layoutMarginsGuide);

  v52 = objc_msgSend(v51, sel_bottomAnchor);
  v53 = objc_msgSend(v49, sel_constraintEqualToAnchor_, v52);

  objc_msgSend(v53, sel_setActive_, 1);
LABEL_16:
  if ((v12 & 1) == 0)
    objc_msgSend(v5, sel_didMoveToParentViewController_, a2);
}

id sub_1D7AF9250()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClinicalAccountsOverviewDataSourceAndDelegate();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ClinicalAccountsOverviewDataSourceAndDelegate()
{
  return objc_opt_self();
}

uint64_t sub_1D7AF92E8()
{
  return swift_initClassMetadata2();
}

char *sub_1D7AF932C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  objc_class *ObjectType;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void *v15;
  char *v16;
  void *v17;
  char *v18;
  char *result;
  char *v20;
  id v21;
  uint64_t v22;
  objc_super v23;
  uint64_t v24;

  v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  v8 = *MEMORY[0x1E0DEEDD8] & *(_QWORD *)v3;
  v9 = *(_QWORD *)(v8 + 0x50);
  v10 = sub_1D7B4A6F8();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - v11;
  v13 = qword_1F014EE90;
  v24 = *(_QWORD *)(v8 + 88);
  MEMORY[0x1D829FF28](MEMORY[0x1E0CE0798], v10, &v24);
  sub_1D7B49B58();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v12, 1, 1, v9);
  v14 = v4;
  *(_QWORD *)&v4[v13] = sub_1D7B49B34();

  if (a3)
  {
    v15 = (void *)sub_1D7B4A38C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = 0;
  }
  v23.receiver = v14;
  v23.super_class = ObjectType;
  v16 = (char *)objc_msgSendSuper2(&v23, sel_initWithStyle_reuseIdentifier_, a1, v15);

  v17 = *(void **)&v16[qword_1F014EE90];
  v18 = v16;
  result = (char *)objc_msgSend(v17, sel_view);
  if (result)
  {
    v20 = result;
    v21 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
    objc_msgSend(v20, sel_setBackgroundColor_, v21);

    return v18;
  }
  else
  {
    __break(1u);
  }
  return result;
}

char *sub_1D7AF9510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  if (a4)
  {
    a4 = sub_1D7B4A3BC();
    v6 = v5;
  }
  else
  {
    v6 = 0;
  }
  return sub_1D7AF932C(a3, a4, v6);
}

id sub_1D7AF9558()
{
  uint64_t v0;
  void *v1;
  id result;
  void *v3;

  v1 = *(void **)(v0 + qword_1F014EE90);
  objc_msgSend(v1, sel_willMoveToParentViewController_, 0);
  result = objc_msgSend(v1, sel_view);
  if (result)
  {
    v3 = result;
    objc_msgSend(result, sel_removeFromSuperview);

    return objc_msgSend(v1, sel_removeFromParentViewController);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1D7AF95D0()
{
  void *v0;
  objc_class *ObjectType;
  objc_super v3;

  ObjectType = (objc_class *)swift_getObjectType();
  sub_1D7AF9558();
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

id sub_1D7AF9614(void *a1)
{
  id v1;

  v1 = a1;
  return sub_1D7AF95D0();
}

void sub_1D7AF9638(uint64_t a1)
{

}

void sub_1D7AF9648(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_1D7AFC1C0();
}

uint64_t type metadata accessor for HostingTableViewCell(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for HostingTableViewCell);
}

uint64_t sub_1D7AF9678(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  id v5;
  void *v6;
  char v7;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  id v13;
  char v14;

  if (a2 >> 62)
    goto LABEL_20;
  v3 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; v3 = sub_1D7B4A8A8())
  {
    v4 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      v5 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      v5 = (id)MEMORY[0x1D829E758](0, a2);
LABEL_5:
      v6 = v5;
      sub_1D7AAF6EC(0, (unint64_t *)&qword_1F01492B0);
      v7 = sub_1D7B4A6E0();

      if ((v7 & 1) != 0)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v3 == 1)
        goto LABEL_18;
      if (v4)
        break;
      v4 = 5;
      while (1)
      {
        v12 = v4 - 3;
        if (__OFADD__(v4 - 4, 1))
          break;
        v13 = *(id *)(a2 + 8 * v4);
        v14 = sub_1D7B4A6E0();

        if ((v14 & 1) != 0)
          goto LABEL_6;
        ++v4;
        if (v12 == v3)
          goto LABEL_18;
      }
      __break(1u);
    }
    v9 = 1;
    while (1)
    {
      MEMORY[0x1D829E758](v9, a2);
      v10 = v9 + 1;
      if (__OFADD__(v9, 1))
        break;
      v11 = sub_1D7B4A6E0();
      swift_unknownObjectRelease();
      if ((v11 & 1) != 0)
        goto LABEL_6;
      ++v9;
      if (v10 == v3)
        goto LABEL_18;
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1D7AF97FC(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_1D7AFB618();
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1D7AF9978(v6);
  return sub_1D7B4A83C();
}

_QWORD *sub_1D7AF9874(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_10;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v2 <= 0)
    {
      v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    else
    {
      sub_1D7ABB0F8(0, (unint64_t *)&qword_1F01493B0);
      v3 = (_QWORD *)swift_allocObject();
      v4 = _swift_stdlib_malloc_size(v3);
      v5 = v4 - 32;
      if (v4 < 32)
        v5 = v4 - 25;
      v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_1D7AFB168((unint64_t)(v3 + 4), v2, v1);
    v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2)
      break;
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    v2 = sub_1D7B4A8A8();
    swift_bridgeObjectRelease();
    if (!v2)
      return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

uint64_t sub_1D7AF9978(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id *v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  id v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  void *v43;
  unint64_t v44;
  unint64_t v45;
  char *v46;
  char *v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  unint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  BOOL v69;
  uint64_t v70;
  char v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  BOOL v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  unint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *__dst;
  uint64_t v112;
  uint64_t v113;

  v2 = v1;
  v4 = a1[1];
  result = sub_1D7B4A908();
  if (result < v4)
  {
    if (v4 >= 0)
      v6 = v4;
    else
      v6 = v4 + 1;
    if (v4 >= -1)
    {
      v7 = result;
      v101 = a1;
      if (v4 < 2)
      {
        v10 = (char *)MEMORY[0x1E0DEE9D8];
        v113 = MEMORY[0x1E0DEE9D8];
        __dst = (char *)((MEMORY[0x1E0DEE9D8] & 0xFFFFFFFFFFFFFF8) + 32);
        if (v4 != 1)
        {
          v13 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
          if (v13 < 2)
            goto LABEL_109;
          goto LABEL_97;
        }
      }
      else
      {
        v8 = v6 >> 1;
        sub_1D7AAF6EC(0, (unint64_t *)&qword_1F014D758);
        v9 = sub_1D7B4A4D0();
        *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
        __dst = (char *)((v9 & 0xFFFFFFFFFFFFFF8) + 32);
        v113 = v9;
      }
      v11 = 0;
      v12 = *a1;
      v103 = *a1 + 16;
      v104 = v7;
      v102 = *a1 - 8;
      v10 = (char *)MEMORY[0x1E0DEE9D8];
      v108 = v4;
      v112 = *a1;
      while (1)
      {
        v14 = v11++;
        v107 = v14;
        if (v11 < v4)
        {
          v105 = v10;
          v15 = *(void **)(v12 + 8 * v14);
          v16 = *(id *)(v12 + 8 * v11);
          v17 = v15;
          v18 = objc_msgSend(v16, sel_title);
          sub_1D7B4A3BC();

          v19 = objc_msgSend(v17, sel_title);
          sub_1D7B4A3BC();

          v4 = v108;
          sub_1D7ABCCEC();
          v109 = sub_1D7B4A758();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v11 = v14 + 2;
          if (v14 + 2 < v108)
          {
            v20 = (id *)(v103 + 8 * v14);
            while (1)
            {
              v21 = *(v20 - 1);
              v22 = *v20;
              v23 = v21;
              v24 = objc_msgSend(v22, sel_title);
              sub_1D7B4A3BC();

              v25 = objc_msgSend(v23, sel_title);
              sub_1D7B4A3BC();

              v26 = sub_1D7B4A758();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v109 == -1) == (v26 != -1))
                break;
              ++v11;
              ++v20;
              v4 = v108;
              if (v108 == v11)
              {
                v11 = v108;
                goto LABEL_22;
              }
            }
            v4 = v108;
          }
LABEL_22:
          v10 = v105;
          v12 = v112;
          if (v109 == -1)
          {
            if (v11 < v14)
              goto LABEL_135;
            if (v14 < v11)
            {
              v27 = (uint64_t *)(v102 + 8 * v11);
              v28 = v11;
              v29 = v14;
              v30 = (uint64_t *)(v112 + 8 * v14);
              do
              {
                if (v29 != --v28)
                {
                  if (!v112)
                    goto LABEL_138;
                  v31 = *v30;
                  *v30 = *v27;
                  *v27 = v31;
                }
                ++v29;
                --v27;
                ++v30;
              }
              while (v29 < v28);
            }
          }
        }
        if (v11 < v4)
        {
          if (__OFSUB__(v11, v14))
            goto LABEL_131;
          if (v11 - v14 < v104)
          {
            if (__OFADD__(v14, v104))
              goto LABEL_133;
            if (v14 + v104 >= v4)
              v32 = v4;
            else
              v32 = v14 + v104;
            if (v32 < v14)
            {
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
              break;
            }
            if (v11 != v32)
            {
              v106 = v32;
              v33 = v102 + 8 * v11;
              do
              {
                v34 = *(void **)(v12 + 8 * v11);
                v35 = v14;
                v110 = v33;
                v36 = v33;
                while (1)
                {
                  v37 = *(void **)v36;
                  v38 = v34;
                  v39 = v37;
                  v40 = objc_msgSend(v38, sel_title);
                  sub_1D7B4A3BC();

                  v41 = objc_msgSend(v39, sel_title);
                  sub_1D7B4A3BC();

                  sub_1D7ABCCEC();
                  v42 = sub_1D7B4A758();

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if (v42 != -1)
                    break;
                  v12 = v112;
                  if (!v112)
                    goto LABEL_136;
                  v43 = *(void **)v36;
                  v34 = *(void **)(v36 + 8);
                  *(_QWORD *)v36 = v34;
                  *(_QWORD *)(v36 + 8) = v43;
                  v36 -= 8;
                  if (v11 == ++v35)
                    goto LABEL_41;
                }
                v12 = v112;
LABEL_41:
                ++v11;
                v33 = v110 + 8;
                v14 = v107;
              }
              while (v11 != v106);
              v11 = v106;
            }
          }
        }
        if (v11 < v14)
          goto LABEL_126;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v10 = sub_1D7AFA7AC(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
        v45 = *((_QWORD *)v10 + 2);
        v44 = *((_QWORD *)v10 + 3);
        v13 = v45 + 1;
        v12 = v112;
        if (v45 >= v44 >> 1)
        {
          v94 = sub_1D7AFA7AC((char *)(v44 > 1), v45 + 1, 1, v10);
          v12 = v112;
          v10 = v94;
        }
        *((_QWORD *)v10 + 2) = v13;
        v46 = v10 + 32;
        v47 = &v10[16 * v45 + 32];
        *(_QWORD *)v47 = v14;
        *((_QWORD *)v47 + 1) = v11;
        if (v45)
        {
          while (1)
          {
            v48 = v13 - 1;
            if (v13 >= 4)
            {
              v53 = &v46[16 * v13];
              v54 = *((_QWORD *)v53 - 8);
              v55 = *((_QWORD *)v53 - 7);
              v59 = __OFSUB__(v55, v54);
              v56 = v55 - v54;
              if (v59)
                goto LABEL_115;
              v58 = *((_QWORD *)v53 - 6);
              v57 = *((_QWORD *)v53 - 5);
              v59 = __OFSUB__(v57, v58);
              v51 = v57 - v58;
              v52 = v59;
              if (v59)
                goto LABEL_116;
              v60 = v13 - 2;
              v61 = &v46[16 * v13 - 32];
              v63 = *(_QWORD *)v61;
              v62 = *((_QWORD *)v61 + 1);
              v59 = __OFSUB__(v62, v63);
              v64 = v62 - v63;
              if (v59)
                goto LABEL_118;
              v59 = __OFADD__(v51, v64);
              v65 = v51 + v64;
              if (v59)
                goto LABEL_121;
              if (v65 >= v56)
              {
                v83 = &v46[16 * v48];
                v85 = *(_QWORD *)v83;
                v84 = *((_QWORD *)v83 + 1);
                v59 = __OFSUB__(v84, v85);
                v86 = v84 - v85;
                if (v59)
                  goto LABEL_125;
                v76 = v51 < v86;
                goto LABEL_85;
              }
            }
            else
            {
              if (v13 != 3)
              {
                v77 = *((_QWORD *)v10 + 4);
                v78 = *((_QWORD *)v10 + 5);
                v59 = __OFSUB__(v78, v77);
                v70 = v78 - v77;
                v71 = v59;
                goto LABEL_79;
              }
              v50 = *((_QWORD *)v10 + 4);
              v49 = *((_QWORD *)v10 + 5);
              v59 = __OFSUB__(v49, v50);
              v51 = v49 - v50;
              v52 = v59;
            }
            if ((v52 & 1) != 0)
              goto LABEL_117;
            v60 = v13 - 2;
            v66 = &v46[16 * v13 - 32];
            v68 = *(_QWORD *)v66;
            v67 = *((_QWORD *)v66 + 1);
            v69 = __OFSUB__(v67, v68);
            v70 = v67 - v68;
            v71 = v69;
            if (v69)
              goto LABEL_120;
            v72 = &v46[16 * v48];
            v74 = *(_QWORD *)v72;
            v73 = *((_QWORD *)v72 + 1);
            v59 = __OFSUB__(v73, v74);
            v75 = v73 - v74;
            if (v59)
              goto LABEL_123;
            if (__OFADD__(v70, v75))
              goto LABEL_124;
            if (v70 + v75 >= v51)
            {
              v76 = v51 < v75;
LABEL_85:
              if (v76)
                v48 = v60;
              goto LABEL_87;
            }
LABEL_79:
            if ((v71 & 1) != 0)
              goto LABEL_119;
            v79 = &v46[16 * v48];
            v81 = *(_QWORD *)v79;
            v80 = *((_QWORD *)v79 + 1);
            v59 = __OFSUB__(v80, v81);
            v82 = v80 - v81;
            if (v59)
              goto LABEL_122;
            if (v82 < v70)
              goto LABEL_14;
LABEL_87:
            v87 = v48 - 1;
            if (v48 - 1 >= v13)
            {
              __break(1u);
LABEL_112:
              __break(1u);
LABEL_113:
              __break(1u);
LABEL_114:
              __break(1u);
LABEL_115:
              __break(1u);
LABEL_116:
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
              goto LABEL_134;
            }
            if (!v12)
              goto LABEL_137;
            v88 = v10;
            v89 = &v46[16 * v87];
            v90 = *(_QWORD *)v89;
            v91 = &v46[16 * v48];
            v92 = *((_QWORD *)v91 + 1);
            sub_1D7AFA3A8((id *)(v12 + 8 * *(_QWORD *)v89), (id *)(v12 + 8 * *(_QWORD *)v91), v12 + 8 * v92, __dst);
            if (v1)
              goto LABEL_109;
            if (v92 < v90)
              goto LABEL_112;
            if (v48 > *((_QWORD *)v88 + 2))
              goto LABEL_113;
            *(_QWORD *)v89 = v90;
            *(_QWORD *)&v46[16 * v87 + 8] = v92;
            v93 = *((_QWORD *)v88 + 2);
            if (v48 >= v93)
              goto LABEL_114;
            v10 = v88;
            v13 = v93 - 1;
            memmove(&v46[16 * v48], v91 + 16, 16 * (v93 - 1 - v48));
            *((_QWORD *)v88 + 2) = v93 - 1;
            v12 = v112;
            if (v93 <= 2)
              goto LABEL_14;
          }
        }
        v13 = 1;
LABEL_14:
        v4 = v108;
        if (v11 >= v108)
        {
          v2 = v1;
          if (v13 < 2)
          {
LABEL_109:
            swift_bridgeObjectRelease();
            *(_QWORD *)((v113 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
            sub_1D7B4A4B8();
            return swift_bridgeObjectRelease();
          }
LABEL_97:
          v95 = *v101;
          while (1)
          {
            v96 = v13 - 2;
            if (v13 < 2)
              goto LABEL_127;
            if (!v95)
              goto LABEL_139;
            v97 = *(_QWORD *)&v10[16 * v96 + 32];
            v98 = *(_QWORD *)&v10[16 * v13 + 24];
            sub_1D7AFA3A8((id *)(v95 + 8 * v97), (id *)(v95 + 8 * *(_QWORD *)&v10[16 * v13 + 16]), v95 + 8 * v98, __dst);
            if (v2)
              goto LABEL_109;
            if (v98 < v97)
              goto LABEL_128;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v10 = sub_1D7AFAA98((uint64_t)v10);
            if (v96 >= *((_QWORD *)v10 + 2))
              goto LABEL_129;
            v99 = &v10[16 * v96 + 32];
            *(_QWORD *)v99 = v97;
            *((_QWORD *)v99 + 1) = v98;
            v100 = *((_QWORD *)v10 + 2);
            if (v13 > v100)
              goto LABEL_130;
            memmove(&v10[16 * v13 + 16], &v10[16 * v13 + 32], 16 * (v100 - v13));
            *((_QWORD *)v10 + 2) = v100 - 1;
            v13 = v100 - 1;
            if (v100 <= 2)
              goto LABEL_109;
          }
        }
      }
    }
    result = sub_1D7B4A884();
    __break(1u);
    return result;
  }
  if (v4 < 0)
    goto LABEL_132;
  if (v4)
    return sub_1D7AFA238(0, v4, 1, a1);
  return result;
}

uint64_t sub_1D7AFA238(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v16 = result;
  if (a3 != a2)
  {
    v4 = a3;
    v18 = *a4;
    v5 = *a4 + 8 * a3 - 8;
LABEL_5:
    v6 = *(void **)(v18 + 8 * v4);
    v7 = v16;
    v17 = v5;
    while (1)
    {
      v8 = *(void **)v5;
      v9 = v6;
      v10 = v8;
      v11 = objc_msgSend(v9, sel_title);
      sub_1D7B4A3BC();

      v12 = objc_msgSend(v10, sel_title);
      sub_1D7B4A3BC();

      sub_1D7ABCCEC();
      v13 = sub_1D7B4A758();

      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if (v13 != -1)
      {
LABEL_4:
        ++v4;
        v5 = v17 + 8;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v18)
        break;
      v14 = *(void **)v5;
      v6 = *(void **)(v5 + 8);
      *(_QWORD *)v5 = v6;
      *(_QWORD *)(v5 + 8) = v14;
      v5 -= 8;
      if (v4 == ++v7)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1D7AFA3A8(id *a1, id *__src, unint64_t a3, char *__dst)
{
  id *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void **v12;
  void **v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  id *v20;
  char *v21;
  id *v22;
  id *v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t result;
  char *v33;
  char *v35;
  void **v36;
  id *v37;
  char *v39;
  void **v40;
  id *v41;

  v5 = __src;
  v6 = (char *)__src - (char *)a1;
  v7 = (char *)__src - (char *)a1 + 7;
  if ((char *)__src - (char *)a1 >= 0)
    v7 = (char *)__src - (char *)a1;
  v8 = v7 >> 3;
  v9 = a3 - (_QWORD)__src;
  v10 = a3 - (_QWORD)__src + 7;
  if ((uint64_t)(a3 - (_QWORD)__src) >= 0)
    v10 = a3 - (_QWORD)__src;
  v11 = v10 >> 3;
  v41 = a1;
  v40 = (void **)__dst;
  if (v8 >= v10 >> 3)
  {
    if (v9 >= -7)
    {
      if (__dst != (char *)__src || &__src[v11] <= (id *)__dst)
        memmove(__dst, __src, 8 * v11);
      v33 = __dst;
      v21 = &__dst[8 * v11];
      v39 = v21;
      v41 = v5;
      if (a1 < v5 && v9 >= 8)
      {
        v22 = (id *)(a3 - 8);
        v23 = v5;
        do
        {
          v35 = v21;
          v37 = v22 + 1;
          v25 = (void *)*((_QWORD *)v21 - 1);
          v21 -= 8;
          v24 = v25;
          v26 = *--v23;
          v27 = v24;
          v28 = v26;
          v29 = objc_msgSend(v27, sel_title);
          sub_1D7B4A3BC();

          v30 = objc_msgSend(v28, sel_title);
          sub_1D7B4A3BC();

          sub_1D7ABCCEC();
          v31 = sub_1D7B4A758();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v31 == -1)
          {
            v21 = v35;
            if (v37 != v5 || v22 >= v5)
              *v22 = *v23;
            v41 = v23;
          }
          else
          {
            v39 = v21;
            v23 = v5;
            if (v37 < (id *)v35 || v22 >= (id *)v35 || v37 != (id *)v35)
              *v22 = *(id *)v21;
          }
          if (v23 <= a1)
            break;
          --v22;
          v5 = v23;
        }
        while (v21 > v33);
      }
      goto LABEL_42;
    }
  }
  else if (v6 >= -7)
  {
    if (__dst != (char *)a1 || &a1[v8] <= (id *)__dst)
      memmove(__dst, a1, 8 * v8);
    v36 = (void **)&__dst[8 * v8];
    v39 = (char *)v36;
    if ((unint64_t)v5 < a3 && v6 >= 8)
    {
      v12 = (void **)__dst;
      v13 = a1;
      do
      {
        v14 = *v12;
        v15 = *v5;
        v16 = v14;
        v17 = objc_msgSend(v15, sel_title);
        sub_1D7B4A3BC();

        v18 = objc_msgSend(v16, sel_title);
        sub_1D7B4A3BC();

        sub_1D7ABCCEC();
        v19 = sub_1D7B4A758();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v19 == -1)
        {
          v20 = v5 + 1;
          if (v13 < v5 || v13 >= v20 || v13 != v5)
            *v13 = *v5;
        }
        else
        {
          if (v13 != v12)
            *v13 = *v12;
          v40 = ++v12;
          v20 = v5;
        }
        ++v13;
        if (v12 >= v36)
          break;
        v5 = v20;
      }
      while ((unint64_t)v20 < a3);
      v41 = v13;
    }
LABEL_42:
    sub_1D7AFA9F0((void **)&v41, (const void **)&v40, &v39);
    return 1;
  }
  result = sub_1D7B4A8E4();
  __break(1u);
  return result;
}

char *sub_1D7AFA7AC(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1D7AFC3E0();
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1D7AFA8A0(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 31;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -32)
  {
    result = (char *)sub_1D7B4A8E4();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 5;
    if (result != v3 || result >= &v3[32 * v7])
      return (char *)memmove(result, v3, 32 * v7);
  }
  return result;
}

char *sub_1D7AFA948(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 15;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -16)
  {
    result = (char *)sub_1D7B4A8E4();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
      return (char *)memmove(result, v3, 16 * v7);
  }
  return result;
}

char *sub_1D7AFA9F0(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 7;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -8)
  {
    result = (char *)sub_1D7B4A8E4();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
      return (char *)memmove(result, v3, 8 * v7);
  }
  return result;
}

char *sub_1D7AFAA98(uint64_t a1)
{
  return sub_1D7AFA7AC(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1D7AFAAAC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  uint64_t *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1D7B4A8A8();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1D7B4A8A8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1D7AFC5E4(0, &qword_1F014EFB8, (unint64_t *)&qword_1F014E870);
        sub_1D7AFC638((unint64_t *)&unk_1F014EFC0, &qword_1F014EFB8, (unint64_t *)&qword_1F014E870);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_1D7AE9880(v16, i, a3);
          v14 = *v13;
          swift_unknownObjectRetain();
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1D7ADE914(0, (unint64_t *)&qword_1F014E870);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1D7B4A8E4();
  __break(1u);
  return result;
}

uint64_t sub_1D7AFACE8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1D7B4A8A8();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1D7B4A8A8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1D7AE9C70(0, &qword_1F014EFA0, (unint64_t *)&unk_1F014F770, 0x1E0DC3F20, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1D7AFC59C((unint64_t *)&unk_1F014EFA8, &qword_1F014EFA0, (unint64_t *)&unk_1F014F770, 0x1E0DC3F20);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_1D7AE98D8(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1D7AAF6EC(0, (unint64_t *)&unk_1F014F770);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1D7B4A8E4();
  __break(1u);
  return result;
}

uint64_t sub_1D7AFAF2C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  uint64_t *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1D7B4A8A8();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1D7B4A8A8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1D7AFC5E4(0, &qword_1F014EF90, (unint64_t *)&unk_1F014EB10);
        sub_1D7AFC638(&qword_1F014EF98, &qword_1F014EF90, (unint64_t *)&unk_1F014EB10);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_1D7AE992C(v16, i, a3);
          v14 = *v13;
          swift_unknownObjectRetain();
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1D7ADE914(0, (unint64_t *)&unk_1F014EB10);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1D7B4A8E4();
  __break(1u);
  return result;
}

uint64_t sub_1D7AFB168(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1D7B4A8A8();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1D7B4A8A8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1D7AE9C70(0, &qword_1F014EF30, (unint64_t *)&qword_1F014D758, 0x1E0CB63B8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1D7AFC59C((unint64_t *)&unk_1F014EF38, &qword_1F014EF30, (unint64_t *)&qword_1F014D758, 0x1E0CB63B8);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_1D7AE98D8(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1D7AAF6EC(0, (unint64_t *)&qword_1F014D758);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1D7B4A8E4();
  __break(1u);
  return result;
}

uint64_t sub_1D7AFB3AC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  void (*v16[4])(id *);

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1D7B4A8A8();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1D7B4A8A8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1D7AE9C70(0, &qword_1F014EF78, (unint64_t *)&qword_1F014EF70, (uint64_t)off_1E9C3CA08, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1D7AFC59C((unint64_t *)&unk_1F014EF80, &qword_1F014EF78, (unint64_t *)&qword_1F014EF70, (uint64_t)off_1E9C3CA08);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_1D7AE9980(v16, i, a3);
          v14 = *v13;
          ((void (*)(void (**)(id *), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1D7AAF6EC(0, (unint64_t *)&qword_1F014EF70);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1D7B4A8E4();
  __break(1u);
  return result;
}

uint64_t sub_1D7AFB5F0(uint64_t a1)
{
  return sub_1D7AA60D8(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1D7AFB604(uint64_t a1)
{
  return sub_1D7AA6534(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

void sub_1D7AFB618()
{
  JUMPOUT(0x1D829E854);
}

void sub_1D7AFB62C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  _QWORD aBlock[6];

  v2 = sub_1D7B490A8();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x1E0C80A78](v2);
  v5 = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
  if (v5)
  {
    v6 = v5;
    v7 = (void *)sub_1D7B49084();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
    v8 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v9 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v9 + v8, (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
    aBlock[4] = sub_1D7AFC348;
    aBlock[5] = v9;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D7AF8234;
    aBlock[3] = &block_descriptor_8;
    v10 = _Block_copy(aBlock);
    swift_release();
    objc_msgSend(v6, sel_openURL_configuration_completionHandler_, v7, 0, v10);
    _Block_release(v10);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1D7AFB79C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8HealthUI45ClinicalAccountsOverviewDataSourceAndDelegate_accounts);
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = v2 + 1;
    if (!__OFADD__(v2, 1))
      return result;
LABEL_6:
    __break(1u);
    return result;
  }
  swift_bridgeObjectRetain();
  v4 = sub_1D7B4A8A8();
  swift_bridgeObjectRelease();
  result = v4 + 1;
  if (__OFADD__(v4, 1))
    goto LABEL_6;
  return result;
}

unint64_t sub_1D7AFB80C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  BOOL v23;
  id v24;
  char *v25;
  void *v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  id v31;
  char *v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t result;
  unint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  void *v43;
  id v44;
  Class v45;
  id v46;
  uint64_t v47;
  id v48;
  id v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  id v55;
  void *v56;
  void *v57;
  id v58;
  id v59;
  uint64_t v60;
  void *v61;
  id v62;
  void (*v63)(id *, _QWORD);
  uint64_t *v64;
  void *v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  uint64_t v71;
  uint64_t *boxed_opaque_existential_0;
  void *v73;
  id v74;
  id v75;
  id v76;
  id v77;
  uint64_t v78;
  id v79;
  id v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  id v92[3];
  uint64_t v93;
  uint64_t v94;

  v91 = a1;
  v2 = sub_1D7B491C8();
  v86 = *(_QWORD *)(v2 - 8);
  v87 = v2;
  MEMORY[0x1E0C80A78](v2);
  v85 = (char *)&v82 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1D7B49708();
  v89 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v88 = (char *)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v84 = (char *)&v82 - v7;
  v8 = sub_1D7B49474();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v82 - v13;
  v15 = OBJC_IVAR____TtC8HealthUI45ClinicalAccountsOverviewDataSourceAndDelegate_accounts;
  v90 = v1;
  v16 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8HealthUI45ClinicalAccountsOverviewDataSourceAndDelegate_accounts);
  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    v17 = sub_1D7B4A8A8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v18(v14, v91, v8);
  if (v17)
  {
    v19 = *(void (**)(char *, uint64_t))(v9 + 8);
    v19(v14, v8);
  }
  else
  {
    v83 = v4;
    v20 = sub_1D7B49444();
    v21 = *(_QWORD *)(v90 + v15);
    if (v21 >> 62)
    {
      swift_bridgeObjectRetain();
      v22 = sub_1D7B4A8A8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v19 = *(void (**)(char *, uint64_t))(v9 + 8);
    v19(v14, v8);
    v23 = v20 == v22;
    v4 = v83;
    if (v23)
    {
      v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3D50]), sel_initWithStyle_reuseIdentifier_, 0, 0);
      v25 = v84;
      MEMORY[0x1D829E59C]();
      v26 = (void *)sub_1D7B4A38C();
      v27 = HKHealthRecordsAPILocalizedString(v26);

      if (v27)
      {
        sub_1D7B4A3BC();

      }
      v71 = v89;
      sub_1D7B496FC();
      v93 = v4;
      v94 = MEMORY[0x1E0DC2398];
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)v92);
      (*(void (**)(uint64_t *, char *, uint64_t))(v71 + 16))(boxed_opaque_existential_0, v25, v4);
      MEMORY[0x1D829E590](v92);
      v48 = v24;
      v73 = (void *)sub_1D7B4A4A0();
      v74 = HKUIJoinStringsForAutomationIdentifier(v73);

      objc_msgSend(v48, sel_setAccessibilityIdentifier_, v74);
      v75 = objc_msgSend(v48, sel_traitCollection);
      v76 = objc_msgSend(v75, sel_userInterfaceIdiom);

      if (v76 != (id)6)
      {
        v77 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemBackgroundColor);
        objc_msgSend(v48, sel_setBackgroundColor_, v77);

      }
      (*(void (**)(char *, uint64_t))(v71 + 8))(v25, v4);
      return (unint64_t)v48;
    }
  }
  v18(v12, v91, v8);
  v28 = sub_1D7B49444();
  v29 = *(_QWORD *)(v90 + v15);
  if (v29 >> 62)
  {
    swift_bridgeObjectRetain();
    v30 = sub_1D7B4A8A8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v30 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v19(v12, v8);
  if (v28 == v30)
  {
    v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3D50]), sel_initWithStyle_reuseIdentifier_, 0, 0);
    v32 = v88;
    MEMORY[0x1D829E59C]();
    v33 = (void *)sub_1D7B4A38C();
    v34 = HKHealthRecordsAPILocalizedString(v33);

    if (v34)
    {
      sub_1D7B4A3BC();

    }
    v60 = v89;
    sub_1D7B496FC();
    v61 = (void *)objc_opt_self();
    v62 = objc_msgSend(v61, sel_hk_appKeyColor);
    v63 = (void (*)(id *, _QWORD))sub_1D7B496F0();
    sub_1D7B496E4();
    v63(v92, 0);
    v93 = v4;
    v94 = MEMORY[0x1E0DC2398];
    v64 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)v92);
    (*(void (**)(uint64_t *, char *, uint64_t))(v60 + 16))(v64, v32, v4);
    MEMORY[0x1D829E590](v92);
    v48 = v31;
    v65 = (void *)sub_1D7B4A4A0();
    v66 = HKUIJoinStringsForAutomationIdentifier(v65);

    objc_msgSend(v48, sel_setAccessibilityIdentifier_, v66);
    v67 = objc_msgSend(v48, sel_traitCollection);
    v68 = objc_msgSend(v67, sel_userInterfaceIdiom);

    if (v68 != (id)6)
    {
      v69 = objc_msgSend(v61, sel_secondarySystemBackgroundColor);
      objc_msgSend(v48, sel_setBackgroundColor_, v69);

    }
    (*(void (**)(char *, uint64_t))(v60 + 8))(v32, v4);
    return (unint64_t)v48;
  }
  v35 = sub_1D7B49444();
  v36 = v35;
  v37 = *(_QWORD *)(v90 + v15);
  if (!(v37 >> 62))
  {
    if (v35 < *(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_18;
LABEL_38:
    v48 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3D50]), sel_initWithStyle_reuseIdentifier_, 0, 0);
    v79 = objc_msgSend(v48, sel_traitCollection);
    v80 = objc_msgSend(v79, sel_userInterfaceIdiom);

    if (v80 != (id)6)
    {
      v81 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemBackgroundColor);
      objc_msgSend(v48, sel_setBackgroundColor_, v81);

    }
    return (unint64_t)v48;
  }
  swift_bridgeObjectRetain();
  v78 = sub_1D7B4A8A8();
  swift_bridgeObjectRelease();
  if (v36 >= v78)
    goto LABEL_38;
LABEL_18:
  result = sub_1D7B49444();
  v39 = result;
  v40 = *(_QWORD *)(v90 + v15);
  if ((v40 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v41 = (id)MEMORY[0x1D829E758](v39, v40);
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)((v40 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v41 = *(id *)(v40 + 8 * result + 32);
LABEL_22:
    v42 = v90;
    v43 = *(void **)(v90 + OBJC_IVAR____TtC8HealthUI45ClinicalAccountsOverviewDataSourceAndDelegate_context);
    v44 = v41;
    sub_1D7B0A3E0(v44, v43, 1, (uint64_t)v92);
    sub_1D7AFC490(0);
    v46 = objc_msgSend(objc_allocWithZone(v45), sel_initWithStyle_reuseIdentifier_, 0, 0);
    objc_msgSend(v46, sel_setSelectionStyle_, 3);
    objc_msgSend(v46, sel_setAccessoryType_, 1);
    sub_1D7ABB0F8(0, (unint64_t *)&qword_1F01492C0);
    v47 = swift_allocObject();
    *(_OWORD *)(v47 + 16) = xmmword_1D7B85700;
    *(_QWORD *)(v47 + 32) = 0x746E756F636341;
    *(_QWORD *)(v47 + 40) = 0xE700000000000000;
    v48 = v46;
    v49 = objc_msgSend(v44, sel_identifier);
    v50 = v85;
    sub_1D7B491B0();

    v51 = sub_1D7B491A4();
    v53 = v52;
    (*(void (**)(char *, uint64_t))(v86 + 8))(v50, v87);
    *(_QWORD *)(v47 + 48) = v51;
    *(_QWORD *)(v47 + 56) = v53;
    *(_QWORD *)(v47 + 64) = 1819043139;
    *(_QWORD *)(v47 + 72) = 0xE400000000000000;
    v54 = (void *)sub_1D7B4A4A0();
    swift_bridgeObjectRelease();
    v55 = HKUIJoinStringsForAutomationIdentifier(v54);

    objc_msgSend(v48, sel_setAccessibilityIdentifier_, v55);
    v56 = (void *)MEMORY[0x1D82A00A8](v42 + OBJC_IVAR____TtC8HealthUI45ClinicalAccountsOverviewDataSourceAndDelegate_controller);
    if (v56)
    {
      v57 = v56;
      sub_1D7AF8B00((uint64_t)v92, v56);

    }
    v58 = objc_msgSend(v48, sel_traitCollection);
    v59 = objc_msgSend(v58, sel_userInterfaceIdiom);

    if (v59 == (id)6)
    {

    }
    else
    {
      v70 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemBackgroundColor);
      objc_msgSend(v48, sel_setBackgroundColor_, v70);

    }
    sub_1D7AFC52C(v92);
    return (unint64_t)v48;
  }
  __break(1u);
  return result;
}

void sub_1D7AFC1C0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = v0;
  v2 = *MEMORY[0x1E0DEEDD8] & *(_QWORD *)v0;
  v3 = *(_QWORD *)(v2 + 0x50);
  v4 = sub_1D7B4A6F8();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v8 - v5;
  v7 = qword_1F014EE90;
  v9 = *(_QWORD *)(v2 + 88);
  MEMORY[0x1D829FF28](MEMORY[0x1E0CE0798], v4, &v9);
  sub_1D7B49B58();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v6, 1, 1, v3);
  *(_QWORD *)&v1[v7] = sub_1D7B49B34();

  sub_1D7B4A890();
  __break(1u);
}

uint64_t sub_1D7AFC2E8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1D7B490A8();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

void sub_1D7AFC348(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_1D7B490A8() - 8) + 80);
  sub_1D7AF7EE4(a1, a2, v2 + ((v5 + 16) & ~v5));
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

unint64_t sub_1D7AFC3AC()
{
  unint64_t result;

  result = qword_1F014EF20;
  if (!qword_1F014EF20)
  {
    type metadata accessor for ClinicalAccountsOverviewDataSourceAndDelegate();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1F014EF20);
  }
  return result;
}

void sub_1D7AFC3E0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F014EF48)
  {
    sub_1D7AFC434();
    v0 = sub_1D7B4A920();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F014EF48);
  }
}

void sub_1D7AFC434()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F014EF50)
  {
    v0 = sub_1D7B4A5D8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F014EF50);
  }
}

void sub_1D7AFC490(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1F014EF58)
  {
    v2 = sub_1D7AFC4E8();
    v4 = type metadata accessor for HostingTableViewCell(a1, (uint64_t)&type metadata for ClinicalAccountRow, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1F014EF58);
  }
}

unint64_t sub_1D7AFC4E8()
{
  unint64_t result;

  result = qword_1F014EF60;
  if (!qword_1F014EF60)
  {
    result = MEMORY[0x1D829FF28](&unk_1D7B85EF4, &type metadata for ClinicalAccountRow);
    atomic_store(result, (unint64_t *)&qword_1F014EF60);
  }
  return result;
}

id *sub_1D7AFC52C(id *a1)
{
  destroy for ClinicalAccountRow(a1);
  return a1;
}

uint64_t sub_1D7AFC560(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for ClinicalAccountRow(a2, a1);
  return a2;
}

uint64_t sub_1D7AFC59C(unint64_t *a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_1D7AE9C70(255, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1D829FF28](MEMORY[0x1E0DEAF50], v6);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1D7AFC5E4(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1D7ADE914(255, a3);
    v4 = sub_1D7B4A4E8();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1D7AFC638(unint64_t *a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1D7AFC5E4(255, a2, a3);
    result = MEMORY[0x1D829FF28](MEMORY[0x1E0DEAF50], v5);
    atomic_store(result, a1);
  }
  return result;
}

id OverlayConfiguration.attributes.getter()
{
  id *v0;
  id v1;
  id v2;

  v1 = *v0;
  v2 = *v0;
  return v1;
}

void OverlayConfiguration.attributes.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

uint64_t (*OverlayConfiguration.attributes.modify())()
{
  return nullsub_1;
}

double OverlayConfiguration.frame.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void OverlayConfiguration.frame.setter(double a1, double a2, double a3, double a4)
{
  double *v4;

  v4[1] = a1;
  v4[2] = a2;
  v4[3] = a3;
  v4[4] = a4;
}

uint64_t (*OverlayConfiguration.frame.modify())()
{
  return nullsub_1;
}

uint64_t OverlayConfiguration.kind.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t OverlayConfiguration.indexPath.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for OverlayConfiguration() + 28);
  v4 = sub_1D7B49474();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for OverlayConfiguration()
{
  uint64_t result;

  result = qword_1F014F088;
  if (!qword_1F014F088)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t OverlayConfiguration.init(attributes:frame:kind:indexPath:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>, double a8@<D2>, double a9@<D3>)
{
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)a5 = a1;
  *(double *)(a5 + 8) = a6;
  *(double *)(a5 + 16) = a7;
  *(double *)(a5 + 24) = a8;
  *(double *)(a5 + 32) = a9;
  *(_QWORD *)(a5 + 40) = a2;
  *(_QWORD *)(a5 + 48) = a3;
  v10 = a5 + *(int *)(type metadata accessor for OverlayConfiguration() + 28);
  v11 = sub_1D7B49474();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10, a4, v11);
}

uint64_t dispatch thunk of static ConfigurableDecorationView.elementKind.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of static ConfigurableDecorationView.configure(attributes:in:initialFrame:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

char *initializeBufferWithCopyOfBuffer for OverlayConfiguration(char *a1, char **a2, uint64_t a3)
{
  int v3;
  char *v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  char *v11;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v5 = a1;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
    v6 = *(int *)(a3 + 28);
    v7 = &a1[v6];
    v8 = (uint64_t)a2 + v6;
    v9 = sub_1D7B49474();
    v10 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    v11 = v4;
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t destroy for OverlayConfiguration(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  v4 = (char *)a1 + *(int *)(a2 + 28);
  v5 = sub_1D7B49474();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for OverlayConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  id v10;

  v4 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v5 = *(int *)(a3 + 28);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_1D7B49474();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  v10 = v4;
  v9(v6, v7, v8);
  return a1;
}

uint64_t assignWithCopy for OverlayConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(void **)a1;
  v7 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v7;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v9 = *(int *)(a3 + 28);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_1D7B49474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

uint64_t initializeWithTake for OverlayConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1D7B49474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for OverlayConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v7 = *(int *)(a3 + 28);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D7B49474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for OverlayConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D7AFCB08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 40);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1D7B49474();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for OverlayConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D7AFCB90(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 40) = (a2 - 1);
  }
  else
  {
    v7 = sub_1D7B49474();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1D7AFCC04()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D7B49474();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t View.hideCancellationButton()()
{
  sub_1D7AFCE14(0);
  sub_1D7AFCE88();
  sub_1D7AFCEF0();
  swift_getOpaqueTypeConformance2();
  return sub_1D7B49F6C();
}

uint64_t sub_1D7AFCD20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  uint64_t v8;

  v0 = sub_1D7B49C24();
  MEMORY[0x1E0C80A78](v0);
  sub_1D7AFCE88();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D7B49C18();
  sub_1D7B49894();
  v6 = sub_1D7AFCEF0();
  MEMORY[0x1D829DBA0](v5, v2, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_1D7AFCE14(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  if (!qword_1F014F0C8)
  {
    sub_1D7AFCE88();
    v5[0] = v2;
    v5[1] = sub_1D7AFCEF0();
    v3 = MEMORY[0x1D829FEEC](a1, v5, MEMORY[0x1E0CDBE10], 0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1F014F0C8);
  }
}

void sub_1D7AFCE88()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F014F0D0)
  {
    v0 = sub_1D7B498A0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F014F0D0);
  }
}

unint64_t sub_1D7AFCEF0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F014F0D8;
  if (!qword_1F014F0D8)
  {
    sub_1D7AFCE88();
    result = MEMORY[0x1D829FF28](MEMORY[0x1E0CD8918], v1);
    atomic_store(result, (unint64_t *)&qword_1F014F0D8);
  }
  return result;
}

uint64_t sub_1D7AFCF38()
{
  sub_1D7AFCE14(255);
  sub_1D7AFCE88();
  sub_1D7AFCEF0();
  swift_getOpaqueTypeConformance2();
  return swift_getOpaqueTypeConformance2();
}

void sub_1D7AFCFB4(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

void sub_1D7AFCFC4(unint64_t a1, uint64_t a2, int a3)
{
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  int v29;
  uint64_t v30;
  unint64_t v31;
  void *v32;
  uint64_t v33;

  LODWORD(v3) = a3;
  v4 = a2;
  v5 = a1;
  if ((a3 & 1) != 0 || a2 != 6)
  {
    v18 = v32;
    v19 = sub_1D7AFE050(v5);

    v20 = *(_QWORD *)(v19 + 16);
    if (v20)
    {
      v21 = 0;
      v22 = 0;
      do
      {
        v23 = *(_QWORD *)(v19 + 8 * v21 + 32);
        v24 = __OFADD__(v22, v23);
        v22 += v23;
        if (v24)
        {
          __break(1u);
          goto LABEL_27;
        }
        ++v21;
      }
      while (v20 != v21);
LABEL_24:
      swift_bridgeObjectRelease();
    }
    else
    {
LABEL_31:
      swift_bridgeObjectRelease();
      v22 = 0;
    }
    sub_1D7AFD74C(v22, v4, v3 & 1);
  }
  else
  {
    if (a1 >> 62)
      goto LABEL_29;
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v7 = v32;
    if (!v6)
      goto LABEL_30;
    while (1)
    {
      v33 = MEMORY[0x1E0DEE9D8];
      sub_1D7AA5F64(0, v6 & ~(v6 >> 63), 0);
      if (v6 < 0)
        break;
      v29 = v3;
      v8 = 0;
      v9 = v33;
      v30 = v4;
      v31 = v5 & 0xC000000000000001;
      v4 = v5;
      while (v6 != v8)
      {
        if (v31)
          v10 = (char *)MEMORY[0x1D829E758](v8, v5);
        else
          v10 = (char *)*(id *)(v5 + 8 * v8 + 32);
        v11 = v10;
        __swift_project_boxed_opaque_existential_0(&v10[OBJC_IVAR____TtC8HealthUI17BalanceChartPoint_collection], *(_QWORD *)&v10[OBJC_IVAR____TtC8HealthUI17BalanceChartPoint_collection + 24]);
        v12 = sub_1D7B49618();
        v13 = v32;
        v14 = sub_1D7AFDDE4(v12, (uint64_t)v13);
        swift_bridgeObjectRelease();

        v15 = *(_QWORD *)(v14 + 16);
        swift_bridgeObjectRelease();
        v17 = *(_QWORD *)(v33 + 16);
        v16 = *(_QWORD *)(v33 + 24);
        v3 = v17 + 1;
        if (v17 >= v16 >> 1)
          sub_1D7AA5F64(v16 > 1, v17 + 1, 1);
        ++v8;
        *(_QWORD *)(v33 + 16) = v3;
        *(_QWORD *)(v33 + 8 * v17 + 32) = v15;
        v5 = v4;
        if (v6 == v8)
        {

          v4 = v30;
          LODWORD(v3) = v29;
          v25 = *(_QWORD *)(v33 + 16);
          if (v25)
            goto LABEL_21;
          goto LABEL_31;
        }
      }
LABEL_27:
      __break(1u);
      while (1)
      {
        __break(1u);
LABEL_29:
        v28 = v32;
        swift_bridgeObjectRetain();
        v6 = sub_1D7B4A8A8();
        swift_bridgeObjectRelease();
        if (v6)
          break;
LABEL_30:

        v9 = MEMORY[0x1E0DEE9D8];
        v25 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
        if (!v25)
          goto LABEL_31;
LABEL_21:
        v26 = 0;
        v22 = 0;
        while (1)
        {
          v27 = *(_QWORD *)(v9 + 8 * v26 + 32);
          v24 = __OFADD__(v22, v27);
          v22 += v27;
          if (v24)
            break;
          if (v25 == ++v26)
            goto LABEL_24;
        }
      }
    }
    __break(1u);
  }
}

uint64_t sub_1D7AFD288@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, _QWORD, uint64_t);
  void (*v18)(char *, uint64_t);
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void (*v25)(char *, unint64_t, uint64_t);
  void (*v26)(char *, uint64_t);
  char v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  void (*v31)(char *, unint64_t, uint64_t);
  void (*v32)(char *, uint64_t);
  char v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  void (*v44)(char *, _QWORD, uint64_t);
  char v45;
  void (*v46)(char *, uint64_t);
  char *v47;
  char *v48;
  char v49;
  uint64_t result;
  uint64_t *v51;
  uint64_t v52;
  _QWORD v53[2];
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  char *v57;
  _QWORD *v58;
  void (*v59)(char *, char *, uint64_t);
  void (*v60)(char *, uint64_t);
  char *v61;
  void (*v62)(char *, _QWORD, uint64_t);
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;

  v55 = a2;
  v68 = sub_1D7B495C4();
  v66 = *(_QWORD *)(v68 - 8);
  v3 = MEMORY[0x1E0C80A78](v68);
  v67 = (char *)v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v53 - v5;
  v7 = sub_1D7B49588();
  v8 = MEMORY[0x1E0C80A78](v7);
  v64 = (char *)v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v65 = (char *)v53 - v11;
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v53 - v12;
  v14 = *a1;
  v16 = v15;
  v17 = *(void (**)(char *, _QWORD, uint64_t))(v15 + 104);
  v17((char *)v53 - v12, *MEMORY[0x1E0D29088], v7);
  LODWORD(v62) = sub_1D7B4957C();
  v18 = *(void (**)(char *, uint64_t))(v16 + 8);
  v69 = v7;
  v60 = v18;
  v18(v13, v7);
  v19 = (_QWORD *)(v14 + OBJC_IVAR____TtC8HealthUI17BalanceChartPoint_collection);
  __swift_project_boxed_opaque_existential_0(v19, v19[3]);
  v20 = sub_1D7B49618();
  v21 = *(_QWORD *)(v20 + 16);
  if ((v62 & 1) == 0)
  {
    if (v21)
    {
      v28 = (*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
      v59 = (void (*)(char *, char *, uint64_t))v20;
      v29 = v20 + v28;
      v30 = *(_QWORD *)(v66 + 72);
      v31 = *(void (**)(char *, unint64_t, uint64_t))(v66 + 16);
      v32 = v60;
      while (1)
      {
        v31(v6, v29, v68);
        sub_1D7B49570();
        v33 = sub_1D7B4957C();
        v32(v13, v69);
        if ((v33 & 1) != 0)
          break;
        v29 += v30;
        if (!--v21)
          goto LABEL_23;
      }
      result = swift_bridgeObjectRelease();
      v52 = 1;
      goto LABEL_24;
    }
LABEL_23:
    result = swift_bridgeObjectRelease();
    v52 = 0;
LABEL_24:
    v51 = v55;
    goto LABEL_25;
  }
  v62 = v17;
  v63 = v16;
  v61 = v13;
  v58 = v19;
  if (v21)
  {
    v22 = (*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
    v59 = (void (*)(char *, char *, uint64_t))v20;
    v23 = v20 + v22;
    v24 = *(_QWORD *)(v66 + 72);
    v25 = *(void (**)(char *, unint64_t, uint64_t))(v66 + 16);
    v26 = v60;
    while (1)
    {
      v25(v6, v23, v68);
      sub_1D7B49570();
      v27 = sub_1D7B4957C();
      v26(v13, v69);
      if ((v27 & 1) != 0)
        break;
      v23 += v24;
      if (!--v21)
      {
        swift_bridgeObjectRelease();
        v54 = 0;
        goto LABEL_14;
      }
    }
    swift_bridgeObjectRelease();
    v54 = 1;
LABEL_14:
    v34 = v67;
    v35 = v68;
    v36 = v65;
  }
  else
  {
    swift_bridgeObjectRelease();
    v54 = 0;
    v34 = v67;
    v35 = v68;
    v36 = v65;
    v26 = v60;
  }
  __swift_project_boxed_opaque_existential_0(v58, v58[3]);
  v37 = sub_1D7B49618();
  v38 = *(_QWORD *)(v37 + 16);
  if (v38)
  {
    v39 = *(unsigned __int8 *)(v66 + 80);
    v53[1] = v37;
    v40 = v37 + ((v39 + 32) & ~v39);
    LODWORD(v60) = *MEMORY[0x1E0D29080];
    LODWORD(v58) = *MEMORY[0x1E0D29078];
    v56 = *(_QWORD *)(v66 + 72);
    v57 = v6;
    v59 = *(void (**)(char *, char *, uint64_t))(v66 + 16);
    v41 = v61;
    while (1)
    {
      v68 = v38;
      v42 = v59;
      v59(v34, (char *)v40, v35);
      v42(v6, v34, v35);
      sub_1D7B49570();
      v43 = v69;
      v44 = v62;
      v62(v41, v60, v69);
      v45 = sub_1D7B4957C();
      v26(v41, v43);
      v46 = v26;
      v47 = v36;
      v48 = v64;
      (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v64, v47, v43);
      if ((v45 & 1) != 0)
        break;
      v44(v41, v58, v43);
      v49 = sub_1D7B4957C();
      v46(v41, v43);
      v46(v47, v43);
      v46(v48, v43);
      (*(void (**)(char *, uint64_t))(v66 + 8))(v67, v35);
      if ((v49 & 1) != 0)
        goto LABEL_23;
      v26 = v46;
      v6 = v57;
      v40 += v56;
      v34 = v67;
      v38 = v68 - 1;
      v36 = v65;
      if (v68 == 1)
        goto LABEL_20;
    }
    v46(v47, v43);
    v46(v48, v43);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v67, v35);
    goto LABEL_23;
  }
LABEL_20:
  result = swift_bridgeObjectRelease();
  v51 = v55;
  v52 = v54;
LABEL_25:
  *v51 = v52;
  return result;
}

void sub_1D7AFD74C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t (*v27)(char *, uint64_t);
  int v28;
  int v29;
  char *v30;
  void *v31;
  void *v32;
  id v33;
  char *v34;
  uint64_t (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  int v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v7 = sub_1D7B49588();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v46 - v12;
  if (a1 < 1)
  {
    v21 = (void *)sub_1D7B4A38C();
    v22 = HKUILocalizedString(v21);

    if (!v22)
    {
      __break(1u);
      return;
    }
    v52 = sub_1D7B4A3BC();
    v18 = v23;

    if ((a3 & 1) == 0)
      goto LABEL_3;
LABEL_6:
    v48 = 0;
    v20 = 0;
    goto LABEL_7;
  }
  sub_1D7ADC2F0();
  v14 = swift_allocObject();
  v15 = MEMORY[0x1E0DEB418];
  *(_OWORD *)(v14 + 16) = xmmword_1D7B84630;
  v16 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v14 + 56) = v15;
  *(_QWORD *)(v14 + 64) = v16;
  *(_QWORD *)(v14 + 32) = a1;
  v52 = sub_1D7B4A398();
  v18 = v17;
  swift_bridgeObjectRelease();
  if ((a3 & 1) != 0)
    goto LABEL_6;
LABEL_3:
  v48 = sub_1D7AFE3A8(a1, a2, 0);
  v20 = v19;
LABEL_7:
  v24 = objc_msgSend(objc_allocWithZone((Class)HKDisplayTypeContextItem), sel_init);
  v50 = v3;
  v25 = v3 + OBJC_IVAR____TtC8HealthUI35BalanceClassificationOverlayContext_selectedClassification;
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v26(v13, v3 + OBJC_IVAR____TtC8HealthUI35BalanceClassificationOverlayContext_selectedClassification, v7);
  v47 = v8;
  v27 = *(uint64_t (**)(char *, uint64_t))(v8 + 88);
  v28 = v27(v13, v7);
  v29 = *MEMORY[0x1E0D29080];
  v53 = v18;
  v51 = v20;
  v49 = v29;
  if (v28 == v29)
  {
    v30 = v11;
  }
  else if (v28 == *MEMORY[0x1E0D29078])
  {
    v30 = v11;
  }
  else if (v28 == *MEMORY[0x1E0D29088])
  {
    v30 = v11;
  }
  else
  {
    v30 = v11;
    if (v28 != *MEMORY[0x1E0D29068])
      (*(void (**)(char *, uint64_t))(v47 + 8))(v13, v7);
  }
  v31 = (void *)objc_opt_self();
  v32 = (void *)sub_1D7B4A38C();
  swift_bridgeObjectRelease();
  v33 = objc_msgSend(v31, sel_hk_chartOverlayAccessibilityIdentifier_, v32);

  if (v33)
  {
    v54 = 0;
    v55 = 0;
    sub_1D7B4A3B0();

    v34 = v30;
    if (v55)
    {
      v33 = (id)sub_1D7B4A38C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v33 = 0;
    }
  }
  else
  {
    v34 = v30;
  }
  v35 = v27;
  objc_msgSend(v24, sel_setAccessibilityIdentifier_, v33);

  v36 = *(_QWORD *)(v50 + OBJC_IVAR____TtC8HealthUI35BalanceClassificationOverlayContext_mode);
  if (v36 == 1)
    sub_1D7B22B40();
  else
    sub_1D7B22DB8();
  v37 = v51;
  v38 = (void *)sub_1D7B4A38C();
  swift_bridgeObjectRelease();
  objc_msgSend(v24, sel_setTitle_, v38);

  v39 = objc_msgSend((id)objc_opt_self(), sel_defaultMetricColorsForOverlayMode_, v36);
  objc_msgSend(v24, sel_setMetricColors_, v39);

  v26(v34, v25, v7);
  v40 = v35(v34, v7);
  if (v40 == v49 || v40 == *MEMORY[0x1E0D29078])
  {
    sub_1D7AAD204();
    v42 = v43;
  }
  else
  {
    sub_1D7AAD1F0();
    v42 = v41;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v34, v7);
  }
  objc_msgSend(v24, sel_setSelectedMetricColors_, v42);

  v44 = (void *)sub_1D7B4A38C();
  swift_bridgeObjectRelease();
  objc_msgSend(v24, sel_setValue_, v44);

  if (v37)
  {
    v45 = (void *)sub_1D7B4A38C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v45 = 0;
  }
  objc_msgSend(v24, sel_setUnit_, v45);

}

void sub_1D7AFDC48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8HealthUI35BalanceClassificationOverlayContext_selectedClassification;
  v2 = sub_1D7B49588();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

}

id sub_1D7AFDC94()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BalanceClassificationOverlayContext();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D7AFDD18()
{
  return type metadata accessor for BalanceClassificationOverlayContext();
}

uint64_t type metadata accessor for BalanceClassificationOverlayContext()
{
  uint64_t result;

  result = qword_1F014F108;
  if (!qword_1F014F108)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D7AFDD5C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D7B49588();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1D7AFDDE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  char v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  char *v38;
  uint64_t v39;

  v4 = sub_1D7B49588();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v36 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D7B495C4();
  v8 = MEMORY[0x1E0C80A78](v7);
  v38 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v37 = (char *)&v29 - v11;
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v29 - v13;
  result = MEMORY[0x1E0DEE9D8];
  v39 = MEMORY[0x1E0DEE9D8];
  v16 = *(_QWORD *)(a1 + 16);
  if (v16)
  {
    v34 = a2 + OBJC_IVAR____TtC8HealthUI35BalanceClassificationOverlayContext_selectedClassification;
    v35 = v5;
    v17 = *(_QWORD *)(v12 + 72);
    v30 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    v31 = v12;
    v18 = (char *)(a1 + v30);
    v19 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    v32 = v4;
    v33 = v19;
    v20 = v4;
    v21 = v12;
    do
    {
      v22 = v33;
      v33(v14, v18, v7);
      v22(v37, v14, v7);
      v23 = v36;
      sub_1D7B49570();
      v24 = sub_1D7B4957C();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v23, v20);
      if ((v24 & 1) != 0)
      {
        v25 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
        v25(v38, v14, v7);
        v26 = v39;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1D7AA602C(0, *(_QWORD *)(v26 + 16) + 1, 1);
          v26 = v39;
        }
        v28 = *(_QWORD *)(v26 + 16);
        v27 = *(_QWORD *)(v26 + 24);
        if (v28 >= v27 >> 1)
        {
          sub_1D7AA602C(v27 > 1, v28 + 1, 1);
          v26 = v39;
        }
        *(_QWORD *)(v26 + 16) = v28 + 1;
        v25((char *)(v26 + v30 + v28 * v17), v38, v7);
        v39 = v26;
        v21 = v31;
        v20 = v32;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v21 + 8))(v14, v7);
      }
      v18 += v17;
      --v16;
    }
    while (v16);
    return v39;
  }
  return result;
}

uint64_t sub_1D7AFE050(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;

  v2 = v1;
  if (a1 >> 62)
    goto LABEL_18;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v5 = MEMORY[0x1E0DEE9D8];
    if (!v4)
      return v5;
    v15 = MEMORY[0x1E0DEE9D8];
    result = sub_1D7AA5F64(0, v4 & ~(v4 >> 63), 0);
    if (v4 < 0)
      break;
    v7 = 0;
    v5 = v15;
    while (v4 != v7)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v8 = (id)MEMORY[0x1D829E758](v7, a1);
      else
        v8 = *(id *)(a1 + 8 * v7 + 32);
      v9 = v8;
      v13 = v8;
      sub_1D7AFD288((uint64_t *)&v13, &v14);
      if (v2)
      {
        swift_release();

        return v5;
      }
      v2 = 0;

      v10 = v14;
      v15 = v5;
      v12 = *(_QWORD *)(v5 + 16);
      v11 = *(_QWORD *)(v5 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_1D7AA5F64(v11 > 1, v12 + 1, 1);
        v5 = v15;
      }
      ++v7;
      *(_QWORD *)(v5 + 16) = v12 + 1;
      *(_QWORD *)(v5 + 8 * v12 + 32) = v10;
      if (v4 == v7)
        return v5;
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    v4 = sub_1D7B4A8A8();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

id sub_1D7AFE1D0(void *a1, void *a2, char *a3, uint64_t a4)
{
  char *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, uint64_t, uint64_t);
  objc_class *v13;
  char *v14;
  char *v15;
  id v16;
  id v17;
  id v18;
  void (*v19)(char *, uint64_t);
  id v20;
  id v21;
  objc_class *v22;
  id v23;
  uint64_t v25;
  uint64_t v26;
  objc_super v27;
  objc_super v28;

  v26 = a4;
  v8 = sub_1D7B49588();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v12(&v4[OBJC_IVAR____TtC8HealthUI35BalanceClassificationOverlayContext_selectedClassification], (uint64_t)a3, v8);
  v12(v11, (uint64_t)a3, v8);
  v13 = (objc_class *)type metadata accessor for BalanceClassificationDateRangeDataSourceDelegate();
  v14 = (char *)objc_allocWithZone(v13);
  *(_QWORD *)&v14[OBJC_IVAR____TtC8HealthUI48BalanceClassificationDateRangeDataSourceDelegate_applicationItems] = a2;
  *(_QWORD *)&v14[OBJC_IVAR____TtC8HealthUI48BalanceClassificationDateRangeDataSourceDelegate_baseDisplayType] = a1;
  v12(&v14[OBJC_IVAR____TtC8HealthUI48BalanceClassificationDateRangeDataSourceDelegate_classification], (uint64_t)v11, v8);
  v28.receiver = v14;
  v28.super_class = v13;
  v15 = v4;
  v16 = a2;
  v17 = a1;
  v18 = objc_msgSendSuper2(&v28, sel_init);
  v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v19(v11, v8);
  *(_QWORD *)&v15[OBJC_IVAR____TtC8HealthUI35BalanceClassificationOverlayContext_dataSourceDelegate] = v18;
  *(_QWORD *)&v15[OBJC_IVAR____TtC8HealthUI35BalanceClassificationOverlayContext_mode] = v26;
  v20 = v18;
  v21 = sub_1D7AAF1F4(v17, (uint64_t)v20);

  *(_QWORD *)&v15[OBJC_IVAR____TtC8HealthUI21BalanceOverlayContext_currentContextItem] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC8HealthUI21BalanceOverlayContext_baseDisplayType] = v17;
  *(_QWORD *)&v15[OBJC_IVAR____TtC8HealthUI21BalanceOverlayContext_overlayDisplayType] = v21;
  v22 = (objc_class *)type metadata accessor for BalanceOverlayContext();
  v27.receiver = v15;
  v27.super_class = v22;
  v23 = objc_msgSendSuper2(&v27, sel_init);
  v19(a3, v8);
  return v23;
}

uint64_t sub_1D7AFE3A8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  v6 = sub_1D7B4921C();
  MEMORY[0x1E0C80A78](v6);
  v7 = sub_1D7B4A368();
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1D7B4A380();
  v9 = MEMORY[0x1E0C80A78](v8);
  v10 = MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  if ((a3 & 1) == 0)
  {
    if (a2 == 3)
    {
      if (a1 < 1)
      {
        sub_1D7B4A32C();
      }
      else
      {
        sub_1D7B4A35C();
        sub_1D7B4A350();
        sub_1D7B4A338();
        sub_1D7B4A350();
        sub_1D7B4A374();
      }
      sub_1D7B4A7DC();
      swift_bridgeObjectRelease();
      if (qword_1F014CF90 != -1)
        goto LABEL_19;
      goto LABEL_18;
    }
    if (a2 == 6)
    {
      if (a1 < 1)
      {
        sub_1D7B4A32C();
      }
      else
      {
        sub_1D7B4A35C();
        sub_1D7B4A350();
        sub_1D7B4A338();
        sub_1D7B4A350();
        sub_1D7B4A374();
      }
      sub_1D7B4A7DC();
      swift_bridgeObjectRelease();
      if (qword_1F014CF90 == -1)
        goto LABEL_18;
LABEL_19:
      swift_once();
      goto LABEL_18;
    }
  }
  if (a1 < 1)
  {
    sub_1D7B4A32C();
  }
  else
  {
    sub_1D7B4A35C();
    sub_1D7B4A350();
    sub_1D7B4A338();
    sub_1D7B4A350();
    sub_1D7B4A374();
  }
  sub_1D7B4A7DC();
  swift_bridgeObjectRelease();
  if (qword_1F014CF90 != -1)
    goto LABEL_19;
LABEL_18:
  v11 = (id)qword_1F0154598;
  sub_1D7B49210();
  return sub_1D7B4A3D4();
}

uint64_t sub_1D7AFE81C@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19)
{
  uint64_t v20;
  char v21;
  uint64_t v22;
  void *v31;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;

  v20 = a19;
  v21 = a18;
  v22 = a17;
  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_1D7B4A614();
    v31 = (void *)sub_1D7B49CFC();
    sub_1D7B49660();

    v21 = a18;
    v20 = a19;
    v22 = a17;
  }
  sub_1D7B4999C();
  *(_QWORD *)a9 = a16;
  *(_QWORD *)(a9 + 8) = v22;
  *(_BYTE *)(a9 + 16) = v21 & 1;
  *(_QWORD *)(a9 + 24) = v20;
  *(_OWORD *)(a9 + 96) = v37;
  *(_OWORD *)(a9 + 112) = v38;
  *(_OWORD *)(a9 + 128) = v39;
  *(_OWORD *)(a9 + 32) = v33;
  *(_OWORD *)(a9 + 48) = v34;
  *(_OWORD *)(a9 + 64) = v35;
  *(_OWORD *)(a9 + 80) = v36;
  sub_1D7ABF0C8(a16, v22, v21 & 1);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D7AFE9FC@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  __int128 *v13;
  void *v23;
  __int128 v24;
  __int128 v25;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  _BYTE v39[32];

  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_1D7B4A614();
    v23 = (void *)sub_1D7B49CFC();
    sub_1D7B49660();

  }
  sub_1D7B4999C();
  v24 = v13[1];
  v36 = *v13;
  v37 = v24;
  sub_1D7B02C98((uint64_t)&v36, (uint64_t)v39);
  v38 = *((_QWORD *)&v37 + 1);
  v34 = *((_QWORD *)v13 + 4);
  v35 = *((_BYTE *)v13 + 40);
  v25 = v13[1];
  *a9 = *v13;
  a9[1] = v25;
  *(_OWORD *)((char *)a9 + 25) = *(__int128 *)((char *)v13 + 25);
  a9[8] = v32;
  a9[9] = v33;
  a9[3] = v27;
  a9[4] = v28;
  a9[6] = v30;
  a9[7] = v31;
  a9[5] = v29;
  sub_1D7B02CD4((uint64_t)v39);
  sub_1D7AD3B3C((uint64_t)&v38);
  return sub_1D7B02ED0((uint64_t)&v34);
}

uint64_t sub_1D7AFEBD4@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  uint64_t v13;
  void *v23;
  __int128 v24;
  __int128 v25;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;

  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_1D7B4A614();
    v23 = (void *)sub_1D7B49CFC();
    sub_1D7B49660();

  }
  sub_1D7B4999C();
  v24 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(a9 + 48) = v24;
  v25 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v13;
  *(_OWORD *)(a9 + 16) = v25;
  *(_OWORD *)(a9 + 120) = v30;
  *(_OWORD *)(a9 + 136) = v31;
  *(_OWORD *)(a9 + 152) = v32;
  *(_OWORD *)(a9 + 168) = v33;
  *(_OWORD *)(a9 + 72) = v27;
  *(_OWORD *)(a9 + 88) = v28;
  *(_QWORD *)(a9 + 64) = *(_QWORD *)(v13 + 64);
  *(_OWORD *)(a9 + 104) = v29;
  return sub_1D7B02ED0(v13);
}

uint64_t TipView.title.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TipView.detail.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

id TipView.iconConfiguration.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  id v4;

  v2 = v1[5];
  v4 = (id)v1[6];
  *a1 = v1[4];
  a1[1] = v2;
  a1[2] = v4;
  swift_bridgeObjectRetain();
  return v4;
}

__n128 TipView.init(title:detail:iconConfiguration:isTipPresented:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>)
{
  uint64_t v18;
  uint64_t *v19;
  __n128 result;
  __n128 v21;
  uint64_t v22;
  char v23;
  uint64_t v24;

  v18 = *a5;
  sub_1D7AA7E70(0, &qword_1F014F118, MEMORY[0x1E0DEF040], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  v21 = *(__n128 *)(a5 + 1);
  sub_1D7B4A038();
  *(_QWORD *)(a9 + 80) = v22;
  *(_BYTE *)(a9 + 88) = v23;
  *(_QWORD *)(a9 + 96) = v24;
  v19 = (uint64_t *)(a9 + *(int *)(type metadata accessor for TipView() + 36));
  *v19 = swift_getKeyPath();
  sub_1D7AA787C(0, &qword_1F014E2F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD9958], MEMORY[0x1E0CD87D0]);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = v18;
  result = v21;
  *(__n128 *)(a9 + 40) = v21;
  *(_QWORD *)(a9 + 56) = a6;
  *(_QWORD *)(a9 + 64) = a7;
  *(_BYTE *)(a9 + 72) = a8;
  return result;
}

uint64_t type metadata accessor for TipView()
{
  uint64_t result;

  result = qword_1F014F318;
  if (!qword_1F014F318)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t TipView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char v44;
  uint64_t v45;
  char *v46;
  __int128 v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;

  v2 = v1;
  v60 = a1;
  v3 = type metadata accessor for TipView();
  v4 = *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64);
  v58 = *(_QWORD *)(v3 - 8);
  v59 = v4;
  MEMORY[0x1E0C80A78](v3);
  v57 = (uint64_t)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D7AA787C(0, &qword_1F014F120, (uint64_t (*)(uint64_t))sub_1D7B00E50, MEMORY[0x1E0CDF678]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v55 - v7;
  sub_1D7B0179C();
  v10 = v9;
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D7B01838(0);
  v14 = v13;
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D7B01854(0);
  v18 = v17;
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D7B01870(0);
  v56 = v21;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v55 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D7AFF3D4(v2, (uint64_t)v8);
  v24 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  v25 = MEMORY[0x1D829DEDC](v24);
  sub_1D7B0188C((uint64_t)v8, (uint64_t)v12);
  *(_QWORD *)&v12[*(int *)(v10 + 36)] = v25;
  sub_1D7AAD130((uint64_t)v8, &qword_1F014F120, (uint64_t (*)(uint64_t))sub_1D7B00E50, MEMORY[0x1E0CDF678]);
  LOBYTE(v8) = sub_1D7B49D2C();
  sub_1D7B49864();
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v33 = v32;
  sub_1D7AAD16C((uint64_t)v12, (uint64_t)v16, (uint64_t (*)(_QWORD))sub_1D7B0179C);
  v34 = &v16[*(int *)(v14 + 36)];
  *v34 = (char)v8;
  *((_QWORD *)v34 + 1) = v27;
  *((_QWORD *)v34 + 2) = v29;
  *((_QWORD *)v34 + 3) = v31;
  *((_QWORD *)v34 + 4) = v33;
  v34[40] = 0;
  sub_1D7AAD1B0((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1D7B0179C);
  LOBYTE(v12) = sub_1D7B49D68();
  sub_1D7B49864();
  v36 = v35;
  v38 = v37;
  v40 = v39;
  v42 = v41;
  sub_1D7AAD16C((uint64_t)v16, (uint64_t)v20, (uint64_t (*)(_QWORD))sub_1D7B01838);
  v43 = &v20[*(int *)(v18 + 36)];
  *v43 = (char)v12;
  *((_QWORD *)v43 + 1) = v36;
  *((_QWORD *)v43 + 2) = v38;
  *((_QWORD *)v43 + 3) = v40;
  *((_QWORD *)v43 + 4) = v42;
  v43[40] = 0;
  sub_1D7AAD1B0((uint64_t)v16, (uint64_t (*)(_QWORD))sub_1D7B01838);
  v44 = *(_BYTE *)(v2 + 88);
  v45 = *(_QWORD *)(v2 + 96);
  *(_QWORD *)&v61 = *(_QWORD *)(v2 + 80);
  BYTE8(v61) = v44;
  *(_QWORD *)&v62 = v45;
  sub_1D7B011A8(0, &qword_1F014F248, &qword_1F014F118, MEMORY[0x1E0DEF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDF9A8]);
  sub_1D7B4A044();
  sub_1D7B4A11C();
  sub_1D7B498DC();
  sub_1D7AAD16C((uint64_t)v20, (uint64_t)v23, (uint64_t (*)(_QWORD))sub_1D7B01854);
  v46 = &v23[*(int *)(v56 + 36)];
  v47 = v62;
  *(_OWORD *)v46 = v61;
  *((_OWORD *)v46 + 1) = v47;
  *((_OWORD *)v46 + 2) = v63;
  sub_1D7AAD1B0((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1D7B01854);
  v48 = v57;
  sub_1D7AAD16C(v2, v57, (uint64_t (*)(_QWORD))type metadata accessor for TipView);
  v49 = (*(unsigned __int8 *)(v58 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
  v50 = swift_allocObject();
  sub_1D7B018EC(v48, v50 + v49);
  v51 = v60;
  sub_1D7AAD16C((uint64_t)v23, v60, (uint64_t (*)(_QWORD))sub_1D7B01870);
  sub_1D7AAD020(0, &qword_1F014F250, (uint64_t (*)(uint64_t))sub_1D7B01870, (uint64_t (*)(uint64_t))sub_1D7B0196C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0CD9BF0]);
  v53 = (_QWORD *)(v51 + *(int *)(v52 + 36));
  *v53 = sub_1D7AFF6D4;
  v53[1] = 0;
  v53[2] = sub_1D7B01930;
  v53[3] = v50;
  return sub_1D7AAD1B0((uint64_t)v23, (uint64_t (*)(_QWORD))sub_1D7B01870);
}

uint64_t sub_1D7AFF3D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char v17;
  uint64_t v18;
  void (*v19)();
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[2];

  v23[0] = a2;
  sub_1D7B01458();
  v23[1] = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D7AAD020(0, &qword_1F014F3B8, (uint64_t (*)(uint64_t))sub_1D7B00E74, v6, MEMORY[0x1E0CDB848]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v23 - v8;
  sub_1D7B00E74();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1D7B4996C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for TipView();
  sub_1D7AD17A0((uint64_t)v16);
  v17 = sub_1D7B49960();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  if ((v17 & 1) != 0)
  {
    *(_QWORD *)v12 = sub_1D7B49B28();
    *((_QWORD *)v12 + 1) = 0;
    v12[16] = 1;
    sub_1D7B02D14(0, &qword_1F014F3C8, &qword_1F014F138, (uint64_t (*)(uint64_t))sub_1D7B00F0C);
    sub_1D7AFF778(a1, (uint64_t)&v12[*(int *)(v18 + 44)]);
    v19 = sub_1D7B00E74;
    sub_1D7AAD16C((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1D7B00E74);
    swift_storeEnumTagMultiPayload();
    sub_1D7AA76D4(&qword_1F014F398, (uint64_t (*)(uint64_t))sub_1D7B00E74, MEMORY[0x1E0CDFCC0]);
    sub_1D7AA76D4(&qword_1F014F3A0, (uint64_t (*)(uint64_t))sub_1D7B01458, MEMORY[0x1E0CDFB10]);
    sub_1D7B49BF4();
    v20 = (uint64_t)v12;
  }
  else
  {
    *(_QWORD *)v5 = sub_1D7B49AF8();
    *((_QWORD *)v5 + 1) = 0x4026000000000000;
    v5[16] = 0;
    sub_1D7B02AF8(0, &qword_1F014F3C0, &qword_1F014F1C8, (uint64_t (*)(uint64_t))sub_1D7B014F0);
    sub_1D7B001D4(a1, (uint64_t)&v5[*(int *)(v21 + 44)]);
    v19 = sub_1D7B01458;
    sub_1D7AAD16C((uint64_t)v5, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1D7B01458);
    swift_storeEnumTagMultiPayload();
    sub_1D7AA76D4(&qword_1F014F398, (uint64_t (*)(uint64_t))sub_1D7B00E74, MEMORY[0x1E0CDFCC0]);
    sub_1D7AA76D4(&qword_1F014F3A0, (uint64_t (*)(uint64_t))sub_1D7B01458, MEMORY[0x1E0CDFB10]);
    sub_1D7B49BF4();
    v20 = (uint64_t)v5;
  }
  return sub_1D7AAD1B0(v20, (uint64_t (*)(_QWORD))v19);
}

uint64_t sub_1D7AFF6D4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1D7B498E8();
  *a1 = v3;
  return result;
}

uint64_t sub_1D7AFF6FC()
{
  sub_1D7B011A8(0, &qword_1F014F248, &qword_1F014F118, MEMORY[0x1E0DEF040], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDF9A8]);
  return sub_1D7B4A050();
}

uint64_t sub_1D7AFF778@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  _OWORD v58[10];
  uint64_t v59;
  _OWORD v60[10];
  uint64_t v61;
  _OWORD v62[10];
  uint64_t v63;
  _OWORD v64[10];
  uint64_t v65;
  _OWORD v66[10];
  uint64_t v67;
  _OWORD v68[10];
  uint64_t v69;

  sub_1D7B00F7C();
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v36 - v8;
  *(_QWORD *)v9 = sub_1D7B49AF8();
  *((_QWORD *)v9 + 1) = 0;
  v9[16] = 1;
  sub_1D7B02AF8(0, &qword_1F014F3D0, &qword_1F014F150, (uint64_t (*)(uint64_t))sub_1D7B01014);
  sub_1D7AFFA6C(a1, (uint64_t)&v9[*(int *)(v10 + 44)]);
  sub_1D7AFFDB0((uint64_t)v58);
  sub_1D7AFFFD0((uint64_t)v60);
  sub_1D7AAD16C((uint64_t)v9, (uint64_t)v7, (uint64_t (*)(_QWORD))sub_1D7B00F7C);
  v55 = v58[8];
  v56 = v58[9];
  v57 = v59;
  v51 = v58[4];
  v52 = v58[5];
  v53 = v58[6];
  v54 = v58[7];
  v47 = v58[0];
  v48 = v58[1];
  v49 = v58[2];
  v50 = v58[3];
  v44 = v60[8];
  v45 = v60[9];
  v46 = v61;
  v40 = v60[4];
  v41 = v60[5];
  v42 = v60[6];
  v43 = v60[7];
  v36 = v60[0];
  v37 = v60[1];
  v38 = v60[2];
  v39 = v60[3];
  sub_1D7AAD16C((uint64_t)v7, a2, (uint64_t (*)(_QWORD))sub_1D7B00F7C);
  sub_1D7B00F0C();
  v12 = *(int *)(v11 + 48);
  v13 = v57;
  v63 = v57;
  v14 = a2 + v12;
  v16 = v55;
  v15 = v56;
  v62[8] = v55;
  v62[9] = v56;
  v17 = v52;
  v62[4] = v51;
  v62[5] = v52;
  v18 = v53;
  v19 = v54;
  v62[6] = v53;
  v62[7] = v54;
  v20 = v47;
  v21 = v48;
  v62[0] = v47;
  v62[1] = v48;
  v23 = v49;
  v22 = v50;
  v62[2] = v49;
  v62[3] = v50;
  *(_OWORD *)(v14 + 64) = v51;
  *(_OWORD *)(v14 + 80) = v17;
  *(_QWORD *)(v14 + 160) = v13;
  *(_OWORD *)(v14 + 128) = v16;
  *(_OWORD *)(v14 + 144) = v15;
  *(_OWORD *)(v14 + 96) = v18;
  *(_OWORD *)(v14 + 112) = v19;
  *(_OWORD *)v14 = v20;
  *(_OWORD *)(v14 + 16) = v21;
  *(_OWORD *)(v14 + 32) = v23;
  *(_OWORD *)(v14 + 48) = v22;
  v24 = *(int *)(v11 + 64);
  v25 = v45;
  v64[8] = v44;
  v64[9] = v45;
  v26 = v40;
  v27 = v41;
  v64[4] = v40;
  v64[5] = v41;
  v29 = v42;
  v28 = v43;
  v64[6] = v42;
  v64[7] = v43;
  v30 = v36;
  v31 = v37;
  v64[0] = v36;
  v64[1] = v37;
  v33 = v38;
  v32 = v39;
  v64[2] = v38;
  v64[3] = v39;
  v34 = a2 + v24;
  *(_OWORD *)(v34 + 128) = v44;
  *(_OWORD *)(v34 + 144) = v25;
  *(_OWORD *)(v34 + 64) = v26;
  *(_OWORD *)(v34 + 80) = v27;
  *(_OWORD *)(v34 + 96) = v29;
  *(_OWORD *)(v34 + 112) = v28;
  *(_OWORD *)v34 = v30;
  *(_OWORD *)(v34 + 16) = v31;
  v65 = v46;
  *(_QWORD *)(v34 + 160) = v46;
  *(_OWORD *)(v34 + 32) = v33;
  *(_OWORD *)(v34 + 48) = v32;
  sub_1D7B02B68((uint64_t)v62);
  sub_1D7B02B68((uint64_t)v64);
  sub_1D7AAD1B0((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1D7B00F7C);
  v66[8] = v44;
  v66[9] = v45;
  v67 = v46;
  v66[4] = v40;
  v66[5] = v41;
  v66[7] = v43;
  v66[6] = v42;
  v66[0] = v36;
  v66[1] = v37;
  v66[3] = v39;
  v66[2] = v38;
  sub_1D7B02BB4((uint64_t)v66);
  v68[8] = v55;
  v68[9] = v56;
  v69 = v57;
  v68[4] = v51;
  v68[5] = v52;
  v68[6] = v53;
  v68[7] = v54;
  v68[0] = v47;
  v68[1] = v48;
  v68[2] = v49;
  v68[3] = v50;
  sub_1D7B02BB4((uint64_t)v68);
  return sub_1D7AAD1B0((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1D7B00F7C);
}

uint64_t sub_1D7AFFA6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  char v27;
  char v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char v43;
  char v44;
  char v45;
  char v46;
  char v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;

  v4 = type metadata accessor for TipView();
  v40 = *(_QWORD *)(v4 - 8);
  v5 = *(_QWORD *)(v40 + 64);
  MEMORY[0x1E0C80A78](v4);
  v38 = (uint64_t)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D7AD3A4C(0, &qword_1F014F168, (uint64_t (*)(uint64_t))sub_1D7B01124, (uint64_t (*)(void))sub_1D7B01214, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0CDFA38]);
  v7 = v6;
  v42 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v41 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v39 = (char *)&v35 - v10;
  v11 = sub_1D7B4A008();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(void **)(a1 + 48);
  swift_bridgeObjectRetain();
  v16 = v15;
  sub_1D7B4A02C();
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E0CDF6F8], v11);
  v17 = sub_1D7B4A020();
  swift_release();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_1D7B4A11C();
  sub_1D7B498DC();
  LOBYTE(v12) = v49;
  v18 = v50;
  LOBYTE(v14) = v51;
  v36 = v52;
  v37 = v48;
  v35 = v53;
  v19 = a1;
  v20 = v38;
  sub_1D7AAD16C(v19, v38, (uint64_t (*)(_QWORD))type metadata accessor for TipView);
  v21 = (*(unsigned __int8 *)(v40 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  v22 = swift_allocObject();
  sub_1D7B018EC(v20, v22 + v21);
  sub_1D7B01124();
  sub_1D7B01214();
  v23 = v39;
  sub_1D7B4A074();
  v47 = 1;
  v46 = 0;
  v45 = v12;
  v44 = (char)v14;
  v43 = 1;
  v24 = v41;
  v25 = v42;
  v26 = *(void (**)(char *, char *, uint64_t))(v42 + 16);
  v26(v41, v23, v7);
  v27 = v47;
  v28 = v46;
  v29 = v45;
  v30 = v44;
  *(_QWORD *)a2 = v17;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = v27;
  *(_BYTE *)(a2 + 17) = v28;
  *(_QWORD *)(a2 + 24) = v37;
  *(_BYTE *)(a2 + 32) = v29;
  *(_QWORD *)(a2 + 40) = v18;
  *(_BYTE *)(a2 + 48) = v30;
  v31 = v35;
  *(_QWORD *)(a2 + 56) = v36;
  *(_QWORD *)(a2 + 64) = v31;
  LOBYTE(v31) = v43;
  *(_QWORD *)(a2 + 72) = 0;
  *(_BYTE *)(a2 + 80) = v31;
  sub_1D7B01014();
  v26((char *)(a2 + *(int *)(v32 + 64)), v24, v7);
  v33 = *(void (**)(char *, uint64_t))(v25 + 8);
  swift_retain();
  v33(v23, v7);
  v33(v24, v7);
  return swift_release();
}

double sub_1D7AFFDB0@<D0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t KeyPath;
  int v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  double result;
  __int128 v23;
  uint64_t v24;
  _OWORD v25[10];
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;

  v3 = *v1;
  v4 = v1[1];
  *(_QWORD *)&v32 = v3;
  *((_QWORD *)&v32 + 1) = v4;
  sub_1D7ABCCEC();
  swift_bridgeObjectRetain();
  v5 = sub_1D7B49EB8();
  v7 = v6;
  v9 = v8 & 1;
  sub_1D7B49D98();
  sub_1D7B49DC8();
  sub_1D7B49DF8();
  swift_release();
  v10 = sub_1D7B49E88();
  v12 = v11;
  v14 = v13;
  v24 = v15;
  swift_release();
  sub_1D7AACF84(v5, v7, v9);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  sub_1D7ABF0C8(v10, v12, v14 & 1);
  swift_bridgeObjectRetain();
  v26 = v10;
  v27 = v12;
  v28 = v14 & 1;
  v29 = v24;
  v30 = KeyPath;
  v31 = 0;
  sub_1D7B4A128();
  sub_1D7AFE9FC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v25, 0.0, 1, 0.0, 1);
  sub_1D7AACF84(v10, v12, v14 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1D7AACF84(v10, v12, v14 & 1);
  swift_bridgeObjectRelease();
  v38 = v25[6];
  v39 = v25[7];
  v40 = v25[8];
  v41 = v25[9];
  v34 = v25[2];
  v35 = v25[3];
  v36 = v25[4];
  v37 = v25[5];
  v32 = v25[0];
  v33 = v25[1];
  v17 = sub_1D7B49C60();
  v18 = v39;
  *(_OWORD *)(a1 + 96) = v38;
  *(_OWORD *)(a1 + 112) = v18;
  v19 = v41;
  *(_OWORD *)(a1 + 128) = v40;
  *(_OWORD *)(a1 + 144) = v19;
  v20 = v35;
  *(_OWORD *)(a1 + 32) = v34;
  *(_OWORD *)(a1 + 48) = v20;
  v21 = v37;
  *(_OWORD *)(a1 + 64) = v36;
  *(_OWORD *)(a1 + 80) = v21;
  result = *(double *)&v32;
  v23 = v33;
  *(_OWORD *)a1 = v32;
  *(_OWORD *)(a1 + 16) = v23;
  *(_WORD *)(a1 + 160) = 256;
  *(_DWORD *)(a1 + 164) = v17;
  return result;
}

double sub_1D7AFFFD0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t KeyPath;
  int v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  double result;
  __int128 v23;
  uint64_t v24;
  _OWORD v25[10];
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)&v32 = v3;
  *((_QWORD *)&v32 + 1) = v4;
  sub_1D7ABCCEC();
  swift_bridgeObjectRetain();
  v5 = sub_1D7B49EB8();
  v7 = v6;
  v9 = v8 & 1;
  sub_1D7B49D74();
  v10 = sub_1D7B49E88();
  v12 = v11;
  v14 = v13;
  v24 = v15;
  swift_release();
  sub_1D7AACF84(v5, v7, v9);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  sub_1D7ABF0C8(v10, v12, v14 & 1);
  swift_bridgeObjectRetain();
  v26 = v10;
  v27 = v12;
  v28 = v14 & 1;
  v29 = v24;
  v30 = KeyPath;
  v31 = 0;
  sub_1D7B4A128();
  sub_1D7AFE9FC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v25, 0.0, 1, 0.0, 1);
  sub_1D7AACF84(v10, v12, v14 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1D7AACF84(v10, v12, v14 & 1);
  swift_bridgeObjectRelease();
  v38 = v25[6];
  v39 = v25[7];
  v40 = v25[8];
  v41 = v25[9];
  v34 = v25[2];
  v35 = v25[3];
  v36 = v25[4];
  v37 = v25[5];
  v32 = v25[0];
  v33 = v25[1];
  v17 = sub_1D7B49C6C();
  v18 = v39;
  *(_OWORD *)(a1 + 96) = v38;
  *(_OWORD *)(a1 + 112) = v18;
  v19 = v41;
  *(_OWORD *)(a1 + 128) = v40;
  *(_OWORD *)(a1 + 144) = v19;
  v20 = v35;
  *(_OWORD *)(a1 + 32) = v34;
  *(_OWORD *)(a1 + 48) = v20;
  v21 = v37;
  *(_OWORD *)(a1 + 64) = v36;
  *(_OWORD *)(a1 + 80) = v21;
  result = *(double *)&v32;
  v23 = v33;
  *(_OWORD *)a1 = v32;
  *(_OWORD *)(a1 + 16) = v23;
  *(_WORD *)(a1 + 160) = 256;
  *(_DWORD *)(a1 + 164) = v17;
  return result;
}

uint64_t sub_1D7B001D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  char v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;
  __int16 v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  char v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  uint64_t v91;
  _OWORD v92[10];
  uint64_t v93;
  _OWORD v94[10];
  uint64_t v95;
  _OWORD v96[10];
  uint64_t v97;
  _OWORD v98[11];
  uint64_t v99;
  _OWORD v100[11];
  uint64_t v101;

  sub_1D7B01678();
  v5 = MEMORY[0x1E0C80A78](v4);
  v54 = (uint64_t)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v52 - v7;
  sub_1D7B01574();
  v10 = MEMORY[0x1E0C80A78](v9);
  v55 = (uint64_t)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v53 = (uint64_t *)((char *)&v52 - v12);
  v13 = sub_1D7B4A008();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(void **)(a1 + 48);
  swift_bridgeObjectRetain();
  v18 = v17;
  sub_1D7B4A02C();
  (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E0CDF6F8], v13);
  v19 = sub_1D7B4A020();
  swift_release();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  sub_1D7B4A11C();
  sub_1D7B498DC();
  v72 = v19;
  v73 = 0;
  v74 = 1;
  v75 = v67;
  v76 = v68;
  v77 = v69;
  v78 = v70;
  v79 = v71;
  sub_1D7B4A11C();
  sub_1D7AFEBD4(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)&v80, 0.0, 1, INFINITY, 0);
  swift_release();
  v20 = sub_1D7B49B1C();
  v21 = v53;
  *v53 = v20;
  v21[1] = 0;
  *((_BYTE *)v21 + 16) = 1;
  v22 = (uint64_t)v21;
  sub_1D7B02D14(0, &qword_1F014F3D8, &qword_1F014F1E8, (uint64_t (*)(uint64_t))sub_1D7B0160C);
  v24 = v22 + *(int *)(v23 + 44);
  *(_QWORD *)v8 = sub_1D7B49AF8();
  *((_QWORD *)v8 + 1) = 0x4024000000000000;
  v8[16] = 0;
  sub_1D7B02AF8(0, &qword_1F014F3E0, &qword_1F014F200, (uint64_t (*)(uint64_t))sub_1D7B01710);
  sub_1D7B00714(a1, (uint64_t)&v8[*(int *)(v25 + 44)]);
  sub_1D7AFFFD0((uint64_t)v92);
  v26 = v54;
  sub_1D7AAD16C((uint64_t)v8, v54, (uint64_t (*)(_QWORD))sub_1D7B01678);
  v64 = v92[8];
  v65 = v92[9];
  v66 = v93;
  v60 = v92[4];
  v61 = v92[5];
  v62 = v92[6];
  v63 = v92[7];
  v56 = v92[0];
  v57 = v92[1];
  v58 = v92[2];
  v59 = v92[3];
  sub_1D7AAD16C(v26, v24, (uint64_t (*)(_QWORD))sub_1D7B01678);
  sub_1D7B0160C();
  v28 = *(int *)(v27 + 48);
  v29 = v65;
  v94[8] = v64;
  v94[9] = v65;
  v30 = v60;
  v31 = v61;
  v94[4] = v60;
  v94[5] = v61;
  v33 = v62;
  v32 = v63;
  v94[6] = v62;
  v94[7] = v63;
  v34 = v56;
  v35 = v57;
  v94[0] = v56;
  v94[1] = v57;
  v37 = v58;
  v36 = v59;
  v94[2] = v58;
  v94[3] = v59;
  v38 = v24 + v28;
  *(_OWORD *)(v38 + 128) = v64;
  *(_OWORD *)(v38 + 144) = v29;
  *(_OWORD *)(v38 + 64) = v30;
  *(_OWORD *)(v38 + 80) = v31;
  *(_OWORD *)(v38 + 96) = v33;
  *(_OWORD *)(v38 + 112) = v32;
  *(_OWORD *)v38 = v34;
  *(_OWORD *)(v38 + 16) = v35;
  v95 = v66;
  *(_QWORD *)(v38 + 160) = v66;
  *(_OWORD *)(v38 + 32) = v37;
  *(_OWORD *)(v38 + 48) = v36;
  sub_1D7B02B68((uint64_t)v94);
  sub_1D7AAD1B0((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1D7B01678);
  v96[8] = v64;
  v96[9] = v65;
  v97 = v66;
  v96[4] = v60;
  v96[5] = v61;
  v96[6] = v62;
  v96[7] = v63;
  v96[0] = v56;
  v96[1] = v57;
  v96[2] = v58;
  v96[3] = v59;
  sub_1D7B02BB4((uint64_t)v96);
  sub_1D7AAD1B0(v26, (uint64_t (*)(_QWORD))sub_1D7B01678);
  v39 = v55;
  sub_1D7AAD16C(v22, v55, (uint64_t (*)(_QWORD))sub_1D7B01574);
  v40 = v89;
  v98[8] = v88;
  v98[9] = v89;
  v41 = v90;
  v98[10] = v90;
  v42 = v84;
  v43 = v85;
  v98[4] = v84;
  v98[5] = v85;
  v44 = v86;
  v45 = v87;
  v98[6] = v86;
  v98[7] = v87;
  v46 = v80;
  v47 = v81;
  v98[0] = v80;
  v98[1] = v81;
  v48 = v82;
  v49 = v83;
  v98[2] = v82;
  v98[3] = v83;
  *(_OWORD *)(a2 + 128) = v88;
  *(_OWORD *)(a2 + 144) = v40;
  *(_OWORD *)(a2 + 160) = v41;
  *(_OWORD *)(a2 + 64) = v42;
  *(_OWORD *)(a2 + 80) = v43;
  *(_OWORD *)(a2 + 96) = v44;
  *(_OWORD *)(a2 + 112) = v45;
  *(_OWORD *)a2 = v46;
  *(_OWORD *)(a2 + 16) = v47;
  v99 = v91;
  *(_QWORD *)(a2 + 176) = v91;
  *(_OWORD *)(a2 + 32) = v48;
  *(_OWORD *)(a2 + 48) = v49;
  sub_1D7B014F0();
  sub_1D7AAD16C(v39, a2 + *(int *)(v50 + 48), (uint64_t (*)(_QWORD))sub_1D7B01574);
  sub_1D7B02ED0((uint64_t)v98);
  sub_1D7AAD1B0(v22, (uint64_t (*)(_QWORD))sub_1D7B01574);
  sub_1D7AAD1B0(v39, (uint64_t (*)(_QWORD))sub_1D7B01574);
  v100[8] = v88;
  v100[9] = v89;
  v100[10] = v90;
  v101 = v91;
  v100[4] = v84;
  v100[5] = v85;
  v100[6] = v86;
  v100[7] = v87;
  v100[0] = v80;
  v100[1] = v81;
  v100[2] = v82;
  v100[3] = v83;
  return sub_1D7B02D84((uint64_t)v100);
}

uint64_t sub_1D7B00714@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  _OWORD v43[10];
  uint64_t v44;
  _OWORD v45[10];
  uint64_t v46;
  _OWORD v47[10];
  uint64_t v48;

  v4 = type metadata accessor for TipView();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  sub_1D7AD3A4C(0, &qword_1F014F168, (uint64_t (*)(uint64_t))sub_1D7B01124, (uint64_t (*)(void))sub_1D7B01214, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0CDFA38]);
  v8 = v7;
  v31 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v30 - v12;
  sub_1D7AFFDB0((uint64_t)v43);
  sub_1D7AAD16C(a1, (uint64_t)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for TipView);
  v14 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v15 = swift_allocObject();
  sub_1D7B018EC((uint64_t)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14);
  sub_1D7B01124();
  sub_1D7B01214();
  sub_1D7B4A074();
  v40 = v43[8];
  v41 = v43[9];
  v42 = v44;
  v36 = v43[4];
  v37 = v43[5];
  v38 = v43[6];
  v39 = v43[7];
  v32 = v43[0];
  v33 = v43[1];
  v34 = v43[2];
  v35 = v43[3];
  v16 = v31;
  v17 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
  v17(v11, v13, v8);
  v18 = v41;
  v45[8] = v40;
  v45[9] = v41;
  v19 = v36;
  v20 = v37;
  v45[4] = v36;
  v45[5] = v37;
  v22 = v38;
  v21 = v39;
  v45[6] = v38;
  v45[7] = v39;
  v23 = v32;
  v24 = v33;
  v45[0] = v32;
  v45[1] = v33;
  v26 = v34;
  v25 = v35;
  v45[2] = v34;
  v45[3] = v35;
  *(_OWORD *)(a2 + 128) = v40;
  *(_OWORD *)(a2 + 144) = v18;
  *(_OWORD *)(a2 + 64) = v19;
  *(_OWORD *)(a2 + 80) = v20;
  *(_OWORD *)(a2 + 96) = v22;
  *(_OWORD *)(a2 + 112) = v21;
  *(_OWORD *)a2 = v23;
  *(_OWORD *)(a2 + 16) = v24;
  v46 = v42;
  *(_QWORD *)(a2 + 160) = v42;
  *(_OWORD *)(a2 + 32) = v26;
  *(_OWORD *)(a2 + 48) = v25;
  sub_1D7B01710();
  v17((char *)(a2 + *(int *)(v27 + 48)), v11, v8);
  sub_1D7B02B68((uint64_t)v45);
  v28 = *(void (**)(char *, uint64_t))(v16 + 8);
  v28(v13, v8);
  v28(v11, v8);
  v47[8] = v40;
  v47[9] = v41;
  v48 = v42;
  v47[4] = v36;
  v47[5] = v37;
  v47[6] = v38;
  v47[7] = v39;
  v47[0] = v32;
  v47[1] = v33;
  v47[2] = v34;
  v47[3] = v35;
  return sub_1D7B02BB4((uint64_t)v47);
}

uint64_t sub_1D7B009B4()
{
  sub_1D7AA7E70(0, (unint64_t *)&unk_1F01509E0, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0CDFDB8]);
  return sub_1D7B4A0C8();
}

uint64_t sub_1D7B00A18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t result;

  v2 = sub_1D7B49FFC();
  sub_1D7B49D74();
  sub_1D7B49DC8();
  v3 = sub_1D7B49DF8();
  swift_release();
  KeyPath = swift_getKeyPath();
  result = sub_1D7B49C54();
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = KeyPath;
  *(_QWORD *)(a1 + 16) = v3;
  *(_DWORD *)(a1 + 24) = result;
  return result;
}

HealthUI::TipView::IconConfiguration __swiftcall TipView.IconConfiguration.init(name:bundle:)(Swift::String name, NSBundle bundle)
{
  uint64_t v2;
  HealthUI::TipView::IconConfiguration result;

  *(Swift::String *)v2 = name;
  *(NSBundle *)(v2 + 16) = bundle;
  result.name = name;
  result.bundle = bundle;
  return result;
}

uint64_t TipView.configureForPopover(backgroundColor:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  unsigned __int8 v12;
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;

  v3 = sub_1D7B49C0C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1D7B01A08(0);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = &v14[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = v1;
  v16 = a1;
  sub_1D7B49D20();
  sub_1D7B01A2C(0);
  sub_1D7B01BDC();
  sub_1D7B49870();
  sub_1D7B49C00();
  v12 = sub_1D7B49D20();
  sub_1D7B49D14();
  sub_1D7B49D14();
  if (sub_1D7B49D14() != v12)
    sub_1D7B49D14();
  sub_1D7AA76D4(&qword_1F014F2B0, (uint64_t (*)(uint64_t))sub_1D7B01A08, MEMORY[0x1E0CD8558]);
  sub_1D7B49F30();
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1D7B00C34@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v27)(char *, uint64_t);
  uint64_t v29;

  v4 = sub_1D7B49C84();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D7B01A50(0);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D7B49C78();
  type metadata accessor for TipView();
  sub_1D7AA76D4(&qword_1F014F280, (uint64_t (*)(uint64_t))type metadata accessor for TipView, (uint64_t)&protocol conformance descriptor for TipView);
  sub_1D7B49F48();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v13 = sub_1D7B4A11C();
  v15 = v14;
  sub_1D7B4A14C();
  v17 = v16;
  v19 = v18;
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 16))(a2, v12, v9);
  sub_1D7B01A2C(0);
  v21 = a2 + *(int *)(v20 + 36);
  *(_QWORD *)v21 = a1;
  __asm { FMOV            V0.2D, #1.5 }
  *(_OWORD *)(v21 + 8) = _Q0;
  *(_QWORD *)(v21 + 24) = v17;
  *(_QWORD *)(v21 + 32) = v19;
  *(_QWORD *)(v21 + 40) = v13;
  *(_QWORD *)(v21 + 48) = v15;
  v27 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
  swift_retain();
  return v27(v12, v9);
}

uint64_t sub_1D7B00DB0()
{
  return sub_1D7B499D8();
}

uint64_t sub_1D7B00DD0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = sub_1D7B4996C();
  MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_1D7B499E4();
}

void sub_1D7B00E50(uint64_t a1)
{
  sub_1D7AAD020(a1, &qword_1F014F128, (uint64_t (*)(uint64_t))sub_1D7B00E74, (uint64_t (*)(uint64_t))sub_1D7B01458, MEMORY[0x1E0CDB880]);
}

void sub_1D7B00E74()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F014F130)
  {
    sub_1D7AA787C(255, &qword_1F014F138, (uint64_t (*)(uint64_t))sub_1D7B00F0C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CE0648]);
    sub_1D7B01410(&qword_1F014F1B8, &qword_1F014F138, (uint64_t (*)(uint64_t))sub_1D7B00F0C);
    v0 = sub_1D7B4A0B0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F014F130);
  }
}

void sub_1D7B00F0C()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_1F014F140)
  {
    sub_1D7B00F7C();
    sub_1D7B012E4();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1F014F140);
  }
}

void sub_1D7B00F7C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F014F148)
  {
    sub_1D7AA787C(255, &qword_1F014F150, (uint64_t (*)(uint64_t))sub_1D7B01014, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CE0648]);
    sub_1D7B01410(&qword_1F014F190, &qword_1F014F150, (uint64_t (*)(uint64_t))sub_1D7B01014);
    v0 = sub_1D7B4A098();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F014F148);
  }
}

void sub_1D7B01014()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_1F014F158)
  {
    sub_1D7B010A8();
    sub_1D7AD3A4C(255, &qword_1F014F168, (uint64_t (*)(uint64_t))sub_1D7B01124, (uint64_t (*)(void))sub_1D7B01214, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0CDFA38]);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1F014F158);
  }
}

void sub_1D7B010A8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F014F160)
  {
    sub_1D7AC14DC(255, (unint64_t *)&qword_1ED0AC948, MEMORY[0x1E0CDF840], MEMORY[0x1E0CDB178], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0CD9BF0]);
    v0 = sub_1D7B49978();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F014F160);
  }
}

void sub_1D7B01124()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F014F170)
  {
    sub_1D7AAAE74();
    sub_1D7AC14DC(255, &qword_1F014F178, MEMORY[0x1E0CDBFD8], MEMORY[0x1E0CDBFB8], MEMORY[0x1E0CDC700]);
    v0 = sub_1D7B49978();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F014F170);
  }
}

void sub_1D7B011A8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_1D7AA7E70(255, a3, a4, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

unint64_t sub_1D7B01214()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1F014F180;
  if (!qword_1F014F180)
  {
    sub_1D7B01124();
    v2 = v1;
    v3[0] = sub_1D7AAB0E0();
    v3[1] = sub_1D7B0129C(&qword_1F014F188, &qword_1F014F178, MEMORY[0x1E0CDBFD8], MEMORY[0x1E0CDBFB8]);
    result = MEMORY[0x1D829FF28](MEMORY[0x1E0CD9C20], v2, v3);
    atomic_store(result, (unint64_t *)&qword_1F014F180);
  }
  return result;
}

uint64_t sub_1D7B0129C(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_1D7AC14DC(255, a2, a3, a4, MEMORY[0x1E0CDC700]);
    result = MEMORY[0x1D829FF28](MEMORY[0x1E0CDC718], v6);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1D7B012E4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F014F198)
  {
    sub_1D7AC129C(255, &qword_1F014F1A0, sub_1D7B01380);
    sub_1D7AC14DC(255, &qword_1F014F178, MEMORY[0x1E0CDBFD8], MEMORY[0x1E0CDBFB8], MEMORY[0x1E0CDC700]);
    v0 = sub_1D7B49978();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F014F198);
  }
}

void sub_1D7B01380(uint64_t a1)
{
  sub_1D7AC129C(a1, &qword_1F014F1A8, (void (*)(uint64_t))sub_1D7B0139C);
}

void sub_1D7B0139C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F014F1B0)
  {
    sub_1D7AA7E70(255, &qword_1ED0ACA08, MEMORY[0x1E0CD9070], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0CDCF68]);
    v0 = sub_1D7B49978();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F014F1B0);
  }
}

uint64_t sub_1D7B01410(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1D7AA787C(255, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CE0648]);
    result = MEMORY[0x1D829FF28](MEMORY[0x1E0CE0680], v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1D7B01458()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F014F1C0)
  {
    sub_1D7AA787C(255, &qword_1F014F1C8, (uint64_t (*)(uint64_t))sub_1D7B014F0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CE0648]);
    sub_1D7B01410(&qword_1F014F220, &qword_1F014F1C8, (uint64_t (*)(uint64_t))sub_1D7B014F0);
    v0 = sub_1D7B4A098();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F014F1C0);
  }
}

void sub_1D7B014F0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1F014F1D0)
  {
    sub_1D7AC129C(255, &qword_1F014F1D8, (void (*)(uint64_t))sub_1D7B010A8);
    sub_1D7B01574();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1F014F1D0);
  }
}

void sub_1D7B01574()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F014F1E0)
  {
    sub_1D7AA787C(255, &qword_1F014F1E8, (uint64_t (*)(uint64_t))sub_1D7B0160C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CE0648]);
    sub_1D7B01410(&qword_1F014F218, &qword_1F014F1E8, (uint64_t (*)(uint64_t))sub_1D7B0160C);
    v0 = sub_1D7B4A0B0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F014F1E0);
  }
}

void sub_1D7B0160C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1F014F1F0)
  {
    sub_1D7B01678();
    sub_1D7B012E4();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1F014F1F0);
  }
}

void sub_1D7B01678()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F014F1F8)
  {
    sub_1D7AA787C(255, &qword_1F014F200, (uint64_t (*)(uint64_t))sub_1D7B01710, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CE0648]);
    sub_1D7B01410(&qword_1F014F210, &qword_1F014F200, (uint64_t (*)(uint64_t))sub_1D7B01710);
    v0 = sub_1D7B4A098();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F014F1F8);
  }
}

void sub_1D7B01710()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1F014F208)
  {
    sub_1D7B012E4();
    sub_1D7AD3A4C(255, &qword_1F014F168, (uint64_t (*)(uint64_t))sub_1D7B01124, (uint64_t (*)(void))sub_1D7B01214, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0CDFA38]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1F014F208);
  }
}

void sub_1D7B0179C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F014F228)
  {
    sub_1D7AA787C(255, &qword_1F014F120, (uint64_t (*)(uint64_t))sub_1D7B00E50, MEMORY[0x1E0CDF678]);
    sub_1D7AC14DC(255, &qword_1F014D978, MEMORY[0x1E0CDF5D0], MEMORY[0x1E0CDF598], MEMORY[0x1E0CDC700]);
    v0 = sub_1D7B49978();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F014F228);
  }
}

void sub_1D7B01838(uint64_t a1)
{
  sub_1D7AC129C(a1, &qword_1F014F230, (void (*)(uint64_t))sub_1D7B0179C);
}

void sub_1D7B01854(uint64_t a1)
{
  sub_1D7AC129C(a1, &qword_1F014F238, sub_1D7B01838);
}

void sub_1D7B01870(uint64_t a1)
{
  sub_1D7AC129C(a1, &qword_1F014F240, sub_1D7B01854);
}

uint64_t sub_1D7B0188C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D7AA787C(0, &qword_1F014F120, (uint64_t (*)(uint64_t))sub_1D7B00E50, MEMORY[0x1E0CDF678]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D7B018EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TipView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D7B01930()
{
  type metadata accessor for TipView();
  return sub_1D7AFF6FC();
}

void sub_1D7B0196C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F014F258)
  {
    sub_1D7B019C4();
    v0 = sub_1D7B49C90();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F014F258);
  }
}

unint64_t sub_1D7B019C4()
{
  unint64_t result;

  result = qword_1F014F260;
  if (!qword_1F014F260)
  {
    result = MEMORY[0x1D829FF28](MEMORY[0x1E0DEF070], MEMORY[0x1E0DEF040]);
    atomic_store(result, (unint64_t *)&qword_1F014F260);
  }
  return result;
}

void sub_1D7B01A08(uint64_t a1)
{
  sub_1D7AD3A4C(a1, &qword_1F014F268, (uint64_t (*)(uint64_t))sub_1D7B01A2C, (uint64_t (*)(void))sub_1D7B01BDC, MEMORY[0x1E0CD8530]);
}

void sub_1D7B01A2C(uint64_t a1)
{
  sub_1D7AAD020(a1, &qword_1F014F270, (uint64_t (*)(uint64_t))sub_1D7B01A50, (uint64_t (*)(uint64_t))sub_1D7B01ADC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0CD9BF0]);
}

void sub_1D7B01A50(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  if (!qword_1F014F278)
  {
    v4[0] = type metadata accessor for TipView();
    v4[1] = sub_1D7AA76D4(&qword_1F014F280, (uint64_t (*)(uint64_t))type metadata accessor for TipView, (uint64_t)&protocol conformance descriptor for TipView);
    v2 = MEMORY[0x1D829FEEC](a1, v4, MEMORY[0x1E0CDEDA8], 0);
    if (!v3)
      atomic_store(v2, (unint64_t *)&qword_1F014F278);
  }
}

void sub_1D7B01ADC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F014F288)
  {
    sub_1D7AC14DC(255, &qword_1F014F290, MEMORY[0x1E0CDF5D0], MEMORY[0x1E0CD8DC0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0CD9BF0]);
    sub_1D7B01B5C();
    v0 = sub_1D7B49BE8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F014F288);
  }
}

unint64_t sub_1D7B01B5C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1F014F298;
  if (!qword_1F014F298)
  {
    sub_1D7AC14DC(255, &qword_1F014F290, MEMORY[0x1E0CDF5D0], MEMORY[0x1E0CD8DC0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0CD9BF0]);
    v2[0] = MEMORY[0x1E0CDF5B0];
    v2[1] = MEMORY[0x1E0CD8DA8];
    result = MEMORY[0x1D829FF28](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1F014F298);
  }
  return result;
}

unint64_t sub_1D7B01BDC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[4];

  result = qword_1F014F2A0;
  if (!qword_1F014F2A0)
  {
    sub_1D7B01A2C(255);
    v2 = v1;
    v3[2] = type metadata accessor for TipView();
    v3[3] = sub_1D7AA76D4(&qword_1F014F280, (uint64_t (*)(uint64_t))type metadata accessor for TipView, (uint64_t)&protocol conformance descriptor for TipView);
    v3[0] = swift_getOpaqueTypeConformance2();
    v3[1] = sub_1D7AA76D4(&qword_1F014F2A8, (uint64_t (*)(uint64_t))sub_1D7B01ADC, MEMORY[0x1E0CDB838]);
    result = MEMORY[0x1D829FF28](MEMORY[0x1E0CD9C20], v2, v3);
    atomic_store(result, (unint64_t *)&qword_1F014F2A0);
  }
  return result;
}

uint64_t sub_1D7B01C98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D7B00C34(*(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1D7B01CA0()
{
  return swift_getOpaqueTypeConformance2();
}

_QWORD *initializeBufferWithCopyOfBuffer for TipView(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v16;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v14 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    v6 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v6;
    v7 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v7;
    v8 = (void *)a2[6];
    v9 = a2[7];
    *(_QWORD *)(a1 + 48) = v8;
    *(_QWORD *)(a1 + 56) = v9;
    *(_QWORD *)(a1 + 64) = a2[8];
    *(_BYTE *)(a1 + 72) = *((_BYTE *)a2 + 72);
    *(_QWORD *)(a1 + 80) = a2[10];
    *(_BYTE *)(a1 + 88) = *((_BYTE *)a2 + 88);
    v10 = *(int *)(a3 + 36);
    v16 = (_QWORD *)(a1 + v10);
    v11 = (uint64_t *)((char *)a2 + v10);
    *(_QWORD *)(a1 + 96) = a2[12];
    sub_1D7AA787C(0, &qword_1F014E2F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD9958], MEMORY[0x1E0CD87D0]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = v8;
    swift_retain();
    swift_retain();
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = sub_1D7B4996C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v16, v11, v13);
    }
    else
    {
      *v16 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t destroy for TipView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 36);
  sub_1D7AA787C(0, &qword_1F014E2F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD9958], MEMORY[0x1E0CD87D0]);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = sub_1D7B4996C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for TipView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  _QWORD *v14;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(void **)(a2 + 48);
  v8 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v9 = *(int *)(a3 + 36);
  v14 = (_QWORD *)(a1 + v9);
  v10 = (_QWORD *)(a2 + v9);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  sub_1D7AA787C(0, &qword_1F014E2F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD9958], MEMORY[0x1E0CD87D0]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = v7;
  swift_retain();
  swift_retain();
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_1D7B4996C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v14, v10, v12);
  }
  else
  {
    *v14 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for TipView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t (*v13)(uint64_t);
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(void **)(a2 + 48);
  v7 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v6;
  v8 = v6;

  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v9 = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v9;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v10 = *(int *)(a3 + 36);
    v11 = (_QWORD *)(a1 + v10);
    v12 = (_QWORD *)(a2 + v10);
    v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CD9958];
    v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CD87D0];
    sub_1D7AAD130(a1 + v10, &qword_1F014E2F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD9958], MEMORY[0x1E0CD87D0]);
    sub_1D7AA787C(0, &qword_1F014E2F0, v13, v14);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v15 = sub_1D7B4996C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v11, v12, v15);
    }
    else
    {
      *v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for TipView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  v5 = *(int *)(a3 + 36);
  v6 = (void *)(a1 + v5);
  v7 = (const void *)(a2 + v5);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  sub_1D7AA787C(0, &qword_1F014E2F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD9958], MEMORY[0x1E0CD87D0]);
  v9 = v8;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_1D7B4996C();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v6, v7, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  return a1;
}

uint64_t assignWithTake for TipView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t (*v13)(uint64_t);
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  v9 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);

  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_release();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_release();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_release();
  if (a1 != a2)
  {
    v10 = *(int *)(a3 + 36);
    v11 = (void *)(a1 + v10);
    v12 = (const void *)(a2 + v10);
    v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CD9958];
    v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CD87D0];
    sub_1D7AAD130(a1 + v10, &qword_1F014E2F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD9958], MEMORY[0x1E0CD87D0]);
    sub_1D7AA787C(0, &qword_1F014E2F0, v13, v14);
    v16 = v15;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v17 = sub_1D7B4996C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v11, v12, v17);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for TipView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D7B02474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1D7AA787C(0, &qword_1F014F2B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD9958], MEMORY[0x1E0CD87E8]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for TipView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D7B02514(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1D7AA787C(0, &qword_1F014F2B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD9958], MEMORY[0x1E0CD87E8]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

void sub_1D7B025A0()
{
  unint64_t v0;

  sub_1D7AA787C(319, &qword_1F014E2F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD9958], MEMORY[0x1E0CD87D0]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void destroy for DeviceFeatureAttributes(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

_QWORD *_s8HealthUI23DeviceFeatureAttributesVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[2];
  a1[2] = v4;
  swift_bridgeObjectRetain();
  v5 = v4;
  return a1;
}

_QWORD *assignWithCopy for DeviceFeatureAttributes(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a2[2];
  v5 = (void *)a1[2];
  a1[2] = v4;
  v6 = v4;

  return a1;
}

uint64_t assignWithTake for DeviceFeatureAttributes(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  return a1;
}

uint64_t getEnumTagSinglePayload for TipView.IconConfiguration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TipView.IconConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TipView.IconConfiguration()
{
  return &type metadata for TipView.IconConfiguration;
}

unint64_t sub_1D7B027F0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1F014F360;
  if (!qword_1F014F360)
  {
    sub_1D7AAD020(255, &qword_1F014F250, (uint64_t (*)(uint64_t))sub_1D7B01870, (uint64_t (*)(uint64_t))sub_1D7B0196C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0CD9BF0]);
    v2 = v1;
    v3[0] = sub_1D7AC1644(&qword_1F014F368, (uint64_t (*)(uint64_t))sub_1D7B01870, sub_1D7B028B8, MEMORY[0x1E0CD8D70]);
    v3[1] = sub_1D7AA76D4(&qword_1F014F3B0, (uint64_t (*)(uint64_t))sub_1D7B0196C, MEMORY[0x1E0CDC4E8]);
    result = MEMORY[0x1D829FF28](MEMORY[0x1E0CD9C20], v2, v3);
    atomic_store(result, (unint64_t *)&qword_1F014F360);
  }
  return result;
}

uint64_t sub_1D7B028B8()
{
  return sub_1D7AC1644(&qword_1F014F370, (uint64_t (*)(uint64_t))sub_1D7B01854, sub_1D7B028DC, MEMORY[0x1E0CD9758]);
}

uint64_t sub_1D7B028DC()
{
  return sub_1D7AC1644(&qword_1F014F378, (uint64_t (*)(uint64_t))sub_1D7B01838, (uint64_t (*)(void))sub_1D7B02900, MEMORY[0x1E0CD9758]);
}

unint64_t sub_1D7B02900()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1F014F380;
  if (!qword_1F014F380)
  {
    sub_1D7B0179C();
    v2 = v1;
    v3[0] = sub_1D7B02988();
    v3[1] = sub_1D7B0129C(&qword_1F014F3A8, &qword_1F014D978, MEMORY[0x1E0CDF5D0], MEMORY[0x1E0CDF598]);
    result = MEMORY[0x1D829FF28](MEMORY[0x1E0CD9C20], v2, v3);
    atomic_store(result, (unint64_t *)&qword_1F014F380);
  }
  return result;
}

unint64_t sub_1D7B02988()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1F014F388;
  if (!qword_1F014F388)
  {
    sub_1D7AA787C(255, &qword_1F014F120, (uint64_t (*)(uint64_t))sub_1D7B00E50, MEMORY[0x1E0CDF678]);
    v2 = v1;
    v3 = sub_1D7B02A00();
    result = MEMORY[0x1D829FF28](MEMORY[0x1E0CDF690], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1F014F388);
  }
  return result;
}

unint64_t sub_1D7B02A00()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1F014F390;
  if (!qword_1F014F390)
  {
    sub_1D7B00E50(255);
    v2 = v1;
    v3[0] = sub_1D7AA76D4(&qword_1F014F398, (uint64_t (*)(uint64_t))sub_1D7B00E74, MEMORY[0x1E0CDFCC0]);
    v3[1] = sub_1D7AA76D4(&qword_1F014F3A0, (uint64_t (*)(uint64_t))sub_1D7B01458, MEMORY[0x1E0CDFB10]);
    result = MEMORY[0x1D829FF28](MEMORY[0x1E0CDB8A0], v2, v3);
    atomic_store(result, (unint64_t *)&qword_1F014F390);
  }
  return result;
}

uint64_t sub_1D7B02A98()
{
  sub_1D7B01A08(255);
  sub_1D7AA76D4(&qword_1F014F2B0, (uint64_t (*)(uint64_t))sub_1D7B01A08, MEMORY[0x1E0CD8558]);
  return swift_getOpaqueTypeConformance2();
}

void sub_1D7B02AF8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1D7AA787C(255, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CE0648]);
    v5 = sub_1D7B49924();
    if (!v6)
      atomic_store(v5, a2);
  }
}

uint64_t sub_1D7B02B68(uint64_t a1)
{
  sub_1D7ABF0C8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_1D7B02BB4(uint64_t a1)
{
  sub_1D7AACF84(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D7B02C00@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D7B49A38();
  *a1 = result;
  return result;
}

uint64_t sub_1D7B02C28@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D7B49A38();
  *a1 = result;
  return result;
}

uint64_t sub_1D7B02C50()
{
  return sub_1D7B49A44();
}

uint64_t sub_1D7B02C74()
{
  return sub_1D7B49A44();
}

uint64_t sub_1D7B02C98(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0CDDCD8] - 8) + 32))(a2, a1);
  return a2;
}

uint64_t sub_1D7B02CD4(uint64_t a1)
{
  sub_1D7ABF0C8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

void sub_1D7B02D14(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1D7AA787C(255, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CE0648]);
    v5 = sub_1D7B49924();
    if (!v6)
      atomic_store(v5, a2);
  }
}

uint64_t sub_1D7B02D84(uint64_t a1)
{
  swift_release();
  return a1;
}

uint64_t objectdestroyTm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for TipView();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  v4 = v3 + *(int *)(v1 + 36);
  sub_1D7AA787C(0, &qword_1F014E2F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD9958], MEMORY[0x1E0CD87D0]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_1D7B4996C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_1D7B02EA4()
{
  type metadata accessor for TipView();
  return sub_1D7B009B4();
}

uint64_t sub_1D7B02ED0(uint64_t a1)
{
  swift_retain();
  return a1;
}

uint64_t sub_1D7B02EF8(uint64_t a1, double a2)
{
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int8x16_t v7;
  double v8;
  double v9;
  int8x16_t v10;
  float64x2_t v13;
  float64x2_t v14;
  float64x2_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  float64x2_t v19;
  _QWORD *v20;

  v20 = (_QWORD *)a1;
  swift_bridgeObjectRetain();
  sub_1D7B05C14((uint64_t *)&v20);
  v3 = v20;
  v4 = v20[2];
  if (v4 < 2)
    return (uint64_t)v3;
  v5 = 0;
  v6 = 1;
  while (v5 < v4)
  {
    if (v6 >= v4)
      goto LABEL_24;
    v7 = *(int8x16_t *)&v3[2 * v5 + 4];
    v8 = *(double *)&v3[2 * v5 + 5];
    v9 = v8 + a2;
    if (*(double *)v7.i64 - a2 > v8 + a2)
      goto LABEL_25;
    v10 = *(int8x16_t *)&v3[2 * v6 + 4];
    if (*(double *)v7.i64 - a2 > *(double *)v10.i64 || *(double *)v10.i64 > v9)
    {
      if (__OFADD__(v6++, 1))
        goto LABEL_26;
      ++v5;
      if (v6 >= (uint64_t)v4)
        return (uint64_t)v3;
    }
    else
    {
      *(_QWORD *)&v13.f64[0] = v3[2 * v5 + 4];
      *(_QWORD *)&v13.f64[1] = v3[2 * v6 + 5];
      *(_QWORD *)&v14.f64[0] = v3[2 * v6 + 4];
      *(_QWORD *)&v14.f64[1] = v3[2 * v5 + 5];
      v15 = (float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v14, v13), v7, v10);
      if ((vmovn_s64((int64x2_t)vmvnq_s8((int8x16_t)vcgeq_f64((float64x2_t)vdupq_laneq_s64((int64x2_t)v15, 1), v15))).u8[0] & 1) != 0)
        goto LABEL_27;
      v19 = v15;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v3 = sub_1D7B33014(v3);
      v16 = v3[2];
      if (v5 >= v16)
        goto LABEL_28;
      *(float64x2_t *)&v3[2 * v5 + 4] = v19;
      if (v6 >= v16)
        goto LABEL_29;
      v4 = v16 - 1;
      v17 = v16 - 1 - v6;
      if (v17 < 0)
        goto LABEL_30;
      memmove(&v3[2 * v6 + 4], &v3[2 * v6 + 6], 16 * v17);
      v3[2] = v4;
      if (v6 >= (uint64_t)v4)
        return (uint64_t)v3;
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  sub_1D7B4A8E4();
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

id sub_1D7B030C4()
{
  return sub_1D7B0310C(&OBJC_IVAR___HKBalanceSeries____lazy_storage___backgroundInactiveFillStyle, &qword_1F014CF30, &qword_1F0154530);
}

id sub_1D7B030E8()
{
  return sub_1D7B0310C(&OBJC_IVAR___HKBalanceSeries____lazy_storage___innerFillStyle, &qword_1F014CF38, &qword_1F0154538);
}

id sub_1D7B0310C(uint64_t *a1, uint64_t *a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;

  v4 = *a1;
  v5 = *(void **)(v3 + *a1);
  if (v5)
  {
    v6 = *(id *)(v3 + *a1);
  }
  else
  {
    v9 = objc_msgSend(objc_allocWithZone((Class)HKSolidFillStyle), sel_init);
    v10 = *a2;
    v11 = v9;
    if (v10 != -1)
      swift_once();
    objc_msgSend(v11, sel_setColor_, *a3);

    v12 = *(void **)(v3 + v4);
    *(_QWORD *)(v3 + v4) = v11;
    v6 = v11;

    v5 = 0;
  }
  v13 = v5;
  return v6;
}

id sub_1D7B031D0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR___HKBalanceSeries____lazy_storage___metricsLineStrokeStyle;
  v2 = *(void **)(v0 + OBJC_IVAR___HKBalanceSeries____lazy_storage___metricsLineStrokeStyle);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR___HKBalanceSeries____lazy_storage___metricsLineStrokeStyle);
  }
  else
  {
    v4 = objc_msgSend((id)objc_opt_self(), sel_strokeStyleWithColor_lineWidth_, 0, 2.0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1D7B03250()
{
  return sub_1D7B0310C(&OBJC_IVAR___HKBalanceSeries____lazy_storage___primaryInRangeFillStyle, &qword_1F014CF40, &qword_1F0154540);
}

id sub_1D7B03274()
{
  return sub_1D7B0310C(&OBJC_IVAR___HKBalanceSeries____lazy_storage___primaryOutOfRangeFillStyle, &qword_1F014CF50, &qword_1F0154550);
}

id sub_1D7B03298()
{
  return sub_1D7B0310C(&OBJC_IVAR___HKBalanceSeries____lazy_storage___secondaryInRangeFillStyle, &qword_1F014CF48, &qword_1F0154548);
}

id sub_1D7B032BC()
{
  return sub_1D7B0310C(&OBJC_IVAR___HKBalanceSeries____lazy_storage___secondaryOutOfRangeFillStyle, &qword_1F014CF58, &qword_1F0154558);
}

id sub_1D7B032E0()
{
  return sub_1D7B0310C(&OBJC_IVAR___HKBalanceSeries____lazy_storage___warmupFillStyle, &qword_1F014CF68, &qword_1F0154568);
}

id sub_1D7B03304()
{
  return sub_1D7B0310C(&OBJC_IVAR___HKBalanceSeries____lazy_storage___warmupInnerFillStyle, &qword_1F014CF60, &qword_1F0154560);
}

double sub_1D7B03328(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  _QWORD *v4;
  double v10;
  CGRect v11;

  (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v4) + 0x1C8))();
  v11.origin.x = a1;
  v11.origin.y = a2;
  v11.size.width = a3;
  v11.size.height = a4;
  CGRectGetWidth(v11);
  sub_1D7AA792C();
  sub_1D7B4A2E4();
  return v10;
}

__n128 sub_1D7B03408@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v2;
  __int128 v3;
  __n128 result;
  __int128 v5;

  v2 = *(_BYTE *)(a1 + 64);
  v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v3;
  result = *(__n128 *)(a1 + 32);
  v5 = *(_OWORD *)(a1 + 48);
  *(__n128 *)(a2 + 32) = result;
  *(_OWORD *)(a2 + 48) = v5;
  *(_BYTE *)(a2 + 64) = v2;
  return result;
}

id BalanceSeries.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id BalanceSeries.init()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v7;
  uint64_t v8;
  objc_class *v9;
  id v10;
  objc_class *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  uint64_t v21;
  objc_super v22;
  objc_super v23;

  sub_1D7AAE0AC(0, (unint64_t *)&qword_1F014DFD0, (void (*)(uint64_t))MEMORY[0x1E0D28FE0]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v21 - v2;
  v4 = (uint64_t)&v0[OBJC_IVAR___HKBalanceSeries_selectedMetric];
  v5 = sub_1D7B49504();
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
  v6(v4, 1, 1, v5);
  *(_QWORD *)&v0[OBJC_IVAR___HKBalanceSeries____lazy_storage___backgroundInactiveFillStyle] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___HKBalanceSeries____lazy_storage___innerFillStyle] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___HKBalanceSeries____lazy_storage___metricsLineStrokeStyle] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___HKBalanceSeries____lazy_storage___primaryInRangeFillStyle] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___HKBalanceSeries____lazy_storage___primaryOutOfRangeFillStyle] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___HKBalanceSeries____lazy_storage___secondaryInRangeFillStyle] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___HKBalanceSeries____lazy_storage___secondaryOutOfRangeFillStyle] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___HKBalanceSeries____lazy_storage___warmupFillStyle] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___HKBalanceSeries____lazy_storage___warmupInnerFillStyle] = 0;
  v6((uint64_t)v3, 1, 1, v5);
  swift_beginAccess();
  v7 = v0;
  sub_1D7AAF604((uint64_t)v3, v4);
  swift_endAccess();
  sub_1D7B036C8();
  v8 = swift_allocObject();
  *(_DWORD *)(v8 + 84) = 0;
  *(_OWORD *)(v8 + 16) = 0u;
  *(_OWORD *)(v8 + 32) = 0u;
  *(_OWORD *)(v8 + 48) = 0u;
  *(_OWORD *)(v8 + 64) = 0u;
  *(_BYTE *)(v8 + 80) = 1;
  *(_QWORD *)&v7[OBJC_IVAR___HKBalanceSeries_lollipopPathRangeLock] = v8;

  v9 = (objc_class *)type metadata accessor for BalanceSeries();
  v23.receiver = v7;
  v23.super_class = v9;
  v10 = objc_msgSendSuper2(&v23, sel_init);
  v11 = (objc_class *)type metadata accessor for BalanceYAxis();
  v12 = objc_allocWithZone(v11);
  v13 = objc_allocWithZone((Class)HKNumericAxisConfiguration);
  v14 = v10;
  v15 = objc_msgSend(v13, sel_init);
  v16 = (void *)objc_opt_self();
  v17 = v15;
  v18 = objc_msgSend(v16, sel_preferredAxisStyle);
  objc_msgSend(v17, sel_setPreferredStyle_, v18);

  v22.receiver = v12;
  v22.super_class = v11;
  v19 = objc_msgSendSuper2(&v22, sel_initWithConfiguration_, v17);

  objc_msgSend(v14, sel_setYAxis_, v19);
  return v14;
}

void sub_1D7B036C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F014F430)
  {
    sub_1D7AAE0AC(255, (unint64_t *)&unk_1F014EDE0, type metadata accessor for HKGraphSeriesDataPointPathRange);
    type metadata accessor for os_unfair_lock_s(255);
    v0 = sub_1D7B4A818();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F014F430);
  }
}

uint64_t type metadata accessor for BalanceSeries()
{
  uint64_t result;

  result = qword_1F014F488;
  if (!qword_1F014F488)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1D7B03798(void *a1, uint64_t a2, uint64_t a3, char *a4, void *a5, void *a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  id v32;
  void *v33;
  double v34;
  double v35;
  uint64_t v36;
  id v37;
  id v38;
  void *v39;
  double v40;
  double v41;
  void *v42;
  double v43;
  double v44;
  unint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  id v49;
  void *v50;
  double v51;
  double v52;
  void *v53;
  double v54;
  double v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t, uint64_t);
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char v64;
  void (*v65)(char *, uint64_t);
  uint64_t v66;
  char v67;
  uint64_t v68;
  objc_class *v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  NSObject *v75;
  os_log_type_t v76;
  uint8_t *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  void *v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  void *v89;
  id v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char **v97;
  unint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  id v109;
  id v110;
  int v111;
  id v112;
  double v113;
  double v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  objc_super v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;

  v7 = v6;
  v110 = a6;
  v109 = a5;
  v94 = a3;
  v93 = a2;
  swift_getObjectType();
  v10 = sub_1D7B4969C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D7AAE0AC(0, (unint64_t *)&qword_1F014DFD0, (void (*)(uint64_t))MEMORY[0x1E0D28FE0]);
  MEMORY[0x1E0C80A78](v14);
  v108 = (uint64_t)&v91 - v15;
  v107 = type metadata accessor for BalanceCoordinateInfo.Context(0);
  MEMORY[0x1E0C80A78](v107);
  v106 = (uint64_t)&v91 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = sub_1D7B4A1C4();
  v104 = *(_QWORD *)(v105 - 8);
  v17 = MEMORY[0x1E0C80A78](v105);
  v103 = (char *)&v91 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v102 = (char *)&v91 - v19;
  sub_1D7ACB9A8();
  v101 = v20;
  v21 = MEMORY[0x1E0C80A78](v20);
  v100 = (char *)&v91 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v99 = (char *)&v91 - v23;
  v24 = objc_msgSend(a1, sel_chartPoints);
  if (v24
    && (v25 = v24,
        sub_1D7ADE914(0, (unint64_t *)&qword_1F014DF40),
        v26 = sub_1D7B4A4AC(),
        v25,
        v27 = sub_1D7AE2490(v26),
        swift_bridgeObjectRelease(),
        v27))
  {
    v123 = MEMORY[0x1E0DEE9D8];
    if (v27 >> 62)
      goto LABEL_30;
    v28 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v28)
    {
      while (1)
      {
        v92 = a4;
        if (v28 < 1)
          break;
        v98 = v27 & 0xC000000000000001;
        v95 = v7 + OBJC_IVAR___HKBalanceSeries_selectedMetric;
        swift_beginAccess();
        v29 = 0;
        v30 = 0;
        v97 = (char **)v27;
        v96 = v28;
        while (1)
        {
          v31 = v98 ? (char *)MEMORY[0x1D829E758](v29, v27) : (char *)*(id *)(v27 + 8 * v29 + 32);
          a4 = v31;
          v27 = (unint64_t)&selRef_systolicSymbolColor;
          v32 = objc_msgSend(v109, sel_transform);
          v33 = (void *)sub_1D7B49150();
          objc_msgSend(v32, sel_coordinateForValue_, v33);
          v35 = v34;

          v36 = sub_1D7AC1774();
          v37 = v110;
          v7 = sub_1D7B08088(v36, v37);
          swift_bridgeObjectRelease();

          sub_1D7AC1C20();
          v38 = objc_msgSend(v37, sel_transform);
          v39 = (void *)sub_1D7B494BC();
          objc_msgSend(v38, sel_coordinateForValue_, v39);
          v41 = v40;

          v42 = (void *)sub_1D7B494BC();
          objc_msgSend(v38, sel_coordinateForValue_, v42);
          v44 = v43;

          if (v41 > v44)
            break;
          v45 = sub_1D7AC1C6C();
          v48 = v47;
          v116 = v29;
          v117 = v30;
          v115 = v7;
          if ((v47 & 1) != 0)
          {
            v113 = *(double *)&v45;
            v114 = *(double *)&v46;
          }
          else
          {
            v49 = objc_msgSend(v37, sel_transform);
            v50 = (void *)sub_1D7B494BC();
            v27 = (unint64_t)&selRef_clearDisplayTypeStack;
            objc_msgSend(v49, sel_coordinateForValue_, v50);
            v52 = v51;

            v53 = (void *)sub_1D7B494BC();
            objc_msgSend(v49, sel_coordinateForValue_, v53);
            v55 = v54;

            if (v52 > v55)
              goto LABEL_29;
            v113 = v52;
            v114 = v55;
          }
          v111 = v48 & 1;
          v56 = &a4[OBJC_IVAR____TtC8HealthUI17BalanceChartPoint_collection];
          __swift_project_boxed_opaque_existential_0(&a4[OBJC_IVAR____TtC8HealthUI17BalanceChartPoint_collection], *(_QWORD *)&a4[OBJC_IVAR____TtC8HealthUI17BalanceChartPoint_collection + 24]);
          v112 = a4;
          v57 = (uint64_t)v99;
          sub_1D7B49600();
          v58 = v104;
          v59 = *(void (**)(char *, uint64_t, uint64_t))(v104 + 16);
          v60 = v102;
          v61 = v105;
          v59(v102, v57 + *(int *)(v101 + 36), v105);
          sub_1D7AAD1B0(v57, (uint64_t (*)(_QWORD))sub_1D7ACB9A8);
          __swift_project_boxed_opaque_existential_0(v56, *((_QWORD *)v56 + 3));
          v62 = (uint64_t)v100;
          sub_1D7B49600();
          v63 = v103;
          v59(v103, v62, v61);
          sub_1D7AAD1B0(v62, (uint64_t (*)(_QWORD))sub_1D7ACB9A8);
          sub_1D7AA76D4(&qword_1F014D5E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB44E0], MEMORY[0x1E0CB4500]);
          v64 = sub_1D7B4A320();
          v65 = *(void (**)(char *, uint64_t))(v58 + 8);
          v65(v63, v61);
          v65(v60, v61);
          sub_1D7AC0938((uint64_t)v56, (uint64_t)&v119);
          v66 = v108;
          sub_1D7AAF5A8(v95, v108);
          if ((v64 & 1) != 0)
            v67 = 1;
          else
            v67 = 2;
          v68 = v106;
          sub_1D7B08D68(v66, v106, (unint64_t *)&qword_1F014DFD0, (void (*)(uint64_t))MEMORY[0x1E0D28FE0]);
          *(_BYTE *)(v68 + *(int *)(v107 + 20)) = v67;
          v69 = (objc_class *)type metadata accessor for BalanceCoordinateInfo(0);
          v70 = objc_allocWithZone(v69);
          sub_1D7AC0938((uint64_t)&v119, (uint64_t)v70 + OBJC_IVAR____TtC8HealthUI21BalanceCoordinateInfo_collection);
          sub_1D7ACDA54(v68, (uint64_t)v70 + OBJC_IVAR____TtC8HealthUI21BalanceCoordinateInfo_context);
          v118.receiver = v70;
          v118.super_class = v69;
          v71 = objc_msgSendSuper2(&v118, sel_init);
          sub_1D7AAD1B0(v68, type metadata accessor for BalanceCoordinateInfo.Context);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)&v119);
          v72 = objc_allocWithZone((Class)type metadata accessor for BalanceCoordinate());
          v73 = sub_1D7B1BDB8(v115, *(unint64_t *)&v113, *(uint64_t *)&v114, v111, (uint64_t)v71, v35, v41, v44);

          v74 = v73;
          MEMORY[0x1D829E3EC]();
          if (*(_QWORD *)((v123 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v123 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1D7B4A4C4();
          v29 = v116 + 1;
          sub_1D7B4A4DC();
          sub_1D7B4A4B8();

          v27 = (unint64_t)v97;
          v30 = v117;
          if (v96 == v29)
            goto LABEL_27;
        }
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        swift_bridgeObjectRetain();
        v28 = sub_1D7B4A8A8();
        swift_bridgeObjectRelease();
        if (!v28)
          goto LABEL_31;
      }
      __break(1u);
      goto LABEL_36;
    }
LABEL_31:
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D7B4966C();
    v75 = sub_1D7B49684();
    v76 = sub_1D7B4A608();
    if (os_log_type_enabled(v75, v76))
    {
      v77 = (uint8_t *)swift_slowAlloc();
      v78 = swift_slowAlloc();
      v119 = v78;
      v117 = v10;
      *(_DWORD *)v77 = 136446210;
      v79 = sub_1D7B4AA94();
      v122 = sub_1D7AA4DE4(v79, v80, &v119);
      sub_1D7B4A704();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D7813000, v75, v76, "[%{public}s] Unable to create coordinates from unsupported chart points", v77, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D829FFF4](v78, -1, -1);
      MEMORY[0x1D829FFF4](v77, -1, -1);

      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v117);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    }
    v81 = v94;
    v82 = v93;
    sub_1D7ADE914(0, (unint64_t *)&unk_1F014EB10);
    v83 = (void *)sub_1D7B4A4A0();
    v84 = (void *)objc_opt_self();
    v119 = v82;
    v120 = v81;
    v121 = a4;
    v85 = objc_msgSend(v84, sel_coordinateListWithCoordinates_blockPath_, v83, &v119);

    if (v85)
      return;
    __break(1u);
LABEL_27:
    swift_bridgeObjectRelease();
    a4 = v92;
  }
  v86 = v94;
  v87 = v93;
  sub_1D7ADE914(0, (unint64_t *)&unk_1F014EB10);
  swift_bridgeObjectRetain();
  v88 = (void *)sub_1D7B4A4A0();
  swift_bridgeObjectRelease();
  v89 = (void *)objc_opt_self();
  v119 = v87;
  v120 = v86;
  v121 = a4;
  v90 = objc_msgSend(v89, sel_coordinateListWithCoordinates_blockPath_, v88, &v119);

  if (!v90)
  {
LABEL_36:
    __break(1u);
    return;
  }
  swift_bridgeObjectRelease();
}

uint64_t sub_1D7B04398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9, double a10, double a11, double a12, uint64_t a13, uint64_t a14, void *a15, double a16, uint64_t a17, uint64_t (*a18)(char *, uint64_t, uint64_t), uint64_t a19, void *a20,uint64_t a21,unsigned __int8 a22,void *a23,void *a24,void *a25,double a26,uint64_t a27)
{
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t result;
  uint64_t v46;
  char *v47;
  double v48;
  uint64_t v49;
  double *v50;
  char v51;
  double v52;
  double v53;
  void *v54;
  id v55;
  double v56;
  id v57;
  uint64_t (*v58)(char *, uint64_t, uint64_t);
  int v59;
  uint64_t v60;
  double v61;
  uint64_t v62;
  uint64_t v63;
  double v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  int64_t v70;
  uint64_t v71;
  int64x2_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  double v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  int64_t v86;
  int64x2_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  double v93;
  uint64_t v94;
  uint64_t v95;
  double v96;
  double v97;
  char v98;
  id v99;
  uint64_t v100;
  void *v101;
  void *v102;
  double v103;
  double v104;
  void *v105;
  double v106;
  double *v107;
  double v108;
  double v109;
  id v110;
  id v111;
  uint64_t v112;
  double v113;
  double v114;
  void *v115;
  double v116;
  double *v117;
  void *v118;
  double v119;
  double v120;
  id v121;
  id v122;
  uint64_t v123;
  uint64_t v124;
  int64x2_t v125;
  void *v126;
  double v127;
  double v128;
  uint64_t v129;
  uint64_t v130;
  void *v131;
  uint64_t v132;
  void *v133;
  int v134;
  id v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t (*v140)(char *, uint64_t, uint64_t);
  uint64_t v141;
  double v142;
  int64x2_t v143;
  uint64_t v144;
  _OWORD v145[4];
  uint64_t v146[4];
  _OWORD v147[4];
  char v148;
  CGRect v149;
  CGRect v150;

  v139 = a5;
  v138 = a4;
  v137 = a3;
  v136 = a2;
  v142 = a26;
  v133 = a23;
  v134 = a22;
  v141 = a21;
  v135 = a20;
  v144 = a19;
  v140 = a18;
  sub_1D7AAE0AC(0, (unint64_t *)&qword_1F014DFD0, (void (*)(uint64_t))MEMORY[0x1E0D28FE0]);
  v36 = MEMORY[0x1E0C80A78](v35);
  v38 = &v125.i8[-((v37 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v36);
  v40 = &v125.i8[-v39];
  v41 = sub_1D7B49504();
  v42 = *(_QWORD *)(v41 - 8);
  v43 = MEMORY[0x1E0C80A78](v41);
  v143.i64[0] = (uint64_t)v125.i64 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v43);
  v47 = &v125.i8[-v46];
  if (a1)
  {
    type metadata accessor for BalanceCoordinate();
    result = swift_dynamicCastClass();
    if (result)
    {
      v131 = a24;
      v48 = *(double *)(result + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_xValue);
      v49 = result;
      swift_unknownObjectRetain();
      v149.origin.x = a6;
      v149.origin.y = a7;
      v149.size.width = a8;
      v149.size.height = a9;
      if (CGRectGetMinX(v149) - a10 <= v48
        && (v132 = v49,
            v150.origin.x = a6,
            v150.origin.y = a7,
            v150.size.width = a8,
            v150.size.height = a9,
            v48 <= CGRectGetMaxX(v150) + a10))
      {
        v50 = (double *)(v132 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueWarmupRange);
        v51 = *(_BYTE *)(v132 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueWarmupRange + 16);
        v129 = a27;
        v130 = a1;
        v126 = a25;
        if ((v51 & 1) == 0)
        {
          v128 = a12;
          v52 = *v50;
          v127 = v50[1];
          v53 = a10 * 0.5 + v127 - (v52 - a10 * 0.5);
          v54 = (void *)objc_opt_self();
          v55 = objc_msgSend(v54, sel_bezierPathWithRoundedRect_cornerRadius_, v48 - a10 * 0.5, v52 - a10 * 0.5, a10, v53, a10 * 0.5);
          objc_msgSend(a15, sel_appendPath_, v55);

          v56 = v52 - a11 * 0.5;
          a12 = v128;
          v57 = objc_msgSend(v54, sel_bezierPathWithRoundedRect_cornerRadius_, v48 - a11 * 0.5, v56, a11, a11 * 0.5 + v127 - v56);
          objc_msgSend(v140, sel_appendPath_, v57);

        }
        sub_1D7AAF5A8(v144, (uint64_t)v40);
        v58 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v42 + 48);
        v59 = v58(v40, 1, v41);
        v140 = v58;
        if (v59 == 1)
        {
          sub_1D7AF44A8((uint64_t)v40);
          v60 = v132;
          v61 = *(double *)(v132 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValuesByMetric);
          v62 = swift_bridgeObjectRetain();
          v63 = sub_1D7B065C0(v62);
          v127 = v61;
          swift_bridgeObjectRelease();
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v47, v40, v41);
          v64 = *(double *)(v132 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValuesByMetric);
          v65 = *(_QWORD *)(*(_QWORD *)&v64 + 16);
          v127 = v64;
          if (v65 && (v66 = sub_1D7AF4524((uint64_t)v47), (v67 & 1) != 0))
          {
            v63 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v64 + 56) + 8 * v66);
            swift_bridgeObjectRetain();
          }
          else
          {
            v63 = MEMORY[0x1E0DEE9D8];
          }
          (*(void (**)(char *, uint64_t))(v42 + 8))(v47, v41);
          v60 = v132;
        }
        v68 = MEMORY[0x1E0DEE9D8];
        swift_unknownObjectRetain();
        v69 = sub_1D7B068FC(v63, v60);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        v70 = *(_QWORD *)(v69 + 16);
        v128 = 0.0;
        if (v70)
        {
          v71 = v68;
          *(_QWORD *)&v147[0] = v68;
          sub_1D7AA5F80(0, v70, 0);
          v73 = 0;
          v74 = *(_QWORD *)&v147[0];
          do
          {
            v72.i64[0] = *(_QWORD *)(v69 + 8 * v73 + 32);
            *(_QWORD *)&v147[0] = v74;
            v76 = *(_QWORD *)(v74 + 16);
            v75 = *(_QWORD *)(v74 + 24);
            if (v76 >= v75 >> 1)
            {
              v125 = v72;
              sub_1D7AA5F80(v75 > 1, v76 + 1, 1);
              v72.i64[0] = v125.i64[0];
              v74 = *(_QWORD *)&v147[0];
            }
            ++v73;
            *(_QWORD *)(v74 + 16) = v76 + 1;
            v72 = vdupq_lane_s64(v72.i64[0], 0);
            *(int64x2_t *)(v74 + 16 * v76 + 32) = v72;
          }
          while (v70 != v73);
          swift_bridgeObjectRelease();
        }
        else
        {
          v71 = v68;
          swift_bridgeObjectRelease();
          v74 = MEMORY[0x1E0DEE9D8];
        }
        v77 = v143.i64[0];
        v78 = v127;
        v79 = sub_1D7B02EF8(v74, 8.0);
        swift_bridgeObjectRelease();
        sub_1D7AAF5A8(v144, (uint64_t)v38);
        if (v140(v38, 1, v41) == 1)
        {
          sub_1D7AF44A8((uint64_t)v38);
          v80 = swift_bridgeObjectRetain();
          v81 = sub_1D7B065C0(v80);
          swift_bridgeObjectRelease();
        }
        else
        {
          (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v77, v38, v41);
          if (*(_QWORD *)(*(_QWORD *)&v78 + 16) && (v82 = sub_1D7AF4524(v77), (v83 & 1) != 0))
          {
            v81 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v78 + 56) + 8 * v82);
            swift_bridgeObjectRetain();
          }
          else
          {
            v81 = MEMORY[0x1E0DEE9D8];
          }
          (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v77, v41);
        }
        v84 = v71;
        swift_unknownObjectRetain();
        v85 = sub_1D7B06A0C(v81, v132);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        v86 = *(_QWORD *)(v85 + 16);
        if (v86)
        {
          *(_QWORD *)&v147[0] = v84;
          sub_1D7AA5F80(0, v86, 0);
          v88 = 0;
          v89 = *(_QWORD *)&v147[0];
          do
          {
            v87.i64[0] = *(_QWORD *)(v85 + 8 * v88 + 32);
            *(_QWORD *)&v147[0] = v89;
            v91 = *(_QWORD *)(v89 + 16);
            v90 = *(_QWORD *)(v89 + 24);
            if (v91 >= v90 >> 1)
            {
              v143 = v87;
              sub_1D7AA5F80(v90 > 1, v91 + 1, 1);
              v87.i64[0] = v143.i64[0];
              v89 = *(_QWORD *)&v147[0];
            }
            ++v88;
            *(_QWORD *)(v89 + 16) = v91 + 1;
            v87 = vdupq_lane_s64(v87.i64[0], 0);
            *(int64x2_t *)(v89 + 16 * v91 + 32) = v87;
          }
          while (v86 != v88);
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          v89 = MEMORY[0x1E0DEE9D8];
        }
        v92 = v129;
        v93 = v142;
        v94 = v141;
        v143.i64[0] = v129 + 16;
        v95 = sub_1D7B02EF8(v89, 8.0);
        swift_bridgeObjectRelease();
        v96 = COERCE_DOUBLE(sub_1D7B1B57C(v144));
        if ((v98 & 1) == 0)
        {
          v99 = objc_msgSend((id)objc_opt_self(), sel_bezierPathWithRoundedRect_cornerRadius_, v48 - a10 * 0.5, v96 - a10 * 0.5, a10, a10 * 0.5 + v97 - (v96 - a10 * 0.5), a10 * 0.5);
          objc_msgSend(v135, sel_appendPath_, v99);

        }
        sub_1D7B08D68(v94, (uint64_t)v147, (unint64_t *)&unk_1F014EDE0, type metadata accessor for HKGraphSeriesDataPointPathRange);
        if (v148 == 1)
          goto LABEL_48;
        v146[0] = v136;
        v146[1] = v137;
        v146[2] = v138;
        v146[3] = v139;
        v145[0] = v147[0];
        v145[1] = v147[1];
        v145[2] = v147[2];
        v145[3] = v147[3];
        if (!HKGraphSeriesDataPointPathInRangeInclusive(v146, (uint64_t *)v145))
          goto LABEL_48;
        if ((v134 & 1) != 0)
        {
          v142 = v48;
          v144 = v79;
          v100 = *(_QWORD *)(v79 + 16);
          v101 = v131;
          v102 = v133;
          if (v100)
          {
            v103 = v142;
            v104 = v142 - a10 * 0.5;
            v105 = (void *)objc_opt_self();
            v106 = v103 - a12 * 0.5;
            v107 = (double *)(v144 + 40);
            do
            {
              v108 = *(v107 - 1);
              v109 = *v107;
              v110 = objc_msgSend(v105, sel_bezierPathWithRoundedRect_cornerRadius_, v104, v108 - a10 * 0.5, a10, a10 * 0.5 + *v107 - (v108 - a10 * 0.5), a10 * 0.5);
              objc_msgSend(v102, sel_appendPath_, v110);

              v111 = objc_msgSend(v105, sel_bezierPathWithRoundedRect_cornerRadius_, v106, v108 - a12 * 0.5, a12, a12 * 0.5 + v109 - (v108 - a12 * 0.5), a12 * 0.5);
              objc_msgSend(v101, sel_appendPath_, v111);

              v107 += 2;
              --v100;
            }
            while (v100);
          }
          swift_bridgeObjectRelease();
          v112 = *(_QWORD *)(v95 + 16);
          if (v112)
          {
            v113 = v142;
            v114 = v142 - a10 * 0.5;
            v115 = (void *)objc_opt_self();
            v116 = v113 - a12 * 0.5;
            v117 = (double *)(v95 + 40);
            v118 = v126;
            do
            {
              v119 = *(v117 - 1);
              v120 = *v117;
              v121 = objc_msgSend(v115, sel_bezierPathWithRoundedRect_cornerRadius_, v114, v119 - a10 * 0.5, a10, a10 * 0.5 + *v117 - (v119 - a10 * 0.5), a10 * 0.5);
              objc_msgSend(v118, sel_appendPath_, v121);

              v122 = objc_msgSend(v115, sel_bezierPathWithRoundedRect_cornerRadius_, v116, v119 - a12 * 0.5, a12, a12 * 0.5 + v120 - (v119 - a12 * 0.5), a12 * 0.5);
              objc_msgSend(*(id *)&v93, sel_appendPath_, v122);

              v117 += 2;
              --v112;
            }
            while (v112);
          }
          swift_bridgeObjectRelease();
          v92 = v129;
        }
        else
        {
LABEL_48:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v123 = *(_QWORD *)(v132 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueMedialRange);
        v124 = *(_QWORD *)(v132 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueMedialRange + 8);
        swift_unknownObjectRelease();
        result = swift_beginAccess();
        *(_QWORD *)(v92 + 16) = v123;
        *(_QWORD *)(v92 + 24) = v124;
        *(_BYTE *)(v92 + 32) = 0;
      }
      else
      {
        return swift_unknownObjectRelease();
      }
    }
  }
  return result;
}

char *sub_1D7B04EB0(char *result, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, double a6, double a7, double a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, void *a18, CGContext *a19, void *a20,uint64_t a21,void *a22,void *a23,void *a24,uint64_t a25)
{
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  double *v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  int v50;
  id v51;
  const CGPath *v52;
  void *v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  CGRect v60;

  if (result)
  {
    v33 = (_BYTE *)(a17 + 16);
    type metadata accessor for BalanceCoordinate();
    v34 = swift_dynamicCastClass();
    if (!v34)
      goto LABEL_5;
    v35 = v34;
    v36 = *(double *)(v34 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_xValue);
    swift_unknownObjectRetain();
    v60.origin.x = a2;
    v60.origin.y = a3;
    v60.size.width = a4;
    v60.size.height = a5;
    if (CGRectGetMinX(v60) > v36)
    {
      swift_unknownObjectRelease();
LABEL_5:
      result = (char *)swift_dynamicCastClass();
      if (!result)
        return result;
      v37 = (uint64_t)result;
      if (*(_QWORD *)(*(_QWORD *)&result[OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValuesByMetric] + 16)
        && (sub_1D7AF4524(a15), (v38 & 1) != 0))
      {
        swift_unknownObjectRetain();
        v39 = swift_bridgeObjectRetain();
        v40 = (double *)sub_1D7B06B14(v39, v37);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        if (!*((_QWORD *)v40 + 2))
          goto LABEL_9;
      }
      else
      {
        v40 = (double *)MEMORY[0x1E0DEE9D8];
        if (!*(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16))
        {
LABEL_9:
          result = (char *)swift_bridgeObjectRelease();
          if ((*(_BYTE *)(v37 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueWarmupRange + 16) & 1) == 0)
          {
            result = (char *)swift_beginAccess();
            *v33 = 0;
          }
          return result;
        }
      }
      v44 = v40[4];
      v45 = v40[5];
      swift_bridgeObjectRelease();
      return (char *)objc_msgSend(a16, sel_moveToPoint_, v44, v45);
    }
    if (*(_QWORD *)(*(_QWORD *)(v35 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValuesByMetric) + 16)
      && (sub_1D7AF4524(a15), (v41 & 1) != 0))
    {
      swift_unknownObjectRetain();
      v42 = swift_bridgeObjectRetain();
      v43 = sub_1D7B06B14(v42, v35);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    else
    {
      v43 = MEMORY[0x1E0DEE9D8];
    }
    if (*(_QWORD *)(v43 + 16))
    {
      v46 = *(double *)(v43 + 32);
      v47 = *(double *)(v43 + 40);
      swift_bridgeObjectRelease();
      objc_msgSend(a16, sel_currentPoint);
      v49 = vabdd_f64(v46, v48);
      swift_beginAccess();
      if (v49 < a6)
        v50 = *v33;
      else
        v50 = 0;
      swift_beginAccess();
      *v33 = v50;
      if (v50 == 1)
      {
        objc_msgSend(a16, sel_addLineToPoint_, v46, v47);
        v51 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3508]), sel_init);
        objc_msgSend(v51, sel_appendPath_, a16);
        objc_msgSend(a18, sel_applyToContext_, a19);
        v52 = (const CGPath *)objc_msgSend(v51, sel_CGPath);
        CGContextAddPath(a19, v52);

      }
      else
      {
        swift_beginAccess();
        *v33 = 1;
      }
      if (*(double *)(v35 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueMedialRange) > v47
        || v47 > *(double *)(v35 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueMedialRange + 8))
      {
        a22 = a24;
        v55 = (void *)objc_opt_self();
        v56 = objc_msgSend(v55, sel_bezierPathWithRoundedRect_cornerRadius_, v46 - a7 * 0.5, v47 - a7 * 0.5, a7, a7 * 0.5 + v47 - (v47 - a7 * 0.5), a7 * 0.5);
        objc_msgSend(a23, sel_appendPath_, v56);
      }
      else
      {
        v55 = (void *)objc_opt_self();
        v56 = objc_msgSend(v55, sel_bezierPathWithRoundedRect_cornerRadius_, v46 - a7 * 0.5, v47 - a7 * 0.5, a7, a7 * 0.5 + v47 - (v47 - a7 * 0.5), a7 * 0.5);
        objc_msgSend(a20, sel_appendPath_, v56);
      }

      v57 = objc_msgSend(v55, sel_bezierPathWithRoundedRect_cornerRadius_, v46 - a8 * 0.5, v47 - a8 * 0.5, a8, a8 * 0.5 + v47 - (v47 - a8 * 0.5));
      objc_msgSend(a22, sel_appendPath_, v57);

      objc_msgSend(a16, sel_moveToPoint_, v46, v47);
    }
    else
    {
      swift_bridgeObjectRelease();
      if ((*(_BYTE *)(v35 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueWarmupRange + 16) & 1) == 0)
      {
        swift_beginAccess();
        *v33 = 0;
      }
    }
    v58 = *(_QWORD *)(v35 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueMedialRange);
    v59 = *(_QWORD *)(v35 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueMedialRange + 8);
    swift_unknownObjectRelease();
    result = (char *)swift_beginAccess();
    *(_QWORD *)(a25 + 16) = v58;
    *(_QWORD *)(a25 + 24) = v59;
    *(_BYTE *)(a25 + 32) = 0;
  }
  return result;
}

double sub_1D7B055DC(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_BYTE *)(a1 + 64) = 1;
  return result;
}

id BalanceSeries.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BalanceSeries();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1D7B059BC(uint64_t a1)
{
  return sub_1D7B05BD4(a1, (SEL *)&selRef_systemGray3Color, &qword_1F0154530);
}

id sub_1D7B059D0(uint64_t a1)
{
  return sub_1D7B05BD4(a1, (SEL *)&selRef_hk_chartBackgroundColor, &qword_1F0154538);
}

void sub_1D7B059E4(uint64_t a1)
{
  sub_1D7B05A74(a1, 0xD000000000000017, 0x80000001D7BA41B0, &qword_1F0154540);
}

void sub_1D7B05A08(uint64_t a1)
{
  sub_1D7B05A74(a1, 0xD000000000000019, 0x80000001D7BA6B70, &qword_1F0154548);
}

void sub_1D7B05A2C(uint64_t a1)
{
  sub_1D7B05A74(a1, 0xD000000000000017, 0x80000001D7BA4190, &qword_1F0154550);
}

void sub_1D7B05A50(uint64_t a1)
{
  sub_1D7B05A74(a1, 0xD000000000000019, 0x80000001D7BA6B50, &qword_1F0154558);
}

void sub_1D7B05A74(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  id v5;
  void *v6;
  id v7;

  if (qword_1F014CF90 != -1)
    swift_once();
  v5 = (id)qword_1F0154598;
  v6 = (void *)sub_1D7B4A38C();
  v7 = objc_msgSend((id)objc_opt_self(), sel_colorNamed_inBundle_compatibleWithTraitCollection_, v6, v5, 0);

  if (v7)
    *a4 = v7;
  else
    __break(1u);
}

void sub_1D7B05B2C()
{
  void *v0;
  id v1;
  id v2;
  id v3;

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_systemGray6Color);
  v2 = objc_msgSend(v0, sel_systemGray5Color);
  v3 = HKUIDynamicColorWithColors(v1, v2);

  if (v3)
    qword_1F0154560 = (uint64_t)v3;
  else
    __break(1u);
}

id sub_1D7B05BC0(uint64_t a1)
{
  return sub_1D7B05BD4(a1, (SEL *)&selRef_systemGray3Color, &qword_1F0154568);
}

id sub_1D7B05BD4(uint64_t a1, SEL *a2, _QWORD *a3)
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), *a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D7B05C14(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1D7AFB604(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_1D7B05C7C(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1D7B05C7C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  double *v17;
  double v18;
  double v19;
  __int128 *v20;
  uint64_t v21;
  uint64_t v22;
  __int128 *v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char *v33;
  char *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  BOOL v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  uint64_t v57;
  char v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  unint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  double v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  unint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  double *__dst;

  v3 = a1[1];
  result = sub_1D7B4A908();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_137;
    if ((unint64_t)v3 >= 2)
    {
      v82 = *a1;
      v83 = -1;
      v84 = 1;
      v85 = *a1;
      do
      {
        v86 = *(double *)(v82 + 16 * v84);
        v87 = v83;
        v88 = v85;
        do
        {
          if (v86 >= *(double *)v88)
            break;
          if (!v82)
            goto LABEL_141;
          v89 = *(_QWORD *)(v88 + 24);
          *(_OWORD *)(v88 + 16) = *(_OWORD *)v88;
          *(double *)v88 = v86;
          *(_QWORD *)(v88 + 8) = v89;
          v88 -= 16;
        }
        while (!__CFADD__(v87++, 1));
        ++v84;
        v85 += 16;
        --v83;
      }
      while (v84 != v3);
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_146;
  v6 = result;
  v99 = a1;
  if (v3 < 2)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    __dst = (double *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v12 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_103:
      v91 = v12;
      v102 = v9;
      if (v13 >= 2)
      {
        v92 = *v99;
        do
        {
          v93 = v13 - 2;
          if (v13 < 2)
            goto LABEL_132;
          if (!v92)
            goto LABEL_145;
          v94 = v91;
          v95 = *(_QWORD *)&v91[16 * v93 + 32];
          v96 = *(_QWORD *)&v91[16 * v13 + 24];
          sub_1D7B06348((double *)(v92 + 16 * v95), (double *)(v92 + 16 * *(_QWORD *)&v91[16 * v13 + 16]), v92 + 16 * v96, __dst);
          if (v1)
            break;
          if (v96 < v95)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v94 = sub_1D7AFAA98((uint64_t)v94);
          if (v93 >= *((_QWORD *)v94 + 2))
            goto LABEL_134;
          v97 = &v94[16 * v93 + 32];
          *(_QWORD *)v97 = v95;
          *((_QWORD *)v97 + 1) = v96;
          v98 = *((_QWORD *)v94 + 2);
          if (v13 > v98)
            goto LABEL_135;
          memmove(&v94[16 * v13 + 16], &v94[16 * v13 + 32], 16 * (v98 - v13));
          v91 = v94;
          *((_QWORD *)v94 + 2) = v98 - 1;
          v13 = v98 - 1;
        }
        while (v98 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v102 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v102 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v7 = v5 >> 1;
    sub_1D7AA78D4();
    v8 = sub_1D7B4A4D0();
    *(_QWORD *)(v8 + 16) = v7;
    v102 = v8;
    __dst = (double *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v100 = *a1 - 16;
  v101 = *a1 + 32;
  v12 = (char *)MEMORY[0x1E0DEE9D8];
  v103 = v6;
  v104 = v3;
  v105 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = *(double *)(v11 + 16 * v10);
      v16 = *(double *)(v11 + 16 * v14);
      v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v17 = (double *)(v101 + 16 * v14);
        v18 = v15;
        while (1)
        {
          v19 = v18;
          v18 = *v17;
          if (v15 < v16 == *v17 >= v19)
            break;
          ++v10;
          v17 += 2;
          if (v3 == v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v10 < v14)
          goto LABEL_138;
        if (v14 < v10)
        {
          v20 = (__int128 *)(v100 + 16 * v10);
          v21 = v10;
          v22 = v14;
          v23 = (__int128 *)(v11 + 16 * v14);
          do
          {
            if (v22 != --v21)
            {
              if (!v11)
                goto LABEL_144;
              v24 = *v23;
              *v23 = *v20;
              *v20 = v24;
            }
            ++v22;
            --v20;
            ++v23;
          }
          while (v22 < v21);
        }
      }
    }
    if (v10 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v10, v14))
      goto LABEL_136;
    if (v10 - v14 >= v6)
      goto LABEL_46;
    v25 = v14 + v6;
    if (__OFADD__(v14, v6))
      goto LABEL_139;
    if (v25 >= v3)
      v25 = v3;
    if (v25 < v14)
      break;
    if (v10 != v25)
    {
      v26 = v100 + 16 * v10;
      do
      {
        v27 = *(double *)(v11 + 16 * v10);
        v28 = v14;
        v29 = v26;
        do
        {
          if (v27 >= *(double *)v29)
            break;
          if (!v11)
            goto LABEL_142;
          v30 = *(_QWORD *)(v29 + 24);
          *(_OWORD *)(v29 + 16) = *(_OWORD *)v29;
          *(double *)v29 = v27;
          *(_QWORD *)(v29 + 8) = v30;
          v29 -= 16;
          ++v28;
        }
        while (v10 != v28);
        ++v10;
        v26 += 16;
      }
      while (v10 != v25);
      v10 = v25;
    }
LABEL_46:
    if (v10 < v14)
      goto LABEL_131;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_1D7AFA7AC(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v32 = *((_QWORD *)v12 + 2);
    v31 = *((_QWORD *)v12 + 3);
    v13 = v32 + 1;
    v11 = v105;
    if (v32 >= v31 >> 1)
    {
      v81 = sub_1D7AFA7AC((char *)(v31 > 1), v32 + 1, 1, v12);
      v11 = v105;
      v12 = v81;
    }
    *((_QWORD *)v12 + 2) = v13;
    v33 = v12 + 32;
    v34 = &v12[16 * v32 + 32];
    *(_QWORD *)v34 = v14;
    *((_QWORD *)v34 + 1) = v10;
    if (v32)
    {
      while (1)
      {
        v35 = v13 - 1;
        if (v13 >= 4)
        {
          v40 = &v33[16 * v13];
          v41 = *((_QWORD *)v40 - 8);
          v42 = *((_QWORD *)v40 - 7);
          v46 = __OFSUB__(v42, v41);
          v43 = v42 - v41;
          if (v46)
            goto LABEL_120;
          v45 = *((_QWORD *)v40 - 6);
          v44 = *((_QWORD *)v40 - 5);
          v46 = __OFSUB__(v44, v45);
          v38 = v44 - v45;
          v39 = v46;
          if (v46)
            goto LABEL_121;
          v47 = v13 - 2;
          v48 = &v33[16 * v13 - 32];
          v50 = *(_QWORD *)v48;
          v49 = *((_QWORD *)v48 + 1);
          v46 = __OFSUB__(v49, v50);
          v51 = v49 - v50;
          if (v46)
            goto LABEL_123;
          v46 = __OFADD__(v38, v51);
          v52 = v38 + v51;
          if (v46)
            goto LABEL_126;
          if (v52 >= v43)
          {
            v70 = &v33[16 * v35];
            v72 = *(_QWORD *)v70;
            v71 = *((_QWORD *)v70 + 1);
            v46 = __OFSUB__(v71, v72);
            v73 = v71 - v72;
            if (v46)
              goto LABEL_130;
            v63 = v38 < v73;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v64 = *((_QWORD *)v12 + 4);
            v65 = *((_QWORD *)v12 + 5);
            v46 = __OFSUB__(v65, v64);
            v57 = v65 - v64;
            v58 = v46;
            goto LABEL_77;
          }
          v37 = *((_QWORD *)v12 + 4);
          v36 = *((_QWORD *)v12 + 5);
          v46 = __OFSUB__(v36, v37);
          v38 = v36 - v37;
          v39 = v46;
        }
        if ((v39 & 1) != 0)
          goto LABEL_122;
        v47 = v13 - 2;
        v53 = &v33[16 * v13 - 32];
        v55 = *(_QWORD *)v53;
        v54 = *((_QWORD *)v53 + 1);
        v56 = __OFSUB__(v54, v55);
        v57 = v54 - v55;
        v58 = v56;
        if (v56)
          goto LABEL_125;
        v59 = &v33[16 * v35];
        v61 = *(_QWORD *)v59;
        v60 = *((_QWORD *)v59 + 1);
        v46 = __OFSUB__(v60, v61);
        v62 = v60 - v61;
        if (v46)
          goto LABEL_128;
        if (__OFADD__(v57, v62))
          goto LABEL_129;
        if (v57 + v62 >= v38)
        {
          v63 = v38 < v62;
LABEL_83:
          if (v63)
            v35 = v47;
          goto LABEL_85;
        }
LABEL_77:
        if ((v58 & 1) != 0)
          goto LABEL_124;
        v66 = &v33[16 * v35];
        v68 = *(_QWORD *)v66;
        v67 = *((_QWORD *)v66 + 1);
        v46 = __OFSUB__(v67, v68);
        v69 = v67 - v68;
        if (v46)
          goto LABEL_127;
        if (v69 < v57)
          goto LABEL_15;
LABEL_85:
        v74 = v35 - 1;
        if (v35 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11)
          goto LABEL_143;
        v75 = v12;
        v76 = &v33[16 * v74];
        v77 = *(_QWORD *)v76;
        v78 = &v33[16 * v35];
        v79 = *((_QWORD *)v78 + 1);
        sub_1D7B06348((double *)(v11 + 16 * *(_QWORD *)v76), (double *)(v11 + 16 * *(_QWORD *)v78), v11 + 16 * v79, __dst);
        if (v1)
          goto LABEL_93;
        if (v79 < v77)
          goto LABEL_117;
        if (v35 > *((_QWORD *)v75 + 2))
          goto LABEL_118;
        *(_QWORD *)v76 = v77;
        *(_QWORD *)&v33[16 * v74 + 8] = v79;
        v80 = *((_QWORD *)v75 + 2);
        if (v35 >= v80)
          goto LABEL_119;
        v12 = v75;
        v13 = v80 - 1;
        memmove(&v33[16 * v35], v78 + 16, 16 * (v80 - 1 - v35));
        *((_QWORD *)v75 + 2) = v80 - 1;
        v11 = v105;
        if (v80 <= 2)
          goto LABEL_15;
      }
    }
    v13 = 1;
LABEL_15:
    v6 = v103;
    v3 = v104;
    if (v10 >= v104)
    {
      v9 = v102;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = sub_1D7B4A884();
  __break(1u);
  return result;
}

uint64_t sub_1D7B06348(double *__src, double *a2, unint64_t a3, double *__dst)
{
  double *v4;
  double *v6;
  double *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double *v14;
  double *v15;
  double *v16;
  double *v17;
  double *v18;
  double *v19;
  double v20;
  uint64_t result;
  double *v22;
  double *v23;
  double *v24;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 15;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v24 = __src;
  v23 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[2 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v16 = &v4[2 * v13];
      v22 = v16;
      v24 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v17 = (double *)(a3 - 16);
        v18 = v6;
        while (1)
        {
          v19 = v17 + 2;
          v20 = *(v18 - 2);
          v18 -= 2;
          if (*(v16 - 2) >= v20)
          {
            v22 = v16 - 2;
            if (v19 < v16 || v17 >= v16 || v19 != v16)
              *(_OWORD *)v17 = *((_OWORD *)v16 - 1);
            v18 = v6;
            v16 -= 2;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v19 != v6 || v17 >= v6)
              *(_OWORD *)v17 = *(_OWORD *)v18;
            v24 = v18;
            if (v18 <= v7)
              goto LABEL_42;
          }
          v17 -= 2;
          v6 = v18;
          if (v16 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[2 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[2 * v10];
    v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        if (*v6 >= *v4)
        {
          if (v7 != v4)
            *(_OWORD *)v7 = *(_OWORD *)v4;
          v4 += 2;
          v23 = v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 2;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
            *(_OWORD *)v7 = *(_OWORD *)v6;
        }
        v7 += 2;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v24 = v7;
    }
LABEL_42:
    sub_1D7AFA948((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  result = sub_1D7B4A8E4();
  __break(1u);
  return result;
}

uint64_t sub_1D7B065C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  int64_t v21;
  uint64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  _QWORD *v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  const void *v32;
  BOOL v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;

  v2 = a1 + 64;
  v3 = -1;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  v5 = ~v4;
  if (-v4 < 64)
    v3 = ~(-1 << -(char)v4);
  v6 = v3 & *(_QWORD *)(a1 + 64);
  v7 = (unint64_t)(63 - v4) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v38 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v13 = MEMORY[0x1E0DEE9D8] + 32;
LABEL_4:
  v39 = (_QWORD *)v13;
  while (1)
  {
    if (v9)
    {
      v17 = *(_QWORD *)(v9 + 16);
      if (v10 != v17)
      {
        if (v10 >= v17)
          goto LABEL_51;
        v22 = *(_QWORD *)(v9 + 8 * v10 + 32);
        if (!v11)
        {
          v23 = v38[3];
          if ((uint64_t)((v23 >> 1) + 0x4000000000000000) < 0)
            goto LABEL_55;
          v37 = v5;
          v24 = v23 & 0xFFFFFFFFFFFFFFFELL;
          if (v24 <= 1)
            v25 = 1;
          else
            v25 = v24;
          sub_1D7AA7E70(0, &qword_1F014D1D0, MEMORY[0x1E0DEF040], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
          v26 = (_QWORD *)swift_allocObject();
          v27 = _swift_stdlib_malloc_size(v26);
          v28 = v27 - 32;
          if (v27 < 32)
            v28 = v27 - 25;
          v29 = v28 >> 3;
          v26[2] = v25;
          v26[3] = 2 * (v28 >> 3);
          v30 = (unint64_t)(v26 + 4);
          v31 = v38[3] >> 1;
          if (v38[2])
          {
            v32 = v38 + 4;
            if (v26 != v38 || v30 >= (unint64_t)v32 + 8 * v31)
            {
              v40 = v28 >> 3;
              memmove(v26 + 4, v32, 8 * v31);
              v30 = (unint64_t)(v26 + 4);
              v29 = v40;
            }
            v38[2] = 0;
          }
          v39 = (_QWORD *)(v30 + 8 * v31);
          v11 = (v29 & 0x7FFFFFFFFFFFFFFFLL) - v31;
          result = swift_release();
          v38 = v26;
          v5 = v37;
        }
        v33 = __OFSUB__(v11--, 1);
        if (!v33)
        {
          ++v10;
          *v39 = v22;
          v13 = (uint64_t)(v39 + 1);
          goto LABEL_4;
        }
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
        goto LABEL_54;
      }
    }
    if (v6)
    {
      v14 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_6;
    }
    v18 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
LABEL_51:
      __break(1u);
      goto LABEL_52;
    }
    if (v18 >= v7)
      goto LABEL_46;
    v19 = *(_QWORD *)(v2 + 8 * v18);
    if (!v19)
      break;
LABEL_19:
    v6 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v18 << 6);
    v12 = v18;
LABEL_6:
    v16 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v15);
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRelease();
    v10 = 0;
    v9 = v16;
  }
  v20 = v12 + 2;
  if (v12 + 2 >= v7)
    goto LABEL_46;
  v19 = *(_QWORD *)(v2 + 8 * v20);
  if (v19)
    goto LABEL_15;
  v21 = v12 + 3;
  if (v12 + 3 >= v7)
    goto LABEL_46;
  v19 = *(_QWORD *)(v2 + 8 * v21);
  if (v19)
    goto LABEL_18;
  v20 = v12 + 4;
  if (v12 + 4 >= v7)
    goto LABEL_46;
  v19 = *(_QWORD *)(v2 + 8 * v20);
  if (v19)
  {
LABEL_15:
    v18 = v20;
    goto LABEL_19;
  }
  v21 = v12 + 5;
  if (v12 + 5 >= v7)
    goto LABEL_46;
  v19 = *(_QWORD *)(v2 + 8 * v21);
  if (v19)
  {
LABEL_18:
    v18 = v21;
    goto LABEL_19;
  }
  v20 = v12 + 6;
  if (v12 + 6 < v7)
  {
    v19 = *(_QWORD *)(v2 + 8 * v20);
    if (!v19)
    {
      while (1)
      {
        v18 = v20 + 1;
        if (__OFADD__(v20, 1))
          goto LABEL_53;
        if (v18 >= v7)
          goto LABEL_46;
        v19 = *(_QWORD *)(v2 + 8 * v18);
        ++v20;
        if (v19)
          goto LABEL_19;
      }
    }
    goto LABEL_15;
  }
LABEL_46:
  sub_1D7B08EF4();
  swift_bridgeObjectRelease();
  result = (uint64_t)v38;
  v34 = v38[3];
  if (v34 < 2)
    return result;
  v35 = v34 >> 1;
  v33 = __OFSUB__(v35, v11);
  v36 = v35 - v11;
  if (!v33)
  {
    v38[2] = v36;
    return result;
  }
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
  return result;
}

uint64_t sub_1D7B068FC(uint64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  double *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  double v8;
  unint64_t v9;
  unint64_t v10;

  v2 = 0;
  v3 = *(_QWORD *)(result + 16);
  v4 = (double *)(a2 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueMedialRange);
  v5 = result + 32;
  v6 = MEMORY[0x1E0DEE9D8];
LABEL_2:
  if (v2 <= v3)
    v7 = v3;
  else
    v7 = v2;
  while (1)
  {
    if (v3 == v2)
      return v6;
    if (v7 == v2)
      break;
    v8 = *(double *)(v5 + 8 * v2++);
    if (*v4 <= v8 && v8 <= v4[1])
    {
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
        result = sub_1D7AA6010(0, *(_QWORD *)(v6 + 16) + 1, 1);
      v10 = *(_QWORD *)(v6 + 16);
      v9 = *(_QWORD *)(v6 + 24);
      if (v10 >= v9 >> 1)
        result = sub_1D7AA6010(v9 > 1, v10 + 1, 1);
      *(_QWORD *)(v6 + 16) = v10 + 1;
      *(double *)(v6 + 8 * v10 + 32) = v8;
      goto LABEL_2;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1D7B06A0C(uint64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  double *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  double v8;
  unint64_t v10;
  unint64_t v11;

  v2 = 0;
  v3 = *(_QWORD *)(result + 16);
  v4 = (double *)(a2 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueMedialRange);
  v5 = result + 32;
  v6 = MEMORY[0x1E0DEE9D8];
LABEL_2:
  if (v2 <= v3)
    v7 = v3;
  else
    v7 = v2;
  while (1)
  {
    if (v3 == v2)
      return v6;
    if (v7 == v2)
      break;
    v8 = *(double *)(v5 + 8 * v2++);
    if (*v4 > v8 || v8 > v4[1])
    {
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
        result = sub_1D7AA6010(0, *(_QWORD *)(v6 + 16) + 1, 1);
      v11 = *(_QWORD *)(v6 + 16);
      v10 = *(_QWORD *)(v6 + 24);
      if (v11 >= v10 >> 1)
        result = sub_1D7AA6010(v10 > 1, v11 + 1, 1);
      *(_QWORD *)(v6 + 16) = v11 + 1;
      *(double *)(v6 + 8 * v11 + 32) = v8;
      goto LABEL_2;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1D7B06B14(uint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t result;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    sub_1D7AA6058(0, v3, 0);
    result = v12;
    v6 = (uint64_t *)(a1 + 32);
    v7 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_xValue);
    do
    {
      v8 = *v6;
      v13 = result;
      v10 = *(_QWORD *)(result + 16);
      v9 = *(_QWORD *)(result + 24);
      if (v10 >= v9 >> 1)
      {
        sub_1D7AA6058(v9 > 1, v10 + 1, 1);
        result = v13;
      }
      *(_QWORD *)(result + 16) = v10 + 1;
      v11 = result + 16 * v10;
      *(_QWORD *)(v11 + 32) = v7;
      *(_QWORD *)(v11 + 40) = v8;
      ++v6;
      --v3;
    }
    while (v3);
  }
  return result;
}

id sub_1D7B06BF0(char a1, double a2, double a3)
{
  uint64_t v3;
  id v4;
  uint64_t *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  id v24;

  if (a2 + a3 < a2)
  {
    __break(1u);
    goto LABEL_14;
  }
  if ((a1 & 1) != 0)
  {
    if (qword_1F014CF58 == -1)
    {
LABEL_4:
      v3 = qword_1F014CF48;
      v4 = (id)qword_1F0154558;
      if (v3 != -1)
        swift_once();
      v5 = &qword_1F0154548;
      goto LABEL_12;
    }
LABEL_14:
    swift_once();
    goto LABEL_4;
  }
  if (qword_1F014CF50 != -1)
    swift_once();
  v6 = qword_1F014CF40;
  v4 = (id)qword_1F0154550;
  if (v6 != -1)
    swift_once();
  v5 = &qword_1F0154540;
LABEL_12:
  v7 = (void *)*v5;
  sub_1D7AA7E70(0, (unint64_t *)&qword_1F01493B0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1D7B85D90;
  v9 = v4;
  v10 = v7;
  v11 = (void *)sub_1D7B494BC();
  v12 = objc_msgSend(objc_allocWithZone((Class)HKMultiGradientFillColor), sel_initWithColor_location_, v9, v11);

  *(_QWORD *)(v8 + 32) = v12;
  v13 = v10;
  v14 = (void *)sub_1D7B494BC();
  v15 = objc_msgSend(objc_allocWithZone((Class)HKMultiGradientFillColor), sel_initWithColor_location_, v13, v14);

  *(_QWORD *)(v8 + 40) = v15;
  v16 = v13;
  v17 = (void *)sub_1D7B494BC();
  v18 = objc_msgSend(objc_allocWithZone((Class)HKMultiGradientFillColor), sel_initWithColor_location_, v16, v17);

  *(_QWORD *)(v8 + 48) = v18;
  v19 = v9;
  v20 = (void *)sub_1D7B494BC();
  v21 = objc_msgSend(objc_allocWithZone((Class)HKMultiGradientFillColor), sel_initWithColor_location_, v19, v20);

  *(_QWORD *)(v8 + 56) = v21;
  sub_1D7B4A4B8();
  v22 = objc_allocWithZone((Class)HKMultiGradientFillStyle);
  sub_1D7B08BEC();
  v23 = (void *)sub_1D7B4A4A0();
  swift_bridgeObjectRelease();
  v24 = objc_msgSend(v22, sel_initWithColors_, v23);

  return v24;
}

void sub_1D7B06F1C(void *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, uint64_t a6, uint64_t *a7, uint64_t a8, void *a9, uint64_t a10)
{
  char *v10;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  __int128 v23;
  int v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  os_unfair_lock_s *v29;
  double v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  uint64_t v45;
  void *v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  void *v52;
  void *v53;
  id v54;
  void *v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  uint64_t v69;
  id v70;
  int v71;
  char *v72;
  __int128 v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  uint64_t v79;
  uint64_t (*v80)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  void *v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  uint64_t v88;
  id v89;
  id v90;
  uint64_t aBlock;
  uint64_t v92;
  uint64_t (*v93)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t);
  void *v94;
  uint64_t (*v95)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v96;
  _OWORD v97[4];
  char v98;

  v88 = a8;
  v84 = a1;
  v83 = *a7;
  v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t))a7[2];
  v82 = a7[1];
  v81 = (void *)a7[3];
  v80 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))a7[4];
  v79 = a7[5];
  sub_1D7AAE0AC(0, (unint64_t *)&qword_1F014DFD0, (void (*)(uint64_t))MEMORY[0x1E0D28FE0]);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(_QWORD *)(v19 + 64);
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v69 - v21;
  v78 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3508]), sel_init);
  v77 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3508]), sel_init);
  v76 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3508]), sel_init);
  v75 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3508]), sel_init);
  v74 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3508]), sel_init);
  v90 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3508]), sel_init);
  v89 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3508]), sel_init);
  if (objc_msgSend(a9, sel_seriesDrawingDuringTiling))
  {
    v23 = 0uLL;
    v24 = 1;
    v25 = 0uLL;
    v26 = 0uLL;
    v27 = 0uLL;
  }
  else
  {
    v28 = *(_QWORD *)&v10[OBJC_IVAR___HKBalanceSeries_lollipopPathRangeLock];
    v29 = (os_unfair_lock_s *)(v28 + 84);
    os_unfair_lock_lock((os_unfair_lock_t)(v28 + 84));
    v87 = *(_OWORD *)(v28 + 16);
    v86 = *(_OWORD *)(v28 + 32);
    v85 = *(_OWORD *)(v28 + 48);
    v73 = *(_OWORD *)(v28 + 64);
    v24 = *(unsigned __int8 *)(v28 + 80);
    os_unfair_lock_unlock(v29);
    v27 = v73;
    v26 = v85;
    v25 = v86;
    v23 = v87;
  }
  v97[0] = v23;
  v97[1] = v25;
  v97[2] = v26;
  v97[3] = v27;
  v71 = v24;
  v98 = v24;
  LODWORD(v86) = objc_msgSend(v10, sel_allowsSelection);
  v30 = sub_1D7B03328(a2, a3, a4, a5);
  v31 = swift_allocObject();
  *(_QWORD *)&v87 = v31;
  *(_QWORD *)(v31 + 24) = 0;
  *(_QWORD *)(v31 + 16) = 0;
  *(_QWORD *)&v73 = v31 + 16;
  *(_BYTE *)(v31 + 32) = 1;
  sub_1D7AAF5A8(a10, (uint64_t)v22);
  v32 = (*(unsigned __int8 *)(v19 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v33 = (v20 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
  v34 = (v33 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)&v85 = (v34 + 73) & 0xFFFFFFFFFFFFFFF8;
  v72 = (char *)((v85 + 15) & 0xFFFFFFFFFFFFFFF8);
  v35 = (unint64_t)(v72 + 15) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 15) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 15) & 0xFFFFFFFFFFFFFFF8;
  v39 = swift_allocObject();
  *(CGFloat *)(v39 + 16) = a2;
  *(CGFloat *)(v39 + 24) = a3;
  *(CGFloat *)(v39 + 32) = a4;
  *(CGFloat *)(v39 + 40) = a5;
  *(double *)(v39 + 48) = v30;
  *(_QWORD *)(v39 + 56) = v90;
  *(_QWORD *)(v39 + 64) = v10;
  *(_QWORD *)(v39 + 72) = v89;
  *(double *)(v39 + 80) = v30 * 0.7;
  sub_1D7B08D68((uint64_t)v22, v39 + v32, (unint64_t *)&qword_1F014DFD0, (void (*)(uint64_t))MEMORY[0x1E0D28FE0]);
  v40 = v78;
  *(_QWORD *)(v39 + v33) = v78;
  sub_1D7B08D68((uint64_t)v97, v39 + v34, (unint64_t *)&unk_1F014EDE0, type metadata accessor for HKGraphSeriesDataPointPathRange);
  *(_BYTE *)(v39 + v34 + 65) = v86;
  v41 = v77;
  *(_QWORD *)(v39 + v85) = v77;
  v42 = v76;
  *(_QWORD *)&v72[v39] = v76;
  *(double *)(v39 + v35) = v30 * 0.5;
  v43 = v75;
  *(_QWORD *)(v39 + v36) = v75;
  v44 = v74;
  *(_QWORD *)(v39 + v37) = v74;
  v45 = v87;
  *(_QWORD *)(v39 + v38) = v87;
  v95 = sub_1D7B08DB4;
  v96 = v39;
  aBlock = MEMORY[0x1E0C809B0];
  v92 = 1107296256;
  v93 = sub_1D7B2DBA0;
  v94 = &block_descriptor_14;
  v46 = _Block_copy(&aBlock);
  v72 = (char *)v90;
  *(_QWORD *)&v85 = v10;
  v47 = v89;
  v48 = v40;
  v90 = v41;
  v49 = v42;
  v50 = v43;
  v51 = v44;
  swift_retain();
  swift_release();
  aBlock = v83;
  v92 = v82;
  v93 = v17;
  v94 = v81;
  v95 = v80;
  v96 = v79;
  objc_msgSend(v84, sel_enumerateCoordinatesWithTransform_roundToViewScale_block_, &aBlock, 1, v46);
  _Block_release(v46);
  swift_beginAccess();
  if ((*(_BYTE *)(v45 + 32) & 1) != 0)
  {
    swift_release();
    v52 = v49;
    v53 = v72;
  }
  else
  {
    v70 = v47;
    if ((v86 & 1) != 0)
      v54 = sub_1D7B06BF0(v71 ^ 1u, a3, a5);
    else
      v54 = sub_1D7B030C4();
    v55 = v54;
    v52 = v49;
    v53 = v72;
    v89 = v48;
    if (!objc_msgSend(v48, sel_isEmpty))
    {
      v56 = objc_msgSend(v89, sel_CGPath);
      objc_msgSend(v55, sel_renderPath_context_axisRect_alpha_, v56, v88, a2, a3, a4, a5, 1.0);

    }
    *(_QWORD *)&v86 = v55;
    v57 = sub_1D7B03250();
    v48 = v90;
    if ((objc_msgSend(v90, sel_isEmpty) & 1) == 0)
    {
      v58 = objc_msgSend(v48, sel_CGPath);
      objc_msgSend(v57, sel_renderPath_context_axisRect_alpha_, v58, v88, a2, a3, a4, a5, 1.0);

      v57 = v58;
    }

    v59 = sub_1D7B030E8();
    if ((objc_msgSend(v52, sel_isEmpty) & 1) == 0)
    {
      v60 = objc_msgSend(v52, sel_CGPath);
      objc_msgSend(v59, sel_renderPath_context_axisRect_alpha_, v60, v88, a2, a3, a4, a5, 1.0);

      v59 = v60;
    }

    v61 = sub_1D7B03274();
    if ((objc_msgSend(v50, sel_isEmpty) & 1) == 0)
    {
      v62 = objc_msgSend(v50, sel_CGPath);
      objc_msgSend(v61, sel_renderPath_context_axisRect_alpha_, v62, v88, a2, a3, a4, a5, 1.0);

      v61 = v62;
    }

    v63 = sub_1D7B030E8();
    if ((objc_msgSend(v51, sel_isEmpty) & 1) == 0)
    {
      v64 = objc_msgSend(v51, sel_CGPath);
      objc_msgSend(v63, sel_renderPath_context_axisRect_alpha_, v64, v88, a2, a3, a4, a5, 1.0);

      v63 = v64;
    }

    v65 = sub_1D7B032E0();
    if ((objc_msgSend(v53, sel_isEmpty) & 1) == 0)
    {
      v66 = objc_msgSend(v53, sel_CGPath);
      objc_msgSend(v65, sel_renderPath_context_axisRect_alpha_, v66, v88, a2, a3, a4, a5, 1.0);

      v65 = v66;
    }

    v67 = sub_1D7B03304();
    v47 = v70;
    if ((objc_msgSend(v70, sel_isEmpty) & 1) != 0)
    {
      swift_release();

      v48 = v89;
    }
    else
    {
      v68 = v47;
      v47 = objc_msgSend(v47, sel_CGPath);
      objc_msgSend(v67, sel_renderPath_context_axisRect_alpha_, v47, v88, a2, a3, a4, a5, 1.0);
      swift_release();

      v90 = v52;
      v52 = v50;
      v50 = v51;
      v51 = v53;
      v53 = v68;
    }
  }

}

uint64_t sub_1D7B078CC(void *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, uint64_t a6, __int128 *a7, void *a8, unint64_t a9)
{
  void *v9;
  double *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  CGFloat v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  double *v30;
  void *v31;
  void *v32;
  void *v33;
  uint64_t v34;
  void *v35;
  void *v36;
  void *v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  unsigned __int8 v49;
  id v50;
  id v51;
  void *v52;
  void *v53;
  char **v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  void *v70;
  id v71;
  id v72;
  id v73;
  unint64_t v74;
  id v75;
  uint64_t v76;
  char *(*v77)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  __int128 v78;
  __int128 v79;
  id v80;
  id v81;
  id v82;
  uint64_t v83;
  id v84;
  uint64_t v85;
  __int128 aBlock;
  __int128 v87;
  char *(*v88)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  double *v89;
  CGRect v90;

  v74 = a9;
  v84 = a8;
  v80 = a1;
  v79 = *a7;
  v78 = a7[1];
  v15 = (double *)*((_QWORD *)a7 + 5);
  v77 = (char *(*)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*((_QWORD *)a7 + 4);
  v16 = sub_1D7B49504();
  v17 = *(_QWORD *)(v16 - 8);
  v68 = v16;
  v18 = *(_QWORD *)(v17 + 64);
  MEMORY[0x1E0C80A78](v16);
  v69 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  CGContextSaveGState((CGContextRef)a8);
  v75 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3508]), sel_init);
  v82 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3508]), sel_init);
  v73 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3508]), sel_init);
  v72 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3508]), sel_init);
  v71 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3508]), sel_init);
  v70 = v9;
  v19 = sub_1D7B03328(a2, a3, a4, a5);
  v81 = sub_1D7B031D0();
  v20 = swift_allocObject();
  v85 = v20;
  *(_QWORD *)(v20 + 24) = 0;
  *(_QWORD *)(v20 + 16) = 0;
  v76 = v20 + 16;
  *(_BYTE *)(v20 + 32) = 1;
  v83 = swift_allocObject();
  *(_BYTE *)(v83 + 16) = 1;
  v90.origin.x = a2;
  v90.origin.y = a3;
  v90.size.width = a4;
  v90.size.height = a5;
  v21 = CGRectGetWidth(v90) * 1.4;
  v67 = v17;
  (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))((char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v74, v16);
  v22 = (*(unsigned __int8 *)(v17 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v23 = (v18 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  v74 = (v23 + 15) & 0xFFFFFFFFFFFFFFF8;
  v66 = (v74 + 15) & 0xFFFFFFFFFFFFFFF8;
  v65 = (v66 + 15) & 0xFFFFFFFFFFFFFFF8;
  v64 = (v65 + 15) & 0xFFFFFFFFFFFFFFF8;
  v24 = (v64 + 15) & 0xFFFFFFFFFFFFFFF8;
  v25 = (v24 + 15) & 0xFFFFFFFFFFFFFFF8;
  v26 = (v25 + 15) & 0xFFFFFFFFFFFFFFF8;
  v27 = (v26 + 15) & 0xFFFFFFFFFFFFFFF8;
  v63 = (v27 + 15) & 0xFFFFFFFFFFFFFFF8;
  v28 = (v63 + 15) & 0xFFFFFFFFFFFFFFF8;
  v29 = (v28 + 15) & 0xFFFFFFFFFFFFFFF8;
  v30 = (double *)swift_allocObject();
  v30[2] = a2;
  v30[3] = a3;
  v30[4] = a4;
  v30[5] = a5;
  (*(void (**)(char *, char *, uint64_t))(v67 + 32))((char *)v30 + v22, v69, v68);
  v31 = v75;
  *(_QWORD *)((char *)v30 + v23) = v75;
  *(_QWORD *)((char *)v30 + v74) = v83;
  *(double *)((char *)v30 + v66) = v21;
  *(_QWORD *)((char *)v30 + v65) = v81;
  *(_QWORD *)((char *)v30 + v64) = v84;
  *(_QWORD *)((char *)v30 + v24) = v82;
  v32 = v70;
  *(_QWORD *)((char *)v30 + v25) = v70;
  *(double *)((char *)v30 + v26) = v19;
  v33 = v73;
  *(_QWORD *)((char *)v30 + v27) = v73;
  *(double *)((char *)v30 + v63) = v19 * 0.5;
  v34 = v85;
  v35 = v72;
  *(_QWORD *)((char *)v30 + v28) = v72;
  v36 = v71;
  *(_QWORD *)((char *)v30 + v29) = v71;
  *(_QWORD *)((char *)v30 + ((v29 + 15) & 0xFFFFFFFFFFFFFFF8)) = v34;
  v88 = sub_1D7B08A84;
  v89 = v30;
  *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v87 = sub_1D7B2DBA0;
  *((_QWORD *)&v87 + 1) = &block_descriptor_9;
  v37 = _Block_copy(&aBlock);
  v38 = v31;
  swift_retain();
  v39 = v81;
  v84 = v84;
  v81 = v82;
  v82 = v32;
  v40 = v33;
  v41 = v35;
  v42 = v36;
  swift_retain();
  swift_release();
  aBlock = v79;
  v87 = v78;
  v88 = v77;
  v89 = v15;
  objc_msgSend(v80, sel_enumerateCoordinatesWithTransform_roundToViewScale_block_, &aBlock, 1, v37);
  _Block_release(v37);
  swift_beginAccess();
  if ((*(_BYTE *)(v34 + 32) & 1) == 0)
  {
    v80 = v41;
    *(_QWORD *)&v78 = v39;
    v43 = sub_1D7B06BF0(0, a3, a5);
    if (!objc_msgSend(v38, sel_isEmpty))
    {
      v44 = v84;
      CGContextReplacePathWithStrokedPath((CGContextRef)v84);
      v45 = objc_msgSend(v38, sel_CGPath);
      objc_msgSend(v43, sel_renderPath_context_axisRect_alpha_, v45, v44, a2, a3, a4, a5, 1.0);

    }
    v46 = v43;
    v47 = sub_1D7B03250();
    v48 = v81;
    v49 = objc_msgSend(v81, sel_isEmpty);
    *(_QWORD *)&v79 = v40;
    v75 = v38;
    if ((v49 & 1) == 0)
    {
      v50 = objc_msgSend(v48, sel_CGPath);
      objc_msgSend(v47, sel_renderPath_context_axisRect_alpha_, v50, v84, a2, a3, a4, a5, 1.0);

      v47 = v50;
      v40 = (id)v79;
    }

    v51 = sub_1D7B030E8();
    v52 = v46;
    v53 = v42;
    if ((objc_msgSend(v40, sel_isEmpty) & 1) != 0)
    {
      v54 = &selRef_predicateForObjectsWithMetadataKey_allowedValues_;
    }
    else
    {
      v55 = objc_msgSend(v40, sel_CGPath);
      v54 = &selRef_predicateForObjectsWithMetadataKey_allowedValues_;
      objc_msgSend(v51, sel_renderPath_context_axisRect_alpha_, v55, v84, a2, a3, a4, a5, 1.0);

      v51 = v55;
    }

    v56 = sub_1D7B03274();
    v57 = v80;
    if ((objc_msgSend(v80, sel_isEmpty) & 1) == 0)
    {
      v58 = objc_msgSend(v57, sel_CGPath);
      objc_msgSend(v56, v54[284], v58, v84, a2, a3, a4, a5, 1.0);

      v56 = v58;
    }
    v38 = v75;
    v40 = (id)v79;

    v59 = sub_1D7B030E8();
    v42 = v53;
    if ((objc_msgSend(v53, sel_isEmpty) & 1) == 0)
    {
      v60 = objc_msgSend(v53, sel_CGPath);
      objc_msgSend(v59, v54[284], v60, v84, a2, a3, a4, a5, 1.0);

      v52 = v59;
      v59 = v60;
    }
    v41 = v80;

    v39 = (id)v78;
  }
  CGContextRestoreGState((CGContextRef)v84);

  swift_release();
  return swift_release();
}

uint64_t sub_1D7B08088(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  _QWORD *v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t i;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  int64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  char *v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  int64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  int64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;

  v46 = a2;
  v3 = sub_1D7B49504();
  v51 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v50 = (char *)&v42 - v7;
  sub_1D7B08EFC();
  result = sub_1D7B4A8B4();
  v9 = (_QWORD *)result;
  v10 = 0;
  v52 = a1;
  v13 = *(_QWORD *)(a1 + 64);
  v12 = a1 + 64;
  v11 = v13;
  v14 = 1 << *(_BYTE *)(v12 - 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v11;
  v47 = v12;
  v48 = (unint64_t)(v14 + 63) >> 6;
  v49 = result + 64;
  v44 = v6;
  v45 = v3;
  v43 = (_QWORD *)result;
  if (!v16)
    goto LABEL_5;
LABEL_4:
  v55 = (v16 - 1) & v16;
  for (i = __clz(__rbit64(v16)) | (v10 << 6); ; i = __clz(__rbit64(v19)) + (v10 << 6))
  {
    v22 = v51;
    v21 = v52;
    v23 = *(_QWORD *)(v52 + 48);
    v56 = *(_QWORD *)(v51 + 72) * i;
    v24 = v50;
    (*(void (**)(char *, unint64_t, uint64_t))(v51 + 16))(v50, v23 + v56, v3);
    v25 = *(_QWORD *)(v21 + 56);
    v57 = i;
    v26 = *(_QWORD *)(v25 + 8 * i);
    v27 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
    v27(v6, v24, v3);
    v28 = *(_QWORD *)(v26 + 16);
    if (v28)
    {
      v53 = v27;
      v54 = v10;
      v58 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      v29 = v46;
      sub_1D7AA6010(0, v28, 0);
      v30 = 0;
      v31 = v58;
      do
      {
        v32 = objc_msgSend(v29, sel_transform);
        v33 = (void *)sub_1D7B494BC();
        objc_msgSend(v32, sel_coordinateForValue_, v33);
        v35 = v34;

        v58 = v31;
        v37 = *(_QWORD *)(v31 + 16);
        v36 = *(_QWORD *)(v31 + 24);
        if (v37 >= v36 >> 1)
        {
          sub_1D7AA6010(v36 > 1, v37 + 1, 1);
          v31 = v58;
        }
        ++v30;
        *(_QWORD *)(v31 + 16) = v37 + 1;
        *(_QWORD *)(v31 + 8 * v37 + 32) = v35;
      }
      while (v28 != v30);
      swift_bridgeObjectRelease();

      v6 = v44;
      v3 = v45;
      v9 = v43;
      v27 = v53;
      v10 = v54;
    }
    else
    {
      v31 = MEMORY[0x1E0DEE9D8];
    }
    v38 = v57;
    *(_QWORD *)(v49 + ((v57 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v57;
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v27)(v9[6] + v56, v6, v3);
    *(_QWORD *)(v9[7] + 8 * v38) = v31;
    v39 = v9[2];
    v40 = __OFADD__(v39, 1);
    v41 = v39 + 1;
    if (v40)
    {
      __break(1u);
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    v9[2] = v41;
    v16 = v55;
    if (v55)
      goto LABEL_4;
LABEL_5:
    v18 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_31;
    if (v18 >= v48)
      return (uint64_t)v9;
    v19 = *(_QWORD *)(v47 + 8 * v18);
    ++v10;
    if (!v19)
    {
      v10 = v18 + 1;
      if (v18 + 1 >= v48)
        return (uint64_t)v9;
      v19 = *(_QWORD *)(v47 + 8 * v10);
      if (!v19)
      {
        v10 = v18 + 2;
        if (v18 + 2 >= v48)
          return (uint64_t)v9;
        v19 = *(_QWORD *)(v47 + 8 * v10);
        if (!v19)
          break;
      }
    }
LABEL_18:
    v55 = (v19 - 1) & v19;
  }
  v20 = v18 + 3;
  if (v20 >= v48)
    return (uint64_t)v9;
  v19 = *(_QWORD *)(v47 + 8 * v20);
  if (v19)
  {
    v10 = v20;
    goto LABEL_18;
  }
  while (1)
  {
    v10 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v10 >= v48)
      return (uint64_t)v9;
    v19 = *(_QWORD *)(v47 + 8 * v10);
    ++v20;
    if (v19)
      goto LABEL_18;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1D7B08440(void *a1, void *a2, uint64_t *a3, void *a4, void *a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9)
{
  uint64_t v9;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v29;
  void *v30;
  void *v31;

  v30 = a5;
  v31 = a4;
  sub_1D7AAE0AC(0, (unint64_t *)&qword_1F014DFD0, (void (*)(uint64_t))MEMORY[0x1E0D28FE0]);
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v29 - v21;
  v23 = sub_1D7B49504();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v29 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = v9 + OBJC_IVAR___HKBalanceSeries_selectedMetric;
  swift_beginAccess();
  sub_1D7AAF5A8(v27, (uint64_t)v22);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) == 1)
  {
    sub_1D7AF44A8((uint64_t)v22);
LABEL_5:
    sub_1D7AAF5A8(v27, (uint64_t)v20);
    sub_1D7B06F1C(a1, a6, a7, a8, a9, (uint64_t)a2, a3, (uint64_t)v31, v30, (uint64_t)v20);
    return sub_1D7AF44A8((uint64_t)v20);
  }
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v26, v22, v23);
  if (objc_msgSend(a2, sel_intendedTimeScope) == (id)3)
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
    goto LABEL_5;
  }
  sub_1D7B078CC(a1, a6, a7, a8, a9, (uint64_t)a2, (__int128 *)a3, v31, (unint64_t)v26);
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v26, v23);
}

id sub_1D7B08650(id a1)
{
  id v1;
  id v2;
  void *v3;
  double v4;
  double v5;
  id v6;
  double v7;
  double v8;
  id v9;
  id v10;

  v1 = a1;
  if (a1)
  {
    v2 = objc_msgSend(a1, sel_minValue);
    if (v2)
    {
      v3 = v2;
      objc_msgSend(v2, sel_doubleValue);
      v5 = v4;

      v6 = objc_msgSend(v1, sel_maxValue);
      v1 = v6;
      if (v6)
      {
        objc_msgSend(v6, sel_doubleValue);
        v8 = v7;

        v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v5 + -0.05);
        v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v8 + 0.05);
        v1 = objc_msgSend((id)objc_opt_self(), sel_valueRangeWithMinValue_maxValue_, v9, v10);

      }
    }
    else
    {
      return 0;
    }
  }
  return v1;
}

uint64_t sub_1D7B08778()
{
  type metadata accessor for BalanceCoordinate();
  return swift_dynamicCastClass();
}

uint64_t sub_1D7B08848()
{
  return type metadata accessor for BalanceSeries();
}

void sub_1D7B08850()
{
  unint64_t v0;

  sub_1D7AAE0AC(319, (unint64_t *)&qword_1F014DFD0, (void (*)(uint64_t))MEMORY[0x1E0D28FE0]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for BalanceSeries()
{
  return swift_lookUpClassMethod();
}

__n128 sub_1D7B08900(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __n128 result;
  __int128 v5;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = *(__n128 *)(v2 + 32);
  v5 = *(_OWORD *)(v2 + 48);
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v5;
  *(_BYTE *)(a1 + 64) = 0;
  return result;
}

uint64_t sub_1D7B0891C()
{
  return swift_deallocObject();
}

uint64_t sub_1D7B0892C()
{
  return swift_deallocObject();
}

uint64_t sub_1D7B0893C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v1 = sub_1D7B49504();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (((((v4 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v9 = (((v8 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v10 = (((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  swift_release();
  swift_release();
  return swift_deallocObject();
}

char *sub_1D7B08A84(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  CGFloat *v7;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;

  v15 = *(_QWORD *)(sub_1D7B49504() - 8);
  v16 = (*(unsigned __int8 *)(v15 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v17 = (*(_QWORD *)(v15 + 64) + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = (v17 + 15) & 0xFFFFFFFFFFFFFFF8;
  v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  v20 = (v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  v21 = (v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF8;
  v23 = (v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  v24 = (v23 + 15) & 0xFFFFFFFFFFFFFFF8;
  v25 = (v24 + 15) & 0xFFFFFFFFFFFFFFF8;
  v26 = (v25 + 15) & 0xFFFFFFFFFFFFFFF8;
  v27 = (v26 + 15) & 0xFFFFFFFFFFFFFFF8;
  return sub_1D7B04EB0(a1, v7[2], v7[3], v7[4], v7[5], *(CGFloat *)((char *)v7 + v19), *(CGFloat *)((char *)v7 + v24), *(CGFloat *)((char *)v7 + v26), a2, a3, a4, a5, a6, a7, (uint64_t)v7 + v16, *(void **)((char *)v7 + v17), *(_QWORD *)((char *)v7 + v18), *(void **)((char *)v7 + v20), *(CGContext **)((char *)v7 + v21),
           *(void **)((char *)v7 + v22),
           *(_QWORD *)((char *)v7 + v23),
           *(void **)((char *)v7 + v25),
           *(void **)((char *)v7 + v27),
           *(void **)((char *)v7 + ((v27 + 15) & 0xFFFFFFFFFFFFFFF8)),
           *(_QWORD *)((char *)v7 + ((((v27 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

unint64_t sub_1D7B08BEC()
{
  unint64_t result;

  result = qword_1F014EBB0;
  if (!qword_1F014EBB0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1F014EBB0);
  }
  return result;
}

uint64_t sub_1D7B08C28()
{
  id *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;

  sub_1D7AAE0AC(0, (unint64_t *)&qword_1F014DFD0, (void (*)(uint64_t))MEMORY[0x1E0D28FE0]);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);

  v5 = sub_1D7B49504();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))((char *)v0 + v3, 1, v5))
    (*(void (**)(char *, uint64_t))(v6 + 8))((char *)v0 + v3, v5);
  v7 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = (((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 73) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  v10 = (((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D7B08D68(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v6;

  sub_1D7AAE0AC(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1D7B08DB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  double v24;

  sub_1D7AAE0AC(0, (unint64_t *)&qword_1F014DFD0, (void (*)(uint64_t))MEMORY[0x1E0D28FE0]);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (*(_QWORD *)(v16 + 64) + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  v20 = (v19 + 73) & 0xFFFFFFFFFFFFFFF8;
  v21 = (v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF8;
  v23 = (v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  return sub_1D7B04398(a1, a2, a3, a4, a5, *(CGFloat *)(v7 + 16), *(CGFloat *)(v7 + 24), *(CGFloat *)(v7 + 32), *(CGFloat *)(v7 + 40), *(double *)(v7 + 48), *(double *)(v7 + 80), *(double *)(v7 + v22), a6, a7, *(void **)(v7 + 56), v24, *(_QWORD *)(v7 + 64), *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 72), v7 + v17,
           *(void **)(v7 + v18),
           v7 + v19,
           *(_BYTE *)(v7 + v19 + 65),
           *(void **)(v7 + v20),
           *(void **)(v7 + v21),
           *(void **)(v7 + v23),
           *(double *)(v7 + ((v23 + 15) & 0xFFFFFFFFFFFFFFF8)),
           *(_QWORD *)(v7 + ((((v23 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1D7B08EF4()
{
  return swift_release();
}

void sub_1D7B08EFC()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1F014F4A0)
  {
    sub_1D7B49504();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D28FE0];
    sub_1D7AA7E70(255, (unint64_t *)&unk_1F014EE10, MEMORY[0x1E0DEF040], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1D7AA76D4((unint64_t *)&unk_1F014EE00, v0, MEMORY[0x1E0D28FF0]);
    v1 = sub_1D7B4A8D8();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1F014F4A0);
  }
}

id AudiogramAverageSensitivityChartFormatter.__allocating_init(displayType:unitController:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return AudiogramChartDataFormatter.init(displayType:unitController:)(a1, a2);
}

id AudiogramAverageSensitivityDataSource.dataBlock.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___HKAudiogramAverageSensitivityDataSource_dataBlock);
}

id AudiogramAverageSensitivityDataSource.__allocating_init(audiogramSample:isLeftEar:)(void *a1, char a2)
{
  objc_class *v2;
  id v5;
  id v6;
  char *v7;
  id v8;
  void *v9;
  id v10;
  objc_super v12;

  v5 = objc_allocWithZone(v2);
  v6 = objc_allocWithZone((Class)HKGraphSeriesDataBlock);
  v7 = (char *)v5;
  v8 = objc_msgSend(v6, sel_init);
  sub_1D7B098B0(a1, a2);
  sub_1D7ADE914(0, (unint64_t *)&qword_1F014DF40);
  v9 = (void *)sub_1D7B4A4A0();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_setChartPoints_, v9);

  *(_QWORD *)&v7[OBJC_IVAR___HKAudiogramAverageSensitivityDataSource_dataBlock] = v8;
  v12.receiver = v7;
  v12.super_class = v2;
  v10 = objc_msgSendSuper2(&v12, sel_init);

  return v10;
}

id AudiogramAverageSensitivityDataSource.init(audiogramSample:isLeftEar:)(void *a1, char a2)
{
  void *v2;
  id v5;
  char *v6;
  id v7;
  void *v8;
  id v9;
  objc_super v11;

  v5 = objc_allocWithZone((Class)HKGraphSeriesDataBlock);
  v6 = v2;
  v7 = objc_msgSend(v5, sel_init);
  sub_1D7B098B0(a1, a2);
  sub_1D7ADE914(0, (unint64_t *)&qword_1F014DF40);
  v8 = (void *)sub_1D7B4A4A0();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setChartPoints_, v8);

  *(_QWORD *)&v6[OBJC_IVAR___HKAudiogramAverageSensitivityDataSource_dataBlock] = v7;
  v11.receiver = v6;
  v11.super_class = (Class)type metadata accessor for AudiogramAverageSensitivityDataSource();
  v9 = objc_msgSendSuper2(&v11, sel_init);

  return v9;
}

void AudiogramAverageSensitivityDataSource.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id AudiogramAverageSensitivityDataSource.__deallocating_deinit(uint64_t a1)
{
  return sub_1D7AE3DFC(a1, type metadata accessor for AudiogramAverageSensitivityDataSource);
}

id AudiogramAverageSensitivityChartData.__allocating_init(averageSensitivity:roundedAverageSensitivity:isLeftEar:)(char a1, double a2, double a3)
{
  objc_class *v3;
  _BYTE *v7;
  objc_super v9;

  v7 = objc_allocWithZone(v3);
  *(double *)&v7[OBJC_IVAR____TtC8HealthUI36AudiogramAverageSensitivityChartData_averageSensitivity] = a2;
  *(double *)&v7[OBJC_IVAR____TtC8HealthUI36AudiogramAverageSensitivityChartData_roundedAverageSensitivity] = a3;
  v7[OBJC_IVAR____TtC8HealthUI36AudiogramAverageSensitivityChartData_isLeftEar] = a1;
  v9.receiver = v7;
  v9.super_class = v3;
  return objc_msgSendSuper2(&v9, sel_init);
}

id sub_1D7B096A4()
{
  return sub_1D7AE3DFC(0, type metadata accessor for AudiogramAverageSensitivityChartPoint);
}

double AudiogramAverageSensitivityChartData.averageSensitivity.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC8HealthUI36AudiogramAverageSensitivityChartData_averageSensitivity);
}

double AudiogramAverageSensitivityChartData.roundedAverageSensitivity.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC8HealthUI36AudiogramAverageSensitivityChartData_roundedAverageSensitivity);
}

uint64_t AudiogramAverageSensitivityChartData.isLeftEar.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8HealthUI36AudiogramAverageSensitivityChartData_isLeftEar);
}

id AudiogramAverageSensitivityChartData.init(averageSensitivity:roundedAverageSensitivity:isLeftEar:)(char a1, double a2, double a3)
{
  _BYTE *v3;
  objc_super v5;

  *(double *)&v3[OBJC_IVAR____TtC8HealthUI36AudiogramAverageSensitivityChartData_averageSensitivity] = a2;
  *(double *)&v3[OBJC_IVAR____TtC8HealthUI36AudiogramAverageSensitivityChartData_roundedAverageSensitivity] = a3;
  v3[OBJC_IVAR____TtC8HealthUI36AudiogramAverageSensitivityChartData_isLeftEar] = a1;
  v5.receiver = v3;
  v5.super_class = (Class)type metadata accessor for AudiogramAverageSensitivityChartData();
  return objc_msgSendSuper2(&v5, sel_init);
}

id AudiogramAverageSensitivityChartData.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void AudiogramAverageSensitivityChartData.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id AudiogramAverageSensitivityChartData.__deallocating_deinit(uint64_t a1)
{
  return sub_1D7AE3DFC(a1, type metadata accessor for AudiogramAverageSensitivityChartData);
}

uint64_t sub_1D7B097F4()
{
  return 3;
}

id AudiogramAverageSensitivityChartFormatter.__deallocating_deinit(uint64_t a1)
{
  return sub_1D7AE3DFC(a1, type metadata accessor for AudiogramAverageSensitivityChartFormatter);
}

unint64_t sub_1D7B098B0(id a1, char a2)
{
  id v3;
  void *v4;
  char **v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  double v14;
  double v15;
  id v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t result;
  uint64_t i;
  id v21;
  void *v22;
  char **v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  double v28;
  long double v29;
  long double v30;
  objc_class *v31;
  id v32;
  id v33;
  _BYTE *v34;
  id v35;
  id v36;
  unint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  objc_super v42;
  unint64_t v43;

  if ((a2 & 1) != 0)
  {
    v3 = objc_msgSend(a1, sel_averageLeftEarSensitivity);
    if (v3)
    {
      v4 = v3;
      v5 = &selRef_roundedAverageLeftEarSensitivity;
      goto LABEL_6;
    }
    return MEMORY[0x1E0DEE9D8];
  }
  v6 = objc_msgSend(a1, sel_averageRightEarSensitivity);
  if (!v6)
    return MEMORY[0x1E0DEE9D8];
  v4 = v6;
  v5 = &selRef_roundedAverageRightEarSensitivity;
LABEL_6:
  v7 = objc_msgSend(a1, *v5);
  if (!v7)
  {

    return MEMORY[0x1E0DEE9D8];
  }
  v8 = v7;
  v9 = (void *)objc_opt_self();
  v10 = objc_msgSend(v9, sel_decibelHearingLevelUnit);
  objc_msgSend(v4, sel_doubleValueForUnit_, v10);
  v12 = v11;

  v13 = objc_msgSend(v9, sel_decibelHearingLevelUnit);
  objc_msgSend(v8, sel_doubleValueForUnit_, v13);
  v15 = v14;

  v16 = objc_msgSend(a1, sel_sensitivityPoints);
  sub_1D7AAF6EC(0, &qword_1F014F5A8);
  v17 = sub_1D7B4A4AC();

  v43 = MEMORY[0x1E0DEE9D8];
  if (!(v17 >> 62))
  {
    v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v18)
      goto LABEL_9;
LABEL_26:
    swift_bridgeObjectRelease();
    v37 = MEMORY[0x1E0DEE9D8];
LABEL_27:
    swift_bridgeObjectRelease();
    if (v37 >> 62)
    {
      sub_1D7ADE914(0, (unint64_t *)&qword_1F014DF40);
      swift_bridgeObjectRetain();
      v38 = sub_1D7B4A89C();

      swift_bridgeObjectRelease_n();
      return v38;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1D7B4A944();
      sub_1D7ADE914(0, (unint64_t *)&qword_1F014DF40);

      swift_bridgeObjectRelease();
    }
    return v37;
  }
  swift_bridgeObjectRetain();
  result = sub_1D7B4A8A8();
  v18 = result;
  if (!result)
    goto LABEL_26;
LABEL_9:
  if (v18 >= 1)
  {
    v39 = v8;
    v40 = v4;
    for (i = 0; i != v18; ++i)
    {
      if ((v17 & 0xC000000000000001) != 0)
        v21 = (id)MEMORY[0x1D829E758](i, v17);
      else
        v21 = *(id *)(v17 + 8 * i + 32);
      v22 = v21;
      v23 = &selRef_leftEarSensitivity;
      if ((a2 & 1) == 0)
        v23 = &selRef_rightEarSensitivity;
      v24 = objc_msgSend(v21, *v23);
      if (v24)
      {
        v25 = v24;
        v26 = objc_msgSend(v22, sel_frequency);
        v27 = objc_msgSend(v9, sel_hertzUnit);
        objc_msgSend(v26, sel_doubleValueForUnit_, v27);
        v29 = v28;

        v30 = (log(v29) + -4.82831374) / 0.693147181;
        v31 = (objc_class *)type metadata accessor for AudiogramAverageSensitivityChartPoint();
        v32 = objc_allocWithZone(v31);
        v33 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
        v34 = v32;
        v35 = objc_msgSend(v33, sel_initWithDouble_, (double)v30);
        *(_QWORD *)&v34[OBJC_IVAR____TtC8HealthUIP33_2A1C24F28D3D74C6BE1A5464632B356C37AudiogramAverageSensitivityChartPoint_xCoord] = v35;
        v36 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, -v15);
        *(_QWORD *)&v34[OBJC_IVAR____TtC8HealthUIP33_2A1C24F28D3D74C6BE1A5464632B356C37AudiogramAverageSensitivityChartPoint_yCoord] = v36;
        *(_QWORD *)&v34[OBJC_IVAR____TtC8HealthUIP33_2A1C24F28D3D74C6BE1A5464632B356C37AudiogramAverageSensitivityChartPoint_averageSensitivity] = v12;
        *(double *)&v34[OBJC_IVAR____TtC8HealthUIP33_2A1C24F28D3D74C6BE1A5464632B356C37AudiogramAverageSensitivityChartPoint_roundedAverageSensitivity] = v15;
        v34[OBJC_IVAR____TtC8HealthUIP33_2A1C24F28D3D74C6BE1A5464632B356C37AudiogramAverageSensitivityChartPoint_isLeftEar] = a2 & 1;

        v42.receiver = v34;
        v42.super_class = v31;
        objc_msgSendSuper2(&v42, sel_init);

        MEMORY[0x1D829E3EC]();
        if (*(_QWORD *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1D7B4A4C4();
        sub_1D7B4A4DC();
        sub_1D7B4A4B8();
      }
      else
      {

      }
    }
    swift_bridgeObjectRelease();
    v37 = v43;
    v8 = v39;
    v4 = v40;
    goto LABEL_27;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for AudiogramAverageSensitivityDataSource()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for AudiogramAverageSensitivityChartData()
{
  return objc_opt_self();
}

uint64_t sub_1D7B09DCC(unint64_t a1)
{
  id v1;
  id v2;
  void *v3;
  void *v4;
  char **v5;
  uint64_t v7;
  uint64_t i;
  uint64_t v9;
  void *v10;
  uint64_t j;
  uint64_t v12;
  void *v13;
  int v14;
  void *v15;
  void *v16;
  id v17;
  double v18;
  void *v19;
  id v20;
  id v21;
  double v22;
  double v23;
  id v24;
  id v25;
  void *v26;
  void *v27;
  char *v28;
  id v29;
  double v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  id v35;
  double v36;
  double v37;
  id v38;
  id v39;
  void *v40;
  id v42;
  uint64_t v43;

  if (!(a1 >> 62))
  {
    v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7)
      goto LABEL_3;
LABEL_30:
    swift_bridgeObjectRelease();
    v3 = 0;
    v43 = MEMORY[0x1E0DEE9D8];
    goto LABEL_31;
  }
  swift_bridgeObjectRetain();
  v7 = sub_1D7B4A8A8();
  if (!v7)
    goto LABEL_30;
LABEL_3:
  if (v7 < 1)
  {
    __break(1u);
LABEL_33:
    sub_1D7B4A4C4();
    goto LABEL_24;
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    v4 = 0;
    v3 = 0;
    for (i = 0; i != v7; ++i)
    {
      MEMORY[0x1D829E758](i, a1);
      type metadata accessor for AudiogramAverageSensitivityChartData();
      v9 = swift_dynamicCastClass();
      if (v9)
      {
        v10 = (void *)v9;
        if (*(_BYTE *)(v9 + OBJC_IVAR____TtC8HealthUI36AudiogramAverageSensitivityChartData_isLeftEar) == 1)
        {

          v3 = v10;
        }
        else
        {

          v4 = v10;
        }
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
  }
  else
  {
    type metadata accessor for AudiogramAverageSensitivityChartData();
    v4 = 0;
    v3 = 0;
    for (j = 0; j != v7; ++j)
    {
      v12 = swift_dynamicCastClass();
      if (v12)
      {
        v13 = (void *)v12;
        v14 = *(unsigned __int8 *)(v12 + OBJC_IVAR____TtC8HealthUI36AudiogramAverageSensitivityChartData_isLeftEar);
        swift_unknownObjectRetain();
        if (v14)
          v15 = v3;
        else
          v15 = v4;
        if (v14)
          v3 = v13;
        else
          v4 = v13;

      }
    }
  }
  swift_bridgeObjectRelease();
  v5 = &selRef_clearDisplayTypeStack;
  v43 = MEMORY[0x1E0DEE9D8];
  if (!v3)
    goto LABEL_25;
  v16 = (void *)objc_opt_self();
  v7 = v3;
  v17 = objc_msgSend(v16, sel_decibelHearingLevelUnit);
  v18 = *(double *)(v7 + OBJC_IVAR____TtC8HealthUI36AudiogramAverageSensitivityChartData_averageSensitivity);
  v19 = (void *)objc_opt_self();
  v1 = objc_msgSend(v19, sel_quantityWithUnit_doubleValue_, v17, v18);

  v20 = objc_msgSend(v16, sel_decibelHearingLevelUnit);
  v2 = objc_msgSend(v19, sel_quantityWithUnit_doubleValue_, v20, *(double *)(v7 + OBJC_IVAR____TtC8HealthUI36AudiogramAverageSensitivityChartData_roundedAverageSensitivity));

  v21 = objc_msgSend(v16, sel_decibelHearingLevelUnit);
  objc_msgSend(v2, sel_doubleValueForUnit_, v21);
  v23 = v22;
  v24 = objc_msgSend(objc_allocWithZone((Class)HKSelectedRangeData), sel_initWithStatisticsType_, 3);
  objc_msgSend(v24, sel_setDataType_, 7);
  v25 = objc_msgSend(v42, sel_attributedStringWithValue_unit_showUnit_, v21, 1, v23);
  objc_msgSend(v24, sel_setAttributedString_, v25);

  objc_msgSend(v1, sel_doubleValueForUnit_, v21);
  v26 = (void *)sub_1D7B494BC();
  objc_msgSend(v24, sel_setValueAsNumber_, v26);

  MEMORY[0x1D829E3EC]();
  if (*(_QWORD *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    goto LABEL_33;
LABEL_24:
  sub_1D7B4A4DC();
  sub_1D7B4A4B8();

LABEL_25:
  if (v4)
  {
    v27 = (void *)objc_opt_self();
    v28 = v4;
    v29 = objc_msgSend(v27, v5[466]);
    v30 = *(double *)&v28[OBJC_IVAR____TtC8HealthUI36AudiogramAverageSensitivityChartData_averageSensitivity];
    v31 = (void *)objc_opt_self();
    v32 = objc_msgSend(v31, sel_quantityWithUnit_doubleValue_, v29, v30);

    v33 = objc_msgSend(v27, v5[466]);
    v34 = objc_msgSend(v31, sel_quantityWithUnit_doubleValue_, v33, *(double *)&v28[OBJC_IVAR____TtC8HealthUI36AudiogramAverageSensitivityChartData_roundedAverageSensitivity]);

    v35 = objc_msgSend(v27, v5[466]);
    objc_msgSend(v34, sel_doubleValueForUnit_, v35);
    v37 = v36;
    v38 = objc_msgSend(objc_allocWithZone((Class)HKSelectedRangeData), sel_initWithStatisticsType_, 3);
    objc_msgSend(v38, sel_setDataType_, 8);
    v39 = objc_msgSend(v42, sel_attributedStringWithValue_unit_showUnit_, v35, 1, v37);
    objc_msgSend(v38, sel_setAttributedString_, v39);

    objc_msgSend(v32, sel_doubleValueForUnit_, v35);
    v40 = (void *)sub_1D7B494BC();
    objc_msgSend(v38, sel_setValueAsNumber_, v40);

    MEMORY[0x1D829E3EC]();
    if (*(_QWORD *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1D7B4A4C4();
    sub_1D7B4A4DC();
    sub_1D7B4A4B8();

  }
LABEL_31:

  return v43;
}

uint64_t type metadata accessor for AudiogramAverageSensitivityChartFormatter()
{
  return objc_opt_self();
}

uint64_t method lookup function for AudiogramAverageSensitivityDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AudiogramAverageSensitivityDataSource.__allocating_init(audiogramSample:isLeftEar:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t type metadata accessor for AudiogramAverageSensitivityChartPoint()
{
  return objc_opt_self();
}

uint64_t method lookup function for AudiogramAverageSensitivityChartData()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AudiogramAverageSensitivityChartData.__allocating_init(averageSensitivity:roundedAverageSensitivity:isLeftEar:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

void sub_1D7B0A3E0(void *a1@<X0>, void *a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  char *v13;

  *(_QWORD *)a4 = a1;
  *(_QWORD *)(a4 + 8) = a2;
  *(_BYTE *)(a4 + 56) = a3;
  v6 = a1;
  v7 = a2;
  v8 = objc_msgSend(v7, sel_wrappedFlowManager);
  sub_1D7B4A770();
  swift_unknownObjectRelease();
  type metadata accessor for ClinicalAuthorizationFlowManager();
  swift_dynamicCast();
  v9 = *(id *)&v13[OBJC_IVAR___HKClinicalAuthorizationFlowManager_healthRecordsStore];

  v10 = type metadata accessor for ClinicalAccountLogoLoader();
  v11 = (_QWORD *)swift_allocObject();
  v11[4] = 0x8000000000000000;
  v12 = v6;
  sub_1D7B49498();
  v11[2] = v9;
  v11[3] = v12;
  *(_QWORD *)(a4 + 40) = v10;
  *(_QWORD *)(a4 + 48) = &off_1E9C4AB88;

  *(_QWORD *)(a4 + 16) = v11;
}

uint64_t destroy for ClinicalAccountRow(id *a1)
{

  return __swift_destroy_boxed_opaque_existential_0((uint64_t)(a1 + 2));
}

uint64_t initializeWithCopy for ClinicalAccountRow(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  id v11;
  id v12;

  v4 = *(void **)a2;
  v5 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = a1 + 16;
  v7 = a2 + 16;
  v8 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v8;
  v9 = v8;
  v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  v11 = v4;
  v12 = v5;
  v10(v6, v7, v9);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t assignWithCopy for ClinicalAccountRow(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ClinicalAccountRow(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  __int128 v6;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  __swift_destroy_boxed_opaque_existential_0(a1 + 16);
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClinicalAccountRow(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 57))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClinicalAccountRow(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 57) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClinicalAccountRow()
{
  return &type metadata for ClinicalAccountRow;
}

uint64_t sub_1D7B0A748()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D7B0A758@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[2];
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v26 = a2;
  v3 = type metadata accessor for ClinicalAccountBrandLogoView();
  v4 = MEMORY[0x1E0C80A78](v3);
  v27 = (uint64_t)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v24 - v6);
  v8 = *a1;
  sub_1D7AC0938((uint64_t)(a1 + 2), (uint64_t)&v24 - v6 + 8);
  *v7 = v8;
  v28[0] = 0x4042000000000000;
  sub_1D7ABF398();
  v9 = v8;
  sub_1D7B498AC();
  v25 = sub_1D7B49B28();
  sub_1D7B0A934(a1, (uint64_t)v28);
  v10 = v28[0];
  v11 = v28[1];
  LOBYTE(v3) = v29;
  v13 = v30;
  v12 = v31;
  v14 = v32;
  v15 = v33;
  v16 = v34;
  v17 = v27;
  sub_1D7B0AE6C((uint64_t)v7, v27);
  v18 = v17;
  v19 = v26;
  sub_1D7B0AE6C(v18, v26);
  sub_1D7B0ACB0();
  v21 = v19 + *(int *)(v20 + 48);
  *(_QWORD *)v21 = v25;
  *(_QWORD *)(v21 + 8) = 0;
  *(_BYTE *)(v21 + 16) = 1;
  *(_QWORD *)(v21 + 24) = v10;
  *(_QWORD *)(v21 + 32) = v11;
  *(_BYTE *)(v21 + 40) = v3;
  *(_QWORD *)(v21 + 48) = v13;
  *(_QWORD *)(v21 + 56) = v12;
  *(_QWORD *)(v21 + 64) = v14;
  *(_QWORD *)(v21 + 72) = v15;
  *(_QWORD *)(v21 + 80) = v16;
  v22 = v19 + *(int *)(v20 + 64);
  *(_QWORD *)v22 = 0;
  *(_BYTE *)(v22 + 8) = 1;
  sub_1D7ABF0C8(v10, v11, v3);
  swift_bridgeObjectRetain();
  sub_1D7B0AEB0(v12, v14, v15, v16);
  sub_1D7B0AEE0((uint64_t)v7);
  sub_1D7AACF84(v10, v11, v3);
  swift_bridgeObjectRelease();
  sub_1D7B0AF1C(v12, v14, v15, v16);
  return sub_1D7B0AEE0(v27);
}

void sub_1D7B0A934(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;

  v3 = *a1;
  v4 = objc_msgSend(*a1, sel_title);
  sub_1D7B4A3BC();

  sub_1D7ABCCEC();
  v5 = sub_1D7B49EB8();
  v7 = v6;
  v9 = v8 & 1;
  sub_1D7B49DC8();
  v10 = sub_1D7B49E64();
  v12 = v11;
  v36 = v13;
  v15 = v14;
  sub_1D7AACF84(v5, v7, v9);
  swift_bridgeObjectRelease();
  v37 = v12;
  if (!objc_msgSend(v3, sel_needsRelogin))
  {
    v28 = 0;
    v30 = 0;
    v34 = 0;
    v32 = 0;
    goto LABEL_5;
  }
  v35 = v15;
  v16 = (void *)sub_1D7B4A38C();
  v17 = HKHealthRecordsAPILocalizedString(v16);

  if (v17)
  {
    sub_1D7B4A3BC();

    v18 = sub_1D7B49EB8();
    v20 = v19;
    v22 = v21 & 1;
    sub_1D7B49E28();
    v23 = sub_1D7B49E88();
    v25 = v24;
    v27 = v26;
    swift_release();
    sub_1D7AACF84(v18, v20, v22);
    swift_bridgeObjectRelease();
    sub_1D7B49FA8();
    v28 = sub_1D7B49E7C();
    v30 = v29;
    v32 = v31;
    v34 = v33 & 1;
    sub_1D7AACF84(v23, v25, v27 & 1);
    swift_release();
    swift_bridgeObjectRelease();
    v15 = v35;
LABEL_5:
    *(_QWORD *)a2 = v10;
    *(_QWORD *)(a2 + 8) = v37;
    *(_BYTE *)(a2 + 16) = v36 & 1;
    *(_QWORD *)(a2 + 24) = v15;
    *(_QWORD *)(a2 + 32) = v28;
    *(_QWORD *)(a2 + 40) = v30;
    *(_QWORD *)(a2 + 48) = v34;
    *(_QWORD *)(a2 + 56) = v32;
    sub_1D7ABF0C8(v10, v37, v36 & 1);
    swift_bridgeObjectRetain();
    sub_1D7B0AEB0(v28, v30, v34, v32);
    sub_1D7B0AF1C(v28, v30, v34, v32);
    sub_1D7AACF84(v10, v37, v36 & 1);
    swift_bridgeObjectRelease();
    return;
  }
  __break(1u);
}

uint64_t sub_1D7B0ABF8@<X0>(uint64_t a1@<X8>)
{
  id *v1;
  uint64_t v3;

  *(_QWORD *)a1 = sub_1D7B49B04();
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  sub_1D7B0AC3C();
  return sub_1D7B0A758(v1, a1 + *(int *)(v3 + 44));
}

void sub_1D7B0AC3C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F014F5B0)
  {
    sub_1D7ABEC34(255, &qword_1F014F5B8, (void (*)(uint64_t))sub_1D7B0ACB0);
    v0 = sub_1D7B49924();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F014F5B0);
  }
}

void sub_1D7B0ACB0()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_1F014F5C0)
  {
    type metadata accessor for ClinicalAccountBrandLogoView();
    sub_1D7B0AD24();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1F014F5C0);
  }
}

void sub_1D7B0AD24()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F014F5C8)
  {
    sub_1D7ABEC34(255, &qword_1F014F5D0, (void (*)(uint64_t))sub_1D7B0ADB4);
    sub_1D7ABEF10(&qword_1F014F5E8, &qword_1F014F5D0, (void (*)(uint64_t))sub_1D7B0ADB4);
    v0 = sub_1D7B4A0B0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F014F5C8);
  }
}

void sub_1D7B0ADB4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1F014F5D8)
  {
    sub_1D7B0AE18();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1F014F5D8);
  }
}

void sub_1D7B0AE18()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F014F5E0)
  {
    v0 = sub_1D7B4A6F8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F014F5E0);
  }
}

uint64_t sub_1D7B0AE6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ClinicalAccountBrandLogoView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D7B0AEB0(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1D7ABF0C8(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1D7B0AEE0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ClinicalAccountBrandLogoView();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D7B0AF1C(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1D7AACF84(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1D7B0AF50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F014F5F0;
  if (!qword_1F014F5F0)
  {
    sub_1D7B0AF98();
    result = MEMORY[0x1D829FF28](MEMORY[0x1E0CDFB10], v1);
    atomic_store(result, (unint64_t *)&qword_1F014F5F0);
  }
  return result;
}

void sub_1D7B0AF98()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F014F5F8)
  {
    sub_1D7ABEC34(255, &qword_1F014F5B8, (void (*)(uint64_t))sub_1D7B0ACB0);
    sub_1D7ABEF10(&qword_1F014F600, &qword_1F014F5B8, (void (*)(uint64_t))sub_1D7B0ACB0);
    v0 = sub_1D7B4A098();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F014F5F8);
  }
}

uint64_t sub_1D7B0B028(uint64_t a1)
{
  int64_t v2;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    sub_1D7AA5F1C(0, v2, 0);
    __asm { BR              X9 }
  }
  return result;
}

id HKInteractiveChartInteractionAnalyticsEvent.__allocating_init(for:timeScopeSelected:)(void *a1, uint64_t a2)
{
  objc_class *v2;
  id v5;
  id v6;

  v5 = objc_allocWithZone(v2);
  v6 = sub_1D7B0B8E0(a1, a2);

  return v6;
}

id HKInteractiveChartInteractionAnalyticsEvent.init(for:timeScopeSelected:)(void *a1, uint64_t a2)
{
  id v3;

  v3 = sub_1D7B0B8E0(a1, a2);

  return v3;
}

id HKInteractiveChartInteractionAnalyticsEvent.__allocating_init(showMoreDataForDisplayType:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_1D7B0BA9C(a1);

  return v4;
}

id HKInteractiveChartInteractionAnalyticsEvent.init(showMoreDataForDisplayType:)(void *a1)
{
  id v2;

  v2 = sub_1D7B0BA9C(a1);

  return v2;
}

id HKInteractiveChartInteractionAnalyticsEvent.__allocating_init(showMoreDataForDataType:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_1D7B0BB90(a1);

  return v4;
}

id HKInteractiveChartInteractionAnalyticsEvent.init(showMoreDataForDataType:)(void *a1)
{
  id v2;

  v2 = sub_1D7B0BB90(a1);

  return v2;
}

unint64_t sub_1D7B0B418()
{
  return 0xD000000000000027;
}

unint64_t sub_1D7B0B434()
{
  return sub_1D7AE00F0(MEMORY[0x1E0DEE9D8]);
}

uint64_t sub_1D7B0B4B8()
{
  return sub_1D7B0BD9C();
}

id HKInteractiveChartInteractionAnalyticsEvent.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void HKInteractiveChartInteractionAnalyticsEvent.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id HKInteractiveChartInteractionAnalyticsEvent.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HKInteractiveChartInteractionAnalyticsEvent();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D7B0B658(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  _QWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  char v16;
  uint64_t *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  _OWORD v28[2];
  __int128 v29;
  uint64_t v30;

  v1 = sub_1D7B0B028((uint64_t)&unk_1E9C478D8);
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
  {
    v4 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_17:
    swift_bridgeObjectRelease();
    v21 = objc_msgSend(a1, sel_identifier);
    v22 = sub_1D7B4A3BC();
    v24 = v23;

    v30 = MEMORY[0x1E0DEA968];
    *(_QWORD *)&v29 = v22;
    *((_QWORD *)&v29 + 1) = v24;
    sub_1D7AA552C(&v29, v28);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1D7AF6CFC(v28, 0xD000000000000012, 0x80000001D7BA6FF0, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    return (uint64_t)v4;
  }
  v3 = (uint64_t *)(v1 + 40);
  v4 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  while (1)
  {
    v7 = *(v3 - 1);
    v6 = *v3;
    v30 = MEMORY[0x1E0DEA968];
    *(_QWORD *)&v29 = 776023630;
    *((_QWORD *)&v29 + 1) = 0xE400000000000000;
    sub_1D7AA552C(&v29, v28);
    swift_bridgeObjectRetain();
    v8 = swift_isUniquelyReferenced_nonNull_native();
    v10 = sub_1D7AF46D4(v7, v6);
    v11 = v4[2];
    v12 = (v9 & 1) == 0;
    v13 = v11 + v12;
    if (__OFADD__(v11, v12))
      break;
    v14 = v9;
    if (v4[3] >= v13)
    {
      if ((v8 & 1) != 0)
      {
        if ((v9 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_1D7AF67E4();
        if ((v14 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_1D7AF5994(v13, v8);
      v15 = sub_1D7AF46D4(v7, v6);
      if ((v14 & 1) != (v16 & 1))
        goto LABEL_20;
      v10 = v15;
      if ((v14 & 1) != 0)
      {
LABEL_3:
        v5 = (_OWORD *)(v4[7] + 32 * v10);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
        sub_1D7AA552C(v28, v5);
        goto LABEL_4;
      }
    }
    v4[(v10 >> 6) + 8] |= 1 << v10;
    v17 = (uint64_t *)(v4[6] + 16 * v10);
    *v17 = v7;
    v17[1] = v6;
    sub_1D7AA552C(v28, (_OWORD *)(v4[7] + 32 * v10));
    v18 = v4[2];
    v19 = __OFADD__(v18, 1);
    v20 = v18 + 1;
    if (v19)
      goto LABEL_19;
    v4[2] = v20;
    swift_bridgeObjectRetain();
LABEL_4:
    v3 += 2;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!--v2)
      goto LABEL_17;
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  result = sub_1D7B4A974();
  __break(1u);
  return result;
}

id sub_1D7B0B8E0(void *a1, uint64_t a2)
{
  void *v2;
  char *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  objc_super v18;
  uint64_t v19;
  _OWORD v20[2];
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  v5 = v2;
  v6 = objc_msgSend(a1, sel_objectType);
  v7 = sub_1D7B0B658(v6);

  v8 = MEMORY[0x1E0DEA968];
  v22 = MEMORY[0x1E0DEA968];
  *(_QWORD *)&v21 = 0x695465676E616863;
  *((_QWORD *)&v21 + 1) = 0xEF65706F6353656DLL;
  sub_1D7AA552C(&v21, v20);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v19 = v7;
  sub_1D7AF6CFC(v20, 0x6E6F69746361, 0xE600000000000000, isUniquelyReferenced_nonNull_native);
  v10 = v7;
  v23 = v7;
  swift_bridgeObjectRelease();
  v11 = HKStringForHKTimeScope(a2, 0);
  if (v11)
  {
    v12 = v11;
    v13 = sub_1D7B4A3BC();
    v15 = v14;

    v22 = v8;
    *(_QWORD *)&v21 = v13;
    *((_QWORD *)&v21 + 1) = v15;
    sub_1D7AA552C(&v21, v20);
    v16 = swift_isUniquelyReferenced_nonNull_native();
    v19 = v10;
    sub_1D7AF6CFC(v20, 0x706F6353656D6974, 0xE900000000000065, v16);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D7B2F9AC(0x706F6353656D6974, 0xE900000000000065, &v21);
    sub_1D7AB1290((uint64_t)&v21);
    v10 = v23;
  }
  *(_QWORD *)&v5[OBJC_IVAR____TtC8HealthUI43HKInteractiveChartInteractionAnalyticsEvent_eventPayload] = v10;

  v18.receiver = v5;
  v18.super_class = (Class)type metadata accessor for HKInteractiveChartInteractionAnalyticsEvent();
  return objc_msgSendSuper2(&v18, sel_init);
}

id sub_1D7B0BA9C(void *a1)
{
  void *v1;
  char *v3;
  id v4;
  uint64_t v5;
  char isUniquelyReferenced_nonNull_native;
  objc_super v8;
  uint64_t v9;
  _OWORD v10[2];
  __int128 v11;
  uint64_t v12;

  v3 = v1;
  v4 = objc_msgSend(a1, sel_objectType);
  v5 = sub_1D7B0B658(v4);

  v12 = MEMORY[0x1E0DEA968];
  strcpy((char *)&v11, "showMoreData");
  BYTE13(v11) = 0;
  HIWORD(v11) = -5120;
  sub_1D7AA552C(&v11, v10);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = v5;
  sub_1D7AF6CFC(v10, 0x6E6F69746361, 0xE600000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v3[OBJC_IVAR____TtC8HealthUI43HKInteractiveChartInteractionAnalyticsEvent_eventPayload] = v5;

  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for HKInteractiveChartInteractionAnalyticsEvent();
  return objc_msgSendSuper2(&v8, sel_init);
}

id sub_1D7B0BB90(void *a1)
{
  void *v1;
  char *v3;
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  objc_super v7;
  uint64_t v8;
  _OWORD v9[2];
  __int128 v10;
  uint64_t v11;

  v3 = v1;
  v4 = sub_1D7B0B658(a1);
  v11 = MEMORY[0x1E0DEA968];
  strcpy((char *)&v10, "showMoreData");
  BYTE13(v10) = 0;
  HIWORD(v10) = -5120;
  sub_1D7AA552C(&v10, v9);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = v4;
  sub_1D7AF6CFC(v9, 0x6E6F69746361, 0xE600000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v3[OBJC_IVAR____TtC8HealthUI43HKInteractiveChartInteractionAnalyticsEvent_eventPayload] = v4;

  v7.receiver = v3;
  v7.super_class = (Class)type metadata accessor for HKInteractiveChartInteractionAnalyticsEvent();
  return objc_msgSendSuper2(&v7, sel_init);
}

uint64_t sub_1D7B0BC68()
{
  id v0;
  id v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  _OWORD v7[2];

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v1 = objc_msgSend(v0, sel_getActivePairedDevice);

  if (v1)
  {
    if (objc_msgSend(v1, sel_valueForProperty_, *MEMORY[0x1E0D51738]))
    {
      sub_1D7B4A770();
      swift_unknownObjectRelease();

    }
    else
    {

      v5 = 0u;
      v6 = 0u;
    }
    sub_1D7AA7970((uint64_t)&v5, (uint64_t)v7);
  }
  else
  {
    memset(v7, 0, sizeof(v7));
  }
  sub_1D7AA7970((uint64_t)v7, (uint64_t)&v5);
  if (*((_QWORD *)&v6 + 1))
  {
    if ((swift_dynamicCast() & 1) != 0)
      return v4;
    else
      return 776023630;
  }
  else
  {
    v2 = 776023630;
    sub_1D7AB1290((uint64_t)&v5);
  }
  return v2;
}

uint64_t sub_1D7B0BD9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char isUniquelyReferenced_nonNull_native;
  _OWORD v6[2];
  __int128 v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8HealthUI43HKInteractiveChartInteractionAnalyticsEvent_eventPayload);
  swift_bridgeObjectRetain();
  v2 = sub_1D7B0BC68();
  v8 = MEMORY[0x1E0DEA968];
  *(_QWORD *)&v7 = v2;
  *((_QWORD *)&v7 + 1) = v3;
  sub_1D7AA552C(&v7, v6);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1D7AF6CFC(v6, 0xD00000000000001CLL, 0x80000001D7BA6FD0, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t type metadata accessor for HKInteractiveChartInteractionAnalyticsEvent()
{
  return objc_opt_self();
}

uint64_t method lookup function for HKInteractiveChartInteractionAnalyticsEvent()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of HKInteractiveChartInteractionAnalyticsEvent.__allocating_init(for:timeScopeSelected:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of HKInteractiveChartInteractionAnalyticsEvent.__allocating_init(showMoreDataForDisplayType:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of HKInteractiveChartInteractionAnalyticsEvent.__allocating_init(showMoreDataForDataType:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of HKInteractiveChartInteractionAnalyticsEvent.isEventSubmissionIHAGated.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of HKInteractiveChartInteractionAnalyticsEvent.eventName.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of HKInteractiveChartInteractionAnalyticsEvent.makeUnrestrictedEventPayload(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of HKInteractiveChartInteractionAnalyticsEvent.makeIHAGatedEventPayload(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t sub_1D7B0BF10(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    sub_1D7AA5F64(0, v1, 0);
    v2 = v9;
    v4 = (_QWORD *)(a1 + 32);
    do
    {
      __swift_project_boxed_opaque_existential_0(v4, v4[3]);
      v5 = sub_1D7B49624();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_1D7AA5F64(0, *(_QWORD *)(v9 + 16) + 1, 1);
      v7 = *(_QWORD *)(v9 + 16);
      v6 = *(_QWORD *)(v9 + 24);
      if (v7 >= v6 >> 1)
        sub_1D7AA5F64(v6 > 1, v7 + 1, 1);
      *(_QWORD *)(v9 + 16) = v7 + 1;
      *(_QWORD *)(v9 + 8 * v7 + 32) = v5;
      v4 += 5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

id BalanceChartFormatter.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

_QWORD *sub_1D7B0C044(unint64_t a1, uint64_t *a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t *v16;
  uint64_t v17;
  char *v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD v25[2];
  char *v26;
  uint64_t v27;
  char *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35[2];
  _QWORD *v36;

  v3 = v2;
  sub_1D7ACB9A8();
  v7 = MEMORY[0x1E0C80A78](v6);
  v26 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v25 - v9;
  if (a1 >> 62)
    goto LABEL_21;
  v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v11; v11 = sub_1D7B4A8A8())
  {
    v28 = v10;
    v25[1] = v3;
    v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v29 = a1;
    v30 = a1 & 0xC000000000000001;
    v13 = 4;
    v27 = v11;
    v14 = (uint64_t)v10;
    while (1)
    {
      v10 = (char *)(v13 - 4);
      v15 = v30 ? (char *)MEMORY[0x1D829E758](v13 - 4, a1) : (char *)*(id *)(a1 + 8 * v13);
      v3 = v15;
      if (__OFADD__(v10, 1))
        break;
      v31 = v13 - 3;
      v36 = v12;
      v16 = a2;
      v17 = *a2;
      v18 = &v15[OBJC_IVAR____TtC8HealthUI21BalanceCoordinateInfo_collection];
      __swift_project_boxed_opaque_existential_0(&v15[OBJC_IVAR____TtC8HealthUI21BalanceCoordinateInfo_collection], *(_QWORD *)&v15[OBJC_IVAR____TtC8HealthUI21BalanceCoordinateInfo_collection + 24]);
      swift_bridgeObjectRetain();
      sub_1D7B49600();
      v19 = sub_1D7AC9F00(v14, v17);
      swift_bridgeObjectRelease();
      sub_1D7AAD1B0(v14, (uint64_t (*)(_QWORD))sub_1D7ACB9A8);
      if ((v19 & 1) != 0)
      {
        v34 = 0;
        v32 = 0u;
        v33 = 0u;
      }
      else
      {
        __swift_project_boxed_opaque_existential_0(v18, *((_QWORD *)v18 + 3));
        v20 = (uint64_t)v26;
        sub_1D7B49600();
        sub_1D7AD19DC(v14, v20);
        sub_1D7AAD1B0(v14, (uint64_t (*)(_QWORD))sub_1D7ACB9A8);
        sub_1D7AC0938((uint64_t)v18, (uint64_t)&v32);
      }
      a2 = v16;
      v12 = v36;

      a1 = v29;
      v21 = v27;
      if (*((_QWORD *)&v33 + 1))
      {
        sub_1D7AE9B70(&v32, (uint64_t)v35);
        sub_1D7AE9B70(v35, (uint64_t)&v32);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v12 = sub_1D7ABAA7C(0, v12[2] + 1, 1, v12);
        v23 = v12[2];
        v22 = v12[3];
        if (v23 >= v22 >> 1)
          v12 = sub_1D7ABAA7C((_QWORD *)(v22 > 1), v23 + 1, 1, v12);
        v12[2] = v23 + 1;
        sub_1D7AE9B70(&v32, (uint64_t)&v12[5 * v23 + 4]);
      }
      else
      {
        sub_1D7B0EDDC((uint64_t)&v32, &qword_1F014F668, (uint64_t (*)(uint64_t))sub_1D7ABB0A4);
      }
      ++v13;
      if (v31 == v21)
      {
        swift_bridgeObjectRelease();
        return v12;
      }
    }
    __break(1u);
LABEL_21:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return (_QWORD *)MEMORY[0x1E0DEE9D8];
}

id sub_1D7B0C354()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR___HKBalanceChartFormatter____lazy_storage___relativeStatFormatter;
  v2 = *(void **)&v0[OBJC_IVAR___HKBalanceChartFormatter____lazy_storage___relativeStatFormatter];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR___HKBalanceChartFormatter____lazy_storage___relativeStatFormatter];
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)HKInteractiveChartBaselineRelativeStatFormatter), sel_init);
    v5 = objc_msgSend(v0, sel_unitController);
    objc_msgSend(v4, sel_setUnitController_, v5);

    v6 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v4;
    v3 = v4;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

unint64_t sub_1D7B0C404()
{
  return sub_1D7B0C43C(&OBJC_IVAR___HKBalanceChartFormatter____lazy_storage___valueAttributes, (SEL *)&selRef_majorFont, (SEL *)&selRef_hk_chartLollipopValueColor);
}

unint64_t sub_1D7B0C420()
{
  return sub_1D7B0C43C(&OBJC_IVAR___HKBalanceChartFormatter____lazy_storage___unitAttributes, (SEL *)&selRef_minorFont, (SEL *)&selRef_hk_chartLollipopLabelColor);
}

unint64_t sub_1D7B0C43C(uint64_t *a1, SEL *a2, SEL *a3)
{
  char *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v4 = *a1;
  v5 = *(_QWORD *)&v3[*a1];
  if (v5)
  {
    v6 = v5;
  }
  else
  {
    v6 = sub_1D7B0C49C(v3, a2, a3);
    *(_QWORD *)&v3[v4] = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v6;
}

unint64_t sub_1D7B0C49C(void *a1, SEL *a2, SEL *a3)
{
  uint64_t inited;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  id v14;

  sub_1D7AA787C(0, (unint64_t *)&qword_1F014DC20, (uint64_t (*)(uint64_t))sub_1D7AC5B04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D7B82CE0;
  v7 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v8 = v7;
  v9 = objc_msgSend(a1, *a2);
  if (!v9)
    v9 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  v10 = sub_1D7AAF6EC(0, (unint64_t *)&qword_1F014DC30);
  *(_QWORD *)(inited + 40) = v9;
  v11 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v10;
  *(_QWORD *)(inited + 72) = v11;
  v12 = (void *)objc_opt_self();
  v13 = v11;
  v14 = objc_msgSend(v12, *a3);
  *(_QWORD *)(inited + 104) = sub_1D7AAF6EC(0, &qword_1F014E8C0);
  *(_QWORD *)(inited + 80) = v14;
  return sub_1D7ADFFC8(inited);
}

unint64_t sub_1D7B0C5F0(unint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t result;
  id v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  _BYTE v22[16];

  sub_1D7AA787C(0, &qword_1F014F610, type metadata accessor for BalanceCoordinateInfo.Context, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v10 = &v22[-v9];
  v11 = sub_1D7AE2690(a1);
  if (!v11)
    return MEMORY[0x1E0DEE9D8];
  v12 = v11;
  if (!(a1 >> 62))
  {
    if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_4;
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  v17 = sub_1D7B4A8A8();
  swift_bridgeObjectRelease();
  if (!v17)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
LABEL_4:
  if (!(v12 >> 62))
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v13)
      goto LABEL_6;
LABEL_16:
    swift_bridgeObjectRelease();
    v19 = type metadata accessor for BalanceCoordinateInfo.Context(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v10, 1, 1, v19);
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  v13 = sub_1D7B4A8A8();
  if (!v13)
    goto LABEL_16;
LABEL_6:
  result = v13 - 1;
  if (__OFSUB__(v13, 1))
  {
    __break(1u);
    goto LABEL_23;
  }
  if ((v12 & 0xC000000000000001) != 0)
  {
LABEL_23:
    v21 = MEMORY[0x1D829E758](result, v12);
    swift_bridgeObjectRelease();
    sub_1D7ACDA54(v21 + OBJC_IVAR____TtC8HealthUI21BalanceCoordinateInfo_context, (uint64_t)v10);
    swift_unknownObjectRelease();
    goto LABEL_11;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    v15 = *(id *)(v12 + 8 * result + 32);
    swift_bridgeObjectRelease();
    sub_1D7ACDA54((uint64_t)v15 + OBJC_IVAR____TtC8HealthUI21BalanceCoordinateInfo_context, (uint64_t)v10);

LABEL_11:
    v16 = type metadata accessor for BalanceCoordinateInfo.Context(0);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v10, 0, 1, v16);
LABEL_17:
    sub_1D7B0C8A8((uint64_t)v10, (uint64_t)v8, &qword_1F014F610, type metadata accessor for BalanceCoordinateInfo.Context);
    if (sub_1D7B0E96C(a2, (uint64_t)v8))
    {
      v18 = sub_1D7B0C99C(v12, a2);
      swift_bridgeObjectRelease();
    }
    else
    {
      v20 = v2;
      v18 = sub_1D7B0E7D4(v12, (uint64_t)v20);
      swift_bridgeObjectRelease();

    }
    sub_1D7B0EDDC((uint64_t)v10, &qword_1F014F610, type metadata accessor for BalanceCoordinateInfo.Context);
    return v18;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D7B0C8A8(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;

  sub_1D7AA787C(0, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

unint64_t sub_1D7B0C99C(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t result;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  char *v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  void (*v58)(char *, char *, uint64_t);
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD v65[2];
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v68 = a2;
  v66 = sub_1D7B495C4();
  v4 = *(_QWORD *)(v66 - 8);
  v5 = MEMORY[0x1E0C80A78](v66);
  v69 = (char *)v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v65 - v7;
  v9 = sub_1D7B49504();
  v70 = *(_QWORD *)(v9 - 8);
  v71 = v9;
  MEMORY[0x1E0C80A78](v9);
  v67 = (char *)v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D7AA787C(0, (unint64_t *)&qword_1F014DFD0, v11, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)v65 - v16;
  v18 = type metadata accessor for BalanceCoordinateInfo.Context(0);
  v19 = MEMORY[0x1E0C80A78](v18);
  v21 = (char *)v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v72 = (uint64_t)v65 - v22;
  v23 = sub_1D7B0EE20(a1);
  if (!(a1 >> 62))
  {
    v24 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v24)
      goto LABEL_3;
LABEL_63:
    swift_bridgeObjectRelease();
    goto LABEL_64;
  }
  swift_bridgeObjectRetain();
  v24 = sub_1D7B4A8A8();
  if (!v24)
    goto LABEL_63;
LABEL_3:
  result = v24 - 1;
  if (__OFSUB__(v24, 1))
  {
    __break(1u);
    goto LABEL_68;
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_68:
    v26 = (id)MEMORY[0x1D829E758](result, a1);
    goto LABEL_8;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v26 = *(id *)(a1 + 8 * result + 32);
LABEL_8:
    v27 = v26;
    swift_bridgeObjectRelease();
    sub_1D7ACDA54((uint64_t)v27 + OBJC_IVAR____TtC8HealthUI21BalanceCoordinateInfo_context, (uint64_t)v21);

    v28 = v72;
    sub_1D7B0EFE8((uint64_t)v21, v72);
    if (*(_QWORD *)(v23 + 16))
    {
      v65[1] = v2;
      swift_getKeyPath();
      v29 = *(_QWORD *)(v23 + 16);
      if (v29)
      {
        v30 = (_QWORD *)(v23 + 32);
        swift_bridgeObjectRetain();
        v31 = v23 + 32;
        while (1)
        {
          swift_getAtKeyPath();
          if (v73 != 1)
            break;
          v31 += 40;
          if (!--v29)
          {
            swift_release();
            swift_bridgeObjectRelease();
            goto LABEL_16;
          }
        }
        swift_release();
        swift_bridgeObjectRelease();
        v34 = *(_QWORD *)(v23 + 16);
        if (v34)
        {
          swift_bridgeObjectRetain();
          v35 = (_QWORD *)(v23 + 32);
          while (1)
          {
            __swift_project_boxed_opaque_existential_0(v35, v35[3]);
            if ((sub_1D7B348E4() & 1) != 0)
              break;
            v35 += 5;
            if (!--v34)
            {
              swift_bridgeObjectRelease();
              goto LABEL_28;
            }
          }
          swift_bridgeObjectRelease();
          v39 = v72;
          sub_1D7B0C8A8(v72, (uint64_t)v15, (unint64_t *)&qword_1F014DFD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D28FE0]);
          v41 = v70;
          v40 = v71;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v15, 1, v71) == 1)
          {
            sub_1D7B0EDDC((uint64_t)v15, (unint64_t *)&qword_1F014DFD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D28FE0]);
          }
          else
          {
            v42 = v67;
            (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v67, v15, v40);
            if (*(_BYTE *)(v39 + *(int *)(v18 + 20)))
            {
              v73 = MEMORY[0x1E0DEE9D8];
              v43 = *(_QWORD *)(v23 + 16);
              if (v43)
              {
                swift_bridgeObjectRetain();
                v44 = v66;
                do
                {
                  __swift_project_boxed_opaque_existential_0(v30, v30[3]);
                  v45 = sub_1D7B4960C();
                  sub_1D7AE7E10(v45);
                  v30 += 5;
                  --v43;
                }
                while (v43);
                result = swift_bridgeObjectRelease_n();
                v46 = v73;
              }
              else
              {
                result = swift_bridgeObjectRelease();
                v46 = MEMORY[0x1E0DEE9D8];
                v44 = v66;
              }
              v53 = MEMORY[0x1E0DEE9D8];
              v73 = MEMORY[0x1E0DEE9D8];
              v54 = v67;
              v68 = *(_QWORD *)(v46 + 16);
              if (v68)
              {
                v55 = 0;
                while (v55 < *(_QWORD *)(v46 + 16))
                {
                  v56 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
                  v57 = *(_QWORD *)(v4 + 72);
                  (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v8, v46 + v56 + v57 * v55, v44);
                  if ((sub_1D7B49564() & 1) != 0)
                  {
                    v58 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
                    v58(v69, v8, v44);
                    v59 = v73;
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                    {
                      sub_1D7AA602C(0, *(_QWORD *)(v59 + 16) + 1, 1);
                      v59 = v73;
                    }
                    v61 = *(_QWORD *)(v59 + 16);
                    v60 = *(_QWORD *)(v59 + 24);
                    if (v61 >= v60 >> 1)
                    {
                      sub_1D7AA602C(v60 > 1, v61 + 1, 1);
                      v59 = v73;
                    }
                    *(_QWORD *)(v59 + 16) = v61 + 1;
                    v62 = v59 + v56 + v61 * v57;
                    v44 = v66;
                    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v58)(v62, v69, v66);
                    v73 = v59;
                    v54 = v67;
                  }
                  else
                  {
                    result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v8, v44);
                  }
                  if (v68 == ++v55)
                  {
                    v53 = v73;
                    goto LABEL_61;
                  }
                }
                goto LABEL_72;
              }
LABEL_61:
              swift_bridgeObjectRelease();
              v63 = *(_QWORD *)(v53 + 16);
              swift_release();
              sub_1D7ABB0F8(0, (unint64_t *)&qword_1F01493B0);
              v64 = swift_allocObject();
              *(_OWORD *)(v64 + 16) = xmmword_1D7B83E30;
              *(_QWORD *)(v64 + 32) = sub_1D7B0D9DC(v63);
              v73 = v64;
              sub_1D7B4A4B8();
              v38 = v73;
              sub_1D7AAD1B0(v72, type metadata accessor for BalanceCoordinateInfo.Context);
              (*(void (**)(char *, uint64_t))(v70 + 8))(v54, v71);
              return v38;
            }
            (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v40);
          }
          v47 = sub_1D7B0BF10(v23);
          result = swift_bridgeObjectRelease();
          v48 = *(_QWORD *)(v47 + 16);
          if (v48)
          {
            v49 = 0;
            v50 = (uint64_t *)(v47 + 32);
            while (1)
            {
              v51 = *v50++;
              v52 = __OFADD__(v49, v51);
              v49 += v51;
              if (v52)
                goto LABEL_71;
              if (!--v48)
                goto LABEL_47;
            }
          }
          v49 = 0;
LABEL_47:
          swift_bridgeObjectRelease();
          sub_1D7ABB0F8(0, (unint64_t *)&qword_1F01493B0);
          v36 = swift_allocObject();
          *(_OWORD *)(v36 + 16) = xmmword_1D7B83E30;
          *(_QWORD *)(v36 + 32) = sub_1D7B0D9DC(v49);
LABEL_32:
          v73 = v36;
          sub_1D7B4A4B8();
          v38 = v73;
          sub_1D7AAD1B0(v72, type metadata accessor for BalanceCoordinateInfo.Context);
          return v38;
        }
LABEL_28:
        swift_bridgeObjectRelease();
        goto LABEL_29;
      }
      swift_release();
LABEL_16:
      v32 = *(_QWORD *)(v23 + 16);
      if (v32)
      {
        v33 = (_QWORD *)(v23 + 32);
        swift_bridgeObjectRetain();
        while (1)
        {
          __swift_project_boxed_opaque_existential_0(v33, v33[3]);
          if ((sub_1D7B34864() & 1) != 0)
            break;
          v33 += 5;
          if (!--v32)
          {
            swift_bridgeObjectRelease();
            goto LABEL_21;
          }
        }
        swift_bridgeObjectRelease_n();
      }
      else
      {
LABEL_21:
        swift_bridgeObjectRelease();
        if (!v68)
        {
LABEL_29:
          sub_1D7AAD1B0(v72, type metadata accessor for BalanceCoordinateInfo.Context);
          return MEMORY[0x1E0DEE9D8];
        }
      }
      sub_1D7ABB0F8(0, (unint64_t *)&qword_1F01493B0);
      v36 = swift_allocObject();
      *(_OWORD *)(v36 + 16) = xmmword_1D7B83E30;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v70 + 56))(v17, 1, 1, v71);
      v37 = sub_1D7B0D614((uint64_t)v17);
      sub_1D7B0EDDC((uint64_t)v17, (unint64_t *)&qword_1F014DFD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D28FE0]);
      *(_QWORD *)(v36 + 32) = v37;
      goto LABEL_32;
    }
    sub_1D7AAD1B0(v28, type metadata accessor for BalanceCoordinateInfo.Context);
LABEL_64:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
  return result;
}

uint64_t sub_1D7B0D1BC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  unint64_t *v26;
  uint64_t (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t result;
  id v35;
  uint64_t v36;
  char *v37;
  void *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;

  v44 = a2;
  v48 = a3;
  v4 = sub_1D7B4951C();
  v42 = *(_QWORD *)(v4 - 8);
  v43 = v4;
  MEMORY[0x1E0C80A78](v4);
  v41 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1D7AA787C(0, (unint64_t *)&unk_1F014F658, (uint64_t (*)(uint64_t))MEMORY[0x1E0D290D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v39 - v8;
  v10 = sub_1D7B495C4();
  v46 = *(_QWORD *)(v10 - 8);
  v47 = v10;
  MEMORY[0x1E0C80A78](v10);
  v45 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D28FE0];
  sub_1D7AA787C(0, (unint64_t *)&qword_1F014DFD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D28FE0], v6);
  v14 = MEMORY[0x1E0C80A78](v13);
  v40 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v39 - v16;
  v18 = type metadata accessor for BalanceCoordinateInfo.Context(0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1D7B49504();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v39 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = *a1;
  sub_1D7ACDA54(v25 + OBJC_IVAR____TtC8HealthUI21BalanceCoordinateInfo_context, (uint64_t)v20);
  sub_1D7B0F080((uint64_t)v20, (uint64_t)v17, (unint64_t *)&qword_1F014DFD0, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v17, 1, v21) == 1)
  {
    v26 = (unint64_t *)&qword_1F014DFD0;
    v27 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D28FE0];
    v28 = (uint64_t)v17;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v24, v17, v21);
    __swift_project_boxed_opaque_existential_0((_QWORD *)(v25 + OBJC_IVAR____TtC8HealthUI21BalanceCoordinateInfo_collection), *(_QWORD *)(v25 + OBJC_IVAR____TtC8HealthUI21BalanceCoordinateInfo_collection + 24));
    v29 = sub_1D7B4960C();
    if (*(_QWORD *)(v29 + 16))
    {
      v31 = v46;
      v30 = v47;
      (*(void (**)(char *, unint64_t, uint64_t))(v46 + 16))(v9, v29 + ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80)), v47);
      v32 = 0;
    }
    else
    {
      v32 = 1;
      v31 = v46;
      v30 = v47;
    }
    v33 = v45;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56))(v9, v32, 1, v30);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v9, 1, v30) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v33, v9, v30);
      if ((sub_1D7B49558() & 1) != 0)
      {
        v36 = (uint64_t)v40;
        (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v40, v24, v21);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 56))(v36, 0, 1, v21);
        v35 = sub_1D7B0D614(v36);
        sub_1D7B0EDDC(v36, (unint64_t *)&qword_1F014DFD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D28FE0]);
      }
      else
      {
        v37 = v41;
        sub_1D7B495B8();
        v38 = (void *)sub_1D7B49510();
        (*(void (**)(char *, uint64_t))(v42 + 8))(v37, v43);
        if (!v38)
        {
          (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v30);
          result = (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v24, v21);
          goto LABEL_9;
        }
        v35 = sub_1D7B0DD28(v38, (uint64_t)v24);

      }
      (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v30);
      result = (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v24, v21);
      goto LABEL_15;
    }
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
    v26 = (unint64_t *)&unk_1F014F658;
    v27 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D290D0];
    v28 = (uint64_t)v9;
  }
  result = sub_1D7B0EDDC(v28, v26, v27);
LABEL_9:
  v35 = 0;
LABEL_15:
  *v48 = v35;
  return result;
}

id sub_1D7B0D614(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  int v14;
  uint64_t v15;
  id v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  _QWORD v22[2];

  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D28FE0];
  sub_1D7AA787C(0, (unint64_t *)&qword_1F014DFD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D28FE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v22 - v4;
  v6 = sub_1D7B49504();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v22 - v11;
  v13 = objc_msgSend(objc_allocWithZone((Class)HKSelectedRangeData), sel_initWithStatisticsType_, 0);
  sub_1D7B0C8A8(a1, (uint64_t)v5, (unint64_t *)&qword_1F014DFD0, v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1D7B0EDDC((uint64_t)v5, (unint64_t *)&qword_1F014DFD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D28FE0]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v5, v6);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
    v14 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v10, v6);
    if (v14 == *MEMORY[0x1E0D28FD8])
    {
      v15 = 34;
    }
    else if (v14 == *MEMORY[0x1E0D28FB8])
    {
      v15 = 35;
    }
    else if (v14 == *MEMORY[0x1E0D28FB0])
    {
      v15 = 33;
    }
    else if (v14 == *MEMORY[0x1E0D28FC0])
    {
      v15 = 37;
    }
    else if (v14 == *MEMORY[0x1E0D28FA8])
    {
      v15 = 36;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      v15 = 0;
    }
    objc_msgSend(v13, sel_setDataType_, v15);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  v22[0] = 0;
  v22[1] = 0xE000000000000000;
  sub_1D7B4A7DC();
  swift_bridgeObjectRelease();
  if (qword_1F014CF90 != -1)
    swift_once();
  v16 = (id)qword_1F0154598;
  sub_1D7B48F7C();

  sub_1D7B0C404();
  v17 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v18 = (void *)sub_1D7B4A38C();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1D7AA76D4((unint64_t *)&qword_1F014DC40, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1D7B833E4);
  v19 = (void *)sub_1D7B4A230();
  swift_bridgeObjectRelease();
  v20 = objc_msgSend(v17, sel_initWithString_attributes_, v18, v19);

  objc_msgSend(v13, sel_setAttributedString_, v20);
  return v13;
}

id sub_1D7B0D9DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;

  v2 = sub_1D7B4921C();
  MEMORY[0x1E0C80A78](v2);
  v3 = sub_1D7B4A380();
  MEMORY[0x1E0C80A78](v3);
  v4 = sub_1D7B4A368();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1D7B49588();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(objc_allocWithZone((Class)HKSelectedRangeData), sel_initWithStatisticsType_, 0);
  if (a1)
  {
    sub_1D7B4A35C();
    sub_1D7B4A350();
    v17 = a1;
    sub_1D7B4A338();
    sub_1D7B4A350();
    sub_1D7B4A374();
    v17 = 0;
    v18 = 0xE000000000000000;
    sub_1D7B4A7DC();
    swift_bridgeObjectRelease();
    if (qword_1F014CF90 != -1)
      swift_once();
    v10 = (id)qword_1F0154598;
    sub_1D7B49210();
    sub_1D7B4A3D4();
  }
  else
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0D29088], v5);
    sub_1D7B22DB8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  sub_1D7B0C404();
  v11 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v12 = (void *)sub_1D7B4A38C();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1D7AA76D4((unint64_t *)&qword_1F014DC40, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1D7B833E4);
  v13 = (void *)sub_1D7B4A230();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v11, sel_initWithString_attributes_, v12, v13);

  objc_msgSend(v9, sel_setAttributedString_, v14);
  return v9;
}

id sub_1D7B0DD28(void *a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  id result;
  void *v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t (*v28)(char *, uint64_t);
  int v29;
  int *v30;
  uint64_t v31;
  int v32;
  int v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  double v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  void *v47;
  void *v48;
  void *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  id v54;
  id v55;
  void *v56;
  id v57;
  void *v58;
  id v59;
  int v60;
  id v61;
  double v62;
  double v63;
  id v64;
  id v65;
  void *v66;
  id v67;
  id v68;
  id v69;
  id v70;
  double v71;
  double v72;
  int v73;
  _BOOL8 v77;
  void *v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;

  v3 = v2;
  v6 = sub_1D7B49504();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v80 - v12;
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v80 - v14;
  v16 = objc_msgSend(v3, sel_unitController);
  if (!v16)
    return 0;
  v17 = v16;
  v83 = a1;
  v18 = objc_msgSend(v16, sel_healthStore);

  if (!v18)
    return v18;
  v84 = v3;
  v19 = (void *)objc_opt_self();
  v85 = v18;
  result = objc_msgSend(v19, sel_sharedInstanceForHealthStore_, v18);
  if (result)
  {
    v21 = result;
    v22 = (void *)sub_1D7B494E0();
    v23 = objc_msgSend(v21, sel_displayTypeForObjectType_, v22);

    if (v23)
    {
      v24 = v23;
      v25 = objc_msgSend(v84, sel_unitController);
      v18 = v25;
      if (v25)
      {
        v26 = objc_msgSend(v25, sel_unitForChartingDisplayType_, v23);

        if (v26)
        {
          v81 = v26;
          v82 = v24;
          v18 = objc_msgSend(objc_allocWithZone((Class)HKSelectedRangeData), sel_initWithStatisticsType_, 0);
          v27 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
          v27(v15, a2, v6);
          v28 = *(uint64_t (**)(char *, uint64_t))(v7 + 88);
          v29 = v28(v15, v6);
          v30 = (int *)MEMORY[0x1E0D28FC0];
          LODWORD(v80) = *MEMORY[0x1E0D28FD8];
          if (v29 == (_DWORD)v80)
          {
            v31 = 34;
          }
          else if (v29 == *MEMORY[0x1E0D28FB8])
          {
            v31 = 35;
          }
          else if (v29 == *MEMORY[0x1E0D28FB0])
          {
            v31 = 33;
          }
          else if (v29 == *MEMORY[0x1E0D28FC0])
          {
            v31 = 37;
          }
          else if (v29 == *MEMORY[0x1E0D28FA8])
          {
            v31 = 36;
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v6);
            v31 = 0;
          }
          objc_msgSend(v18, sel_setDataType_, v31, v80);
          v27(v13, a2, v6);
          v32 = v28(v13, v6);
          v33 = *v30;
          if (v32 == *v30)
          {
            v34 = sub_1D7B0C354();
            objc_msgSend(v34, sel_setDisplayType_, v82);

            v35 = v83;
            objc_msgSend(v83, sel__value);
            v80 = (id)sub_1D7B494BC();
            v36 = sub_1D7B0C354();
            v37 = v81;
            objc_msgSend(v35, sel_doubleValueForUnit_, v81);
            v39 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v38);
            v40 = objc_msgSend(v36, sel_valueStringFromNumber_, v39);

            sub_1D7B4A3BC();
            sub_1D7B0C404();
            v41 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
            v42 = (void *)sub_1D7B4A38C();
            swift_bridgeObjectRelease();
            type metadata accessor for Key(0);
            sub_1D7AA76D4((unint64_t *)&qword_1F014DC40, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1D7B833E4);
            v43 = (void *)sub_1D7B4A230();
            swift_bridgeObjectRelease();
            v83 = objc_msgSend(v41, sel_initWithString_attributes_, v42, v43);

            v44 = sub_1D7B0C354();
            v45 = objc_msgSend(v44, sel_unitStringFromUnit_number_, v37, v80);

            sub_1D7B4A3BC();
            sub_1D7B0C420();
            v46 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
            v47 = (void *)sub_1D7B4A38C();
            swift_bridgeObjectRelease();
            v48 = v37;
            v49 = (void *)sub_1D7B4A230();
            swift_bridgeObjectRelease();
            v50 = objc_msgSend(v46, sel_initWithString_attributes_, v47, v49);

            sub_1D7ABB0F8(0, (unint64_t *)&qword_1F014CFC0);
            v51 = swift_allocObject();
            *(_OWORD *)(v51 + 16) = xmmword_1D7B82CE0;
            v52 = sub_1D7AAF6EC(0, (unint64_t *)&qword_1F014DC50);
            v53 = v83;
            *(_QWORD *)(v51 + 32) = v83;
            *(_QWORD *)(v51 + 88) = v52;
            *(_QWORD *)(v51 + 56) = v52;
            *(_QWORD *)(v51 + 64) = v50;
            v54 = v53;
            v55 = v50;
            v56 = (void *)sub_1D7B4A4A0();
            swift_bridgeObjectRelease();
            if (qword_1F014CF90 != -1)
              swift_once();
            v57 = (id)qword_1F0154598;
            sub_1D7B48F7C();

            v58 = (void *)sub_1D7B4A38C();
            swift_bridgeObjectRelease();
            v59 = HKUIJoinAttributedStringsWithFormat(v56, v58);

            objc_msgSend(v18, sel_setAttributedString_, v59);
          }
          else
          {
            v60 = *MEMORY[0x1E0D28FA8];
            if (v32 != *MEMORY[0x1E0D28FA8])
            {
              objc_msgSend(v84, sel_setDisplayType_, v82);
              objc_msgSend(v83, sel_doubleValueForUnit_, v81);
              v72 = v71;
              v27(v10, a2, v6);
              v73 = v28(v10, v6);
              v77 = v73 == (_DWORD)v80 || v73 == *MEMORY[0x1E0D28FB8] || v73 == *MEMORY[0x1E0D28FB0] || v73 == v33;
              if (v73 != v60 && !v77)
                (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
              v78 = v81;
              v79 = objc_msgSend(v84, sel_attributedStringWithValue_unit_showUnit_, v81, v77, v72);
              objc_msgSend(v18, sel_setAttributedString_, v79);

              (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
              return v18;
            }
            v61 = objc_msgSend((id)objc_opt_self(), sel_secondUnit);
            objc_msgSend(v83, sel_doubleValueForUnit_, v61);
            v63 = v62;

            v64 = v84;
            v65 = objc_msgSend(v84, sel_majorFont);
            if (!v65)
              v65 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
            v66 = v81;
            v67 = objc_msgSend(v64, sel_minorFont);
            if (!v67)
              v67 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
            v68 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v63);
            v69 = HKTimePeriodStringWithFonts(v65, v67, v68, 0x1CuLL);

            objc_msgSend(v18, sel_setAttributedString_, v69);
            v70 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v63);
            objc_msgSend(v18, sel_setValueAsNumber_, v70);

          }
        }
        else
        {

          return 0;
        }
      }
      else
      {

      }
    }
    else
    {

      return 0;
    }
    return v18;
  }
  __break(1u);
  return result;
}

id BalanceChartFormatter.init()()
{
  char *v0;
  objc_super v2;

  *(_QWORD *)&v0[OBJC_IVAR___HKBalanceChartFormatter____lazy_storage___relativeStatFormatter] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___HKBalanceChartFormatter____lazy_storage___valueAttributes] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___HKBalanceChartFormatter____lazy_storage___unitAttributes] = 0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BalanceChartFormatter();
  return objc_msgSendSuper2(&v2, sel_init);
}

id BalanceChartFormatter.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BalanceChartFormatter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D7B0E7D4(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t i;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v11;
  id v12;
  uint64_t v13;

  v13 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_17;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; v4 = sub_1D7B4A8A8())
  {
    for (i = 4; ; ++i)
    {
      v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1D829E758](i - 4, a1) : *(id *)(a1 + 8 * i);
      v7 = v6;
      v8 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v12 = v6;
      sub_1D7B0D1BC((uint64_t *)&v12, a2, &v11);
      if (v2)
      {
        swift_bridgeObjectRelease();

        return swift_bridgeObjectRelease();
      }

      if (v11)
      {
        MEMORY[0x1D829E3EC]();
        if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1D7B4A4C4();
        sub_1D7B4A4DC();
        sub_1D7B4A4B8();
      }
      if (v8 == v4)
      {
        swift_bridgeObjectRelease();
        return v13;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

BOOL sub_1D7B0E96C(uint64_t a1, uint64_t a2)
{
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  _BOOL4 v27;
  uint64_t v28;
  int v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;

  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1D7AA787C(0, (unint64_t *)&qword_1F014DFD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D28FE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v40 = (uint64_t)&v37 - v6;
  sub_1D7AA787C(0, &qword_1F014F610, type metadata accessor for BalanceCoordinateInfo.Context, v4);
  v8 = MEMORY[0x1E0C80A78](v7);
  v39 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v37 - v11;
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v37 - v14;
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v37 - v17;
  v19 = MEMORY[0x1E0C80A78](v16);
  v21 = (char *)&v37 - v20;
  MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v37 - v22;
  v24 = a2;
  sub_1D7B0C8A8(a2, (uint64_t)&v37 - v22, &qword_1F014F610, type metadata accessor for BalanceCoordinateInfo.Context);
  v25 = type metadata accessor for BalanceCoordinateInfo.Context(0);
  v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48);
  if (v26(v23, 1, v25) == 1)
  {
    sub_1D7B0EDDC((uint64_t)v23, &qword_1F014F610, type metadata accessor for BalanceCoordinateInfo.Context);
    v27 = 0;
  }
  else
  {
    v28 = *(int *)(v25 + 20);
    v38 = v25;
    v29 = v23[v28];
    sub_1D7AAD1B0((uint64_t)v23, type metadata accessor for BalanceCoordinateInfo.Context);
    v25 = v38;
    v27 = v29 == 0;
  }
  sub_1D7B0F080(v24, (uint64_t)v21, &qword_1F014F610, type metadata accessor for BalanceCoordinateInfo.Context);
  if (a1)
  {
    v12 = v21;
LABEL_6:
    sub_1D7B0EDDC((uint64_t)v12, &qword_1F014F610, type metadata accessor for BalanceCoordinateInfo.Context);
    return 1;
  }
  sub_1D7B0F080((uint64_t)v21, (uint64_t)v18, &qword_1F014F610, type metadata accessor for BalanceCoordinateInfo.Context);
  if (v27)
  {
    sub_1D7B0EDDC((uint64_t)v18, &qword_1F014F610, type metadata accessor for BalanceCoordinateInfo.Context);
    return 0;
  }
  sub_1D7B0C8A8((uint64_t)v18, (uint64_t)v15, &qword_1F014F610, type metadata accessor for BalanceCoordinateInfo.Context);
  if (v26(v15, 1, v25) == 1)
  {
    sub_1D7B0EDDC((uint64_t)v15, &qword_1F014F610, type metadata accessor for BalanceCoordinateInfo.Context);
    v31 = sub_1D7B49504();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v40, 1, 1, v31);
LABEL_14:
    sub_1D7B0EDDC(v40, (unint64_t *)&qword_1F014DFD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D28FE0]);
    sub_1D7B0F080((uint64_t)v18, (uint64_t)v12, &qword_1F014F610, type metadata accessor for BalanceCoordinateInfo.Context);
    goto LABEL_6;
  }
  v32 = v40;
  sub_1D7B0C8A8((uint64_t)v15, v40, (unint64_t *)&qword_1F014DFD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D28FE0]);
  sub_1D7AAD1B0((uint64_t)v15, type metadata accessor for BalanceCoordinateInfo.Context);
  v33 = sub_1D7B49504();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v32, 1, v33) == 1)
    goto LABEL_14;
  sub_1D7B0EDDC(v40, (unint64_t *)&qword_1F014DFD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D28FE0]);
  sub_1D7B0F080((uint64_t)v18, (uint64_t)v12, &qword_1F014F610, type metadata accessor for BalanceCoordinateInfo.Context);
  v34 = (uint64_t)v12;
  v35 = (uint64_t)v39;
  sub_1D7B0F080(v34, (uint64_t)v39, &qword_1F014F610, type metadata accessor for BalanceCoordinateInfo.Context);
  if (v26((char *)v35, 1, v25) == 1)
  {
    v12 = v39;
    goto LABEL_6;
  }
  v36 = v39[*(int *)(v25 + 20)];
  sub_1D7AAD1B0((uint64_t)v39, type metadata accessor for BalanceCoordinateInfo.Context);
  return v36 != 1;
}

uint64_t type metadata accessor for BalanceChartFormatter()
{
  return objc_opt_self();
}

uint64_t method lookup function for BalanceChartFormatter()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1D7B0EDDC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;

  sub_1D7AA787C(0, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1D7B0EE20(unint64_t a1)
{
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  unint64_t v10;
  unint64_t v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = MEMORY[0x1E0DEE9E8];
  result = (uint64_t)sub_1D7B0C044(a1, &v17);
  v2 = result;
  v3 = MEMORY[0x1E0DEE9D8];
  v16 = MEMORY[0x1E0DEE9D8];
  v4 = *(_QWORD *)(result + 16);
  if (!v4)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v3;
  }
  v5 = 0;
  v6 = result + 32;
  v7 = MEMORY[0x1E0DEE9D8];
  while (v5 < *(_QWORD *)(v2 + 16))
  {
    sub_1D7AC0938(v6, (uint64_t)&v14);
    __swift_project_boxed_opaque_existential_0(&v14, v15);
    v8 = sub_1D7B4963C();
    sub_1D7AC0938((uint64_t)&v14, (uint64_t)&v12);
    if ((v8 & 1) != 0)
    {
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v12);
LABEL_9:
      sub_1D7AE9B70(&v14, (uint64_t)&v12);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_1D7AA6084(0, *(_QWORD *)(v7 + 16) + 1, 1);
      v7 = v16;
      v11 = *(_QWORD *)(v16 + 16);
      v10 = *(_QWORD *)(v16 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_1D7AA6084(v10 > 1, v11 + 1, 1);
        v7 = v16;
      }
      *(_QWORD *)(v7 + 16) = v11 + 1;
      result = sub_1D7AE9B70(&v12, v7 + 40 * v11 + 32);
      goto LABEL_4;
    }
    __swift_project_boxed_opaque_existential_0(&v12, v13);
    v9 = sub_1D7B348E4();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v12);
    if ((v9 & 1) != 0)
      goto LABEL_9;
    result = __swift_destroy_boxed_opaque_existential_0((uint64_t)&v14);
LABEL_4:
    ++v5;
    v6 += 40;
    if (v4 == v5)
    {
      v3 = v16;
      goto LABEL_15;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1D7B0EFE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BalanceCoordinateInfo.Context(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D7B0F02C(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8);
}

uint64_t sub_1D7B0F034@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  result = sub_1D7B4963C();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1D7B0F080(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;

  sub_1D7AA787C(0, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1D7B0F0D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D7B0F24C(a1, a2, a3, &qword_1F014F698);
}

uint64_t sub_1D7B0F0EC(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, &qword_1F014F698);
}

void sub_1D7B0F100()
{
  sub_1D7ACCFEC();
  sub_1D7B4900C();
  __break(1u);
}

void sub_1D7B0F124()
{
  sub_1D7B48E80();
  __break(1u);
}

uint64_t sub_1D7B0F13C()
{
  sub_1D7B0FD64();
  return sub_1D7B4A320() & 1;
}

uint64_t sub_1D7B0F190()
{
  sub_1D7B0FD64();
  return sub_1D7B4A2B4();
}

uint64_t sub_1D7B0F1D0()
{
  sub_1D7AA76D4(&qword_1F014DFB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAECD8], MEMORY[0x1E0CAECD0]);
  return sub_1D7B49000();
}

uint64_t sub_1D7B0F218()
{
  return sub_1D7B48E2C();
}

uint64_t sub_1D7B0F238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D7B0F24C(a1, a2, a3, &qword_1F014F690);
}

uint64_t sub_1D7B0F24C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4)
{
  sub_1D7B0FDC8(0, a4);
  return sub_1D7B4A320() & 1;
}

uint64_t sub_1D7B0F2A8(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, &qword_1F014F690);
}

uint64_t keypath_hashTm(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  sub_1D7B0FDC8(0, a3);
  return sub_1D7B4A2B4();
}

void sub_1D7B0F304()
{
  sub_1D7ACD070();
  sub_1D7B4900C();
  __break(1u);
}

void sub_1D7B0F328()
{
  sub_1D7B48E74();
  __break(1u);
}

uint64_t static HKMCPregnancyDatesFactory.gestationalAgeAttributedString(startDate:startDateTimeZone:asOfDate:unitFont:unitColor:digitFont:digitColor:)@<X0>(void *a1@<X4>, void *a2@<X5>, void *a3@<X6>, void *a4@<X7>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t KeyPath;
  void *v24;
  id v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  id v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  void *v67;
  char *v68;
  uint64_t v69;
  id v70;

  v55 = a3;
  v56 = a4;
  v66 = a1;
  v67 = a2;
  v69 = a5;
  v5 = sub_1D7B48DF0();
  v64 = *(_QWORD *)(v5 - 8);
  v65 = v5;
  MEMORY[0x1E0C80A78](v5);
  v63 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D7B0FAB4();
  v61 = *(_QWORD *)(v7 - 8);
  v62 = v7;
  MEMORY[0x1E0C80A78](v7);
  v60 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D7B0FB2C();
  v53 = *(_QWORD *)(v9 - 8);
  v54 = v9;
  MEMORY[0x1E0C80A78](v9);
  v52 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1D7B48FD0();
  v58 = *(_QWORD *)(v11 - 8);
  v59 = v11;
  v12 = MEMORY[0x1E0C80A78](v11);
  v57 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v68 = (char *)&v45 - v14;
  v51 = sub_1D7B4A9E0();
  v50 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v49 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_1D7B4AA58();
  v47 = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48);
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_1D7B4AA64();
  v18 = *(_QWORD *)(v46 - 8);
  MEMORY[0x1E0C80A78](v46);
  v20 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D7B4A6B0();
  sub_1D7B4AA40();
  sub_1D7B4A6A4();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v17, v48);
  v21 = v49;
  sub_1D7B4A9EC();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v46);
  sub_1D7AA76D4(&qword_1F014F680, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB27A0], MEMORY[0x1E0CB2798]);
  v22 = v51;
  sub_1D7B4AA70();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v21, v22);
  KeyPath = swift_getKeyPath();
  *(&v45 - 2) = MEMORY[0x1E0C80A78](KeyPath);
  swift_getKeyPath();
  v24 = v66;
  v70 = v66;
  sub_1D7ACCFEC();
  v25 = v24;
  sub_1D7B48EBC();
  v26 = swift_getKeyPath();
  *(&v45 - 2) = MEMORY[0x1E0C80A78](v26);
  swift_getKeyPath();
  v27 = v67;
  v70 = v67;
  sub_1D7ACD070();
  v28 = v27;
  sub_1D7B48EBC();
  v29 = swift_getKeyPath();
  *(&v45 - 2) = MEMORY[0x1E0C80A78](v29);
  swift_getKeyPath();
  v30 = v52;
  sub_1D7B48FA0();
  swift_release();
  v31 = v54;
  v70 = v55;
  v32 = v68;
  sub_1D7B48FAC();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v30, v31);
  v33 = swift_getKeyPath();
  *(&v45 - 2) = MEMORY[0x1E0C80A78](v33);
  swift_getKeyPath();
  v70 = v56;
  v34 = v56;
  sub_1D7B48F88();
  v35 = swift_getKeyPath();
  *(&v45 - 2) = MEMORY[0x1E0C80A78](v35);
  swift_getKeyPath();
  sub_1D7AA76D4(&qword_1F014DFB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAECD8], MEMORY[0x1E0CAECD0]);
  v36 = v60;
  sub_1D7B48FA0();
  swift_release();
  v38 = v63;
  v37 = v64;
  v39 = v65;
  (*(void (**)(char *, _QWORD, uint64_t))(v64 + 104))(v63, *MEMORY[0x1E0CAECB0], v65);
  v40 = v57;
  v41 = v62;
  sub_1D7B48FAC();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v38, v39);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v36, v41);
  sub_1D7B48ED4();
  v42 = v59;
  v43 = *(void (**)(char *, uint64_t))(v58 + 8);
  v43(v40, v59);
  return ((uint64_t (*)(char *, uint64_t))v43)(v32, v42);
}

void sub_1D7B0FAB4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F014F670)
  {
    sub_1D7B48DFC();
    sub_1D7AA76D4(&qword_1F014DFB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAECD8], MEMORY[0x1E0CAECD0]);
    v0 = sub_1D7B48FB8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F014F670);
  }
}

void sub_1D7B0FB2C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F014F678)
  {
    sub_1D7ACCFEC();
    v0 = sub_1D7B48FB8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F014F678);
  }
}

void sub_1D7B0FB84()
{
  sub_1D7B48E80();
  __break(1u);
}

void sub_1D7B0FB9C()
{
  sub_1D7ACCFEC();
  sub_1D7B4900C();
  __break(1u);
}

uint64_t sub_1D7B0FBC0()
{
  return 8;
}

uint64_t sub_1D7B0FBCC()
{
  return swift_release();
}

uint64_t sub_1D7B0FBD4(_QWORD *a1, _QWORD *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_1D7B0FBE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D7B0F24C(a1, a2, a3, &qword_1F014F698) & 1;
}

uint64_t sub_1D7B0FC08(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, &qword_1F014F698);
}

_QWORD *sub_1D7B0FC1C(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

void sub_1D7B0FC28()
{
  sub_1D7B48E74();
  __break(1u);
}

void sub_1D7B0FC40()
{
  sub_1D7ACD070();
  sub_1D7B4900C();
  __break(1u);
}

uint64_t sub_1D7B0FC64()
{
  return 8;
}

uint64_t sub_1D7B0FC70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D7B0F24C(a1, a2, a3, &qword_1F014F690) & 1;
}

uint64_t sub_1D7B0FC98(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, &qword_1F014F690);
}

uint64_t sub_1D7B0FCAC()
{
  return sub_1D7B48E2C();
}

uint64_t sub_1D7B0FCCC()
{
  sub_1D7AA76D4(&qword_1F014DFB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAECD8], MEMORY[0x1E0CAECD0]);
  return sub_1D7B49000();
}

uint64_t sub_1D7B0FD14()
{
  return 8;
}

uint64_t sub_1D7B0FD24()
{
  sub_1D7B0FD64();
  return sub_1D7B4A2B4();
}

void sub_1D7B0FD64()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F014F688)
  {
    sub_1D7B48E5C();
    sub_1D7B48DFC();
    v0 = sub_1D7B4A9A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F014F688);
  }
}

void sub_1D7B0FDC8(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    sub_1D7B48E8C();
    v3 = sub_1D7B4A9A4();
    if (!v4)
      atomic_store(v3, a2);
  }
}

id static BalanceOverlayRoomViewController.createInteractiveChartViewController(forTypeIdentifier:chartFactory:applicationItems:display:preferredOverlay:restorationUserActivity:trendModel:factorDisplayTypes:additionalChartOptions:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  uint64_t v19;

  v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  sub_1D7AA787C(0, (unint64_t *)&qword_1F014D000, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v19 - v15;
  type metadata accessor for BalanceOverlayRoomViewController();
  sub_1D7B0C8A8(a5, (uint64_t)v16, (unint64_t *)&qword_1F014D000, v13);
  swift_bridgeObjectRetain();
  v17 = BalanceOverlayRoomViewController.__allocating_init(displayDate:applicationItems:factorDisplayTypes:mode:)((uint64_t)v16, a4, a9, 1);
  objc_msgSend(v17, sel_setRestorationUserActivity_, a7);
  objc_msgSend(v17, sel_setAdditionalChartOptions_, a10);
  return v17;
}

uint64_t type metadata accessor for BalanceOverlayRoomViewController()
{
  uint64_t result;

  result = qword_1F014F6E8;
  if (!qword_1F014F6E8)
    return swift_getSingletonMetadata();
  return result;
}

id BalanceOverlayRoomViewController.__allocating_init(displayDate:applicationItems:factorDisplayTypes:mode:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  objc_class *v4;
  objc_class *v5;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;

  v5 = v4;
  v10 = sub_1D7B49198();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a1, 1, v10) != 1)
  {
    v12 = (void *)sub_1D7B49150();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
  }
  if (a3)
  {
    sub_1D7AAF6EC(0, &qword_1F014D670);
    v13 = (void *)sub_1D7B4A4A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = 0;
  }
  v14 = objc_msgSend(objc_allocWithZone(v5), sel_initWithDisplayDate_applicationItems_factorDisplayTypes_mode_, v12, a2, v13, a4);

  return v14;
}

id BalanceOverlayRoomViewController.init(displayDate:applicationItems:factorDisplayTypes:mode:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v5;

  v5 = sub_1D7B130C4(a1, a2, a3, a4);

  return v5;
}

id sub_1D7B1055C(uint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  void *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  id v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;

  v4 = v3;
  v33 = a3;
  swift_getObjectType();
  sub_1D7AA787C(0, (unint64_t *)&qword_1F014D000, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v28 - v8;
  v10 = sub_1D7B4969C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D7B4966C();
  v14 = sub_1D7B49684();
  v15 = sub_1D7B4A620();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    v30 = v11;
    v17 = v16;
    v18 = swift_slowAlloc();
    v32 = v9;
    v19 = v18;
    v35 = v18;
    *(_DWORD *)v17 = 136446466;
    v31 = a1;
    v20 = sub_1D7B4AA94();
    v34 = sub_1D7AA4DE4(v20, v21, &v35);
    v29 = v10;
    a1 = v31;
    sub_1D7B4A704();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2048;
    v34 = a1;
    sub_1D7B4A704();
    _os_log_impl(&dword_1D7813000, v14, v15, "[%{public}s] creating view controller for mode: %ld", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    v22 = v19;
    v9 = v32;
    MEMORY[0x1D829FFF4](v22, -1, -1);
    MEMORY[0x1D829FFF4](v17, -1, -1);

    (*(void (**)(char *, uint64_t))(v30 + 8))(v13, v29);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  sub_1D7B0C8A8(a2, (uint64_t)v9, (unint64_t *)&qword_1F014D000, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v23 = objc_msgSend(v4, sel_factorDisplayTypes);
  if (v23)
  {
    v24 = v23;
    sub_1D7AAF6EC(0, &qword_1F014D670);
    v25 = sub_1D7B4A4AC();

  }
  else
  {
    v25 = 0;
  }
  type metadata accessor for BalanceOverlayRoomViewController();
  v26 = BalanceOverlayRoomViewController.__allocating_init(displayDate:applicationItems:factorDisplayTypes:mode:)((uint64_t)v9, v33, v25, a1);
  objc_msgSend(v26, sel_setAdditionalChartOptions_, objc_msgSend(v4, sel_filteredInteractiveChartOptionsForMode_, a1));

  return v26;
}

id sub_1D7B1099C()
{
  char *v0;
  char *v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id v10;
  void *v11;
  unint64_t v12;
  unint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v33;
  id v34;
  id v35;
  id v36;

  v1 = v0;
  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1D7AA787C(0, &qword_1F014D660, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11F0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v33 - v4;
  sub_1D7AA787C(0, (unint64_t *)&qword_1F014D000, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], v2);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v33 - v7;
  v9 = *(void **)&v1[OBJC_IVAR___HKBalanceOverlayRoomViewController_balanceDisplayType];
  v10 = objc_msgSend(v9, sel_baseDisplayType);
  if (!v10)
  {
    v12 = 0;
    goto LABEL_5;
  }
  v11 = v10;
  v12 = (unint64_t)objc_msgSend(v10, sel_hk_interactiveChartOptions);

  if ((v12 & 0x2000) == 0)
LABEL_5:
    v12 |= 0x2000uLL;
  v13 = (unint64_t)objc_msgSend(v1, sel_additionalChartOptions);
  v14 = objc_msgSend(v1, sel_applicationItems);
  v36 = objc_msgSend(v14, sel_healthStore);

  v35 = v9;
  v15 = objc_msgSend(v1, sel_applicationItems);
  v34 = objc_msgSend(v15, sel_unitController);

  v16 = objc_msgSend(v1, sel_applicationItems);
  v17 = objc_msgSend(v16, sel_dateCache);

  v18 = objc_msgSend(v1, sel_applicationItems);
  v19 = objc_msgSend(v18, sel_chartDataCacheController);

  v20 = objc_msgSend(v1, sel_applicationItems);
  v21 = objc_msgSend(v20, sel_timeScopeController);

  v22 = objc_msgSend(v1, sel_applicationItems);
  v23 = objc_msgSend(v22, sel_sampleDateRangeController);

  v24 = objc_msgSend(v1, sel_displayDate);
  if (v24)
  {
    v25 = v24;
    sub_1D7B49168();

    v26 = sub_1D7B49198();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v8, 0, 1, v26);
  }
  else
  {
    v27 = sub_1D7B49198();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v8, 1, 1, v27);
  }
  if ((v13 & ~v12) != 0)
    v28 = v13;
  else
    v28 = 0;
  v29 = v28 | v12;
  type metadata accessor for BalanceInteractiveChartViewController();
  v30 = sub_1D7B49300();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v5, 1, 1, v30);
  v31 = sub_1D7AB8A54(v36, v35, v34, v17, v19, v21, v23, (uint64_t)v8, (uint64_t)v5, v29);
  objc_msgSend(v31, sel_setCurrentValueViewDataSourceDelegate_, v1);
  objc_msgSend(v31, sel_setCurrentOverlayLocationProvider_, v1);
  return v31;
}

uint64_t sub_1D7B10D48(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;

  v3 = v2;
  v6 = objc_msgSend(v3, sel_chartController);
  if (!v6)
    return 0;
  v7 = v6;
  v8 = objc_msgSend(v6, sel_stringForValueRange_timeScope_, a1, a2);

  if (!v8)
    return 0;
  v9 = sub_1D7B4A3BC();

  return v9;
}

id sub_1D7B10F6C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  void *v3;
  void *v4;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  void *v22;
  _QWORD v24[4];

  v4 = v3;
  v6 = objc_msgSend(objc_allocWithZone((Class)HKModalNavigationController), sel_init);
  if (a3 >> 62)
  {
    sub_1D7ADE914(0, &qword_1F014F708);
    swift_bridgeObjectRetain();
    sub_1D7B4A89C();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1D7B4A944();
    sub_1D7ADE914(0, &qword_1F014F708);
  }
  v7 = objc_allocWithZone((Class)HKInfographicViewController);
  sub_1D7ADE914(0, &qword_1F014F708);
  v8 = (void *)sub_1D7B4A4A0();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v7, sel_initWithItems_, v8);

  v10 = v9;
  v11 = (void *)sub_1D7B4A38C();
  objc_msgSend(v10, sel_setTitle_, v11);

  v12 = objc_msgSend(v10, sel_navigationItem);
  v13 = (void *)sub_1D7B4A38C();
  v14 = HKUILocalizedString(v13);

  if (v14)
  {
    v15 = sub_1D7B4A3BC();
    v17 = v16;

  }
  else
  {
    v15 = 0;
    v17 = 0;
  }
  v24[3] = type metadata accessor for BalanceOverlayRoomViewController();
  v24[0] = v4;
  objc_allocWithZone(MEMORY[0x1E0DC34F0]);
  v18 = v4;
  v19 = sub_1D7B1223C(v15, v17, 2, v24, (uint64_t)sel_dismiss_);
  objc_msgSend(v12, sel_setRightBarButtonItem_, v19, v24[0]);

  sub_1D7AA7E70(0, (unint64_t *)&qword_1F01493B0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1D7B83E30;
  *(_QWORD *)(v20 + 32) = v10;
  v24[0] = v20;
  sub_1D7B4A4B8();
  sub_1D7AAF6EC(0, (unint64_t *)&unk_1F014F770);
  v21 = v10;
  v22 = (void *)sub_1D7B4A4A0();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setViewControllers_animated_, v22, 0);

  return v6;
}

uint64_t sub_1D7B11270(void *a1)
{
  void *v1;
  uint64_t v3;
  id v4;
  id v5;
  unint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void (*v22)(unint64_t, _QWORD, uint64_t);
  id v23;
  id v24;
  unint64_t v25;
  id v26;
  uint64_t v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  unint64_t v38;
  id v39;
  void *v40;
  char *v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  id v46;
  void *v47;
  id v48;
  id v49;
  void *v50;
  void *v51;
  id v52;
  id v53;
  void *v55;
  uint64_t v56;

  v56 = MEMORY[0x1E0DEE9D8];
  v3 = sub_1D7B494EC();
  v4 = v1;
  v5 = a1;
  v6 = sub_1D7B12690(v3, (uint64_t)v4, v5);
  swift_bridgeObjectRelease();

  sub_1D7B4A7DC();
  swift_bridgeObjectRelease();
  if (qword_1F014CF90 != -1)
    swift_once();
  v7 = (id)qword_1F0154598;
  sub_1D7B48F7C();

  sub_1D7AA7E70(0, (unint64_t *)&qword_1F01493B0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1D7B83E30;
  if (v6 >> 62)
  {
    sub_1D7ADE914(0, &qword_1F014F6F8);
    swift_bridgeObjectRetain();
    sub_1D7B4A89C();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1D7B4A944();
    sub_1D7ADE914(0, &qword_1F014F6F8);
  }
  swift_bridgeObjectRelease();
  v9 = objc_allocWithZone((Class)HKOverlayContextSection);
  sub_1D7ADE914(0, &qword_1F014F6F8);
  v10 = (void *)sub_1D7B4A4A0();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v9, sel_initWithSectionTitle_overlayContextItems_, 0, v10, 0xE000000000000000);

  *(_QWORD *)(v8 + 32) = v11;
  sub_1D7B4A4B8();
  v12 = objc_allocWithZone((Class)HKOverlayContextSectionContainer);
  v13 = (void *)sub_1D7B4A38C();
  swift_bridgeObjectRelease();
  sub_1D7AAF6EC(0, &qword_1F014F700);
  v14 = (void *)sub_1D7B4A4A0();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(v12, sel_initWithContainerTitle_overlayContextSections_, v13, v14);

  v16 = v15;
  MEMORY[0x1D829E3EC]();
  if (*(_QWORD *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1D7B4A4C4();
  v55 = v16;
  sub_1D7B4A4DC();
  sub_1D7B4A4B8();
  sub_1D7AA787C(0, (unint64_t *)&unk_1F014D208, (uint64_t (*)(uint64_t))MEMORY[0x1E0D29090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v17 = sub_1D7B49588();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 72);
  v20 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1D7B85700;
  v22 = *(void (**)(unint64_t, _QWORD, uint64_t))(v18 + 104);
  v22(v21 + v20, *MEMORY[0x1E0D29080], v17);
  v22(v21 + v20 + v19, *MEMORY[0x1E0D29088], v17);
  v22(v21 + v20 + 2 * v19, *MEMORY[0x1E0D29078], v17);
  v23 = v4;
  v24 = v5;
  v25 = sub_1D7B12914(v21, (uint64_t)v23, v24);

  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1D7B4A7DC();
  swift_bridgeObjectRelease();
  v26 = (id)qword_1F0154598;
  sub_1D7B48F7C();

  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1D7B83E30;
  swift_bridgeObjectRetain();
  if (v25 >> 62)
  {
    sub_1D7B4A89C();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D7B4A944();
  }
  swift_bridgeObjectRelease();
  v28 = objc_allocWithZone((Class)HKOverlayContextSection);
  v29 = (void *)sub_1D7B4A4A0();
  swift_bridgeObjectRelease();
  v30 = objc_msgSend(v28, sel_initWithSectionTitle_overlayContextItems_, 0, v29, 0xE000000000000000);

  *(_QWORD *)(v27 + 32) = v30;
  sub_1D7B4A4B8();
  v31 = objc_allocWithZone((Class)HKOverlayContextSectionContainer);
  v32 = (void *)sub_1D7B4A38C();
  swift_bridgeObjectRelease();
  v33 = (void *)sub_1D7B4A4A0();
  swift_bridgeObjectRelease();
  v34 = objc_msgSend(v31, sel_initWithContainerTitle_overlayContextSections_, v32, v33);

  v35 = v34;
  MEMORY[0x1D829E3EC]();
  if (*(_QWORD *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1D7B4A4C4();
  sub_1D7B4A4DC();
  sub_1D7B4A4B8();
  v36 = objc_msgSend(v23, sel_factorDisplayTypes);
  if (v36)
  {
    v37 = v36;
    sub_1D7AAF6EC(0, &qword_1F014D670);
    v38 = sub_1D7B4A4AC();

    v39 = objc_msgSend(v23, sel_chartController);
    if (!v39)
    {

      swift_bridgeObjectRelease();
      return v56;
    }
    v40 = v39;
    if ((objc_msgSend(v23, sel_healthFactorsEnabled) & 1) == 0)
    {

      swift_bridgeObjectRelease();
      return v56;
    }
    v41 = (char *)v23;
    v42 = v24;
    v43 = v40;
    sub_1D7B1236C(v38, (uint64_t)v43, (uint64_t)v42, v41);
    swift_bridgeObjectRelease();

    sub_1D7B4A7DC();
    swift_bridgeObjectRelease();
    v44 = (id)qword_1F0154598;
    sub_1D7B48F7C();

    v45 = swift_allocObject();
    *(_OWORD *)(v45 + 16) = xmmword_1D7B83E30;
    v46 = objc_allocWithZone((Class)HKOverlayContextSection);
    v47 = (void *)sub_1D7B4A4A0();
    swift_bridgeObjectRelease();
    v48 = objc_msgSend(v46, sel_initWithSectionTitle_overlayContextItems_, 0, v47, 0xE000000000000000);

    *(_QWORD *)(v45 + 32) = v48;
    sub_1D7B4A4B8();
    v49 = objc_allocWithZone((Class)HKOverlayContextSectionContainer);
    v50 = (void *)sub_1D7B4A38C();
    swift_bridgeObjectRelease();
    v51 = (void *)sub_1D7B4A4A0();
    swift_bridgeObjectRelease();
    v52 = objc_msgSend(v49, sel_initWithContainerTitle_overlayContextSections_, v50, v51);

    v53 = v52;
    MEMORY[0x1D829E3EC]();
    if (*(_QWORD *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1D7B4A4C4();
    sub_1D7B4A4DC();
    sub_1D7B4A4B8();

  }
  return v56;
}

uint64_t sub_1D7B11B90(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  id v12;
  char *v13;
  objc_class *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v32;
  uint64_t v33;
  objc_super v34;

  sub_1D7AA787C(0, (unint64_t *)&qword_1F014DD78, (uint64_t (*)(uint64_t))MEMORY[0x1E0D29090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v32 - v4;
  v6 = sub_1D7B49588();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(void **)(v1 + OBJC_IVAR___HKBalanceOverlayRoomViewController_balanceDisplayType);
  if (*(_BYTE *)(v1 + OBJC_IVAR___HKBalanceOverlayRoomViewController_isMostFrequentClassificationDetermined) == 1)
  {
    v11 = v1 + OBJC_IVAR___HKBalanceOverlayRoomViewController_mostFrequentClassification;
    swift_beginAccess();
    sub_1D7B0C8A8(v11, (uint64_t)v5, (unint64_t *)&qword_1F014DD78, (uint64_t (*)(uint64_t))MEMORY[0x1E0D29090]);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0D29088], v6);
      v12 = v10;
      sub_1D7B143C0((uint64_t)v5, (uint64_t)&qword_1F014DD78, (uint64_t)MEMORY[0x1E0D29090], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1D7AA787C);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
      v17 = v10;
    }
    v18 = objc_allocWithZone((Class)type metadata accessor for BalanceClassificationOverlayContext());
    v19 = a1;
    v16 = sub_1D7AFE1D0(v10, v19, v9, 1);

  }
  else
  {
    v13 = (char *)objc_allocWithZone((Class)type metadata accessor for BalanceMostFrequentClassificationOverlayContext());
    *(_QWORD *)&v13[OBJC_IVAR____TtC8HealthUI47BalanceMostFrequentClassificationOverlayContext_delegate + 8] = 0;
    *(_QWORD *)(swift_unknownObjectWeakInit() + 8) = &off_1E9C4A020;
    swift_unknownObjectWeakAssign();
    *(_QWORD *)&v13[OBJC_IVAR____TtC8HealthUI21BalanceOverlayContext_currentContextItem] = 0;
    *(_QWORD *)&v13[OBJC_IVAR____TtC8HealthUI21BalanceOverlayContext_baseDisplayType] = v10;
    *(_QWORD *)&v13[OBJC_IVAR____TtC8HealthUI21BalanceOverlayContext_overlayDisplayType] = v10;
    v14 = (objc_class *)type metadata accessor for BalanceOverlayContext();
    v34.receiver = v13;
    v34.super_class = v14;
    v15 = v10;
    v16 = objc_msgSendSuper2(&v34, sel_init);
  }
  sub_1D7AA7E70(0, (unint64_t *)&qword_1F01493B0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v20 = swift_allocObject();
  v32 = xmmword_1D7B83E30;
  *(_OWORD *)(v20 + 16) = xmmword_1D7B83E30;
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = v32;
  *(_QWORD *)(v21 + 32) = v16;
  v33 = v21;
  sub_1D7B4A4B8();
  v22 = objc_allocWithZone((Class)HKOverlayContextSection);
  sub_1D7ADE914(0, &qword_1F014F6F8);
  v23 = v16;
  v24 = (void *)sub_1D7B4A4A0();
  swift_bridgeObjectRelease();
  v25 = objc_msgSend(v22, sel_initWithSectionTitle_overlayContextItems_, 0, v24);

  *(_QWORD *)(v20 + 32) = v25;
  v33 = v20;
  sub_1D7B4A4B8();
  v26 = objc_allocWithZone((Class)HKOverlayContextSectionContainer);
  sub_1D7AAF6EC(0, &qword_1F014F700);
  v27 = (void *)sub_1D7B4A4A0();
  swift_bridgeObjectRelease();
  v28 = objc_msgSend(v26, sel_initWithContainerTitle_overlayContextSections_, 0, v27);

  v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = v32;
  *(_QWORD *)(v29 + 32) = v28;
  v33 = v29;
  sub_1D7B4A4B8();
  v30 = v33;

  return v30;
}

id sub_1D7B11F78()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint8_t *v13;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;

  v1 = v0;
  swift_getObjectType();
  v2 = sub_1D7B4969C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D7B4966C();
  v6 = sub_1D7B49684();
  v7 = sub_1D7B4A620();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v16 = v1;
    v9 = (uint8_t *)v8;
    v10 = swift_slowAlloc();
    v18 = v10;
    *(_DWORD *)v9 = 136446210;
    v11 = sub_1D7B4AA94();
    v17 = sub_1D7AA4DE4(v11, v12, &v18);
    sub_1D7B4A704();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D7813000, v6, v7, "[%{public}s] dismissing", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D829FFF4](v10, -1, -1);
    v13 = v9;
    v1 = v16;
    MEMORY[0x1D829FFF4](v13, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return objc_msgSend(v1, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

id BalanceOverlayRoomViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BalanceOverlayRoomViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1D7B1223C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5)
{
  void *v5;
  void *v6;
  void *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  uint64_t v19;

  v6 = v5;
  if (!a2)
  {
    v10 = 0;
    v11 = a4[3];
    if (v11)
      goto LABEL_3;
LABEL_5:
    v16 = 0;
    goto LABEL_6;
  }
  v10 = (void *)sub_1D7B4A38C();
  swift_bridgeObjectRelease();
  v11 = a4[3];
  if (!v11)
    goto LABEL_5;
LABEL_3:
  v12 = __swift_project_boxed_opaque_existential_0(a4, v11);
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v13 + 16))(v15);
  v16 = sub_1D7B4A92C();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v11);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a4);
LABEL_6:
  v17 = objc_msgSend(v6, sel_initWithTitle_style_target_action_, v10, a3, v16, a5);

  swift_unknownObjectRelease();
  return v17;
}

uint64_t sub_1D7B1236C(unint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  char *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  uint64_t v28;
  unsigned int v29;
  id v30;
  id v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v5 = v4;
  v38 = a2;
  v39 = a3;
  v8 = sub_1D7B49228();
  v36 = *(_QWORD *)(v8 - 8);
  v37 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1D7B49300();
  v34 = *(_QWORD *)(v11 - 8);
  v35 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
    goto LABEL_17;
  v14 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = MEMORY[0x1E0DEE9D8];
    if (!v14)
      break;
    v40 = MEMORY[0x1E0DEE9D8];
    result = sub_1D7B4A848();
    if (v14 < 0)
    {
      __break(1u);
      return result;
    }
    v28 = v5;
    v32 = a1 & 0xC000000000000001;
    v16 = (void *)objc_opt_self();
    v17 = 0;
    v30 = *(id *)&a4[OBJC_IVAR___HKBalanceOverlayRoomViewController_balanceDisplayType];
    v31 = v16;
    v29 = *MEMORY[0x1E0CB0EF8];
    v33 = a1;
    while (v14 != v17)
    {
      if (v32)
        v20 = (char *)MEMORY[0x1D829E758](v17, a1);
      else
        v20 = (char *)*(id *)(a1 + 8 * v17 + 32);
      a4 = v20;
      v21 = objc_msgSend(v20, sel_sampleType);
      v23 = v36;
      v22 = v37;
      (*(void (**)(char *, _QWORD, uint64_t))(v36 + 104))(v10, v29, v37);
      sub_1D7B49234();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v22);
      v24 = (void *)sub_1D7B492AC();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v13, v35);
      v25 = objc_msgSend(v31, sel_generateDisplayTypeForTemplateDisplayType_sampleType_overlayChartController_applicationItems_currentTimeScope_currentCalendar_, a4, v21, v38, v39, 5, v24);

      v26 = objc_msgSend(v25, sel_graphSeriesForTimeScope_, 6);
      if (v26)
      {
        objc_opt_self();
        v27 = (void *)swift_dynamicCastObjCClass();
        if (v27)
          objc_msgSend(v27, sel_setRoundDaySamples_, 1);
      }
      ++v17;
      v18 = objc_allocWithZone((Class)HKOverlayRoomFactorContext);
      v19 = v30;
      objc_msgSend(v18, sel_initWithPrimaryInteractiveChartDisplayType_interactiveChartFactorDisplayType_overlayChartController_currentCalendarOverride_applicationItems_overlayMode_, v19, v25, v38, 0, v39, 3);

      sub_1D7B4A830();
      v5 = *(_QWORD *)(v40 + 16);
      sub_1D7B4A854();
      sub_1D7B4A860();
      sub_1D7B4A83C();
      a1 = v33;
      if (v14 == v17)
        return v40;
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
    v14 = sub_1D7B4A8A8();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D7B12690(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  void *v21;
  char *v22;
  objc_class *v23;
  _QWORD v24[2];
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  id v27;
  char *v28;
  uint64_t v29;
  id v30;
  objc_super v31;
  uint64_t v32;

  v7 = sub_1D7B49504();
  v29 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D7AA787C(0, (unint64_t *)&qword_1F014DFD0, v10, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v24 - v12;
  v14 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v14)
  {
    v24[1] = v3;
    v32 = MEMORY[0x1E0DEE9D8];
    sub_1D7B4A848();
    v16 = a1 + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80));
    v17 = *(void **)(a2 + OBJC_IVAR___HKBalanceOverlayRoomViewController_balanceDisplayType);
    v26 = *(_QWORD *)(v29 + 72);
    v27 = v17;
    v25 = *(void (**)(char *, uint64_t, uint64_t))(v29 + 16);
    v28 = v13;
    v18 = v29;
    do
    {
      v19 = v25;
      v25(v13, v16, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v13, 0, 1, v7);
      v30 = v27;
      v20 = sub_1D7AAED24(a3, (uint64_t)v13);
      sub_1D7B143C0((uint64_t)v13, (uint64_t)&qword_1F014DFD0, (uint64_t)MEMORY[0x1E0D28FE0], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1D7AA787C);
      v19(v9, v16, v7);
      v21 = a3;
      v22 = (char *)objc_allocWithZone((Class)type metadata accessor for BalanceMetricOverlayContext());
      v19(&v22[OBJC_IVAR____TtC8HealthUI27BalanceMetricOverlayContext_selectedMetric], (uint64_t)v9, v7);
      *(_QWORD *)&v22[OBJC_IVAR____TtC8HealthUI21BalanceOverlayContext_currentContextItem] = 0;
      *(_QWORD *)&v22[OBJC_IVAR____TtC8HealthUI21BalanceOverlayContext_baseDisplayType] = v30;
      *(_QWORD *)&v22[OBJC_IVAR____TtC8HealthUI21BalanceOverlayContext_overlayDisplayType] = v20;
      v23 = (objc_class *)type metadata accessor for BalanceOverlayContext();
      v31.receiver = v22;
      v31.super_class = v23;
      objc_msgSendSuper2(&v31, sel_init);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v9, v7);
      sub_1D7B4A830();
      sub_1D7B4A854();
      a3 = v21;
      v13 = v28;
      sub_1D7B4A860();
      sub_1D7B4A83C();
      v16 += v26;
      --v14;
    }
    while (v14);
    return v32;
  }
  return result;
}

uint64_t sub_1D7B12914(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  char *v12;
  void *v13;
  char *v14;
  void (*v15)(char *, char *, uint64_t);
  char *v16;
  uint64_t v17;
  char *v18;
  objc_class *v19;
  char *v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  char *v26;
  id v27;
  void (*v28)(uint64_t, uint64_t);
  char *v29;
  id v30;
  id v31;
  objc_class *v32;
  uint64_t v33;
  _QWORD v34[2];
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  void *v37;
  char *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  objc_super v43;
  objc_super v44;
  uint64_t v45;

  v39 = a3;
  v6 = sub_1D7B49588();
  v40 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  v42 = (char *)v34 - v9;
  v10 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v10)
  {
    v34[1] = v3;
    v45 = MEMORY[0x1E0DEE9D8];
    v38 = v8;
    sub_1D7B4A848();
    v12 = (char *)(a1 + ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80)));
    v13 = *(void **)(a2 + OBJC_IVAR___HKBalanceOverlayRoomViewController_balanceDisplayType);
    v36 = *(_QWORD *)(v40 + 72);
    v37 = v13;
    v35 = *(void (**)(char *, char *, uint64_t))(v40 + 16);
    v14 = v42;
    do
    {
      v41 = v10;
      v15 = v35;
      v35(v14, v12, v6);
      v16 = (char *)objc_allocWithZone((Class)type metadata accessor for BalanceClassificationOverlayContext());
      v15(&v16[OBJC_IVAR____TtC8HealthUI35BalanceClassificationOverlayContext_selectedClassification], v42, v6);
      v17 = v6;
      v18 = v38;
      v15(v38, v42, v17);
      v19 = (objc_class *)type metadata accessor for BalanceClassificationDateRangeDataSourceDelegate();
      v20 = (char *)objc_allocWithZone(v19);
      v21 = v39;
      *(_QWORD *)&v20[OBJC_IVAR____TtC8HealthUI48BalanceClassificationDateRangeDataSourceDelegate_applicationItems] = v39;
      v22 = v37;
      *(_QWORD *)&v20[OBJC_IVAR____TtC8HealthUI48BalanceClassificationDateRangeDataSourceDelegate_baseDisplayType] = v37;
      v15(&v20[OBJC_IVAR____TtC8HealthUI48BalanceClassificationDateRangeDataSourceDelegate_classification], v18, v17);
      v44.receiver = v20;
      v44.super_class = v19;
      v23 = v22;
      v24 = v21;
      v25 = v23;
      v26 = v16;
      v27 = objc_msgSendSuper2(&v44, sel_init);
      v28 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
      v29 = v18;
      v6 = v17;
      v28((uint64_t)v29, v17);
      *(_QWORD *)&v26[OBJC_IVAR____TtC8HealthUI35BalanceClassificationOverlayContext_dataSourceDelegate] = v27;
      *(_QWORD *)&v26[OBJC_IVAR____TtC8HealthUI35BalanceClassificationOverlayContext_mode] = 3;
      v30 = v27;
      v31 = sub_1D7AAF1F4(v25, (uint64_t)v30);

      *(_QWORD *)&v26[OBJC_IVAR____TtC8HealthUI21BalanceOverlayContext_currentContextItem] = 0;
      *(_QWORD *)&v26[OBJC_IVAR____TtC8HealthUI21BalanceOverlayContext_baseDisplayType] = v25;
      *(_QWORD *)&v26[OBJC_IVAR____TtC8HealthUI21BalanceOverlayContext_overlayDisplayType] = v31;
      v32 = (objc_class *)type metadata accessor for BalanceOverlayContext();
      v43.receiver = v26;
      v43.super_class = v32;
      v14 = v42;
      objc_msgSendSuper2(&v43, sel_init);
      v28((uint64_t)v14, v6);

      sub_1D7B4A830();
      sub_1D7B4A854();
      v33 = v41;
      sub_1D7B4A860();
      sub_1D7B4A83C();
      v12 += v36;
      v10 = v33 - 1;
    }
    while (v10);
    return v45;
  }
  return result;
}

id sub_1D7B12C10(uint64_t a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t ObjectType;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t (*v25)(void);
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(char *, uint64_t);
  id result;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56[3];

  v2 = v1;
  ObjectType = swift_getObjectType();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D29090];
  sub_1D7AA787C(0, (unint64_t *)&qword_1F014DD78, (uint64_t (*)(uint64_t))MEMORY[0x1E0D29090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v49 = v6;
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v45 - v10;
  v12 = sub_1D7B4969C();
  v54 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v45 - v16;
  sub_1D7B4966C();
  v53 = a1;
  sub_1D7B0C8A8(a1, (uint64_t)v11, (unint64_t *)&qword_1F014DD78, v5);
  v18 = sub_1D7B49684();
  v19 = sub_1D7B4A620();
  v20 = os_log_type_enabled(v18, v19);
  v52 = v9;
  v48 = ObjectType;
  if (v20)
  {
    v21 = swift_slowAlloc();
    v50 = v15;
    v22 = v21;
    v46 = swift_slowAlloc();
    v56[0] = v46;
    *(_DWORD *)v22 = 136446466;
    v47 = v2;
    v23 = sub_1D7B4AA94();
    v51 = v12;
    v55 = sub_1D7AA4DE4(v23, v24, v56);
    sub_1D7B4A704();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2082;
    v25 = MEMORY[0x1E0D29090];
    sub_1D7B0C8A8((uint64_t)v11, (uint64_t)v9, (unint64_t *)&qword_1F014DD78, (uint64_t (*)(uint64_t))MEMORY[0x1E0D29090]);
    v26 = sub_1D7B4A3E0();
    v55 = sub_1D7AA4DE4(v26, v27, v56);
    v2 = v47;
    sub_1D7B4A704();
    swift_bridgeObjectRelease();
    v12 = v51;
    sub_1D7B143C0((uint64_t)v11, (uint64_t)&qword_1F014DD78, (uint64_t)v25, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1D7AA787C);
    _os_log_impl(&dword_1D7813000, v18, v19, "[%{public}s] most frequent classification updated: %{public}s", (uint8_t *)v22, 0x16u);
    v28 = v46;
    swift_arrayDestroy();
    MEMORY[0x1D829FFF4](v28, -1, -1);
    v29 = v22;
    v15 = v50;
    MEMORY[0x1D829FFF4](v29, -1, -1);
  }
  else
  {
    sub_1D7B143C0((uint64_t)v11, (uint64_t)&qword_1F014DD78, (uint64_t)MEMORY[0x1E0D29090], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1D7AA787C);
  }

  v30 = *(uint64_t (**)(char *, uint64_t))(v54 + 8);
  result = (id)v30(v17, v12);
  v32 = OBJC_IVAR___HKBalanceOverlayRoomViewController_isMostFrequentClassificationDetermined;
  if ((v2[OBJC_IVAR___HKBalanceOverlayRoomViewController_isMostFrequentClassificationDetermined] & 1) == 0)
  {
    sub_1D7B4966C();
    v33 = sub_1D7B49684();
    v34 = sub_1D7B4A620();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc();
      v36 = swift_slowAlloc();
      v50 = v15;
      v37 = v36;
      v56[0] = v36;
      *(_DWORD *)v35 = 136446210;
      v38 = sub_1D7B4AA94();
      v51 = v12;
      v55 = sub_1D7AA4DE4(v38, v39, v56);
      sub_1D7B4A704();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D7813000, v33, v34, "[%{public}s] reloading overlay context items", v35, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D829FFF4](v37, -1, -1);
      MEMORY[0x1D829FFF4](v35, -1, -1);

      v40 = v50;
      v41 = v51;
    }
    else
    {

      v40 = v15;
      v41 = v12;
    }
    v30(v40, v41);
    v43 = (uint64_t)v52;
    v42 = v53;
    v2[v32] = 1;
    sub_1D7B0C8A8(v42, v43, (unint64_t *)&qword_1F014DD78, (uint64_t (*)(uint64_t))MEMORY[0x1E0D29090]);
    v44 = (uint64_t)&v2[OBJC_IVAR___HKBalanceOverlayRoomViewController_mostFrequentClassification];
    swift_beginAccess();
    sub_1D7B14408(v43, v44);
    swift_endAccess();
    return objc_msgSend(v2, sel_reloadOverlayContextItems);
  }
  return result;
}

id sub_1D7B130C4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  _BYTE *v4;
  uint64_t (*v8)(uint64_t);
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t (*v13)(void);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  objc_class *v26;
  id v27;
  uint64_t v29;
  uint64_t v30;
  objc_super v31;

  v30 = a4;
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1D7AA787C(0, (unint64_t *)&qword_1F014D000, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v29 - v11;
  v13 = MEMORY[0x1E0D28FE0];
  sub_1D7AA787C(0, (unint64_t *)&qword_1F014DFD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D28FE0], v9);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v29 - v15;
  v4[OBJC_IVAR___HKBalanceOverlayRoomViewController_isMostFrequentClassificationDetermined] = 0;
  v17 = &v4[OBJC_IVAR___HKBalanceOverlayRoomViewController_mostFrequentClassification];
  v18 = sub_1D7B49588();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  v19 = sub_1D7B49504();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v16, 1, 1, v19);
  v20 = v4;
  v21 = sub_1D7AAED24(a2, (uint64_t)v16);
  sub_1D7B143C0((uint64_t)v16, (uint64_t)&qword_1F014DFD0, (uint64_t)v13, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1D7AA787C);
  *(_QWORD *)&v20[OBJC_IVAR___HKBalanceOverlayRoomViewController_balanceDisplayType] = v21;

  sub_1D7B0C8A8(a1, (uint64_t)v12, (unint64_t *)&qword_1F014D000, v8);
  v22 = sub_1D7B49198();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v12, 1, v22) != 1)
  {
    v24 = (void *)sub_1D7B49150();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v22);
  }
  if (a3)
  {
    sub_1D7AAF6EC(0, &qword_1F014D670);
    v25 = (void *)sub_1D7B4A4A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v25 = 0;
  }
  v26 = (objc_class *)type metadata accessor for BalanceOverlayRoomViewController();
  v31.receiver = v20;
  v31.super_class = v26;
  v27 = objc_msgSendSuper2(&v31, sel_initWithDisplayDate_applicationItems_factorDisplayTypes_mode_, v24, a2, v25, v30);

  sub_1D7B143C0(a1, (uint64_t)&qword_1F014D000, (uint64_t)MEMORY[0x1E0CB0870], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1D7AA787C);
  return v27;
}

uint64_t sub_1D7B1334C(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  swift_getObjectType();
  v4 = sub_1D7B4969C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D7B4966C();
  v8 = sub_1D7B49684();
  v9 = sub_1D7B4A620();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc();
    v18 = v5;
    v11 = v10;
    v12 = swift_slowAlloc();
    v21 = v12;
    *(_DWORD *)v11 = 136446466;
    v19 = a1;
    v13 = sub_1D7B4AA94();
    v20 = sub_1D7AA4DE4(v13, v14, &v21);
    v17 = v4;
    a1 = v19;
    sub_1D7B4A704();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2048;
    v20 = a1;
    sub_1D7B4A704();
    _os_log_impl(&dword_1D7813000, v8, v9, "[%{public}s] building containers for mode: %ld", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D829FFF4](v12, -1, -1);
    MEMORY[0x1D829FFF4](v11, -1, -1);

    (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v17);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  if (a1 == 1)
    return sub_1D7B11B90(a2);
  if (a1 == 3)
    return sub_1D7B11270(a2);
  return MEMORY[0x1E0DEE9D8];
}

id sub_1D7B13574()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  unint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;

  swift_getObjectType();
  v0 = sub_1D7B4969C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D7B4966C();
  v4 = sub_1D7B49684();
  v5 = sub_1D7B4A620();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v48 = v7;
    *(_DWORD *)v6 = 136446210;
    v8 = sub_1D7B4AA94();
    v47 = sub_1D7AA4DE4(v8, v9, (uint64_t *)&v48);
    sub_1D7B4A704();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D7813000, v4, v5, "[%{public}s] opening info from current value view", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D829FFF4](v7, -1, -1);
    MEMORY[0x1D829FFF4](v6, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1D7AA7E70(0, (unint64_t *)&qword_1F01493B0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = xmmword_1D7B858B0;
  v48 = 0;
  v49 = 0xE000000000000000;
  sub_1D7B4A7DC();
  swift_bridgeObjectRelease();
  if (qword_1F014CF90 != -1)
    swift_once();
  v10 = (id)qword_1F0154598;
  sub_1D7B48F7C();

  v11 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v12 = (void *)sub_1D7B4A38C();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(v11, sel_initWithString_, v12);

  v48 = 0;
  v49 = 0xE000000000000000;
  sub_1D7B4A7DC();
  swift_bridgeObjectRelease();
  v14 = (id)qword_1F0154598;
  sub_1D7B48F7C();

  v15 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v16 = (void *)sub_1D7B4A38C();
  swift_bridgeObjectRelease();
  v17 = objc_msgSend(v15, sel_initWithString_, v16);

  v18 = objc_msgSend(objc_allocWithZone((Class)HKInfographicContentItem), sel_initWithTitle_description_, v13, v17);
  v19 = v46;
  *(_QWORD *)(v46 + 32) = v18;
  v48 = 0;
  v49 = 0xE000000000000000;
  sub_1D7B4A7DC();
  swift_bridgeObjectRelease();
  v20 = (id)qword_1F0154598;
  sub_1D7B48F7C();

  v21 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v22 = (void *)sub_1D7B4A38C();
  swift_bridgeObjectRelease();
  v23 = objc_msgSend(v21, sel_initWithString_, v22);

  v48 = 0;
  v49 = 0xE000000000000000;
  sub_1D7B4A7DC();
  swift_bridgeObjectRelease();
  v24 = (id)qword_1F0154598;
  sub_1D7B48F7C();

  v25 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v26 = (void *)sub_1D7B4A38C();
  swift_bridgeObjectRelease();
  v27 = objc_msgSend(v25, sel_initWithString_, v26);

  v28 = objc_msgSend(objc_allocWithZone((Class)HKInfographicContentItem), sel_initWithTitle_description_, v23, v27);
  *(_QWORD *)(v19 + 40) = v28;
  v48 = 0;
  v49 = 0xE000000000000000;
  sub_1D7B4A7DC();
  swift_bridgeObjectRelease();
  v29 = (id)qword_1F0154598;
  sub_1D7B48F7C();

  v30 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v31 = (void *)sub_1D7B4A38C();
  swift_bridgeObjectRelease();
  v32 = objc_msgSend(v30, sel_initWithString_, v31);

  v48 = 0;
  v49 = 0xE000000000000000;
  sub_1D7B4A7DC();
  swift_bridgeObjectRelease();
  v33 = (id)qword_1F0154598;
  sub_1D7B48F7C();

  v34 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v35 = (void *)sub_1D7B4A38C();
  swift_bridgeObjectRelease();
  v36 = objc_msgSend(v34, sel_initWithString_, v35);

  v37 = objc_msgSend(objc_allocWithZone((Class)HKInfographicContentItem), sel_initWithTitle_description_, v32, v36);
  *(_QWORD *)(v19 + 48) = v37;
  v48 = v19;
  sub_1D7B4A4B8();
  v38 = v48;
  v48 = 0;
  v49 = 0xE000000000000000;
  sub_1D7B4A7DC();
  swift_bridgeObjectRelease();
  v39 = (id)qword_1F0154598;
  v40 = sub_1D7B48F7C();
  v42 = v41;

  v43 = sub_1D7B10F6C(v40, v42, v38);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v43;
}

uint64_t sub_1D7B13D0C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void (*v21)(char *, unint64_t, uint64_t);
  char *v22;
  NSObject *v23;
  os_log_type_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  os_log_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  unint64_t v47;
  uint64_t v48;
  void *v49;
  id v50;
  os_log_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t ObjectType;
  char *v57;
  uint64_t v58[2];
  uint64_t v59;

  ObjectType = swift_getObjectType();
  v2 = sub_1D7B4969C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v51 - v7;
  v9 = sub_1D7B49504();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v51 - v15;
  MEMORY[0x1E0C80A78](v14);
  v57 = (char *)&v51 - v17;
  v18 = *(_QWORD *)(sub_1D7B494EC() + 16);
  swift_bridgeObjectRelease();
  if (v18 > a1)
  {
    v19 = sub_1D7B494EC();
    if (a1 < 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)(v19 + 16) > (unint64_t)a1)
    {
      v20 = v19
          + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))
          + *(_QWORD *)(v10 + 72) * a1;
      v21 = *(void (**)(char *, unint64_t, uint64_t))(v10 + 16);
      v22 = v57;
      v21(v57, v20, v9);
      swift_bridgeObjectRelease();
      sub_1D7B4966C();
      v21(v16, (unint64_t)v22, v9);
      v23 = sub_1D7B49684();
      v24 = sub_1D7B4A620();
      v25 = v24;
      if (os_log_type_enabled(v23, v24))
      {
        v26 = swift_slowAlloc();
        v52 = v25;
        v27 = v26;
        v53 = swift_slowAlloc();
        v58[0] = v53;
        *(_DWORD *)v27 = 136446466;
        v54 = v3;
        v28 = sub_1D7B4AA94();
        v51 = v23;
        v59 = sub_1D7AA4DE4(v28, v29, v58);
        ObjectType = v2;
        sub_1D7B4A704();
        swift_bridgeObjectRelease();
        *(_WORD *)(v27 + 12) = 2082;
        v21(v13, (unint64_t)v16, v9);
        v30 = sub_1D7B4A3E0();
        v59 = sub_1D7AA4DE4(v30, v31, v58);
        sub_1D7B4A704();
        swift_bridgeObjectRelease();
        v10 = *(_QWORD *)(v10 + 8);
        ((void (*)(char *, uint64_t))v10)(v16, v9);
        v32 = v51;
        _os_log_impl(&dword_1D7813000, v51, (os_log_type_t)v52, "[%{public}s] opening info view for type: %{public}s", (uint8_t *)v27, 0x16u);
        v33 = v53;
        swift_arrayDestroy();
        MEMORY[0x1D829FFF4](v33, -1, -1);
        MEMORY[0x1D829FFF4](v27, -1, -1);

        (*(void (**)(char *, uint64_t))(v54 + 8))(v8, ObjectType);
      }
      else
      {
        v10 = *(_QWORD *)(v10 + 8);
        ((void (*)(char *, uint64_t))v10)(v16, v9);

        (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      }
      v58[0] = 0;
      v58[1] = 0xE000000000000000;
      sub_1D7B4A7DC();
      swift_bridgeObjectRelease();
      if (qword_1F014CF90 == -1)
        goto LABEL_11;
      goto LABEL_14;
    }
    __break(1u);
LABEL_14:
    swift_once();
LABEL_11:
    v42 = (id)qword_1F0154598;
    v43 = sub_1D7B48F7C();
    v45 = v44;

    v46 = v57;
    v47 = sub_1D7B1F404();
    v48 = v43;
    v49 = v55;
    v50 = sub_1D7B10F6C(v48, v45, v47);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    objc_msgSend(v49, sel_hk_presentModalCardViewController_fullScreen_animated_completion_, v50, 0, 1, 0);

    return ((uint64_t (*)(char *, uint64_t))v10)(v46, v9);
  }
  v34 = v3;
  sub_1D7B4966C();
  v35 = sub_1D7B49684();
  v36 = sub_1D7B4A608();
  if (os_log_type_enabled(v35, v36))
  {
    v37 = swift_slowAlloc();
    v38 = swift_slowAlloc();
    v58[0] = v38;
    *(_DWORD *)v37 = 136446466;
    v39 = sub_1D7B4AA94();
    ObjectType = v2;
    v59 = sub_1D7AA4DE4(v39, v40, v58);
    sub_1D7B4A704();
    swift_bridgeObjectRelease();
    *(_WORD *)(v37 + 12) = 2048;
    v59 = a1;
    sub_1D7B4A704();
    _os_log_impl(&dword_1D7813000, v35, v36, "[%{public}s] tapped unsupported index: %ld", (uint8_t *)v37, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D829FFF4](v38, -1, -1);
    MEMORY[0x1D829FFF4](v37, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v6, ObjectType);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v6, v2);
  }
}

uint64_t sub_1D7B142BC()
{
  return type metadata accessor for BalanceOverlayRoomViewController();
}

void sub_1D7B142C4()
{
  unint64_t v0;

  sub_1D7AA787C(319, (unint64_t *)&qword_1F014DD78, (uint64_t (*)(uint64_t))MEMORY[0x1E0D29090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for BalanceOverlayRoomViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BalanceOverlayRoomViewController.string(for:timeScope:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of BalanceOverlayRoomViewController.infographicSupported(for:healthStore:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of BalanceOverlayRoomViewController.infographicViewController(for:healthStore:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t sub_1D7B143C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, uint64_t, uint64_t, _QWORD))
{
  uint64_t v5;

  v5 = a4(0, a2, a3, MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1D7B14408(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D7AA787C(0, (unint64_t *)&qword_1F014DD78, (uint64_t (*)(uint64_t))MEMORY[0x1E0D29090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D7B14464@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD v20[6];
  uint64_t v21;

  sub_1D7B15964();
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_OWORD *)(v1 + 80);
  v20[4] = *(_OWORD *)(v1 + 64);
  v20[5] = v8;
  v21 = *(_QWORD *)(v1 + 96);
  v9 = *(_OWORD *)(v1 + 16);
  v20[0] = *(_OWORD *)v1;
  v20[1] = v9;
  v10 = *(_OWORD *)(v1 + 48);
  v20[2] = *(_OWORD *)(v1 + 32);
  v20[3] = v10;
  if (*((_QWORD *)&v20[0] + 1))
  {
    v17 = v20[0];
    sub_1D7ABCCEC();
    swift_bridgeObjectRetain();
    v11 = sub_1D7B49EB8();
    v15 = v14 & 1;
  }
  else
  {
    v11 = 0;
    v12 = 0;
    v15 = 0;
    v13 = 0;
  }
  *(_QWORD *)&v17 = v11;
  *((_QWORD *)&v17 + 1) = v12;
  v18 = v15;
  v19 = v13;
  MEMORY[0x1E0C80A78](v11);
  *((_QWORD *)&v17 - 2) = v20;
  sub_1D7B15D4C(0, (unint64_t *)&qword_1F014F5E0);
  sub_1D7AA787C(0, &qword_1F014F798, (uint64_t (*)(uint64_t))sub_1D7B159F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CE0648]);
  sub_1D7B15C30();
  sub_1D7B15C98();
  sub_1D7B4A0EC();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a1, v7, v4);
}

uint64_t sub_1D7B14608@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  id v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  unint64_t v127;
  __int128 v128;
  void *v129;
  char v130[8];
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  unint64_t v136;

  v112 = a2;
  sub_1D7B15B6C();
  v99 = v3;
  v98 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v97 = (char *)&v90 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D7B15B08();
  v105 = v5;
  v104 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x1E0C80A78](v5);
  v96 = (char *)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v95 = (uint64_t)&v90 - v8;
  v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1D7AA787C(0, &qword_1F014F7B8, v10, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v12 = MEMORY[0x1E0C80A78](v11);
  v111 = (uint64_t)&v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v107 = (char *)&v90 - v14;
  sub_1D7AA787C(0, &qword_1F014F7B0, (uint64_t (*)(uint64_t))sub_1D7B15AAC, v9);
  v16 = MEMORY[0x1E0C80A78](v15);
  v110 = (uint64_t)&v90 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v115 = (uint64_t)&v90 - v18;
  sub_1D7B15AAC();
  v103 = v19;
  v102 = *(_QWORD *)(v19 - 8);
  v20 = MEMORY[0x1E0C80A78](v19);
  v106 = (char *)&v90 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v20);
  v109 = (uint64_t)&v90 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  v92 = (char *)&v90 - v25;
  v26 = MEMORY[0x1E0C80A78](v24);
  v91 = (uint64_t)&v90 - v27;
  v28 = MEMORY[0x1E0C80A78](v26);
  v100 = (char *)&v90 - v29;
  v30 = MEMORY[0x1E0C80A78](v28);
  v117 = (uint64_t)&v90 - v31;
  v32 = MEMORY[0x1E0C80A78](v30);
  v34 = (char *)&v90 - v33;
  MEMORY[0x1E0C80A78](v32);
  v116 = (uint64_t)&v90 - v35;
  v36 = *(_QWORD *)(a1 + 32);
  v108 = *(_QWORD *)(a1 + 40);
  v37 = *(_QWORD *)(a1 + 48);
  v90 = *(_QWORD *)(a1 + 56);
  v101 = *(_QWORD *)(a1 + 64);
  v94 = *(_QWORD *)(a1 + 72);
  v93 = *(_QWORD *)(a1 + 80);
  v128 = *(_OWORD *)a1;
  v38 = *(_QWORD *)(a1 + 24);
  v129 = *(void **)(a1 + 16);
  v39 = v129;
  swift_bridgeObjectRetain();
  v40 = objc_msgSend(v39, sel_featureVersion);
  v41 = sub_1D7B4A3BC();
  v43 = v42;

  v120 = v38;
  v121 = v36;
  v122 = v41;
  v123 = v43;
  v135 = 0;
  v136 = 0xE000000000000000;
  sub_1D7B4A7DC();
  v133 = v135;
  v134 = v136;
  sub_1D7B15CF8((uint64_t)&v128, (uint64_t)v130);
  v44 = *(_QWORD *)(a1 + 88);
  v45 = *(_QWORD *)(a1 + 96);
  sub_1D7B15CF8((uint64_t)v130, (uint64_t)&v135);
  v114 = v44;
  if (v136)
  {
    v131 = v44;
    v132 = v45;
    sub_1D7B15E9C(a1);
    swift_bridgeObjectRetain();
    sub_1D7B4A41C();
    sub_1D7B4A41C();
    sub_1D7B15F20(a1);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  sub_1D7B4A41C();
  swift_bridgeObjectRelease();
  sub_1D7B4A41C();
  v113 = sub_1D7B15D90();
  sub_1D7B49F3C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D7AACCDC((uint64_t)v34, v116, (uint64_t (*)(_QWORD))sub_1D7B15AAC);
  swift_bridgeObjectRetain();
  v46 = objc_msgSend(v39, sel_updateVersion);
  v47 = sub_1D7B4A3BC();
  v49 = v48;

  v120 = v108;
  v121 = v37;
  v122 = v47;
  v123 = v49;
  v133 = 0;
  v134 = 0xE000000000000000;
  sub_1D7B4A7DC();
  v131 = v133;
  v132 = v134;
  sub_1D7B15CF8((uint64_t)v130, (uint64_t)&v133);
  if (v134)
  {
    v126 = v114;
    v127 = v45;
    sub_1D7B15E9C(a1);
    swift_bridgeObjectRetain();
    sub_1D7B4A41C();
    sub_1D7B4A41C();
    sub_1D7B15F20(a1);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  v50 = v115;
  v51 = v101;
  v52 = (uint64_t)v100;
  sub_1D7B4A41C();
  swift_bridgeObjectRelease();
  sub_1D7B4A41C();
  sub_1D7B49F3C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D7AACCDC(v52, v117, (uint64_t (*)(_QWORD))sub_1D7B15AAC);
  v53 = objc_msgSend(v39, sel_yearOfRelease);
  if (v53)
  {
    v54 = v53;
    v55 = sub_1D7B4A3BC();
    v57 = v56;

    v120 = v90;
    v121 = v51;
    v122 = v55;
    v123 = v57;
    v131 = 0;
    v132 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_1D7B4A7DC();
    v126 = v131;
    v127 = v132;
    sub_1D7B15CF8((uint64_t)v130, (uint64_t)&v131);
    if (v132)
    {
      v58 = v114;
      v118 = v114;
      v119 = v45;
      sub_1D7B15E9C(a1);
      swift_bridgeObjectRetain();
      sub_1D7B4A41C();
      sub_1D7B4A41C();
      sub_1D7B15F20(a1);
    }
    else
    {
      swift_bridgeObjectRetain();
      v58 = v114;
    }
    sub_1D7B4A41C();
    swift_bridgeObjectRelease();
    sub_1D7B4A41C();
    v61 = (uint64_t)v92;
    sub_1D7B49F3C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v62 = v91;
    sub_1D7AACCDC(v61, v91, (uint64_t (*)(_QWORD))sub_1D7B15AAC);
    sub_1D7AACCDC(v62, v50, (uint64_t (*)(_QWORD))sub_1D7B15AAC);
    v59 = 0;
    v60 = v103;
  }
  else
  {
    v59 = 1;
    v60 = v103;
    v58 = v114;
  }
  v63 = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v102 + 56))(v50, v59, 1, v60);
  v64 = objc_msgSend(v39, sel_UDIDeviceIdentifier);
  if (v64)
  {
    v65 = v64;
    v66 = sub_1D7B4A3BC();
    v68 = v67;

    v69 = v94;
    v70 = v93;
    v126 = v94;
    v127 = v93;
    v120 = v58;
    v121 = v45;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1D7B4A41C();
    v71 = v120;
    v72 = v121;
    v120 = v69;
    v121 = v70;
    v122 = v66;
    v123 = v68;
    v124 = v71;
    v125 = v72;
    sub_1D7B15BE4();
    sub_1D7ABCCEC();
    v73 = v97;
    sub_1D7B4993C();
    v126 = 0;
    v127 = 0xE000000000000000;
    sub_1D7B15CF8((uint64_t)v130, (uint64_t)&v120);
    if (v121)
    {
      v118 = v58;
      v119 = v45;
      sub_1D7B15E9C(a1);
      swift_bridgeObjectRetain();
      sub_1D7B4A41C();
      sub_1D7B4A41C();
      sub_1D7B15F20(a1);
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    v74 = (uint64_t)v107;
    v75 = (uint64_t)v106;
    sub_1D7B4A41C();
    swift_bridgeObjectRelease();
    sub_1D7B4A41C();
    sub_1D7B15E54();
    v76 = (uint64_t)v96;
    v77 = v99;
    sub_1D7B49F3C();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v98 + 8))(v73, v77);
    v78 = v95;
    sub_1D7AACCDC(v76, v95, (uint64_t (*)(_QWORD))sub_1D7B15B08);
    sub_1D7AACCDC(v78, v74, (uint64_t (*)(_QWORD))sub_1D7B15B08);
    v63 = 0;
  }
  else
  {
    v74 = (uint64_t)v107;
    v75 = (uint64_t)v106;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v104 + 56))(v74, v63, 1, v105);
  v79 = v116;
  v80 = v109;
  sub_1D7B15DD4(v116, v109);
  v81 = v117;
  sub_1D7B15DD4(v117, v75);
  v82 = v115;
  v83 = v110;
  sub_1D7B0C8A8(v115, v110, &qword_1F014F7B0, (uint64_t (*)(uint64_t))sub_1D7B15AAC);
  v84 = v111;
  sub_1D7B0C8A8(v74, v111, &qword_1F014F7B8, (uint64_t (*)(uint64_t))sub_1D7B15B08);
  v85 = v112;
  sub_1D7B15DD4(v80, v112);
  sub_1D7B159F8();
  v86 = v75;
  v88 = v87;
  sub_1D7B15DD4(v86, v85 + *(int *)(v87 + 48));
  sub_1D7B0C8A8(v83, v85 + *(int *)(v88 + 64), &qword_1F014F7B0, (uint64_t (*)(uint64_t))sub_1D7B15AAC);
  sub_1D7B0C8A8(v84, v85 + *(int *)(v88 + 80), &qword_1F014F7B8, (uint64_t (*)(uint64_t))sub_1D7B15B08);
  sub_1D7B0EDDC(v74, &qword_1F014F7B8, (uint64_t (*)(uint64_t))sub_1D7B15B08);
  sub_1D7B0EDDC(v82, &qword_1F014F7B0, (uint64_t (*)(uint64_t))sub_1D7B15AAC);
  sub_1D7B15E18(v81);
  sub_1D7B15E18(v79);
  sub_1D7B0EDDC(v84, &qword_1F014F7B8, (uint64_t (*)(uint64_t))sub_1D7B15B08);
  sub_1D7B0EDDC(v83, &qword_1F014F7B0, (uint64_t (*)(uint64_t))sub_1D7B15AAC);
  sub_1D7B15E18(v86);
  return sub_1D7B15E18(v80);
}

uint64_t DeviceFeatureAttributes.deviceName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeviceFeatureAttributes.deviceName.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*DeviceFeatureAttributes.deviceName.modify())()
{
  return nullsub_1;
}

id DeviceFeatureAttributes.featureAttributes.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

void DeviceFeatureAttributes.featureAttributes.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
}

uint64_t (*DeviceFeatureAttributes.featureAttributes.modify())()
{
  return nullsub_1;
}

uint64_t DeviceFeatureAttributes.init(deviceName:featureAttributes:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t _s8HealthUI23DeviceFeatureAttributesV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;

  v3 = a1[1];
  v4 = a2[1];
  if (v3)
  {
    if (v4)
    {
      v5 = *a1 == *a2 && v3 == v4;
      if (v5 || (sub_1D7B4A938() & 1) != 0)
        goto LABEL_8;
    }
  }
  else if (!v4)
  {
LABEL_8:
    sub_1D7AC6C3C();
    return sub_1D7B4A6E0() & 1;
  }
  return 0;
}

uint64_t getEnumTagSinglePayload for DeviceFeatureAttributes(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DeviceFeatureAttributes(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceFeatureAttributes()
{
  return &type metadata for DeviceFeatureAttributes;
}

void sub_1D7B153A4(uint64_t *a1@<X8>)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1D7B4A7DC();
  swift_bridgeObjectRelease();
  if (qword_1F014CF90 != -1)
    swift_once();
  v2 = (id)qword_1F0154598;
  v17 = sub_1D7B48F7C();
  v4 = v3;

  sub_1D7B4A7DC();
  swift_bridgeObjectRelease();
  v5 = (id)qword_1F0154598;
  v6 = sub_1D7B48F7C();
  v8 = v7;

  sub_1D7B4A7DC();
  swift_bridgeObjectRelease();
  v9 = (id)qword_1F0154598;
  v10 = sub_1D7B48F7C();
  v12 = v11;

  sub_1D7B4A7DC();
  swift_bridgeObjectRelease();
  v13 = (id)qword_1F0154598;
  v14 = sub_1D7B48F7C();
  v16 = v15;

  *a1 = v17;
  a1[1] = v4;
  a1[2] = v6;
  a1[3] = v8;
  a1[4] = v10;
  a1[5] = v12;
  a1[6] = v14;
  a1[7] = v16;
}

uint64_t destroy for DeviceFeatureAttributesSection(uint64_t a1)
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for DeviceFeatureAttributesSection(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v5 = (void *)a2[2];
  v4 = a2[3];
  a1[2] = v5;
  a1[3] = v4;
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  v10 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for DeviceFeatureAttributesSection(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a2[2];
  v5 = (void *)a1[2];
  a1[2] = v4;
  v6 = v4;

  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy104_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for DeviceFeatureAttributesSection(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v9;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DeviceFeatureAttributesSection(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 104))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DeviceFeatureAttributesSection(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceFeatureAttributesSection()
{
  return &type metadata for DeviceFeatureAttributesSection;
}

uint64_t sub_1D7B15954()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1D7B15964()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F014F790)
  {
    sub_1D7B15D4C(255, (unint64_t *)&qword_1F014F5E0);
    sub_1D7AA787C(255, &qword_1F014F798, (uint64_t (*)(uint64_t))sub_1D7B159F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CE0648]);
    v0 = sub_1D7B4A110();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F014F790);
  }
}

void sub_1D7B159F8()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  unint64_t TupleTypeMetadata;
  uint64_t v2;

  if (!qword_1F014F7A0)
  {
    sub_1D7B15AAC();
    v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
    sub_1D7AA787C(255, &qword_1F014F7B0, (uint64_t (*)(uint64_t))sub_1D7B15AAC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1D7AA787C(255, &qword_1F014F7B8, (uint64_t (*)(uint64_t))sub_1D7B15B08, v0);
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v2)
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1F014F7A0);
  }
}

void sub_1D7B15AAC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F014F7A8)
  {
    sub_1D7B49CF0();
    v0 = sub_1D7B49978();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F014F7A8);
  }
}

void sub_1D7B15B08()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F014F7C0)
  {
    sub_1D7B15B6C();
    sub_1D7B49CF0();
    v0 = sub_1D7B49978();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F014F7C0);
  }
}

void sub_1D7B15B6C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F014F7C8)
  {
    sub_1D7B15BE4();
    v0 = sub_1D7B49948();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F014F7C8);
  }
}

unint64_t sub_1D7B15BE4()
{
  unint64_t result;

  result = qword_1F014F7D0;
  if (!qword_1F014F7D0)
  {
    result = MEMORY[0x1D829FF28](&unk_1D7B865B0, &type metadata for FeatureAttributeLegibilityView);
    atomic_store(result, (unint64_t *)&qword_1F014F7D0);
  }
  return result;
}

uint64_t sub_1D7B15C28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D7B14608(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1D7B15C30()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1F014F7D8;
  if (!qword_1F014F7D8)
  {
    sub_1D7B15D4C(255, (unint64_t *)&qword_1F014F5E0);
    v2 = MEMORY[0x1E0CDDD58];
    result = MEMORY[0x1D829FF28](MEMORY[0x1E0CE0798], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1F014F7D8);
  }
  return result;
}

unint64_t sub_1D7B15C98()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F014F7E0;
  if (!qword_1F014F7E0)
  {
    sub_1D7AA787C(255, &qword_1F014F798, (uint64_t (*)(uint64_t))sub_1D7B159F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CE0648]);
    result = MEMORY[0x1D829FF28](MEMORY[0x1E0CE0680], v1);
    atomic_store(result, (unint64_t *)&qword_1F014F7E0);
  }
  return result;
}

uint64_t sub_1D7B15CF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D7B15D4C(0, &qword_1F014F7E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1D7B15D4C(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1D7B4A6F8();
    if (!v4)
      atomic_store(v3, a2);
  }
}

unint64_t sub_1D7B15D90()
{
  unint64_t result;

  result = qword_1F014F7F0;
  if (!qword_1F014F7F0)
  {
    result = MEMORY[0x1D829FF28](&unk_1D7B84398, &type metadata for ListValueCell);
    atomic_store(result, (unint64_t *)&qword_1F014F7F0);
  }
  return result;
}

uint64_t sub_1D7B15DD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D7B15AAC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D7B15E18(uint64_t a1)
{
  uint64_t v2;

  sub_1D7B15AAC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1D7B15E54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F014F7F8;
  if (!qword_1F014F7F8)
  {
    sub_1D7B15B6C();
    result = MEMORY[0x1D829FF28](MEMORY[0x1E0CD9468], v1);
    atomic_store(result, (unint64_t *)&qword_1F014F7F8);
  }
  return result;
}

uint64_t sub_1D7B15E9C(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 16);
  swift_bridgeObjectRetain();
  v3 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D7B15F20(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return a1;
}

uint64_t destroy for DeviceFeatureAttributesSection.Localization()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for DeviceFeatureAttributesSection.Localization(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for DeviceFeatureAttributesSection.Localization(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for DeviceFeatureAttributesSection.Localization(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DeviceFeatureAttributesSection.Localization(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DeviceFeatureAttributesSection.Localization(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceFeatureAttributesSection.Localization()
{
  return &type metadata for DeviceFeatureAttributesSection.Localization;
}

unint64_t sub_1D7B161F8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[3];

  result = qword_1F014F800;
  if (!qword_1F014F800)
  {
    sub_1D7B15964();
    v2 = v1;
    v3[0] = sub_1D7B15C30();
    v3[1] = sub_1D7B15C98();
    v3[2] = MEMORY[0x1E0CE0400];
    result = MEMORY[0x1D829FF28](MEMORY[0x1E0CDFF98], v2, v3);
    atomic_store(result, (unint64_t *)&qword_1F014F800);
  }
  return result;
}

double CGRect.center.getter(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  double MidX;
  CGRect v10;

  MidX = CGRectGetMidX(*(CGRect *)&a1);
  v10.origin.x = a1;
  v10.origin.y = a2;
  v10.size.width = a3;
  v10.size.height = a4;
  CGRectGetMidY(v10);
  return MidX;
}

float64x2_t CGRect.center.setter(float64x2_t a1, float64_t a2)
{
  float64x2_t *v2;
  float64x2_t result;

  __asm { FMOV            V3.2D, #-0.5 }
  a1.f64[1] = a2;
  result = vaddq_f64(a1, vmulq_f64(v2[1], _Q3));
  *v2 = result;
  return result;
}

float64x2_t (*CGRect.center.modify(uint64_t a1))(uint64_t a1)
{
  CGFloat *v1;
  CGFloat v3;
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat MidX;
  CGFloat MidY;
  CGRect v10;
  CGRect v11;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *v1;
  v4 = v1[1];
  v5 = v1[2];
  v6 = v1[3];
  v10.origin.x = *v1;
  v10.origin.y = v4;
  v10.size.width = v5;
  v10.size.height = v6;
  MidX = CGRectGetMidX(v10);
  v11.origin.x = v3;
  v11.origin.y = v4;
  v11.size.width = v5;
  v11.size.height = v6;
  MidY = CGRectGetMidY(v11);
  *(CGFloat *)a1 = MidX;
  *(CGFloat *)(a1 + 8) = MidY;
  return sub_1D7B16360;
}

float64x2_t sub_1D7B16360(uint64_t a1)
{
  float64x2_t *v1;
  float64x2_t result;

  v1 = *(float64x2_t **)(a1 + 16);
  __asm { FMOV            V2.2D, #-0.5 }
  result = vaddq_f64(*(float64x2_t *)a1, vmulq_f64(v1[1], _Q2));
  *v1 = result;
  return result;
}

void sub_1D7B16380(CGFloat *a1@<X0>, CGFloat *a2@<X8>)
{
  CGFloat v3;
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat MidX;
  CGFloat MidY;
  CGRect v9;
  CGRect v10;

  v3 = *a1;
  v4 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  v9.origin.x = *a1;
  v9.origin.y = v4;
  v9.size.width = v5;
  v9.size.height = v6;
  MidX = CGRectGetMidX(v9);
  v10.origin.x = v3;
  v10.origin.y = v4;
  v10.size.width = v5;
  v10.size.height = v6;
  MidY = CGRectGetMidY(v10);
  *a2 = MidX;
  a2[1] = MidY;
}

float64x2_t sub_1D7B163EC(float64x2_t *a1, float64x2_t *a2)
{
  float64x2_t result;

  __asm { FMOV            V2.2D, #-0.5 }
  result = vaddq_f64(*a1, vmulq_f64(a2[1], _Q2));
  *a2 = result;
  return result;
}

id sub_1D7B16408()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC8HealthUI30TitledWeekdayHeaderPaletteView____lazy_storage___titleLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8HealthUI30TitledWeekdayHeaderPaletteView____lazy_storage___titleLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC8HealthUI30TitledWeekdayHeaderPaletteView____lazy_storage___titleLabel);
  }
  else
  {
    v4 = sub_1D7B17054(v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1D7B16468()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  double v4;
  double v5;
  id v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC8HealthUI30TitledWeekdayHeaderPaletteView____lazy_storage___weekdayPalette;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8HealthUI30TitledWeekdayHeaderPaletteView____lazy_storage___weekdayPalette);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC8HealthUI30TitledWeekdayHeaderPaletteView____lazy_storage___weekdayPalette);
  }
  else
  {
    v4 = *(double *)(v0 + OBJC_IVAR____TtC8HealthUI30TitledWeekdayHeaderPaletteView_width);
    objc_msgSend((id)objc_opt_self(), sel_preferredHeight);
    v6 = objc_msgSend(objc_allocWithZone((Class)HKWeekdayHeaderPaletteView), sel_initWithFrame_shouldSupportRTL_, HKUICalendarLocaleIsRightToLeft(), 0.0, 0.0, v4, v5);
    v7 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v6;
    v3 = v6;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

id TitledWeekdayHeaderPaletteView.__allocating_init(title:width:)(uint64_t a1, uint64_t a2, double a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  return TitledWeekdayHeaderPaletteView.init(title:width:)(a1, a2, a3);
}

id TitledWeekdayHeaderPaletteView.init(title:width:)(uint64_t a1, uint64_t a2, double a3)
{
  char *v3;
  objc_class *ObjectType;
  char *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t inited;
  void *v15;
  id v16;
  id v17;
  void *v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  double Height;
  double v28;
  double v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  objc_super v41;
  CGRect v42;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v3[OBJC_IVAR____TtC8HealthUI30TitledWeekdayHeaderPaletteView____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8HealthUI30TitledWeekdayHeaderPaletteView____lazy_storage___weekdayPalette] = 0;
  *(double *)&v3[OBJC_IVAR____TtC8HealthUI30TitledWeekdayHeaderPaletteView_width] = a3;
  v8 = &v3[OBJC_IVAR____TtC8HealthUI30TitledWeekdayHeaderPaletteView_title];
  *(_QWORD *)v8 = a1;
  *((_QWORD *)v8 + 1) = a2;
  v9 = (void *)objc_opt_self();
  sub_1D7B4A3BC();
  swift_bridgeObjectRetain();
  v10 = (void *)sub_1D7B4A38C();
  swift_bridgeObjectRelease();
  v11 = *MEMORY[0x1E0DC48F8];
  v12 = objc_msgSend(v9, sel_hk_preferredFontForTextStyle_symbolicTraits_maximumContentSizeCategory_, v10, 2, *MEMORY[0x1E0DC48F8]);

  v13 = (void *)sub_1D7B4A38C();
  sub_1D7AC5AB8(0, (unint64_t *)&qword_1F014DC20, (void (*)(uint64_t))sub_1D7AC5B04);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D7B84630;
  v15 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 64) = sub_1D7ADDAC8();
  *(_QWORD *)(inited + 40) = v12;
  v16 = v15;
  v17 = v12;
  sub_1D7ADFFC8(inited);
  type metadata accessor for Key(0);
  sub_1D7AC5B6C();
  v18 = (void *)sub_1D7B4A230();
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_boundingRectWithSize_options_attributes_context_, 1, v18, 0, a3, 1.79769313e308);
  v20 = v19;
  v22 = v21;
  v24 = v23;
  v26 = v25;

  v42.origin.x = v20;
  v42.origin.y = v22;
  v42.size.width = v24;
  v42.size.height = v26;
  Height = CGRectGetHeight(v42);
  swift_bridgeObjectRelease();

  v28 = ceil(Height) + 8.0;
  objc_msgSend((id)objc_opt_self(), sel_preferredHeight);
  v41.receiver = v3;
  v41.super_class = ObjectType;
  v30 = objc_msgSendSuper2(&v41, sel_initWithFrame_, 0.0, 0.0, a3, v28 + v29);
  objc_msgSend(v30, sel_setMaximumContentSizeCategory_, v11);
  v31 = v30;
  v32 = sub_1D7B16408();
  objc_msgSend(v31, sel_addSubview_, v32);

  v33 = v31;
  v34 = sub_1D7B16468();
  objc_msgSend(v33, sel_addSubview_, v34);

  v35 = sub_1D7B16468();
  objc_msgSend(v35, sel_layoutMargins);
  objc_msgSend(v35, sel_setLayoutMargins_, v28);

  sub_1D7AC5AB8(0, (unint64_t *)&qword_1F014F830, (void (*)(uint64_t))sub_1D7B16F14);
  v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_1D7B84630;
  v37 = sub_1D7B49714();
  v38 = MEMORY[0x1E0DC29B0];
  *(_QWORD *)(v36 + 32) = v37;
  *(_QWORD *)(v36 + 40) = v38;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1D7B16FCC();
  v39 = v33;
  sub_1D7B4A6BC();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return v39;
}

void sub_1D7B16938(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;

  v4 = a3 + 16;
  swift_beginAccess();
  v5 = MEMORY[0x1D82A00A8](v4);
  if (v5)
  {
    v6 = (void *)v5;
    if (!a2)
      goto LABEL_8;
    v7 = a2;
    v8 = objc_msgSend(v6, sel_traitCollection);
    v9 = objc_msgSend(v8, sel_preferredContentSizeCategory);

    v10 = objc_msgSend(v7, sel_preferredContentSizeCategory);
    v11 = sub_1D7B4A3BC();
    v13 = v12;
    if (v11 == sub_1D7B4A3BC() && v13 == v14)
    {

      swift_bridgeObjectRelease_n();
      goto LABEL_10;
    }
    v16 = sub_1D7B4A938();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
LABEL_8:
      sub_1D7B16A80();
LABEL_10:

  }
}

void sub_1D7B16A80()
{
  char *v0;
  double v1;
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t inited;
  void *v8;
  id v9;
  id v10;
  void *v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double Height;
  double v21;
  double v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  CGRect v28;

  v1 = *(double *)&v0[OBJC_IVAR____TtC8HealthUI30TitledWeekdayHeaderPaletteView_width];
  v2 = (void *)objc_opt_self();
  sub_1D7B4A3BC();
  v3 = (void *)sub_1D7B4A38C();
  swift_bridgeObjectRelease();
  v4 = *MEMORY[0x1E0DC48F8];
  v5 = objc_msgSend(v2, sel_hk_preferredFontForTextStyle_symbolicTraits_maximumContentSizeCategory_, v3, 2, *MEMORY[0x1E0DC48F8]);

  v6 = (void *)sub_1D7B4A38C();
  sub_1D7AC5AB8(0, (unint64_t *)&qword_1F014DC20, (void (*)(uint64_t))sub_1D7AC5B04);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D7B84630;
  v8 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 64) = sub_1D7ADDAC8();
  *(_QWORD *)(inited + 40) = v5;
  v9 = v8;
  v10 = v5;
  sub_1D7ADFFC8(inited);
  type metadata accessor for Key(0);
  sub_1D7AC5B6C();
  v11 = (void *)sub_1D7B4A230();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_boundingRectWithSize_options_attributes_context_, 1, v11, 0, v1, 1.79769313e308);
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v19 = v18;

  v28.origin.x = v13;
  v28.origin.y = v15;
  v28.size.width = v17;
  v28.size.height = v19;
  Height = CGRectGetHeight(v28);

  v21 = ceil(Height);
  objc_msgSend((id)objc_opt_self(), sel_preferredHeight);
  objc_msgSend(v0, sel_setFrame_, 0.0, 0.0, v1, v21 + 8.0 + v22);
  v23 = sub_1D7B16408();
  sub_1D7B4A3BC();
  v24 = (void *)sub_1D7B4A38C();
  swift_bridgeObjectRelease();
  v25 = objc_msgSend(v2, sel_hk_preferredFontForTextStyle_symbolicTraits_maximumContentSizeCategory_, v24, 2, v4);

  objc_msgSend(v23, sel_setFont_, v25);
  v26 = sub_1D7B16408();
  objc_msgSend(v26, sel_setFrame_, 0.0, 0.0, v1, v21);

  v27 = sub_1D7B16468();
  objc_msgSend(v27, sel_layoutMargins);
  objc_msgSend(v27, sel_setLayoutMargins_, v21 + 8.0);

}

id TitledWeekdayHeaderPaletteView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void TitledWeekdayHeaderPaletteView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id TitledWeekdayHeaderPaletteView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_1D7B16F14()
{
  unint64_t result;

  result = qword_1F0150170;
  if (!qword_1F0150170)
  {
    sub_1D7B16F4C();
    result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1F0150170);
  }
  return result;
}

unint64_t sub_1D7B16F4C()
{
  unint64_t result;

  result = qword_1F014F840;
  if (!qword_1F014F840)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1F014F840);
  }
  return result;
}

uint64_t sub_1D7B16FA0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1D7B16FC4(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1D7B16938(a1, a2, v2);
}

unint64_t sub_1D7B16FCC()
{
  unint64_t result;

  result = qword_1F0150180;
  if (!qword_1F0150180)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1F0150180);
  }
  return result;
}

uint64_t type metadata accessor for TitledWeekdayHeaderPaletteView()
{
  return objc_opt_self();
}

uint64_t method lookup function for TitledWeekdayHeaderPaletteView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TitledWeekdayHeaderPaletteView.__allocating_init(title:width:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

id sub_1D7B17054(uint64_t a1)
{
  double v1;
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t inited;
  void *v8;
  id v9;
  id v10;
  void *v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double Height;
  id v21;
  void *v22;
  void *v23;
  id v24;
  CGRect v26;

  v1 = *(double *)(a1 + OBJC_IVAR____TtC8HealthUI30TitledWeekdayHeaderPaletteView_width);
  v2 = (void *)objc_opt_self();
  sub_1D7B4A3BC();
  v3 = (void *)sub_1D7B4A38C();
  swift_bridgeObjectRelease();
  v4 = *MEMORY[0x1E0DC48F8];
  v5 = objc_msgSend(v2, sel_hk_preferredFontForTextStyle_symbolicTraits_maximumContentSizeCategory_, v3, 2, *MEMORY[0x1E0DC48F8]);

  v6 = (void *)sub_1D7B4A38C();
  sub_1D7AC5AB8(0, (unint64_t *)&qword_1F014DC20, (void (*)(uint64_t))sub_1D7AC5B04);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D7B84630;
  v8 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 64) = sub_1D7ADDAC8();
  *(_QWORD *)(inited + 40) = v5;
  v9 = v8;
  v10 = v5;
  sub_1D7ADFFC8(inited);
  type metadata accessor for Key(0);
  sub_1D7AC5B6C();
  v11 = (void *)sub_1D7B4A230();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_boundingRectWithSize_options_attributes_context_, 1, v11, 0, v1, 1.79769313e308);
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v19 = v18;

  v26.origin.x = v13;
  v26.origin.y = v15;
  v26.size.width = v17;
  v26.size.height = v19;
  Height = CGRectGetHeight(v26);

  v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, v1, ceil(Height));
  v22 = (void *)sub_1D7B4A38C();
  objc_msgSend(v21, sel_setText_, v22);

  objc_msgSend(v21, sel_setTextAlignment_, 1);
  sub_1D7B4A3BC();
  v23 = (void *)sub_1D7B4A38C();
  swift_bridgeObjectRelease();
  v24 = objc_msgSend(v2, sel_hk_preferredFontForTextStyle_symbolicTraits_maximumContentSizeCategory_, v23, 2, v4);

  objc_msgSend(v21, sel_setFont_, v24);
  return v21;
}

unint64_t static CalendarYearOverlayView.elementKind.getter()
{
  return 0xD000000000000017;
}

id CalendarYearOverlayView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

char *CalendarYearOverlayView.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  char *v23;
  uint64_t v24;
  char *v25;
  id v26;
  void *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  void *v69;
  void *v70;
  void *v71;
  void *v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v79;
  id v80;
  objc_super v81;

  v9 = OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_background;
  v10 = objc_allocWithZone(MEMORY[0x1E0DC3F10]);
  v11 = v4;
  v12 = objc_msgSend(v10, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v13 = (void *)objc_opt_self();
  v14 = objc_msgSend(v13, sel_systemBackgroundColor);
  objc_msgSend(v12, sel_setBackgroundColor_, v14);

  objc_msgSend(v12, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(_QWORD *)&v4[v9] = v12;
  v15 = OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_label;
  v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v17 = objc_msgSend(v13, sel_labelColor);
  objc_msgSend(v16, sel_setTextColor_, v17);

  objc_msgSend(v16, sel_setNumberOfLines_, 0);
  objc_msgSend(v16, sel_setTextAlignment_, 1);
  objc_msgSend(v16, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(_QWORD *)&v11[v15] = v16;
  v18 = OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_gradient;
  v19 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for GradientView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v20 = objc_msgSend(v13, sel_systemBackgroundColor);
  v21 = objc_msgSend(v13, sel_systemBackgroundColor);
  v22 = objc_msgSend(v21, sel_colorWithAlphaComponent_, 0.0);

  sub_1D7AC86D0(v20, v22);
  objc_msgSend(v19, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(_QWORD *)&v11[v18] = v19;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_height] = 0x4056800000000000;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_animator] = 0;
  v23 = &v11[OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_displayDate];
  v24 = sub_1D7B49198();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 1, 1, v24);

  v81.receiver = v11;
  v81.super_class = (Class)type metadata accessor for CalendarYearOverlayView();
  v25 = (char *)objc_msgSendSuper2(&v81, sel_initWithFrame_, a1, a2, a3, a4);
  v26 = objc_msgSend(v13, sel_clearColor);
  objc_msgSend(v25, sel_setBackgroundColor_, v26);

  objc_msgSend(v25, sel_setAlpha_, 0.0);
  v79 = OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_label;
  v27 = *(void **)&v25[OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_label];
  objc_msgSend(v27, sel_setAlpha_, 0.0);
  objc_msgSend(v25, sel_setHidden_, 1);
  v28 = OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_background;
  v29 = *(void **)&v25[OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_background];
  objc_msgSend(v29, sel_addSubview_, v27);
  objc_msgSend(v25, sel_addSubview_, v29);
  v30 = OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_gradient;
  objc_msgSend(v25, sel_addSubview_, *(_QWORD *)&v25[OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_gradient]);
  v80 = (id)objc_opt_self();
  sub_1D7AAF550();
  v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_1D7B862C0;
  v32 = objc_msgSend(v29, sel_topAnchor);
  v33 = objc_msgSend(v25, (SEL)&selRef_unitStringForType_parameters_ + 4);
  v34 = objc_msgSend(v32, sel_constraintEqualToAnchor_, v33);

  *(_QWORD *)(v31 + 32) = v34;
  v35 = objc_msgSend(*(id *)&v25[v28], sel_leadingAnchor);
  v36 = objc_msgSend(v25, sel_leadingAnchor);
  v37 = objc_msgSend(v35, sel_constraintEqualToAnchor_, v36);

  *(_QWORD *)(v31 + 40) = v37;
  v38 = objc_msgSend(v25, sel_trailingAnchor);
  v39 = objc_msgSend(*(id *)&v25[v28], sel_trailingAnchor);
  v40 = objc_msgSend(v38, sel_constraintEqualToAnchor_, v39);

  *(_QWORD *)(v31 + 48) = v40;
  v41 = objc_msgSend(*(id *)&v25[v30], sel_topAnchor);
  v42 = objc_msgSend(*(id *)&v25[v28], sel_bottomAnchor);
  v43 = objc_msgSend(v41, sel_constraintEqualToAnchor_, v42);

  *(_QWORD *)(v31 + 56) = v43;
  v44 = objc_msgSend(*(id *)&v25[v30], sel_leadingAnchor);
  v45 = objc_msgSend(v25, sel_leadingAnchor);
  v46 = objc_msgSend(v44, sel_constraintEqualToAnchor_, v45);

  *(_QWORD *)(v31 + 64) = v46;
  v47 = objc_msgSend(v25, sel_trailingAnchor);
  v48 = objc_msgSend(*(id *)&v25[v30], sel_trailingAnchor);
  v49 = objc_msgSend(v47, sel_constraintEqualToAnchor_, v48);

  *(_QWORD *)(v31 + 72) = v49;
  v50 = objc_msgSend(v25, sel_bottomAnchor);
  v51 = objc_msgSend(*(id *)&v25[v30], sel_bottomAnchor);
  v52 = objc_msgSend(v50, sel_constraintEqualToAnchor_, v51);

  *(_QWORD *)(v31 + 80) = v52;
  v53 = objc_msgSend(*(id *)&v25[v30], sel_heightAnchor);
  if (qword_1F014CF78 != -1)
    swift_once();
  v54 = objc_msgSend(v53, sel_constraintEqualToConstant_, *(double *)&qword_1F014F8E8);

  *(_QWORD *)(v31 + 88) = v54;
  v55 = objc_msgSend(*(id *)&v25[v79], sel_topAnchor);
  v56 = objc_msgSend(*(id *)&v25[v28], sel_topAnchor);
  if (qword_1F014CF70 != -1)
    swift_once();
  v57 = objc_msgSend(v55, sel_constraintEqualToAnchor_constant_, v56, *(double *)&qword_1F014F8E0);

  *(_QWORD *)(v31 + 96) = v57;
  v58 = objc_msgSend(*(id *)&v25[v79], sel_leadingAnchor);
  v59 = objc_msgSend(*(id *)&v25[v28], sel_layoutMarginsGuide);
  v60 = objc_msgSend(v59, sel_leadingAnchor);

  v61 = objc_msgSend(v58, (SEL)&selRef_defaultContextViewColorsUsingColor_ + 6, v60);
  *(_QWORD *)(v31 + 104) = v61;
  v62 = objc_msgSend(*(id *)&v25[v28], sel_layoutMarginsGuide);
  v63 = objc_msgSend(v62, sel_trailingAnchor);

  v64 = objc_msgSend(*(id *)&v25[v79], sel_trailingAnchor);
  v65 = objc_msgSend(v63, (SEL)&selRef_defaultContextViewColorsUsingColor_ + 6, v64);

  *(_QWORD *)(v31 + 112) = v65;
  v66 = objc_msgSend(*(id *)&v25[v28], sel_bottomAnchor);
  v67 = objc_msgSend(*(id *)&v25[v79], sel_bottomAnchor);
  v68 = objc_msgSend(v66, (SEL)&selRef_defaultContextViewColorsUsingColor_ + 6, v67);

  *(_QWORD *)(v31 + 120) = v68;
  sub_1D7B4A4B8();
  sub_1D7B18E40();
  v69 = (void *)sub_1D7B4A4A0();
  swift_bridgeObjectRelease();
  objc_msgSend(v80, sel_activateConstraints_, v69);

  v70 = *(void **)&v25[v79];
  v71 = (void *)objc_opt_self();
  if (qword_1F014CF80 != -1)
    swift_once();
  sub_1D7B4A3BC();
  v72 = (void *)sub_1D7B4A38C();
  swift_bridgeObjectRelease();
  v73 = objc_msgSend(v71, sel_hk_preferredFontForTextStyle_symbolicTraits_, v72, 2);

  objc_msgSend(v70, sel_setFont_, v73);
  sub_1D7AA787C(0, (unint64_t *)&qword_1F014F830, (uint64_t (*)(uint64_t))sub_1D7B16F14, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v74 = swift_allocObject();
  *(_OWORD *)(v74 + 16) = xmmword_1D7B84630;
  v75 = sub_1D7B49714();
  v76 = MEMORY[0x1E0DC29B0];
  *(_QWORD *)(v74 + 32) = v75;
  *(_QWORD *)(v74 + 40) = v76;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1D7B16FCC();
  v77 = v25;
  sub_1D7B4A6BC();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return v77;
}

uint64_t type metadata accessor for CalendarYearOverlayView()
{
  uint64_t result;

  result = qword_1F014F950;
  if (!qword_1F014F950)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1D7B17DF8(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  CGFloat Width;
  double v22;
  double v23;
  uint64_t v24;
  CGRect v25;

  v4 = a3 + 16;
  swift_beginAccess();
  v5 = MEMORY[0x1D82A00A8](v4);
  if (v5)
  {
    v6 = (char *)v5;
    if (a2)
    {
      v7 = a2;
      v8 = objc_msgSend(v6, sel_traitCollection);
      v9 = objc_msgSend(v8, sel_preferredContentSizeCategory);

      v10 = objc_msgSend(v7, sel_preferredContentSizeCategory);
      v11 = sub_1D7B4A3BC();
      v13 = v12;
      if (v11 == sub_1D7B4A3BC() && v13 == v14)
      {

        swift_bridgeObjectRelease_n();
      }
      else
      {
        v16 = sub_1D7B4A938();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v16 & 1) == 0)
          goto LABEL_8;
      }
LABEL_12:

      return;
    }
LABEL_8:
    v17 = *(void **)&v6[OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_label];
    v18 = (void *)objc_opt_self();
    if (qword_1F014CF80 != -1)
      swift_once();
    sub_1D7B4A3BC();
    v19 = (void *)sub_1D7B4A38C();
    swift_bridgeObjectRelease();
    v20 = objc_msgSend(v18, sel_hk_preferredFontForTextStyle_symbolicTraits_, v19, 2);

    objc_msgSend(v17, sel_setFont_, v20);
    objc_msgSend(v6, sel_frame);
    Width = CGRectGetWidth(v25);
    LODWORD(v22) = 1148846080;
    LODWORD(v23) = 1112014848;
    objc_msgSend(v6, sel_systemLayoutSizeFittingSize_withHorizontalFittingPriority_verticalFittingPriority_, Width, 0.0, v22, v23);
    *(_QWORD *)&v6[OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_height] = v24;
    objc_msgSend(v6, sel_frame);
    objc_msgSend(v6, sel_setFrame_);
    goto LABEL_12;
  }
}

id CalendarYearOverlayView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

uint64_t sub_1D7B181C0(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE v12[24];

  sub_1D7AA787C(0, (unint64_t *)&qword_1F014D000, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v9 = &v12[-v8];
  sub_1D7AA7B0C(a1, (uint64_t)&v12[-v8]);
  v10 = *a2 + OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_displayDate;
  swift_beginAccess();
  sub_1D7AA7B0C(v10, (uint64_t)v7);
  swift_beginAccess();
  sub_1D7AB10F4((uint64_t)v9, v10);
  swift_endAccess();
  sub_1D7B182D4((uint64_t)v7);
  sub_1D7AA79D0((uint64_t)v9);
  return sub_1D7AA79D0((uint64_t)v7);
}

uint64_t sub_1D7B182D4(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  char *v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  char v28;
  void (*v29)(char *, uint64_t);
  char *v30;
  void *v31;
  void *v32;
  id v33;
  CGFloat Width;
  double v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  CGRect v41;

  v40 = a1;
  sub_1D7ACB938();
  v3 = v2;
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D7AA787C(0, (unint64_t *)&qword_1F014D000, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v38 - v11;
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v38 - v13;
  v15 = sub_1D7B49198();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v38 - v20;
  v39 = v1;
  v22 = (uint64_t)&v1[OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_displayDate];
  swift_beginAccess();
  sub_1D7AA7B0C(v22, (uint64_t)v14);
  v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v23(v14, 1, v15) == 1)
    return sub_1D7AA79D0((uint64_t)v14);
  v25 = v14;
  v26 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
  v26(v21, v25, v15);
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v12, v21, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, v15);
  v27 = (uint64_t)&v5[*(int *)(v3 + 48)];
  sub_1D7AA7B0C(v40, (uint64_t)v5);
  sub_1D7AA7B0C((uint64_t)v12, v27);
  if (v23(v5, 1, v15) == 1)
  {
    sub_1D7AA79D0((uint64_t)v12);
    if (v23((char *)v27, 1, v15) == 1)
    {
      sub_1D7AA79D0((uint64_t)v5);
      return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v21, v15);
    }
    goto LABEL_8;
  }
  sub_1D7AA7B0C((uint64_t)v5, (uint64_t)v9);
  if (v23((char *)v27, 1, v15) == 1)
  {
    sub_1D7AA79D0((uint64_t)v12);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v15);
LABEL_8:
    sub_1D7B198EC((uint64_t)v5);
    goto LABEL_11;
  }
  v26(v19, (char *)v27, v15);
  sub_1D7B19928();
  v28 = sub_1D7B4A320();
  v29 = *(void (**)(char *, uint64_t))(v16 + 8);
  v29(v19, v15);
  sub_1D7AA79D0((uint64_t)v12);
  v29(v9, v15);
  sub_1D7AA79D0((uint64_t)v5);
  if ((v28 & 1) != 0)
    return ((uint64_t (*)(char *, uint64_t))v29)(v21, v15);
LABEL_11:
  v30 = v39;
  v31 = *(void **)&v39[OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_label];
  v32 = (void *)sub_1D7B49150();
  v33 = HKLocalizedStringForDateAndTemplate(v32, 6);

  objc_msgSend(v31, sel_setText_, v33);
  objc_msgSend(v30, sel_frame);
  Width = CGRectGetWidth(v41);
  LODWORD(v35) = 1148846080;
  LODWORD(v36) = 1112014848;
  objc_msgSend(v30, sel_systemLayoutSizeFittingSize_withHorizontalFittingPriority_verticalFittingPriority_, Width, 0.0, v35, v36);
  *(_QWORD *)&v30[OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_height] = v37;
  objc_msgSend(v30, sel_frame);
  objc_msgSend(v30, sel_setFrame_);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v21, v15);
}

uint64_t sub_1D7B186B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_displayDate;
  swift_beginAccess();
  return sub_1D7AA7B0C(v3, a1);
}

uint64_t sub_1D7B18700(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE v8[24];

  sub_1D7AA787C(0, (unint64_t *)&qword_1F014D000, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v8[-v4];
  v6 = v1 + OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_displayDate;
  swift_beginAccess();
  sub_1D7AA7B0C(v6, (uint64_t)v5);
  swift_beginAccess();
  sub_1D7AB10F4(a1, v6);
  swift_endAccess();
  sub_1D7B182D4((uint64_t)v5);
  sub_1D7AA79D0(a1);
  return sub_1D7AA79D0((uint64_t)v5);
}

void (*sub_1D7B187E0(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  size_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v3 = malloc(0x70uLL);
  *a1 = v3;
  v3[9] = v1;
  sub_1D7AA787C(0, (unint64_t *)&qword_1F014D000, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v5 = *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64);
  v3[10] = malloc(v5);
  v3[11] = malloc(v5);
  v6 = malloc(v5);
  v7 = OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_displayDate;
  v3[12] = v6;
  v3[13] = v7;
  v8 = v1 + v7;
  swift_beginAccess();
  sub_1D7AA7B0C(v8, (uint64_t)v6);
  return sub_1D7B188A0;
}

void sub_1D7B188A0(uint64_t a1, char a2)
{
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(void **)a1;
  v4 = *(void **)(*(_QWORD *)a1 + 96);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 104);
  v5 = *(void **)(*(_QWORD *)a1 + 80);
  v6 = *(void **)(*(_QWORD *)a1 + 88);
  v7 = *(_QWORD *)(*(_QWORD *)a1 + 72) + v3;
  if ((a2 & 1) != 0)
  {
    sub_1D7AA7B0C(*(_QWORD *)(*(_QWORD *)a1 + 96), (uint64_t)v6);
    sub_1D7AA7B0C(v7, (uint64_t)v5);
    swift_beginAccess();
    sub_1D7AB10F4((uint64_t)v6, v7);
    swift_endAccess();
    sub_1D7B182D4((uint64_t)v5);
    sub_1D7AA79D0((uint64_t)v6);
    v8 = (uint64_t)v5;
    v9 = (uint64_t)v4;
  }
  else
  {
    sub_1D7AA7B0C(*(_QWORD *)(*(_QWORD *)a1 + 72) + v3, (uint64_t)v6);
    swift_beginAccess();
    sub_1D7AB10F4((uint64_t)v4, v7);
    swift_endAccess();
    sub_1D7B182D4((uint64_t)v6);
    v8 = (uint64_t)v4;
    v9 = (uint64_t)v6;
  }
  sub_1D7AA79D0(v8);
  sub_1D7AA79D0(v9);
  free(v4);
  free(v6);
  free(v5);
  free(v2);
}

void sub_1D7B189B8(char a1, uint64_t a2, uint64_t a3, double a4)
{
  char *v4;
  char *v5;
  uint64_t v10;
  void *v11;
  char *v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  char *v17;
  id v18;
  void *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  _QWORD v23[6];

  v5 = v4;
  v10 = OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_animator;
  v11 = *(void **)&v4[OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_animator];
  if (v11)
  {
    v12 = v11;
    if (objc_msgSend(v12, sel_isRunning))
    {
      objc_msgSend(v12, sel_setReversed_, 1);
      goto LABEL_7;
    }

    v13 = *(void **)&v5[v10];
    if (v13)
      objc_msgSend(v13, sel_stopAnimation_, 1);
  }
  v14 = *(void **)&v5[OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_label];
  v15 = objc_allocWithZone((Class)type metadata accessor for StaggeredAlphaAnimator());
  v16 = v14;
  v17 = v5;
  v18 = sub_1D7B19270(a1 & 1, a4, (uint64_t)v17, (uint64_t)v16, 3);

  v19 = *(void **)&v5[v10];
  *(_QWORD *)&v5[v10] = v18;
  v12 = (char *)v18;

LABEL_7:
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = a2;
  *(_QWORD *)(v20 + 24) = a3;
  v21 = *(void **)&v12[OBJC_IVAR____TtC8HealthUIP33_2CCCC3E80CB68C77458B1C83C70AE82122StaggeredAlphaAnimator_backgroundAnimator];
  v23[4] = sub_1D7ADAF04;
  v23[5] = v20;
  v23[0] = MEMORY[0x1E0C809B0];
  v23[1] = 1107296256;
  v23[2] = sub_1D7B19208;
  v23[3] = &block_descriptor_10;
  v22 = _Block_copy(v23);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v21, sel_addCompletion_, v22);
  _Block_release(v22);
  swift_release();
  if ((objc_msgSend(v12, sel_isRunning) & 1) == 0)
    objc_msgSend(v12, sel_startAnimation);

}

id CalendarYearOverlayView.__deallocating_deinit()
{
  return sub_1D7B18F34((uint64_t (*)(_QWORD))type metadata accessor for CalendarYearOverlayView);
}

id static CalendarYearOverlayView.configure(attributes:in:initialFrame:)(void *a1, void *a2, double a3, double a4, double a5, double a6)
{
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;

  objc_msgSend(a1, sel_setZIndex_, 100);
  objc_msgSend(a1, sel_setFrame_, a3, a4, a5, a6);
  objc_msgSend(a2, sel_adjustedContentInset);
  v13 = v12;
  v15 = v14;
  objc_msgSend(a2, sel_contentOffset);
  v17 = v15 + v16;
  v19 = v13 + v18;
  objc_msgSend(a1, sel_frame);
  return objc_msgSend(a1, sel_setFrame_, v17, v19);
}

unint64_t sub_1D7B18CE0()
{
  return 0xD000000000000017;
}

id sub_1D7B18CFC(void *a1, void *a2, double a3, double a4, double a5, double a6)
{
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;

  objc_msgSend(a1, sel_setZIndex_, 100);
  objc_msgSend(a1, sel_setFrame_, a3, a4, a5, a6);
  objc_msgSend(a2, sel_adjustedContentInset);
  v13 = v12;
  v15 = v14;
  objc_msgSend(a2, sel_contentOffset);
  v17 = v15 + v16;
  v19 = v13 + v18;
  objc_msgSend(a1, sel_frame);
  return objc_msgSend(a1, sel_setFrame_, v17, v19);
}

double static OverlayConfiguration.calendarYearOverlay.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  double result;

  v2 = type metadata accessor for CalendarYearOverlayView();
  type metadata accessor for OverlayConfiguration();
  MEMORY[0x1D829D3A8](0, 0);
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)(a1 + 48) = &protocol witness table for CalendarYearOverlayView;
  return result;
}

void sub_1D7B18E20()
{
  qword_1F014F8E0 = 0x4028000000000000;
}

void sub_1D7B18E30()
{
  qword_1F014F8E8 = 0x404E000000000000;
}

unint64_t sub_1D7B18E40()
{
  unint64_t result;

  result = qword_1F0150160;
  if (!qword_1F0150160)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1F0150160);
  }
  return result;
}

id sub_1D7B18E7C()
{
  qword_1F014F8F0 = *MEMORY[0x1E0DC4B60];
  return (id)qword_1F014F8F0;
}

void sub_1D7B18E94(uint64_t a1, double a2)
{
  uint64_t v3;
  void *v4;
  void *v5;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = (void *)MEMORY[0x1D82A00A8](v3);
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, sel_setAlpha_, a2);

  }
}

id sub_1D7B18F28()
{
  return sub_1D7B18F34((uint64_t (*)(_QWORD))type metadata accessor for StaggeredAlphaAnimator);
}

id sub_1D7B18F34(uint64_t (*a1)(_QWORD))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

void sub_1D7B19034(char *a1, double a2, uint64_t a3, SEL *a4)
{
  void *v6;
  char *v7;

  v6 = *(void **)&a1[OBJC_IVAR____TtC8HealthUIP33_2CCCC3E80CB68C77458B1C83C70AE82122StaggeredAlphaAnimator_backgroundAnimator];
  v7 = a1;
  objc_msgSend(v6, *a4, a2);
  objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC8HealthUIP33_2CCCC3E80CB68C77458B1C83C70AE82122StaggeredAlphaAnimator_foregroundAnimator], *a4, a2);

}

void sub_1D7B190B4(char *a1, uint64_t a2, SEL *a3)
{
  void *v4;
  char *v5;

  v4 = *(void **)&a1[OBJC_IVAR____TtC8HealthUIP33_2CCCC3E80CB68C77458B1C83C70AE82122StaggeredAlphaAnimator_backgroundAnimator];
  v5 = a1;
  objc_msgSend(v4, *a3);
  objc_msgSend(*(id *)&v5[OBJC_IVAR____TtC8HealthUIP33_2CCCC3E80CB68C77458B1C83C70AE82122StaggeredAlphaAnimator_foregroundAnimator], *a3);

}

void sub_1D7B19120(char *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  void *v6;
  char *v7;

  v6 = *(void **)&a1[OBJC_IVAR____TtC8HealthUIP33_2CCCC3E80CB68C77458B1C83C70AE82122StaggeredAlphaAnimator_backgroundAnimator];
  v7 = a1;
  objc_msgSend(v6, *a4, a3);
  objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC8HealthUIP33_2CCCC3E80CB68C77458B1C83C70AE82122StaggeredAlphaAnimator_foregroundAnimator], *a4, a3);

}

uint64_t sub_1D7B19208(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

uint64_t sub_1D7B19244()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1D7B19268(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1D7B17DF8(a1, a2, v2);
}

id sub_1D7B19270(char a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  id v14;
  uint64_t v15;
  void *v16;
  char *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  objc_super v25;
  uint64_t aBlock;
  uint64_t v27;
  uint64_t (*v28)(uint64_t);
  void *v29;
  void (*v30)();
  uint64_t v31;

  v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v10 = swift_allocObject();
  v11 = v10;
  if ((a1 & 1) != 0)
    v12 = 1.0;
  else
    v12 = 0.0;
  *(_QWORD *)(v10 + 16) = v9;
  *(double *)(v10 + 24) = v12;
  if ((a1 & 1) != 0)
    v13 = a2;
  else
    v13 = a2 * 0.8;
  v14 = objc_allocWithZone(MEMORY[0x1E0DC3F38]);
  v30 = sub_1D7B199EC;
  v31 = v11;
  v15 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v27 = 1107296256;
  v28 = sub_1D7AEFEF0;
  v29 = &block_descriptor_12;
  v16 = _Block_copy(&aBlock);
  v17 = v5;
  swift_retain();
  swift_release();
  v18 = objc_msgSend(v14, sel_initWithDuration_curve_animations_, a5, v16, a2);
  _Block_release(v16);
  swift_release();
  *(_QWORD *)&v17[OBJC_IVAR____TtC8HealthUIP33_2CCCC3E80CB68C77458B1C83C70AE82122StaggeredAlphaAnimator_backgroundAnimator] = v18;
  v19 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v19;
  *(double *)(v20 + 24) = v12;
  v21 = objc_allocWithZone(MEMORY[0x1E0DC3F38]);
  v30 = sub_1D7B199D0;
  v31 = v20;
  aBlock = v15;
  v27 = 1107296256;
  v28 = sub_1D7AEFEF0;
  v29 = &block_descriptor_19;
  v22 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v23 = objc_msgSend(v21, sel_initWithDuration_curve_animations_, a5, v22, v13);
  _Block_release(v22);
  swift_release();
  *(_QWORD *)&v17[OBJC_IVAR____TtC8HealthUIP33_2CCCC3E80CB68C77458B1C83C70AE82122StaggeredAlphaAnimator_foregroundAnimator] = v23;

  v25.receiver = v17;
  v25.super_class = (Class)type metadata accessor for StaggeredAlphaAnimator();
  return objc_msgSendSuper2(&v25, sel_init);
}

void _s8HealthUI23CalendarYearOverlayViewC5coderACSgSo7NSCoderC_tcfc_0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  char *v14;
  uint64_t v15;

  v1 = v0;
  v2 = OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_background;
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v4 = (void *)objc_opt_self();
  v5 = objc_msgSend(v4, sel_systemBackgroundColor);
  objc_msgSend(v3, sel_setBackgroundColor_, v5);

  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(_QWORD *)&v1[v2] = v3;
  v6 = OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_label;
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v8 = objc_msgSend(v4, sel_labelColor);
  objc_msgSend(v7, sel_setTextColor_, v8);

  objc_msgSend(v7, sel_setNumberOfLines_, 0);
  objc_msgSend(v7, sel_setTextAlignment_, 1);
  objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(_QWORD *)&v1[v6] = v7;
  v9 = OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_gradient;
  v10 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for GradientView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v11 = objc_msgSend(v4, sel_systemBackgroundColor);
  v12 = objc_msgSend(v4, sel_systemBackgroundColor);
  v13 = objc_msgSend(v12, sel_colorWithAlphaComponent_, 0.0);

  sub_1D7AC86D0(v11, v13);
  objc_msgSend(v10, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(_QWORD *)&v1[v9] = v10;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_height] = 0x4056800000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_animator] = 0;
  v14 = &v1[OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_displayDate];
  v15 = sub_1D7B49198();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);

  sub_1D7B4A890();
  __break(1u);
}

uint64_t sub_1D7B1975C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_displayDate;
  swift_beginAccess();
  return sub_1D7AA7B0C(v3, a2);
}

uint64_t sub_1D7B197B4()
{
  return type metadata accessor for CalendarYearOverlayView();
}

void sub_1D7B197BC()
{
  unint64_t v0;

  sub_1D7AA787C(319, (unint64_t *)&qword_1F014D000, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for CalendarYearOverlayView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CalendarYearOverlayView.displayDate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of CalendarYearOverlayView.displayDate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of CalendarYearOverlayView.displayDate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t type metadata accessor for StaggeredAlphaAnimator()
{
  return objc_opt_self();
}

uint64_t sub_1D7B198EC(uint64_t a1)
{
  uint64_t v2;

  sub_1D7ACB938();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1D7B19928()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F014FA00;
  if (!qword_1F014FA00)
  {
    v1 = sub_1D7B49198();
    result = MEMORY[0x1D829FF28](MEMORY[0x1E0CB08B8], v1);
    atomic_store(result, (unint64_t *)&qword_1F014FA00);
  }
  return result;
}

uint64_t sub_1D7B19970()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t sub_1D7B199AC()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1D7B199D0()
{
  uint64_t v0;

  sub_1D7B18E94(*(_QWORD *)(v0 + 16), *(double *)(v0 + 24));
}

double sub_1D7B19A08()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_horizontalSectionInset;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_1D7B19A4C(double a1)
{
  uint64_t v1;
  double *v3;
  uint64_t result;

  v3 = (double *)(v1 + OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_horizontalSectionInset);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_1D7B19A9C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1D7B19AE0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_numberOfDaysPerWeek;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_1D7B19B24(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_numberOfDaysPerWeek);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_1D7B19B6C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1D7B19BB0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_weekdayRange;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_1D7B19BF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_weekdayRange);
  result = swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*sub_1D7B19C48())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1D7B19C8C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  char *v2;
  objc_class *v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t result;
  uint64_t v17;
  objc_super v18;

  v5 = (objc_class *)type metadata accessor for CalendarViewLayoutAttributes();
  v18.receiver = v2;
  v18.super_class = v5;
  objc_msgSendSuper2(&v18, sel_copyWithZone_, a1);
  sub_1D7B4A770();
  swift_unknownObjectRelease();
  swift_dynamicCast();
  v6 = &v2[OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_horizontalSectionInset];
  swift_beginAccess();
  v7 = *(_QWORD *)v6;
  v8 = (_QWORD *)(v17 + OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_horizontalSectionInset);
  swift_beginAccess();
  *v8 = v7;
  v9 = &v2[OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_numberOfDaysPerWeek];
  swift_beginAccess();
  v10 = *(_QWORD *)v9;
  v11 = (_QWORD *)(v17 + OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_numberOfDaysPerWeek);
  swift_beginAccess();
  *v11 = v10;
  v12 = &v2[OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_weekdayRange];
  swift_beginAccess();
  v13 = *(_QWORD *)v12;
  v14 = *((_QWORD *)v12 + 1);
  v15 = (_QWORD *)(v17 + OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_weekdayRange);
  result = swift_beginAccess();
  *v15 = v13;
  v15[1] = v14;
  a2[3] = v5;
  *a2 = v17;
  return result;
}

uint64_t type metadata accessor for CalendarViewLayoutAttributes()
{
  return objc_opt_self();
}

id sub_1D7B19E84(uint64_t a1)
{
  char *v1;
  objc_class *v3;
  id v4;
  double *v5;
  double v6;
  double *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  id v21;
  uint64_t v23;
  objc_super v24;
  char *v25;
  _QWORD v26[3];
  uint64_t v27;

  sub_1D7AB9B80(a1, (uint64_t)v26);
  if (!v27)
  {
    sub_1D7AB1290((uint64_t)v26);
    return 0;
  }
  v3 = (objc_class *)type metadata accessor for CalendarViewLayoutAttributes();
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  v4 = v25;
  v5 = (double *)&v25[OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_horizontalSectionInset];
  swift_beginAccess();
  v6 = *v5;
  v7 = (double *)&v1[OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_horizontalSectionInset];
  swift_beginAccess();
  if (v6 != *v7)
    goto LABEL_10;
  v8 = &v25[OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_numberOfDaysPerWeek];
  swift_beginAccess();
  v9 = *(_QWORD *)v8;
  v10 = &v1[OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_numberOfDaysPerWeek];
  swift_beginAccess();
  if (v9 != *(_QWORD *)v10
    || (v11 = &v25[OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_weekdayRange],
        swift_beginAccess(),
        v13 = *(_QWORD *)v11,
        v12 = *((_QWORD *)v11 + 1),
        v14 = &v1[OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_weekdayRange],
        swift_beginAccess(),
        v13 != *(_QWORD *)v14)
    || v12 != *((_QWORD *)v14 + 1))
  {
LABEL_10:

    return 0;
  }
  sub_1D7AB9B80(a1, (uint64_t)v26);
  v15 = v27;
  if (v27)
  {
    v16 = __swift_project_boxed_opaque_existential_0(v26, v27);
    v17 = *(_QWORD *)(v15 - 8);
    MEMORY[0x1E0C80A78](v16);
    v19 = (char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v17 + 16))(v19);
    v20 = sub_1D7B4A92C();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v15);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v26);
  }
  else
  {
    v20 = 0;
  }
  v24.receiver = v1;
  v24.super_class = v3;
  v21 = objc_msgSendSuper2(&v24, sel_isEqual_, v20);

  swift_unknownObjectRelease();
  return v21;
}

id CalendarViewLayoutAttributes.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id CalendarViewLayoutAttributes.init()()
{
  char *v0;
  objc_super v2;

  *(_QWORD *)&v0[OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_horizontalSectionInset] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_numberOfDaysPerWeek] = 7;
  *(_OWORD *)&v0[OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_weekdayRange] = xmmword_1D7B86350;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CalendarViewLayoutAttributes();
  return objc_msgSendSuper2(&v2, sel_init);
}

id CalendarViewLayoutAttributes.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CalendarViewLayoutAttributes();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

double sub_1D7B1A270@<D0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  double *v3;
  double result;

  v3 = (double *)(*a1 + OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_horizontalSectionInset);
  swift_beginAccess();
  result = *v3;
  *a2 = *(_QWORD *)v3;
  return result;
}

uint64_t sub_1D7B1A2C0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_horizontalSectionInset);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

uint64_t sub_1D7B1A314@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_numberOfDaysPerWeek);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_1D7B1A364(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_numberOfDaysPerWeek);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

__n128 sub_1D7B1A3B0@<Q0>(_QWORD *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 *v3;
  __n128 result;

  v3 = (__n128 *)(*a1 + OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_weekdayRange);
  swift_beginAccess();
  result = *v3;
  *a2 = *v3;
  return result;
}

uint64_t sub_1D7B1A400(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = (_QWORD *)(*a2 + OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_weekdayRange);
  result = swift_beginAccess();
  *v4 = v2;
  v4[1] = v3;
  return result;
}

uint64_t method lookup function for CalendarViewLayoutAttributes()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CalendarViewLayoutAttributes.horizontalSectionInset.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of CalendarViewLayoutAttributes.horizontalSectionInset.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of CalendarViewLayoutAttributes.horizontalSectionInset.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of CalendarViewLayoutAttributes.numberOfDaysPerWeek.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of CalendarViewLayoutAttributes.numberOfDaysPerWeek.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of CalendarViewLayoutAttributes.numberOfDaysPerWeek.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of CalendarViewLayoutAttributes.weekdayRange.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of CalendarViewLayoutAttributes.weekdayRange.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of CalendarViewLayoutAttributes.weekdayRange.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t HKHostingController.__allocating_init(rootView:)(uint64_t a1)
{
  objc_class *v1;
  objc_class *v2;
  id v4;
  uint64_t v5;

  v2 = v1;
  v4 = objc_allocWithZone(v1);
  v5 = sub_1D7B1A98C(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)((char *)v2
                                                          + class metadata base offset for HKHostingController)
                                              - 8)
                                  + 8))(a1);
  return v5;
}

uint64_t HKHostingController.init(rootView:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *MEMORY[0x1E0DEEDD8] & *v1;
  v4 = sub_1D7B1A98C(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + class metadata base offset for HKHostingController)
                                              - 8)
                                  + 8))(a1);
  return v4;
}

void sub_1D7B1A620()
{
  sub_1D7B1AA08();
}

uint64_t sub_1D7B1A658(uint64_t a1)
{
  void *v1;
  id v3;

  v3 = v1;
  return a1;
}

void sub_1D7B1A670(char a1)
{
  void *v1;
  id v3;
  id v4;
  id v5;
  id v6;

  v3 = objc_msgSend(v1, sel_navigationItem);
  v4 = sub_1D7B1A730((a1 & 1) == 0);
  objc_msgSend(v3, sel_setRightBarButtonItem_animated_, v4, 0);

  v5 = objc_msgSend(v1, sel_navigationItem);
  v6 = sub_1D7B1A730(a1);
  objc_msgSend(v5, sel_setRightBarButtonItem_animated_, v6, 0);

}

id sub_1D7B1A730(char a1)
{
  _QWORD *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  id v5;

  if ((a1 & 1) == 0)
    return 0;
  v2 = *MEMORY[0x1E0DEEDD8] & *v1;
  v3 = objc_allocWithZone(MEMORY[0x1E0DC34F0]);
  type metadata accessor for HKHostingController(0, *(_QWORD *)(v2 + class metadata base offset for HKHostingController), *(_QWORD *)(v2 + class metadata base offset for HKHostingController + 8), v4);
  v5 = objc_msgSend(v3, sel_initWithBarButtonSystemItem_target_action_, 0, sub_1D7B4A92C(), sel_didTapDone_);
  swift_unknownObjectRelease();
  return v5;
}

id sub_1D7B1A7E8()
{
  void *v0;

  return objc_msgSend(v0, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

uint64_t sub_1D7B1A800(void *a1, uint64_t a2, uint64_t a3)
{
  id v4;
  id v5;
  _OWORD v7[2];

  if (a3)
  {
    v4 = a1;
    swift_unknownObjectRetain();
    sub_1D7B4A770();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v7, 0, sizeof(v7));
    v5 = a1;
  }
  sub_1D7B1A7E8();

  return sub_1D7AB1290((uint64_t)v7);
}

void sub_1D7B1A868()
{
  sub_1D7B1A670(1);
}

void sub_1D7B1A870(void *a1)
{
  id v1;

  v1 = a1;
  sub_1D7B1A868();

}

void sub_1D7B1A8A4()
{
  sub_1D7B1A670(0);
}

void sub_1D7B1A8AC(void *a1)
{
  id v1;

  v1 = a1;
  sub_1D7B1A8A4();

}

void HKHostingController.__allocating_init(coder:rootView:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void HKHostingController.init(coder:rootView:)()
{
  sub_1D7B1AA60();
}

id HKHostingController.__deallocating_deinit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for HKHostingController(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + class metadata base offset for HKHostingController), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + class metadata base offset for HKHostingController + 8), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

uint64_t sub_1D7B1A98C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *))(v1 + 16))((char *)&v4 - v2);
  return sub_1D7B49B40();
}

void sub_1D7B1AA08()
{
  sub_1D7B4A890();
  __break(1u);
}

void sub_1D7B1AA60()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t type metadata accessor for HKHostingController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for HKHostingController);
}

uint64_t sub_1D7B1AA98()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for HKHostingController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of HKHostingController.viewControllerWillEnterAdaptiveModal()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for HKHostingController + (*MEMORY[0x1E0DEEDD8] & *v0) + 40))();
}

uint64_t dispatch thunk of HKHostingController.viewControllerDidLeaveAdaptiveModal()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for HKHostingController + (*MEMORY[0x1E0DEEDD8] & *v0) + 48))();
}

void sub_1D7B1AB34()
{
  id v0;
  id v1;
  id v2;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, -120.0);
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, 5.0);
  v2 = objc_msgSend((id)objc_opt_self(), sel_valueRangeWithMinValue_maxValue_, v0, v1);

  qword_1F014FAD0 = (uint64_t)v2;
}

id sub_1D7B1AD18()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DecibelsHearingLossAxisLabelDimension();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for DecibelsHearingLossAxisLabelDimension()
{
  return objc_opt_self();
}

void sub_1D7B1AD68(uint64_t a1, void *a2, int a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  unsigned int v16;
  void *v17;
  unsigned int v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;

  v28 = a3;
  v5 = sub_1D7B490D8();
  v26 = *(_QWORD *)(v5 - 8);
  v27 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1D7B490FC();
  v8 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1D7B49198();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (void *)sub_1D7B49150();
  v16 = objc_msgSend(a2, sel_isDateInToday_, v15);

  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, v11);
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  else
  {
    v17 = (void *)sub_1D7B49150();
    v18 = objc_msgSend(a2, sel_isDateInYesterday_, v17);

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    if (!v18)
    {
      sub_1D7B490E4();
      sub_1D7B490CC();
      sub_1D7B49180();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v27);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v25);
      goto LABEL_7;
    }
  }
  v19 = (void *)sub_1D7B49150();
  v20 = HKLastUpdatedTextWithOptions(v19, a2, v28 & 1);

  if (v20)
  {
    sub_1D7B4A3BC();

LABEL_7:
    v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    v22 = (void *)sub_1D7B4A38C();
    swift_bridgeObjectRelease();
    objc_msgSend(v21, sel_setText_, v22);

    objc_msgSend(v21, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v21, sel_setAdjustsFontSizeToFitWidth_, 1);
    objc_msgSend(v21, sel_setBaselineAdjustment_, 1);
    v23 = objc_msgSend((id)objc_opt_self(), sel_hk_chartCurrentValueDateFont);
    objc_msgSend(v21, sel_setFont_, v23);

    v24 = objc_msgSend((id)objc_opt_self(), sel_hk_chartLollipopLabelColor);
    objc_msgSend(v21, sel_setTextColor_, v24);

    return;
  }
  __break(1u);
}

uint64_t sub_1D7B1B094(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char v7;
  double v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  int64_t v21;
  int64_t v22;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;

  v1 = -1 << *(_BYTE *)(a1 + 32);
  v2 = ~v1;
  v3 = -v1;
  v24 = a1 + 64;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  else
    v4 = -1;
  v25 = v2;
  v26 = v4 & *(_QWORD *)(a1 + 64);
  swift_bridgeObjectRetain();
  result = sub_1D7B1BC30();
  v6 = result;
  if ((v7 & 1) == 0)
  {
    v8 = *(double *)&result;
    v9 = 0;
    v10 = (unint64_t)(v25 + 64) >> 6;
    v11 = v26;
    while (v11)
    {
      v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v16 = v15 | (v9 << 6);
LABEL_12:
      v17 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v16);
      swift_bridgeObjectRetain();
      result = swift_bridgeObjectRelease();
      v14 = 0;
      if (v17)
      {
        while (1)
        {
          v12 = *(_QWORD *)(v17 + 16);
          if (v14 == v12)
            break;
          if (v14 >= v12)
            goto LABEL_39;
          v13 = v17 + 8 * v14++;
          if (*(double *)(v13 + 32) < v8)
            v8 = *(double *)(v13 + 32);
        }
      }
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
LABEL_39:
      __break(1u);
      return result;
    }
    if (v18 >= v10)
      goto LABEL_35;
    v19 = *(_QWORD *)(v24 + 8 * v18);
    if (v19)
    {
LABEL_23:
      v11 = (v19 - 1) & v19;
      v16 = __clz(__rbit64(v19)) + (v18 << 6);
      v9 = v18;
      goto LABEL_12;
    }
    v20 = v9 + 2;
    if (v9 + 2 >= v10)
      goto LABEL_35;
    v19 = *(_QWORD *)(v24 + 8 * v20);
    if (v19)
    {
LABEL_19:
      v18 = v20;
      goto LABEL_23;
    }
    v21 = v9 + 3;
    if (v9 + 3 >= v10)
      goto LABEL_35;
    v19 = *(_QWORD *)(v24 + 8 * v21);
    if (!v19)
    {
      v20 = v9 + 4;
      if (v9 + 4 >= v10)
        goto LABEL_35;
      v19 = *(_QWORD *)(v24 + 8 * v20);
      if (v19)
        goto LABEL_19;
      v21 = v9 + 5;
      if (v9 + 5 >= v10)
        goto LABEL_35;
      v19 = *(_QWORD *)(v24 + 8 * v21);
      if (!v19)
      {
        v18 = v9 + 6;
        if (v9 + 6 >= v10)
          goto LABEL_35;
        v19 = *(_QWORD *)(v24 + 8 * v18);
        if (!v19)
        {
          v22 = v9 + 7;
          while (v10 != v22)
          {
            v19 = *(_QWORD *)(v24 + 8 * v22++);
            if (v19)
            {
              v18 = v22 - 1;
              goto LABEL_23;
            }
          }
LABEL_35:
          sub_1D7B08EF4();
          swift_bridgeObjectRelease();
          return *(_QWORD *)&v8;
        }
        goto LABEL_23;
      }
    }
    v18 = v21;
    goto LABEL_23;
  }
  sub_1D7B08EF4();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1D7B1B2F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char v7;
  double v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  int64_t v21;
  int64_t v22;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;

  v1 = -1 << *(_BYTE *)(a1 + 32);
  v2 = ~v1;
  v3 = -v1;
  v24 = a1 + 64;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  else
    v4 = -1;
  v25 = v2;
  v26 = v4 & *(_QWORD *)(a1 + 64);
  swift_bridgeObjectRetain();
  result = sub_1D7B1BC30();
  v6 = result;
  if ((v7 & 1) == 0)
  {
    v8 = *(double *)&result;
    v9 = 0;
    v10 = (unint64_t)(v25 + 64) >> 6;
    v11 = v26;
    while (v11)
    {
      v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v16 = v15 | (v9 << 6);
LABEL_12:
      v17 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v16);
      swift_bridgeObjectRetain();
      result = swift_bridgeObjectRelease();
      v14 = 0;
      if (v17)
      {
        while (1)
        {
          v12 = *(_QWORD *)(v17 + 16);
          if (v14 == v12)
            break;
          if (v14 >= v12)
            goto LABEL_39;
          v13 = v17 + 8 * v14++;
          if (v8 < *(double *)(v13 + 32))
            v8 = *(double *)(v13 + 32);
        }
      }
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
LABEL_39:
      __break(1u);
      return result;
    }
    if (v18 >= v10)
      goto LABEL_35;
    v19 = *(_QWORD *)(v24 + 8 * v18);
    if (v19)
    {
LABEL_23:
      v11 = (v19 - 1) & v19;
      v16 = __clz(__rbit64(v19)) + (v18 << 6);
      v9 = v18;
      goto LABEL_12;
    }
    v20 = v9 + 2;
    if (v9 + 2 >= v10)
      goto LABEL_35;
    v19 = *(_QWORD *)(v24 + 8 * v20);
    if (v19)
    {
LABEL_19:
      v18 = v20;
      goto LABEL_23;
    }
    v21 = v9 + 3;
    if (v9 + 3 >= v10)
      goto LABEL_35;
    v19 = *(_QWORD *)(v24 + 8 * v21);
    if (!v19)
    {
      v20 = v9 + 4;
      if (v9 + 4 >= v10)
        goto LABEL_35;
      v19 = *(_QWORD *)(v24 + 8 * v20);
      if (v19)
        goto LABEL_19;
      v21 = v9 + 5;
      if (v9 + 5 >= v10)
        goto LABEL_35;
      v19 = *(_QWORD *)(v24 + 8 * v21);
      if (!v19)
      {
        v18 = v9 + 6;
        if (v9 + 6 >= v10)
          goto LABEL_35;
        v19 = *(_QWORD *)(v24 + 8 * v18);
        if (!v19)
        {
          v22 = v9 + 7;
          while (v10 != v22)
          {
            v19 = *(_QWORD *)(v24 + 8 * v22++);
            if (v19)
            {
              v18 = v22 - 1;
              goto LABEL_23;
            }
          }
LABEL_35:
          sub_1D7B08EF4();
          swift_bridgeObjectRelease();
          return *(_QWORD *)&v8;
        }
        goto LABEL_23;
      }
    }
    v18 = v21;
    goto LABEL_23;
  }
  sub_1D7B08EF4();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1D7B1B57C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  double v18;
  double *v19;
  uint64_t v20;
  double v21;
  double v22;
  double *v23;
  double v24;
  double v25;
  uint64_t v26;

  sub_1D7ACD8D4();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D7B49504();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D7AAF5A8(a1, (uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1D7AF44A8((uint64_t)v5);
    return *(_QWORD *)(v1 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueRange);
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
  v11 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValuesByMetric);
  if (*(_QWORD *)(v11 + 16) && (v12 = sub_1D7AF4524((uint64_t)v9), (v13 & 1) != 0))
  {
    v14 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v12);
    swift_bridgeObjectRetain();
    v15 = *(_QWORD *)(v14 + 16);
    if (!v15)
    {
LABEL_6:
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  else
  {
    v14 = MEMORY[0x1E0DEE9D8];
    v15 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    if (!v15)
      goto LABEL_6;
  }
  v16 = *(double *)(v14 + 32);
  v17 = v15 - 1;
  if (v17)
  {
    v19 = (double *)(v14 + 40);
    v20 = v17;
    v18 = *(double *)(v14 + 32);
    do
    {
      v21 = *v19++;
      v22 = v21;
      if (v21 < v18)
        v18 = v22;
      --v20;
    }
    while (v20);
    v23 = (double *)(v14 + 40);
    do
    {
      v24 = *v23++;
      v25 = v24;
      if (v16 < v24)
        v16 = v25;
      --v17;
    }
    while (v17);
  }
  else
  {
    v18 = *(double *)(v14 + 32);
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  result = swift_bridgeObjectRelease();
  if (v18 <= v16)
    return *(_QWORD *)&v18;
  __break(1u);
  return result;
}

id sub_1D7B1B794()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BalanceCoordinate();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for BalanceCoordinate()
{
  return objc_opt_self();
}

uint64_t sub_1D7B1B878(uint64_t a1, CGFloat *a2)
{
  CGFloat v3;
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  _QWORD *v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t i;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  CGFloat y;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  _QWORD *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int64_t v52;
  CGAffineTransform v53;
  uint64_t v54;
  CGPoint v55;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = sub_1D7B49504();
  v49 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v48 = (char *)&v41 - v13;
  sub_1D7B08EFC();
  result = sub_1D7B4A8B4();
  v15 = (_QWORD *)result;
  v16 = 0;
  v50 = a1;
  v17 = *(_QWORD *)(a1 + 64);
  v44 = a1 + 64;
  v18 = 1 << *(_BYTE *)(a1 + 32);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v20 = v19 & v17;
  v45 = (unint64_t)(v18 + 63) >> 6;
  v46 = result + 64;
  v47 = (_QWORD *)result;
  v43 = v9;
  v42 = v12;
  if (!v20)
    goto LABEL_5;
LABEL_4:
  v51 = (v20 - 1) & v20;
  v52 = v16;
  for (i = __clz(__rbit64(v20)) | (v16 << 6); ; i = __clz(__rbit64(v23)) + (v24 << 6))
  {
    v27 = v49;
    v26 = v50;
    v28 = *(_QWORD *)(v49 + 72) * i;
    v29 = v48;
    (*(void (**)(char *, unint64_t, uint64_t))(v49 + 16))(v48, *(_QWORD *)(v50 + 48) + v28, v9);
    v30 = *(_QWORD *)(*(_QWORD *)(v26 + 56) + 8 * i);
    v31 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
    v31(v12, v29, v9);
    v32 = *(_QWORD *)(v30 + 16);
    if (v32)
    {
      v54 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      sub_1D7AA6010(0, v32, 0);
      v33 = 0;
      v34 = v54;
      do
      {
        v55.y = *(CGFloat *)(v30 + 8 * v33 + 32);
        v53.a = v3;
        v53.b = v4;
        v53.c = v5;
        v53.d = v6;
        v53.tx = v7;
        v53.ty = v8;
        v55.x = 0.0;
        y = CGPointApplyAffineTransform(v55, &v53).y;
        v54 = v34;
        v37 = *(_QWORD *)(v34 + 16);
        v36 = *(_QWORD *)(v34 + 24);
        if (v37 >= v36 >> 1)
        {
          sub_1D7AA6010(v36 > 1, v37 + 1, 1);
          v34 = v54;
        }
        ++v33;
        *(_QWORD *)(v34 + 16) = v37 + 1;
        *(CGFloat *)(v34 + 8 * v37 + 32) = y;
      }
      while (v32 != v33);
      swift_bridgeObjectRelease();
      v9 = v43;
      v12 = v42;
    }
    else
    {
      v34 = MEMORY[0x1E0DEE9D8];
    }
    v15 = v47;
    *(_QWORD *)(v46 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v31)(v15[6] + v28, v12, v9);
    *(_QWORD *)(v15[7] + 8 * i) = v34;
    v38 = v15[2];
    v39 = __OFADD__(v38, 1);
    v40 = v38 + 1;
    if (v39)
    {
      __break(1u);
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    v15[2] = v40;
    v20 = v51;
    v16 = v52;
    if (v51)
      goto LABEL_4;
LABEL_5:
    v22 = v16 + 1;
    if (__OFADD__(v16, 1))
      goto LABEL_31;
    if (v22 >= v45)
      return (uint64_t)v15;
    v23 = *(_QWORD *)(v44 + 8 * v22);
    v24 = v16 + 1;
    if (!v23)
    {
      v24 = v16 + 2;
      if (v16 + 2 >= v45)
        return (uint64_t)v15;
      v23 = *(_QWORD *)(v44 + 8 * v24);
      if (!v23)
      {
        v24 = v16 + 3;
        if (v16 + 3 >= v45)
          return (uint64_t)v15;
        v23 = *(_QWORD *)(v44 + 8 * v24);
        if (!v23)
          break;
      }
    }
LABEL_18:
    v51 = (v23 - 1) & v23;
    v52 = v24;
  }
  v25 = v16 + 4;
  if (v16 + 4 >= v45)
    return (uint64_t)v15;
  v23 = *(_QWORD *)(v44 + 8 * v25);
  if (v23)
  {
    v24 = v16 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    v24 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v24 >= v45)
      return (uint64_t)v15;
    v23 = *(_QWORD *)(v44 + 8 * v24);
    ++v25;
    if (v23)
      goto LABEL_18;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1D7B1BC30()
{
  _QWORD *v0;
  uint64_t i;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t result;
  unint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  int64_t v10;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;

  for (i = v0[5]; ; i = v4)
  {
    if (i)
    {
      v6 = v0[6];
      v7 = *(_QWORD *)(i + 16);
      if (v6 != v7)
        break;
    }
    v8 = v0[3];
    v9 = v0[4];
    if (v9)
    {
      v2 = (v9 - 1) & v9;
      v3 = __clz(__rbit64(v9)) | (v8 << 6);
      goto LABEL_3;
    }
    v10 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    v11 = (unint64_t)(v0[2] + 64) >> 6;
    v12 = v0[3];
    if (v10 >= v11)
      goto LABEL_27;
    v13 = v0[1];
    v14 = *(_QWORD *)(v13 + 8 * v10);
    if (!v14)
    {
      v15 = v8 + 2;
      v12 = v8 + 1;
      if (v8 + 2 >= v11)
        goto LABEL_27;
      v14 = *(_QWORD *)(v13 + 8 * v15);
      if (!v14)
      {
        v12 = v8 + 2;
        if (v8 + 3 >= v11)
          goto LABEL_27;
        v14 = *(_QWORD *)(v13 + 8 * (v8 + 3));
        if (v14)
        {
          v10 = v8 + 3;
          goto LABEL_16;
        }
        v15 = v8 + 4;
        v12 = v8 + 3;
        if (v8 + 4 >= v11)
          goto LABEL_27;
        v14 = *(_QWORD *)(v13 + 8 * v15);
        if (!v14)
        {
          v10 = v8 + 5;
          v12 = v8 + 4;
          if (v8 + 5 >= v11)
            goto LABEL_27;
          v14 = *(_QWORD *)(v13 + 8 * v10);
          if (!v14)
          {
            v12 = v11 - 1;
            v16 = v8 + 6;
            while (v11 != v16)
            {
              v14 = *(_QWORD *)(v13 + 8 * v16++);
              if (v14)
              {
                v10 = v16 - 1;
                goto LABEL_16;
              }
            }
LABEL_27:
            result = 0;
            v0[3] = v12;
            v0[4] = 0;
            return result;
          }
          goto LABEL_16;
        }
      }
      v10 = v15;
    }
LABEL_16:
    v2 = (v14 - 1) & v14;
    v3 = __clz(__rbit64(v14)) + (v10 << 6);
    v8 = v10;
LABEL_3:
    v4 = *(_QWORD *)(*(_QWORD *)(*v0 + 56) + 8 * v3);
    v0[3] = v8;
    v0[4] = v2;
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRelease();
    v0[5] = v4;
    v0[6] = 0;
  }
  if (v6 < v7)
  {
    result = *(_QWORD *)(i + 8 * v6 + 32);
    v0[6] = v6 + 1;
    return result;
  }
LABEL_29:
  __break(1u);
  return result;
}

id sub_1D7B1BDB8(uint64_t a1, unint64_t a2, uint64_t a3, char a4, uint64_t a5, double a6, double a7, double a8)
{
  char *v8;
  unint64_t v11;
  double *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  double v24;
  char *v25;
  double *v26;
  uint64_t v27;
  double v28;
  double v29;
  double *v30;
  double v31;
  double v32;
  double *v33;
  objc_super v35;

  v11 = a2;
  *(double *)&v8[OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_xValue] = a6;
  *(_QWORD *)&v8[OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValuesByMetric] = a1;
  v12 = (double *)&v8[OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueMedialRange];
  *v12 = a7;
  v12[1] = a8;
  v13 = &v8[OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueWarmupRange];
  *(_QWORD *)v13 = a2;
  *((_QWORD *)v13 + 1) = a3;
  v13[16] = a4 & 1;
  *(_QWORD *)&v8[OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_userInfo] = a5;
  swift_unknownObjectRetain();
  v14 = v8;
  v15 = swift_bridgeObjectRetain();
  v16 = sub_1D7B065C0(v15);
  swift_bridgeObjectRelease();
  if ((a4 & 1) != 0)
    goto LABEL_8;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    goto LABEL_24;
  while (1)
  {
    v18 = *(_QWORD *)(v16 + 16);
    v17 = *(_QWORD *)(v16 + 24);
    v19 = v17 >> 1;
    v20 = v18 + 1;
    if (v17 >> 1 <= v18)
    {
      v16 = (uint64_t)sub_1D7ABA964((_QWORD *)(v17 > 1), v18 + 1, 1, (_QWORD *)v16);
      v17 = *(_QWORD *)(v16 + 24);
      v19 = v17 >> 1;
    }
    *(_QWORD *)(v16 + 16) = v20;
    *(_QWORD *)(v16 + 8 * v18 + 32) = v11;
    v11 = v18 + 2;
    if (v19 < (uint64_t)(v18 + 2))
      v16 = (uint64_t)sub_1D7ABA964((_QWORD *)(v17 > 1), v18 + 2, 1, (_QWORD *)v16);
    *(_QWORD *)(v16 + 16) = v11;
    *(_QWORD *)(v16 + 8 * v20 + 32) = a3;
LABEL_8:
    v21 = *(_QWORD *)(v16 + 16);
    if (!v21)
    {
      swift_bridgeObjectRelease();
      v25 = &v14[OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueRange];
      *(_QWORD *)v25 = 0;
      *((_QWORD *)v25 + 1) = 0;
      v25[16] = 1;
      goto LABEL_22;
    }
    v22 = *(double *)(v16 + 32);
    v23 = v21 - 1;
    if (v23)
    {
      v26 = (double *)(v16 + 40);
      v27 = v23;
      v24 = *(double *)(v16 + 32);
      do
      {
        v28 = *v26++;
        v29 = v28;
        if (v28 < v24)
          v24 = v29;
        --v27;
      }
      while (v27);
      v30 = (double *)(v16 + 40);
      do
      {
        v31 = *v30++;
        v32 = v31;
        if (v22 < v31)
          v22 = v32;
        --v23;
      }
      while (v23);
    }
    else
    {
      v24 = *(double *)(v16 + 32);
    }
    swift_bridgeObjectRelease();
    if (v24 <= v22)
      break;
    __break(1u);
LABEL_24:
    v16 = (uint64_t)sub_1D7ABA964(0, *(_QWORD *)(v16 + 16) + 1, 1, (_QWORD *)v16);
  }
  v33 = (double *)&v14[OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueRange];
  *v33 = v24;
  v33[1] = v22;
  *((_BYTE *)v33 + 16) = 0;
LABEL_22:

  v35.receiver = v14;
  v35.super_class = (Class)type metadata accessor for BalanceCoordinate();
  return objc_msgSendSuper2(&v35, sel_init);
}

id sub_1D7B1BFE0(CGFloat *a1)
{
  uint64_t v1;
  CGFloat a;
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;
  uint64_t v10;
  CGFloat v11;
  CGFloat y;
  double v13;
  CGPoint v14;
  double v15;
  unint64_t v16;
  CGFloat v17;
  char v18;
  double v19;
  double v20;
  CGPoint v21;
  CGFloat v22;
  uint64_t v23;
  id v24;
  id v25;
  double v27;
  CGFloat v28;
  double v29;
  CGAffineTransform v30;
  CGPoint v31;
  CGPoint v32;
  CGPoint v33;
  CGPoint v34;
  CGPoint v35;

  v4 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  v7 = a1[4];
  v8 = a1[5];
  v9 = *(double *)(v1 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_xValue);
  v30.a = *a1;
  a = v30.a;
  v30.b = v4;
  v30.c = v5;
  v30.d = v6;
  v30.tx = v7;
  v30.ty = v8;
  v31.y = 0.0;
  v31.x = v9;
  *(_QWORD *)&v29 = *(_OWORD *)&CGPointApplyAffineTransform(v31, &v30);
  v10 = sub_1D7B1B878(*(_QWORD *)(v1 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValuesByMetric), a1);
  v32.y = *(CGFloat *)(v1 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueMedialRange);
  v11 = *(double *)(v1 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueMedialRange + 8);
  v30.a = a;
  v30.b = v4;
  v30.c = v5;
  v30.d = v6;
  v30.tx = v7;
  v30.ty = v8;
  v32.x = v9;
  y = CGPointApplyAffineTransform(v32, &v30).y;
  v30.a = a;
  v30.b = v4;
  v30.c = v5;
  v30.d = v6;
  v30.tx = v7;
  v30.ty = v8;
  v28 = v9;
  v33.x = v9;
  v33.y = v11;
  v13 = y;
  v14 = CGPointApplyAffineTransform(v33, &v30);
  if (v13 > v14.y)
  {
    v15 = v14.y;
    if (v14.y <= v13)
      goto LABEL_5;
    __break(1u);
  }
  v15 = v13;
  v13 = v14.y;
LABEL_5:
  v16 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueWarmupRange);
  v17 = *(double *)(v1 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueWarmupRange + 8);
  v18 = *(_BYTE *)(v1 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueWarmupRange + 16);
  if ((v18 & 1) == 0)
  {
    v27 = v15;
    v34.y = *(CGFloat *)(v1 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueWarmupRange);
    v30.a = a;
    v30.b = v4;
    v30.c = v5;
    v30.d = v6;
    v30.tx = v7;
    v30.ty = v8;
    v34.x = v28;
    v20 = CGPointApplyAffineTransform(v34, &v30).y;
    v30.a = a;
    v30.b = v4;
    v30.c = v5;
    v30.d = v6;
    v30.tx = v7;
    v30.ty = v8;
    v35.x = v28;
    v35.y = v17;
    v21 = CGPointApplyAffineTransform(v35, &v30);
    if (v20 > v21.y)
    {
      v22 = v21.y;
      if (v21.y <= v20)
      {
LABEL_11:
        v16 = *(_QWORD *)&v22;
        v17 = v20;
        v19 = v29;
        v15 = v27;
        goto LABEL_12;
      }
      __break(1u);
    }
    v22 = v20;
    v20 = v21.y;
    goto LABEL_11;
  }
  v19 = v29;
LABEL_12:
  v23 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_userInfo);
  v24 = objc_allocWithZone((Class)type metadata accessor for BalanceCoordinate());
  swift_unknownObjectRetain();
  v25 = sub_1D7B1BDB8(v10, v16, *(uint64_t *)&v17, v18, v23, v19, v15, v13);
  swift_unknownObjectRelease();
  return v25;
}

uint64_t sub_1D7B1C1F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1D7B4A530();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1D7B4A524();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1D7B1DD00(a1);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1D7B4A4F4();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

void sub_1D7B1C338(uint64_t a1, void *a2)
{
  char *v2;
  uint64_t v5;
  objc_class *v6;
  _BYTE *v7;
  id v8;
  char *v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  objc_super v23;
  objc_super v24;

  v5 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v2[OBJC_IVAR____TtC8HealthUI51ClinicalAuthorizationAccountsOverviewViewController_cancellables] = MEMORY[0x1E0DEE9D8];
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v2[OBJC_IVAR____TtC8HealthUI51ClinicalAuthorizationAccountsOverviewViewController_delegate] = a1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8HealthUI51ClinicalAuthorizationAccountsOverviewViewController_context] = a2;
  v6 = (objc_class *)type metadata accessor for ClinicalAccountsOverviewDataSourceAndDelegate();
  v7 = objc_allocWithZone(v6);
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v7[OBJC_IVAR____TtC8HealthUI45ClinicalAccountsOverviewDataSourceAndDelegate_accounts] = v5;
  v7[OBJC_IVAR____TtC8HealthUI45ClinicalAccountsOverviewDataSourceAndDelegate_healthAppIsAvailable] = 1;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8HealthUI45ClinicalAccountsOverviewDataSourceAndDelegate_context] = a2;
  v24.receiver = v7;
  v24.super_class = v6;
  v8 = a2;
  v9 = v2;
  swift_unknownObjectRetain();
  *(_QWORD *)&v9[OBJC_IVAR____TtC8HealthUI51ClinicalAuthorizationAccountsOverviewViewController_tableSourceAndDelegate] = objc_msgSendSuper2(&v24, sel_init);

  v10 = (void *)sub_1D7B4A38C();
  v11 = HKHealthRecordsAPILocalizedString(v10);

  if (v11)
  {
    v12 = (void *)sub_1D7B4A38C();
    v13 = HKHealthRecordsAPILocalizedString(v12);

    if (v13)
    {
      sub_1D7B4A3BC();

      sub_1D7AA787C(0, (unint64_t *)&qword_1F014DC00, (uint64_t (*)(uint64_t))sub_1D7AC5A20, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1D7B84630;
      v15 = objc_msgSend(v8, sel_source);
      v16 = objc_msgSend(v15, sel_name);

      v17 = sub_1D7B4A3BC();
      v19 = v18;

      *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v14 + 64) = sub_1D7AC5A74();
      *(_QWORD *)(v14 + 32) = v17;
      *(_QWORD *)(v14 + 40) = v19;
      sub_1D7B4A3C8();
      swift_bridgeObjectRelease();
      v20 = (void *)sub_1D7B4A38C();
      swift_bridgeObjectRelease();
      v23.receiver = v9;
      v23.super_class = (Class)type metadata accessor for ClinicalAuthorizationAccountsOverviewViewController();
      v21 = objc_msgSendSuper2(&v23, sel_initWithTitle_detailText_icon_adoptTableViewScrollView_, v11, v20, 0, 1);

      v22 = v21;
      objc_msgSend(v22, sel_setShouldMoveHeaderViewTitleToNavigationTitleWhenScrolledOffScreen_, 0);
      swift_unknownObjectWeakAssign();

      swift_unknownObjectRelease();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1D7B1C648()
{
  char *v0;
  uint64_t ObjectType;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  objc_class *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  objc_super v37;

  ObjectType = swift_getObjectType();
  sub_1D7AA787C(0, &qword_1F014DEC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v34 - v3;
  v5 = (objc_class *)type metadata accessor for ClinicalAuthorizationAccountsOverviewViewController();
  v37.receiver = v0;
  v37.super_class = v5;
  objc_msgSendSuper2(&v37, sel_viewDidLoad);
  v6 = objc_msgSend(v0, sel_navigationItem);
  objc_msgSend(v6, sel_setLargeTitleDisplayMode_, 2);

  v7 = objc_msgSend(v0, sel_navigationItem);
  v8 = (void *)sub_1D7B4A38C();
  v9 = HKHealthRecordsAPILocalizedString(v8);

  objc_msgSend(v7, sel_setTitle_, v9);
  v10 = objc_msgSend(v0, sel_navigationItem);
  v11 = (void *)sub_1D7B4A38C();
  v12 = HKHealthRecordsAPILocalizedString(v11);

  objc_msgSend(v10, sel_setAccessibilityLabel_, v12);
  v13 = objc_msgSend(v0, sel_navigationItem);
  v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithBarButtonSystemItem_target_action_, 1, v0, sel_cancelButtonPressed_);
  objc_msgSend(v13, sel_setRightBarButtonItem_, v14);

  v15 = objc_msgSend(v0, sel_navigationItem);
  v16 = (void *)sub_1D7B4A38C();
  v17 = HKHealthRecordsAPILocalizedString(v16);

  if (v17)
  {
    v18 = objc_msgSend((id)objc_opt_self(), sel_hk_backButtonWithTitle_, v17);

    objc_msgSend(v15, sel_setBackBarButtonItem_, v18);
    sub_1D7B1D22C();
    v19 = objc_msgSend((id)objc_opt_self(), sel_boldButton);
    v20 = (void *)objc_opt_self();
    v21 = v19;
    v22 = objc_msgSend(v20, sel_systemBlueColor);
    objc_msgSend(v21, sel_setTintColor_, v22);

    objc_msgSend(v21, sel_addTarget_action_forControlEvents_, v0, sel_nextButtonPressed_, 64);
    v23 = objc_msgSend(v0, sel_buttonTray);
    objc_msgSend(v23, sel_addButton_, v21);

    swift_unknownObjectWeakAssign();
    sub_1D7B1D444();

    v24 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8HealthUI51ClinicalAuthorizationAccountsOverviewViewController_context], sel_wrappedFlowManager);
    sub_1D7B4A770();
    swift_unknownObjectRelease();
    type metadata accessor for ClinicalAuthorizationFlowManager();
    swift_dynamicCast();
    v25 = v35;
    v26 = *(_QWORD *)&v35[OBJC_IVAR___HKClinicalAuthorizationFlowManager_accountsEvents];
    swift_retain();

    v36 = v26;
    v27 = swift_allocObject();
    *(_QWORD *)(v27 + 16) = v0;
    *(_QWORD *)(v27 + 24) = ObjectType;
    sub_1D7B1DB80();
    sub_1D7B1DBE4();
    v28 = v0;
    sub_1D7B49858();
    swift_release();
    swift_release();
    swift_beginAccess();
    sub_1D7AA787C(0, &qword_1F014FC20, MEMORY[0x1E0C95E00], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1D7B1DC2C();
    sub_1D7B49768();
    swift_endAccess();
    swift_release();
    v29 = sub_1D7B4A530();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v4, 1, 1, v29);
    sub_1D7B4A50C();
    v30 = v28;
    v31 = sub_1D7B4A500();
    v32 = (_QWORD *)swift_allocObject();
    v33 = MEMORY[0x1E0DF06E8];
    v32[2] = v31;
    v32[3] = v33;
    v32[4] = v30;
    sub_1D7B1C1F4((uint64_t)v4, (uint64_t)&unk_1F014FC38, (uint64_t)v32);
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1D7B1CB98(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v14;

  sub_1D7AA787C(0, &qword_1F014DEC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v14 - v6;
  v8 = sub_1D7B4A530();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  sub_1D7B4A50C();
  v9 = a2;
  v10 = sub_1D7B4A500();
  v11 = (_QWORD *)swift_allocObject();
  v12 = MEMORY[0x1E0DF06E8];
  v11[2] = v10;
  v11[3] = v12;
  v11[4] = v9;
  v11[5] = a3;
  sub_1D7B1C1F4((uint64_t)v7, (uint64_t)&unk_1F014FC58, (uint64_t)v11);
  return swift_release();
}

uint64_t sub_1D7B1CC94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[3] = a4;
  v5[4] = a5;
  v5[5] = sub_1D7B4A50C();
  v5[6] = sub_1D7B4A500();
  v5[7] = sub_1D7B4A4F4();
  v5[8] = v6;
  return swift_task_switch();
}

uint64_t sub_1D7B1CD04()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;

  if (qword_1F014CF20 != -1)
    swift_once();
  v1 = sub_1D7B4969C();
  __swift_project_value_buffer(v1, (uint64_t)qword_1F0154500);
  v2 = sub_1D7B49684();
  v3 = sub_1D7B4A5F0();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v10 = v5;
    *(_DWORD *)v4 = 136315138;
    v6 = sub_1D7B4AA94();
    v0[2] = sub_1D7AA4DE4(v6, v7, &v10);
    sub_1D7B4A704();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D7813000, v2, v3, "%s received accounts event, reloading accounts list", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D829FFF4](v5, -1, -1);
    MEMORY[0x1D829FFF4](v4, -1, -1);
  }

  v0[9] = sub_1D7B4A500();
  v0[10] = sub_1D7B4A4F4();
  v0[11] = v8;
  return swift_task_switch();
}

uint64_t sub_1D7B1CEC0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v1;
  *v1 = v0;
  v1[1] = sub_1D7B1CF14;
  return sub_1D7AF7CA0();
}

uint64_t sub_1D7B1CF14()
{
  swift_task_dealloc();
  return swift_task_switch();
}

id sub_1D7B1CF60()
{
  uint64_t v0;
  void *v1;
  id result;
  void *v3;

  v1 = *(void **)(v0 + 24);
  swift_release();
  result = objc_msgSend(v1, sel_tableView);
  if (result)
  {
    v3 = result;
    objc_msgSend(result, sel_reloadData);

    sub_1D7B1D444();
    return (id)swift_task_switch();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D7B1CFD8()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D7B1D008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[2] = a4;
  v4[3] = sub_1D7B4A50C();
  v4[4] = sub_1D7B4A500();
  v4[5] = sub_1D7B4A500();
  v4[6] = sub_1D7B4A4F4();
  v4[7] = v5;
  return swift_task_switch();
}

uint64_t sub_1D7B1D084()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v1;
  *v1 = v0;
  v1[1] = sub_1D7B1D0D8;
  return sub_1D7AF7CA0();
}

uint64_t sub_1D7B1D0D8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

id sub_1D7B1D124()
{
  uint64_t v0;
  void *v1;
  id result;
  void *v3;

  v1 = *(void **)(v0 + 16);
  swift_release();
  result = objc_msgSend(v1, sel_tableView);
  if (result)
  {
    v3 = result;
    objc_msgSend(result, sel_reloadData);

    sub_1D7B1D444();
    sub_1D7B4A4F4();
    return (id)swift_task_switch();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D7B1D1C8()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1D7B1D22C()
{
  char *v0;
  id v1;
  id v2;
  void *v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3D48]), sel_initWithFrame_style_, 2, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v0, sel_setTableView_, v1);

  v2 = objc_msgSend(v0, sel_tableView);
  if (!v2)
  {
    __break(1u);
    goto LABEL_9;
  }
  v3 = v2;
  v4 = *(_QWORD *)&v0[OBJC_IVAR____TtC8HealthUI51ClinicalAuthorizationAccountsOverviewViewController_tableSourceAndDelegate];
  objc_msgSend(v2, sel_setDataSource_, v4);

  v5 = objc_msgSend(v0, sel_tableView);
  if (!v5)
  {
LABEL_9:
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v6 = v5;
  objc_msgSend(v5, sel_setDelegate_, v4);

  v7 = objc_msgSend(v0, sel_traitCollection);
  v8 = objc_msgSend(v7, sel_userInterfaceIdiom);

  if (v8 == (id)6)
    return;
  v9 = objc_msgSend(v0, sel_view);
  if (!v9)
    goto LABEL_10;
  v10 = v9;
  v11 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
  objc_msgSend(v10, sel_setBackgroundColor_, v11);

  v15 = objc_msgSend(v0, sel_tableView);
  if (!v15)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v12 = objc_msgSend(v0, sel_view);
  if (v12)
  {
    v13 = v12;
    v14 = objc_msgSend(v12, sel_backgroundColor);

    objc_msgSend(v15, sel_setBackgroundColor_, v14);
    return;
  }
LABEL_12:
  __break(1u);
}

void sub_1D7B1D444()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;

  v1 = MEMORY[0x1D82A00A8](v0 + OBJC_IVAR____TtC8HealthUI51ClinicalAuthorizationAccountsOverviewViewController_nextButton);
  if (v1)
  {
    v8 = (id)v1;
    v2 = *(_QWORD *)(v0
                   + OBJC_IVAR____TtC8HealthUI51ClinicalAuthorizationAccountsOverviewViewController_tableSourceAndDelegate);
    v3 = OBJC_IVAR____TtC8HealthUI45ClinicalAccountsOverviewDataSourceAndDelegate_accounts;
    if (*(_QWORD *)(v2 + OBJC_IVAR____TtC8HealthUI45ClinicalAccountsOverviewDataSourceAndDelegate_accounts) >> 62)
    {
      swift_bridgeObjectRetain();
      sub_1D7B4A8A8();
      swift_bridgeObjectRelease();
    }
    v4 = (void *)sub_1D7B4A38C();
    v5 = HKHealthRecordsAPILocalizedString(v4);

    objc_msgSend(v8, sel_setTitle_forState_, v5, 0);
    if (*(_QWORD *)(v2 + v3) >> 62)
    {
      v7 = v8;
      swift_bridgeObjectRetain();
      sub_1D7B4A8A8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v6 = v8;
    }
    objc_msgSend(v8, sel_setEnabled_, 1);

  }
}

void sub_1D7B1D5C4()
{
  uint64_t v0;
  unint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;

  v1 = *(_QWORD *)(*(_QWORD *)(v0
                             + OBJC_IVAR____TtC8HealthUI51ClinicalAuthorizationAccountsOverviewViewController_tableSourceAndDelegate)
                 + OBJC_IVAR____TtC8HealthUI45ClinicalAccountsOverviewDataSourceAndDelegate_accounts);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_1D7B4A8A8();
    swift_bridgeObjectRelease();
    if (v8)
      goto LABEL_3;
  }
  else if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    v2 = *(void **)(v0 + OBJC_IVAR____TtC8HealthUI51ClinicalAuthorizationAccountsOverviewViewController_context);
    v3 = objc_msgSend(v2, sel_wrappedFlowManager);
    sub_1D7B4A770();
    swift_unknownObjectRelease();
    type metadata accessor for ClinicalAuthorizationFlowManager();
    swift_dynamicCast();
    v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8HealthUI51ClinicalAuthorizationAccountsOverviewViewController_delegate);
    v5 = objc_msgSend(objc_allocWithZone((Class)HKClinicalAuthorizationSettingsViewController), sel_initWithContext_style_, v2, 1);
    objc_msgSend(v5, sel_setDelegate_, v4);
    v6 = objc_msgSend(objc_allocWithZone((Class)HKClinicalAuthorizationIntroViewController), sel_initWithContext_viewController_, v2, v5);
    objc_msgSend(v6, sel_setDelegate_, v4);

    v7 = v6;
    sub_1D7B1D8D4((uint64_t)v7, 1);

    return;
  }
  sub_1D7AF82C8();
}

void sub_1D7B1D7B4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8HealthUI51ClinicalAuthorizationAccountsOverviewViewController_delegate);
  v2 = (void *)objc_opt_self();
  v3 = (void *)sub_1D7B4A38C();
  v4 = objc_msgSend(v2, sel_hk_error_description_, 7, v3);

  v5 = (id)sub_1D7B49024();
  objc_msgSend(v1, sel_promptControllerDidFinish_error_, v0, v5);

}

void sub_1D7B1D8D4(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  NSObject *oslog;

  v3 = v2;
  v6 = objc_msgSend(v3, sel_navigationController);
  if (v6)
  {
    oslog = v6;
    -[NSObject pushViewController:animated:](v6, sel_pushViewController_animated_, a1, a2 & 1);
  }
  else
  {
    if (qword_1F014CF20 != -1)
      swift_once();
    v7 = sub_1D7B4969C();
    __swift_project_value_buffer(v7, (uint64_t)qword_1F0154500);
    oslog = sub_1D7B49684();
    v8 = sub_1D7B4A614();
    if (os_log_type_enabled(oslog, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_1D7813000, oslog, v8, "ClinicalAuthorizationAccountsOverviewViewController tasked to push but doesn't live in a navigation controller", v9, 2u);
      MEMORY[0x1D829FFF4](v9, -1, -1);
    }
  }

}

id sub_1D7B1DA9C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClinicalAuthorizationAccountsOverviewViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ClinicalAuthorizationAccountsOverviewViewController()
{
  return objc_opt_self();
}

uint64_t sub_1D7B1DB54()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1D7B1DB78(uint64_t a1)
{
  uint64_t v1;

  return sub_1D7B1CB98(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1D7B1DB80()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F014FC10)
  {
    type metadata accessor for HKHealthRecordsAccountsEvent(255);
    v0 = sub_1D7B497A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F014FC10);
  }
}

unint64_t sub_1D7B1DBE4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F014FC18;
  if (!qword_1F014FC18)
  {
    sub_1D7B1DB80();
    result = MEMORY[0x1D829FF28](MEMORY[0x1E0C95F48], v1);
    atomic_store(result, (unint64_t *)&qword_1F014FC18);
  }
  return result;
}

unint64_t sub_1D7B1DC2C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F014FC28;
  if (!qword_1F014FC28)
  {
    sub_1D7AA787C(255, &qword_1F014FC20, MEMORY[0x1E0C95E00], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1D829FF28](MEMORY[0x1E0DEAF58], v1);
    atomic_store(result, &qword_1F014FC28);
  }
  return result;
}

uint64_t sub_1D7B1DC8C()
{
  return objectdestroy_3Tm();
}

uint64_t sub_1D7B1DC94(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1D7AC78A8;
  return sub_1D7B1D008(a1, v4, v5, v6);
}

uint64_t sub_1D7B1DD00(uint64_t a1)
{
  uint64_t v2;

  sub_1D7AA787C(0, &qword_1F014DEC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D7B1DD54()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D7B1DD78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1D7AB7968;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1F014FC40 + dword_1F014FC40))(a1, v4);
}

uint64_t sub_1D7B1DDE8()
{
  return objectdestroy_3Tm();
}

uint64_t objectdestroy_3Tm()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1D7B1DE28(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1D7AB7968;
  return sub_1D7B1CC94(a1, v4, v5, v7, v6);
}

id sub_1D7B1DEA0(void *a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  id v26;
  void *v27;
  void (*v28)(char *, char *, uint64_t);
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  id v31;
  void *v32;
  char *v33;
  void *v34;
  id v35;
  char *v36;
  id result;
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  id v48;
  id v49;
  void *v50;
  void *v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  char *v64;
  void *v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  _QWORD aBlock[7];

  v66 = a2;
  v3 = sub_1D7B48D78();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v69 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D7B48DE4();
  v67 = *(_QWORD *)(v6 - 8);
  v68 = v6;
  v7 = *(_QWORD *)(v67 + 64);
  v8 = MEMORY[0x1E0C80A78](v6);
  v64 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v71 = (char *)&v58 - v9;
  sub_1D7AC3FB0();
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v58 - v14;
  v16 = sub_1D7B49198();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x1E0C80A78](v16);
  v63 = (uint64_t *)((char *)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = MEMORY[0x1E0C80A78](v18);
  v70 = (char *)&v58 - v21;
  v22 = MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v58 - v23;
  MEMORY[0x1E0C80A78](v22);
  v72 = (char *)&v58 - v25;
  v26 = objc_msgSend(a1, sel_startDate);
  if (!v26)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
    goto LABEL_10;
  }
  v27 = v26;
  v61 = v4;
  v62 = v3;
  sub_1D7B49168();

  v28 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  v28(v15, v24, v16);
  v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  v29(v15, 0, 1, v16);
  v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (v30(v15, 1, v16) == 1)
  {
LABEL_10:
    v57 = (uint64_t)v15;
LABEL_13:
    sub_1D7AA79D0(v57);
    return (id)MEMORY[0x1E0DEE9D8];
  }
  v28(v72, v15, v16);
  v31 = objc_msgSend(a1, sel_endDate);
  if (!v31)
  {
    v29(v13, 1, 1, v16);
    goto LABEL_12;
  }
  v32 = v31;
  sub_1D7B49168();

  v28(v13, v24, v16);
  v29(v13, 0, 1, v16);
  if (v30(v13, 1, v16) == 1)
  {
LABEL_12:
    (*(void (**)(char *, uint64_t))(v17 + 8))(v72, v16);
    v57 = (uint64_t)v13;
    goto LABEL_13;
  }
  v33 = v70;
  v28(v70, v13, v16);
  v34 = (void *)objc_opt_self();
  v66 = objc_msgSend(v34, sel_configurationForZoomLevel_, v66);
  v35 = objc_msgSend(v66, sel_seriesPointIntervalComponentsAtResolution_, 0);
  v36 = v71;
  sub_1D7B48DB4();

  result = objc_msgSend(v34, sel_defaultCalendar);
  v60 = result;
  if (result)
  {
    v38 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
    v38(v24, v72, v16);
    v38((char *)v63, v33, v16);
    sub_1D7B48D54();
    v39 = swift_allocObject();
    *(_QWORD *)(v39 + 16) = MEMORY[0x1E0DEE9D8];
    v63 = (uint64_t *)(v39 + 16);
    v59 = sub_1D7B48D30();
    v58 = sub_1D7B48DA8();
    v41 = v67;
    v40 = v68;
    v42 = v64;
    (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v64, v36, v68);
    v43 = (*(unsigned __int8 *)(v41 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
    v44 = (v7 + v43 + 7) & 0xFFFFFFFFFFFFFFF8;
    v45 = swift_allocObject();
    v46 = v65;
    *(_QWORD *)(v45 + 16) = v65;
    (*(void (**)(unint64_t, char *, uint64_t))(v41 + 32))(v45 + v43, v42, v40);
    *(_QWORD *)(v45 + v44) = v39;
    aBlock[4] = sub_1D7B1EB70;
    aBlock[5] = v45;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D7B1E54C;
    aBlock[3] = &block_descriptor_11;
    v47 = _Block_copy(aBlock);
    v48 = v46;
    swift_retain();
    swift_release();
    v50 = (void *)v59;
    v49 = v60;
    v51 = (void *)v58;
    objc_msgSend(v60, sel_hk_enumerateDateInterval_byDateComponents_block_, v59, v58, v47);
    _Block_release(v47);

    v52 = v63;
    swift_beginAccess();
    v53 = *v52;
    if ((unint64_t)*v52 >> 62)
    {
      sub_1D7ACBA64();
      swift_bridgeObjectRetain();
      v54 = sub_1D7B4A89C();
    }
    else
    {
      swift_bridgeObjectRetain_n();
      sub_1D7B4A944();
      sub_1D7ACBA64();
      v54 = v53;
    }
    v55 = v61;

    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v69, v62);
    (*(void (**)(char *, uint64_t))(v67 + 8))(v71, v68);
    v56 = *(void (**)(char *, uint64_t))(v17 + 8);
    v56(v70, v16);
    v56(v72, v16);
    swift_release();
    return (id)v54;
  }
  __break(1u);
  return result;
}

void sub_1D7B1E498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v6;
  id v7;

  v6 = sub_1D7B1E67C();
  swift_beginAccess();
  v7 = v6;
  MEMORY[0x1D829E3EC]();
  if (*(_QWORD *)((*(_QWORD *)(a5 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(a5 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    sub_1D7B4A4C4();
  sub_1D7B4A4DC();
  sub_1D7B4A4B8();
  swift_endAccess();

}

uint64_t sub_1D7B1E54C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t);
  uint64_t v11;

  v5 = sub_1D7B48D78();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void (**)(char *, uint64_t))(a1 + 32);
  sub_1D7B48D3C();
  swift_retain();
  v9(v8, a3);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

id sub_1D7B1E67C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  double v9;
  double v10;
  void *v11;
  id v12;
  void *v13;
  void (*v14)(char *, uint64_t);
  void *v15;
  id v16;
  uint64_t v18;
  uint64_t v19;

  v1 = sub_1D7B49198();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend((id)objc_opt_self(), sel_countUnit);
  v19 = v0;
  v6 = sub_1D7B23030();
  v7 = sub_1D7B231AC();
  v8 = objc_msgSend(objc_allocWithZone((Class)HKInteractiveChartSinglePointData), sel_init);
  objc_msgSend(v8, sel_setUnit_, v5);
  if (v6)
    objc_msgSend(v6, sel_doubleValueForUnit_, v5);
  else
    v9 = -1.79769313e308;
  objc_msgSend(v8, sel_setMinValue_, v9);
  if (v7)
    objc_msgSend(v7, sel_doubleValueForUnit_, v5);
  else
    v10 = 1.79769313e308;
  objc_msgSend(v8, sel_setMaxValue_, v10);
  objc_msgSend(v8, sel_setRepresentsRange_, 1);
  objc_msgSend(v8, sel_setRecordCount_, 1);
  v11 = (void *)sub_1D7B48DA8();
  objc_msgSend(v8, sel_setStatisticsInterval_, v11);

  v12 = objc_msgSend(objc_allocWithZone((Class)HKQuantityTypeDataSourceValue), sel_init);
  objc_msgSend(v12, sel_setMinQuantity_, v6);
  objc_msgSend(v12, sel_setMaxQuantity_, v7);
  sub_1D7B48D60();
  v13 = (void *)sub_1D7B49150();
  v14 = *(void (**)(char *, uint64_t))(v2 + 8);
  v14(v4, v1);
  objc_msgSend(v12, sel_setStartDate_, v13);

  sub_1D7B48D48();
  v15 = (void *)sub_1D7B49150();
  v14(v4, v1);
  objc_msgSend(v12, sel_setEndDate_, v15);

  v16 = objc_msgSend(objc_allocWithZone((Class)HKHealthChartPoint), sel_initWithDataSourceValue_options_unit_displayType_, v12, 12, v5, *(_QWORD *)(v19 + OBJC_IVAR____TtC8HealthUI48BalanceClassificationDateRangeDataSourceDelegate_baseDisplayType));
  objc_msgSend(v16, sel_setUserInfo_, v8);

  return v16;
}

id sub_1D7B1E968()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BalanceClassificationDateRangeDataSourceDelegate();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D7B1E9FC()
{
  return type metadata accessor for BalanceClassificationDateRangeDataSourceDelegate();
}

uint64_t type metadata accessor for BalanceClassificationDateRangeDataSourceDelegate()
{
  uint64_t result;

  result = qword_1F014FC98;
  if (!qword_1F014FC98)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D7B1EA40()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D7B49588();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1D7B1EABC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D7B1EAE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1D7B48DE4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

void sub_1D7B1EB70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(sub_1D7B48DE4() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  sub_1D7B1E498(a1, a2, *(_QWORD *)(v2 + 16), v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

double CALayer.center.getter()
{
  void *v0;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double MidX;
  CGRect v7;
  CGRect v8;

  objc_msgSend(v0, sel_frame);
  x = v7.origin.x;
  y = v7.origin.y;
  width = v7.size.width;
  height = v7.size.height;
  MidX = CGRectGetMidX(v7);
  v8.origin.x = x;
  v8.origin.y = y;
  v8.size.width = width;
  v8.size.height = height;
  CGRectGetMidY(v8);
  return MidX;
}

void sub_1D7B1EC58(id *a1@<X0>, CGFloat *a2@<X8>)
{
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGFloat MidX;
  CGFloat MidY;
  CGRect v9;
  CGRect v10;

  objc_msgSend(*a1, sel_frame);
  x = v9.origin.x;
  y = v9.origin.y;
  width = v9.size.width;
  height = v9.size.height;
  MidX = CGRectGetMidX(v9);
  v10.origin.x = x;
  v10.origin.y = y;
  v10.size.width = width;
  v10.size.height = height;
  MidY = CGRectGetMidY(v10);
  *a2 = MidX;
  a2[1] = MidY;
}

id CALayer.center.setter(double a1, double a2)
{
  void *v2;
  double v5;
  double v6;

  objc_msgSend(v2, sel_frame);
  return objc_msgSend(v2, sel_setFrame_, a1 - v5 * 0.5, a2 - v6 * 0.5);
}

id (*CALayer.center.modify(uint64_t a1))(uint64_t a1)
{
  void *v1;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGFloat MidX;
  CGFloat MidY;
  CGRect v10;
  CGRect v11;

  *(_QWORD *)(a1 + 16) = v1;
  objc_msgSend(v1, sel_frame);
  x = v10.origin.x;
  y = v10.origin.y;
  width = v10.size.width;
  height = v10.size.height;
  MidX = CGRectGetMidX(v10);
  v11.origin.x = x;
  v11.origin.y = y;
  v11.size.width = width;
  v11.size.height = height;
  MidY = CGRectGetMidY(v11);
  *(CGFloat *)a1 = MidX;
  *(CGFloat *)(a1 + 8) = MidY;
  return sub_1D7B1EDA0;
}

id sub_1D7B1EDA0(uint64_t a1)
{
  void *v1;
  double v2;
  double v3;
  double v4;
  double v5;

  v1 = *(void **)(a1 + 16);
  v2 = *(double *)a1;
  v3 = *(double *)(a1 + 8);
  objc_msgSend(v1, sel_frame);
  return objc_msgSend(v1, sel_setFrame_, v2 - v4 * 0.5, v3 - v5 * 0.5);
}

id sub_1D7B1EDFC(double *a1, id *a2)
{
  double v2;
  double v3;
  id v4;
  double v5;
  double v6;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  objc_msgSend(*a2, sel_frame);
  return objc_msgSend(v4, sel_setFrame_, v2 - v5 * 0.5, v3 - v6 * 0.5);
}

uint64_t sub_1D7B1EE54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, uint64_t, uint64_t);
  int v17;
  id v18;
  uint64_t v19;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void (*v27)(char *, uint64_t);
  os_log_t v28;
  uint64_t v29;
  _QWORD v30[2];
  os_log_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v1 = v0;
  v2 = sub_1D7B4969C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D7B49504();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)v30 - v12;
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v30 - v14;
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v16((char *)v30 - v14, v1, v6);
  v17 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v15, v6);
  if (v17 == *MEMORY[0x1E0D28FD8])
  {
    v34 = 0;
    v35 = 0xE000000000000000;
    sub_1D7B4A7DC();
    swift_bridgeObjectRelease();
    if (qword_1F014CF90 == -1)
      goto LABEL_15;
    goto LABEL_21;
  }
  if (v17 == *MEMORY[0x1E0D28FB8])
  {
    v34 = 0;
    v35 = 0xE000000000000000;
    sub_1D7B4A7DC();
    swift_bridgeObjectRelease();
    if (qword_1F014CF90 == -1)
      goto LABEL_15;
    goto LABEL_21;
  }
  if (v17 == *MEMORY[0x1E0D28FB0])
  {
    v34 = 0;
    v35 = 0xE000000000000000;
    sub_1D7B4A7DC();
    swift_bridgeObjectRelease();
    if (qword_1F014CF90 == -1)
      goto LABEL_15;
    goto LABEL_21;
  }
  if (v17 == *MEMORY[0x1E0D28FC0])
  {
    v34 = 0;
    v35 = 0xE000000000000000;
    sub_1D7B4A7DC();
    swift_bridgeObjectRelease();
    if (qword_1F014CF90 == -1)
      goto LABEL_15;
    goto LABEL_21;
  }
  if (v17 == *MEMORY[0x1E0D28FA8])
  {
    v34 = 0;
    v35 = 0xE000000000000000;
    sub_1D7B4A7DC();
    swift_bridgeObjectRelease();
    if (qword_1F014CF90 == -1)
    {
LABEL_15:
      v18 = (id)qword_1F0154598;
      v19 = sub_1D7B48F7C();

      return v19;
    }
LABEL_21:
    swift_once();
    goto LABEL_15;
  }
  sub_1D7B4966C();
  v16(v13, v1, v6);
  v21 = sub_1D7B49684();
  v22 = sub_1D7B4A614();
  v33 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    v23 = swift_slowAlloc();
    v31 = v21;
    v24 = v23;
    v32 = swift_slowAlloc();
    v34 = v32;
    *(_DWORD *)v24 = 136446466;
    v30[0] = v24 + 4;
    v36 = sub_1D7AA4DE4(0xD000000000000016, 0x80000001D7BA7CB0, &v34);
    v30[1] = &v37;
    sub_1D7B4A704();
    *(_WORD *)(v24 + 12) = 2080;
    v30[0] = v24 + 14;
    v16(v10, (uint64_t)v13, v6);
    v25 = sub_1D7B4A3E0();
    v36 = sub_1D7AA4DE4(v25, v26, &v34);
    sub_1D7B4A704();
    swift_bridgeObjectRelease();
    v27 = *(void (**)(char *, uint64_t))(v7 + 8);
    v27(v13, v6);
    v28 = v31;
    _os_log_impl(&dword_1D7813000, v31, (os_log_type_t)v33, "[%{public}s] unknown sleeping sample data type: %s", (uint8_t *)v24, 0x16u);
    v29 = v32;
    swift_arrayDestroy();
    MEMORY[0x1D829FFF4](v29, -1, -1);
    MEMORY[0x1D829FFF4](v24, -1, -1);

  }
  else
  {
    v27 = *(void (**)(char *, uint64_t))(v7 + 8);
    v27(v13, v6);

  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v27(v15, v6);
  return 0;
}

uint64_t sub_1D7B1F404()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  uint64_t v13;

  sub_1D7AAF550();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1D7B83E30;
  sub_1D7B1EE54();
  v1 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v2 = (void *)sub_1D7B4A38C();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_initWithString_, v2);

  sub_1D7B1F618();
  v4 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v5 = (void *)sub_1D7B4A38C();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v4, sel_initWithString_, v5);

  v7 = objc_msgSend(objc_allocWithZone((Class)HKInfographicContentItem), sel_initWithTitle_description_, v3, v6);
  *(_QWORD *)(v0 + 32) = v7;
  v13 = v0;
  sub_1D7B4A4B8();
  v8 = sub_1D7B200B8();
  if (v8)
  {
    v9 = v8;
    MEMORY[0x1D829E3EC]();
    if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1D7B4A4C4();
    sub_1D7B4A4DC();
    sub_1D7B4A4B8();

  }
  v10 = sub_1D7B20258();
  if (v10)
  {
    v11 = v10;
    MEMORY[0x1D829E3EC]();
    if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1D7B4A4C4();
    sub_1D7B4A4DC();
    sub_1D7B4A4B8();

  }
  return v13;
}

uint64_t sub_1D7B1F618()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, uint64_t, uint64_t);
  int v17;
  id v18;
  uint64_t v19;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void (*v27)(char *, uint64_t);
  os_log_t v28;
  uint64_t v29;
  _QWORD v30[2];
  os_log_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v1 = v0;
  v2 = sub_1D7B4969C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D7B49504();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)v30 - v12;
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v30 - v14;
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v16((char *)v30 - v14, v1, v6);
  v17 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v15, v6);
  if (v17 == *MEMORY[0x1E0D28FD8])
  {
    v34 = 0;
    v35 = 0xE000000000000000;
    sub_1D7B4A7DC();
    swift_bridgeObjectRelease();
    if (qword_1F014CF90 == -1)
      goto LABEL_15;
    goto LABEL_21;
  }
  if (v17 == *MEMORY[0x1E0D28FB8])
  {
    v34 = 0;
    v35 = 0xE000000000000000;
    sub_1D7B4A7DC();
    swift_bridgeObjectRelease();
    if (qword_1F014CF90 == -1)
      goto LABEL_15;
    goto LABEL_21;
  }
  if (v17 == *MEMORY[0x1E0D28FB0])
  {
    v34 = 0;
    v35 = 0xE000000000000000;
    sub_1D7B4A7DC();
    swift_bridgeObjectRelease();
    if (qword_1F014CF90 == -1)
      goto LABEL_15;
    goto LABEL_21;
  }
  if (v17 == *MEMORY[0x1E0D28FC0])
  {
    v34 = 0;
    v35 = 0xE000000000000000;
    sub_1D7B4A7DC();
    swift_bridgeObjectRelease();
    if (qword_1F014CF90 == -1)
      goto LABEL_15;
    goto LABEL_21;
  }
  if (v17 == *MEMORY[0x1E0D28FA8])
  {
    v34 = 0;
    v35 = 0xE000000000000000;
    sub_1D7B4A7DC();
    swift_bridgeObjectRelease();
    if (qword_1F014CF90 == -1)
    {
LABEL_15:
      v18 = (id)qword_1F0154598;
      v19 = sub_1D7B48F7C();

      return v19;
    }
LABEL_21:
    swift_once();
    goto LABEL_15;
  }
  sub_1D7B4966C();
  v16(v13, v1, v6);
  v21 = sub_1D7B49684();
  v22 = sub_1D7B4A614();
  v33 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    v23 = swift_slowAlloc();
    v31 = v21;
    v24 = v23;
    v32 = swift_slowAlloc();
    v34 = v32;
    *(_DWORD *)v24 = 136446466;
    v30[0] = v24 + 4;
    v36 = sub_1D7AA4DE4(0xD000000000000016, 0x80000001D7BA7CB0, &v34);
    v30[1] = &v37;
    sub_1D7B4A704();
    *(_WORD *)(v24 + 12) = 2080;
    v30[0] = v24 + 14;
    v16(v10, (uint64_t)v13, v6);
    v25 = sub_1D7B4A3E0();
    v36 = sub_1D7AA4DE4(v25, v26, &v34);
    sub_1D7B4A704();
    swift_bridgeObjectRelease();
    v27 = *(void (**)(char *, uint64_t))(v7 + 8);
    v27(v13, v6);
    v28 = v31;
    _os_log_impl(&dword_1D7813000, v31, (os_log_type_t)v33, "[%{public}s] unknown sleeping sample data type: %s", (uint8_t *)v24, 0x16u);
    v29 = v32;
    swift_arrayDestroy();
    MEMORY[0x1D829FFF4](v29, -1, -1);
    MEMORY[0x1D829FFF4](v24, -1, -1);

  }
  else
  {
    v27 = *(void (**)(char *, uint64_t))(v7 + 8);
    v27(v13, v6);

  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v27(v15, v6);
  return 0;
}

uint64_t sub_1D7B1FBC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  id v7;
  uint64_t v8;
  uint64_t v10;
  unint64_t v11;

  v1 = v0;
  v2 = sub_1D7B49504();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == *MEMORY[0x1E0D28FD8])
  {
    v10 = 0;
    v11 = 0xE000000000000000;
    sub_1D7B4A7DC();
    swift_bridgeObjectRelease();
    if (qword_1F014CF90 == -1)
      goto LABEL_9;
    goto LABEL_12;
  }
  if (v6 == *MEMORY[0x1E0D28FB8])
  {
    v10 = 0;
    v11 = 0xE000000000000000;
    sub_1D7B4A7DC();
    swift_bridgeObjectRelease();
    if (qword_1F014CF90 == -1)
      goto LABEL_9;
    goto LABEL_12;
  }
  if (v6 != *MEMORY[0x1E0D28FC0])
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0;
  }
  v10 = 0;
  v11 = 0xE000000000000000;
  sub_1D7B4A7DC();
  swift_bridgeObjectRelease();
  if (qword_1F014CF90 != -1)
LABEL_12:
    swift_once();
LABEL_9:
  v7 = (id)qword_1F0154598;
  v8 = sub_1D7B48F7C();

  return v8;
}

uint64_t sub_1D7B1FE40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  id v7;
  uint64_t v8;
  uint64_t v10;
  unint64_t v11;

  v1 = v0;
  v2 = sub_1D7B49504();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == *MEMORY[0x1E0D28FD8])
  {
    v10 = 0;
    v11 = 0xE000000000000000;
    sub_1D7B4A7DC();
    swift_bridgeObjectRelease();
    if (qword_1F014CF90 == -1)
      goto LABEL_9;
    goto LABEL_12;
  }
  if (v6 == *MEMORY[0x1E0D28FB8])
  {
    v10 = 0;
    v11 = 0xE000000000000000;
    sub_1D7B4A7DC();
    swift_bridgeObjectRelease();
    if (qword_1F014CF90 == -1)
      goto LABEL_9;
    goto LABEL_12;
  }
  if (v6 != *MEMORY[0x1E0D28FB0])
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0;
  }
  v10 = 0;
  v11 = 0xE000000000000000;
  sub_1D7B4A7DC();
  swift_bridgeObjectRelease();
  if (qword_1F014CF90 != -1)
LABEL_12:
    swift_once();
LABEL_9:
  v7 = (id)qword_1F0154598;
  v8 = sub_1D7B48F7C();

  return v8;
}

id sub_1D7B200B8()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  sub_1D7B1FBC8();
  v1 = v0;
  if (v0)
  {
    sub_1D7B4A7DC();
    swift_bridgeObjectRelease();
    if (qword_1F014CF90 != -1)
      swift_once();
    v2 = (id)qword_1F0154598;
    sub_1D7B48F7C();

    v3 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    v4 = (void *)sub_1D7B4A38C();
    swift_bridgeObjectRelease();
    v5 = objc_msgSend(v3, sel_initWithString_, v4, 0xE000000000000000);

    v6 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    v7 = (void *)sub_1D7B4A38C();
    swift_bridgeObjectRelease();
    v8 = objc_msgSend(v6, sel_initWithString_, v7);

    v1 = objc_msgSend(objc_allocWithZone((Class)HKInfographicContentItem), sel_initWithTitle_description_, v5, v8);
  }
  return v1;
}

id sub_1D7B20258()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  sub_1D7B1FE40();
  v1 = v0;
  if (v0)
  {
    sub_1D7B4A7DC();
    swift_bridgeObjectRelease();
    if (qword_1F014CF90 != -1)
      swift_once();
    v2 = (id)qword_1F0154598;
    sub_1D7B48F7C();

    v3 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    v4 = (void *)sub_1D7B4A38C();
    swift_bridgeObjectRelease();
    v5 = objc_msgSend(v3, sel_initWithString_, v4, 0xE000000000000000);

    v6 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    v7 = (void *)sub_1D7B4A38C();
    swift_bridgeObjectRelease();
    v8 = objc_msgSend(v6, sel_initWithString_, v7);

    v1 = objc_msgSend(objc_allocWithZone((Class)HKInfographicContentItem), sel_initWithTitle_description_, v5, v8);
  }
  return v1;
}

Swift::Bool __swiftcall EnableSmallCapsForUnits()()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  if (qword_1F014CF90 != -1)
    swift_once();
  v0 = (id)qword_1F0154598;
  v1 = sub_1D7B48F7C();
  v3 = v2;

  if (v1 == 49 && v3 == 0xE100000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1D7B4A938();
    swift_bridgeObjectRelease();
    return v5 & 1;
  }
}

uint64_t sub_1D7B204FC(uint64_t a1, uint64_t a2, char a3, unint64_t a4, _QWORD *a5)
{
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  BOOL v14;
  uint64_t v15;
  double *v16;
  int v17;
  double v18;
  double v19;
  double v20;
  double v21;

  v9 = a3 & 1;
  if (a4 >> 62)
    goto LABEL_20;
  v10 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v10; v10 = sub_1D7B4A8A8())
  {
    v11 = 4;
    while (1)
    {
      v12 = v11 - 4;
      if ((a4 & 0xC000000000000001) == 0)
        break;
      v13 = (char *)MEMORY[0x1D829E758](v11 - 4, a4);
      v14 = __OFADD__(v12, 1);
      v15 = v11 - 3;
      if (v14)
        goto LABEL_18;
LABEL_11:
      v16 = (double *)&v13[*a5];
      v17 = *((unsigned __int8 *)v16 + 16);
      if (((v9 | v17) & 1) != 0)
      {
        v9 = v9 ^ 1 | v17;
        a1 = *(uint64_t *)v16;
        a2 = *((uint64_t *)v16 + 1);

      }
      else
      {
        v19 = *v16;
        v18 = v16[1];

        v20 = *(double *)&a2;
        v21 = *(double *)&a1;
        if (v19 < *(double *)&a1)
          v21 = v19;
        if (v18 >= *(double *)&a2)
          v20 = v18;
        if (v21 > v20)
          goto LABEL_19;
        v9 = 0;
        *(double *)&a1 = v21;
        *(double *)&a2 = v20;
      }
      ++v11;
      if (v15 == v10)
        goto LABEL_21;
    }
    v13 = (char *)*(id *)(a4 + 8 * v11);
    v14 = __OFADD__(v12, 1);
    v15 = v11 - 3;
    if (!v14)
      goto LABEL_11;
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_21:
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *sub_1D7B20650(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v8;
  char v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;

  if (a1 >> 62)
    goto LABEL_19;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v2)
  {
    while (1)
    {
      v3 = 0;
      v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      while ((a1 & 0xC000000000000001) == 0)
      {
        v6 = v3 + 1;
        if (__OFADD__(v3, 1))
          goto LABEL_18;
        v10 = *(_QWORD *)(a1 + 32 + 8 * v3) + OBJC_IVAR____TtC8HealthUI25StateOfMindCoordinateInfo_dailyValenceRange;
        if ((*(_BYTE *)(v10 + 16) & 1) == 0)
        {
          v7 = *(double *)v10;
          v8 = *(double *)(v10 + 8);
LABEL_13:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v4 = sub_1D7ABA504(0, v4[2] + 1, 1, v4);
          v12 = v4[2];
          v11 = v4[3];
          if (v12 >= v11 >> 1)
            v4 = sub_1D7ABA504((_QWORD *)(v11 > 1), v12 + 1, 1, v4);
          v4[2] = v12 + 1;
          *(double *)&v4[v12 + 4] = (v7 + v8) * 0.5;
        }
LABEL_5:
        v3 = v6;
        if (v6 == v2)
          goto LABEL_21;
      }
      v5 = MEMORY[0x1D829E758](v3, a1);
      v6 = v3 + 1;
      if (!__OFADD__(v3, 1))
        break;
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      swift_bridgeObjectRetain();
      v2 = sub_1D7B4A8A8();
      if (!v2)
        goto LABEL_20;
    }
    v7 = *(double *)(v5 + OBJC_IVAR____TtC8HealthUI25StateOfMindCoordinateInfo_dailyValenceRange);
    v8 = *(double *)(v5 + OBJC_IVAR____TtC8HealthUI25StateOfMindCoordinateInfo_dailyValenceRange + 8);
    v9 = *(_BYTE *)(v5 + OBJC_IVAR____TtC8HealthUI25StateOfMindCoordinateInfo_dailyValenceRange + 16);
    swift_unknownObjectRelease();
    if ((v9 & 1) == 0)
      goto LABEL_13;
    goto LABEL_5;
  }
LABEL_20:
  v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_21:
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1D7B207FC(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t);
  id v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t *v37;

  sub_1D7AA787C(0, (unint64_t *)&qword_1F014D000, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v36 - v8;
  v10 = sub_1D7AE269C(a1);
  v11 = (uint64_t *)MEMORY[0x1E0DEE9D8];
  if (!v10)
    return (uint64_t)v11;
  v12 = v10;
  if (v10 >> 62)
    goto LABEL_55;
  v13 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v13)
  {
LABEL_56:
    swift_bridgeObjectRelease();
    return (uint64_t)v11;
  }
  while (1)
  {
    result = sub_1D7B21314(v12, (uint64_t)v9);
    v37 = v11;
    if (a2 != 1)
      break;
    if (v13 < 1)
      goto LABEL_59;
    if ((v12 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      v11 = 0;
      a2 = 0;
      while (1)
      {
        v18 = MEMORY[0x1D829E758](v11, v12);
        v19 = *(_QWORD *)(v18 + OBJC_IVAR____TtC8HealthUI25StateOfMindCoordinateInfo_dailyReflectiveCount);
        v16 = __OFADD__(a2, v19);
        a2 += v19;
        if (v16)
          break;
        v20 = *(_QWORD *)(v18 + OBJC_IVAR____TtC8HealthUI25StateOfMindCoordinateInfo_momentaryReflectiveCount);
        swift_unknownObjectRelease();
        v16 = __OFADD__(a2, v20);
        a2 += v20;
        if (v16)
          goto LABEL_50;
        v11 = (uint64_t *)((char *)v11 + 1);
        if ((uint64_t *)v13 == v11)
        {
          swift_bridgeObjectRelease();
          goto LABEL_36;
        }
      }
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
    a2 = 0;
    v27 = (_QWORD *)(v12 + 32);
    while (1)
    {
      v28 = *(_QWORD *)(*v27 + OBJC_IVAR____TtC8HealthUI25StateOfMindCoordinateInfo_dailyReflectiveCount);
      v16 = __OFADD__(a2, v28);
      v29 = a2 + v28;
      if (v16)
        break;
      v30 = *(_QWORD *)(*v27 + OBJC_IVAR____TtC8HealthUI25StateOfMindCoordinateInfo_momentaryReflectiveCount);
      a2 = v29 + v30;
      if (__OFADD__(v29, v30))
        goto LABEL_54;
      ++v27;
      if (!--v13)
      {
LABEL_36:
        swift_bridgeObjectRelease();
        v31 = sub_1D7B49198();
        v32 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v7, 1, 1, v31);
        v33 = sub_1D7B211D8(5, 0, a2, (uint64_t)v7);
        sub_1D7B0EDDC((uint64_t)v7, (unint64_t *)&qword_1F014D000, v32);
LABEL_42:
        v26 = v33;
LABEL_43:
        v35 = v26;
        MEMORY[0x1D829E3EC]();
        if (*(_QWORD *)(((unint64_t)v37 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)(((unint64_t)v37 & 0xFFFFFFFFFFFFFF8)
                                                                                            + 0x18) >> 1)
          sub_1D7B4A4C4();
        sub_1D7B4A4DC();
        sub_1D7B4A4B8();

LABEL_46:
        sub_1D7B0EDDC((uint64_t)v9, (unint64_t *)&qword_1F014D000, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
        return (uint64_t)v37;
      }
    }
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    swift_bridgeObjectRetain();
    v13 = sub_1D7B4A8A8();
    swift_bridgeObjectRelease();
    if (!v13)
      goto LABEL_56;
  }
  if (a2)
  {
LABEL_39:
    sub_1D7B0EDDC((uint64_t)v9, (unint64_t *)&qword_1F014D000, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    swift_bridgeObjectRelease();
    return (uint64_t)v37;
  }
  if (v13 >= 1)
  {
    if ((v12 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      a2 = 0;
      v7 = 0;
      v11 = &OBJC_IVAR____TtC8HealthUI25StateOfMindCoordinateInfo_dailyReflectiveCount;
      do
      {
        v15 = *(_QWORD *)(MEMORY[0x1D829E758](a2, v12)
                        + OBJC_IVAR____TtC8HealthUI25StateOfMindCoordinateInfo_dailyReflectiveCount);
        swift_unknownObjectRelease();
        v16 = __OFADD__(v7, v15);
        v7 += v15;
        if (v16)
        {
          __break(1u);
          goto LABEL_48;
        }
        ++a2;
      }
      while (v13 != a2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v11 = 0;
      a2 = 0;
      while (1)
      {
        v17 = *(_QWORD *)(MEMORY[0x1D829E758](v11, v12)
                        + OBJC_IVAR____TtC8HealthUI25StateOfMindCoordinateInfo_momentaryReflectiveCount);
        swift_unknownObjectRelease();
        v16 = __OFADD__(a2, v17);
        a2 += v17;
        if (v16)
          goto LABEL_49;
        v11 = (uint64_t *)((char *)v11 + 1);
        if ((uint64_t *)v13 == v11)
        {
          swift_bridgeObjectRelease();
          goto LABEL_28;
        }
      }
    }
    v7 = 0;
    v21 = (_QWORD *)(v12 + 32);
    v22 = (_QWORD *)(v12 + 32);
    v23 = v13;
    while (1)
    {
      v24 = *(_QWORD *)(*v22 + OBJC_IVAR____TtC8HealthUI25StateOfMindCoordinateInfo_dailyReflectiveCount);
      v16 = __OFADD__(v7, v24);
      v7 += v24;
      if (v16)
        break;
      ++v22;
      if (!--v23)
      {
        a2 = 0;
        while (1)
        {
          v25 = *(_QWORD *)(*v21 + OBJC_IVAR____TtC8HealthUI25StateOfMindCoordinateInfo_momentaryReflectiveCount);
          v16 = __OFADD__(a2, v25);
          a2 += v25;
          if (v16)
            goto LABEL_53;
          ++v21;
          if (!--v13)
          {
LABEL_28:
            if ((uint64_t)v7 <= 0)
            {
              if (a2 < 1)
                goto LABEL_39;
              v34 = sub_1D7B20E54(v12, a2, (uint64_t)v9);
            }
            else
            {
              if (a2 >= 1)
              {
                result = swift_bridgeObjectRelease();
                if (__OFADD__(v7, a2))
                  goto LABEL_60;
                v26 = sub_1D7B211D8(5, 0, (uint64_t)&v7[a2], (uint64_t)v9);
                goto LABEL_43;
              }
              v34 = sub_1D7B20D30(v12, (uint64_t)v7, (uint64_t)v9);
            }
            v33 = v34;
            swift_bridgeObjectRelease();
            if (!v33)
              goto LABEL_46;
            goto LABEL_42;
          }
        }
      }
    }
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
  return result;
}

id sub_1D7B20D30(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  char v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  double v15;
  char v16;
  id v17;
  void *v18;
  uint64_t v19;

  if (a2 < 1)
    return 0;
  v4 = 0x6E776F6E6B6E55;
  if (a2 == 1)
  {
    v5 = sub_1D7B204FC(0, 0, 1, a1, &OBJC_IVAR____TtC8HealthUI25StateOfMindCoordinateInfo_dailyValenceRange);
    if ((v7 & 1) != 0
      || (v8 = HKUILocalizedStringForValenceRange(*(double *)&v5, v6)) == 0)
    {
      v11 = 0xE700000000000000;
      v12 = 0;
    }
    else
    {
      v9 = v8;
      v4 = sub_1D7B4A3BC();
      v11 = v10;

      v12 = 0;
    }
  }
  else
  {
    v14 = sub_1D7B21BD0(a1);
    if ((v16 & 1) != 0
      || (v17 = HKUILocalizedStringForValenceRange(*(double *)&v14, v15)) == 0)
    {
      v11 = 0xE700000000000000;
    }
    else
    {
      v18 = v17;
      v4 = sub_1D7B4A3BC();
      v11 = v19;

    }
    v12 = 3;
  }
  v13 = sub_1D7B20F48(v12, 30, v4, v11, a3);
  swift_bridgeObjectRelease();
  return v13;
}

id sub_1D7B20E54(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  char v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;

  if (a2 < 1)
    return 0;
  if (a2 != 1)
    return sub_1D7B211D8(0, 32, a2, a3);
  v4 = 0x6E776F6E6B6E55;
  v5 = sub_1D7B204FC(0, 0, 1, a1, &OBJC_IVAR____TtC8HealthUI25StateOfMindCoordinateInfo_momentaryValenceRange);
  if ((v7 & 1) != 0
    || (v8 = HKUILocalizedStringForValenceRange(*(double *)&v5, v6)) == 0)
  {
    v11 = 0xE700000000000000;
  }
  else
  {
    v9 = v8;
    v4 = sub_1D7B4A3BC();
    v11 = v10;

  }
  v12 = sub_1D7B20F48(0, 31, v4, v11, a3);
  swift_bridgeObjectRelease();
  return v12;
}

id sub_1D7B20F48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  id v8;
  uint64_t inited;
  void *v10;
  id v11;
  id v12;
  void **v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  id v21;

  v8 = objc_msgSend(objc_allocWithZone((Class)HKSelectedRangeData), sel_initWithStatisticsType_, a1);
  objc_msgSend(v8, sel_setDataType_, a2);
  sub_1D7AA787C(0, (unint64_t *)&qword_1F014DC20, (uint64_t (*)(uint64_t))sub_1D7AC5B04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D7B82CE0;
  v10 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v11 = v10;
  v12 = objc_msgSend(v5, sel_majorFont);
  *(_QWORD *)(inited + 64) = sub_1D7AAF6EC(0, (unint64_t *)&qword_1F014DC30);
  if (!v12)
    v12 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  v13 = (void **)MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 40) = v12;
  v14 = *v13;
  *(_QWORD *)(inited + 72) = *v13;
  v15 = (void *)objc_opt_self();
  v16 = v14;
  v17 = objc_msgSend(v15, sel_hk_chartLollipopValueColor);
  *(_QWORD *)(inited + 104) = sub_1D7AAF6EC(0, &qword_1F014E8C0);
  *(_QWORD *)(inited + 80) = v17;
  sub_1D7ADFFC8(inited);
  v18 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  swift_bridgeObjectRetain();
  v19 = (void *)sub_1D7B4A38C();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1D7AA76D4((unint64_t *)&qword_1F014DC40, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1D7B833E4);
  v20 = (void *)sub_1D7B4A230();
  swift_bridgeObjectRelease();
  v21 = objc_msgSend(v18, sel_initWithString_attributes_, v19, v20);

  objc_msgSend(v8, sel_setAttributedString_, v21);
  (*(void (**)(id, uint64_t))((*MEMORY[0x1E0DEEDD8] & *v5) + 0x98))(v8, a5);
  return v8;
}

id sub_1D7B211D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  id v8;
  id v9;
  id v10;
  id v11;

  v8 = objc_msgSend(objc_allocWithZone((Class)HKSelectedRangeData), sel_initWithStatisticsType_, a1);
  objc_msgSend(v8, sel_setDataType_, a2);
  v9 = objc_msgSend((id)objc_opt_self(), sel_countUnit);
  v10 = objc_msgSend(v4, sel_attributedStringWithValue_unit_showUnit_, v9, 1, (double)a3);

  objc_msgSend(v8, sel_setAttributedString_, v10);
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, a3);
  objc_msgSend(v8, sel_setValueAsNumber_, v11);

  (*(void (**)(id, uint64_t))((*MEMORY[0x1E0DEEDD8] & *v4) + 0x98))(v8, a4);
  return v8;
}

uint64_t sub_1D7B21314@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t (*v21)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t result;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t);
  uint64_t v45;
  uint64_t v46;
  id v47;
  void *v48;
  char *v49;
  char *v50;
  char v51;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  char *v54;
  void (*v55)(char *, uint64_t);
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(uint64_t);
  uint64_t (*v62)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  char *v64;
  uint64_t v65;
  double v66;
  uint64_t v67;
  id v68;
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  id v74;
  char *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  char *v80;
  char *v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  unsigned int (*v86)(char *, uint64_t, uint64_t);
  void (*v87)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v88;
  char *v89;
  unint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;

  v4 = sub_1D7B49198();
  v84 = *(_QWORD *)(v4 - 8);
  v85 = v4;
  v5 = MEMORY[0x1E0C80A78](v4);
  v82 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v81 = (char *)&v69 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v80 = (char *)&v69 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v79 = (char *)&v69 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v78 = (char *)&v69 - v14;
  MEMORY[0x1E0C80A78](v13);
  v89 = (char *)&v69 - v15;
  v16 = sub_1D7B48D78();
  v92 = *(_QWORD *)(v16 - 8);
  v93 = v16;
  v17 = MEMORY[0x1E0C80A78](v16);
  v91 = (char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v69 - v19;
  sub_1D7AA787C(0, &qword_1F014FCD8, v21, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v23 = MEMORY[0x1E0C80A78](v22);
  v25 = (char *)&v69 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x1E0C80A78](v23);
  v83 = (char *)&v69 - v27;
  v28 = MEMORY[0x1E0C80A78](v26);
  v30 = (char *)&v69 - v29;
  v31 = MEMORY[0x1E0C80A78](v28);
  v33 = (char *)&v69 - v32;
  v34 = MEMORY[0x1E0C80A78](v31);
  v36 = (char *)&v69 - v35;
  MEMORY[0x1E0C80A78](v34);
  v38 = (char *)&v69 - v37;
  v90 = a1;
  if (!(a1 >> 62))
  {
    v39 = *(_QWORD *)((v90 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v39)
      goto LABEL_3;
LABEL_32:
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v84 + 56))(a2, 1, 1, v85);
  }
  swift_bridgeObjectRetain();
  result = sub_1D7B4A8A8();
  v39 = result;
  if (!result)
    goto LABEL_32;
LABEL_3:
  v88 = v90 & 0xC000000000000001;
  v77 = v39;
  if ((v90 & 0xC000000000000001) != 0)
  {
    v68 = (id)MEMORY[0x1D829E758](0, v90);
  }
  else
  {
    if (!*(_QWORD *)((v90 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_35;
    }
    v68 = *(id *)(v90 + 32);
  }
  v41 = v68;
  swift_bridgeObjectRelease();
  if ((*((_BYTE *)v41 + OBJC_IVAR____TtC8HealthUI25StateOfMindCoordinateInfo_isSharingPreview) & 1) != 0)
  {

    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v84 + 56))(a2, 1, 1, v85);
  }
  v74 = v41;
  v87 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v92 + 56);
  v87(v36, 1, 1, v93);
  result = sub_1D7B21E3C((uint64_t)v36, (uint64_t)v33);
  v42 = v77;
  if (v77 >= 1)
  {
    v70 = v36;
    v71 = v30;
    v72 = v38;
    v69 = v20;
    v73 = a2;
    swift_bridgeObjectRetain();
    v43 = 0;
    v44 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0];
    v45 = (uint64_t)v83;
    v75 = v33;
    v76 = v25;
    v46 = v85;
    do
    {
      if (v88)
        v47 = (id)MEMORY[0x1D829E758](v43, v90);
      else
        v47 = *(id *)(v90 + 8 * v43 + 32);
      v48 = v47;
      sub_1D7B21E3C((uint64_t)v33, (uint64_t)v25);
      v86 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v92 + 48);
      if (v86(v25, 1, v93) == 1)
      {
        sub_1D7B0EDDC((uint64_t)v25, &qword_1F014FCD8, v44);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v92 + 16))(v45, (uint64_t)v48 + OBJC_IVAR____TtC8HealthUI25StateOfMindCoordinateInfo_dateInterval, v93);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v91, v25, v93);
        v49 = v78;
        sub_1D7B48D60();
        v50 = v79;
        sub_1D7B48D60();
        sub_1D7AA76D4(qword_1F014FCE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
        v51 = sub_1D7B4A2F0();
        v52 = v84;
        v53 = *(void (**)(char *, char *, uint64_t))(v84 + 16);
        if ((v51 & 1) != 0)
          v54 = v50;
        else
          v54 = v49;
        v53(v89, v54, v46);
        v55 = *(void (**)(char *, uint64_t))(v52 + 8);
        v55(v50, v46);
        v55(v49, v46);
        v56 = v81;
        sub_1D7B48D48();
        v57 = v82;
        v44 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0];
        sub_1D7B48D48();
        v25 = v76;
        if ((sub_1D7B4A2FC() & 1) != 0)
          v58 = v57;
        else
          v58 = v56;
        v53(v80, v58, v46);
        v55(v57, v46);
        v55(v56, v46);
        v45 = (uint64_t)v83;
        v42 = v77;
        sub_1D7B48D54();
        v33 = v75;
        (*(void (**)(char *, uint64_t))(v92 + 8))(v91, v93);
      }
      v87((char *)v45, 0, 1, v93);

      ++v43;
      sub_1D7B0EDDC((uint64_t)v33, &qword_1F014FCD8, v44);
      sub_1D7B21E98(v45, (uint64_t)v33);
    }
    while (v42 != v43);
    swift_bridgeObjectRelease();
    v59 = (uint64_t)v72;
    sub_1D7B21E98((uint64_t)v33, (uint64_t)v72);
    sub_1D7B0EDDC((uint64_t)v70, &qword_1F014FCD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0]);
    v60 = (uint64_t)v71;
    sub_1D7B21E3C(v59, (uint64_t)v71);
    if (v86((char *)v60, 1, v93) == 1)
    {
      v61 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0];
      sub_1D7B0EDDC(v59, &qword_1F014FCD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0]);

      sub_1D7B0EDDC(v60, &qword_1F014FCD8, v61);
      v62 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v84 + 56);
      v63 = v73;
    }
    else
    {
      v64 = v69;
      (*(void (**)(char *, uint64_t, uint64_t))(v92 + 32))(v69, v60, v93);
      sub_1D7B48D6C();
      v65 = v73;
      if (v66 <= 86401.0)
      {
        sub_1D7B48D60();

        (*(void (**)(char *, uint64_t))(v92 + 8))(v64, v93);
        sub_1D7B0EDDC(v59, &qword_1F014FCD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0]);
        v62 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v84 + 56);
        v63 = v65;
        v67 = 0;
        return v62(v63, v67, 1, v85);
      }

      (*(void (**)(char *, uint64_t))(v92 + 8))(v64, v93);
      sub_1D7B0EDDC(v59, &qword_1F014FCD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0]);
      v62 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v84 + 56);
      v63 = v65;
    }
    v67 = 1;
    return v62(v63, v67, 1, v85);
  }
LABEL_35:
  __break(1u);
  return result;
}

id StateOfMindChartFormatter.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id StateOfMindChartFormatter.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StateOfMindChartFormatter();
  return objc_msgSendSuper2(&v2, sel_init);
}

id StateOfMindChartFormatter.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StateOfMindChartFormatter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D7B21BD0(unint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t result;
  double *v6;
  uint64_t v7;
  uint64_t v8;
  double *v9;
  double v10;

  v1 = sub_1D7B20650(a1);
  v2 = v1[2];
  if (!v2)
  {
    swift_bridgeObjectRelease();
    *(double *)&result = 0.0;
    return result;
  }
  if (v2 == 1)
  {
    v3 = 0;
    v4 = 0.0;
  }
  else
  {
    v3 = v2 & 0x7FFFFFFFFFFFFFFELL;
    v6 = (double *)(v1 + 5);
    v4 = 0.0;
    v7 = v2 & 0x7FFFFFFFFFFFFFFELL;
    do
    {
      v4 = v4 + *(v6 - 1) + *v6;
      v6 += 2;
      v7 -= 2;
    }
    while (v7);
    if (v2 == v3)
      goto LABEL_10;
  }
  v8 = v2 - v3;
  v9 = (double *)&v1[v3 + 4];
  do
  {
    v10 = *v9++;
    v4 = v4 + v10;
    --v8;
  }
  while (v8);
LABEL_10:
  swift_bridgeObjectRelease();
  *(double *)&result = v4 / (double)v2;
  return result;
}

uint64_t sub_1D7B21CA4(void *a1)
{
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = objc_msgSend(a1, sel_integerValue);
  if (qword_1F014CF90 != -1)
    swift_once();
  v2 = (id)qword_1F0154598;
  sub_1D7B48F7C();

  sub_1D7AA787C(0, (unint64_t *)&qword_1F014DC00, (uint64_t (*)(uint64_t))sub_1D7AC5A20, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v3 = swift_allocObject();
  v4 = MEMORY[0x1E0DEB418];
  *(_OWORD *)(v3 + 16) = xmmword_1D7B84630;
  v5 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v3 + 56) = v4;
  *(_QWORD *)(v3 + 64) = v5;
  *(_QWORD *)(v3 + 32) = v1;
  v6 = sub_1D7B4A398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t type metadata accessor for StateOfMindChartFormatter()
{
  return objc_opt_self();
}

uint64_t method lookup function for StateOfMindChartFormatter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StateOfMindChartFormatter.addTapOutBlock(for:tapOutDate:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t sub_1D7B21E3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D7AA787C(0, &qword_1F014FCD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D7B21E98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D7AA787C(0, &qword_1F014FCD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t OptionSetIterator.init(element:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;

  v8 = type metadata accessor for OptionSetIterator(0, a2, a3, a4);
  v9 = a5 + *(int *)(v8 + 36);
  *(_QWORD *)v9 = 0;
  *(_BYTE *)(v9 + 8) = 1;
  *(_QWORD *)(a5 + *(int *)(v8 + 40)) = 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a5, a1, a2);
}

uint64_t type metadata accessor for OptionSetIterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for OptionSetIterator);
}

uint64_t sub_1D7B21F64(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;

  v2 = MEMORY[0x1E0C80A78](a1);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (_BYTE *)(v6 + *(int *)(v2 + 36));
  if (v7[8] != 1)
    return *(_QWORD *)v7;
  (*(void (**)(char *))(v3 + 16))(v5);
  v8 = *(_QWORD *)(a1 + 16);
  sub_1D7B4A47C();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v5, v8);
  result = v11;
  *(_QWORD *)v7 = v11;
  v7[8] = 0;
  return result;
}

uint64_t OptionSetIterator.next()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;

  v3 = v2;
  if (sub_1D7B21F64(a1))
  {
    v6 = *(int *)(a1 + 40);
    v7 = sub_1D7B21F64(a1);
    v9 = *(_QWORD *)(v2 + v6);
    if ((v9 & v7) != 0)
    {
LABEL_6:
      v13 = sub_1D7B21F64(a1);
      v14 = v2 + *(int *)(a1 + 36);
      *(_QWORD *)v14 = v13 & ~v9;
      *(_BYTE *)(v14 + 8) = 0;
      v15 = *(_QWORD *)(a1 + 16);
      v16 = *(_QWORD *)(a1 + 24);
      sub_1D7B4A488();
      result = type metadata accessor for OptionSetIterator(0, v15, v16, v17);
      *(_QWORD *)(v3 + *(int *)(result + 40)) *= 2;
      return result;
    }
    v10 = *(_QWORD *)(a1 + 16);
    v11 = type metadata accessor for OptionSetIterator(0, v10, *(_QWORD *)(a1 + 24), v8);
    while (1)
    {
      *(_QWORD *)(v2 + *(int *)(v11 + 40)) *= 2;
      if (!sub_1D7B21F64(a1))
        break;
      v12 = sub_1D7B21F64(a1);
      v9 = *(_QWORD *)(v2 + v6);
      if ((v9 & v12) != 0)
        goto LABEL_6;
    }
  }
  else
  {
    v10 = *(_QWORD *)(a1 + 16);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a2, 1, 1, v10);
}

uint64_t OptionSet<>.makeIterator()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v7 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v3, a1);
  v11 = type metadata accessor for OptionSetIterator(0, a1, a2, v10);
  v12 = a3 + *(int *)(v11 + 36);
  *(_QWORD *)v12 = 0;
  *(_BYTE *)(v12 + 8) = 1;
  *(_QWORD *)(a3 + *(int *)(v11 + 40)) = 1;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(a3, v9, a1);
}

uint64_t sub_1D7B22224()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1D7B222A8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v12 = *(_QWORD *)v11;
    *(_BYTE *)(v10 + 8) = *(_BYTE *)(v11 + 8);
    *(_QWORD *)v10 = v12;
    *(_QWORD *)(((unint64_t)v4 + v6 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v6 + 23) & 0xFFFFFFFFFFFFF8);
  }
  return v4;
}

uint64_t sub_1D7B22378(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_1D7B22388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  v9 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_BYTE *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = v11;
  *(_QWORD *)((v7 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v8 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1D7B22408(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  v9 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_BYTE *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = v11;
  *(_QWORD *)((v7 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v8 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1D7B22488(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  v9 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_BYTE *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = v11;
  *(_QWORD *)((v7 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v8 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1D7B22508(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  v9 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_BYTE *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = v11;
  *(_QWORD *)((v7 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v8 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1D7B22588(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 >= a2)
  {
    if (v5)
      return (*(uint64_t (**)(void))(v4 + 48))();
    return 0;
  }
  if (((((*(_QWORD *)(v4 + 64) + 23) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
    v6 = 2;
  else
    v6 = a2 - v5 + 1;
  if (v6 >= 0x10000)
    v7 = 4;
  else
    v7 = 2;
  if (v6 < 0x100)
    v7 = 1;
  if (v6 >= 2)
    v8 = v7;
  else
    v8 = 0;
  return ((uint64_t (*)(void))((char *)&loc_1D7B225F8 + 4 * byte_1D7B864C0[v8]))();
}

void sub_1D7B22650(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 >= a3)
  {
    v11 = 0u;
    if (a2 <= v7)
      goto LABEL_14;
  }
  else
  {
    v8 = a3 - v7;
    if (((*(_DWORD *)(v6 + 64) + 23) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v9 = v8 + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    if (a2 <= v7)
LABEL_14:
      __asm { BR              X11 }
  }
  if (((*(_DWORD *)(v6 + 64) + 23) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v12 = ~v7 + a2;
    bzero(a1, ((*(_QWORD *)(v6 + 64) + 23) & 0xFFFFFFFFFFFFFFF8) + 8);
    *a1 = v12;
  }
  __asm { BR              X10 }
}

void sub_1D7B22738()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_1D7B22740(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1D7B22748);
}

void sub_1D7B22764()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_1D7B2276C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
}

uint64_t sub_1D7B22774(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_WORD *)(v4 + v5) = 0;
  if (!a2)
    JUMPOUT(0x1D7B2277CLL);
  return (*(uint64_t (**)(uint64_t))(v3 + 56))(v4);
}

uint64_t HKOverlayRoomPreferredOverlay.init(stateOfMindDomain:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = sub_1D7B4969C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)(a1 - 1) < 0x12)
    return a1 + 99;
  sub_1D7B49678();
  v7 = sub_1D7B49684();
  v8 = sub_1D7B4A614();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v12 = v10;
    *(_DWORD *)v9 = 136446466;
    v11 = sub_1D7AA4DE4(0xD00000000000001DLL, 0x80000001D7BA8000, &v12);
    sub_1D7B4A704();
    *(_WORD *)(v9 + 12) = 2048;
    v11 = a1;
    sub_1D7B4A704();
    _os_log_impl(&dword_1D7813000, v7, v8, "[%{public}s] Cannot create preferred overlay for unknown domain: %ld", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D829FFF4](v10, -1, -1);
    MEMORY[0x1D829FFF4](v9, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return 104;
}

void sub_1D7B22954()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  uint64_t v7;
  id v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;

  v1 = v0;
  v2 = (_QWORD *)sub_1D7B49588();
  v3 = *(v2 - 1);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, _QWORD *))(v3 + 16))(v5, v1, v2);
  v6 = (*(uint64_t (**)(char *, _QWORD *))(v3 + 88))(v5, v2);
  v7 = qword_1F014CF90;
  if (v6 != *MEMORY[0x1E0D29080] && v6 != *MEMORY[0x1E0D29078])
    goto LABEL_10;
  if (qword_1F014CF90 != -1)
    swift_once();
  v2 = (id)qword_1F0154598;
  v5 = (char *)sub_1D7B4A38C();
  v9 = objc_msgSend((id)objc_opt_self(), sel_colorNamed_inBundle_compatibleWithTraitCollection_, v5, v2, 0);

  if (!v9)
  {
    __break(1u);
LABEL_10:
    if (v7 != -1)
      swift_once();
    v10 = (id)qword_1F0154598;
    v11 = (void *)sub_1D7B4A38C();
    v12 = objc_msgSend((id)objc_opt_self(), sel_colorNamed_inBundle_compatibleWithTraitCollection_, v11, v10, 0);

    if (v12)
      (*(void (**)(char *, _QWORD *))(v3 + 8))(v5, v2);
    else
      __break(1u);
  }
}

uint64_t sub_1D7B22B40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  id v7;
  uint64_t v8;
  uint64_t v10;
  unint64_t v11;

  v1 = v0;
  v2 = sub_1D7B49588();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == *MEMORY[0x1E0D29080])
  {
    v10 = 0;
    v11 = 0xE000000000000000;
    sub_1D7B4A7DC();
    swift_bridgeObjectRelease();
    if (qword_1F014CF90 == -1)
      goto LABEL_9;
    goto LABEL_12;
  }
  if (v6 == *MEMORY[0x1E0D29078])
  {
    v10 = 0;
    v11 = 0xE000000000000000;
    sub_1D7B4A7DC();
    swift_bridgeObjectRelease();
    if (qword_1F014CF90 == -1)
      goto LABEL_9;
    goto LABEL_12;
  }
  if (v6 != *MEMORY[0x1E0D29088])
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0;
  }
  v10 = 0;
  v11 = 0xE000000000000000;
  sub_1D7B4A7DC();
  swift_bridgeObjectRelease();
  if (qword_1F014CF90 != -1)
LABEL_12:
    swift_once();
LABEL_9:
  v7 = (id)qword_1F0154598;
  v8 = sub_1D7B48F7C();

  return v8;
}

uint64_t sub_1D7B22DB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  id v7;
  uint64_t v8;
  uint64_t v10;
  unint64_t v11;

  v1 = v0;
  v2 = sub_1D7B49588();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == *MEMORY[0x1E0D29080])
  {
    v10 = 0;
    v11 = 0xE000000000000000;
    sub_1D7B4A7DC();
    swift_bridgeObjectRelease();
    if (qword_1F014CF90 == -1)
      goto LABEL_9;
    goto LABEL_12;
  }
  if (v6 == *MEMORY[0x1E0D29078])
  {
    v10 = 0;
    v11 = 0xE000000000000000;
    sub_1D7B4A7DC();
    swift_bridgeObjectRelease();
    if (qword_1F014CF90 == -1)
      goto LABEL_9;
    goto LABEL_12;
  }
  if (v6 != *MEMORY[0x1E0D29088])
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0;
  }
  v10 = 0;
  v11 = 0xE000000000000000;
  sub_1D7B4A7DC();
  swift_bridgeObjectRelease();
  if (qword_1F014CF90 != -1)
LABEL_12:
    swift_once();
LABEL_9:
  v7 = (id)qword_1F0154598;
  v8 = sub_1D7B48F7C();

  return v8;
}

id sub_1D7B23030()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  int v10;
  id v11;
  id v12;
  id v13;
  uint64_t v15;

  v1 = v0;
  v2 = sub_1D7B49588();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D7B495A0();
  v7 = v6;
  v9 = v8;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  v10 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v10 == *MEMORY[0x1E0D29080])
  {
    v11 = objc_msgSend((id)objc_opt_self(), sel_countUnit);
    v12 = objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v11, v9);
  }
  else
  {
    if (v10 != *MEMORY[0x1E0D29088])
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return 0;
    }
    v11 = objc_msgSend((id)objc_opt_self(), sel_countUnit);
    v12 = objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v11, v7);
  }
  v13 = v12;

  return v13;
}

id sub_1D7B231AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  int v10;
  id v11;
  id v12;
  id v13;
  uint64_t v15;

  v1 = v0;
  v2 = sub_1D7B49588();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D7B495A0();
  v7 = v6;
  v9 = v8;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  v10 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v10 == *MEMORY[0x1E0D29078])
  {
    v11 = objc_msgSend((id)objc_opt_self(), sel_countUnit);
    v12 = objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v11, v7);
  }
  else
  {
    if (v10 != *MEMORY[0x1E0D29088])
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return 0;
    }
    v11 = objc_msgSend((id)objc_opt_self(), sel_countUnit);
    v12 = objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v11, v9);
  }
  v13 = v12;

  return v13;
}

uint64_t sub_1D7B23328(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  result = MEMORY[0x1E0DEE9D8];
  v10 = MEMORY[0x1E0DEE9D8];
  v6 = *(_QWORD *)(a3 + 16);
  if (v6)
  {
    v7 = a3 + 32;
    swift_bridgeObjectRetain();
    do
    {
      v8 = a1(&v9, v7);
      if (v3)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      if (v9)
      {
        MEMORY[0x1D829E3EC](v8);
        if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1D7B4A4C4();
        sub_1D7B4A4DC();
        sub_1D7B4A4B8();
      }
      v7 += 40;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    return v10;
  }
  return result;
}

void sub_1D7B23440(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD v11[3];
  uint64_t v12;

  sub_1D7AB9B80(a1, (uint64_t)v11);
  v5 = v12;
  if (!v12)
  {
    v10 = 0;
    if (!a2)
      goto LABEL_4;
    goto LABEL_3;
  }
  v6 = __swift_project_boxed_opaque_existential_0(v11, v12);
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v9);
  v10 = sub_1D7B4A92C();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
  if (a2)
LABEL_3:
    a2 = (void *)sub_1D7B49024();
LABEL_4:
  (*(void (**)(uint64_t, uint64_t, void *))(a3 + 16))(a3, v10, a2);
  swift_unknownObjectRelease();

}

id sub_1D7B23548(uint64_t a1, uint64_t a2)
{
  uint64_t (*v3)(__int128 *);
  void *v4;
  __int128 v6;
  __int128 v7;

  v3 = *(uint64_t (**)(__int128 *))(a1 + 32);
  if (a2)
  {
    *((_QWORD *)&v7 + 1) = swift_getObjectType();
    *(_QWORD *)&v6 = a2;
  }
  else
  {
    v6 = 0u;
    v7 = 0u;
  }
  swift_retain();
  swift_unknownObjectRetain();
  v4 = (void *)v3(&v6);
  swift_release();
  sub_1D7B143C0((uint64_t)&v6, (uint64_t)&qword_1ED0AC810, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1D7AA7E70);
  return v4;
}

id BalanceChartDataSource.__allocating_init(displayType:healthStore:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithDisplayType_healthStore_, a1, a2);

  return v5;
}

uint64_t BalanceChartDataSource.init(displayType:healthStore:)(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v11;

  v4 = sub_1D7B49300();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend((id)objc_opt_self(), sel_hk_gregorianCalendarWithFirstWeekdayFromRegion);
  sub_1D7B492C4();

  v8 = objc_allocWithZone((Class)type metadata accessor for BalanceChartDataSource());
  v9 = sub_1D7B2387C(a1, a2, (uint64_t)v6);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v9;
}

uint64_t type metadata accessor for BalanceChartDataSource()
{
  uint64_t result;

  result = qword_1F014FDD8;
  if (!qword_1F014FDD8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D7B2387C(void *a1, void *a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t (*v40)(char *, uint64_t, uint64_t);
  char *v41;
  char *v42;
  uint64_t result;
  id v44;
  id v45;
  objc_class *v46;
  char *v47;
  id v48;
  char *v49;
  char *v50;
  NSObject *v51;
  os_log_type_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  void (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  char *v61;
  uint64_t v62;
  _QWORD v63[2];
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  id v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  objc_super v78;

  v4 = v3;
  v74 = a2;
  v75 = a3;
  v73 = a1;
  v63[1] = swift_getObjectType();
  v5 = sub_1D7B4969C();
  v67 = *(_QWORD *)(v5 - 8);
  v68 = v5;
  MEMORY[0x1E0C80A78](v5);
  v66 = (char *)v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D7AA787C(0, (unint64_t *)&unk_1F014FE10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v8 = MEMORY[0x1E0C80A78](v7);
  v64 = (char *)v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v69 = (char *)v63 - v10;
  v11 = sub_1D7B493C0();
  v70 = *(_QWORD *)(v11 - 8);
  v71 = v11;
  MEMORY[0x1E0C80A78](v11);
  v72 = (char *)v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1D7B49300();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1D7B491C8();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (uint64_t *)&v4[OBJC_IVAR___HKBalanceChartDataSource_debugIdentifier];
  v22 = v4;
  sub_1D7B491BC();
  sub_1D7B491A4();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  v23 = sub_1D7B26474(5);
  v25 = v24;
  v27 = v26;
  v29 = v28;
  swift_bridgeObjectRelease();
  v30 = v27;
  v31 = (uint64_t)v69;
  v32 = MEMORY[0x1D829E344](v23, v25, v30, v29);
  v34 = v33;
  v35 = v13;
  swift_bridgeObjectRelease();
  *v21 = v32;
  v21[1] = v34;
  v65 = v14;
  v36 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v38 = v70;
  v37 = v71;
  v36(&v22[OBJC_IVAR___HKBalanceChartDataSource_gregorianCalendar], v75, v13);
  v39 = objc_msgSend((id)objc_opt_self(), sel_hk_gregorianCalendarWithFirstWeekdayFromRegion);
  sub_1D7B492C4();

  sub_1D7B4939C();
  v40 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48);
  if (v40((char *)v31, 1, v37) == 1)
  {
    v41 = v72;
    v42 = v64;
    sub_1D7B493A8();
    result = v40(v42, 1, v37);
    if ((_DWORD)result == 1)
    {
      __break(1u);
      return result;
    }
    (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v41, v42, v37);
    sub_1D7B143C0(v31, (uint64_t)&unk_1F014FE10, (uint64_t)MEMORY[0x1E0CB1470], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1D7AA787C);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v38 + 32))(v72, v31, v37);
  }
  v45 = v73;
  v44 = v74;
  sub_1D7B492DC();
  v36(&v22[OBJC_IVAR___HKBalanceChartDataSource_gregorianUTCCalendar], (uint64_t)v16, v35);

  v46 = (objc_class *)type metadata accessor for BalanceChartDataSource();
  v78.receiver = v22;
  v78.super_class = v46;
  v47 = v16;
  v48 = objc_msgSendSuper2(&v78, sel_initWithDisplayType_healthStore_, v45, v44);
  v49 = v66;
  sub_1D7B4966C();
  v50 = (char *)v48;
  v51 = sub_1D7B49684();
  v52 = sub_1D7B4A620();
  if (os_log_type_enabled(v51, v52))
  {
    v53 = swift_slowAlloc();
    v54 = swift_slowAlloc();
    v77 = v54;
    *(_DWORD *)v53 = 136446466;
    v72 = v47;
    v55 = sub_1D7B4AA94();
    v76 = sub_1D7AA4DE4(v55, v56, &v77);
    sub_1D7B4A704();
    swift_bridgeObjectRelease();
    *(_WORD *)(v53 + 12) = 2080;
    v71 = v35;
    v57 = *(_QWORD *)&v50[OBJC_IVAR___HKBalanceChartDataSource_debugIdentifier];
    v58 = *(_QWORD *)&v50[OBJC_IVAR___HKBalanceChartDataSource_debugIdentifier + 8];
    swift_bridgeObjectRetain();
    v76 = sub_1D7AA4DE4(v57, v58, &v77);
    sub_1D7B4A704();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D7813000, v51, v52, "[%{public}s.%s] init", (uint8_t *)v53, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D829FFF4](v54, -1, -1);
    MEMORY[0x1D829FFF4](v53, -1, -1);

    v59 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
    v60 = v71;
    v59(v75, v71);
    (*(void (**)(char *, uint64_t))(v67 + 8))(v49, v68);
    v61 = v72;
    v62 = v60;
  }
  else
  {

    v59 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
    v59(v75, v35);
    (*(void (**)(char *, uint64_t))(v67 + 8))(v49, v68);
    v61 = v47;
    v62 = v35;
  }
  v59((uint64_t)v61, v62);
  return (uint64_t)v50;
}

uint64_t sub_1D7B23F04(void *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  id v33;
  void (*v34)(char *, uint64_t);
  id v35;
  id v36;
  id v37;
  char *v38;
  NSObject *v39;
  os_log_type_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char *v46;
  unint64_t v47;
  uint64_t v48;
  id v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  id v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  unint64_t v58;
  unint64_t v59;
  id v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  os_log_t v70;
  uint64_t v71;
  id v72;
  id v73;
  id v74;
  char *v75;
  NSObject *v76;
  os_log_type_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  id v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  id v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  char *v94;
  id v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  os_log_t v99;
  uint64_t v100;
  id v101;
  char *v102;
  uint64_t v103;
  char v104;
  char v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  void *v111;
  uint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  Class v117;
  id v118;
  char *v119;
  id v120;
  uint64_t v121;
  uint64_t v123;
  char *v124;
  char *v125;
  os_log_t v126;
  int v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  os_log_t v141;
  uint64_t v142;
  uint64_t ObjectType;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151[2];

  v134 = a2;
  v135 = a3;
  ObjectType = swift_getObjectType();
  v130 = sub_1D7B495DC();
  v129 = *(_QWORD *)(v130 - 8);
  MEMORY[0x1E0C80A78](v130);
  v132 = (char *)&v123 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D7B49300();
  v139 = *(_QWORD *)(v6 - 8);
  v140 = v6;
  MEMORY[0x1E0C80A78](v6);
  v141 = (os_log_t)((char *)&v123 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_1D7B494D4();
  MEMORY[0x1E0C80A78](v8);
  v131 = (char *)&v123 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = sub_1D7B48DE4();
  v148 = *(_QWORD *)(v142 - 8);
  v10 = MEMORY[0x1E0C80A78](v142);
  v137 = (char *)&v123 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v136 = (char *)&v123 - v12;
  v144 = sub_1D7B4969C();
  v149 = *(_QWORD *)(v144 - 8);
  v13 = MEMORY[0x1E0C80A78](v144);
  v146 = (char *)&v123 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v147 = (char *)&v123 - v15;
  sub_1D7ACB9A8();
  v133 = v16;
  v17 = MEMORY[0x1E0C80A78](v16);
  v138 = (uint64_t)&v123 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v17);
  v145 = (uint64_t)&v123 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v123 - v22;
  MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v123 - v24;
  v26 = sub_1D7B49198();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = MEMORY[0x1E0C80A78](v26);
  v30 = (char *)&v123 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v28);
  v32 = (char *)&v123 - v31;
  v33 = objc_msgSend(a1, sel_startDate);
  sub_1D7B49168();

  sub_1D7B49174();
  LOBYTE(v33) = sub_1D7B4915C();
  v34 = *(void (**)(char *, uint64_t))(v27 + 8);
  v34(v30, v26);
  v34(v32, v26);
  if ((v33 & 1) != 0)
  {
    sub_1D7B255C0(a1, v25);
    sub_1D7B4966C();
    sub_1D7ACBA20((uint64_t)v25, (uint64_t)v23);
    sub_1D7ACBA20((uint64_t)v25, v145);
    v35 = a1;
    v36 = v3;
    v37 = v35;
    v38 = (char *)v36;
    v39 = sub_1D7B49684();
    v40 = sub_1D7B4A620();
    v41 = v40;
    if (os_log_type_enabled(v39, v40))
    {
      v42 = swift_slowAlloc();
      v146 = v25;
      v127 = v41;
      v43 = v42;
      v128 = swift_slowAlloc();
      v151[0] = v128;
      *(_DWORD *)v43 = 136447746;
      v126 = v39;
      v44 = sub_1D7B4AA94();
      v150 = sub_1D7AA4DE4(v44, v45, v151);
      sub_1D7B4A704();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 12) = 2080;
      v124 = v23;
      v46 = v38;
      v48 = *(_QWORD *)&v38[OBJC_IVAR___HKBalanceChartDataSource_debugIdentifier];
      v47 = *(_QWORD *)&v38[OBJC_IVAR___HKBalanceChartDataSource_debugIdentifier + 8];
      swift_bridgeObjectRetain();
      v150 = sub_1D7AA4DE4(v48, v47, v151);
      sub_1D7B4A704();
      v125 = v46;

      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 22) = 2082;
      v49 = objc_msgSend(v37, sel_statisticsInterval, v43 + 24);
      v50 = v136;
      sub_1D7B48DB4();

      sub_1D7AA76D4((unint64_t *)&unk_1F014FD80, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEAB0], MEMORY[0x1E0CAEAF0]);
      v51 = v142;
      v52 = sub_1D7B4A914();
      v54 = v53;
      (*(void (**)(char *, uint64_t))(v148 + 8))(v50, v51);
      v150 = sub_1D7AA4DE4(v52, v54, v151);
      sub_1D7B4A704();

      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 32) = 2082;
      v136 = (char *)(v43 + 34);
      v55 = objc_msgSend(v37, sel_startDate);
      sub_1D7B49168();

      sub_1D7AA76D4((unint64_t *)&unk_1F014E9A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
      v56 = sub_1D7B4A914();
      v57 = v34;
      v59 = v58;
      v57(v32, v26);
      v150 = sub_1D7AA4DE4(v56, v59, v151);
      sub_1D7B4A704();

      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 42) = 2082;
      v60 = objc_msgSend(v37, sel_endDate);
      sub_1D7B49168();

      v61 = sub_1D7B4A914();
      v63 = v62;
      v57(v32, v26);
      v150 = sub_1D7AA4DE4(v61, v63, v151);
      v64 = v51;
      sub_1D7B4A704();

      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 52) = 2048;
      v65 = (uint64_t)v124;
      v66 = sub_1D7B4A1AC();
      sub_1D7B2621C(v65);
      v150 = v66;
      sub_1D7B4A704();
      *(_WORD *)(v43 + 62) = 2048;
      v67 = v145;
      v68 = sub_1D7B4A1AC();
      sub_1D7B2621C(v67);
      v150 = v68;
      v69 = v148;
      sub_1D7B4A704();
      v70 = v126;
      _os_log_impl(&dword_1D7813000, v126, (os_log_type_t)v127, "[%{public}s.%s] Creating query: %{public}s dates: %{public}s to %{public}s day indeces: %ld-%ld", (uint8_t *)v43, 0x48u);
      v71 = v128;
      swift_arrayDestroy();
      MEMORY[0x1D829FFF4](v71, -1, -1);
      v25 = v146;
      MEMORY[0x1D829FFF4](v43, -1, -1);

      (*(void (**)(char *, uint64_t))(v149 + 8))(v147, v144);
      v38 = v125;
    }
    else
    {
      sub_1D7B2621C(v145);
      sub_1D7B2621C((uint64_t)v23);

      (*(void (**)(char *, uint64_t))(v149 + 8))(v147, v144);
      v64 = v142;
      v69 = v148;
    }
    v101 = objc_msgSend(v37, sel_statisticsInterval);
    v102 = v137;
    sub_1D7B48DB4();

    v103 = sub_1D7B48D9C();
    v105 = v104;
    (*(void (**)(char *, uint64_t))(v69 + 8))(v102, v64);
    sub_1D7ACBA20((uint64_t)v25, v138);
    (*(void (**)(os_log_t, char *, uint64_t))(v139 + 16))(v141, &v38[OBJC_IVAR___HKBalanceChartDataSource_gregorianCalendar], v140);
    if ((v105 & 1) != 0 || v103 != 1)
    {
      v113 = (_QWORD *)swift_allocObject();
      v114 = v134;
      v115 = v135;
      v113[2] = v38;
      v113[3] = v114;
      v116 = ObjectType;
      v113[4] = v115;
      v113[5] = v116;
      sub_1D7B26278();
      v118 = objc_allocWithZone(v117);
      v119 = v38;
      swift_retain();
      v111 = (void *)sub_1D7B49534();
    }
    else
    {
      sub_1D7B494C8();
      (*(void (**)(char *, _QWORD, uint64_t))(v129 + 104))(v132, *MEMORY[0x1E0D29120], v130);
      v106 = (_QWORD *)swift_allocObject();
      v107 = v134;
      v108 = v135;
      v106[2] = v38;
      v106[3] = v107;
      v109 = ObjectType;
      v106[4] = v108;
      v106[5] = v109;
      sub_1D7B495F4();
      swift_allocObject();
      v110 = v38;
      swift_retain();
      sub_1D7B495D0();
      v111 = (void *)sub_1D7B495E8();
      swift_release();
    }
    v120 = objc_msgSend(v38, sel_queryDescription);
    objc_msgSend(v111, sel_setDebugIdentifier_, v120);

    sub_1D7AA7E70(0, (unint64_t *)&qword_1F01493B0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v121 = swift_allocObject();
    *(_OWORD *)(v121 + 16) = xmmword_1D7B83E30;
    *(_QWORD *)(v121 + 32) = v111;
    v151[0] = v121;
    sub_1D7B4A4B8();
    v112 = v151[0];
    sub_1D7B2621C((uint64_t)v25);
  }
  else
  {
    v147 = (char *)v34;
    sub_1D7B4966C();
    v72 = a1;
    v73 = v3;
    v74 = v72;
    v75 = (char *)v73;
    v76 = sub_1D7B49684();
    v77 = sub_1D7B4A620();
    v78 = v77;
    if (os_log_type_enabled(v76, v77))
    {
      v79 = swift_slowAlloc();
      v145 = swift_slowAlloc();
      v151[0] = v145;
      *(_DWORD *)v79 = 136447234;
      v141 = v76;
      v80 = sub_1D7B4AA94();
      v150 = sub_1D7AA4DE4(v80, v81, v151);
      sub_1D7B4A704();
      swift_bridgeObjectRelease();
      *(_WORD *)(v79 + 12) = 2080;
      LODWORD(ObjectType) = v78;
      v83 = *(_QWORD *)&v75[OBJC_IVAR___HKBalanceChartDataSource_debugIdentifier];
      v82 = *(_QWORD *)&v75[OBJC_IVAR___HKBalanceChartDataSource_debugIdentifier + 8];
      swift_bridgeObjectRetain();
      v150 = sub_1D7AA4DE4(v83, v82, v151);
      sub_1D7B4A704();

      swift_bridgeObjectRelease();
      *(_WORD *)(v79 + 22) = 2082;
      v84 = objc_msgSend(v74, sel_statisticsInterval);
      v85 = v136;
      sub_1D7B48DB4();

      sub_1D7AA76D4((unint64_t *)&unk_1F014FD80, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEAB0], MEMORY[0x1E0CAEAF0]);
      v86 = v142;
      v87 = sub_1D7B4A914();
      v89 = v88;
      (*(void (**)(char *, uint64_t))(v148 + 8))(v85, v86);
      v150 = sub_1D7AA4DE4(v87, v89, v151);
      sub_1D7B4A704();

      swift_bridgeObjectRelease();
      *(_WORD *)(v79 + 32) = 2082;
      v90 = objc_msgSend(v74, sel_startDate);
      sub_1D7B49168();

      sub_1D7AA76D4((unint64_t *)&unk_1F014E9A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
      v91 = sub_1D7B4A914();
      v93 = v92;
      v94 = v147;
      ((void (*)(char *, uint64_t))v147)(v32, v26);
      v150 = sub_1D7AA4DE4(v91, v93, v151);
      sub_1D7B4A704();

      swift_bridgeObjectRelease();
      *(_WORD *)(v79 + 42) = 2082;
      v95 = objc_msgSend(v74, sel_endDate);
      sub_1D7B49168();

      v96 = sub_1D7B4A914();
      v98 = v97;
      ((void (*)(char *, uint64_t))v94)(v32, v26);
      v150 = sub_1D7AA4DE4(v96, v98, v151);
      sub_1D7B4A704();

      swift_bridgeObjectRelease();
      v99 = v141;
      _os_log_impl(&dword_1D7813000, v141, (os_log_type_t)ObjectType, "[%{public}s.%s] Skipping query: %{public}s dates: %{public}s to %{public}s", (uint8_t *)v79, 0x34u);
      v100 = v145;
      swift_arrayDestroy();
      MEMORY[0x1D829FFF4](v100, -1, -1);
      MEMORY[0x1D829FFF4](v79, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v149 + 8))(v146, v144);
    return MEMORY[0x1E0DEE9D8];
  }
  return v112;
}

uint64_t sub_1D7B24D44(uint64_t a1, _QWORD *a2, char a3, void *a4, void (*a5)(_QWORD, _QWORD), const char *a6, uint64_t a7, const char *a8, unint64_t *a9, uint64_t (*a10)(uint64_t))
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t (*v22)(uint64_t);
  unint64_t *v23;
  id v24;
  char *v25;
  NSObject *v26;
  os_log_type_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  id v39;
  char *v40;
  NSObject *v41;
  os_log_type_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v59;
  os_log_t v60;
  int v61;
  _QWORD *v62;
  uint64_t v63;
  const char *v64;
  void (*v65)(_QWORD, _QWORD);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;

  v16 = sub_1D7B4969C();
  v67 = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v59 - v20;
  if ((a3 & 1) != 0)
  {
    v38 = a2;
    sub_1D7B4966C();
    sub_1D7B2645C(a2, 1);
    v39 = a4;
    sub_1D7B2645C(a2, 1);
    v40 = (char *)v39;
    v41 = sub_1D7B49684();
    v42 = sub_1D7B4A608();
    v43 = os_log_type_enabled(v41, v42);
    v44 = MEMORY[0x1E0DEE9B8];
    if (v43)
    {
      v45 = swift_slowAlloc();
      v64 = a6;
      v46 = v45;
      v62 = (_QWORD *)swift_slowAlloc();
      v63 = swift_slowAlloc();
      *(_QWORD *)&v69 = v63;
      *(_DWORD *)v46 = 136446722;
      v65 = a5;
      v47 = sub_1D7B4AA94();
      v68 = sub_1D7AA4DE4(v47, v48, (uint64_t *)&v69);
      sub_1D7B4A704();
      swift_bridgeObjectRelease();
      *(_WORD *)(v46 + 12) = 2080;
      v66 = v16;
      v49 = *(_QWORD *)&v40[OBJC_IVAR___HKBalanceChartDataSource_debugIdentifier];
      v50 = *(_QWORD *)&v40[OBJC_IVAR___HKBalanceChartDataSource_debugIdentifier + 8];
      swift_bridgeObjectRetain();
      v68 = sub_1D7AA4DE4(v49, v50, (uint64_t *)&v69);
      sub_1D7B4A704();

      swift_bridgeObjectRelease();
      *(_WORD *)(v46 + 22) = 2114;
      v51 = a2;
      v52 = _swift_stdlib_bridgeErrorToNSError();
      v68 = v52;
      v44 = MEMORY[0x1E0DEE9B8];
      sub_1D7B4A704();
      v53 = v62;
      *v62 = v52;
      a5 = v65;
      sub_1D7B26468(a2, 1);
      sub_1D7B26468(a2, 1);
      _os_log_impl(&dword_1D7813000, v41, v42, "[%{public}s.%s] Query failed with error: %{public}@", (uint8_t *)v46, 0x20u);
      sub_1D7ABBB38();
      swift_arrayDestroy();
      MEMORY[0x1D829FFF4](v53, -1, -1);
      v54 = v63;
      swift_arrayDestroy();
      MEMORY[0x1D829FFF4](v54, -1, -1);
      MEMORY[0x1D829FFF4](v46, -1, -1);

      (*(void (**)(char *, uint64_t))(v67 + 8))(v19, v66);
    }
    else
    {

      sub_1D7B26468(a2, 1);
      sub_1D7B26468(a2, 1);

      (*(void (**)(char *, uint64_t))(v67 + 8))(v19, v16);
    }
    v69 = 0u;
    v70 = 0u;
    v57 = a2;
    a5(&v69, a2);
    sub_1D7B26468(a2, 1);
    sub_1D7B26468(a2, 1);
    v56 = v44 + 8;
  }
  else
  {
    v64 = a8;
    v66 = v16;
    v23 = a9;
    v22 = a10;
    swift_bridgeObjectRetain();
    sub_1D7B4966C();
    sub_1D7B2645C(a2, 0);
    v24 = a4;
    sub_1D7B2645C(a2, 0);
    v25 = (char *)v24;
    v26 = sub_1D7B49684();
    v27 = sub_1D7B4A5F0();
    v28 = v27;
    if (os_log_type_enabled(v26, v27))
    {
      v29 = swift_slowAlloc();
      v61 = v28;
      v30 = v29;
      v62 = (_QWORD *)swift_slowAlloc();
      *(_QWORD *)&v69 = v62;
      *(_DWORD *)v30 = 136446722;
      v60 = v26;
      v31 = sub_1D7B4AA94();
      v68 = sub_1D7AA4DE4(v31, v32, (uint64_t *)&v69);
      v65 = a5;
      sub_1D7B4A704();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2080;
      v63 = (uint64_t)a9;
      v33 = *(_QWORD *)&v25[OBJC_IVAR___HKBalanceChartDataSource_debugIdentifier];
      v34 = *(_QWORD *)&v25[OBJC_IVAR___HKBalanceChartDataSource_debugIdentifier + 8];
      swift_bridgeObjectRetain();
      v68 = sub_1D7AA4DE4(v33, v34, (uint64_t *)&v69);
      sub_1D7B4A704();

      v22 = a10;
      v23 = (unint64_t *)v63;
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 22) = 2080;
      v68 = a2[2];
      v35 = sub_1D7B4A914();
      v68 = sub_1D7AA4DE4(v35, v36, (uint64_t *)&v69);
      a5 = v65;
      sub_1D7B4A704();
      swift_bridgeObjectRelease();
      sub_1D7B26468(a2, 0);
      sub_1D7B26468(a2, 0);
      v26 = v60;
      _os_log_impl(&dword_1D7813000, v60, (os_log_type_t)v61, v64, (uint8_t *)v30, 0x20u);
      v37 = v62;
      swift_arrayDestroy();
      MEMORY[0x1D829FFF4](v37, -1, -1);
      MEMORY[0x1D829FFF4](v30, -1, -1);
    }
    else
    {

      sub_1D7B26468(a2, 0);
      sub_1D7B26468(a2, 0);
    }

    (*(void (**)(char *, uint64_t))(v67 + 8))(v21, v66);
    sub_1D7AA787C(0, v23, v22, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    *((_QWORD *)&v70 + 1) = v55;
    *(_QWORD *)&v69 = a2;
    a5(&v69, 0);
    v56 = MEMORY[0x1E0DEE9B8] + 8;
  }
  return sub_1D7B143C0((uint64_t)&v69, (uint64_t)&qword_1ED0AC810, v56, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1D7AA7E70);
}

id sub_1D7B25438(uint64_t a1)
{
  id v1;
  uint64_t v3;
  _BYTE v4[24];
  uint64_t v5;

  sub_1D7AB9B80(a1, (uint64_t)v4);
  if (!v5)
  {
    sub_1D7B143C0((uint64_t)v4, (uint64_t)&qword_1ED0AC810, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1D7AA7E70);
    return 0;
  }
  sub_1D7AA787C(0, (unint64_t *)&unk_1F014FDE8, (uint64_t (*)(uint64_t))sub_1D7ABB0A4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  v1 = sub_1D7B25A5C(v3);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1D7B255C0@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  id v26;
  uint64_t v27;
  char v28;
  int v29;
  BOOL v30;
  uint64_t *v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  id v34;
  id v35;
  char *v36;
  id v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  char *v43;
  uint64_t result;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  char *v50;
  char *v51;
  void (*v52)(char *, char *, uint64_t);
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  id v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  uint64_t v69;

  v60 = a2;
  v61 = a1;
  sub_1D7AB7284();
  v58 = v3;
  v4 = MEMORY[0x1E0C80A78](v3);
  v59 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v57 = (char *)&v56 - v6;
  v7 = sub_1D7B49198();
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1D7B4A1C4();
  v69 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x1E0C80A78](v8);
  v68 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v67 = (char *)&v56 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v66 = (char *)&v56 - v14;
  MEMORY[0x1E0C80A78](v13);
  v63 = (char *)&v56 - v15;
  v16 = sub_1D7B48DE4();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_1D7B49300();
  v20 = *(_QWORD *)(v62 - 8);
  v64 = v20;
  v21 = MEMORY[0x1E0C80A78](v62);
  v23 = (char *)&v56 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v56 - v24;
  v26 = objc_msgSend(a1, sel_statisticsInterval);
  sub_1D7B48DB4();

  v27 = sub_1D7B48DCC();
  v29 = v28 & 1;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  v30 = v27 == 1 && v29 == 0;
  v31 = &OBJC_IVAR___HKBalanceChartDataSource_gregorianUTCCalendar;
  v32 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  if (!v30)
    v31 = &OBJC_IVAR___HKBalanceChartDataSource_gregorianCalendar;
  v33 = v62;
  v32(v25, v65 + *v31, v62);
  v34 = v61;
  v35 = objc_msgSend(v61, sel_startDate);
  sub_1D7B49168();

  v32(v23, (uint64_t)v25, v33);
  v36 = v63;
  sub_1D7B4A194();
  v37 = objc_msgSend(v34, sel_endDate);
  sub_1D7B49168();

  v32(v23, (uint64_t)v25, v33);
  v38 = v67;
  v39 = v66;
  sub_1D7B4A194();
  v40 = v68;
  sub_1D7B4A164();
  sub_1D7B4A17C();
  v41 = v69;
  v42 = *(void (**)(char *, uint64_t))(v69 + 8);
  v42(v40, v8);
  v42(v38, v8);
  sub_1D7AA76D4((unint64_t *)&unk_1F014F450, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB44E0], MEMORY[0x1E0CB44F8]);
  v43 = v36;
  LOBYTE(v40) = sub_1D7B4A308();
  result = (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v25, v33);
  if ((v40 & 1) != 0)
  {
    v46 = v57;
    v45 = v58;
    v47 = &v57[*(int *)(v58 + 48)];
    v48 = v41;
    v49 = *(void (**)(char *, char *, uint64_t))(v41 + 32);
    v49(v57, v43, v8);
    v49(v47, v39, v8);
    v50 = v59;
    v51 = &v59[*(int *)(v45 + 48)];
    v52 = *(void (**)(char *, char *, uint64_t))(v48 + 16);
    v52(v59, v46, v8);
    v52(v51, v47, v8);
    v53 = v60;
    v49(v60, v50, v8);
    v42(v51, v8);
    v54 = &v50[*(int *)(v45 + 48)];
    v49(v50, v46, v8);
    v49(v54, v47, v8);
    sub_1D7ACB9A8();
    v49(&v53[*(int *)(v55 + 36)], v54, v8);
    return ((uint64_t (*)(char *, uint64_t))v42)(v50, v8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1D7B25A5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  id v13;
  void (*v14)(_BYTE *, uint64_t);
  uint64_t v15;
  void *v16;
  _BYTE v18[16];

  sub_1D7AA787C(0, (unint64_t *)&qword_1F014D000, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v18[-v4];
  v6 = sub_1D7B49198();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v8);
  v12 = &v18[-v11];
  v13 = objc_msgSend(objc_allocWithZone((Class)HKGraphSeriesDataBlock), sel_init);
  sub_1D7B49174();
  sub_1D7B492A0();
  v14 = *(void (**)(_BYTE *, uint64_t))(v7 + 8);
  v14(v10, v6);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1D7B49174();
    v15 = sub_1D7B143C0((uint64_t)v5, (uint64_t)&qword_1F014D000, (uint64_t)MEMORY[0x1E0CB0870], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1D7AA787C);
  }
  else
  {
    v15 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 32))(v12, v5, v6);
  }
  MEMORY[0x1E0C80A78](v15);
  *(_QWORD *)&v18[-16] = v1;
  *(_QWORD *)&v18[-8] = v12;
  if ((unint64_t)sub_1D7B23328((_QWORD *(*)(uint64_t *__return_ptr, uint64_t))sub_1D7B26408, (uint64_t)&v18[-32], a1) >> 62)
  {
    sub_1D7ACBA64();
    sub_1D7B4A89C();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1D7B4A944();
    sub_1D7ACBA64();
  }
  swift_bridgeObjectRelease();
  sub_1D7ACBA64();
  v16 = (void *)sub_1D7B4A4A0();
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_setChartPoints_, v16);

  v14(v12, v6);
  return v13;
}

uint64_t sub_1D7B25CCC@<X0>(_QWORD *a1@<X0>, char *a2@<X1>, char *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  char *v24;
  void *v25;
  id v26;
  _QWORD *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  double v31;
  uint64_t v32;
  uint64_t result;
  double v34;
  uint64_t v35;
  void *v36;
  id v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  void (*v44)(char *, uint64_t);
  char *v45;
  char *v46;
  char *v47;
  void (*v48)(char *, char *, uint64_t);
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  char *v55;
  char *v56;
  _BYTE v57[40];

  v55 = a2;
  v56 = a3;
  v54 = a4;
  v5 = sub_1D7B4A1C4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D7ACB9A8();
  v49 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1D7B49198();
  v13 = *(_QWORD *)(v12 - 8);
  v52 = v12;
  v53 = v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v47 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v46 = (char *)&v45 - v17;
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v45 - v18;
  v20 = (char *)objc_opt_self();
  v21 = a1[3];
  v50 = a1;
  __swift_project_boxed_opaque_existential_0(a1, v21);
  sub_1D7B49600();
  v48 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v48(v8, v11, v5);
  sub_1D7B2621C((uint64_t)v11);
  v22 = sub_1D7B4A1AC();
  v23 = *(void (**)(char *, uint64_t))(v6 + 8);
  v51 = v5;
  v23(v8, v5);
  v24 = &v55[OBJC_IVAR___HKBalanceChartDataSource_gregorianCalendar];
  v25 = (void *)sub_1D7B492AC();
  v55 = v20;
  v26 = objc_msgSend(v20, sel_hk_dateOnDayIndex_atHour_calendar_, v22, 0, v25);

  sub_1D7B49168();
  if ((sub_1D7B4915C() & 1) == 0)
  {
    result = (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v19, v52);
    v43 = 0;
    goto LABEL_8;
  }
  v45 = v24;
  v56 = v19;
  v27 = v50;
  __swift_project_boxed_opaque_existential_0(v50, v50[3]);
  sub_1D7B49600();
  v28 = v51;
  v29 = v48;
  v48(v8, v11, v51);
  sub_1D7B2621C((uint64_t)v11);
  v30 = sub_1D7B4A1AC();
  v23(v8, v28);
  v31 = (double)v30;
  __swift_project_boxed_opaque_existential_0(v27, v27[3]);
  sub_1D7B49600();
  v29(v8, &v11[*(int *)(v49 + 36)], v28);
  sub_1D7B2621C((uint64_t)v11);
  v32 = sub_1D7B4A1AC();
  result = ((uint64_t (*)(char *, uint64_t))v23)(v8, v28);
  if (v31 > (double)v32)
  {
    __break(1u);
    goto LABEL_10;
  }
  v34 = ceil(((double)v32 - v31) * 0.5 + v31);
  if ((~*(_QWORD *)&v34 & 0x7FF0000000000000) == 0)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v34 <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v34 < 9.22337204e18)
  {
    v35 = (uint64_t)v34;
    v36 = (void *)sub_1D7B492AC();
    v37 = objc_msgSend(v55, sel_hk_noonWithDayIndex_calendar_, v35, v36);

    v38 = v46;
    sub_1D7B49168();

    sub_1D7AC0938((uint64_t)v27, (uint64_t)v57);
    v39 = v52;
    v40 = v53;
    v41 = (uint64_t)v47;
    (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v47, v38, v52);
    v42 = objc_allocWithZone((Class)type metadata accessor for BalanceChartPoint());
    v43 = sub_1D7AC20AC((uint64_t)v57, v41);
    v44 = *(void (**)(char *, uint64_t))(v40 + 8);
    v44(v38, v39);
    result = ((uint64_t (*)(char *, uint64_t))v44)(v56, v39);
LABEL_8:
    *v54 = v43;
    return result;
  }
LABEL_12:
  __break(1u);
  return result;
}

id BalanceChartDataSource.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void BalanceChartDataSource.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id BalanceChartDataSource.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BalanceChartDataSource();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D7B2621C(uint64_t a1)
{
  uint64_t v2;

  sub_1D7ACB9A8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D7B2625C(uint64_t a1, _QWORD *a2, char a3)
{
  return sub_1D7B2633C(a1, a2, a3, "[%{public}s.%s] Query found %s summarie(s).", (unint64_t *)&unk_1F014FE00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D29020]);
}

void sub_1D7B26278()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F014FD90)
  {
    sub_1D7B49528();
    sub_1D7AA76D4((unint64_t *)&unk_1F014FD98, (uint64_t (*)(uint64_t))MEMORY[0x1E0D29020], MEMORY[0x1E0D29018]);
    v0 = sub_1D7B49540();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F014FD90);
  }
}

uint64_t objectdestroyTm_0()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D7B26320(uint64_t a1, _QWORD *a2, char a3)
{
  return sub_1D7B2633C(a1, a2, a3, "[%{public}s.%s] Query found %s collections.", &qword_1F014FDF8, MEMORY[0x1E0D290E0]);
}

uint64_t sub_1D7B2633C(uint64_t a1, _QWORD *a2, char a3, const char *a4, unint64_t *a5, uint64_t (*a6)(uint64_t))
{
  uint64_t v6;

  return sub_1D7B24D44(a1, a2, a3 & 1, *(void **)(v6 + 16), *(void (**)(_QWORD, _QWORD))(v6 + 24), *(const char **)(v6 + 32), *(_QWORD *)(v6 + 40), a4, a5, a6);
}

id sub_1D7B26374(uint64_t a1)
{
  return sub_1D7B25438(a1);
}

uint64_t sub_1D7B2637C()
{
  return type metadata accessor for BalanceChartDataSource();
}

uint64_t sub_1D7B26384()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D7B49300();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for BalanceChartDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1D7B26408@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1D7B25CCC(a1, *(char **)(v2 + 16), *(char **)(v2 + 24), a2);
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t sub_1D7B26438()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

id sub_1D7B2645C(id a1, char a2)
{
  if ((a2 & 1) != 0)
    return a1;
  else
    return (id)swift_bridgeObjectRetain();
}

void sub_1D7B26468(id a1, char a2)
{
  if ((a2 & 1) != 0)

  else
    swift_bridgeObjectRelease();
}

uint64_t sub_1D7B26474(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1D7B4A410();
    return sub_1D7B4A44C();
  }
  return result;
}

uint64_t destroy for FeatureAttributeLegibilityView()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for FeatureAttributeLegibilityView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for FeatureAttributeLegibilityView(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for FeatureAttributeLegibilityView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FeatureAttributeLegibilityView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FeatureAttributeLegibilityView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FeatureAttributeLegibilityView()
{
  return &type metadata for FeatureAttributeLegibilityView;
}

uint64_t sub_1D7B2670C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D7B2671C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];
  uint64_t v9;
  __int128 v10;
  __int128 v11;

  sub_1D7B26C3C();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = a1;
  sub_1D7B4A0F8();
  v10 = *(_OWORD *)(a1 + 32);
  v11 = v10;
  sub_1D7AD3B64((uint64_t)&v11);
  sub_1D7B4A41C();
  sub_1D7B26D1C();
  sub_1D7B49F3C();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_1D7B26818(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;

  sub_1D7ABCCEC();
  swift_bridgeObjectRetain();
  v2 = sub_1D7B49EB8();
  v4 = v3;
  v6 = v5;
  v7 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  v8 = (id)PSHighLegibilityAlternateFont();

  if (v8)
  {
    sub_1D7B49E34();
    v9 = sub_1D7B49E88();
    v11 = v10;
    v13 = v12;
    v15 = v14;
    swift_release();
    sub_1D7AACF84(v2, v4, v6 & 1);
    swift_bridgeObjectRelease();
    *(_QWORD *)a1 = v9;
    *(_QWORD *)(a1 + 8) = v11;
    *(_BYTE *)(a1 + 16) = v13 & 1;
    *(_QWORD *)(a1 + 24) = v15;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1D7B26948@<X0>(uint64_t a1@<X8>)
{
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  _OWORD v28[4];

  v21 = a1;
  v2 = sub_1D7B49C3C();
  v19 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D7B26B5C();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D7B26D80(0);
  v11 = v10;
  v20 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = v1[1];
  v28[0] = *v1;
  v28[1] = v14;
  v28[2] = v1[2];
  v22 = v28;
  sub_1D7B26BD8();
  sub_1D7B26C9C();
  sub_1D7B49E40();
  sub_1D7B49C30();
  v15 = sub_1D7AA76D4(&qword_1F014FE50, (uint64_t (*)(uint64_t))sub_1D7B26B5C, MEMORY[0x1E0CDD950]);
  v16 = MEMORY[0x1E0CDBD50];
  sub_1D7B49F78();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v27 = v28[0];
  v23 = v6;
  v24 = v2;
  v25 = v15;
  v26 = v16;
  swift_getOpaqueTypeConformance2();
  sub_1D7ABCCEC();
  sub_1D7B49F0C();
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v13, v11);
}

void sub_1D7B26B5C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F014FE20)
  {
    sub_1D7B26BD8();
    sub_1D7B26C9C();
    v0 = sub_1D7B49E4C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F014FE20);
  }
}

void sub_1D7B26BD8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F014FE28)
  {
    sub_1D7B26C3C();
    sub_1D7B49CF0();
    v0 = sub_1D7B49978();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F014FE28);
  }
}

void sub_1D7B26C3C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F014FE30)
  {
    v0 = sub_1D7B4A110();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F014FE30);
  }
}

unint64_t sub_1D7B26C9C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1F014FE38;
  if (!qword_1F014FE38)
  {
    sub_1D7B26BD8();
    v2 = v1;
    v3[0] = sub_1D7B26D1C();
    v3[1] = sub_1D7AA76D4(&qword_1F014D360, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDCFD0], MEMORY[0x1E0CDCFB8]);
    result = MEMORY[0x1D829FF28](MEMORY[0x1E0CD9C20], v2, v3);
    atomic_store(result, (unint64_t *)&qword_1F014FE38);
  }
  return result;
}

unint64_t sub_1D7B26D1C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[3];

  result = qword_1F014FE40;
  if (!qword_1F014FE40)
  {
    sub_1D7B26C3C();
    v2[0] = MEMORY[0x1E0CE0400];
    v2[1] = MEMORY[0x1E0CDDD58];
    v2[2] = MEMORY[0x1E0CE0400];
    result = MEMORY[0x1D829FF28](MEMORY[0x1E0CDFF98], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1F014FE40);
  }
  return result;
}

void sub_1D7B26D80(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[4];

  if (!qword_1F014FE48)
  {
    sub_1D7B26B5C();
    v5[0] = v2;
    v5[1] = sub_1D7B49C3C();
    v5[2] = sub_1D7AA76D4(&qword_1F014FE50, (uint64_t (*)(uint64_t))sub_1D7B26B5C, MEMORY[0x1E0CDD950]);
    v5[3] = MEMORY[0x1E0CDBD50];
    v3 = MEMORY[0x1D829FEEC](a1, v5, MEMORY[0x1E0CDF2C8], 0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1F014FE48);
  }
}

uint64_t sub_1D7B26E30()
{
  uint64_t v0;

  return sub_1D7B2671C(*(_QWORD *)(v0 + 16));
}

void sub_1D7B26E38(uint64_t a1@<X8>)
{
  sub_1D7B26818(a1);
}

uint64_t sub_1D7B26E40()
{
  sub_1D7B26D80(255);
  sub_1D7B26B5C();
  sub_1D7B49C3C();
  sub_1D7AA76D4(&qword_1F014FE50, (uint64_t (*)(uint64_t))sub_1D7B26B5C, MEMORY[0x1E0CDD950]);
  swift_getOpaqueTypeConformance2();
  sub_1D7ABCCEC();
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D7B26EFC()
{
  return swift_deallocClassInstance();
}

uint64_t _s8SentinelCMa()
{
  return objc_opt_self();
}

id sub_1D7B26F2C()
{
  uint64_t ObjCClassFromMetadata;
  id result;

  _s8SentinelCMa();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  result = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  qword_1F0154598 = (uint64_t)result;
  return result;
}

id FeatureRegulatoryInfoProvider.featureAvailabilityStore.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC8HealthUI29FeatureRegulatoryInfoProvider_featureAvailabilityStore);
}

uint64_t FeatureRegulatoryInfoProvider.logger.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC8HealthUI29FeatureRegulatoryInfoProvider_logger;
  v4 = sub_1D7B4969C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1D7B26FD4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D7B4981C();
  swift_release();
  return swift_release();
}

uint64_t sub_1D7B2703C(uint64_t a1, void **a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  uint64_t v13;

  v4 = type metadata accessor for FeatureRegulatoryInfo(0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - v8;
  sub_1D7B28028(a1, (uint64_t)&v13 - v8);
  v10 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D7B28028((uint64_t)v9, (uint64_t)v7);
  v11 = v10;
  sub_1D7B49828();
  return sub_1D7B2806C((uint64_t)v9);
}

uint64_t sub_1D7B2711C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D7B4981C();
  swift_release();
  return swift_release();
}

uint64_t sub_1D7B27188()
{
  swift_beginAccess();
  sub_1D7B280A8(0, &qword_1F014FF00, MEMORY[0x1E0C96198]);
  sub_1D7B49804();
  return swift_endAccess();
}

uint64_t sub_1D7B271F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t, uint64_t);
  uint64_t v12;

  sub_1D7B280A8(0, &qword_1F014FF58, MEMORY[0x1E0C96180]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x1E0C80A78](v2);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - v8;
  v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v10((char *)&v12 - v8, a1, v3);
  v10(v7, (uint64_t)v9, v3);
  swift_beginAccess();
  sub_1D7B280A8(0, &qword_1F014FF00, MEMORY[0x1E0C96198]);
  sub_1D7B49810();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
}

uint64_t sub_1D7B27320()
{
  swift_beginAccess();
  sub_1D7B280A8(0, &qword_1F014FF00, MEMORY[0x1E0C96198]);
  sub_1D7B49804();
  return swift_endAccess();
}

id FeatureRegulatoryInfoProvider.__allocating_init(featureAvailabilityStore:pairedDeviceFeatureAttributesProvider:logger:infoTransform:)(void *a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD, uint64_t), uint64_t a5)
{
  objc_class *v5;
  id v11;
  id v12;

  v11 = objc_allocWithZone(v5);
  v12 = sub_1D7B27B48(a1, a2, a3, a4, a5);

  swift_release();
  swift_release();
  return v12;
}

id FeatureRegulatoryInfoProvider.init(featureAvailabilityStore:pairedDeviceFeatureAttributesProvider:logger:infoTransform:)(void *a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD, uint64_t), uint64_t a5)
{
  id v6;

  v6 = sub_1D7B27B48(a1, a2, a3, a4, a5);

  swift_release();
  swift_release();
  return v6;
}

void sub_1D7B27454(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11[3];

  v2 = a2 + 16;
  v3 = sub_1D7B49684();
  v4 = sub_1D7B4A620();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v11[0] = v6;
    *(_DWORD *)v5 = 136446210;
    v7 = sub_1D7B4AA94();
    sub_1D7AA4DE4(v7, v8, v11);
    sub_1D7B4A704();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D7813000, v3, v4, "[%{public}s] Observed change to paired device feature attributes provider", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D829FFF4](v6, -1, -1);
    MEMORY[0x1D829FFF4](v5, -1, -1);
  }

  swift_beginAccess();
  v9 = MEMORY[0x1D82A00A8](v2);
  if (v9)
  {
    v10 = (void *)v9;
    sub_1D7B275BC();

  }
}

void sub_1D7B275BC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  char *v14;
  id v15;
  char *v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  os_log_t v33;
  void *v34;
  char *v35;
  _QWORD v36[2];
  char *v37;
  os_log_t v38;
  int v39;
  void *v40;
  uint64_t v41;
  id v42[2];

  v1 = v0;
  v42[1] = *(id *)MEMORY[0x1E0C80C00];
  swift_getObjectType();
  v2 = type metadata accessor for FeatureRegulatoryInfo(0);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v36 - v6;
  v8 = *(void **)&v0[OBJC_IVAR____TtC8HealthUI29FeatureRegulatoryInfoProvider_featureAvailabilityStore];
  v42[0] = 0;
  v9 = objc_msgSend(v8, sel_featureOnboardingRecordWithError_, v42);
  v10 = v42[0];
  if (v9)
  {
    v11 = v9;
  }
  else
  {
    v12 = v10;
    v13 = (void *)sub_1D7B49030();

    swift_willThrow();
    v14 = v1;
    v15 = v13;
    v16 = v14;
    v17 = v13;
    v18 = sub_1D7B49684();
    v19 = sub_1D7B4A608();
    v20 = v19;
    if (os_log_type_enabled(v18, v19))
    {
      v21 = swift_slowAlloc();
      v39 = v20;
      v22 = v21;
      v40 = (void *)swift_slowAlloc();
      v42[0] = v40;
      *(_DWORD *)v22 = 136446722;
      v38 = v18;
      v23 = sub_1D7B4AA94();
      v41 = sub_1D7AA4DE4(v23, v24, (uint64_t *)v42);
      v37 = v16;
      sub_1D7B4A704();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2080;
      v36[1] = v22 + 14;
      v25 = objc_msgSend(v8, sel_featureIdentifier);
      v26 = sub_1D7B4A3BC();
      v28 = v27;

      v41 = sub_1D7AA4DE4(v26, v28, (uint64_t *)v42);
      sub_1D7B4A704();
      v29 = v37;

      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 22) = 2080;
      v41 = (uint64_t)v13;
      v30 = v13;
      sub_1D7AAEAB4();
      v31 = sub_1D7B4A3E0();
      v41 = sub_1D7AA4DE4(v31, v32, (uint64_t *)v42);
      sub_1D7B4A704();
      swift_bridgeObjectRelease();

      v33 = v38;
      _os_log_impl(&dword_1D7813000, v38, (os_log_type_t)v39, "[%{public}s] Error getting onboarding record for %s: %s", (uint8_t *)v22, 0x20u);
      v34 = v40;
      swift_arrayDestroy();
      MEMORY[0x1D829FFF4](v34, -1, -1);
      MEMORY[0x1D829FFF4](v22, -1, -1);

    }
    else
    {

    }
    v11 = 0;
  }
  (*(void (**)(id, _QWORD))&v1[OBJC_IVAR____TtC8HealthUI29FeatureRegulatoryInfoProvider_infoTransform])(v11, *(_QWORD *)&v1[OBJC_IVAR____TtC8HealthUI29FeatureRegulatoryInfoProvider_pairedDeviceFeatureAttributesProvider]);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D7B28028((uint64_t)v7, (uint64_t)v5);
  v35 = v1;
  sub_1D7B49828();
  sub_1D7B2806C((uint64_t)v7);

}

id FeatureRegulatoryInfoProvider.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void FeatureRegulatoryInfoProvider.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id FeatureRegulatoryInfoProvider.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FeatureRegulatoryInfoProvider();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D7B27B0C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for FeatureRegulatoryInfoProvider();
  result = sub_1D7B49780();
  *a1 = result;
  return result;
}

id sub_1D7B27B48(void *a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD, uint64_t), uint64_t a5)
{
  char *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t, uint64_t);
  void (*v21)(char *, uint64_t, uint64_t);
  char *v22;
  void (*v23)(_QWORD, uint64_t);
  char *v24;
  id v25;
  objc_class *v26;
  id v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v38)(_QWORD, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t ObjectType;
  objc_super v45;
  uint64_t v46;

  v38 = a4;
  v40 = a3;
  ObjectType = swift_getObjectType();
  v10 = sub_1D7B4969C();
  v11 = *(_QWORD *)(v10 - 8);
  v39 = v10;
  v12 = *(_QWORD *)(v11 + 64);
  v41 = v11;
  v43 = v12;
  MEMORY[0x1E0C80A78](v10);
  v42 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FeatureRegulatoryInfo(0);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v38 - v18;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8HealthUI29FeatureRegulatoryInfoProvider_subscribers] = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)&v5[OBJC_IVAR____TtC8HealthUI29FeatureRegulatoryInfoProvider_featureAvailabilityStore] = a1;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8HealthUI29FeatureRegulatoryInfoProvider_pairedDeviceFeatureAttributesProvider] = a2;
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v20(&v5[OBJC_IVAR____TtC8HealthUI29FeatureRegulatoryInfoProvider_logger], a3, v10);
  v21 = v20;
  v22 = &v5[OBJC_IVAR____TtC8HealthUI29FeatureRegulatoryInfoProvider_infoTransform];
  v23 = v38;
  *(_QWORD *)v22 = v38;
  *((_QWORD *)v22 + 1) = a5;
  v24 = v5;
  v25 = a1;
  swift_retain();
  swift_retain();
  v23(0, a2);
  swift_beginAccess();
  sub_1D7B28028((uint64_t)v19, (uint64_t)v17);
  sub_1D7B497F8();
  sub_1D7B2806C((uint64_t)v19);
  swift_endAccess();

  v26 = (objc_class *)type metadata accessor for FeatureRegulatoryInfoProvider();
  v45.receiver = v24;
  v45.super_class = v26;
  v27 = objc_msgSendSuper2(&v45, sel_init);
  sub_1D7B275BC();
  type metadata accessor for PairedDeviceFeatureAttributesProvider();
  sub_1D7B28100();
  v46 = sub_1D7B49780();
  v28 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v29 = v42;
  v30 = v39;
  v31 = v40;
  v21(v42, v40, v39);
  v32 = v41;
  v33 = (*(unsigned __int8 *)(v41 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
  v34 = (v43 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
  v35 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v32 + 32))(v35 + v33, v29, v30);
  *(_QWORD *)(v35 + v34) = v28;
  *(_QWORD *)(v35 + ((v34 + 15) & 0xFFFFFFFFFFFFFFF8)) = ObjectType;
  v36 = swift_allocObject();
  *(_QWORD *)(v36 + 16) = sub_1D7B281E8;
  *(_QWORD *)(v36 + 24) = v35;
  sub_1D7B497E0();
  sub_1D7B49858();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1D7B4975C();
  swift_endAccess();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v30);
  return v27;
}

uint64_t type metadata accessor for FeatureRegulatoryInfoProvider()
{
  uint64_t result;

  result = qword_1F014FF48;
  if (!qword_1F014FF48)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D7B27F08()
{
  return type metadata accessor for FeatureRegulatoryInfoProvider();
}

void sub_1D7B27F10()
{
  unint64_t v0;
  unint64_t v1;

  sub_1D7B4969C();
  if (v0 <= 0x3F)
  {
    sub_1D7B280A8(319, &qword_1F014FF00, MEMORY[0x1E0C96198]);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for FeatureRegulatoryInfoProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeatureRegulatoryInfoProvider.featureRegulatoryInfo.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of FeatureRegulatoryInfoProvider.$featureRegulatoryInfo.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of FeatureRegulatoryInfoProvider.__allocating_init(featureAvailabilityStore:pairedDeviceFeatureAttributesProvider:logger:infoTransform:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t sub_1D7B28028(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeatureRegulatoryInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D7B2806C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FeatureRegulatoryInfo(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1D7B280A8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = type metadata accessor for FeatureRegulatoryInfo(255);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D7B28100()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F014FF60;
  if (!qword_1F014FF60)
  {
    v1 = type metadata accessor for PairedDeviceFeatureAttributesProvider();
    result = MEMORY[0x1D829FF28](&protocol conformance descriptor for PairedDeviceFeatureAttributesProvider, v1);
    atomic_store(result, (unint64_t *)&qword_1F014FF60);
  }
  return result;
}

uint64_t sub_1D7B28148()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D7B2816C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1D7B4969C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_release();
  return swift_deallocObject();
}

void sub_1D7B281E8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_1D7B4969C() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_1D7B27454(v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1D7B28234()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D7B28258(uint64_t a1)
{
  uint64_t v1;

  return sub_1D7B35188(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t AccessoryCircularTimeView.init(time:symbolName:baseAccessibilityIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  int *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t result;
  _QWORD *v17;
  _QWORD *v18;

  v12 = (int *)type metadata accessor for AccessoryCircularTimeView();
  sub_1D7B49210();
  v13 = a6 + v12[8];
  *(_QWORD *)v13 = swift_getKeyPath();
  *(_BYTE *)(v13 + 8) = 0;
  v14 = (uint64_t *)(a6 + v12[9]);
  *v14 = swift_getKeyPath();
  sub_1D7AA787C(0, &qword_1ED0AC8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEFDA8], MEMORY[0x1E0CD87D0]);
  swift_storeEnumTagMultiPayload();
  v15 = sub_1D7B49198();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a6, a1, v15);
  v17 = (_QWORD *)(a6 + v12[5]);
  *v17 = a2;
  v17[1] = a3;
  v18 = (_QWORD *)(a6 + v12[7]);
  *v18 = a4;
  v18[1] = a5;
  return result;
}

uint64_t type metadata accessor for AccessoryCircularTimeView()
{
  uint64_t result;

  result = qword_1F0150088;
  if (!qword_1F0150088)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D7B283A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t v38;
  unint64_t v39;
  char *v40;
  uint64_t *v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  uint64_t v59;

  v54 = a1;
  v47 = sub_1D7B4A200();
  v49 = *(_QWORD *)(v47 - 8);
  v2 = MEMORY[0x1E0C80A78](v47);
  v48 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v46 = (char *)&v46 - v4;
  sub_1D7AD0E60();
  v52 = *(_QWORD *)(v5 - 8);
  v53 = v5;
  MEMORY[0x1E0C80A78](v5);
  v51 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AccessoryCircularTimeView();
  v55 = v1;
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  v9 = (void *)sub_1D7B4A38C();
  objc_msgSend(v8, sel_setLocalizedDateFormatFromTemplate_, v9);

  v10 = (void *)sub_1D7B491D4();
  objc_msgSend(v8, sel_setLocale_, v10);

  v11 = (void *)sub_1D7B49150();
  v12 = objc_msgSend(v8, sel_stringFromDate_, v11);

  v13 = sub_1D7B4A3BC();
  v15 = v14;

  v56 = v13;
  v57 = v15;
  sub_1D7ABCCEC();
  v16 = sub_1D7B49EB8();
  v18 = v17;
  v20 = v19 & 1;
  sub_1D7B49E10();
  v21 = sub_1D7B49E88();
  v23 = v22;
  v25 = v24;
  swift_release();
  v26 = v18;
  v27 = v47;
  sub_1D7AACF84(v16, v26, v20);
  v28 = (uint64_t)v46;
  swift_bridgeObjectRelease();
  v50 = v7;
  sub_1D7AD1150(v28);
  v29 = v48;
  sub_1D7B4A1F4();
  LOBYTE(v16) = sub_1D7B4A1E8();
  v30 = *(void (**)(char *, uint64_t))(v49 + 8);
  v30(v29, v27);
  if ((v16 & 1) != 0)
    sub_1D7B49FCC();
  else
    sub_1D7B49F90();
  v30((char *)v28, v27);
  v31 = sub_1D7B49E70();
  v33 = v32;
  v35 = v34;
  v37 = v36 & 1;
  sub_1D7AACF84(v21, v23, v25 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  v56 = v31;
  v57 = v33;
  v58 = v37;
  v59 = v35;
  v38 = MEMORY[0x1E0CDDD78];
  v39 = MEMORY[0x1E0CDDD58];
  v40 = v51;
  sub_1D7B49EC4();
  sub_1D7AACF84(v31, v33, v37);
  swift_bridgeObjectRelease();
  v41 = (uint64_t *)(v55 + *(int *)(v50 + 28));
  v43 = *v41;
  v42 = v41[1];
  v56 = 0;
  v57 = 0xE000000000000000;
  sub_1D7B4A7DC();
  swift_bridgeObjectRelease();
  v56 = v43;
  v57 = v42;
  swift_bridgeObjectRetain();
  sub_1D7B4A41C();
  v56 = v38;
  v57 = v39;
  swift_getOpaqueTypeConformance2();
  v44 = v53;
  sub_1D7B49F3C();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v40, v44);
}

uint64_t sub_1D7B28778@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  char v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v31 = a1;
  v2 = sub_1D7B4A200();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v27 - v7;
  sub_1D7B28EC8(0);
  v29 = *(_QWORD *)(v9 - 8);
  v30 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for AccessoryCircularTimeView();
  swift_bridgeObjectRetain();
  v27 = sub_1D7B49FFC();
  v13 = sub_1D7B49E10();
  KeyPath = swift_getKeyPath();
  v28 = v1;
  sub_1D7AD1150((uint64_t)v8);
  sub_1D7B4A1F4();
  v15 = sub_1D7B4A1E8();
  v16 = *(void (**)(char *, uint64_t))(v3 + 8);
  v16(v6, v2);
  if ((v15 & 1) != 0)
    v17 = sub_1D7B49FCC();
  else
    v17 = sub_1D7B49F90();
  v18 = v17;
  v16(v8, v2);
  v19 = swift_getKeyPath();
  v32 = v27;
  v33 = KeyPath;
  v34 = v13;
  v35 = v19;
  v36 = v18;
  sub_1D7B28F3C();
  v21 = v20;
  v22 = sub_1D7B2900C();
  sub_1D7B49EC4();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v23 = (uint64_t *)(v28 + *(int *)(v12 + 28));
  v24 = v23[1];
  v32 = *v23;
  v33 = v24;
  swift_bridgeObjectRetain();
  sub_1D7B4A41C();
  v32 = v21;
  v33 = v22;
  swift_getOpaqueTypeConformance2();
  v25 = v30;
  sub_1D7B49F3C();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v11, v25);
}

uint64_t sub_1D7B289EC()
{
  id v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;

  type metadata accessor for AccessoryCircularTimeView();
  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  v1 = (void *)sub_1D7B4A38C();
  objc_msgSend(v0, sel_setLocalizedDateFormatFromTemplate_, v1);

  v2 = (void *)sub_1D7B491D4();
  objc_msgSend(v0, sel_setLocale_, v2);

  v3 = (void *)sub_1D7B49150();
  v4 = objc_msgSend(v0, sel_stringFromDate_, v3);

  sub_1D7B4A3BC();
  sub_1D7ABCCEC();
  v5 = sub_1D7B49EB8();
  v7 = v6;
  v9 = v8 & 1;
  sub_1D7B49D98();
  sub_1D7B49DBC();
  sub_1D7B49DF8();
  swift_release();
  v10 = sub_1D7B49E88();
  v12 = v11;
  v14 = v13;
  swift_release();
  sub_1D7AACF84(v5, v7, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1D7B4A41C();
  sub_1D7B49F3C();
  swift_bridgeObjectRelease();
  sub_1D7AACF84(v10, v12, v14 & 1);
  return swift_bridgeObjectRelease();
}

uint64_t AccessoryCircularTimeView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  __int128 v11;
  _OWORD v13[3];

  v2 = v1;
  sub_1D7B28D04();
  MEMORY[0x1E0C80A78](v4);
  v6 = (uint64_t *)((char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v6 = sub_1D7B4A11C();
  v6[1] = v7;
  sub_1D7B297D0();
  sub_1D7B292B0(v2, (uint64_t)v6 + *(int *)(v8 + 44));
  sub_1D7B4A11C();
  sub_1D7B498DC();
  sub_1D7AAD16C((uint64_t)v6, a1, (uint64_t (*)(_QWORD))sub_1D7B28D04);
  sub_1D7B2984C();
  v10 = (_OWORD *)(a1 + *(int *)(v9 + 36));
  v11 = v13[1];
  *v10 = v13[0];
  v10[1] = v11;
  v10[2] = v13[2];
  return sub_1D7AAD1B0((uint64_t)v6, (uint64_t (*)(_QWORD))sub_1D7B28D04);
}

void sub_1D7B28D04()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F014FF68)
  {
    sub_1D7AA787C(255, &qword_1F014FF70, (uint64_t (*)(uint64_t))sub_1D7B28D9C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CE0648]);
    sub_1D7B01410(&qword_1F0150018, &qword_1F014FF70, (uint64_t (*)(uint64_t))sub_1D7B28D9C);
    v0 = sub_1D7B4A0BC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F014FF68);
  }
}

void sub_1D7B28D9C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1F014FF78)
  {
    sub_1D7AA787C(255, &qword_1ED0ACAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEFBB0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1D7B2ADD0(255, &qword_1F014FF80, MEMORY[0x1E0CDB880]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1F014FF78);
  }
}

void sub_1D7B28E30()
{
  unint64_t TupleTypeMetadata;
  uint64_t v1;

  if (!qword_1F014FF98)
  {
    sub_1D7B28EB4(255);
    sub_1D7AD0DA8();
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1)
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1F014FF98);
  }
}

void sub_1D7B28EB4(uint64_t a1)
{
  sub_1D7AD81AC(a1, &qword_1F014FFA0, sub_1D7B28EC8);
}

void sub_1D7B28EC8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  if (!qword_1F014FFA8)
  {
    sub_1D7B28F3C();
    v5[0] = v2;
    v5[1] = sub_1D7B2900C();
    v3 = MEMORY[0x1D829FEEC](a1, v5, MEMORY[0x1E0CEFB08], 0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1F014FFA8);
  }
}

void sub_1D7B28F3C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F014FFB0)
  {
    sub_1D7AAAE74();
    sub_1D7B28FB8(255, &qword_1ED0ACA30, &qword_1ED0ACA80);
    v0 = sub_1D7B49978();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F014FFB0);
  }
}

void sub_1D7B28FB8(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1D7B15D4C(255, a3);
    v4 = sub_1D7B49CE4();
    if (!v5)
      atomic_store(v4, a2);
  }
}

unint64_t sub_1D7B2900C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1F014FFB8;
  if (!qword_1F014FFB8)
  {
    sub_1D7B28F3C();
    v2 = v1;
    v3[0] = sub_1D7AAB0E0();
    v3[1] = sub_1D7B29094(&qword_1ED0ACA28, &qword_1ED0ACA30, &qword_1ED0ACA80);
    result = MEMORY[0x1D829FF28](MEMORY[0x1E0CD9C20], v2, v3);
    atomic_store(result, (unint64_t *)&qword_1F014FFB8);
  }
  return result;
}

uint64_t sub_1D7B29094(unint64_t *a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1D7B28FB8(255, a2, a3);
    result = MEMORY[0x1D829FF28](MEMORY[0x1E0CDCF80], v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1D7B290D4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), unint64_t *a5)
{
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_1D7AA787C(255, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CE0648]);
    sub_1D7B01410(a5, a3, a4);
    v9 = sub_1D7B4A0B0();
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_1D7B29164()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_1F014FFD8)
  {
    sub_1D7B2B1B4(255, &qword_1F014FFE0, MEMORY[0x1E0CDB880]);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1F014FFD8);
  }
}

void sub_1D7B291DC(uint64_t a1)
{
  sub_1D7B29228(a1, &qword_1F014FFF0, sub_1D7B291F8, sub_1D7B28EB4);
}

void sub_1D7B291F8(uint64_t a1)
{
  sub_1D7AD81AC(a1, &qword_1F014FFF8, (void (*)(uint64_t))sub_1D7AD0E60);
}

void sub_1D7B2920C(uint64_t a1)
{
  sub_1D7B29228(a1, &qword_1F0150008, sub_1D7B28EB4, sub_1D7B291F8);
}

void sub_1D7B29228(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  unint64_t TupleTypeMetadata3;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    sub_1D7AD0DA8();
    a4(255);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v7)
      atomic_store(TupleTypeMetadata3, a2);
  }
}

uint64_t sub_1D7B292B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t *v34;
  unint64_t *v35;
  void (*v36)();
  unint64_t *v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t);
  uint64_t (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v50 = a2;
  sub_1D7B290D4(0, &qword_1F014FFC8, &qword_1F014FFD0, (uint64_t (*)(uint64_t))sub_1D7B29164, &qword_1F0150010);
  v48 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v45 - v4;
  sub_1D7B2ADD0(0, &qword_1F01500E0, MEMORY[0x1E0CDB848]);
  v45 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v45 - v7;
  sub_1D7B290D4(0, &qword_1F014FF88, &qword_1F014FF90, (uint64_t (*)(uint64_t))sub_1D7B28E30, &qword_1F014FFC0);
  v47 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v45 - v10;
  sub_1D7B2ADD0(0, &qword_1F014FF80, MEMORY[0x1E0CDB880]);
  v13 = MEMORY[0x1E0C80A78](v12);
  v49 = (uint64_t)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v46 = (char *)&v45 - v15;
  sub_1D7AA787C(0, &qword_1ED0ACAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEFBB0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v45 - v20;
  v22 = a1 + *(int *)(type metadata accessor for AccessoryCircularTimeView() + 32);
  v23 = *(_QWORD *)v22;
  v24 = *(_BYTE *)(v22 + 8);
  sub_1D7AABD10(*(_QWORD *)v22, v24);
  v25 = sub_1D7AD13F4(v23, v24);
  sub_1D7AABE44(v23, v24);
  if ((v25 & 1) != 0)
  {
    v26 = sub_1D7B4A1DC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v21, 1, 1, v26);
  }
  else
  {
    sub_1D7B4A1D0();
    v27 = sub_1D7B4A1DC();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v21, 0, 1, v27);
  }
  v28 = (void *)sub_1D7B491D4();
  v29 = objc_msgSend(v28, sel_hk_isIn24HourTime);

  v30 = sub_1D7B49B1C();
  if (v29)
  {
    *(_QWORD *)v11 = v30;
    *((_QWORD *)v11 + 1) = 0xBFF0000000000000;
    v11[16] = 0;
    sub_1D7B02D14(0, &qword_1F0150100, &qword_1F014FF90, (uint64_t (*)(uint64_t))sub_1D7B28E30);
    sub_1D7B29F38((uint64_t)&v11[*(int *)(v31 + 44)]);
    sub_1D7B2AFE4((uint64_t)v11, (uint64_t)v8, &qword_1F014FF88, &qword_1F014FF90, (uint64_t (*)(uint64_t))sub_1D7B28E30, &qword_1F014FFC0);
    swift_storeEnumTagMultiPayload();
    sub_1D7B2AE78();
    sub_1D7B2AEE0();
    v32 = (uint64_t)v46;
    sub_1D7B49BF4();
    v33 = (uint64_t)v11;
    v34 = &qword_1F014FF88;
    v35 = &qword_1F014FF90;
    v36 = sub_1D7B28E30;
    v37 = &qword_1F014FFC0;
  }
  else
  {
    *(_QWORD *)v5 = v30;
    *((_QWORD *)v5 + 1) = 0xBFF0000000000000;
    v5[16] = 0;
    sub_1D7B02D14(0, &qword_1F01500E8, &qword_1F014FFD0, (uint64_t (*)(uint64_t))sub_1D7B29164);
    sub_1D7B298B8(&v5[*(int *)(v38 + 44)]);
    sub_1D7B2AFE4((uint64_t)v5, (uint64_t)v8, &qword_1F014FFC8, &qword_1F014FFD0, (uint64_t (*)(uint64_t))sub_1D7B29164, &qword_1F0150010);
    swift_storeEnumTagMultiPayload();
    sub_1D7B2AE78();
    sub_1D7B2AEE0();
    v32 = (uint64_t)v46;
    sub_1D7B49BF4();
    v33 = (uint64_t)v5;
    v34 = &qword_1F014FFC8;
    v35 = &qword_1F014FFD0;
    v36 = sub_1D7B29164;
    v37 = &qword_1F0150010;
  }
  sub_1D7B2B038(v33, v34, v35, (uint64_t (*)(uint64_t))v36, v37);
  v39 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CEFBB0];
  v40 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1D7AAD0E0((uint64_t)v21, (uint64_t)v19, &qword_1ED0ACAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEFBB0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v41 = v49;
  sub_1D7B2AF48(v32, v49, (uint64_t)&qword_1F014FF80, (uint64_t (*)(_QWORD, uint64_t, _QWORD))sub_1D7B2ADD0);
  v42 = v50;
  sub_1D7AAD0E0((uint64_t)v19, v50, &qword_1ED0ACAE0, v39, v40);
  sub_1D7B28D9C();
  sub_1D7B2AF48(v41, v42 + *(int *)(v43 + 48), (uint64_t)&qword_1F014FF80, (uint64_t (*)(_QWORD, uint64_t, _QWORD))sub_1D7B2ADD0);
  sub_1D7B2AF9C(v32, (uint64_t)&qword_1F014FF80, (uint64_t (*)(_QWORD, uint64_t, _QWORD))sub_1D7B2ADD0);
  sub_1D7AAD130((uint64_t)v21, &qword_1ED0ACAE0, v39, v40);
  sub_1D7B2AF9C(v41, (uint64_t)&qword_1F014FF80, (uint64_t (*)(_QWORD, uint64_t, _QWORD))sub_1D7B2ADD0);
  return sub_1D7AAD130((uint64_t)v19, &qword_1ED0ACAE0, v39, v40);
}

void sub_1D7B297D0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F0150020)
  {
    sub_1D7AA787C(255, &qword_1F014FF70, (uint64_t (*)(uint64_t))sub_1D7B28D9C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CE0648]);
    v0 = sub_1D7B49924();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F0150020);
  }
}

void sub_1D7B2984C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F0150028)
  {
    sub_1D7B28D04();
    v0 = sub_1D7B49978();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F0150028);
  }
}

uint64_t sub_1D7B298A8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D7B298B8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  void (*v36)(uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  _QWORD v47[2];
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;

  v52 = a1;
  v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CE0648];
  sub_1D7AA787C(0, &qword_1F0150000, (uint64_t (*)(uint64_t))sub_1D7B2920C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CE0648]);
  v51 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v47 - v3;
  sub_1D7B2B1B4(0, &qword_1F0150108, MEMORY[0x1E0CDB848]);
  v47[1] = v5;
  MEMORY[0x1E0C80A78](v5);
  v50 = (uint64_t)v47 - v6;
  sub_1D7AA787C(0, &qword_1F014FFE8, (uint64_t (*)(uint64_t))sub_1D7B291DC, v1);
  v49 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v47 - v8;
  sub_1D7B28EB4(0);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v47 - v14;
  sub_1D7AD0DA8();
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)v47 - v20;
  sub_1D7B291F8(0);
  v23 = MEMORY[0x1E0C80A78](v22);
  v25 = (char *)v47 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v27 = (char *)v47 - v26;
  sub_1D7B2B1B4(0, &qword_1F014FFE0, MEMORY[0x1E0CDB880]);
  v29 = MEMORY[0x1E0C80A78](v28);
  v48 = (uint64_t)v47 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v29);
  v53 = (uint64_t)v47 - v31;
  type metadata accessor for AccessoryCircularTimeView();
  if (Locale.isAMPMSymbolBeforeTime.getter())
  {
    sub_1D7B283A4((uint64_t)v27);
    sub_1D7B289EC();
    sub_1D7B28778((uint64_t)v15);
    sub_1D7AAD16C((uint64_t)v27, (uint64_t)v25, (uint64_t (*)(_QWORD))sub_1D7B291F8);
    sub_1D7AAD16C((uint64_t)v21, (uint64_t)v19, (uint64_t (*)(_QWORD))sub_1D7AD0DA8);
    sub_1D7AAD16C((uint64_t)v15, (uint64_t)v13, (uint64_t (*)(_QWORD))sub_1D7B28EB4);
    sub_1D7AAD16C((uint64_t)v25, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1D7B291F8);
    sub_1D7B291DC(0);
    v33 = v32;
    sub_1D7AAD16C((uint64_t)v19, (uint64_t)&v9[*(int *)(v32 + 48)], (uint64_t (*)(_QWORD))sub_1D7AD0DA8);
    sub_1D7AAD16C((uint64_t)v13, (uint64_t)&v9[*(int *)(v33 + 64)], (uint64_t (*)(_QWORD))sub_1D7B28EB4);
    sub_1D7AAD1B0((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1D7B28EB4);
    sub_1D7AAD1B0((uint64_t)v19, (uint64_t (*)(_QWORD))sub_1D7AD0DA8);
    sub_1D7AAD1B0((uint64_t)v25, (uint64_t (*)(_QWORD))sub_1D7B291F8);
    v34 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CE0648];
    sub_1D7AAD0E0((uint64_t)v9, v50, &qword_1F014FFE8, (uint64_t (*)(uint64_t))sub_1D7B291DC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CE0648]);
    swift_storeEnumTagMultiPayload();
    sub_1D7B01410(&qword_1F0150110, &qword_1F014FFE8, (uint64_t (*)(uint64_t))sub_1D7B291DC);
    sub_1D7B01410(&qword_1F0150118, &qword_1F0150000, (uint64_t (*)(uint64_t))sub_1D7B2920C);
    sub_1D7B49BF4();
    sub_1D7AAD130((uint64_t)v9, &qword_1F014FFE8, (uint64_t (*)(uint64_t))sub_1D7B291DC, v34);
    sub_1D7AAD1B0((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1D7B28EB4);
    sub_1D7AAD1B0((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1D7AD0DA8);
    v35 = (uint64_t)v27;
    v36 = sub_1D7B291F8;
  }
  else
  {
    sub_1D7B28778((uint64_t)v15);
    sub_1D7B289EC();
    sub_1D7B283A4((uint64_t)v27);
    sub_1D7AAD16C((uint64_t)v15, (uint64_t)v13, (uint64_t (*)(_QWORD))sub_1D7B28EB4);
    sub_1D7AAD16C((uint64_t)v21, (uint64_t)v19, (uint64_t (*)(_QWORD))sub_1D7AD0DA8);
    sub_1D7AAD16C((uint64_t)v27, (uint64_t)v25, (uint64_t (*)(_QWORD))sub_1D7B291F8);
    sub_1D7AAD16C((uint64_t)v13, (uint64_t)v4, (uint64_t (*)(_QWORD))sub_1D7B28EB4);
    sub_1D7B2920C(0);
    v38 = v37;
    sub_1D7AAD16C((uint64_t)v19, (uint64_t)&v4[*(int *)(v37 + 48)], (uint64_t (*)(_QWORD))sub_1D7AD0DA8);
    sub_1D7AAD16C((uint64_t)v25, (uint64_t)&v4[*(int *)(v38 + 64)], (uint64_t (*)(_QWORD))sub_1D7B291F8);
    sub_1D7AAD1B0((uint64_t)v25, (uint64_t (*)(_QWORD))sub_1D7B291F8);
    sub_1D7AAD1B0((uint64_t)v19, (uint64_t (*)(_QWORD))sub_1D7AD0DA8);
    sub_1D7AAD1B0((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1D7B28EB4);
    v39 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CE0648];
    sub_1D7AAD0E0((uint64_t)v4, v50, &qword_1F0150000, (uint64_t (*)(uint64_t))sub_1D7B2920C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CE0648]);
    swift_storeEnumTagMultiPayload();
    sub_1D7B01410(&qword_1F0150110, &qword_1F014FFE8, (uint64_t (*)(uint64_t))sub_1D7B291DC);
    sub_1D7B01410(&qword_1F0150118, &qword_1F0150000, (uint64_t (*)(uint64_t))sub_1D7B2920C);
    sub_1D7B49BF4();
    sub_1D7AAD130((uint64_t)v4, &qword_1F0150000, (uint64_t (*)(uint64_t))sub_1D7B2920C, v39);
    sub_1D7AAD1B0((uint64_t)v27, (uint64_t (*)(_QWORD))sub_1D7B291F8);
    sub_1D7AAD1B0((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1D7AD0DA8);
    v35 = (uint64_t)v15;
    v36 = sub_1D7B28EB4;
  }
  sub_1D7AAD1B0(v35, (uint64_t (*)(_QWORD))v36);
  v40 = v53;
  v41 = v48;
  sub_1D7B2AF48(v53, v48, (uint64_t)&qword_1F014FFE0, (uint64_t (*)(_QWORD, uint64_t, _QWORD))sub_1D7B2B1B4);
  v42 = v52;
  *v52 = 0;
  *((_BYTE *)v42 + 8) = 1;
  sub_1D7B29164();
  v44 = v43;
  sub_1D7B2AF48(v41, (uint64_t)v42 + *(int *)(v43 + 48), (uint64_t)&qword_1F014FFE0, (uint64_t (*)(_QWORD, uint64_t, _QWORD))sub_1D7B2B1B4);
  v45 = (char *)v42 + *(int *)(v44 + 64);
  *(_QWORD *)v45 = 0;
  v45[8] = 1;
  sub_1D7B2AF9C(v40, (uint64_t)&qword_1F014FFE0, (uint64_t (*)(_QWORD, uint64_t, _QWORD))sub_1D7B2B1B4);
  return sub_1D7B2AF9C(v41, (uint64_t)&qword_1F014FFE0, (uint64_t (*)(_QWORD, uint64_t, _QWORD))sub_1D7B2B1B4);
}

uint64_t sub_1D7B29F38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  sub_1D7AD0DA8();
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v18 - v6;
  sub_1D7B28EB4(0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v18 - v12;
  sub_1D7B28778((uint64_t)&v18 - v12);
  sub_1D7B289EC();
  sub_1D7AAD16C((uint64_t)v13, (uint64_t)v11, (uint64_t (*)(_QWORD))sub_1D7B28EB4);
  sub_1D7AAD16C((uint64_t)v7, (uint64_t)v5, (uint64_t (*)(_QWORD))sub_1D7AD0DA8);
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
  sub_1D7B28E30();
  v15 = v14;
  sub_1D7AAD16C((uint64_t)v11, a1 + *(int *)(v14 + 48), (uint64_t (*)(_QWORD))sub_1D7B28EB4);
  sub_1D7AAD16C((uint64_t)v5, a1 + *(int *)(v15 + 64), (uint64_t (*)(_QWORD))sub_1D7AD0DA8);
  v16 = a1 + *(int *)(v15 + 80);
  *(_QWORD *)v16 = 0;
  *(_BYTE *)(v16 + 8) = 1;
  sub_1D7AAD1B0((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1D7AD0DA8);
  sub_1D7AAD1B0((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1D7B28EB4);
  sub_1D7AAD1B0((uint64_t)v5, (uint64_t (*)(_QWORD))sub_1D7AD0DA8);
  return sub_1D7AAD1B0((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1D7B28EB4);
}

uint64_t sub_1D7B2A0DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  __int128 v11;
  _OWORD v13[3];

  v2 = v1;
  sub_1D7B28D04();
  MEMORY[0x1E0C80A78](v4);
  v6 = (uint64_t *)((char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v6 = sub_1D7B4A11C();
  v6[1] = v7;
  sub_1D7B297D0();
  sub_1D7B292B0(v2, (uint64_t)v6 + *(int *)(v8 + 44));
  sub_1D7B4A11C();
  sub_1D7B498DC();
  sub_1D7AAD16C((uint64_t)v6, a1, (uint64_t (*)(_QWORD))sub_1D7B28D04);
  sub_1D7B2984C();
  v10 = (_OWORD *)(a1 + *(int *)(v9 + 36));
  v11 = v13[1];
  *v10 = v13[0];
  v10[1] = v11;
  v10[2] = v13[2];
  return sub_1D7AAD1B0((uint64_t)v6, (uint64_t (*)(_QWORD))sub_1D7B28D04);
}

_QWORD *initializeBufferWithCopyOfBuffer for AccessoryCircularTimeView(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D7B49198();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (_QWORD *)((char *)a1 + v8);
    v11 = (_QWORD *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (char *)a1 + v9;
    v14 = (char *)a2 + v9;
    v15 = sub_1D7B4921C();
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    v16(v13, v14, v15);
    v17 = a3[7];
    v18 = a3[8];
    v19 = (_QWORD *)((char *)a1 + v17);
    v20 = (_QWORD *)((char *)a2 + v17);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    v22 = (char *)a1 + v18;
    v23 = *(_QWORD *)((char *)a2 + v18);
    LOBYTE(v13) = *((_BYTE *)a2 + v18 + 8);
    swift_bridgeObjectRetain();
    sub_1D7AABD10(v23, (char)v13);
    *(_QWORD *)v22 = v23;
    v22[8] = (char)v13;
    v24 = a3[9];
    v25 = (_QWORD *)((char *)a1 + v24);
    v26 = (_QWORD *)((char *)a2 + v24);
    sub_1D7AA787C(0, &qword_1ED0AC8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEFDA8], MEMORY[0x1E0CD87D0]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v27 = sub_1D7B4A200();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    }
    else
    {
      *v25 = *v26;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for AccessoryCircularTimeView(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_1D7B49198();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  v5 = a1 + a2[6];
  v6 = sub_1D7B4921C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  sub_1D7AABE44(*(_QWORD *)(a1 + a2[8]), *(_BYTE *)(a1 + a2[8] + 8));
  v7 = a1 + a2[9];
  sub_1D7AA787C(0, &qword_1ED0AC8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEFDA8], MEMORY[0x1E0CD87D0]);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v8 = sub_1D7B4A200();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t initializeWithCopy for AccessoryCircularTimeView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;

  v6 = sub_1D7B49198();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = a1 + v8;
  v13 = a2 + v8;
  v14 = sub_1D7B4921C();
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  swift_bridgeObjectRetain();
  v15(v12, v13, v14);
  v16 = a3[7];
  v17 = a3[8];
  v18 = (_QWORD *)(a1 + v16);
  v19 = (_QWORD *)(a2 + v16);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  v21 = a1 + v17;
  v22 = *(_QWORD *)(a2 + v17);
  LOBYTE(v12) = *(_BYTE *)(a2 + v17 + 8);
  swift_bridgeObjectRetain();
  sub_1D7AABD10(v22, v12);
  *(_QWORD *)v21 = v22;
  *(_BYTE *)(v21 + 8) = v12;
  v23 = a3[9];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  sub_1D7AA787C(0, &qword_1ED0AC8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEFDA8], MEMORY[0x1E0CD87D0]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v26 = sub_1D7B4A200();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  }
  else
  {
    *v24 = *v25;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for AccessoryCircularTimeView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t (*v26)(uint64_t);
  uint64_t (*v27)(uint64_t, uint64_t);
  uint64_t v28;

  v6 = sub_1D7B49198();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_1D7B4921C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  v14 = a3[7];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = a3[8];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = *(_QWORD *)v19;
  LOBYTE(v12) = *(_BYTE *)(v19 + 8);
  sub_1D7AABD10(*(_QWORD *)v19, v12);
  v21 = *(_QWORD *)v18;
  v22 = *(_BYTE *)(v18 + 8);
  *(_QWORD *)v18 = v20;
  *(_BYTE *)(v18 + 8) = v12;
  sub_1D7AABE44(v21, v22);
  if (a1 != a2)
  {
    v23 = a3[9];
    v24 = (_QWORD *)(a1 + v23);
    v25 = (_QWORD *)(a2 + v23);
    v26 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CEFDA8];
    v27 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CD87D0];
    sub_1D7AAD130(a1 + v23, &qword_1ED0AC8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEFDA8], MEMORY[0x1E0CD87D0]);
    sub_1D7AA787C(0, &qword_1ED0AC8C0, v26, v27);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v28 = sub_1D7B4A200();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v24, v25, v28);
    }
    else
    {
      *v24 = *v25;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for AccessoryCircularTimeView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_1D7B49198();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D7B4921C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v14 = a3[9];
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  sub_1D7AA787C(0, &qword_1ED0AC8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEFDA8], MEMORY[0x1E0CD87D0]);
  v18 = v17;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v19 = sub_1D7B4A200();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v15, v16, v19);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  return a1;
}

uint64_t assignWithTake for AccessoryCircularTimeView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  void *v28;
  const void *v29;
  uint64_t (*v30)(uint64_t);
  uint64_t (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v6 = sub_1D7B49198();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_1D7B4921C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = a3[7];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (uint64_t *)(a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  v21 = a3[8];
  v22 = a1 + v21;
  v23 = (uint64_t *)(a2 + v21);
  v24 = *v23;
  LOBYTE(v23) = *((_BYTE *)v23 + 8);
  v25 = *(_QWORD *)v22;
  v26 = *(_BYTE *)(v22 + 8);
  *(_QWORD *)v22 = v24;
  *(_BYTE *)(v22 + 8) = (_BYTE)v23;
  sub_1D7AABE44(v25, v26);
  if (a1 != a2)
  {
    v27 = a3[9];
    v28 = (void *)(a1 + v27);
    v29 = (const void *)(a2 + v27);
    v30 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CEFDA8];
    v31 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CD87D0];
    sub_1D7AAD130(a1 + v27, &qword_1ED0AC8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEFDA8], MEMORY[0x1E0CD87D0]);
    sub_1D7AA787C(0, &qword_1ED0AC8C0, v30, v31);
    v33 = v32;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v34 = sub_1D7B4A200();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v28, v29, v34);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for AccessoryCircularTimeView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D7B2AA78(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_1D7B49198();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v13 = sub_1D7B4921C();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
    {
      v8 = v13;
      v15 = a3[6];
    }
    else
    {
      sub_1D7AA787C(0, &qword_1F014D378, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEFDA8], MEMORY[0x1E0CD87E8]);
      v8 = v16;
      v14 = *(_QWORD *)(v16 - 8);
      v15 = a3[9];
    }
    v10 = a1 + v15;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + a3[5] + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for AccessoryCircularTimeView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D7B2AB6C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = sub_1D7B49198();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[5] + 8) = (a2 - 1);
      return result;
    }
    v13 = sub_1D7B4921C();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[6];
    }
    else
    {
      sub_1D7AA787C(0, &qword_1F014D378, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEFDA8], MEMORY[0x1E0CD87E8]);
      v10 = v16;
      v14 = *(_QWORD *)(v16 - 8);
      v15 = a4[9];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D7B2AC50()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1D7B49198();
  if (v0 <= 0x3F)
  {
    sub_1D7B4921C();
    if (v1 <= 0x3F)
    {
      sub_1D7AA787C(319, &qword_1ED0AC8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEFDA8], MEMORY[0x1E0CD87D0]);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

unint64_t sub_1D7B2AD20()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1F01500D0;
  if (!qword_1F01500D0)
  {
    sub_1D7B2984C();
    v2 = v1;
    v3[0] = sub_1D7B2AD88();
    v3[1] = MEMORY[0x1E0CD8D70];
    result = MEMORY[0x1D829FF28](MEMORY[0x1E0CD9C20], v2, v3);
    atomic_store(result, (unint64_t *)&qword_1F01500D0);
  }
  return result;
}

unint64_t sub_1D7B2AD88()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F01500D8;
  if (!qword_1F01500D8)
  {
    sub_1D7B28D04();
    result = MEMORY[0x1D829FF28](MEMORY[0x1E0CDFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1F01500D8);
  }
  return result;
}

void sub_1D7B2ADD0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_1D7B290D4(255, &qword_1F014FF88, &qword_1F014FF90, (uint64_t (*)(uint64_t))sub_1D7B28E30, &qword_1F014FFC0);
    v7 = v6;
    sub_1D7B290D4(255, &qword_1F014FFC8, &qword_1F014FFD0, (uint64_t (*)(uint64_t))sub_1D7B29164, &qword_1F0150010);
    v9 = a3(a1, v7, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

unint64_t sub_1D7B2AE78()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F01500F0;
  if (!qword_1F01500F0)
  {
    sub_1D7B290D4(255, &qword_1F014FF88, &qword_1F014FF90, (uint64_t (*)(uint64_t))sub_1D7B28E30, &qword_1F014FFC0);
    result = MEMORY[0x1D829FF28](MEMORY[0x1E0CDFCC0], v1);
    atomic_store(result, (unint64_t *)&qword_1F01500F0);
  }
  return result;
}

unint64_t sub_1D7B2AEE0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F01500F8;
  if (!qword_1F01500F8)
  {
    sub_1D7B290D4(255, &qword_1F014FFC8, &qword_1F014FFD0, (uint64_t (*)(uint64_t))sub_1D7B29164, &qword_1F0150010);
    result = MEMORY[0x1D829FF28](MEMORY[0x1E0CDFCC0], v1);
    atomic_store(result, (unint64_t *)&qword_1F01500F8);
  }
  return result;
}

uint64_t sub_1D7B2AF48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, uint64_t, _QWORD))
{
  uint64_t v6;

  v6 = a4(0, a3, MEMORY[0x1E0CDB880]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1D7B2AF9C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD, uint64_t, _QWORD))
{
  uint64_t v4;

  v4 = a3(0, a2, MEMORY[0x1E0CDB880]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1D7B2AFE4(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t (*a5)(uint64_t), unint64_t *a6)
{
  uint64_t v8;

  sub_1D7B290D4(0, a3, a4, a5, a6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a2, a1, v8);
  return a2;
}

uint64_t sub_1D7B2B038(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), unint64_t *a5)
{
  uint64_t v6;

  sub_1D7B290D4(0, a2, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_1D7B2B074@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1D7B499F0();
  *a1 = result;
  return result;
}

uint64_t sub_1D7B2B09C()
{
  swift_retain();
  return sub_1D7B499FC();
}

uint64_t sub_1D7B2B0C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1D7B49A50();
  *a1 = result;
  return result;
}

uint64_t sub_1D7B2B0EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1D7B49A50();
  *a1 = result;
  return result;
}

uint64_t sub_1D7B2B114()
{
  swift_retain();
  return sub_1D7B49A5C();
}

uint64_t sub_1D7B2B13C()
{
  swift_retain();
  return sub_1D7B49A5C();
}

uint64_t sub_1D7B2B164@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1D7B499F0();
  *a1 = result;
  return result;
}

uint64_t sub_1D7B2B18C()
{
  swift_retain();
  return sub_1D7B499FC();
}

void sub_1D7B2B1B4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (!*a2)
  {
    v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CE0648];
    sub_1D7AA787C(255, &qword_1F014FFE8, (uint64_t (*)(uint64_t))sub_1D7B291DC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CE0648]);
    v8 = v7;
    sub_1D7AA787C(255, &qword_1F0150000, (uint64_t (*)(uint64_t))sub_1D7B2920C, v6);
    v10 = a3(a1, v8, v9);
    if (!v11)
      atomic_store(v10, a2);
  }
}

unint64_t static CalendarMonthHeaderView.defaultReuseIdentifier.getter()
{
  return 0xD000000000000013;
}

double static CalendarMonthHeaderView.referenceHeight.getter()
{
  id v0;
  double v1;
  double v2;

  if (qword_1F014CFA0 != -1)
    swift_once();
  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC37F8]), sel_initForTextStyle_, qword_1F0150128);
  if (qword_1F014CF98 != -1)
    swift_once();
  objc_msgSend(v0, sel_scaledValueForValue_, *(double *)&qword_1F0150120);
  v2 = v1;

  return v2;
}

id CalendarMonthHeaderView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

char *CalendarMonthHeaderView.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  id v12;
  id v13;
  char *v14;
  uint64_t v15;
  void *v16;
  char *v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  double v23;
  char *result;
  void *v25;
  char *v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  objc_super v50;

  v9 = OBJC_IVAR____TtC8HealthUI23CalendarMonthHeaderView_monthLabel;
  v10 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  v11 = v4;
  v12 = objc_msgSend(v10, sel_init);
  v13 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  objc_msgSend(v12, sel_setTextColor_, v13);

  objc_msgSend(v12, sel_setTextAlignment_, 1);
  objc_msgSend(v12, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(_QWORD *)&v4[v9] = v12;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8HealthUI23CalendarMonthHeaderView_horizontalSectionInset] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8HealthUI23CalendarMonthHeaderView_weekday] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8HealthUI23CalendarMonthHeaderView_numberOfDaysPerWeek] = 7;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8HealthUI23CalendarMonthHeaderView_xPositionConstraint] = 0;

  v50.receiver = v11;
  v50.super_class = (Class)type metadata accessor for CalendarMonthHeaderView();
  v14 = (char *)objc_msgSendSuper2(&v50, sel_initWithFrame_, a1, a2, a3, a4);
  v15 = OBJC_IVAR____TtC8HealthUI23CalendarMonthHeaderView_monthLabel;
  v16 = *(void **)&v14[OBJC_IVAR____TtC8HealthUI23CalendarMonthHeaderView_monthLabel];
  v17 = v14;
  objc_msgSend(v17, sel_addSubview_, v16);
  v18 = objc_msgSend(v16, sel_centerXAnchor);
  v19 = objc_msgSend(v17, sel_leadingAnchor);
  v20 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v19, 0.0);

  v21 = OBJC_IVAR____TtC8HealthUI23CalendarMonthHeaderView_xPositionConstraint;
  v22 = *(void **)&v17[OBJC_IVAR____TtC8HealthUI23CalendarMonthHeaderView_xPositionConstraint];
  *(_QWORD *)&v17[OBJC_IVAR____TtC8HealthUI23CalendarMonthHeaderView_xPositionConstraint] = v20;

  result = *(char **)&v17[v21];
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  LODWORD(v23) = 1144750080;
  objc_msgSend(result, sel_setPriority_, v23);
  sub_1D7AAF550();
  result = (char *)swift_allocObject();
  *((_OWORD *)result + 1) = xmmword_1D7B85D90;
  v25 = *(void **)&v17[v21];
  if (!v25)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  v26 = result;
  v27 = (void *)objc_opt_self();
  *((_QWORD *)v26 + 4) = v25;
  v28 = *(void **)&v14[v15];
  v29 = v25;
  v30 = objc_msgSend(v28, sel_topAnchor);
  v31 = objc_msgSend(v17, sel_topAnchor);
  v32 = objc_msgSend(v30, sel_constraintEqualToAnchor_, v31);

  *((_QWORD *)v26 + 5) = v32;
  v33 = objc_msgSend(*(id *)&v14[v15], sel_leadingAnchor);
  v34 = objc_msgSend(v17, sel_layoutMarginsGuide);
  v35 = objc_msgSend(v34, sel_leadingAnchor);

  v36 = objc_msgSend(v33, sel_constraintGreaterThanOrEqualToAnchor_, v35);
  *((_QWORD *)v26 + 6) = v36;
  v37 = objc_msgSend(v17, sel_layoutMarginsGuide);
  v38 = objc_msgSend(v37, sel_trailingAnchor);

  v39 = objc_msgSend(*(id *)&v14[v15], sel_trailingAnchor);
  v40 = objc_msgSend(v38, sel_constraintGreaterThanOrEqualToAnchor_, v39);

  *((_QWORD *)v26 + 7) = v40;
  sub_1D7B4A4B8();
  sub_1D7B18E40();
  v41 = (void *)sub_1D7B4A4A0();
  swift_bridgeObjectRelease();
  objc_msgSend(v27, sel_activateConstraints_, v41);

  v42 = *(void **)&v14[v15];
  v43 = (void *)objc_opt_self();
  if (qword_1F014CFA0 != -1)
    swift_once();
  sub_1D7B4A3BC();
  v44 = (void *)sub_1D7B4A38C();
  swift_bridgeObjectRelease();
  v45 = objc_msgSend(v43, sel_hk_preferredFontForTextStyle_symbolicTraits_, v44, 2);

  objc_msgSend(v42, sel_setFont_, v45);
  sub_1D7B2BDBC();
  v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = xmmword_1D7B84630;
  v47 = sub_1D7B49714();
  v48 = MEMORY[0x1E0DC29B0];
  *(_QWORD *)(v46 + 32) = v47;
  *(_QWORD *)(v46 + 40) = v48;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1D7B16FCC();
  v49 = v17;
  sub_1D7B4A6BC();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return v49;
}

void sub_1D7B2B8BC(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  void *v17;
  void *v18;
  void *v19;
  char *v20;

  v4 = a3 + 16;
  swift_beginAccess();
  v5 = MEMORY[0x1D82A00A8](v4);
  if (v5)
  {
    v6 = (char *)v5;
    if (a2)
    {
      v7 = a2;
      v8 = objc_msgSend(v6, sel_traitCollection);
      v9 = objc_msgSend(v8, sel_preferredContentSizeCategory);

      v10 = objc_msgSend(v7, sel_preferredContentSizeCategory);
      v11 = sub_1D7B4A3BC();
      v13 = v12;
      if (v11 == sub_1D7B4A3BC() && v13 == v14)
      {

        swift_bridgeObjectRelease_n();
      }
      else
      {
        v16 = sub_1D7B4A938();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v16 & 1) == 0)
          goto LABEL_8;
      }
LABEL_12:

      return;
    }
LABEL_8:
    v17 = *(void **)&v6[OBJC_IVAR____TtC8HealthUI23CalendarMonthHeaderView_monthLabel];
    v18 = (void *)objc_opt_self();
    if (qword_1F014CFA0 != -1)
      swift_once();
    sub_1D7B4A3BC();
    v19 = (void *)sub_1D7B4A38C();
    swift_bridgeObjectRelease();
    v20 = (char *)objc_msgSend(v18, sel_hk_preferredFontForTextStyle_symbolicTraits_, v19, 2);

    objc_msgSend(v17, sel_setFont_, v20);
    v6 = v20;
    goto LABEL_12;
  }
}

id sub_1D7B2BAEC(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  objc_super v8;

  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for CalendarMonthHeaderView();
  objc_msgSendSuper2(&v8, sel_applyLayoutAttributes_, a1);
  type metadata accessor for CalendarViewLayoutAttributes();
  v3 = swift_dynamicCastClass();
  if (v3)
  {
    v4 = v3;
    v5 = (_QWORD *)(v3 + OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_horizontalSectionInset);
    swift_beginAccess();
    *(_QWORD *)&v1[OBJC_IVAR____TtC8HealthUI23CalendarMonthHeaderView_horizontalSectionInset] = *v5;
    v6 = (_QWORD *)(v4 + OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_numberOfDaysPerWeek);
    swift_beginAccess();
    *(_QWORD *)&v1[OBJC_IVAR____TtC8HealthUI23CalendarMonthHeaderView_numberOfDaysPerWeek] = *v6;
  }
  return sub_1D7B2BBBC();
}

id sub_1D7B2BBBC()
{
  char *v0;
  double v1;
  id result;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  double v6;
  double v7;

  objc_msgSend(v0, sel_bounds);
  result = *(id *)&v0[OBJC_IVAR____TtC8HealthUI23CalendarMonthHeaderView_xPositionConstraint];
  if (result)
  {
    v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC8HealthUI23CalendarMonthHeaderView_weekday];
    v4 = __OFSUB__(v3, 1);
    v5 = v3 - 1;
    if (!v4)
    {
      v6 = *(double *)&v0[OBJC_IVAR____TtC8HealthUI23CalendarMonthHeaderView_horizontalSectionInset];
      v7 = (v1 - (v6 + v6))
         / (double)*(uint64_t *)&v0[OBJC_IVAR____TtC8HealthUI23CalendarMonthHeaderView_numberOfDaysPerWeek];
      return objc_msgSend(result, sel_setConstant_, v7 * 0.5 + v6 + v7 * (double)v5);
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

id CalendarMonthHeaderView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CalendarMonthHeaderView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall CalendarMonthHeaderView.setMonthText(_:alignedToWeekday:)(Swift::String_optional _, Swift::Int alignedToWeekday)
{
  uint64_t v2;
  void *v4;
  void *v5;

  v4 = *(void **)(v2 + OBJC_IVAR____TtC8HealthUI23CalendarMonthHeaderView_monthLabel);
  if (_.value._object)
    v5 = (void *)sub_1D7B4A38C();
  else
    v5 = 0;
  objc_msgSend(v4, sel_setText_, v5);

  *(_QWORD *)(v2 + OBJC_IVAR____TtC8HealthUI23CalendarMonthHeaderView_weekday) = alignedToWeekday;
  sub_1D7B2BBBC();
}

void sub_1D7B2BD74()
{
  qword_1F0150120 = 0x403A000000000000;
}

id sub_1D7B2BD84()
{
  qword_1F0150128 = *MEMORY[0x1E0DC4B60];
  return (id)qword_1F0150128;
}

uint64_t type metadata accessor for CalendarMonthHeaderView()
{
  return objc_opt_self();
}

void sub_1D7B2BDBC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F014F830)
  {
    sub_1D7B16F14();
    v0 = sub_1D7B4A920();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F014F830);
  }
}

uint64_t sub_1D7B2BE10()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1D7B2BE34(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1D7B2B8BC(a1, a2, v2);
}

uint64_t method lookup function for CalendarMonthHeaderView()
{
  return swift_lookUpClassMethod();
}

void sub_1D7B2BE48()
{
  char *v0;
  uint64_t v1;
  id v2;
  id v3;

  v1 = OBJC_IVAR____TtC8HealthUI23CalendarMonthHeaderView_monthLabel;
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v3 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  objc_msgSend(v2, sel_setTextColor_, v3);

  objc_msgSend(v2, sel_setTextAlignment_, 1);
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(_QWORD *)&v0[v1] = v2;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8HealthUI23CalendarMonthHeaderView_horizontalSectionInset] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8HealthUI23CalendarMonthHeaderView_weekday] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8HealthUI23CalendarMonthHeaderView_numberOfDaysPerWeek] = 7;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8HealthUI23CalendarMonthHeaderView_xPositionConstraint] = 0;

  sub_1D7B4A890();
  __break(1u);
}

id static HKInteractiveChartOverlayPredicate.stateOfMindSampleCountOverlay(for:)(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;

  v2 = (void *)objc_opt_self();
  sub_1D7AAF550();
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1D7B83E30;
  sub_1D7AA7AD0();
  HKStateOfMindAssociationFromDomain();
  *(_QWORD *)(v3 + 32) = sub_1D7B4A6C8();
  sub_1D7B4A4B8();
  v4 = (void *)sub_1D7B4A4A0();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v2, sel_predicateForStatesOfMindWithAssociations_, v4);

  v6 = HKUILocalizedStringForStateOfMindDomain(a1);
  sub_1D7B4A3BC();

  v7 = objc_allocWithZone((Class)HKInteractiveChartOverlayPredicate);
  v8 = (void *)sub_1D7B4A38C();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v7, sel_initWithPredicate_name_, v5, v8);

  return v9;
}

id static HKInteractiveChartOverlayPredicate.stateOfMindSampleCountOverlay(for:title:)()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id v4;

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_predicateForStatesOfMindWithKind_, HKStateOfMindKindFromReflectiveInterval());
  v2 = objc_allocWithZone((Class)HKInteractiveChartOverlayPredicate);
  swift_bridgeObjectRetain();
  v3 = (void *)sub_1D7B4A38C();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, sel_initWithPredicate_name_, v1, v3);

  return v4;
}

id sub_1D7B2C170(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  char *v15;
  int v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  objc_class *v37;
  id v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  int v44;
  void *v45;
  unint64_t v46;
  int v47;
  int v48;
  int v49;
  uint64_t v50;
  int v51;
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  char *v54;
  objc_super v55;
  uint64_t v56;

  v2 = sub_1D7B49504();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v54 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v41 - v6;
  v8 = sub_1D7B494EC();
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    v42 = a1;
    v56 = MEMORY[0x1E0DEE9D8];
    v50 = v3;
    sub_1D7AA5F1C(0, v9, 0);
    v10 = v50;
    v11 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v41 = v8;
    v12 = v8 + v11;
    v13 = *(_QWORD *)(v50 + 72);
    v52 = *(void (**)(char *, char *, uint64_t))(v50 + 16);
    v53 = v13;
    v51 = *MEMORY[0x1E0D28FD8];
    v49 = *MEMORY[0x1E0D28FB8];
    v48 = *MEMORY[0x1E0D28FB0];
    v47 = *MEMORY[0x1E0D28FC0];
    v44 = *MEMORY[0x1E0D28FA8];
    v46 = (unint64_t)"ndar:axisStyle:categoryTitles:)";
    v43 = (unint64_t)"drop.oxygen.fill";
    do
    {
      v14 = v52;
      v52(v7, (char *)v12, v2);
      v15 = v54;
      v14(v54, v7, v2);
      v16 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v15, v2);
      v17 = 0x69662E7472616568;
      v18 = 0xEA00000000006C6CLL;
      if (v16 != v51)
      {
        if (v16 == v49)
        {
          v17 = 0x69662E73676E756CLL;
        }
        else if (v16 == v48)
        {
          v18 = v46 | 0x8000000000000000;
          v17 = 0xD000000000000010;
        }
        else if (v16 == v47)
        {
          v17 = 0xD000000000000014;
          v18 = v43 | 0x8000000000000000;
        }
        else if (v16 == v44)
        {
          v18 = 0xEF6C6C69662E656CLL;
          v17 = 0x62756F642E646562;
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v10 + 8))(v54, v2);
        }
      }
      (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v2);
      v19 = v56;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D7AA5F1C(0, *(_QWORD *)(v19 + 16) + 1, 1);
        v10 = v50;
        v19 = v56;
      }
      v21 = *(_QWORD *)(v19 + 16);
      v20 = *(_QWORD *)(v19 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_1D7AA5F1C(v20 > 1, v21 + 1, 1);
        v10 = v50;
        v19 = v56;
      }
      *(_QWORD *)(v19 + 16) = v21 + 1;
      v22 = v19 + 16 * v21;
      *(_QWORD *)(v22 + 32) = v17;
      *(_QWORD *)(v22 + 40) = v18;
      v12 += v53;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
    a1 = v42;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v23 = (void *)sub_1D7B492AC();
  v24 = objc_msgSend(objc_allocWithZone((Class)HKAxisStyle), sel_init);
  v25 = (void *)objc_opt_self();
  v26 = objc_msgSend(v25, sel_hk_chartAxisLabelColor);
  v27 = (void *)objc_opt_self();
  v28 = objc_msgSend(v27, sel_strokeStyleWithColor_lineWidth_, v26, 1.0);

  objc_msgSend(v24, sel_setAxisLineStyle_, v28);
  v29 = objc_msgSend(v25, sel_hk_chartAxisLabelColor);
  v30 = objc_msgSend((id)objc_opt_self(), sel_hk_roundedSystemFontWithSize_weight_, 15.0, *MEMORY[0x1E0DC1438]);
  v31 = objc_msgSend((id)objc_opt_self(), sel_labelStyleWithColor_font_horizontalAlignment_verticalAlignment_isSystemSymbol_, v29, v30, 1, 3, 1);

  objc_msgSend(v24, sel_setLabelStyle_, v31);
  objc_msgSend(v24, sel_setTickPositions_, 0);
  objc_msgSend(v24, sel_setAxisLabelPosition_, 1);
  objc_msgSend(v24, sel_setShowGridLines_, 1);
  objc_msgSend(v24, sel_setLocation_, 2);
  v32 = objc_msgSend(v25, sel_hk_chartAxisMajorGridColor);
  v33 = objc_msgSend(v27, sel_strokeStyleWithColor_lineWidth_, v32, 0.5);

  objc_msgSend(v33, sel_setDashStyle_, 1);
  objc_msgSend(v24, sel_setGridLineStyle_, v33);
  v34 = objc_msgSend(v25, sel_hk_chartGrayGraphColor);
  v35 = objc_msgSend(v27, sel_strokeStyleWithColor_lineWidth_, v34, 0.5);

  objc_msgSend(v35, sel_setDashStyle_, 0);
  objc_msgSend(v24, sel_setReferenceGridLineStyle_, v35);

  v36 = (void *)sub_1D7B4A4A0();
  swift_bridgeObjectRelease();
  v37 = (objc_class *)type metadata accessor for BalanceDayXAxis();
  v55.receiver = v45;
  v55.super_class = v37;
  v38 = objc_msgSendSuper2(&v55, sel_initWithCurrentCalendar_axisStyle_categoryTitles_, v23, v24, v36);

  v39 = sub_1D7B49300();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 8))(a1, v39);
  return v38;
}

id sub_1D7B2C858()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BalanceDayXAxis();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for BalanceDayXAxis()
{
  return objc_opt_self();
}

id static BreathingDisturbancesAxis.standardAxis(with:)(void *a1)
{
  id v2;

  v2 = objc_allocWithZone((Class)type metadata accessor for BreathingDisturbancesAxis());
  return BreathingDisturbancesAxis.init(displayType:)(a1);
}

id BreathingDisturbancesAxis.__allocating_init(displayType:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return BreathingDisturbancesAxis.init(displayType:)(a1);
}

uint64_t type metadata accessor for BreathingDisturbancesAxis()
{
  return objc_opt_self();
}

id BreathingDisturbancesAxis.init(displayType:)(void *a1)
{
  char *v1;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  objc_super v11;

  *(_QWORD *)&v1[OBJC_IVAR___HKBreathingDisturbancesAxis_displayType] = a1;
  v3 = objc_allocWithZone((Class)HKNumericAxisConfiguration);
  v4 = a1;
  v5 = objc_msgSend(v3, sel_init);
  v6 = (void *)objc_opt_self();
  v7 = v5;
  v8 = objc_msgSend(v6, sel_preferredAxisStyle);
  objc_msgSend(v7, sel_setPreferredStyle_, v8);

  objc_msgSend(v7, sel_setTopVerticalLabelPadding_, 5.0);
  objc_msgSend(v7, sel_setBottomVerticalLabelPadding_, 5.0);
  v11.receiver = v1;
  v11.super_class = (Class)type metadata accessor for BreathingDisturbancesAxis();
  v9 = objc_msgSendSuper2(&v11, sel_initWithConfiguration_, v7);

  return v9;
}

id sub_1D7B2CAFC(void *a1)
{
  id v2;
  id v3;
  id v4;
  id v5;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  double v20;
  uint64_t v21;

  swift_getObjectType();
  v2 = objc_msgSend(a1, sel_maxValue);
  if (v2 && (v21 = (uint64_t)v2, (swift_dynamicCast() & 1) != 0))
  {
    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, 0);
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v20);
    v5 = objc_msgSend((id)objc_opt_self(), sel_valueRangeWithMinValue_maxValue_, v3, v4);

    return v5;
  }
  else
  {
    if (qword_1F014CF10 != -1)
      swift_once();
    v7 = sub_1D7B4969C();
    __swift_project_value_buffer(v7, (uint64_t)qword_1F01544D0);
    v19 = a1;
    v8 = sub_1D7B49684();
    v9 = sub_1D7B4A608();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = swift_slowAlloc();
      v11 = swift_slowAlloc();
      v21 = v11;
      *(_DWORD *)v10 = 136446466;
      v12 = sub_1D7B4AA94();
      sub_1D7AA4DE4(v12, v13, &v21);
      sub_1D7B4A704();
      swift_bridgeObjectRelease();
      *(_WORD *)(v10 + 12) = 2082;
      v14 = v19;
      v15 = objc_msgSend(v14, sel_description);
      v16 = sub_1D7B4A3BC();
      v18 = v17;

      sub_1D7AA4DE4(v16, v18, &v21);
      sub_1D7B4A704();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D7813000, v8, v9, "[%{public}s] Cannot adjust values for incompatible range: %{public}s", (uint8_t *)v10, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D829FFF4](v11, -1, -1);
      MEMORY[0x1D829FFF4](v10, -1, -1);

    }
    else
    {

    }
    return v19;
  }
}

id BreathingDisturbancesAxis.__allocating_init(configuration:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithConfiguration_, a1);

  return v3;
}

void BreathingDisturbancesAxis.init(configuration:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id BreathingDisturbancesAxis.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BreathingDisturbancesAxis();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D7B2CF38(double a1, double a2, uint64_t a3, void *a4, char a5)
{
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v23;

  v23 = MEMORY[0x1E0DEE9D8];
  if ((a5 & 1) != 0)
  {
    v8 = objc_msgSend(objc_allocWithZone((Class)HKAxisLabel), sel_init);
    objc_msgSend(v8, sel_setLabelType_, 1);
    v9 = objc_msgSend(a4, (SEL)&selRef_promptControllerDidFinish_error_ + 7);
    objc_msgSend(v9, sel_adjustedDoubleForDaemonDouble_, a1);

    v10 = (void *)sub_1D7B494BC();
    objc_msgSend(v8, sel_setLocation_, v10);

    v11 = v8;
    MEMORY[0x1D829E3EC]();
    if (*(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1D7B4A4C4();
    sub_1D7B4A4DC();
    sub_1D7B4A4B8();

  }
  v12 = objc_msgSend(objc_allocWithZone((Class)HKAxisLabel), sel_init);
  objc_msgSend(v12, sel_setLabelType_, 0);
  v13 = objc_msgSend(a4, sel_presentation);
  objc_msgSend(v13, sel_adjustedDoubleForDaemonDouble_, (a2 - a1) * 0.5 + a1);

  v14 = (void *)sub_1D7B494BC();
  objc_msgSend(v12, sel_setLocation_, v14);

  sub_1D7B4A7DC();
  swift_bridgeObjectRelease();
  sub_1D7B4A41C();
  swift_bridgeObjectRelease();
  sub_1D7B4A41C();
  sub_1D7B4A7DC();
  swift_bridgeObjectRelease();
  if (qword_1F014CF90 != -1)
    swift_once();
  v15 = (id)qword_1F0154598;
  sub_1D7B48F7C();
  swift_bridgeObjectRelease();

  v16 = (void *)sub_1D7B4A38C();
  swift_bridgeObjectRelease();
  objc_msgSend(v12, sel_setText_, v16, 0xE000000000000000, 0, 0xE000000000000000);

  v17 = v12;
  MEMORY[0x1D829E3EC]();
  if (*(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1D7B4A4C4();
  sub_1D7B4A4DC();
  sub_1D7B4A4B8();
  v18 = objc_msgSend(objc_allocWithZone((Class)HKAxisLabel), sel_init);
  objc_msgSend(v18, sel_setLabelType_, 1);
  v19 = objc_msgSend(a4, sel_presentation);
  objc_msgSend(v19, sel_adjustedDoubleForDaemonDouble_, a2);

  v20 = (void *)sub_1D7B494BC();
  objc_msgSend(v18, sel_setLocation_, v20);

  v21 = v18;
  MEMORY[0x1D829E3EC]();
  if (*(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1D7B4A4C4();
  sub_1D7B4A4DC();
  sub_1D7B4A4B8();

  return v23;
}

uint64_t sub_1D7B2D3C0(void *a1)
{
  uint64_t v1;
  id v3;
  id v4;
  BOOL v5;
  uint64_t v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  double v20;
  double v21;
  id v22;
  double v23;
  double v24;
  void *v25;
  uint64_t v26;
  unint64_t v27;
  double v29;
  uint64_t v30;
  id v31;

  swift_getObjectType();
  v3 = objc_msgSend(a1, sel_minValue);
  if (v3
    && (v31 = v3, (swift_dynamicCast() & 1) != 0)
    && (v4 = objc_msgSend(a1, sel_maxValue)) != 0
    && (v31 = v4, (swift_dynamicCast() & 1) != 0)
    && (~*(_QWORD *)&v29 & 0x7FF0000000000000) != 0
    && (v29 - v29 > 0.0
      ? (v5 = (COERCE_UNSIGNED_INT64(v29 - v29) & 0x7FF0000000000000) == 0x7FF0000000000000)
      : (v5 = 1),
        !v5))
  {
    v19 = (id)HKAppleSleepingBreathingDisturbancesMinimumQuantityForClassification();
    objc_msgSend(v19, sel__value);
    v21 = v20;

    v22 = (id)HKAppleSleepingBreathingDisturbancesMinimumQuantityForClassification();
    objc_msgSend(v22, sel__value);
    v24 = v23;

    v25 = *(void **)(v1 + OBJC_IVAR___HKBreathingDisturbancesAxis_displayType);
    v26 = sub_1D7B2CF38(v21, v24, 0, v25, 1);
    v27 = sub_1D7B2CF38(v24, v29, 1, v25, 0);
    sub_1D7AE84A8(v27);
    return v26;
  }
  else
  {
    if (qword_1F014CF10 != -1)
      swift_once();
    v6 = sub_1D7B4969C();
    __swift_project_value_buffer(v6, (uint64_t)qword_1F01544D0);
    v7 = a1;
    v8 = sub_1D7B49684();
    v9 = sub_1D7B4A608();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = swift_slowAlloc();
      v11 = swift_slowAlloc();
      v31 = (id)v11;
      *(_DWORD *)v10 = 136446466;
      v12 = sub_1D7B4AA94();
      v30 = sub_1D7AA4DE4(v12, v13, (uint64_t *)&v31);
      sub_1D7B4A704();
      swift_bridgeObjectRelease();
      *(_WORD *)(v10 + 12) = 2082;
      v14 = v7;
      v15 = objc_msgSend(v14, sel_description, v30, v31);
      v16 = sub_1D7B4A3BC();
      v18 = v17;

      sub_1D7AA4DE4(v16, v18, (uint64_t *)&v31);
      sub_1D7B4A704();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D7813000, v8, v9, "[%{public}s] Asked to create axis labels for incompatible range: %{public}s", (uint8_t *)v10, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D829FFF4](v11, -1, -1);
      MEMORY[0x1D829FFF4](v10, -1, -1);

    }
    else
    {

    }
    return 0;
  }
}

uint64_t method lookup function for BreathingDisturbancesAxis()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BreathingDisturbancesAxis.__allocating_init(displayType:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t HKStateOfMindDomain.init(preferredOverlay:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = sub_1D7B4969C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v18 - v7;
  result = 1;
  switch(a1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      sub_1D7B49678();
      v10 = sub_1D7B49684();
      v11 = sub_1D7B4A608();
      if (!os_log_type_enabled(v10, v11))
      {

        (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
        goto LABEL_5;
      }
      v12 = swift_slowAlloc();
      v13 = swift_slowAlloc();
      v19 = v13;
      *(_DWORD *)v12 = 136446466;
      v18 = sub_1D7AA4DE4(0xD000000000000013, 0x80000001D7BA84B0, &v19);
      sub_1D7B4A704();
      *(_WORD *)(v12 + 12) = 2048;
      v18 = a1;
      sub_1D7B4A704();
      _os_log_impl(&dword_1D7813000, v10, v11, "[%{public}s] Cannot create state of mind for preferred overlay: %ld", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D829FFF4](v13, -1, -1);
      MEMORY[0x1D829FFF4](v12, -1, -1);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      result = 0;
      break;
    case 100:
      return result;
    case 101:
      result = 2;
      break;
    case 102:
      result = 3;
      break;
    case 103:
      result = 4;
      break;
    case 104:
      result = 5;
      break;
    case 105:
      result = 6;
      break;
    case 106:
      result = 7;
      break;
    case 107:
      result = 8;
      break;
    case 108:
      result = 9;
      break;
    case 109:
      result = 10;
      break;
    case 110:
      result = 11;
      break;
    case 111:
      result = 12;
      break;
    case 112:
      result = 13;
      break;
    case 113:
      result = 14;
      break;
    case 114:
      result = 15;
      break;
    case 115:
      result = 16;
      break;
    case 116:
      result = 17;
      break;
    case 117:
      result = 18;
      break;
    default:
      sub_1D7B49678();
      v14 = sub_1D7B49684();
      v15 = sub_1D7B4A608();
      if (os_log_type_enabled(v14, v15))
      {
        v16 = swift_slowAlloc();
        v17 = swift_slowAlloc();
        v19 = v17;
        *(_DWORD *)v16 = 136446466;
        v18 = sub_1D7AA4DE4(0xD000000000000013, 0x80000001D7BA84B0, &v19);
        sub_1D7B4A704();
        *(_WORD *)(v16 + 12) = 2048;
        v18 = a1;
        sub_1D7B4A704();
        _os_log_impl(&dword_1D7813000, v14, v15, "[%{public}s] Cannot create state of mind for unknown preferred overlay: %ld", (uint8_t *)v16, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1D829FFF4](v17, -1, -1);
        MEMORY[0x1D829FFF4](v16, -1, -1);

        (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
        result = 0;
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
LABEL_5:
        result = 0;
      }
      break;
  }
  return result;
}

uint64_t sub_1D7B2DBA0(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v8 = *a3;
  v9 = a3[1];
  v10 = a3[2];
  v11 = a3[3];
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v12(a2, v8, v9, v10, v11, a4, a5);
  swift_release();
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t sub_1D7B2DC40@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

char *sub_1D7B2DC8C(char *result, uint64_t a2, double a3, double a4)
{
  char *v4;
  uint64_t v5;
  double *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  objc_super v12;

  *(_QWORD *)&v4[OBJC_IVAR____TtC8HealthUI32HKMultiLineSeriesBlockCoordinate_coordinates] = result;
  v5 = *((_QWORD *)result + 2);
  if (v5)
  {
    v7 = *((double *)result + 6);
    v6 = (double *)(result + 48);
    v8 = v7;
    v9 = v7;
    do
    {
      v10 = *v6;
      v6 += 5;
      v11 = v10;
      if (v10 < v9)
        v9 = v11;
      if (v8 <= v11)
        v8 = v11;
      --v5;
    }
    while (v5);
    *(double *)&v4[OBJC_IVAR____TtC8HealthUI32HKMultiLineSeriesBlockCoordinate_minYValue] = a3;
    *(double *)&v4[OBJC_IVAR____TtC8HealthUI32HKMultiLineSeriesBlockCoordinate_maxYValue] = a4;
    *(double *)&v4[OBJC_IVAR____TtC8HealthUI32HKMultiLineSeriesBlockCoordinate_startXValue] = v9;
    *(double *)&v4[OBJC_IVAR____TtC8HealthUI32HKMultiLineSeriesBlockCoordinate_endXValue] = v8;
    *(_QWORD *)&v4[OBJC_IVAR____TtC8HealthUI32HKMultiLineSeriesBlockCoordinate_userInfo] = a2;
    v12.receiver = v4;
    v12.super_class = (Class)type metadata accessor for HKMultiLineSeriesBlockCoordinate();
    return (char *)objc_msgSendSuper2(&v12, sel_init);
  }
  else
  {
    __break(1u);
  }
  return result;
}

char *sub_1D7B2DD34(CGFloat *a1, char a2)
{
  uint64_t v2;
  CGFloat a;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;
  CGPoint v10;
  double y;
  CGFloat v12;
  CGPoint v13;
  double v14;
  uint64_t v15;
  int64_t v16;
  char *v17;
  void **v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  CGPoint v22;
  CGFloat x;
  CGFloat v24;
  id v25;
  double v26;
  unint64_t v27;
  unint64_t v28;
  CGFloat *v29;
  uint64_t v30;
  double v32;
  double v33;
  uint64_t v34;
  CGAffineTransform v35;
  CGPoint v36;
  CGPoint v37;
  CGPoint v38;

  v5 = a1[1];
  v6 = a1[2];
  v7 = a1[3];
  v8 = a1[4];
  v9 = a1[5];
  v36.y = *(CGFloat *)(v2 + OBJC_IVAR____TtC8HealthUI32HKMultiLineSeriesBlockCoordinate_minYValue);
  v35.a = *a1;
  a = v35.a;
  v35.b = v5;
  v35.c = v6;
  v35.d = v7;
  v35.tx = v8;
  v35.ty = v9;
  v36.x = 0.0;
  v10 = CGPointApplyAffineTransform(v36, &v35);
  y = v10.y;
  v37.y = *(CGFloat *)(v2 + OBJC_IVAR____TtC8HealthUI32HKMultiLineSeriesBlockCoordinate_maxYValue);
  v35.a = a;
  v35.b = v5;
  v35.c = v6;
  v35.d = v7;
  v35.tx = v8;
  v35.ty = v9;
  v37.x = 0.0;
  v13 = CGPointApplyAffineTransform(v37, &v35);
  v12 = v13.y;
  if ((a2 & 1) != 0)
  {
    HKUIFloorCGPointToScreenScale(v10.x, v10.y);
    y = v14;
    HKUIFloorCGPointToScreenScale(v13.x, v13.y);
  }
  v33 = v12;
  v15 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8HealthUI32HKMultiLineSeriesBlockCoordinate_coordinates);
  v16 = *(_QWORD *)(v15 + 16);
  v17 = (char *)MEMORY[0x1E0DEE9D8];
  if (v16)
  {
    v32 = y;
    v34 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1D7AA60A0(0, v16, 0);
    v17 = (char *)v34;
    v18 = (void **)(v15 + 64);
    do
    {
      v20 = (uint64_t)*(v18 - 4);
      v19 = (uint64_t)*(v18 - 3);
      v38 = (CGPoint)*((_OWORD *)v18 - 1);
      v21 = *v18;
      v35.a = a;
      v35.b = v5;
      v35.c = v6;
      v35.d = v7;
      v35.tx = v8;
      v35.ty = v9;
      v22 = CGPointApplyAffineTransform(v38, &v35);
      x = v22.x;
      v24 = v22.y;
      swift_bridgeObjectRetain();
      v25 = v21;
      if ((a2 & 1) != 0)
      {
        x = HKUIFloorCGPointToScreenScale(v22.x, v22.y);
        v24 = v26;
      }
      v28 = *(_QWORD *)(v34 + 16);
      v27 = *(_QWORD *)(v34 + 24);
      if (v28 >= v27 >> 1)
        sub_1D7AA60A0(v27 > 1, v28 + 1, 1);
      *(_QWORD *)(v34 + 16) = v28 + 1;
      v29 = (CGFloat *)(v34 + 40 * v28);
      *((_QWORD *)v29 + 4) = v20;
      *((_QWORD *)v29 + 5) = v19;
      v29[6] = x;
      v29[7] = v24;
      *((_QWORD *)v29 + 8) = v21;
      v18 += 5;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
    y = v32;
  }
  v30 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8HealthUI32HKMultiLineSeriesBlockCoordinate_userInfo);
  objc_allocWithZone((Class)type metadata accessor for HKMultiLineSeriesBlockCoordinate());
  swift_unknownObjectRetain();
  return sub_1D7B2DC8C(v17, v30, y, v33);
}

id sub_1D7B2DFF0()
{
  return sub_1D7ADCDB4(type metadata accessor for HKMultiLineSeriesBlockCoordinate);
}

uint64_t type metadata accessor for HKMultiLineSeriesBlockCoordinate()
{
  return objc_opt_self();
}

uint64_t sub_1D7B2E1E8(CGContext *a1, void *a2, __int128 *a3, void *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  double v14;
  double v15;
  CGFloat v16;
  uint64_t v17;
  void *v18;
  CGContext *v19;
  __int128 v21;
  __int128 v22;
  __int128 aBlock;
  __int128 v24;
  uint64_t (*v25)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  CGRect v27;

  v5 = v4;
  v21 = a3[1];
  v22 = *a3;
  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*((_QWORD *)a3 + 4);
  v10 = *((_QWORD *)a3 + 5);
  CGContextSaveGState(a1);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_1D7AE0220(MEMORY[0x1E0DEE9D8]);
  objc_msgSend(a4, sel_virtualMarginInsets);
  v13 = v12;
  v15 = v14;
  objc_msgSend(a4, sel_screenRectForSeries_, v5);
  v16 = (CGRectGetWidth(v27) - v13 - v15) * 1.4;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v11;
  *(CGFloat *)(v17 + 24) = v16;
  *(_QWORD *)(v17 + 32) = a1;
  v25 = sub_1D7B2F968;
  v26 = v17;
  *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v24 = sub_1D7B2DBA0;
  *((_QWORD *)&v24 + 1) = &block_descriptor_13;
  v18 = _Block_copy(&aBlock);
  swift_retain();
  v19 = a1;
  swift_release();
  aBlock = v22;
  v24 = v21;
  v25 = v9;
  v26 = v10;
  objc_msgSend(a2, sel_enumerateCoordinatesWithTransform_roundToViewScale_block_, &aBlock, 1, v18);
  _Block_release(v18);
  CGContextRestoreGState(v19);
  return swift_release();
}

uint64_t sub_1D7B2E380(uint64_t result, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, CGContext *a10)
{
  uint64_t v12;
  uint64_t v13;
  void **v14;
  void *v15;
  uint64_t v16;
  id v17;
  uint64_t v18[2];
  __int128 v19;
  void *v20;

  if (result)
  {
    type metadata accessor for HKMultiLineSeriesBlockCoordinate();
    result = swift_dynamicCastClass();
    if (result)
    {
      v12 = *(_QWORD *)(result + OBJC_IVAR____TtC8HealthUI32HKMultiLineSeriesBlockCoordinate_coordinates);
      v13 = *(_QWORD *)(v12 + 16);
      if (v13)
      {
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        v14 = (void **)(v12 + 64);
        do
        {
          v15 = *v14;
          v16 = (uint64_t)*(v14 - 3);
          v18[0] = (uint64_t)*(v14 - 4);
          v18[1] = v16;
          v19 = *((_OWORD *)v14 - 1);
          v20 = v15;
          swift_bridgeObjectRetain();
          v17 = v15;
          sub_1D7B2E4A4(v18, (uint64_t *)(a9 + 16), a10, a2);

          swift_bridgeObjectRelease();
          v14 += 5;
          --v13;
        }
        while (v13);
        swift_bridgeObjectRelease();
        return swift_unknownObjectRelease();
      }
    }
  }
  return result;
}

void sub_1D7B2E4A4(uint64_t *a1, uint64_t *a2, CGContext *a3, double a4)
{
  uint64_t v7;
  uint64_t v8;
  double v9;
  double v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  void *v15;
  id v16;
  double v17;
  double v18;
  id v20;
  id v21;
  void *v22;
  const CGPath *v23;
  id v24;
  id v25;
  char isUniquelyReferenced_nonNull_native;
  void *v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  void *v31;
  uint64_t v32;

  v8 = *a1;
  v7 = a1[1];
  v10 = *((double *)a1 + 2);
  v9 = *((double *)a1 + 3);
  v11 = (void *)a1[4];
  swift_beginAccess();
  v12 = *a2;
  if (*(_QWORD *)(*a2 + 16))
  {
    swift_bridgeObjectRetain();
    v13 = sub_1D7AF46D4(v8, v7);
    if ((v14 & 1) != 0)
    {
      v15 = *(void **)(*(_QWORD *)(v12 + 56) + 8 * v13);
      swift_endAccess();
      v16 = v15;
      swift_bridgeObjectRelease();
      objc_msgSend(v16, sel_currentPoint);
      v18 = vabdd_f64(v10, v17);
      if (vabdd_f64(v18, a4) < 0.01 || v18 <= a4)
      {
        objc_msgSend(v16, sel_addLineToPoint_, v10, v9);
        v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3508]), sel_init);
        v21 = objc_msgSend(v11, sel_strokeStyle);
        if (v21)
        {
          v22 = v21;
          objc_msgSend(v20, sel_appendPath_, v16);
          objc_msgSend(v22, sel_applyToContext_, a3);
          v23 = (const CGPath *)objc_msgSend(v20, sel_CGPath);
          CGContextAddPath(a3, v23);

          CGContextStrokePath(a3);
        }

      }
      goto LABEL_18;
    }
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  v24 = objc_allocWithZone(MEMORY[0x1E0DC3508]);
  swift_bridgeObjectRetain();
  v25 = objc_msgSend(v24, sel_init);
  swift_beginAccess();
  if (v25)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v32 = *a2;
    *a2 = 0x8000000000000000;
    sub_1D7AF6E2C((uint64_t)v25, v8, v7, isUniquelyReferenced_nonNull_native);
    *a2 = v32;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v27 = (void *)sub_1D7B2FA9C(v8, v7);
    swift_bridgeObjectRelease();

  }
  swift_endAccess();
  swift_beginAccess();
  v28 = *a2;
  if (*(_QWORD *)(*a2 + 16))
  {
    swift_bridgeObjectRetain();
    v29 = sub_1D7AF46D4(v8, v7);
    if ((v30 & 1) != 0)
    {
      v31 = *(void **)(*(_QWORD *)(v28 + 56) + 8 * v29);
      swift_endAccess();
      v16 = v31;
      swift_bridgeObjectRelease();
LABEL_18:
      objc_msgSend(v16, sel_moveToPoint_, v10, v9, v32);

      return;
    }
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_endAccess();
  }
}

char *sub_1D7B2E7AC(char *result)
{
  uint64_t v1;
  uint64_t v2;
  void **i;
  CGFloat v4;
  CGFloat v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  double v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  id v18;
  void *v19;
  CGRect v20;

  if (result)
  {
    type metadata accessor for HKMultiLineSeriesBlockCoordinate();
    result = (char *)swift_dynamicCastClass();
    if (result)
    {
      v1 = *(_QWORD *)&result[OBJC_IVAR____TtC8HealthUI32HKMultiLineSeriesBlockCoordinate_coordinates];
      v2 = *(_QWORD *)(v1 + 16);
      if (v2)
      {
        swift_bridgeObjectRetain_n();
        swift_unknownObjectRetain();
        for (i = (void **)(v1 + 64); ; i += 5)
        {
          v4 = *((double *)i - 2);
          v5 = *((double *)i - 1);
          v6 = *i;
          swift_bridgeObjectRetain();
          v7 = v6;
          v8 = objc_msgSend(v7, sel_pointMarkerStyle);
          if (v8)
          {
            v9 = v8;
            result = (char *)objc_msgSend((id)objc_opt_self(), sel_chartPointWithLineSeriesPresentationStyle_, v8);
            if (!result)
            {
              __break(1u);
              return result;
            }
            v10 = result;
            v11 = HKChartSeriesPointMarkerBaseRect(result);
            v13 = v12;
            v15 = v14;
            v17 = v16;
            v18 = objc_msgSend(v10, sel_CGImage);
            if (v18)
            {
              v19 = v18;
              v20.origin.x = v11;
              v20.origin.y = v13;
              v20.size.width = v15;
              v20.size.height = v17;
              CGRectOffset(v20, v4, v5);
              sub_1D7B4A5E4();

              swift_bridgeObjectRelease();
            }
            else
            {

              swift_bridgeObjectRelease();
            }
          }
          else
          {

            swift_bridgeObjectRelease();
          }
          if (!--v2)
          {
            swift_unknownObjectRelease();
            return (char *)swift_bridgeObjectRelease_n();
          }
        }
      }
    }
  }
  return result;
}

void sub_1D7B2E980(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  id v12;
  void *v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  id v19;
  unint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31[4];
  uint64_t v32;

  swift_getObjectType();
  v12 = objc_msgSend(a1, sel_chartPoints);
  if (v12
    && (v13 = v12,
        sub_1D7ADE914(0, (unint64_t *)&qword_1F014DF40),
        v14 = sub_1D7B4A4AC(),
        v13,
        v15 = sub_1D7AE288C(v14),
        swift_bridgeObjectRelease(),
        v15))
  {
    v16 = objc_msgSend(a5, sel_transform);
    v17 = objc_msgSend(a6, sel_transform);
    v18 = v16;
    v19 = v17;
    v20 = sub_1D7B2FF10(v15, (uint64_t)v18, (uint64_t)v19);
    swift_bridgeObjectRelease();

    if (v20 >> 62)
    {
      sub_1D7ADE914(0, (unint64_t *)&unk_1F014EB10);
      swift_bridgeObjectRetain();
      sub_1D7B4A89C();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1D7B4A944();
      sub_1D7ADE914(0, (unint64_t *)&unk_1F014EB10);
    }
    swift_bridgeObjectRelease();
    sub_1D7ADE914(0, (unint64_t *)&unk_1F014EB10);
    v21 = (void *)sub_1D7B4A4A0();
    swift_bridgeObjectRelease();
    v31[0] = a2;
    v31[1] = a3;
    v31[2] = a4;
    v22 = objc_msgSend((id)objc_opt_self(), sel_coordinateListWithCoordinates_blockPath_, v21, v31);

    if (v22)
    {

    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    if (qword_1F014CF00 != -1)
      swift_once();
    v23 = sub_1D7B4969C();
    __swift_project_value_buffer(v23, (uint64_t)qword_1F01544B8);
    v24 = a1;
    v25 = sub_1D7B49684();
    v26 = sub_1D7B4A608();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = swift_slowAlloc();
      v28 = swift_slowAlloc();
      v31[0] = v28;
      *(_DWORD *)v27 = 136446722;
      v29 = sub_1D7B4AA94();
      v32 = sub_1D7AA4DE4(v29, v30, v31);
      sub_1D7B4A704();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2080;
      v32 = sub_1D7AA4DE4(0xD000000000000027, 0x80000001D7BA8660, v31);
      sub_1D7B4A704();
      *(_WORD *)(v27 + 22) = 2080;

      v32 = sub_1D7AA4DE4(0xD00000000000001DLL, 0x80000001D7BA8690, v31);
      sub_1D7B4A704();

      _os_log_impl(&dword_1D7813000, v25, v26, "%{public}s] %s: Unable to cast chartPoints to [HKMultiLineChartPoint], found: %s", (uint8_t *)v27, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1D829FFF4](v28, -1, -1);
      MEMORY[0x1D829FFF4](v27, -1, -1);

    }
    else
    {

    }
    objc_msgSend(objc_allocWithZone((Class)HKGraphSeriesBlockCoordinateList), sel_init);
  }
}

double sub_1D7B2EF6C(void *a1, double a2, double a3, uint64_t a4, uint64_t a5, double (*a6)(uint64_t, double, double))
{
  id v11;
  double v12;

  swift_unknownObjectRetain();
  v11 = a1;
  v12 = a6(a5, a2, a3);
  swift_unknownObjectRelease();

  return v12;
}

BOOL sub_1D7B2EFDC()
{
  char *v0;
  char *v1;
  double v2;
  double v3;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  swift_getObjectType();
  type metadata accessor for HKMultiLineSeriesBlockCoordinate();
  v0 = (char *)swift_dynamicCastClass();
  if (v0)
    swift_unknownObjectRetain();
  v1 = (char *)swift_dynamicCastClass();
  if (v1 && (swift_unknownObjectRetain(), v0))
  {
    v2 = *(double *)&v0[OBJC_IVAR____TtC8HealthUI32HKMultiLineSeriesBlockCoordinate_minYValue];

    v3 = *(double *)&v1[OBJC_IVAR____TtC8HealthUI32HKMultiLineSeriesBlockCoordinate_minYValue];
    return v2 < v3;
  }
  else
  {
    if (qword_1F014CF00 != -1)
      swift_once();
    v5 = sub_1D7B4969C();
    __swift_project_value_buffer(v5, (uint64_t)qword_1F01544B8);
    swift_unknownObjectRetain_n();
    swift_unknownObjectRetain_n();
    v6 = sub_1D7B49684();
    v7 = sub_1D7B4A608();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = swift_slowAlloc();
      v15 = swift_slowAlloc();
      v16 = v15;
      *(_DWORD *)v8 = 136446978;
      v9 = sub_1D7B4AA94();
      sub_1D7AA4DE4(v9, v10, &v16);
      sub_1D7B4A704();
      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 12) = 2080;
      sub_1D7AA4DE4(0xD00000000000001CLL, 0x80000001D7BA85E0, &v16);
      sub_1D7B4A704();
      *(_WORD *)(v8 + 22) = 2080;
      swift_getObjectType();
      v11 = sub_1D7B4AA94();
      sub_1D7AA4DE4(v11, v12, &v16);
      sub_1D7B4A704();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 32) = 2080;
      swift_getObjectType();
      v13 = sub_1D7B4AA94();
      sub_1D7AA4DE4(v13, v14, &v16);
      sub_1D7B4A704();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D7813000, v6, v7, "%{public}s] %s: Unable to compare block coordinates, found type: %s and %s", (uint8_t *)v8, 0x2Au);
      swift_arrayDestroy();
      MEMORY[0x1D829FFF4](v15, -1, -1);
      MEMORY[0x1D829FFF4](v8, -1, -1);

    }
    else
    {

      swift_unknownObjectRelease_n();
      swift_unknownObjectRelease_n();

    }
    return 0;
  }
}

BOOL sub_1D7B2F31C()
{
  char *v0;
  char *v1;
  double v2;
  double v3;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  swift_getObjectType();
  type metadata accessor for HKMultiLineSeriesBlockCoordinate();
  v0 = (char *)swift_dynamicCastClass();
  if (v0)
    swift_unknownObjectRetain();
  v1 = (char *)swift_dynamicCastClass();
  if (v1 && (swift_unknownObjectRetain(), v0))
  {
    v2 = *(double *)&v0[OBJC_IVAR____TtC8HealthUI32HKMultiLineSeriesBlockCoordinate_maxYValue];

    v3 = *(double *)&v1[OBJC_IVAR____TtC8HealthUI32HKMultiLineSeriesBlockCoordinate_maxYValue];
    return v3 < v2;
  }
  else
  {
    if (qword_1F014CF00 != -1)
      swift_once();
    v5 = sub_1D7B4969C();
    __swift_project_value_buffer(v5, (uint64_t)qword_1F01544B8);
    swift_unknownObjectRetain_n();
    swift_unknownObjectRetain_n();
    v6 = sub_1D7B49684();
    v7 = sub_1D7B4A608();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = swift_slowAlloc();
      v15 = swift_slowAlloc();
      v16 = v15;
      *(_DWORD *)v8 = 136446978;
      v9 = sub_1D7B4AA94();
      sub_1D7AA4DE4(v9, v10, &v16);
      sub_1D7B4A704();
      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 12) = 2080;
      sub_1D7AA4DE4(0xD00000000000001FLL, 0x80000001D7BA85C0, &v16);
      sub_1D7B4A704();
      *(_WORD *)(v8 + 22) = 2080;
      swift_getObjectType();
      v11 = sub_1D7B4AA94();
      sub_1D7AA4DE4(v11, v12, &v16);
      sub_1D7B4A704();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 32) = 2080;
      swift_getObjectType();
      v13 = sub_1D7B4AA94();
      sub_1D7AA4DE4(v13, v14, &v16);
      sub_1D7B4A704();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D7813000, v6, v7, "%{public}s] %s: Unable to compare block coordinates, found type: %s and %s", (uint8_t *)v8, 0x2Au);
      swift_arrayDestroy();
      MEMORY[0x1D829FFF4](v15, -1, -1);
      MEMORY[0x1D829FFF4](v8, -1, -1);

    }
    else
    {

      swift_unknownObjectRelease_n();
      swift_unknownObjectRelease_n();

    }
    return 0;
  }
}

uint64_t sub_1D7B2F65C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  id v9;

  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v9 = a1;
  LOBYTE(a5) = a5(a3, a4);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return a5 & 1;
}

id sub_1D7B2F708()
{
  return sub_1D7ADCDB4(type metadata accessor for HKMultiLineSeries);
}

uint64_t type metadata accessor for HKMultiLineSeries()
{
  return objc_opt_self();
}

void destroy for HKMultiLineSeriesCoordinate(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

uint64_t initializeWithCopy for HKMultiLineSeriesCoordinate(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v4 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  v5 = v4;
  return a1;
}

_QWORD *assignWithCopy for HKMultiLineSeriesCoordinate(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  v4 = (void *)a2[4];
  v5 = (void *)a1[4];
  a1[4] = v4;
  v6 = v4;

  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for HKMultiLineSeriesCoordinate(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v5 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);

  return a1;
}

uint64_t getEnumTagSinglePayload for HKMultiLineSeriesCoordinate(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HKMultiLineSeriesCoordinate(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for HKMultiLineSeriesCoordinate()
{
  return &type metadata for HKMultiLineSeriesCoordinate;
}

uint64_t sub_1D7B2F90C()
{
  return MEMORY[0x1E0DEA978];
}

uint64_t sub_1D7B2F918()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D7B2F93C()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1D7B2F968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  return sub_1D7B2E380(a1, *(double *)(v7 + 24), a2, a3, a4, a5, a6, a7, *(_QWORD *)(v7 + 16), *(CGContext **)(v7 + 32));
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

double sub_1D7B2F9AC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  double result;
  uint64_t v13;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_1D7AF46D4(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v13 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1D7AF67E4();
      v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_1D7AA552C((_OWORD *)(*(_QWORD *)(v11 + 56) + 32 * v8), a3);
    sub_1D7B2FB68(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_1D7B2FA9C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1D7AF46D4(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1D7AF69C4();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v6);
  sub_1D7B2FD3C(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_1D7B2FB68(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1D7B4A7A0();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1D7B4A980();
        swift_bridgeObjectRetain();
        sub_1D7B4A3F8();
        v10 = sub_1D7B4A998();
        result = swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8)
            goto LABEL_5;
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(a2 + 48);
          v13 = (_OWORD *)(v12 + 16 * v3);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1)
            *v13 = *v14;
          v15 = *(_QWORD *)(a2 + 56);
          v16 = (_OWORD *)(v15 + 32 * v3);
          v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v16 >= v17 + 2))
          {
            v9 = v17[1];
            *v16 = *v17;
            v16[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1D7B2FD3C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1D7B4A7A0();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1D7B4A980();
        swift_bridgeObjectRetain();
        sub_1D7B4A3F8();
        v9 = sub_1D7B4A998();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_1D7B2FF10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v5;
  uint64_t *v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = MEMORY[0x1E0DEE9D8];
  v14 = MEMORY[0x1E0DEE9D8];
  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    v8 = (uint64_t *)(a1 + 40);
    do
    {
      v9 = *v8;
      ObjectType = swift_getObjectType();
      v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8);
      swift_unknownObjectRetain();
      v12 = v11(a2, a3, ObjectType, v9);
      v13 = swift_unknownObjectRelease();
      if (v12)
      {
        MEMORY[0x1D829E3EC](v13);
        if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1D7B4A4C4();
        sub_1D7B4A4DC();
        sub_1D7B4A4B8();
      }
      v8 += 2;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
    return v14;
  }
  return result;
}

void sub_1D7B30028()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  swift_getObjectType();
  type metadata accessor for HKMultiLineSeriesBlockCoordinate();
  if (!swift_dynamicCastClass())
  {
    if (qword_1F014CF00 != -1)
      swift_once();
    v0 = sub_1D7B4969C();
    __swift_project_value_buffer(v0, (uint64_t)qword_1F01544B8);
    swift_unknownObjectRetain_n();
    v1 = sub_1D7B49684();
    v2 = sub_1D7B4A608();
    if (os_log_type_enabled(v1, v2))
    {
      v3 = swift_slowAlloc();
      v4 = swift_slowAlloc();
      v9 = v4;
      *(_DWORD *)v3 = 136446722;
      v5 = sub_1D7B4AA94();
      sub_1D7AA4DE4(v5, v6, &v9);
      sub_1D7B4A704();
      swift_bridgeObjectRelease();
      *(_WORD *)(v3 + 12) = 2080;
      sub_1D7AA4DE4(0xD00000000000002ELL, 0x80000001D7BA8630, &v9);
      sub_1D7B4A704();
      *(_WORD *)(v3 + 22) = 2080;
      swift_getObjectType();
      v7 = sub_1D7B4AA94();
      sub_1D7AA4DE4(v7, v8, &v9);
      sub_1D7B4A704();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D7813000, v1, v2, "%{public}s] %s: Unable to calculate x axis distance, found type: %s instead of HKMultiLineSeriesBlockCoordinate", (uint8_t *)v3, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1D829FFF4](v4, -1, -1);
      MEMORY[0x1D829FFF4](v3, -1, -1);

    }
    else
    {

      swift_unknownObjectRelease_n();
    }
  }
}

void sub_1D7B30290()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  swift_getObjectType();
  type metadata accessor for HKMultiLineSeriesBlockCoordinate();
  if (!swift_dynamicCastClass())
  {
    if (qword_1F014CF00 != -1)
      swift_once();
    v0 = sub_1D7B4969C();
    __swift_project_value_buffer(v0, (uint64_t)qword_1F01544B8);
    swift_unknownObjectRetain_n();
    v1 = sub_1D7B49684();
    v2 = sub_1D7B4A608();
    if (os_log_type_enabled(v1, v2))
    {
      v3 = swift_slowAlloc();
      v4 = swift_slowAlloc();
      v9 = v4;
      *(_DWORD *)v3 = 136446722;
      v5 = sub_1D7B4AA94();
      sub_1D7AA4DE4(v5, v6, &v9);
      sub_1D7B4A704();
      swift_bridgeObjectRelease();
      *(_WORD *)(v3 + 12) = 2080;
      sub_1D7AA4DE4(0xD00000000000002ELL, 0x80000001D7BA8600, &v9);
      sub_1D7B4A704();
      *(_WORD *)(v3 + 22) = 2080;
      swift_getObjectType();
      v7 = sub_1D7B4AA94();
      sub_1D7AA4DE4(v7, v8, &v9);
      sub_1D7B4A704();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D7813000, v1, v2, "%{public}s] %s: Unable to calculate y axis difference, found type: %s instead of HKMultiLineSeriesBlockCoordinate", (uint8_t *)v3, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1D829FFF4](v4, -1, -1);
      MEMORY[0x1D829FFF4](v3, -1, -1);

    }
    else
    {

      swift_unknownObjectRelease_n();
    }
  }
}

double _stdlib_squareRoot(double a1)
{
  return sqrt(a1);
}

uint64_t sub_1D7B30518()
{
  uint64_t v0;

  return swift_deallocObject();
}

char *sub_1D7B30544(char *a1)
{
  return sub_1D7B2E7AC(a1);
}

id sub_1D7B30618()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BalanceYAxis();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for BalanceYAxis()
{
  return objc_opt_self();
}

id sub_1D7B30668()
{
  id v0;
  void *v1;
  id v2;
  void *v3;

  v0 = objc_msgSend(objc_allocWithZone((Class)HKAxisLabel), sel_init);
  objc_msgSend(v0, sel_setLabelType_, 0);
  v1 = (void *)sub_1D7B494BC();
  objc_msgSend(v0, sel_setLocation_, v1);

  sub_1D7B4A7DC();
  swift_bridgeObjectRelease();
  if (qword_1F014CF90 != -1)
    swift_once();
  v2 = (id)qword_1F0154598;
  sub_1D7B48F7C();

  v3 = (void *)sub_1D7B4A38C();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setText_, v3, 0xE000000000000000);

  return v0;
}

id sub_1D7B307C8(void *a1)
{
  double v2;
  double v3;
  double v4;
  double v5;
  id result;
  BOOL v7;
  BOOL v8;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  double v25;
  uint64_t v26;

  sub_1D7B495A0();
  v3 = v2;
  v5 = v4;
  result = objc_msgSend(a1, sel_minValue);
  if (!result)
    return result;
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  result = objc_msgSend(a1, sel_maxValue);
  if (!result)
    return result;
  if ((swift_dynamicCast() & 1) == 0 || (~*(_QWORD *)&v25 & 0x7FF0000000000000) == 0)
    return 0;
  v7 = v25 - v25 <= 0.0 || (COERCE_UNSIGNED_INT64(v25 - v25) & 0x7FF0000000000000) == 0x7FF0000000000000;
  v8 = !v7 && v5 < v25;
  if (!v8 || v25 >= v3)
    return 0;
  v26 = MEMORY[0x1E0DEE9D8];
  v10 = objc_msgSend(objc_allocWithZone((Class)HKAxisLabel), sel_init);
  objc_msgSend(v10, sel_setLabelType_, 1);
  v11 = (void *)sub_1D7B494BC();
  objc_msgSend(v10, sel_setLocation_, v11);

  v12 = v10;
  MEMORY[0x1D829E3EC]();
  v13 = *(id *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if ((unint64_t)v13 >= *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1D7B4A4C4();
  sub_1D7B4A4DC();
  sub_1D7B4A4B8();
  if (v25 > v3)
  {
    __break(1u);
  }
  else
  {
    v13 = sub_1D7B30668();
    MEMORY[0x1D829E3EC]();
    if (*(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_22;
  }
  sub_1D7B4A4C4();
LABEL_22:
  sub_1D7B4A4DC();
  sub_1D7B4A4B8();
  v14 = objc_msgSend(objc_allocWithZone((Class)HKAxisLabel), sel_init);
  objc_msgSend(v14, sel_setLabelType_, 1);
  v15 = (void *)sub_1D7B494BC();
  objc_msgSend(v14, sel_setLocation_, v15);

  v16 = v14;
  MEMORY[0x1D829E3EC]();
  v17 = *(id *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if ((unint64_t)v17 >= *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1D7B4A4C4();
  sub_1D7B4A4DC();
  sub_1D7B4A4B8();
  if (v3 > v5)
  {
    __break(1u);
  }
  else
  {
    v17 = sub_1D7B30668();
    MEMORY[0x1D829E3EC]();
    if (*(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_26;
  }
  sub_1D7B4A4C4();
LABEL_26:
  sub_1D7B4A4DC();
  sub_1D7B4A4B8();
  v18 = objc_msgSend(objc_allocWithZone((Class)HKAxisLabel), sel_init);
  objc_msgSend(v18, sel_setLabelType_, 1);
  v19 = (void *)sub_1D7B494BC();
  objc_msgSend(v18, sel_setLocation_, v19);

  v20 = v18;
  MEMORY[0x1D829E3EC]();
  v21 = *(id *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if ((unint64_t)v21 >= *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1D7B4A4C4();
  sub_1D7B4A4DC();
  sub_1D7B4A4B8();
  if (v5 > v25)
  {
    __break(1u);
    goto LABEL_38;
  }
  v21 = sub_1D7B30668();
  MEMORY[0x1D829E3EC]();
  if (*(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
LABEL_38:
    sub_1D7B4A4C4();
  sub_1D7B4A4DC();
  sub_1D7B4A4B8();
  v22 = objc_msgSend(objc_allocWithZone((Class)HKAxisLabel), sel_init);
  objc_msgSend(v22, sel_setLabelType_, 1);
  v23 = (void *)sub_1D7B494BC();
  objc_msgSend(v22, sel_setLocation_, v23);

  v24 = v22;
  MEMORY[0x1D829E3EC]();
  if (*(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1D7B4A4C4();
  sub_1D7B4A4DC();
  sub_1D7B4A4B8();

  return (id)v26;
}

uint64_t PairedDeviceFeatureAttributesProvider.hasActivePairedDevice.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;

  v1 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 24))(ObjectType, v1) & 1;
}

void PairedDeviceFeatureAttributesProvider.pairedDeviceAttributes.getter(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t (**v3)(_QWORD, _QWORD);
  uint64_t ObjectType;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;

  v3 = *(uint64_t (***)(_QWORD, _QWORD))(v1 + 24);
  ObjectType = swift_getObjectType();
  v5 = (void *)v3[4](ObjectType, v3);
  v6 = v3[1](ObjectType, v3);
  v8 = v7;
  v9 = objc_msgSend(v5, sel_localAttributes);
  v10 = v3[2](ObjectType, v3);
  v12 = v11;
  if (v11)
  {
    v13 = v10;
    v14 = objc_msgSend(v5, sel_pairedAttributes);

    if (!v14)
    {
      swift_bridgeObjectRelease();
      v13 = 0;
      v12 = 0;
    }
  }
  else
  {

    v13 = 0;
    v14 = 0;
  }
  if (!v14 && v9)
  {
    swift_bridgeObjectRelease();
    v14 = 0;
    v8 = 0;
    v6 = 0;
  }
  *a1 = v6;
  a1[1] = v8;
  a1[2] = (uint64_t)v9;
  a1[3] = v13;
  a1[4] = v12;
  a1[5] = (uint64_t)v14;
}

uint64_t PairedDeviceFeatureAttributesProvider.__allocating_init(pairedDeviceAttributesDataSource:logger:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return sub_1D7B313A4(a1, a3, v3, ObjectType, a2);
}

uint64_t PairedDeviceFeatureAttributesProvider.init(pairedDeviceAttributesDataSource:logger:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return sub_1D7B315E0(a1, a3, v3, ObjectType, a2);
}

uint64_t sub_1D7B3111C()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    type metadata accessor for PairedDeviceFeatureAttributesProvider();
    sub_1D7B28100();
    sub_1D7B49780();
    swift_release();
    sub_1D7B497D4();
    return swift_release();
  }
  return result;
}

uint64_t PairedDeviceFeatureAttributesProvider.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_unknownObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC8HealthUI37PairedDeviceFeatureAttributesProvider_logger;
  v2 = sub_1D7B4969C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return v0;
}

uint64_t PairedDeviceFeatureAttributesProvider.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_unknownObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC8HealthUI37PairedDeviceFeatureAttributesProvider_logger;
  v2 = sub_1D7B4969C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1D7B31260@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1D7B49780();
  *a1 = result;
  return result;
}

uint64_t static PairedDeviceFeatureAttributesProvider.makeDefaultProvider(featureIdentifier:healthStore:logger:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  void (*v11)(char *, uint64_t, uint64_t);
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v18;

  v6 = sub_1D7B4969C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6708]), sel_initWithFeatureIdentifier_healthStore_, a1, a2);
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v11(v9, a3, v6);
  v12 = objc_allocWithZone((Class)type metadata accessor for DefaultPairedDeviceFeatureAttributesDataSource());
  v13 = sub_1D7B35E9C(v10, v9);
  v11(v9, a3, v6);
  v14 = swift_allocObject();
  v15 = v13;
  v16 = sub_1D7B313FC(v15, (uint64_t)v9, v14);

  return v16;
}

uint64_t sub_1D7B313A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;

  v9 = swift_allocObject();
  return sub_1D7B315E0(a1, a2, v9, a4, a5);
}

uint64_t sub_1D7B313FC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  uint64_t v14;

  *(_QWORD *)(a3 + OBJC_IVAR____TtC8HealthUI37PairedDeviceFeatureAttributesProvider_cancellable) = 0;
  *(_QWORD *)(a3 + 16) = a1;
  *(_QWORD *)(a3 + 24) = &protocol witness table for DefaultPairedDeviceFeatureAttributesDataSource;
  v6 = a3 + OBJC_IVAR____TtC8HealthUI37PairedDeviceFeatureAttributesProvider_logger;
  v7 = sub_1D7B4969C();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v6, a2, v7);
  v9 = MEMORY[0x1E0C95F28];
  sub_1D7B318A0(0, (unint64_t *)&qword_1F014E960, (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95F28]);
  sub_1D7B31900(&qword_1F0150530, (unint64_t *)&qword_1F014E960, (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))v9, MEMORY[0x1E0C95F48]);
  v10 = a1;
  sub_1D7B49834();
  v11 = swift_allocObject();
  swift_weakInit();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_1D7B31874;
  *(_QWORD *)(v12 + 24) = v11;
  v13 = MEMORY[0x1E0C95D78];
  sub_1D7B318A0(0, (unint64_t *)&unk_1F0150600, (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1D7B31900(&qword_1F0150388, (unint64_t *)&unk_1F0150600, (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))v13, MEMORY[0x1E0C95D90]);
  v14 = sub_1D7B49858();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a2, v7);
  swift_release();
  *(_QWORD *)(a3 + OBJC_IVAR____TtC8HealthUI37PairedDeviceFeatureAttributesProvider_cancellable) = v14;
  swift_release();
  return a3;
}

uint64_t sub_1D7B315E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void);
  uint64_t v16;

  *(_QWORD *)(a3 + OBJC_IVAR____TtC8HealthUI37PairedDeviceFeatureAttributesProvider_cancellable) = 0;
  *(_QWORD *)(a3 + 16) = a1;
  *(_QWORD *)(a3 + 24) = a5;
  v9 = a3 + OBJC_IVAR____TtC8HealthUI37PairedDeviceFeatureAttributesProvider_logger;
  v10 = sub_1D7B4969C();
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v9, a2, v10);
  v12 = *(void (**)(uint64_t, uint64_t))(a5 + 40);
  swift_unknownObjectRetain();
  v12(a4, a5);
  v13 = swift_allocObject();
  swift_weakInit();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = sub_1D7B31874;
  *(_QWORD *)(v14 + 24) = v13;
  v15 = MEMORY[0x1E0C95D78];
  sub_1D7B318A0(0, (unint64_t *)&unk_1F0150600, (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1D7B31900(&qword_1F0150388, (unint64_t *)&unk_1F0150600, (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))v15, MEMORY[0x1E0C95D90]);
  v16 = sub_1D7B49858();
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a2, v10);
  swift_release();
  *(_QWORD *)(a3 + OBJC_IVAR____TtC8HealthUI37PairedDeviceFeatureAttributesProvider_cancellable) = v16;
  swift_release();
  return a3;
}

uint64_t sub_1D7B31778()
{
  return type metadata accessor for PairedDeviceFeatureAttributesProvider();
}

uint64_t type metadata accessor for PairedDeviceFeatureAttributesProvider()
{
  uint64_t result;

  result = qword_1F01502F0;
  if (!qword_1F01502F0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D7B317BC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D7B4969C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for PairedDeviceFeatureAttributesProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PairedDeviceFeatureAttributesProvider.__allocating_init(pairedDeviceAttributesDataSource:logger:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1D7B31850()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D7B31874()
{
  return sub_1D7B3111C();
}

uint64_t sub_1D7B3187C()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1D7B318A0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, uint64_t, _QWORD, _QWORD))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, MEMORY[0x1E0DEE9C0] + 8, MEMORY[0x1E0DEDCE8], MEMORY[0x1E0DEDD18]);
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1D7B31900(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(_QWORD, uint64_t, _QWORD, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1D7B318A0(255, a2, a3);
    result = MEMORY[0x1D829FF28](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t CalendarViewLayout.calendar.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_calendar;
  v4 = sub_1D7B49300();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t CalendarViewLayout.numberOfDaysPerWeek.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_numberOfDaysPerWeek);
}

double sub_1D7B319B4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_itemHeight;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_1D7B319F8(double a1)
{
  uint64_t v1;
  double *v3;
  uint64_t result;

  v3 = (double *)(v1 + OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_itemHeight);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_1D7B31A48())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

double CalendarViewLayout.minimumSectionInsets.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_minimumSectionInsets);
}

id CalendarViewLayout.__allocating_init(calendar:overlays:itemHeight:minimumSectionInsets:)(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6, double a7)
{
  objc_class *v7;
  id v15;
  id v16;

  v15 = objc_allocWithZone(v7);
  v16 = sub_1D7B3303C(a1, a2, a3, a4, a5, a6, a7);
  swift_bridgeObjectRelease();
  return v16;
}

id CalendarViewLayout.init(calendar:overlays:itemHeight:minimumSectionInsets:)(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6, double a7)
{
  id v7;

  v7 = sub_1D7B3303C(a1, a2, a3, a4, a5, a6, a7);
  swift_bridgeObjectRelease();
  return v7;
}

id CalendarViewLayout.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void CalendarViewLayout.init(coder:)()
{
  sub_1D7B4A890();
  __break(1u);
}

uint64_t sub_1D7B31C54()
{
  char *v0;
  id v1;
  void *v2;
  double v3;
  double v4;
  double *v5;
  double v6;
  uint64_t result;
  double v8;
  double v9;
  uint64_t v10;

  v1 = objc_msgSend(v0, sel_collectionView);
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, sel_bounds);
    v4 = v3;

  }
  else
  {
    v4 = 1200.0;
  }
  v5 = (double *)&v0[OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_itemHeight];
  swift_beginAccess();
  v6 = *v5;
  result = (uint64_t)objc_msgSend(v0, sel_minimumLineSpacing);
  v9 = ceil(v4 / (v6 + v8));
  if ((~*(_QWORD *)&v9 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v9 <= -9.22337204e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v9 >= 9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v10 = *(_QWORD *)&v0[OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_numberOfDaysPerWeek];
  result = v10 * (uint64_t)v9;
  if ((unsigned __int128)(v10 * (__int128)(uint64_t)v9) >> 64 != result >> 63)
LABEL_12:
    __break(1u);
  return result;
}

double sub_1D7B31D64(double a1)
{
  uint64_t v1;
  double result;

  result = a1 / (double)*(uint64_t *)(v1 + OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_numberOfDaysPerWeek) * -0.5
         + 34.0;
  if (*(double *)(v1 + OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_minimumSectionInsets + 8) > result)
    return *(double *)(v1 + OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_minimumSectionInsets + 8);
  return result;
}

void sub_1D7B31DA8()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  double v9;
  double v10;
  double v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  double v16;
  double v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  double *v27;
  unint64_t *v28;
  uint64_t v29;
  unint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  double v35;
  double *v36;
  double v37;
  id v38;
  double v39;
  double v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  double v45;
  uint64_t v46[3];
  CGRect v47;

  v1 = v0;
  swift_getObjectType();
  v2 = objc_msgSend(v0, sel_collectionView);
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, sel_bounds);
    v5 = v4;
    v7 = v6;
    v9 = v8;
    v11 = v10;
    v12 = v3;
    v13 = objc_msgSend(v12, sel_window);
    if (!v13
      || (v14 = v13, v15 = objc_msgSend(v13, sel_screen), v14, !v15))
    {
      v15 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
    }
    objc_msgSend(v15, sel_scale);
    v17 = v16;

    if (qword_1F014CF00 != -1)
      goto LABEL_25;
    while (1)
    {
      v18 = sub_1D7B4969C();
      __swift_project_value_buffer(v18, (uint64_t)qword_1F01544B8);
      v19 = sub_1D7B49684();
      v20 = sub_1D7B4A5FC();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = swift_slowAlloc();
        v22 = swift_slowAlloc();
        v46[0] = v22;
        *(_DWORD *)v21 = 136446466;
        v23 = sub_1D7B4AA94();
        sub_1D7AA4DE4(v23, v24, v46);
        sub_1D7B4A704();
        swift_bridgeObjectRelease();
        *(_WORD *)(v21 + 12) = 2080;
        v43 = v7;
        v44 = v9;
        v45 = v11;
        type metadata accessor for CGRect(0);
        v25 = sub_1D7B4A3E0();
        v42 = sub_1D7AA4DE4(v25, v26, v46);
        sub_1D7B4A704();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D7813000, v19, v20, "%{public}s: prepare() for bounds: %s", (uint8_t *)v21, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1D829FFF4](v22, -1, -1);
        MEMORY[0x1D829FFF4](v21, -1, -1);
      }

      v27 = (double *)&v1[OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_itemHeight];
      swift_beginAccess();
      v11 = *v27;
      v28 = (unint64_t *)&v1[OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_overlays];
      swift_beginAccess();
      v29 = *(_QWORD *)(*v28 + 16);
      if (!v29)
        break;
      swift_beginAccess();
      v30 = *v28;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v28 = v30;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v30 = sub_1D7B33028(v30);
      v32 = 0;
      while (1)
      {
        *v28 = v30;
        if (v32 >= *(_QWORD *)(v30 + 16))
          break;
        v33 = type metadata accessor for OverlayConfiguration();
        v34 = v30
            + ((*(unsigned __int8 *)(*(_QWORD *)(v33 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v33 - 8) + 80))
            + *(_QWORD *)(*(_QWORD *)(v33 - 8) + 72) * v32;
        *(_QWORD *)(v34 + 8) = v5;
        *(_QWORD *)(v34 + 16) = v7;
        *(double *)(v34 + 24) = v9;
        *(double *)(v34 + 32) = v11;
        v30 = *v28;
        if (v29 == ++v32)
        {
          swift_endAccess();
          goto LABEL_15;
        }
      }
      __break(1u);
LABEL_25:
      swift_once();
    }
LABEL_15:
    v35 = (double)*(uint64_t *)&v1[OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_numberOfDaysPerWeek];
    v36 = (double *)&v1[OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_minimumSectionInsets];
    if (*(double *)&v1[OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_minimumSectionInsets + 8] > v9 / v35 * -0.5 + 34.0)
      v37 = *(double *)&v1[OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_minimumSectionInsets + 8];
    else
      v37 = v9 / v35 * -0.5 + 34.0;
    objc_msgSend(v1, sel_setItemSize_, floor(v17 * ((v9 - (v37 + v37)) / v35)) / v17, v11, v42, v43, *(_QWORD *)&v44, *(_QWORD *)&v45);
    objc_msgSend(v1, sel_setSectionInset_, *v36, v37, v36[2], v37);
    if (qword_1F014CFA0 != -1)
      swift_once();
    v38 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC37F8]), sel_initForTextStyle_, qword_1F0150128);
    if (qword_1F014CF98 != -1)
      swift_once();
    objc_msgSend(v38, sel_scaledValueForValue_, *(double *)&qword_1F0150120);
    v40 = v39;

    objc_msgSend(v1, sel_setHeaderReferenceSize_, v9, v40);
    v41 = v12;
    objc_msgSend(v41, sel_bounds);
    CGRectGetHeight(v47);
    objc_msgSend(v41, sel_contentInset);
    objc_msgSend(v41, sel_setContentInset_);

  }
}

void sub_1D7B323C4(void *a1)
{
  char *v1;
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  id v6;
  unint64_t v7;
  unint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  objc_super v14;

  v14.receiver = v1;
  v14.super_class = (Class)type metadata accessor for CalendarViewLayout();
  objc_msgSendSuper2(&v14, sel_invalidateLayoutWithContext_, a1);
  type metadata accessor for CalendarLayoutInvalidationContext();
  v3 = swift_dynamicCastClass();
  if (v3)
  {
    if (*(_BYTE *)(v3 + OBJC_IVAR____TtC8HealthUI33CalendarLayoutInvalidationContext_shouldInvalidateAllDecorationViews) == 1)
    {
      v4 = (unint64_t *)&v1[OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_overlays];
      swift_beginAccess();
      v5 = *(_QWORD *)(*v4 + 16);
      if (v5)
      {
        swift_beginAccess();
        v6 = a1;
        v7 = 0;
        while (1)
        {
          v8 = *v4;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *v4 = v8;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            v8 = sub_1D7B33028(v8);
            *v4 = v8;
          }
          if (v7 >= *(_QWORD *)(v8 + 16))
            break;
          v10 = v7 + 1;
          v11 = *(_QWORD *)(type metadata accessor for OverlayConfiguration() - 8);
          v12 = v8 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
          v13 = *(_QWORD *)(v11 + 72) * v7;

          *(_QWORD *)(v12 + v13) = 0;
          v7 = v10;
          if (v5 == v10)
          {
            swift_endAccess();

            return;
          }
        }
        __break(1u);
      }
    }
  }
}

uint64_t sub_1D7B32568(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  id v10;
  void *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  objc_super v37;
  unint64_t v38;

  v5 = v4;
  v37.receiver = v4;
  v37.super_class = (Class)type metadata accessor for CalendarViewLayout();
  v10 = objc_msgSendSuper2(&v37, sel_layoutAttributesForElementsInRect_, a1, a2, a3, a4);
  if (v10)
  {
    v11 = v10;
    sub_1D7B33298();
    v12 = sub_1D7B4A4AC();

  }
  else
  {
    v12 = MEMORY[0x1E0DEE9D8];
  }
  v38 = v12;
  v36 = *(_QWORD *)&v5[OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_numberOfDaysPerWeek];
  if (v12 >> 62)
  {
    type metadata accessor for CalendarViewLayoutAttributes();
    swift_bridgeObjectRetain();
    v25 = sub_1D7B4A89C();
    result = swift_bridgeObjectRelease();
    v12 = v25;
  }
  else
  {
    v13 = v12 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n();
    sub_1D7B4A944();
    type metadata accessor for CalendarViewLayoutAttributes();
    if (swift_dynamicCastMetatype() || (v23 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
    {
LABEL_6:
      result = swift_bridgeObjectRelease();
    }
    else
    {
      v24 = v13 + 32;
      while (swift_dynamicCastClass())
      {
        v24 += 8;
        if (!--v23)
          goto LABEL_6;
      }
      result = swift_bridgeObjectRelease();
      v12 = v13 | 1;
    }
  }
  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    v15 = sub_1D7B4A8A8();
    result = swift_bridgeObjectRelease();
    if (!v15)
      goto LABEL_23;
  }
  else
  {
    v15 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v15)
      goto LABEL_23;
  }
  if (v15 < 1)
  {
    __break(1u);
    return result;
  }
  v16 = 0;
  do
  {
    if ((v12 & 0xC000000000000001) != 0)
      v17 = (char *)MEMORY[0x1D829E758](v16, v12);
    else
      v17 = (char *)*(id *)(v12 + 8 * v16 + 32);
    v18 = v17;
    ++v16;
    objc_msgSend(v5, sel_sectionInset);
    v20 = v19;
    v21 = &v18[OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_horizontalSectionInset];
    swift_beginAccess();
    *(_QWORD *)v21 = v20;
    v22 = &v18[OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_numberOfDaysPerWeek];
    swift_beginAccess();
    *(_QWORD *)v22 = v36;

  }
  while (v15 != v16);
LABEL_23:
  swift_bridgeObjectRelease();
  v26 = &v5[OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_overlays];
  swift_beginAccess();
  v27 = *(_QWORD *)v26;
  v28 = *(_QWORD *)(*(_QWORD *)v26 + 16);
  if (v28)
  {
    v29 = *(_QWORD *)(type metadata accessor for OverlayConfiguration() - 8);
    v30 = v27 + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80));
    v31 = *(_QWORD *)(v29 + 72);
    swift_bridgeObjectRetain();
    do
    {
      (*(void (**)(void))(*(_QWORD *)(v30 + 48) + 8))();
      v32 = (void *)sub_1D7B4A38C();
      swift_bridgeObjectRelease();
      v33 = (void *)sub_1D7B49420();
      v34 = objc_msgSend(v5, sel_layoutAttributesForDecorationViewOfKind_atIndexPath_, v32, v33);

      if (v34)
      {
        v35 = v34;
        MEMORY[0x1D829E3EC]();
        if (*(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1D7B4A4C4();
        sub_1D7B4A4DC();
        sub_1D7B4A4B8();

      }
      v30 += v31;
      --v28;
    }
    while (v28);
    swift_bridgeObjectRelease();
  }
  return v38;
}

uint64_t sub_1D7B329C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v7;
  void (**v8)(char *, _QWORD, uint64_t);
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  id v17;
  void *v18;
  char *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  id v23;
  uint64_t v24;
  char v26;
  unint64_t v27;
  unint64_t *v28;
  uint64_t v29;
  void (**v30)(char *, _QWORD, uint64_t);
  void *v31;
  void *v32;
  objc_class *v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  id v39;
  void *v40;
  char *v41;
  id v42;
  unint64_t *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  objc_super v51;

  v4 = v3;
  v50 = a3;
  v7 = sub_1D7B49474();
  v8 = *(void (***)(char *, _QWORD, uint64_t))(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = type metadata accessor for OverlayConfiguration();
  v11 = *(_QWORD *)(v45 - 8);
  v12 = MEMORY[0x1E0C80A78](v45);
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v41 - v15;
  v17 = objc_msgSend(v4, sel_collectionView);
  if (!v17)
  {
LABEL_20:
    v31 = (void *)sub_1D7B4A38C();
    v32 = (void *)sub_1D7B49420();
    v33 = (objc_class *)type metadata accessor for CalendarViewLayout();
    v51.receiver = v4;
    v51.super_class = v33;
    v8 = (void (**)(char *, _QWORD, uint64_t))objc_msgSendSuper2(&v51, sel_layoutAttributesForDecorationViewOfKind_atIndexPath_, v31, v32);

    return (uint64_t)v8;
  }
  v18 = v17;
  v44 = v4;
  v19 = &v4[OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_overlays];
  swift_beginAccess();
  v43 = (unint64_t *)v19;
  v20 = *(_QWORD *)v19;
  v48 = *(_QWORD *)(*(_QWORD *)v19 + 16);
  if (!v48)
  {

LABEL_19:
    v4 = v44;
    goto LABEL_20;
  }
  v41 = v14;
  v42 = v18;
  v21 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v46 = *(_QWORD *)(v11 + 72);
  v49 = v20;
  swift_bridgeObjectRetain();
  v22 = 0;
  v47 = a1;
  while (1)
  {
    v23 = (id)(v49 + v21);
    if ((*(uint64_t (**)(void))(*(_QWORD *)(v49 + v21 + 48) + 8))() == a1 && v24 == a2)
      break;
    v26 = sub_1D7B4A938();
    swift_bridgeObjectRelease();
    sub_1D7B332D4((uint64_t)v23, (uint64_t)v16);
    v8[2](v10, v50, v7);
    if ((v26 & 1) != 0)
      goto LABEL_13;
    ((void (*)(char *, uint64_t))v8[1])(v10, v7);
    sub_1D7B33318((uint64_t)v16);
LABEL_5:
    ++v22;
    a1 = v47;
    v21 += v46;
    if (v48 == v22)
    {

      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
  }
  swift_bridgeObjectRelease();
  sub_1D7B332D4((uint64_t)v23, (uint64_t)v16);
  v8[2](v10, v50, v7);
LABEL_13:
  v27 = sub_1D7B4942C();
  ((void (*)(char *, uint64_t))v8[1])(v10, v7);
  sub_1D7B33318((uint64_t)v16);
  if ((v27 & 1) == 0)
    goto LABEL_5;
  swift_bridgeObjectRelease();
  v28 = v43;
  if (v22 >= *(_QWORD *)(*v43 + 16))
  {
    __break(1u);
LABEL_26:
    result = sub_1D7B33028(v27);
    v27 = result;
    *v28 = result;
    goto LABEL_23;
  }
  v29 = (uint64_t)v41;
  sub_1D7B332D4(*v43 + v21, (uint64_t)v41);
  v8 = *(void (***)(char *, _QWORD, uint64_t))v29;
  if (*(_QWORD *)v29)
  {
    v30 = v8;
    sub_1D7B33318(v29);

    return (uint64_t)v8;
  }
  type metadata accessor for CalendarViewLayoutAttributes();
  v35 = *(_QWORD *)(v29 + 40);
  v36 = *(_QWORD *)(v29 + 48);
  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v36);
  v37 = (void *)sub_1D7B4A38C();
  swift_bridgeObjectRelease();
  v38 = (void *)sub_1D7B49420();
  v39 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_layoutAttributesForDecorationViewOfKind_withIndexPath_, v37, v38);

  v23 = v42;
  (*(void (**)(id, id, uint64_t, uint64_t, double, double, double, double))(v36 + 16))(v39, v42, v35, v36, *(double *)(v29 + 8), *(double *)(v29 + 16), *(double *)(v29 + 24), *(double *)(v29 + 32));
  swift_beginAccess();
  v27 = *v28;
  v8 = (void (**)(char *, _QWORD, uint64_t))v39;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v28 = v27;
  if ((result & 1) == 0)
    goto LABEL_26;
LABEL_23:
  if (v22 >= *(_QWORD *)(v27 + 16))
  {
    __break(1u);
  }
  else
  {
    v40 = *(void **)(v27 + v21);
    *(_QWORD *)(v27 + v21) = v8;
    swift_endAccess();

    sub_1D7B33318((uint64_t)v41);
    return (uint64_t)v8;
  }
  return result;
}

id CalendarViewLayout.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void CalendarViewLayout.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id CalendarViewLayout.__deallocating_deinit()
{
  return sub_1D7AE3DFC(0, type metadata accessor for CalendarViewLayout);
}

id sub_1D7B33008(uint64_t a1)
{
  return sub_1D7AE3DFC(a1, type metadata accessor for CalendarLayoutInvalidationContext);
}

_QWORD *sub_1D7B33014(_QWORD *a1)
{
  return sub_1D7ABA3D0(0, a1[2], 0, a1);
}

uint64_t sub_1D7B33028(unint64_t a1)
{
  return sub_1D7ABABB0(0, *(_QWORD *)(a1 + 16), 0, a1);
}

id sub_1D7B3303C(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6, double a7)
{
  char *v7;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  double *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t ObjCClassFromMetadata;
  void *v29;
  uint64_t v31;
  uint64_t v32;
  objc_super v33;

  v15 = &v7[OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_calendar];
  v16 = sub_1D7B49300();
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v15, a1, v16);
  *(_QWORD *)&v7[OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_overlays] = a2;
  v18 = v7;
  swift_bridgeObjectRetain();
  *(_QWORD *)&v18[OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_numberOfDaysPerWeek] = sub_1D7B49288();
  *(double *)&v18[OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_itemHeight] = a3;
  v19 = (double *)&v18[OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_minimumSectionInsets];
  *v19 = a4;
  v19[1] = a5;
  v19[2] = a6;
  v19[3] = a7;

  v33.receiver = v18;
  v33.super_class = (Class)type metadata accessor for CalendarViewLayout();
  v20 = objc_msgSendSuper2(&v33, sel_init);
  objc_msgSend(v20, sel_setMinimumLineSpacing_, 0.0);
  objc_msgSend(v20, sel_setMinimumInteritemSpacing_, 0.0);
  v21 = *(_QWORD *)(a2 + 16);
  if (v21)
  {
    v31 = v17;
    v32 = a1;
    v22 = *(_QWORD *)(type metadata accessor for OverlayConfiguration() - 8);
    v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    v24 = *(_QWORD *)(v22 + 72);
    swift_bridgeObjectRetain();
    v25 = (uint64_t *)(v23 + a2 + 48);
    do
    {
      v26 = *(v25 - 1);
      v27 = *v25;
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v27);
      v29 = (void *)sub_1D7B4A38C();
      swift_bridgeObjectRelease();
      objc_msgSend(v20, sel_registerClass_forDecorationViewOfKind_, ObjCClassFromMetadata, v29);

      v25 = (uint64_t *)((char *)v25 + v24);
      --v21;
    }
    while (v21);

    swift_bridgeObjectRelease();
    v17 = v31;
    a1 = v32;
  }
  else
  {

  }
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(a1, v16);
  return v20;
}

uint64_t type metadata accessor for CalendarLayoutInvalidationContext()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for CalendarViewLayout()
{
  uint64_t result;

  result = qword_1F01503D0;
  if (!qword_1F01503D0)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1D7B33298()
{
  unint64_t result;

  result = qword_1F01503A0;
  if (!qword_1F01503A0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1F01503A0);
  }
  return result;
}

uint64_t sub_1D7B332D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for OverlayConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D7B33318(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for OverlayConfiguration();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

double sub_1D7B33354@<D0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  double *v3;
  double result;

  v3 = (double *)(*a1 + OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_itemHeight);
  swift_beginAccess();
  result = *v3;
  *a2 = *(_QWORD *)v3;
  return result;
}

uint64_t sub_1D7B333A4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_itemHeight);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

uint64_t sub_1D7B333F8()
{
  return type metadata accessor for CalendarViewLayout();
}

uint64_t sub_1D7B33400()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D7B49300();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for CalendarViewLayout()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CalendarViewLayout.itemHeight.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of CalendarViewLayout.itemHeight.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of CalendarViewLayout.itemHeight.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of CalendarViewLayout.__allocating_init(calendar:overlays:itemHeight:minimumSectionInsets:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of CalendarViewLayout.estimatedNumberOfVisibleItems.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of CalendarViewLayout.computeSectionHorizontalInset(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

unint64_t sub_1D7B33534()
{
  uint64_t v0;
  unint64_t v1;

  swift_getKeyPath();
  sub_1D7B3478C();
  sub_1D7B4948C();
  swift_release();
  v1 = *(_QWORD *)(v0 + 32);
  sub_1D7AC6DFC(v1);
  return v1;
}

unint64_t sub_1D7B335AC@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a1;
  swift_getKeyPath();
  sub_1D7B3478C();
  sub_1D7B4948C();
  swift_release();
  v4 = *(_QWORD *)(v3 + 32);
  *a2 = v4;
  return sub_1D7AC6DFC(v4);
}

uint64_t sub_1D7B33624(unint64_t *a1)
{
  unint64_t v1;

  v1 = *a1;
  swift_getKeyPath();
  sub_1D7AC6DFC(v1);
  sub_1D7B3478C();
  sub_1D7B49480();
  sub_1D7AC1524(v1);
  return swift_release();
}

uint64_t sub_1D7B336C0(double a1)
{
  _QWORD *v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 144) = v1;
  *(double *)(v2 + 136) = a1;
  *(_QWORD *)(v2 + 152) = *v1;
  return swift_task_switch();
}

uint64_t sub_1D7B336E4()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  double v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = v0 + 80;
  v2 = objc_msgSend(*(id *)(*(_QWORD *)(v0 + 144) + 24), sel_brand);
  *(_QWORD *)(v0 + 160) = v2;
  if (v2)
  {
    v3 = v2;
    if (qword_1F014CF20 != -1)
      swift_once();
    v4 = sub_1D7B4969C();
    *(_QWORD *)(v0 + 168) = __swift_project_value_buffer(v4, (uint64_t)qword_1F0154500);
    v5 = v3;
    v6 = sub_1D7B49684();
    v7 = sub_1D7B4A5FC();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = swift_slowAlloc();
      v27 = swift_slowAlloc();
      v28 = v27;
      *(_DWORD *)v8 = 136446466;
      v9 = sub_1D7B4AA94();
      *(_QWORD *)(v0 + 80) = sub_1D7AA4DE4(v9, v10, &v28);
      sub_1D7B4A704();
      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 12) = 2080;
      v11 = objc_msgSend(v5, sel_externalID);
      v12 = sub_1D7B4A3BC();
      v13 = v5;
      v15 = v14;

      v1 = v0 + 80;
      *(_QWORD *)(v0 + 80) = sub_1D7AA4DE4(v12, v15, &v28);
      sub_1D7B4A704();
      v5 = v13;
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D7813000, v6, v7, "%{public}s starting to load logo for brand %s", (uint8_t *)v8, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D829FFF4](v27, -1, -1);
      MEMORY[0x1D829FFF4](v8, -1, -1);
    }
    else
    {

    }
    v24 = ceil(*(double *)(v0 + 136));
    if ((~*(_QWORD *)&v24 & 0x7FF0000000000000) != 0)
    {
      if (v24 > -9.22337204e18)
      {
        if (v24 < 9.22337204e18)
        {
          v25 = *(void **)(*(_QWORD *)(v0 + 144) + 16);
          v26 = sub_1D7B4A56C();
          *(_QWORD *)(v0 + 176) = v26;
          *(_QWORD *)(v0 + 56) = v0 + 120;
          *(_QWORD *)(v0 + 16) = v0;
          *(_QWORD *)(v0 + 24) = sub_1D7B33B54;
          *(_QWORD *)(v0 + 112) = swift_continuation_init();
          *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
          *(_QWORD *)(v0 + 88) = 0x40000000;
          *(_QWORD *)(v0 + 96) = sub_1D7B3453C;
          *(_QWORD *)(v0 + 104) = &block_descriptor_14;
          objc_msgSend(v25, sel_fetchLogoForBrand_scale_completion_, v5, v26, v1);
          return swift_continuation_await();
        }
        goto LABEL_17;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (qword_1F014CF20 != -1)
LABEL_18:
    swift_once();
  v16 = sub_1D7B4969C();
  __swift_project_value_buffer(v16, (uint64_t)qword_1F0154500);
  v17 = sub_1D7B49684();
  v18 = sub_1D7B4A620();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc();
    v20 = swift_slowAlloc();
    v28 = v20;
    *(_DWORD *)v19 = 136446210;
    v21 = sub_1D7B4AA94();
    *(_QWORD *)(v0 + 80) = sub_1D7AA4DE4(v21, v22, &v28);
    sub_1D7B4A704();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D7813000, v17, v18, "%{public}s cannot load a brand logo for an account without a brand, aborting", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D829FFF4](v20, -1, -1);
    MEMORY[0x1D829FFF4](v19, -1, -1);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D7B33B54()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 184) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1D7B33BB4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37[2];

  v1 = *(void **)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 128);
  *(_QWORD *)(v0 + 192) = v2;
  *(_QWORD *)(v0 + 200) = v3;

  v4 = objc_allocWithZone(MEMORY[0x1E0DC3870]);
  sub_1D7B347E8(v2, v3);
  v5 = (void *)sub_1D7B490B4();
  v6 = objc_msgSend(v4, sel_initWithData_, v5);
  *(_QWORD *)(v0 + 208) = v6;
  sub_1D7AF1AEC(v2, v3);

  if (v6)
  {
    v7 = *(id *)(v0 + 160);
    v8 = sub_1D7B49684();
    v9 = sub_1D7B4A5FC();
    v10 = os_log_type_enabled(v8, v9);
    v11 = *(void **)(v0 + 160);
    if (v10)
    {
      v12 = swift_slowAlloc();
      v35 = swift_slowAlloc();
      v37[0] = v35;
      *(_DWORD *)v12 = 136446466;
      v13 = sub_1D7B4AA94();
      *(_QWORD *)(v0 + 80) = sub_1D7AA4DE4(v13, v14, v37);
      sub_1D7B4A704();
      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 12) = 2080;
      v15 = objc_msgSend(v11, sel_externalID);
      v16 = sub_1D7B4A3BC();
      v18 = v17;

      *(_QWORD *)(v0 + 80) = sub_1D7AA4DE4(v16, v18, v37);
      sub_1D7B4A704();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D7813000, v8, v9, "%{public}s received logo data for brand %s", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D829FFF4](v35, -1, -1);
      MEMORY[0x1D829FFF4](v12, -1, -1);
    }
    else
    {

    }
    v32 = v6;
    *(_QWORD *)(v0 + 216) = sub_1D7B49FF0();
    sub_1D7B4A50C();
    *(_QWORD *)(v0 + 224) = sub_1D7B4A500();
    sub_1D7B4A4F4();
  }
  else
  {
    v19 = (void *)objc_opt_self();
    v20 = (void *)sub_1D7B4A38C();
    v21 = objc_msgSend(v19, sel_hk_error_description_, 3, v20);

    swift_willThrow();
    sub_1D7AF1AEC(v2, v3);
    *(_QWORD *)(v0 + 232) = v21;
    v22 = v21;
    v23 = v21;
    v24 = sub_1D7B49684();
    v25 = sub_1D7B4A608();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = swift_slowAlloc();
      v27 = (_QWORD *)swift_slowAlloc();
      v36 = swift_slowAlloc();
      v37[0] = v36;
      *(_DWORD *)v26 = 136446466;
      v28 = sub_1D7B4AA94();
      *(_QWORD *)(v0 + 80) = sub_1D7AA4DE4(v28, v29, v37);
      sub_1D7B4A704();
      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2112;
      v30 = v21;
      v31 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 80) = v31;
      sub_1D7B4A704();
      *v27 = v31;

      _os_log_impl(&dword_1D7813000, v24, v25, "%{public}s failed to load image: %@", (uint8_t *)v26, 0x16u);
      sub_1D7ABBB38();
      swift_arrayDestroy();
      MEMORY[0x1D829FFF4](v27, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1D829FFF4](v36, -1, -1);
      MEMORY[0x1D829FFF4](v26, -1, -1);
    }
    else
    {

    }
    sub_1D7B4A50C();
    v33 = v21;
    *(_QWORD *)(v0 + 240) = sub_1D7B4A500();
    sub_1D7B4A4F4();
  }
  return swift_task_switch();
}

uint64_t sub_1D7B3409C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[27];
  v2 = v0[18];
  swift_release();
  swift_getKeyPath();
  v3 = swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  v0[10] = v2;
  sub_1D7B3478C();
  swift_retain();
  sub_1D7B49480();
  swift_release_n();
  swift_release();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D7B34180()
{
  uint64_t v0;
  unint64_t v1;
  void *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 200);
  v2 = *(void **)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 192);

  sub_1D7AF1AEC(v3, v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D7B341D0()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v1 = v0[29];
  v2 = v0[18];
  swift_release();
  swift_getKeyPath();
  v3 = swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1 | 0x4000000000000000;
  v0[10] = v2;
  v4 = (id)v1;
  sub_1D7B3478C();
  sub_1D7B49480();

  swift_release();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D7B342B8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 232);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D7B342F4()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  uint64_t v15;
  uint64_t v16;

  v1 = (void *)v0[22];
  swift_willThrow();

  v2 = (void *)v0[23];
  v0[29] = v2;
  v3 = v2;
  v4 = v2;
  v5 = sub_1D7B49684();
  v6 = sub_1D7B4A608();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    v15 = swift_slowAlloc();
    v16 = v15;
    *(_DWORD *)v7 = 136446466;
    v9 = sub_1D7B4AA94();
    v0[10] = sub_1D7AA4DE4(v9, v10, &v16);
    sub_1D7B4A704();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2112;
    v11 = v2;
    v12 = _swift_stdlib_bridgeErrorToNSError();
    v0[10] = v12;
    sub_1D7B4A704();
    *v8 = v12;

    _os_log_impl(&dword_1D7813000, v5, v6, "%{public}s failed to load image: %@", (uint8_t *)v7, 0x16u);
    sub_1D7ABBB38();
    swift_arrayDestroy();
    MEMORY[0x1D829FFF4](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1D829FFF4](v15, -1, -1);
    MEMORY[0x1D829FFF4](v7, -1, -1);
  }
  else
  {

  }
  sub_1D7B4A50C();
  v13 = v2;
  v0[30] = sub_1D7B4A500();
  sub_1D7B4A4F4();
  return swift_task_switch();
}

uint64_t sub_1D7B3453C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  _QWORD *v5;
  id v6;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    sub_1D7AAEAB4();
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    v8 = a2;
    v9 = sub_1D7B490C0();
    v11 = v10;

    v12 = *(uint64_t **)(*(_QWORD *)(v3 + 64) + 40);
    *v12 = v9;
    v12[1] = v11;
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_1D7B345D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1D7AC1524(*(_QWORD *)(v0 + 32));
  v1 = v0 + OBJC_IVAR____TtC8HealthUI25ClinicalAccountLogoLoader___observationRegistrar;
  v2 = sub_1D7B494A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1D7B34640()
{
  return type metadata accessor for ClinicalAccountLogoLoader();
}

uint64_t type metadata accessor for ClinicalAccountLogoLoader()
{
  uint64_t result;

  result = qword_1F0150438;
  if (!qword_1F0150438)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D7B34684()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D7B494A4();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

unint64_t sub_1D7B3470C()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *v0;
  swift_getKeyPath();
  sub_1D7B3478C();
  sub_1D7B4948C();
  swift_release();
  v2 = *(_QWORD *)(v1 + 32);
  sub_1D7AC6DFC(v2);
  return v2;
}

unint64_t sub_1D7B3478C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F01504D8;
  if (!qword_1F01504D8)
  {
    v1 = type metadata accessor for ClinicalAccountLogoLoader();
    result = MEMORY[0x1D829FF28](&unk_1D7B86B88, v1);
    atomic_store(result, &qword_1F01504D8);
  }
  return result;
}

void sub_1D7B347D4()
{
  sub_1D7B3482C();
}

uint64_t sub_1D7B347E8(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

void sub_1D7B3482C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v2 + 32);
  *(_QWORD *)(v2 + 32) = v1;
  sub_1D7AC6DFC(v1);
  sub_1D7AC1524(v3);
}

uint64_t sub_1D7B34864()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_1D7B49618();
  v1 = *(_QWORD *)(v0 + 16);
  if (v1)
  {
    v2 = *(_QWORD *)(sub_1D7B495C4() - 8);
    v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    v4 = *(_QWORD *)(v2 + 72);
    while ((sub_1D7B495AC() & 1) == 0)
    {
      v3 += v4;
      if (!--v1)
        goto LABEL_5;
    }
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t sub_1D7B348E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  void (*v8)(char *, unint64_t, uint64_t);
  char v9;
  char v10;
  uint64_t v12;

  v0 = sub_1D7B495C4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1D7B49618();
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v6 = v4 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
    v7 = *(_QWORD *)(v1 + 72);
    v8 = *(void (**)(char *, unint64_t, uint64_t))(v1 + 16);
    while (1)
    {
      v8(v3, v6, v0);
      sub_1D7B4954C();
      v10 = v9;
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
      if ((v10 & 1) == 0)
        break;
      v6 += v7;
      if (!--v5)
        goto LABEL_5;
    }
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t sub_1D7B349E8(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  __int128 v11[2];
  uint64_t v12;

  if (a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v3 = MEMORY[0x1E0DEE9D8];
    if (!v2)
      return v3;
    v12 = MEMORY[0x1E0DEE9D8];
    result = sub_1D7AA6084(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v5 = 0;
    v3 = v12;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x1D829E758](v5, a1);
      else
        v6 = *(id *)(a1 + 8 * v5 + 32);
      v7 = v6;
      v8 = (uint64_t)v6 + OBJC_IVAR____TtC8HealthUI17BalanceChartPoint_collection;
      swift_beginAccess();
      sub_1D7AC0938(v8, (uint64_t)v11);

      v12 = v3;
      v10 = *(_QWORD *)(v3 + 16);
      v9 = *(_QWORD *)(v3 + 24);
      if (v10 >= v9 >> 1)
      {
        sub_1D7AA6084(v9 > 1, v10 + 1, 1);
        v3 = v12;
      }
      ++v5;
      *(_QWORD *)(v3 + 16) = v10 + 1;
      sub_1D7AE9B70(v11, v3 + 40 * v10 + 32);
      if (v2 == v5)
        return v3;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v2 = sub_1D7B4A8A8();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

id OverlayRoomPillValueProviderBalance.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id OverlayRoomPillValueProviderBalance.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for OverlayRoomPillValueProviderBalance();
  return objc_msgSendSuper2(&v2, sel_init);
}

id OverlayRoomPillValueProviderBalance.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for OverlayRoomPillValueProviderBalance();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1D7B34CD0(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  void *v27;
  uint64_t v28;
  unint64_t v29;

  v2 = sub_1D7B4921C();
  MEMORY[0x1E0C80A78](v2);
  v3 = sub_1D7B4A380();
  MEMORY[0x1E0C80A78](v3);
  v4 = sub_1D7B4A368();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1D7AE2490(a1);
  if (!v5)
  {
    v17 = (void *)sub_1D7B4A38C();
    v18 = HKUILocalizedString(v17);

    if (v18)
    {
      sub_1D7B4A3BC();

      v19 = objc_allocWithZone((Class)HKOverlayPillValue);
      v20 = (void *)sub_1D7B4A38C();
      swift_bridgeObjectRelease();
      v21 = (void *)sub_1D7B4A38C();
      objc_msgSend(v19, sel_initWithValueString_unitString_, v20, v21);

      return;
    }
    __break(1u);
    goto LABEL_18;
  }
  v28 = MEMORY[0x1E0DEE9E8];
  v6 = sub_1D7AC9354(v5, &v28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = sub_1D7B349E8(v6);
  swift_bridgeObjectRelease();
  v8 = sub_1D7B0BF10(v7);
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    v10 = 0;
    v11 = 0;
    do
    {
      v12 = *(_QWORD *)(v8 + 8 * v10 + 32);
      v13 = __OFADD__(v11, v12);
      v11 += v12;
      if (v13)
      {
        __break(1u);
        goto LABEL_16;
      }
      ++v10;
    }
    while (v9 != v10);
    swift_bridgeObjectRelease();
    if (v11 <= 0)
      goto LABEL_11;
    sub_1D7ADC2F0();
    v14 = swift_allocObject();
    v15 = MEMORY[0x1E0DEB418];
    *(_OWORD *)(v14 + 16) = xmmword_1D7B84630;
    v16 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v14 + 56) = v15;
    *(_QWORD *)(v14 + 64) = v16;
    *(_QWORD *)(v14 + 32) = v11;
    sub_1D7B4A398();
    swift_bridgeObjectRelease();
    sub_1D7B4A35C();
    sub_1D7B4A350();
    v28 = v11;
    sub_1D7B4A338();
    sub_1D7B4A350();
    sub_1D7B4A374();
    v28 = 0;
    v29 = 0xE000000000000000;
    goto LABEL_13;
  }
  swift_bridgeObjectRelease();
LABEL_11:
  v22 = (void *)sub_1D7B4A38C();
  v23 = HKUILocalizedString(v22);

  if (!v23)
  {
LABEL_18:
    __break(1u);
    return;
  }
  sub_1D7B4A3BC();

  sub_1D7B4A32C();
  v28 = 0;
  v29 = 0xE000000000000000;
LABEL_13:
  sub_1D7B4A7DC();
  swift_bridgeObjectRelease();
  if (qword_1F014CF90 != -1)
LABEL_16:
    swift_once();
  v24 = (id)qword_1F0154598;
  sub_1D7B49210();
  sub_1D7B4A3D4();
  v25 = objc_allocWithZone((Class)HKOverlayPillValue);
  v26 = (void *)sub_1D7B4A38C();
  swift_bridgeObjectRelease();
  v27 = (void *)sub_1D7B4A38C();
  swift_bridgeObjectRelease();
  objc_msgSend(v25, sel_initWithValueString_unitString_, v26, v27);

}

uint64_t type metadata accessor for OverlayRoomPillValueProviderBalance()
{
  return objc_opt_self();
}

uint64_t method lookup function for OverlayRoomPillValueProviderBalance()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of OverlayRoomPillValueProviderBalance.value(from:unit:displayType:timeScope:unitPreferenceController:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x50))();
}

uint64_t sub_1D7B35188(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

id DefaultPairedDeviceFeatureAttributesDataSource.__allocating_init(featureAvailabilityStore:logger:)(void *a1, char *a2)
{
  objc_class *v2;
  id v5;
  id v6;

  v5 = objc_allocWithZone(v2);
  v6 = sub_1D7B35E9C(a1, a2);

  return v6;
}

void PairedDeviceFeatureAttributesDataSource.localDeviceName.getter()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (v0)
  {
    v1 = v0;
    v2 = objc_msgSend(v0, sel_currentDeviceName);

    if (v2)
    {
      sub_1D7B4A3BC();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

BOOL PairedDeviceFeatureAttributesDataSource.hasActivePairedDevice.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(void))(a2 + 16))();
  v3 = v2;
  if (v2)
    swift_bridgeObjectRelease();
  return v3 != 0;
}

id DefaultPairedDeviceFeatureAttributesDataSource.init(featureAvailabilityStore:logger:)(void *a1, char *a2)
{
  id v3;

  v3 = sub_1D7B35E9C(a1, a2);

  return v3;
}

uint64_t sub_1D7B352EC()
{
  uint64_t (*v0)(void);

  v0 = MEMORY[0x1E0C95F28];
  sub_1D7B318A0(0, (unint64_t *)&qword_1F014E960, (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95F28]);
  sub_1D7B31900(&qword_1F0150530, (unint64_t *)&qword_1F014E960, (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))v0, MEMORY[0x1E0C95F48]);
  return sub_1D7B49834();
}

uint64_t sub_1D7B35374()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;

  v1 = *(_QWORD *)(*(_QWORD *)(v0
                             + OBJC_IVAR____TtC8HealthUI46DefaultPairedDeviceFeatureAttributesDataSource_activePairedDeviceProvider)
                 + OBJC_IVAR____TtCC8HealthUI46DefaultPairedDeviceFeatureAttributesDataSource26ActivePairedDeviceProvider_provider
                 + 8);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 16))(ObjectType, v1);
}

id sub_1D7B353BC()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = *(void **)(v0 + OBJC_IVAR____TtC8HealthUI46DefaultPairedDeviceFeatureAttributesDataSource_featureAvailabilityStore);
  v6[0] = 0;
  v2 = objc_msgSend(v1, sel_pairedFeatureAttributesWithError_, v6);
  if (v2)
  {
    v3 = v6[0];
  }
  else
  {
    v4 = v6[0];
    sub_1D7B49030();

    swift_willThrow();
  }
  return v2;
}

uint64_t sub_1D7B35478()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  void *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(void);

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = *(void **)(v0 + OBJC_IVAR____TtC8HealthUI46DefaultPairedDeviceFeatureAttributesDataSource_featureAvailabilityStore);
  sub_1D7AB7474();
  v4 = (void *)sub_1D7B4A65C();
  objc_msgSend(v3, sel_registerObserver_queue_, v0, v4);

  v5 = objc_msgSend(v3, sel_featureIdentifier);
  v6 = (id)HKFeaturePropertiesChangeNotificationForFeatureIdentifier();

  sub_1D7B4A3BC();
  sub_1D7B4A65C();
  sub_1D7B49654();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BE60];
  swift_allocObject();
  sub_1D7B49648();
  v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = ObjectType;
  v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = ObjectType;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_1D7B36514;
  *(_QWORD *)(v12 + 24) = v11;
  sub_1D7AA76D4(&qword_1F01505F8, v7, MEMORY[0x1E0D2BE58]);
  sub_1D7B49840();
  swift_release();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1D7B4975C();
  swift_endAccess();
  swift_release();
  v13 = *(_QWORD *)(*(_QWORD *)(v1
                              + OBJC_IVAR____TtC8HealthUI46DefaultPairedDeviceFeatureAttributesDataSource_activePairedDeviceProvider)
                  + OBJC_IVAR____TtCC8HealthUI46DefaultPairedDeviceFeatureAttributesDataSource26ActivePairedDeviceProvider_provider
                  + 8);
  v14 = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v13 + 24))(v14, v13);
  v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v15;
  *(_QWORD *)(v16 + 24) = ObjectType;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = sub_1D7B3657C;
  *(_QWORD *)(v17 + 24) = v16;
  v18 = MEMORY[0x1E0C95D78];
  sub_1D7B318A0(0, (unint64_t *)&unk_1F0150600, (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1D7B31900(&qword_1F0150388, (unint64_t *)&unk_1F0150600, (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))v18, MEMORY[0x1E0C95D90]);
  sub_1D7B49858();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1D7B4975C();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1D7B357F4(char *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t result;
  void *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = sub_1D7B4969C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  swift_beginAccess();
  result = MEMORY[0x1D82A00A8](a2 + 16);
  if (result)
  {
    v10 = (void *)result;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, result + OBJC_IVAR____TtC8HealthUI46DefaultPairedDeviceFeatureAttributesDataSource_logger, v4);

    v11 = sub_1D7B49684();
    v12 = sub_1D7B4A608();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc();
      v14 = swift_slowAlloc();
      v21 = v14;
      *(_DWORD *)v13 = 136446466;
      v15 = sub_1D7B4AA94();
      v20 = sub_1D7AA4DE4(v15, v16, &v21);
      sub_1D7B4A704();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2080;
      LOBYTE(v20) = v8;
      sub_1D7B3659C();
      v17 = sub_1D7B4A3E0();
      v20 = sub_1D7AA4DE4(v17, v18, &v21);
      sub_1D7B4A704();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D7813000, v11, v12, "[%{public}s] Error observing feature properties change notification: %s", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D829FFF4](v14, -1, -1);
      MEMORY[0x1D829FFF4](v13, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

uint64_t sub_1D7B35A18(uint64_t a1, uint64_t a2, const char *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t result;
  void *v20;
  uint64_t (*v21)(void);
  _QWORD v22[2];
  const char *v23;
  uint64_t v24;
  uint64_t v25[3];

  v5 = sub_1D7B4969C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1 + 16;
  swift_beginAccess();
  v10 = MEMORY[0x1D82A00A8](v9);
  if (v10)
  {
    v11 = (void *)v10;
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v10 + OBJC_IVAR____TtC8HealthUI46DefaultPairedDeviceFeatureAttributesDataSource_logger, v5);

    v12 = sub_1D7B49684();
    v13 = sub_1D7B4A620();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = swift_slowAlloc();
      v23 = a3;
      v15 = (uint8_t *)v14;
      v16 = swift_slowAlloc();
      v25[0] = v16;
      *(_DWORD *)v15 = 136446210;
      v22[1] = v15 + 4;
      v17 = sub_1D7B4AA94();
      v24 = sub_1D7AA4DE4(v17, v18, v25);
      sub_1D7B4A704();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D7813000, v12, v13, v23, v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D829FFF4](v16, -1, -1);
      MEMORY[0x1D829FFF4](v15, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  swift_beginAccess();
  result = MEMORY[0x1D82A00A8](v9);
  if (result)
  {
    v20 = (void *)result;
    swift_retain();

    v21 = MEMORY[0x1E0C95F28];
    sub_1D7B318A0(0, (unint64_t *)&qword_1F014E960, (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95F28]);
    sub_1D7B31900(&qword_1F0150610, (unint64_t *)&qword_1F014E960, (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))v21, MEMORY[0x1E0C95F40]);
    sub_1D7B497EC();
    return swift_release();
  }
  return result;
}

id DefaultPairedDeviceFeatureAttributesDataSource.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void DefaultPairedDeviceFeatureAttributesDataSource.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id DefaultPairedDeviceFeatureAttributesDataSource.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DefaultPairedDeviceFeatureAttributesDataSource();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1D7B35DFC()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (v0)
  {
    v1 = v0;
    v2 = objc_msgSend(v0, sel_currentDeviceName);

    if (v2)
    {
      sub_1D7B4A3BC();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_1D7B35E88()
{
  return sub_1D7B353BC();
}

id sub_1D7B35E9C(void *a1, char *a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (*v10)(void);
  uint64_t v11;
  void (*v12)(void);
  id v13;
  void *v14;
  char *v15;
  id v16;
  char *v17;
  id result;
  void *v19;
  objc_class *v20;
  char *v21;
  char *v22;
  id v23;
  id v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  char *v27;
  id v28;
  char *v29;
  objc_class *v30;
  id v31;
  Class active;
  uint64_t v33;
  char *v34;
  char *v35;
  objc_super v36;
  objc_super v37;
  objc_super v38;

  v5 = sub_1D7B4969C();
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&active - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  *(_QWORD *)&v2[OBJC_IVAR____TtC8HealthUI46DefaultPairedDeviceFeatureAttributesDataSource_subscribers] = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)&v2[OBJC_IVAR____TtC8HealthUI46DefaultPairedDeviceFeatureAttributesDataSource_featureAvailabilityStore] = a1;
  v33 = v9;
  v34 = a2;
  v10 = *(void (**)(void))(v9 + 16);
  v35 = (char *)&active - v11;
  v12 = v10;
  v10();
  active = (Class)_s26ActivePairedDeviceProviderCMa();
  v13 = objc_allocWithZone(active);
  v14 = (void *)objc_opt_self();
  v15 = v2;
  v16 = a1;
  v17 = (char *)v13;
  result = objc_msgSend(v14, sel_sharedInstance);
  if (result)
  {
    v19 = result;
    ((void (*)(char *, char *, uint64_t))v12)(v8, v35, v5);
    v20 = (objc_class *)_s38NanoRegistryActivePairedDeviceProviderCMa();
    v21 = (char *)objc_allocWithZone(v20);
    *(_QWORD *)&v21[OBJC_IVAR____TtCC8HealthUI46DefaultPairedDeviceFeatureAttributesDataSourceP33_3C865D9EABCD2E889047E2D14D69B8F938NanoRegistryActivePairedDeviceProvider_subscribers] = MEMORY[0x1E0DEE9E8];
    *(_QWORD *)&v21[OBJC_IVAR____TtCC8HealthUI46DefaultPairedDeviceFeatureAttributesDataSourceP33_3C865D9EABCD2E889047E2D14D69B8F938NanoRegistryActivePairedDeviceProvider_pairedDeviceRegistry] = v19;
    ((void (*)(char *, char *, uint64_t))v12)(&v21[OBJC_IVAR____TtCC8HealthUI46DefaultPairedDeviceFeatureAttributesDataSourceP33_3C865D9EABCD2E889047E2D14D69B8F938NanoRegistryActivePairedDeviceProvider_logger], v8, v5);
    sub_1D7B318A0(0, (unint64_t *)&qword_1F014E960, (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95F28]);
    swift_allocObject();
    v22 = v21;
    v23 = v19;
    *(_QWORD *)&v22[OBJC_IVAR____TtCC8HealthUI46DefaultPairedDeviceFeatureAttributesDataSourceP33_3C865D9EABCD2E889047E2D14D69B8F938NanoRegistryActivePairedDeviceProvider_updateSignalPublisher] = sub_1D7B49798();

    v38.receiver = v22;
    v38.super_class = v20;
    v24 = objc_msgSendSuper2(&v38, sel_init);
    sub_1D7AE3618();

    v25 = *(void (**)(char *, uint64_t))(v33 + 8);
    v25(v8, v5);

    v26 = sub_1D7AA76D4((unint64_t *)&unk_1F0150620, (uint64_t (*)(uint64_t))_s38NanoRegistryActivePairedDeviceProviderCMa, (uint64_t)&unk_1D7B85690);
    v27 = &v17[OBJC_IVAR____TtCC8HealthUI46DefaultPairedDeviceFeatureAttributesDataSource26ActivePairedDeviceProvider_provider];
    *(_QWORD *)v27 = v24;
    *((_QWORD *)v27 + 1) = v26;

    v37.receiver = v17;
    v37.super_class = active;
    v28 = objc_msgSendSuper2(&v37, (SEL)&selRef_initWithKind_heightValue_);
    v25(v35, v5);
    *(_QWORD *)&v15[OBJC_IVAR____TtC8HealthUI46DefaultPairedDeviceFeatureAttributesDataSource_activePairedDeviceProvider] = v28;
    v29 = v34;
    ((void (*)(char *, char *, uint64_t))v12)(&v15[OBJC_IVAR____TtC8HealthUI46DefaultPairedDeviceFeatureAttributesDataSource_logger], v34, v5);
    swift_allocObject();
    *(_QWORD *)&v15[OBJC_IVAR____TtC8HealthUI46DefaultPairedDeviceFeatureAttributesDataSource_updateSignalPublisher] = sub_1D7B49798();

    v30 = (objc_class *)type metadata accessor for DefaultPairedDeviceFeatureAttributesDataSource();
    v36.receiver = v15;
    v36.super_class = v30;
    v31 = objc_msgSendSuper2(&v36, (SEL)&selRef_initWithKind_heightValue_);
    sub_1D7B35478();

    v25(v29, v5);
    return v31;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D7B3619C()
{
  NSObject *v0;
  os_log_type_t v1;
  uint8_t *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t (*v6)(void);
  uint64_t v8;

  swift_getObjectType();
  v0 = sub_1D7B49684();
  v1 = sub_1D7B4A620();
  if (os_log_type_enabled(v0, v1))
  {
    v2 = (uint8_t *)swift_slowAlloc();
    v3 = swift_slowAlloc();
    v8 = v3;
    *(_DWORD *)v2 = 136446210;
    v4 = sub_1D7B4AA94();
    sub_1D7AA4DE4(v4, v5, &v8);
    sub_1D7B4A704();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D7813000, v0, v1, "[%{public}s] Observed change to onboarding completion", v2, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D829FFF4](v3, -1, -1);
    MEMORY[0x1D829FFF4](v2, -1, -1);
  }

  v6 = MEMORY[0x1E0C95F28];
  sub_1D7B318A0(0, (unint64_t *)&qword_1F014E960, (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95F28]);
  sub_1D7B31900(&qword_1F0150610, (unint64_t *)&qword_1F014E960, (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))v6, MEMORY[0x1E0C95F40]);
  return sub_1D7B497EC();
}

uint64_t type metadata accessor for DefaultPairedDeviceFeatureAttributesDataSource()
{
  uint64_t result;

  result = qword_1F01505E0;
  if (!qword_1F01505E0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t dispatch thunk of PairedDeviceFeatureAttributesDataSource.localDeviceName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PairedDeviceFeatureAttributesDataSource.remoteDeviceName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PairedDeviceFeatureAttributesDataSource.hasActivePairedDevice.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of PairedDeviceFeatureAttributesDataSource.pairedFeatureAttributes()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of PairedDeviceFeatureAttributesDataSource.objectDidChange.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_1D7B363B4()
{
  return type metadata accessor for DefaultPairedDeviceFeatureAttributesDataSource();
}

uint64_t sub_1D7B363BC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D7B4969C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for DefaultPairedDeviceFeatureAttributesDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DefaultPairedDeviceFeatureAttributesDataSource.__allocating_init(featureAvailabilityStore:logger:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of DefaultPairedDeviceFeatureAttributesDataSource.objectDidChange.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of DefaultPairedDeviceFeatureAttributesDataSource.remoteDeviceName.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of DefaultPairedDeviceFeatureAttributesDataSource.pairedFeatureAttributes()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of DefaultPairedDeviceFeatureAttributesDataSource.featureAvailabilityProvidingDidUpdateOnboardingCompletion(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t sub_1D7B364E8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D7B3650C(char *a1)
{
  uint64_t v1;

  return sub_1D7B357F4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1D7B36514()
{
  uint64_t v0;

  return sub_1D7B35A18(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), "[%{public}s] Observed change to feature properties");
}

uint64_t sub_1D7B36534()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D7B36558()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D7B3657C()
{
  uint64_t v0;

  return sub_1D7B35A18(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), "[%{public}s] Observed change to active paired device");
}

void sub_1D7B3659C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F0150618)
  {
    v0 = sub_1D7B49744();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F0150618);
  }
}

uint64_t FeatureRegulatoryAboutView.init(healthStore:featureIdentifier:featureRegulatoryInfoTransformProvider:reenableActionConfiguration:logger:)@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  void (*v15)(char *, uint64_t, uint64_t);
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;

  v27 = a3;
  v28 = a4;
  v25 = a1;
  v10 = sub_1D7B4969C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6708]), sel_initWithFeatureIdentifier_healthStore_, a2, a1);
  v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6708]), sel_initWithFeatureIdentifier_healthStore_, a2, a1);
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v15(v13, a5, v10);
  v16 = objc_allocWithZone((Class)type metadata accessor for DefaultPairedDeviceFeatureAttributesDataSource());
  v17 = sub_1D7B35E9C(v14, v13);
  v15(v13, a5, v10);
  type metadata accessor for PairedDeviceFeatureAttributesProvider();
  v18 = swift_allocObject();
  v19 = v17;
  v20 = sub_1D7B313FC(v19, (uint64_t)v13, v18);

  v21 = (int *)type metadata accessor for FeatureRegulatoryAboutView();
  v22 = v27;
  sub_1D7AC0938(v27, (uint64_t)&a6[v21[8]]);
  v23 = v28;
  sub_1D7AF272C(v28, (uint64_t)&a6[v21[6]]);
  v15(&a6[v21[7]], a5, v10);

  *(_QWORD *)a6 = v26;
  *((_QWORD *)a6 + 1) = v20;
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a5, v10);
  sub_1D7AF2780(v23);
  return __swift_destroy_boxed_opaque_existential_0(v22);
}

uint64_t FeatureRegulatoryAboutView.init(healthStore:featureAvailabilityStore:featureRegulatoryInfoTransformProvider:pairedDeviceFeatureAttributesProvider:reenableActionConfiguration:logger:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  int *v13;
  char *v14;
  uint64_t v15;
  uint64_t result;

  a7[1] = a4;
  v13 = (int *)type metadata accessor for FeatureRegulatoryAboutView();
  v14 = (char *)a7 + v13[7];
  v15 = sub_1D7B4969C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v14, a6, v15);
  sub_1D7AE9B70(a3, (uint64_t)a7 + v13[8]);
  result = sub_1D7B36D90(a5, (uint64_t)a7 + v13[6]);
  *a7 = a2;
  return result;
}

uint64_t FeatureRegulatoryAboutView.body.getter@<X0>(uint64_t *a1@<X8>)
{
  void **v1;
  void **v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v2 = v1;
  v4 = type metadata accessor for FeatureRegulatoryAboutView();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  v7 = sub_1D7B4969C();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v2;
  v10 = (uint64_t)v2[1];
  (*(void (**)(char *, char *))(v12 + 16))(v9, (char *)v2 + *(int *)(v4 + 28));
  sub_1D7B36DEC((uint64_t)v2, (uint64_t)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v14 = swift_allocObject();
  sub_1D7B36E34((uint64_t)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13);
  objc_allocWithZone((Class)type metadata accessor for FeatureRegulatoryInfoProvider());
  v15 = v11;
  swift_retain();
  sub_1D7B27B48(v15, v10, (uint64_t)v9, (void (*)(_QWORD, uint64_t))sub_1D7B36E78, v14);

  swift_release();
  swift_release();
  *a1 = swift_getKeyPath();
  sub_1D7AA787C(0, &qword_1F014E2F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD9030], MEMORY[0x1E0CD87D0]);
  swift_storeEnumTagMultiPayload();
  v16 = type metadata accessor for FeatureRegulatoryInfoView(0);
  v17 = (uint64_t *)((char *)a1 + *(int *)(v16 + 24));
  v23 = sub_1D7B4A3BC();
  v24 = v18;
  sub_1D7B4A41C();
  v19 = v24;
  *v17 = v23;
  v17[1] = v19;
  v20 = (uint64_t *)((char *)a1 + *(int *)(v16 + 20));
  sub_1D7AA76D4(&qword_1F014E328, (uint64_t (*)(uint64_t))type metadata accessor for FeatureRegulatoryInfoProvider, (uint64_t)&protocol conformance descriptor for FeatureRegulatoryInfoProvider);
  result = sub_1D7B49954();
  *v20 = result;
  v20[1] = v22;
  return result;
}

uint64_t sub_1D7B36AA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v6 = type metadata accessor for FeatureRegulatoryAboutView();
  v7 = (_QWORD *)(a3 + *(int *)(v6 + 32));
  v8 = v7[3];
  v9 = v7[4];
  __swift_project_boxed_opaque_existential_0(v7, v8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8))(a1, a2, a3 + *(int *)(v6 + 24), v8, v9);
}

uint64_t sub_1D7B36B30@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  void **v2;
  void **v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v4 = v2;
  v6 = *(_QWORD *)(a1 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](a1);
  v8 = sub_1D7B4969C();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v4;
  v11 = (uint64_t)v4[1];
  (*(void (**)(char *, char *))(v13 + 16))(v10, (char *)v4 + *(int *)(a1 + 28));
  sub_1D7B36DEC((uint64_t)v4, (uint64_t)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v15 = swift_allocObject();
  sub_1D7B36E34((uint64_t)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14);
  objc_allocWithZone((Class)type metadata accessor for FeatureRegulatoryInfoProvider());
  v16 = v12;
  swift_retain();
  sub_1D7B27B48(v16, v11, (uint64_t)v10, (void (*)(_QWORD, uint64_t))sub_1D7B36E78, v15);

  swift_release();
  swift_release();
  *a2 = swift_getKeyPath();
  sub_1D7AA787C(0, &qword_1F014E2F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD9030], MEMORY[0x1E0CD87D0]);
  swift_storeEnumTagMultiPayload();
  v17 = type metadata accessor for FeatureRegulatoryInfoView(0);
  v18 = (uint64_t *)((char *)a2 + *(int *)(v17 + 24));
  v24 = sub_1D7B4A3BC();
  v25 = v19;
  sub_1D7B4A41C();
  v20 = v25;
  *v18 = v24;
  v18[1] = v20;
  v21 = (uint64_t *)((char *)a2 + *(int *)(v17 + 20));
  sub_1D7AA76D4(&qword_1F014E328, (uint64_t (*)(uint64_t))type metadata accessor for FeatureRegulatoryInfoProvider, (uint64_t)&protocol conformance descriptor for FeatureRegulatoryInfoProvider);
  result = sub_1D7B49954();
  *v21 = result;
  v21[1] = v23;
  return result;
}

uint64_t type metadata accessor for FeatureRegulatoryAboutView()
{
  uint64_t result;

  result = qword_1F0150688;
  if (!qword_1F0150688)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D7B36D90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D7AA787C(0, &qword_1F014E3F8, type metadata accessor for FeatureRegulatoryInfo.ReenableActionConfiguration, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D7B36DEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeatureRegulatoryAboutView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D7B36E34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeatureRegulatoryAboutView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D7B36E84()
{
  return swift_getOpaqueTypeConformance2();
}

char *initializeBufferWithCopyOfBuffer for FeatureRegulatoryAboutView(char *a1, char **a2, int *a3)
{
  int v3;
  char *v4;
  char *v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(_QWORD *, uint64_t, uint64_t);
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v29;
  char *__dst;
  uint64_t v31;
  unsigned int (*v32)(char *, uint64_t, uint64_t);

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v7 = a1;
    *((_QWORD *)a1 + 1) = a2[1];
    v8 = a3[6];
    v9 = &a1[v8];
    v10 = (char **)((char *)a2 + v8);
    v11 = type metadata accessor for FeatureRegulatoryInfo.ReenableActionConfiguration(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48);
    v14 = v4;
    swift_retain();
    if (v13(v10, 1, v11))
    {
      sub_1D7AA787C(0, &qword_1F014E3F8, type metadata accessor for FeatureRegulatoryInfo.ReenableActionConfiguration, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v31 = v12;
      v16 = v10[1];
      *(_QWORD *)v9 = *v10;
      *((_QWORD *)v9 + 1) = v16;
      *((_QWORD *)v9 + 2) = v10[2];
      v17 = v10[5];
      *(_OWORD *)(v9 + 24) = *(_OWORD *)(v10 + 3);
      *((_QWORD *)v9 + 5) = v17;
      v18 = *(int *)(v11 + 28);
      __dst = &v9[v18];
      v19 = (char *)v10 + v18;
      v20 = sub_1D7B490A8();
      v29 = *(_QWORD *)(v20 - 8);
      v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      if (v32(v19, 1, v20))
      {
        sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(__dst, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v29 + 16))(__dst, v19, v20);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(__dst, 0, 1, v20);
      }
      v9[*(int *)(v11 + 32)] = *((_BYTE *)v10 + *(int *)(v11 + 32));
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v9, 0, 1, v11);
    }
    v22 = a3[7];
    v23 = &v7[v22];
    v24 = (uint64_t)a2 + v22;
    v25 = sub_1D7B4969C();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
    v26 = a3[8];
    v27 = *(_OWORD *)((char *)a2 + v26 + 24);
    *(_OWORD *)&v7[v26 + 24] = v27;
    (**(void (***)(void))(v27 - 8))();
  }
  return v7;
}

uint64_t destroy for FeatureRegulatoryAboutView(id *a1, int *a2)
{
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;

  swift_release();
  v4 = (char *)a1 + a2[6];
  v5 = type metadata accessor for FeatureRegulatoryInfo.ReenableActionConfiguration(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    v6 = &v4[*(int *)(v5 + 28)];
    v7 = sub_1D7B490A8();
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
  }
  v9 = (char *)a1 + a2[7];
  v10 = sub_1D7B4969C();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1 + a2[8]);
}

_QWORD *initializeWithCopy for FeatureRegulatoryAboutView(_QWORD *a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(_QWORD *, uint64_t, uint64_t);
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  char *__dst;
  uint64_t v32;

  v7 = *(void **)a2;
  v6 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v6;
  v8 = a3[6];
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = type metadata accessor for FeatureRegulatoryInfo.ReenableActionConfiguration(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48);
  v14 = v7;
  swift_retain();
  if (v13(v10, 1, v11))
  {
    sub_1D7AA787C(0, &qword_1F014E3F8, type metadata accessor for FeatureRegulatoryInfo.ReenableActionConfiguration, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v32 = v12;
    v16 = v10[1];
    *v9 = *v10;
    v9[1] = v16;
    v9[2] = v10[2];
    v17 = v10[5];
    *(_OWORD *)(v9 + 3) = *(_OWORD *)(v10 + 3);
    v9[5] = v17;
    v18 = *(int *)(v11 + 28);
    __dst = (char *)v9 + v18;
    v19 = (char *)v10 + v18;
    v20 = sub_1D7B490A8();
    v29 = *(_QWORD *)(v20 - 8);
    v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v30(v19, 1, v20))
    {
      sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(__dst, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(__dst, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(__dst, 0, 1, v20);
    }
    *((_BYTE *)v9 + *(int *)(v11 + 32)) = *((_BYTE *)v10 + *(int *)(v11 + 32));
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v9, 0, 1, v11);
  }
  v22 = a3[7];
  v23 = (char *)a1 + v22;
  v24 = a2 + v22;
  v25 = sub_1D7B4969C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
  v26 = a3[8];
  v27 = *(_OWORD *)(a2 + v26 + 24);
  *(_OWORD *)((char *)a1 + v26 + 24) = v27;
  (**(void (***)(void))(v27 - 8))();
  return a1;
}

uint64_t assignWithCopy for FeatureRegulatoryAboutView(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(_QWORD *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t, uint64_t);
  int v29;
  uint64_t v30;
  size_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  unsigned int (*v40)(char *, uint64_t, uint64_t);
  char *v41;
  void *v42;
  char *__dst;
  int *v44;
  int *v45;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  v9 = a3[6];
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(a2 + v9);
  v12 = type metadata accessor for FeatureRegulatoryInfo.ReenableActionConfiguration(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (v16)
    {
      sub_1D7AF27CC((uint64_t)v10);
      goto LABEL_7;
    }
    v45 = a3;
    *v10 = *v11;
    v10[1] = v11[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v10[2] = v11[2];
    v10[3] = v11[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v22 = v11[5];
    v10[4] = v11[4];
    v10[5] = v22;
    swift_retain();
    swift_release();
    v23 = *(int *)(v12 + 28);
    v24 = (char *)v10 + v23;
    v25 = (char *)v11 + v23;
    v26 = sub_1D7B490A8();
    v27 = *(_QWORD *)(v26 - 8);
    v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48);
    v42 = v24;
    LODWORD(v24) = v28(v24, 1, v26);
    v29 = v28(v25, 1, v26);
    if ((_DWORD)v24)
    {
      if (!v29)
      {
        (*(void (**)(void *, char *, uint64_t))(v27 + 16))(v42, v25, v26);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v42, 0, 1, v26);
        goto LABEL_18;
      }
      sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v31 = *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64);
      v32 = v42;
    }
    else
    {
      if (!v29)
      {
        (*(void (**)(void *, char *, uint64_t))(v27 + 24))(v42, v25, v26);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v27 + 8))(v42, v26);
      sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v31 = *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64);
      v32 = v42;
    }
    memcpy(v32, v25, v31);
LABEL_18:
    *((_BYTE *)v10 + *(int *)(v12 + 32)) = *((_BYTE *)v11 + *(int *)(v12 + 32));
    a3 = v45;
    goto LABEL_19;
  }
  if (v16)
  {
LABEL_7:
    sub_1D7AA787C(0, &qword_1F014E3F8, type metadata accessor for FeatureRegulatoryInfo.ReenableActionConfiguration, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_19;
  }
  *v10 = *v11;
  v10[1] = v11[1];
  v10[2] = v11[2];
  v10[3] = v11[3];
  v17 = v11[5];
  v10[4] = v11[4];
  v10[5] = v17;
  v18 = *(int *)(v12 + 28);
  __dst = (char *)v10 + v18;
  v44 = a3;
  v41 = (char *)v11 + v18;
  v19 = sub_1D7B490A8();
  v39 = *(_QWORD *)(v19 - 8);
  v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v40(v41, 1, v19))
  {
    sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(__dst, v41, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v39 + 16))(__dst, v41, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(__dst, 0, 1, v19);
  }
  a3 = v44;
  *((_BYTE *)v10 + *(int *)(v12 + 32)) = *((_BYTE *)v11 + *(int *)(v12 + 32));
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_19:
  v34 = a3[7];
  v35 = a1 + v34;
  v36 = a2 + v34;
  v37 = sub_1D7B4969C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 24))(v35, v36, v37);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[8]), (uint64_t *)(a2 + a3[8]));
  return a1;
}

_OWORD *initializeWithTake for FeatureRegulatoryAboutView(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;
  char *__dst;

  *a1 = *a2;
  v6 = a3[6];
  v7 = (_OWORD *)((char *)a1 + v6);
  v8 = (_OWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for FeatureRegulatoryInfo.ReenableActionConfiguration(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_1D7AA787C(0, &qword_1F014E3F8, type metadata accessor for FeatureRegulatoryInfo.ReenableActionConfiguration, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = v8[1];
    *v7 = *v8;
    v7[1] = v12;
    v7[2] = v8[2];
    v13 = *(int *)(v9 + 28);
    __dst = (char *)v7 + v13;
    v14 = (char *)v8 + v13;
    v15 = sub_1D7B490A8();
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(__dst, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(__dst, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
    }
    *((_BYTE *)v7 + *(int *)(v9 + 32)) = *((_BYTE *)v8 + *(int *)(v9 + 32));
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v18 = a3[7];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = sub_1D7B4969C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
  v22 = a3[8];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = *((_OWORD *)v24 + 1);
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *((_OWORD *)v23 + 1) = v25;
  *((_QWORD *)v23 + 4) = *((_QWORD *)v24 + 4);
  return a1;
}

uint64_t assignWithTake for FeatureRegulatoryAboutView(uint64_t a1, _QWORD *a2, int *a3)
{
  void *v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_OWORD *, uint64_t, uint64_t);
  int v13;
  int v14;
  __int128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t, uint64_t);
  int v29;
  uint64_t v30;
  size_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  __int128 v41;
  uint64_t v43;
  char *__dst;
  void *__dsta;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  *(_QWORD *)(a1 + 8) = a2[1];
  swift_release();
  v7 = a3[6];
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for FeatureRegulatoryInfo.ReenableActionConfiguration(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_1D7AF27CC((uint64_t)v8);
      goto LABEL_7;
    }
    v22 = *((_QWORD *)v9 + 1);
    *(_QWORD *)v8 = *(_QWORD *)v9;
    *((_QWORD *)v8 + 1) = v22;
    swift_bridgeObjectRelease();
    v23 = *((_QWORD *)v9 + 3);
    *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
    *((_QWORD *)v8 + 3) = v23;
    swift_bridgeObjectRelease();
    v8[2] = v9[2];
    swift_release();
    v24 = *(int *)(v10 + 28);
    v25 = (char *)v8 + v24;
    v26 = (char *)v9 + v24;
    v27 = sub_1D7B490A8();
    v43 = *(_QWORD *)(v27 - 8);
    v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v43 + 48);
    __dsta = v25;
    LODWORD(v25) = v28(v25, 1, v27);
    v29 = v28(v26, 1, v27);
    if ((_DWORD)v25)
    {
      if (!v29)
      {
        (*(void (**)(void *, char *, uint64_t))(v43 + 32))(__dsta, v26, v27);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v43 + 56))(__dsta, 0, 1, v27);
        goto LABEL_18;
      }
      sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v31 = *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64);
      v32 = __dsta;
    }
    else
    {
      if (!v29)
      {
        (*(void (**)(void *, char *, uint64_t))(v43 + 40))(__dsta, v26, v27);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v43 + 8))(__dsta, v27);
      sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v31 = *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64);
      v32 = __dsta;
    }
    memcpy(v32, v26, v31);
LABEL_18:
    *((_BYTE *)v8 + *(int *)(v10 + 32)) = *((_BYTE *)v9 + *(int *)(v10 + 32));
    goto LABEL_19;
  }
  if (v14)
  {
LABEL_7:
    sub_1D7AA787C(0, &qword_1F014E3F8, type metadata accessor for FeatureRegulatoryInfo.ReenableActionConfiguration, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_19;
  }
  v15 = v9[1];
  *v8 = *v9;
  v8[1] = v15;
  v8[2] = v9[2];
  v16 = *(int *)(v10 + 28);
  __dst = (char *)v8 + v16;
  v17 = (char *)v9 + v16;
  v18 = sub_1D7B490A8();
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(__dst, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(__dst, v17, v18);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
  }
  *((_BYTE *)v8 + *(int *)(v10 + 32)) = *((_BYTE *)v9 + *(int *)(v10 + 32));
  (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_19:
  v34 = a3[7];
  v35 = a1 + v34;
  v36 = (char *)a2 + v34;
  v37 = sub_1D7B4969C();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 40))(v35, v36, v37);
  v38 = a3[8];
  v39 = a1 + v38;
  v40 = (char *)a2 + v38;
  __swift_destroy_boxed_opaque_existential_0(a1 + v38);
  v41 = *((_OWORD *)v40 + 1);
  *(_OWORD *)v39 = *(_OWORD *)v40;
  *(_OWORD *)(v39 + 16) = v41;
  *(_QWORD *)(v39 + 32) = *((_QWORD *)v40 + 4);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeatureRegulatoryAboutView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D7B37D8C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1D7AA787C(0, &qword_1F014E3F8, type metadata accessor for FeatureRegulatoryInfo.ReenableActionConfiguration, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 24);
    }
    else
    {
      v10 = sub_1D7B4969C();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for FeatureRegulatoryAboutView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1D7B37E50(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    sub_1D7AA787C(0, &qword_1F014E3F8, type metadata accessor for FeatureRegulatoryInfo.ReenableActionConfiguration, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = sub_1D7B4969C();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_1D7B37F04()
{
  unint64_t v0;
  unint64_t v1;

  sub_1D7AA787C(319, &qword_1F014E3F8, type metadata accessor for FeatureRegulatoryInfo.ReenableActionConfiguration, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
  {
    sub_1D7B4969C();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_1D7B37FC4()
{
  return sub_1D7AA76D4((unint64_t *)&unk_1F01506D0, type metadata accessor for FeatureRegulatoryInfoView, (uint64_t)&protocol conformance descriptor for FeatureRegulatoryInfoView);
}

uint64_t objectdestroyTm_1()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  id *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;

  v1 = (int *)type metadata accessor for FeatureRegulatoryAboutView();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = (id *)(v0 + ((v2 + 16) & ~v2));

  swift_release();
  v4 = (char *)v3 + v1[6];
  v5 = type metadata accessor for FeatureRegulatoryInfo.ReenableActionConfiguration(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    v6 = &v4[*(int *)(v5 + 28)];
    v7 = sub_1D7B490A8();
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
  }
  v9 = (char *)v3 + v1[7];
  v10 = sub_1D7B4969C();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v3 + v1[8]);
  return swift_deallocObject();
}

uint64_t sub_1D7B3812C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FeatureRegulatoryAboutView() - 8) + 80);
  return sub_1D7B36AA4(a1, a2, v2 + ((v5 + 16) & ~v5));
}

uint64_t sub_1D7B38180(char a1)
{
  id v1;
  uint64_t v2;

  if (a1)
  {
    sub_1D7B4A7DC();
    swift_bridgeObjectRelease();
    if (qword_1F014CF90 == -1)
      goto LABEL_5;
    goto LABEL_6;
  }
  sub_1D7B4A7DC();
  swift_bridgeObjectRelease();
  if (qword_1F014CF90 != -1)
LABEL_6:
    swift_once();
LABEL_5:
  v1 = (id)qword_1F0154598;
  v2 = sub_1D7B48F7C();

  return v2;
}

uint64_t sub_1D7B382C8()
{
  sub_1D7B4A980();
  swift_bridgeObjectRetain();
  sub_1D7B4A3F8();
  swift_bridgeObjectRelease();
  return sub_1D7B4A998();
}

uint64_t sub_1D7B38320()
{
  swift_bridgeObjectRetain();
  sub_1D7B4A3F8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D7B38364()
{
  sub_1D7B4A980();
  swift_bridgeObjectRetain();
  sub_1D7B4A3F8();
  swift_bridgeObjectRelease();
  return sub_1D7B4A998();
}

uint64_t sub_1D7B383B8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  swift_bridgeObjectRetain();
  sub_1D7B4A41C();
  result = swift_bridgeObjectRelease();
  *a1 = 762668649;
  a1[1] = 0xE400000000000000;
  return result;
}

uint64_t sub_1D7B38420(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1D7B4A938();
}

uint64_t sub_1D7B38450@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  unsigned __int8 v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  int *v49;
  uint64_t v50;
  uint64_t (*v51)(uint64_t);
  uint64_t *v52;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unsigned __int8 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;

  v64 = a1;
  v66 = type metadata accessor for InstructionsForUseWebView(0);
  MEMORY[0x1E0C80A78](v66);
  v57 = (char *)&v54 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v58 = (char *)&v54 - v4;
  v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0CDB848];
  sub_1D7B3FD20(0, &qword_1F0150988, MEMORY[0x1E0CDB848]);
  v62 = v6;
  MEMORY[0x1E0C80A78](v6);
  v63 = (uint64_t)&v54 - v7;
  sub_1D7B3DEAC(0, &qword_1F0150998, v5);
  v59 = v8;
  MEMORY[0x1E0C80A78](v8);
  v56 = (char *)&v54 - v9;
  v60 = type metadata accessor for InstructionsForUseWebViewError(0);
  MEMORY[0x1E0C80A78](v60);
  v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D7ADB344(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (int *)type metadata accessor for ErrorDetails(0);
  v55 = *((_QWORD *)v15 - 1);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v54 - v19;
  sub_1D7B3DEAC(0, &qword_1F0150990, MEMORY[0x1E0CDB880]);
  v61 = v21;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v54 - v22;
  v24 = *(_BYTE *)v1;
  v65 = v1;
  v25 = *(_QWORD *)(v1 + 8);
  LOBYTE(v69) = v24;
  v70 = v25;
  sub_1D7AA7E70(0, &qword_1F01509A0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0CDF9A8]);
  sub_1D7B4A044();
  v26 = v67;
  v27 = type metadata accessor for InstructionsForUseWebViewContainer(0);
  if (v26 == 1)
  {
    v28 = v18;
    v58 = v23;
    v29 = v27;
    sub_1D7AA787C(0, qword_1F01507A0, (uint64_t (*)(uint64_t))sub_1D7ADB344, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDF9A8]);
    sub_1D7B4A044();
    v30 = (*(uint64_t (**)(char *, uint64_t, int *))(v55 + 48))(v14, 1, v15);
    v31 = v63;
    v32 = (uint64_t)v56;
    if (v30 == 1)
    {
      sub_1D7AAD1B0((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1D7ADB344);
      sub_1D7B493F0();
      v33 = &v28[v15[7]];
      v34 = sub_1D7B490A8();
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v33, 1, 1, v34);
      v35 = (uint64_t *)(v65 + *(int *)(v29 + 24));
      v36 = *v35;
      v37 = v35[1];
      *v28 = 3;
      v38 = &v28[v15[6]];
      *(_QWORD *)v38 = 0;
      v38[8] = 1;
      v39 = &v28[v15[8]];
      *v39 = v36;
      v39[1] = v37;
      v40 = (uint64_t)v11;
      sub_1D7AAD16C((uint64_t)v28, (uint64_t)v11, type metadata accessor for ErrorDetails);
      sub_1D7AAD16C((uint64_t)v11, v32, type metadata accessor for InstructionsForUseWebViewError);
      swift_storeEnumTagMultiPayload();
      sub_1D7AA76D4(&qword_1F01509B0, type metadata accessor for InstructionsForUseWebViewError, (uint64_t)&unk_1D7B870E4);
      swift_bridgeObjectRetain();
    }
    else
    {
      v28 = v20;
      sub_1D7B3E030((uint64_t)v14, (uint64_t)v20);
      v40 = (uint64_t)v11;
      sub_1D7AAD16C((uint64_t)v20, (uint64_t)v11, type metadata accessor for ErrorDetails);
      sub_1D7AAD16C((uint64_t)v11, v32, type metadata accessor for InstructionsForUseWebViewError);
      swift_storeEnumTagMultiPayload();
      sub_1D7AA76D4(&qword_1F01509B0, type metadata accessor for InstructionsForUseWebViewError, (uint64_t)&unk_1D7B870E4);
    }
    v41 = (uint64_t)v58;
    sub_1D7B49BF4();
    sub_1D7AAD1B0(v40, type metadata accessor for InstructionsForUseWebViewError);
    sub_1D7AAD1B0((uint64_t)v28, type metadata accessor for ErrorDetails);
    sub_1D7B3DF90(v41, v31);
    swift_storeEnumTagMultiPayload();
    sub_1D7B3DF08();
    sub_1D7AA76D4(&qword_1F0150980, type metadata accessor for InstructionsForUseWebView, (uint64_t)&unk_1D7B86E70);
    sub_1D7B49BF4();
    return sub_1D7B3DFE4(v41);
  }
  else
  {
    v42 = v65;
    v43 = (uint64_t *)(v65 + *(int *)(v27 + 24));
    v44 = *v43;
    v45 = v43[1];
    sub_1D7B38B1C(*v43, v45);
    v46 = (uint64_t)v58;
    sub_1D7B4909C();
    swift_bridgeObjectRelease();
    v67 = v24;
    v68 = v25;
    sub_1D7B4A05C();
    v47 = v70;
    v60 = v69;
    v48 = v71;
    v49 = (int *)v66;
    v50 = (uint64_t)v57;
    sub_1D7AA787C(0, qword_1F01507A0, (uint64_t (*)(uint64_t))sub_1D7ADB344, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDF9A8]);
    sub_1D7B4A05C();
    sub_1D7AAD16C(v42, v50 + v49[7], type metadata accessor for InstructionsForUseWebViewContainer);
    v51 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    sub_1D7B0C8A8(v46, v50 + v49[8], &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    *(_QWORD *)v50 = v60;
    *(_QWORD *)(v50 + 8) = v47;
    *(_BYTE *)(v50 + 16) = v48;
    v52 = (uint64_t *)(v50 + v49[6]);
    *v52 = v44;
    v52[1] = v45;
    sub_1D7AAD16C(v50, v63, type metadata accessor for InstructionsForUseWebView);
    swift_storeEnumTagMultiPayload();
    sub_1D7B3DF08();
    sub_1D7AA76D4(&qword_1F0150980, type metadata accessor for InstructionsForUseWebView, (uint64_t)&unk_1D7B86E70);
    swift_bridgeObjectRetain();
    sub_1D7B49BF4();
    sub_1D7AAD1B0(v50, type metadata accessor for InstructionsForUseWebView);
    return sub_1D7B0EDDC(v46, &qword_1F014E400, v51);
  }
}

uint64_t sub_1D7B38B1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  char *v27;
  uint64_t (*v28)(uint64_t);
  char v29;
  void (*v30)(char *, uint64_t);
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;

  v38 = a1;
  v39 = a2;
  v2 = sub_1D7B491F8();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0C48];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v36 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D7B3E074();
  v7 = v6;
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D7AA787C(0, (unint64_t *)&unk_1F01509C0, v3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v11 = MEMORY[0x1E0C80A78](v10);
  v37 = (uint64_t)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v36 - v14;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v36 - v16;
  v18 = sub_1D7B4921C();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D7B49210();
  sub_1D7B49204();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  sub_1D7B491EC();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v15, 0, 1, v2);
  v22 = (uint64_t)&v9[*(int *)(v7 + 48)];
  v23 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0C48];
  sub_1D7B0C8A8((uint64_t)v17, (uint64_t)v9, (unint64_t *)&unk_1F01509C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0C48]);
  sub_1D7B0C8A8((uint64_t)v15, v22, (unint64_t *)&unk_1F01509C0, v23);
  v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v24((uint64_t)v9, 1, v2) == 1)
  {
    sub_1D7B0EDDC((uint64_t)v15, (unint64_t *)&unk_1F01509C0, v23);
    sub_1D7B0EDDC((uint64_t)v17, (unint64_t *)&unk_1F01509C0, v23);
    if (v24(v22, 1, v2) == 1)
    {
      sub_1D7B0EDDC((uint64_t)v9, (unint64_t *)&unk_1F01509C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0C48]);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  v25 = v37;
  sub_1D7B0C8A8((uint64_t)v9, v37, (unint64_t *)&unk_1F01509C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0C48]);
  if (v24(v22, 1, v2) == 1)
  {
    v26 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0C48];
    sub_1D7B0EDDC((uint64_t)v15, (unint64_t *)&unk_1F01509C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0C48]);
    sub_1D7B0EDDC((uint64_t)v17, (unint64_t *)&unk_1F01509C0, v26);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v25, v2);
LABEL_6:
    sub_1D7AAD1B0((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1D7B3E074);
    goto LABEL_10;
  }
  v27 = v36;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v36, v22, v2);
  v28 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0C48];
  sub_1D7AA76D4(&qword_1F01509D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0C48], MEMORY[0x1E0CB0C68]);
  v29 = sub_1D7B4A320();
  v30 = *(void (**)(char *, uint64_t))(v4 + 8);
  v30(v27, v2);
  sub_1D7B0EDDC((uint64_t)v15, (unint64_t *)&unk_1F01509C0, v28);
  sub_1D7B0EDDC((uint64_t)v17, (unint64_t *)&unk_1F01509C0, v28);
  v30((char *)v25, v2);
  sub_1D7B0EDDC((uint64_t)v9, (unint64_t *)&unk_1F01509C0, v28);
  if ((v29 & 1) != 0)
  {
LABEL_8:
    v40 = 0;
    v41 = 0xE000000000000000;
    sub_1D7B4A7DC();
    swift_bridgeObjectRelease();
    if (qword_1F014CF90 == -1)
      goto LABEL_11;
    goto LABEL_12;
  }
LABEL_10:
  v40 = 0;
  v41 = 0xE000000000000000;
  sub_1D7B4A7DC();
  swift_bridgeObjectRelease();
  if (qword_1F014CF90 != -1)
LABEL_12:
    swift_once();
LABEL_11:
  v31 = (id)qword_1F0154598;
  sub_1D7B48F7C();

  sub_1D7ADC2F0();
  v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_1D7B84630;
  *(_QWORD *)(v32 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v32 + 64) = sub_1D7AC5A74();
  v33 = v39;
  *(_QWORD *)(v32 + 32) = v38;
  *(_QWORD *)(v32 + 40) = v33;
  swift_bridgeObjectRetain();
  v34 = sub_1D7B4A3C8();
  swift_bridgeObjectRelease();
  return v34;
}

uint64_t sub_1D7B3904C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;

  v21 = a1;
  v2 = sub_1D7B48D00();
  v22 = *(_QWORD *)(v2 - 8);
  v23 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v20 - v7;
  v9 = sub_1D7B490A8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v20 - v14;
  v16 = type metadata accessor for InstructionsForUseWebView(0);
  v17 = v1 + *(int *)(v16 + 32);
  sub_1D7B0C8A8(v17, (uint64_t)v8, &qword_1F014E400, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1D7B0EDDC((uint64_t)v8, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    return sub_1D7B3927C(0, *(_QWORD *)(v1 + *(int *)(v16 + 24)), *(_QWORD *)(v1 + *(int *)(v16 + 24) + 8), v17, 0, 0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
    sub_1D7B48CF4();
    v19 = (void *)sub_1D7B48CE8();

    (*(void (**)(char *, uint64_t))(v22 + 8))(v4, v23);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  }
}

uint64_t sub_1D7B3927C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  id v27;
  int v28;
  void (*v29)(char *, uint64_t);
  char *v30;
  char v31;
  int *v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(_QWORD, uint64_t);
  uint64_t v39;
  char v40;
  char v42;
  char v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char v54;
  void *v55;
  uint64_t v56;
  char v57;

  v51 = a3;
  LODWORD(v49) = a6;
  v47 = a4;
  v48 = a5;
  v46 = a2;
  sub_1D7ADB344(0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v50 = (uint64_t)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v44 - v10;
  sub_1D7AA787C(0, &qword_1F01509D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB15C0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v44 - v13;
  v15 = sub_1D7B49414();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v45 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1D7B49408();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x1E0C80A78](v20);
  v25 = (char *)&v44 - v24;
  MEMORY[0x1E0C80A78](v23);
  v53 = (char *)&v44 - v26;
  sub_1D7B493F0();
  if (!a1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
    goto LABEL_6;
  }
  v55 = a1;
  v27 = a1;
  sub_1D7B3E0EC(0, (unint64_t *)&qword_1F014D760);
  v28 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v14, v28 ^ 1u, 1, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
LABEL_6:
    sub_1D7B0EDDC((uint64_t)v14, &qword_1F01509D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB15C0]);
    v31 = 3;
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v45, v14, v15);
  sub_1D7AA76D4(&qword_1F01509F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB15C0], MEMORY[0x1E0CB15B8]);
  sub_1D7B48FF4();
  v29 = *(void (**)(char *, uint64_t))(v19 + 8);
  v30 = v53;
  v29(v53, v18);
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v30, v25, v18);
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v22, v30, v18);
  sub_1D7B493D8();
  v44 = sub_1D7AA76D4(&qword_1F01509F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1578], MEMORY[0x1E0CB1588]);
  LOBYTE(v30) = sub_1D7B4A320();
  v29(v25, v18);
  if ((v30 & 1) != 0)
  {
    v29(v22, v18);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v45, v15);
    v31 = 0;
  }
  else
  {
    sub_1D7B493E4();
    v42 = sub_1D7B4A320();
    v29(v25, v18);
    if ((v42 & 1) != 0)
    {
      v29(v22, v18);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v45, v15);
      v31 = 1;
    }
    else
    {
      sub_1D7B493CC();
      v43 = sub_1D7B4A320();
      v29(v25, v18);
      v29(v22, v18);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v45, v15);
      if ((v43 & 1) != 0)
        v31 = 2;
      else
        v31 = 3;
    }
  }
LABEL_7:
  v32 = (int *)type metadata accessor for ErrorDetails(0);
  v33 = v53;
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(&v11[v32[5]], v53, v18);
  sub_1D7B0C8A8(v47, (uint64_t)&v11[v32[7]], &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  *v11 = v31;
  v34 = &v11[v32[6]];
  *(_QWORD *)v34 = v48;
  v34[8] = v49 & 1;
  v35 = &v11[v32[8]];
  v49 = v19;
  v36 = v51;
  *(_QWORD *)v35 = v46;
  *((_QWORD *)v35 + 1) = v36;
  (*(void (**)(char *, _QWORD, uint64_t, int *))(*((_QWORD *)v32 - 1) + 56))(v11, 0, 1, v32);
  type metadata accessor for InstructionsForUseWebView(0);
  v37 = v52;
  sub_1D7AAD16C((uint64_t)v11, v50, (uint64_t (*)(_QWORD))sub_1D7ADB344);
  v38 = (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0CDFDB8];
  sub_1D7AA787C(0, &qword_1F0150788, (uint64_t (*)(uint64_t))sub_1D7ADB344, MEMORY[0x1E0CDFDB8]);
  swift_bridgeObjectRetain();
  sub_1D7B4A0C8();
  sub_1D7AAD1B0((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1D7ADB344);
  v39 = *(_QWORD *)(v37 + 8);
  v40 = *(_BYTE *)(v37 + 16);
  v55 = *(void **)v37;
  v56 = v39;
  v57 = v40;
  v54 = 1;
  sub_1D7AA7E70(0, (unint64_t *)&unk_1F01509E0, MEMORY[0x1E0DEAFA0], v38);
  sub_1D7B4A0C8();
  return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v33, v18);
}

id sub_1D7B39960()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InstructionsForUseWebView.Coordinator(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D7B399E0()
{
  return type metadata accessor for InstructionsForUseWebView.Coordinator(0);
}

uint64_t type metadata accessor for InstructionsForUseWebView.Coordinator(uint64_t a1)
{
  return sub_1D7ACDAE8(a1, (uint64_t *)&unk_1F0150778);
}

uint64_t sub_1D7B399FC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for InstructionsForUseWebView(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for InstructionsForUseWebViewContainer(319);
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for InstructionsForUseWebView(uint64_t a1)
{
  return sub_1D7ACDAE8(a1, qword_1F0150800);
}

uint64_t type metadata accessor for InstructionsForUseWebViewContainer(uint64_t a1)
{
  return sub_1D7ACDAE8(a1, qword_1F0150940);
}

uint64_t sub_1D7B39AAC(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  int *v15;
  unsigned int (*v16)(_BYTE *, uint64_t, int *);
  uint64_t v17;
  int *v18;
  uint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;
  _BYTE *v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  void (*v36)(_BYTE *, _QWORD, uint64_t, int *);
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  _BYTE *v54;
  uint64_t v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  void (*v64)(_BYTE *, _QWORD, uint64_t, int *);
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  unsigned int (*v75)(const void *, uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v78;
  uint64_t v79;
  unsigned int (*__dst)(_BYTE *, uint64_t, int *);
  _BYTE *__dsta;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v6 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v6 = a1;
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v7 = a3[5];
    v8 = (_QWORD *)(a1 + v7);
    v9 = (uint64_t)a2 + v7;
    v10 = *(uint64_t *)((char *)a2 + v7 + 8);
    *v8 = *(uint64_t *)((char *)a2 + v7);
    v8[1] = v10;
    sub_1D7AA787C(0, &qword_1F0150788, (uint64_t (*)(uint64_t))sub_1D7ADB344, MEMORY[0x1E0CDFDB8]);
    v12 = *(int *)(v11 + 32);
    v13 = (char *)v8 + v12;
    v14 = (_BYTE *)(v9 + v12);
    v15 = (int *)type metadata accessor for ErrorDetails(0);
    v78 = *((_QWORD *)v15 - 1);
    v16 = *(unsigned int (**)(_BYTE *, uint64_t, int *))(v78 + 48);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    __dst = v16;
    if (v16(v14, 1, v15))
    {
      sub_1D7ADB344(0);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      v18 = a3;
    }
    else
    {
      *v13 = *v14;
      v19 = v15[5];
      v20 = &v13[v19];
      v21 = &v14[v19];
      v22 = sub_1D7B49408();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
      v23 = v15[6];
      v24 = &v13[v23];
      v25 = &v14[v23];
      *(_QWORD *)v24 = *(_QWORD *)v25;
      v24[8] = v25[8];
      v26 = v15[7];
      v27 = &v13[v26];
      v28 = &v14[v26];
      v29 = sub_1D7B490A8();
      v30 = *(_QWORD *)(v29 - 8);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
      {
        sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v30 + 16))(v27, v28, v29);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      }
      v18 = a3;
      v32 = v15[8];
      v33 = &v13[v32];
      v34 = &v14[v32];
      v35 = v34[1];
      *v33 = *v34;
      v33[1] = v35;
      v36 = *(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v78 + 56);
      swift_bridgeObjectRetain();
      v36(v13, 0, 1, v15);
    }
    v37 = v18[6];
    v38 = v18[7];
    v39 = (_QWORD *)(v6 + v37);
    v40 = (uint64_t *)((char *)a2 + v37);
    v41 = v40[1];
    *v39 = *v40;
    v39[1] = v41;
    v42 = v6 + v38;
    v43 = (uint64_t)a2 + v38;
    *(_BYTE *)v42 = *((_BYTE *)a2 + v38);
    *(_QWORD *)(v42 + 8) = *(uint64_t *)((char *)a2 + v38 + 8);
    v79 = type metadata accessor for InstructionsForUseWebViewContainer(0);
    v44 = *(int *)(v79 + 20);
    v45 = (_BYTE *)(v42 + v44);
    v46 = (_BYTE *)(v43 + v44);
    swift_bridgeObjectRetain();
    swift_retain();
    if (__dst(v46, 1, v15))
    {
      sub_1D7ADB344(0);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    }
    else
    {
      *v45 = *v46;
      v48 = v15[5];
      v49 = &v45[v48];
      v50 = &v46[v48];
      v51 = sub_1D7B49408();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
      v52 = v15[6];
      v53 = &v45[v52];
      v54 = &v46[v52];
      *(_QWORD *)v53 = *(_QWORD *)v54;
      v53[8] = v54[8];
      v55 = v15[7];
      __dsta = &v45[v55];
      v56 = &v46[v55];
      v57 = sub_1D7B490A8();
      v58 = *(_QWORD *)(v57 - 8);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
      {
        sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(__dsta, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v58 + 16))(__dsta, v56, v57);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v58 + 56))(__dsta, 0, 1, v57);
      }
      v60 = v15[8];
      v61 = &v45[v60];
      v62 = &v46[v60];
      v63 = v62[1];
      *v61 = *v62;
      v61[1] = v63;
      v64 = *(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v78 + 56);
      swift_bridgeObjectRetain();
      v64(v45, 0, 1, v15);
      v18 = a3;
    }
    sub_1D7AA787C(0, qword_1F01507A0, (uint64_t (*)(uint64_t))sub_1D7ADB344, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDF9A8]);
    *(_QWORD *)&v45[*(int *)(v65 + 28)] = *(_QWORD *)&v46[*(int *)(v65 + 28)];
    v66 = *(int *)(v79 + 24);
    v67 = (_QWORD *)(v42 + v66);
    v68 = (_QWORD *)(v43 + v66);
    v69 = v68[1];
    *v67 = *v68;
    v67[1] = v69;
    v70 = v18[8];
    v71 = (void *)(v6 + v70);
    v72 = (char *)a2 + v70;
    v73 = sub_1D7B490A8();
    v74 = *(_QWORD *)(v73 - 8);
    v75 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v74 + 48);
    swift_retain();
    swift_bridgeObjectRetain();
    if (v75(v72, 1, v73))
    {
      sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v74 + 16))(v71, v72, v73);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v71, 0, 1, v73);
    }
  }
  return v6;
}

uint64_t type metadata accessor for ErrorDetails(uint64_t a1)
{
  return sub_1D7ACDAE8(a1, qword_1F01508A0);
}

uint64_t sub_1D7B39FC0(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;

  swift_release();
  swift_release();
  v4 = a1 + a2[5];
  swift_release();
  swift_release();
  sub_1D7AA787C(0, &qword_1F0150788, (uint64_t (*)(uint64_t))sub_1D7ADB344, MEMORY[0x1E0CDFDB8]);
  v6 = v4 + *(int *)(v5 + 32);
  v7 = type metadata accessor for ErrorDetails(0);
  v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48);
  if (!v8(v6, 1, v7))
  {
    v9 = v6 + *(int *)(v7 + 20);
    v10 = sub_1D7B49408();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
    v11 = v6 + *(int *)(v7 + 28);
    v12 = sub_1D7B490A8();
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v14 = a1 + a2[7];
  swift_release();
  v15 = v14 + *(int *)(type metadata accessor for InstructionsForUseWebViewContainer(0) + 20);
  if (!v8(v15, 1, v7))
  {
    v16 = v15 + *(int *)(v7 + 20);
    v17 = sub_1D7B49408();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
    v18 = v15 + *(int *)(v7 + 28);
    v19 = sub_1D7B490A8();
    v20 = *(_QWORD *)(v19 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    swift_bridgeObjectRelease();
  }
  sub_1D7AA787C(0, qword_1F01507A0, (uint64_t (*)(uint64_t))sub_1D7ADB344, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDF9A8]);
  swift_release();
  swift_bridgeObjectRelease();
  v21 = a1 + a2[8];
  v22 = sub_1D7B490A8();
  v23 = *(_QWORD *)(v22 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
  return result;
}

uint64_t sub_1D7B3A23C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  int *v14;
  unsigned int (*v15)(_BYTE *, uint64_t, int *);
  uint64_t v16;
  int *v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  _BYTE *v24;
  uint64_t v25;
  _BYTE *v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  void (*v35)(_BYTE *, _QWORD, uint64_t, int *);
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE *v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  _BYTE *v53;
  uint64_t v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  void (*v63)(_BYTE *, _QWORD, uint64_t, int *);
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  const void *v71;
  uint64_t v72;
  uint64_t v73;
  unsigned int (*v74)(const void *, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v77;
  uint64_t v78;
  unsigned int (*__dst)(_BYTE *, uint64_t, int *);
  _BYTE *__dsta;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = a3[5];
  v7 = (_QWORD *)(a1 + v6);
  v8 = a2 + v6;
  v9 = *(_QWORD *)(a2 + v6 + 8);
  *v7 = *(_QWORD *)(a2 + v6);
  v7[1] = v9;
  sub_1D7AA787C(0, &qword_1F0150788, (uint64_t (*)(uint64_t))sub_1D7ADB344, MEMORY[0x1E0CDFDB8]);
  v11 = *(int *)(v10 + 32);
  v12 = (char *)v7 + v11;
  v13 = (_BYTE *)(v8 + v11);
  v14 = (int *)type metadata accessor for ErrorDetails(0);
  v77 = *((_QWORD *)v14 - 1);
  v15 = *(unsigned int (**)(_BYTE *, uint64_t, int *))(v77 + 48);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  __dst = v15;
  if (v15(v13, 1, v14))
  {
    sub_1D7ADB344(0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    v17 = a3;
  }
  else
  {
    *v12 = *v13;
    v18 = v14[5];
    v19 = &v12[v18];
    v20 = &v13[v18];
    v21 = sub_1D7B49408();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    v22 = v14[6];
    v23 = &v12[v22];
    v24 = &v13[v22];
    *(_QWORD *)v23 = *(_QWORD *)v24;
    v23[8] = v24[8];
    v25 = v14[7];
    v26 = &v12[v25];
    v27 = &v13[v25];
    v28 = sub_1D7B490A8();
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v29 + 16))(v26, v27, v28);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    v17 = a3;
    v31 = v14[8];
    v32 = &v12[v31];
    v33 = &v13[v31];
    v34 = v33[1];
    *v32 = *v33;
    v32[1] = v34;
    v35 = *(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v77 + 56);
    swift_bridgeObjectRetain();
    v35(v12, 0, 1, v14);
  }
  v36 = v17[6];
  v37 = v17[7];
  v38 = (_QWORD *)(a1 + v36);
  v39 = (_QWORD *)(a2 + v36);
  v40 = v39[1];
  *v38 = *v39;
  v38[1] = v40;
  v41 = a1 + v37;
  v42 = a2 + v37;
  *(_BYTE *)v41 = *(_BYTE *)(a2 + v37);
  *(_QWORD *)(v41 + 8) = *(_QWORD *)(a2 + v37 + 8);
  v78 = type metadata accessor for InstructionsForUseWebViewContainer(0);
  v43 = *(int *)(v78 + 20);
  v44 = (_BYTE *)(v41 + v43);
  v45 = (_BYTE *)(v42 + v43);
  swift_bridgeObjectRetain();
  swift_retain();
  if (__dst(v45, 1, v14))
  {
    sub_1D7ADB344(0);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
  }
  else
  {
    *v44 = *v45;
    v47 = v14[5];
    v48 = &v44[v47];
    v49 = &v45[v47];
    v50 = sub_1D7B49408();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
    v51 = v14[6];
    v52 = &v44[v51];
    v53 = &v45[v51];
    *(_QWORD *)v52 = *(_QWORD *)v53;
    v52[8] = v53[8];
    v54 = v14[7];
    __dsta = &v44[v54];
    v55 = &v45[v54];
    v56 = sub_1D7B490A8();
    v57 = *(_QWORD *)(v56 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
    {
      sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(__dsta, v55, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v57 + 16))(__dsta, v55, v56);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v57 + 56))(__dsta, 0, 1, v56);
    }
    v59 = v14[8];
    v60 = &v44[v59];
    v61 = &v45[v59];
    v62 = v61[1];
    *v60 = *v61;
    v60[1] = v62;
    v63 = *(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v77 + 56);
    swift_bridgeObjectRetain();
    v63(v44, 0, 1, v14);
    v17 = a3;
  }
  sub_1D7AA787C(0, qword_1F01507A0, (uint64_t (*)(uint64_t))sub_1D7ADB344, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDF9A8]);
  *(_QWORD *)&v44[*(int *)(v64 + 28)] = *(_QWORD *)&v45[*(int *)(v64 + 28)];
  v65 = *(int *)(v78 + 24);
  v66 = (_QWORD *)(v41 + v65);
  v67 = (_QWORD *)(v42 + v65);
  v68 = v67[1];
  *v66 = *v67;
  v66[1] = v68;
  v69 = v17[8];
  v70 = (void *)(a1 + v69);
  v71 = (const void *)(a2 + v69);
  v72 = sub_1D7B490A8();
  v73 = *(_QWORD *)(v72 - 8);
  v74 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v73 + 48);
  swift_retain();
  swift_bridgeObjectRetain();
  if (v74(v71, 1, v72))
  {
    sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v73 + 16))(v70, v71, v72);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v70, 0, 1, v72);
  }
  return a1;
}

_QWORD *sub_1D7B3A70C(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int *v13;
  uint64_t (*v14)(char *, uint64_t, int *);
  int v15;
  int v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(char *, uint64_t, uint64_t);
  int v47;
  int v48;
  uint64_t v49;
  char *v50;
  char *v51;
  void (*v52)(char *, _QWORD, uint64_t, int *);
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  int v67;
  int v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t (*v96)(char *, uint64_t, uint64_t);
  int v97;
  uint64_t v98;
  size_t v99;
  char *v100;
  uint64_t v101;
  char *v102;
  char *v103;
  void (*v104)(char *, _QWORD, uint64_t, int *);
  int *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t (*v115)(char *, uint64_t, uint64_t);
  int v116;
  int v117;
  uint64_t v118;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  _QWORD *v125;
  _QWORD *v126;
  _QWORD *v127;
  _QWORD *v128;
  _QWORD *v129;
  _QWORD *v130;
  uint64_t v131;
  char *v132;
  int *v133;

  v4 = a2;
  v5 = a1;
  *a1 = *a2;
  swift_retain();
  swift_release();
  v5[1] = v4[1];
  swift_retain();
  swift_release();
  *((_BYTE *)v5 + 16) = *((_BYTE *)v4 + 16);
  v6 = a3[5];
  v7 = (char *)v5 + v6;
  v8 = (char *)v4 + v6;
  *(_QWORD *)((char *)v5 + v6) = *(_QWORD *)((char *)v4 + v6);
  swift_retain();
  swift_release();
  *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
  swift_retain();
  swift_release();
  sub_1D7AA787C(0, &qword_1F0150788, (uint64_t (*)(uint64_t))sub_1D7ADB344, MEMORY[0x1E0CDFDB8]);
  v10 = *(int *)(v9 + 32);
  v11 = &v7[v10];
  v12 = &v8[v10];
  v13 = (int *)type metadata accessor for ErrorDetails(0);
  v131 = *((_QWORD *)v13 - 1);
  v14 = *(uint64_t (**)(char *, uint64_t, int *))(v131 + 48);
  v15 = v14(v11, 1, v13);
  v16 = v14(v12, 1, v13);
  v133 = a3;
  if (v15)
  {
    if (!v16)
    {
      v17 = v4;
      *v11 = *v12;
      v18 = v13[5];
      v19 = &v11[v18];
      v20 = &v12[v18];
      v21 = sub_1D7B49408();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
      v22 = v13[6];
      v23 = &v11[v22];
      v24 = &v12[v22];
      v25 = *(_QWORD *)v24;
      v23[8] = v24[8];
      *(_QWORD *)v23 = v25;
      v26 = v13[7];
      v27 = &v11[v26];
      v28 = &v12[v26];
      v29 = sub_1D7B490A8();
      v30 = *(_QWORD *)(v29 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
      {
        sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      }
      v4 = v17;
      v49 = v13[8];
      v50 = &v11[v49];
      v51 = &v12[v49];
      *(_QWORD *)v50 = *(_QWORD *)v51;
      *((_QWORD *)v50 + 1) = *((_QWORD *)v51 + 1);
      v52 = *(void (**)(char *, _QWORD, uint64_t, int *))(v131 + 56);
      swift_bridgeObjectRetain();
      v52(v11, 0, 1, v13);
      goto LABEL_17;
    }
LABEL_7:
    sub_1D7ADB344(0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_18;
  }
  if (v16)
  {
    sub_1D7AAD1B0((uint64_t)v11, type metadata accessor for ErrorDetails);
    goto LABEL_7;
  }
  v125 = v4;
  v128 = v5;
  *v11 = *v12;
  v33 = v13[5];
  v34 = &v11[v33];
  v35 = &v12[v33];
  v36 = sub_1D7B49408();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 24))(v34, v35, v36);
  v37 = v13[6];
  v38 = &v11[v37];
  v39 = &v12[v37];
  v40 = *(_QWORD *)v39;
  v38[8] = v39[8];
  *(_QWORD *)v38 = v40;
  v41 = v13[7];
  v42 = &v11[v41];
  v43 = &v12[v41];
  v44 = sub_1D7B490A8();
  v45 = *(_QWORD *)(v44 - 8);
  v46 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 48);
  v47 = v46(v42, 1, v44);
  v48 = v46(v43, 1, v44);
  if (!v47)
  {
    if (!v48)
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 24))(v42, v43, v44);
      goto LABEL_16;
    }
    (*(void (**)(char *, uint64_t))(v45 + 8))(v42, v44);
    goto LABEL_15;
  }
  if (v48)
  {
LABEL_15:
    sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    goto LABEL_16;
  }
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v42, v43, v44);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
LABEL_16:
  v5 = v128;
  v54 = v13[8];
  v55 = &v11[v54];
  v56 = &v12[v54];
  *(_QWORD *)v55 = *(_QWORD *)v56;
  *((_QWORD *)v55 + 1) = *((_QWORD *)v56 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = v125;
LABEL_17:
  a3 = v133;
LABEL_18:
  v57 = a3[6];
  v58 = (_QWORD *)((char *)v5 + v57);
  v59 = (_QWORD *)((char *)v4 + v57);
  *v58 = *v59;
  v58[1] = v59[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v60 = a3[7];
  v61 = (char *)v5 + v60;
  v62 = (char *)v4 + v60;
  *v61 = *((_BYTE *)v4 + v60);
  *((_QWORD *)v61 + 1) = *(_QWORD *)((char *)v4 + v60 + 8);
  swift_retain();
  swift_release();
  v63 = type metadata accessor for InstructionsForUseWebViewContainer(0);
  v64 = *(int *)(v63 + 20);
  v65 = &v61[v64];
  v66 = &v62[v64];
  v67 = v14(&v61[v64], 1, v13);
  v68 = v14(v66, 1, v13);
  if (v67)
  {
    if (!v68)
    {
      v126 = v4;
      v129 = v5;
      *v65 = *v66;
      v69 = v13[5];
      v70 = &v65[v69];
      v71 = &v66[v69];
      v72 = sub_1D7B49408();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 16))(v70, v71, v72);
      v73 = v13[6];
      v74 = &v65[v73];
      v75 = &v66[v73];
      v76 = *(_QWORD *)v75;
      v74[8] = v75[8];
      *(_QWORD *)v74 = v76;
      v77 = v13[7];
      v78 = &v65[v77];
      v79 = &v66[v77];
      v80 = sub_1D7B490A8();
      v81 = *(_QWORD *)(v80 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48))(v79, 1, v80))
      {
        sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v78, v79, v80);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v78, 0, 1, v80);
      }
      v101 = v13[8];
      v102 = &v65[v101];
      v103 = &v66[v101];
      *(_QWORD *)v102 = *(_QWORD *)v103;
      *((_QWORD *)v102 + 1) = *((_QWORD *)v103 + 1);
      v5 = v129;
      v104 = *(void (**)(char *, _QWORD, uint64_t, int *))(v131 + 56);
      swift_bridgeObjectRetain();
      v104(v65, 0, 1, v13);
      v4 = v126;
      goto LABEL_30;
    }
LABEL_24:
    sub_1D7ADB344(0);
    memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
LABEL_30:
    v105 = v133;
    goto LABEL_31;
  }
  if (v68)
  {
    sub_1D7AAD1B0((uint64_t)v65, type metadata accessor for ErrorDetails);
    goto LABEL_24;
  }
  v127 = v4;
  v130 = v5;
  *v65 = *v66;
  v84 = v13[5];
  v85 = &v65[v84];
  v86 = &v66[v84];
  v87 = sub_1D7B49408();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 24))(v85, v86, v87);
  v88 = v13[6];
  v89 = &v65[v88];
  v90 = &v66[v88];
  v91 = *(_QWORD *)v90;
  v89[8] = v90[8];
  *(_QWORD *)v89 = v91;
  v92 = v13[7];
  v93 = &v65[v92];
  v94 = &v66[v92];
  v95 = sub_1D7B490A8();
  v124 = *(_QWORD *)(v95 - 8);
  v96 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v124 + 48);
  v132 = v93;
  LODWORD(v93) = v96(v93, 1, v95);
  v97 = v96(v94, 1, v95);
  if ((_DWORD)v93)
  {
    if (!v97)
    {
      (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v132, v94, v95);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v124 + 56))(v132, 0, 1, v95);
      goto LABEL_45;
    }
    sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v99 = *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64);
    v100 = v132;
  }
  else
  {
    if (!v97)
    {
      (*(void (**)(char *, char *, uint64_t))(v124 + 24))(v132, v94, v95);
      goto LABEL_45;
    }
    (*(void (**)(char *, uint64_t))(v124 + 8))(v132, v95);
    sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v99 = *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64);
    v100 = v132;
  }
  memcpy(v100, v94, v99);
LABEL_45:
  v4 = v127;
  v5 = v130;
  v105 = v133;
  v121 = v13[8];
  v122 = &v65[v121];
  v123 = &v66[v121];
  *(_QWORD *)v122 = *(_QWORD *)v123;
  *((_QWORD *)v122 + 1) = *((_QWORD *)v123 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_31:
  sub_1D7AA787C(0, qword_1F01507A0, (uint64_t (*)(uint64_t))sub_1D7ADB344, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDF9A8]);
  *(_QWORD *)&v65[*(int *)(v106 + 28)] = *(_QWORD *)&v66[*(int *)(v106 + 28)];
  swift_retain();
  swift_release();
  v107 = *(int *)(v63 + 24);
  v108 = &v61[v107];
  v109 = &v62[v107];
  *(_QWORD *)v108 = *(_QWORD *)v109;
  *((_QWORD *)v108 + 1) = *((_QWORD *)v109 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v110 = v105[8];
  v111 = (char *)v5 + v110;
  v112 = (char *)v4 + v110;
  v113 = sub_1D7B490A8();
  v114 = *(_QWORD *)(v113 - 8);
  v115 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v114 + 48);
  v116 = v115(v111, 1, v113);
  v117 = v115(v112, 1, v113);
  if (!v116)
  {
    if (!v117)
    {
      (*(void (**)(char *, char *, uint64_t))(v114 + 24))(v111, v112, v113);
      return v5;
    }
    (*(void (**)(char *, uint64_t))(v114 + 8))(v111, v113);
    goto LABEL_36;
  }
  if (v117)
  {
LABEL_36:
    sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v111, v112, *(_QWORD *)(*(_QWORD *)(v118 - 8) + 64));
    return v5;
  }
  (*(void (**)(char *, char *, uint64_t))(v114 + 16))(v111, v112, v113);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v114 + 56))(v111, 0, 1, v113);
  return v5;
}

uint64_t sub_1D7B3B004(uint64_t a1, uint64_t a2, int *a3)
{
  int *v3;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  int *v14;
  uint64_t v15;
  unsigned int (*v16)(_BYTE *, uint64_t, int *);
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  _BYTE *v24;
  uint64_t v25;
  _BYTE *v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  _BYTE *v44;
  uint64_t v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  const void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE *__dst;
  uint64_t v59;
  uint64_t v60;
  int *v61;
  int *v62;
  uint64_t v63;

  v3 = a3;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = a3[5];
  v7 = (_QWORD *)(a1 + v6);
  v8 = a2 + v6;
  v9 = *(_QWORD *)(a2 + v6 + 8);
  *v7 = *(_QWORD *)(a2 + v6);
  v7[1] = v9;
  sub_1D7AA787C(0, &qword_1F0150788, (uint64_t (*)(uint64_t))sub_1D7ADB344, MEMORY[0x1E0CDFDB8]);
  v11 = *(int *)(v10 + 32);
  v12 = (char *)v7 + v11;
  v13 = (_BYTE *)(v8 + v11);
  v14 = (int *)type metadata accessor for ErrorDetails(0);
  v15 = *((_QWORD *)v14 - 1);
  v16 = *(unsigned int (**)(_BYTE *, uint64_t, int *))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    sub_1D7ADB344(0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v59 = v15;
    v61 = v3;
    *v12 = *v13;
    v18 = v14[5];
    v19 = &v12[v18];
    v20 = &v13[v18];
    v21 = sub_1D7B49408();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
    v22 = v14[6];
    v23 = &v12[v22];
    v24 = &v13[v22];
    *(_QWORD *)v23 = *(_QWORD *)v24;
    v23[8] = v24[8];
    v25 = v14[7];
    v26 = &v12[v25];
    v27 = &v13[v25];
    v28 = sub_1D7B490A8();
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v29 + 32))(v26, v27, v28);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    *(_OWORD *)&v12[v14[8]] = *(_OWORD *)&v13[v14[8]];
    v15 = v59;
    (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v59 + 56))(v12, 0, 1, v14);
    v3 = v61;
  }
  v31 = v3[7];
  *(_OWORD *)(a1 + v3[6]) = *(_OWORD *)(a2 + v3[6]);
  v32 = a1 + v31;
  v33 = a2 + v31;
  *(_OWORD *)(a1 + v31) = *(_OWORD *)(a2 + v31);
  v63 = type metadata accessor for InstructionsForUseWebViewContainer(0);
  v34 = *(int *)(v63 + 20);
  v35 = (_BYTE *)(v32 + v34);
  v36 = (_BYTE *)(v33 + v34);
  if (v16((_BYTE *)(v33 + v34), 1, v14))
  {
    sub_1D7ADB344(0);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    v60 = v15;
    v62 = v3;
    *v35 = *v36;
    v38 = v14[5];
    v39 = &v35[v38];
    v40 = &v36[v38];
    v41 = sub_1D7B49408();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v39, v40, v41);
    v42 = v14[6];
    v43 = &v35[v42];
    v44 = &v36[v42];
    *(_QWORD *)v43 = *(_QWORD *)v44;
    v43[8] = v44[8];
    v45 = v14[7];
    __dst = &v35[v45];
    v46 = &v36[v45];
    v47 = sub_1D7B490A8();
    v48 = *(_QWORD *)(v47 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
    {
      sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(__dst, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v48 + 32))(__dst, v46, v47);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v48 + 56))(__dst, 0, 1, v47);
    }
    *(_OWORD *)&v35[v14[8]] = *(_OWORD *)&v36[v14[8]];
    (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v60 + 56))(v35, 0, 1, v14);
    v3 = v62;
  }
  sub_1D7AA787C(0, qword_1F01507A0, (uint64_t (*)(uint64_t))sub_1D7ADB344, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDF9A8]);
  *(_QWORD *)&v35[*(int *)(v50 + 28)] = *(_QWORD *)&v36[*(int *)(v50 + 28)];
  *(_OWORD *)(v32 + *(int *)(v63 + 24)) = *(_OWORD *)(v33 + *(int *)(v63 + 24));
  v51 = v3[8];
  v52 = (void *)(a1 + v51);
  v53 = (const void *)(a2 + v51);
  v54 = sub_1D7B490A8();
  v55 = *(_QWORD *)(v54 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54))
  {
    sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v55 + 32))(v52, v53, v54);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
  }
  return a1;
}

uint64_t sub_1D7B3B45C(uint64_t a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int *v13;
  uint64_t (*v14)(char *, uint64_t, int *);
  int v15;
  int v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(char *, uint64_t, uint64_t);
  int v44;
  uint64_t v45;
  size_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  int v65;
  int v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t (*v93)(char *, uint64_t, uint64_t);
  int v94;
  uint64_t v95;
  size_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t (*v109)(void *, uint64_t, uint64_t);
  int v110;
  int v111;
  uint64_t v112;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  _QWORD *v122;
  _QWORD *v123;
  _QWORD *v124;
  uint64_t v125;
  char *v126;
  int *v127;
  int *v128;
  int *v129;
  int *v130;
  int *__src;

  v4 = a2;
  *(_QWORD *)a1 = *a2;
  swift_release();
  *(_QWORD *)(a1 + 8) = v4[1];
  swift_release();
  *(_BYTE *)(a1 + 16) = *((_BYTE *)v4 + 16);
  v6 = a3[5];
  v7 = a1 + v6;
  v8 = (char *)v4 + v6;
  *(_QWORD *)(a1 + v6) = *(_QWORD *)((char *)v4 + v6);
  swift_release();
  *(_QWORD *)(v7 + 8) = *((_QWORD *)v8 + 1);
  swift_release();
  sub_1D7AA787C(0, &qword_1F0150788, (uint64_t (*)(uint64_t))sub_1D7ADB344, MEMORY[0x1E0CDFDB8]);
  v10 = *(int *)(v9 + 32);
  v11 = (char *)(v7 + v10);
  v12 = &v8[v10];
  v13 = (int *)type metadata accessor for ErrorDetails(0);
  v125 = *((_QWORD *)v13 - 1);
  v14 = *(uint64_t (**)(char *, uint64_t, int *))(v125 + 48);
  v15 = v14(v11, 1, v13);
  v16 = v14(v12, 1, v13);
  if (!v15)
  {
    if (v16)
    {
      sub_1D7AAD1B0((uint64_t)v11, type metadata accessor for ErrorDetails);
      goto LABEL_7;
    }
    v128 = a3;
    v122 = v4;
    *v11 = *v12;
    v31 = v13[5];
    v32 = &v11[v31];
    v33 = &v12[v31];
    v34 = sub_1D7B49408();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
    v35 = v13[6];
    v36 = &v11[v35];
    v37 = &v12[v35];
    *(_QWORD *)v36 = *(_QWORD *)v37;
    v36[8] = v37[8];
    v38 = v13[7];
    v39 = &v11[v38];
    v40 = &v12[v38];
    v41 = sub_1D7B490A8();
    v42 = *(_QWORD *)(v41 - 8);
    v43 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v42 + 48);
    v121 = v39;
    LODWORD(v39) = v43(v39, 1, v41);
    v44 = v43(v40, 1, v41);
    if ((_DWORD)v39)
    {
      if (!v44)
      {
        (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v121, v40, v41);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v121, 0, 1, v41);
        goto LABEL_18;
      }
      sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v46 = *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64);
      v47 = v121;
    }
    else
    {
      if (!v44)
      {
        (*(void (**)(char *, char *, uint64_t))(v42 + 40))(v121, v40, v41);
        goto LABEL_18;
      }
      (*(void (**)(char *, uint64_t))(v42 + 8))(v121, v41);
      sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v46 = *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64);
      v47 = v121;
    }
    memcpy(v47, v40, v46);
LABEL_18:
    v4 = v122;
    v49 = v13[8];
    v50 = &v11[v49];
    v51 = (uint64_t *)&v12[v49];
    v53 = *v51;
    v52 = v51[1];
    *(_QWORD *)v50 = v53;
    *((_QWORD *)v50 + 1) = v52;
    swift_bridgeObjectRelease();
    a3 = v128;
    goto LABEL_19;
  }
  if (v16)
  {
LABEL_7:
    sub_1D7ADB344(0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_19;
  }
  v127 = a3;
  *v11 = *v12;
  v17 = v13[5];
  v18 = &v11[v17];
  v19 = &v12[v17];
  v20 = sub_1D7B49408();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
  v21 = v13[6];
  v22 = &v11[v21];
  v23 = &v12[v21];
  *(_QWORD *)v22 = *(_QWORD *)v23;
  v22[8] = v23[8];
  v24 = v13[7];
  v25 = &v11[v24];
  v26 = &v12[v24];
  v27 = sub_1D7B490A8();
  v28 = *(_QWORD *)(v27 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
  {
    sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v25, v26, v27);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  *(_OWORD *)&v11[v13[8]] = *(_OWORD *)&v12[v13[8]];
  a3 = v127;
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v125 + 56))(v11, 0, 1, v13);
LABEL_19:
  v54 = a3[6];
  v55 = (_QWORD *)(a1 + v54);
  v56 = (_QWORD *)((char *)v4 + v54);
  v58 = *v56;
  v57 = v56[1];
  *v55 = v58;
  v55[1] = v57;
  swift_bridgeObjectRelease();
  v59 = a3[7];
  v60 = a1 + v59;
  v61 = (char *)v4 + v59;
  *(_BYTE *)v60 = *((_BYTE *)v4 + v59);
  *(_QWORD *)(v60 + 8) = *(_QWORD *)((char *)v4 + v59 + 8);
  swift_release();
  __src = (int *)type metadata accessor for InstructionsForUseWebViewContainer(0);
  v62 = __src[5];
  v63 = (char *)(v60 + v62);
  v64 = &v61[v62];
  v65 = v14((char *)(v60 + v62), 1, v13);
  v66 = v14(v64, 1, v13);
  if (!v65)
  {
    if (v66)
    {
      sub_1D7AAD1B0((uint64_t)v63, type metadata accessor for ErrorDetails);
      goto LABEL_25;
    }
    v130 = a3;
    v124 = v4;
    *v63 = *v64;
    v82 = v13[5];
    v83 = &v63[v82];
    v84 = &v64[v82];
    v85 = sub_1D7B49408();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v85 - 8) + 40))(v83, v84, v85);
    v86 = v13[6];
    v87 = &v63[v86];
    v88 = &v64[v86];
    *(_QWORD *)v87 = *(_QWORD *)v88;
    v87[8] = v88[8];
    v89 = v13[7];
    v90 = &v63[v89];
    v91 = &v64[v89];
    v92 = sub_1D7B490A8();
    v120 = *(_QWORD *)(v92 - 8);
    v93 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v120 + 48);
    v126 = v90;
    LODWORD(v90) = v93(v90, 1, v92);
    v94 = v93(v91, 1, v92);
    if ((_DWORD)v90)
    {
      if (!v94)
      {
        (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v126, v91, v92);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v126, 0, 1, v92);
        goto LABEL_45;
      }
      sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v96 = *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64);
      v97 = v126;
    }
    else
    {
      if (!v94)
      {
        (*(void (**)(char *, char *, uint64_t))(v120 + 40))(v126, v91, v92);
        goto LABEL_45;
      }
      (*(void (**)(char *, uint64_t))(v120 + 8))(v126, v92);
      sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v96 = *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64);
      v97 = v126;
    }
    memcpy(v97, v91, v96);
LABEL_45:
    v4 = v124;
    a3 = v130;
    v115 = v13[8];
    v116 = &v63[v115];
    v117 = (uint64_t *)&v64[v115];
    v119 = *v117;
    v118 = v117[1];
    *(_QWORD *)v116 = v119;
    *((_QWORD *)v116 + 1) = v118;
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  if (v66)
  {
LABEL_25:
    sub_1D7ADB344(0);
    memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
LABEL_26:
    v81 = __src;
    goto LABEL_32;
  }
  v129 = a3;
  v123 = v4;
  *v63 = *v64;
  v67 = v13[5];
  v68 = &v63[v67];
  v69 = &v64[v67];
  v70 = sub_1D7B49408();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(v68, v69, v70);
  v71 = v13[6];
  v72 = &v63[v71];
  v73 = &v64[v71];
  *(_QWORD *)v72 = *(_QWORD *)v73;
  v72[8] = v73[8];
  v74 = v13[7];
  v75 = &v63[v74];
  v76 = &v64[v74];
  v77 = sub_1D7B490A8();
  v78 = *(_QWORD *)(v77 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48))(v76, 1, v77))
  {
    sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v75, v76, v77);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v75, 0, 1, v77);
  }
  v81 = __src;
  *(_OWORD *)&v63[v13[8]] = *(_OWORD *)&v64[v13[8]];
  v4 = v123;
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v125 + 56))(v63, 0, 1, v13);
  a3 = v129;
LABEL_32:
  sub_1D7AA787C(0, qword_1F01507A0, (uint64_t (*)(uint64_t))sub_1D7ADB344, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDF9A8]);
  *(_QWORD *)&v63[*(int *)(v98 + 28)] = *(_QWORD *)&v64[*(int *)(v98 + 28)];
  swift_release();
  v99 = v81[6];
  v100 = (_QWORD *)(v60 + v99);
  v101 = &v61[v99];
  v103 = *(_QWORD *)v101;
  v102 = *((_QWORD *)v101 + 1);
  *v100 = v103;
  v100[1] = v102;
  swift_bridgeObjectRelease();
  v104 = a3[8];
  v105 = (void *)(a1 + v104);
  v106 = (char *)v4 + v104;
  v107 = sub_1D7B490A8();
  v108 = *(_QWORD *)(v107 - 8);
  v109 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v108 + 48);
  v110 = v109(v105, 1, v107);
  v111 = v109(v106, 1, v107);
  if (!v110)
  {
    if (!v111)
    {
      (*(void (**)(void *, char *, uint64_t))(v108 + 40))(v105, v106, v107);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v108 + 8))(v105, v107);
    goto LABEL_37;
  }
  if (v111)
  {
LABEL_37:
    sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, char *, uint64_t))(v108 + 32))(v105, v106, v107);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v108 + 56))(v105, 0, 1, v107);
  return a1;
}

uint64_t sub_1D7B3BD00()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D7B3BD0C(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1D7AA787C(0, &qword_1F0150788, (uint64_t (*)(uint64_t))sub_1D7ADB344, MEMORY[0x1E0CDFDB8]);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[5];
    }
    else
    {
      v12 = type metadata accessor for InstructionsForUseWebViewContainer(0);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[7];
      }
      else
      {
        sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        v10 = v13;
        v9 = *(_QWORD *)(v13 - 8);
        v11 = a3[8];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1D7B3BE00()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D7B3BE0C(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1D7AA787C(0, &qword_1F0150788, (uint64_t (*)(uint64_t))sub_1D7ADB344, MEMORY[0x1E0CDFDB8]);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[5];
    }
    else
    {
      v12 = type metadata accessor for InstructionsForUseWebViewContainer(0);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[7];
      }
      else
      {
        sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        v10 = v13;
        v9 = *(_QWORD *)(v13 - 8);
        v11 = a4[8];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1D7B3BEFC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1D7AA787C(319, &qword_1F0150788, (uint64_t (*)(uint64_t))sub_1D7ADB344, MEMORY[0x1E0CDFDB8]);
  if (v0 <= 0x3F)
  {
    type metadata accessor for InstructionsForUseWebViewContainer(319);
    if (v1 <= 0x3F)
    {
      sub_1D7AA787C(319, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t *sub_1D7B3BFE0(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1D7B49408();
    (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = a3[6];
    v12 = a3[7];
    v13 = (char *)v4 + v11;
    v14 = (char *)a2 + v11;
    *(_QWORD *)v13 = *(_QWORD *)v14;
    v13[8] = v14[8];
    v15 = (char *)v4 + v12;
    v16 = (char *)a2 + v12;
    v17 = sub_1D7B490A8();
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    v21 = a3[8];
    v22 = (uint64_t *)((char *)v4 + v21);
    v23 = (uint64_t *)((char *)a2 + v21);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1D7B3C148(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1D7B49408();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 28);
  v7 = sub_1D7B490A8();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  return swift_bridgeObjectRelease();
}

_BYTE *sub_1D7B3C1E8(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1D7B49408();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = a3[6];
  v11 = a3[7];
  v12 = &a1[v10];
  v13 = &a2[v10];
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v12[8] = v13[8];
  v14 = &a1[v11];
  v15 = &a2[v11];
  v16 = sub_1D7B490A8();
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v17 + 16))(v14, v15, v16);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  v19 = a3[8];
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  swift_bridgeObjectRetain();
  return a1;
}

_BYTE *sub_1D7B3C324(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(_BYTE *, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1D7B49408();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = *(_QWORD *)v12;
  v11[8] = v12[8];
  *(_QWORD *)v11 = v13;
  v14 = a3[7];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = sub_1D7B490A8();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v18 + 48);
  v20 = v19(v15, 1, v17);
  v21 = v19(v16, 1, v17);
  if (!v20)
  {
    if (!v21)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v18 + 24))(v15, v16, v17);
      goto LABEL_7;
    }
    (*(void (**)(_BYTE *, uint64_t))(v18 + 8))(v15, v17);
    goto LABEL_6;
  }
  if (v21)
  {
LABEL_6:
    sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v18 + 16))(v15, v16, v17);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
LABEL_7:
  v23 = a3[8];
  v24 = &a1[v23];
  v25 = &a2[v23];
  *v24 = *v25;
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_BYTE *sub_1D7B3C4C4(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1D7B49408();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = a3[7];
  v12 = &a1[v10];
  v13 = &a2[v10];
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v12[8] = v13[8];
  v14 = &a1[v11];
  v15 = &a2[v11];
  v16 = sub_1D7B490A8();
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  *(_OWORD *)&a1[a3[8]] = *(_OWORD *)&a2[a3[8]];
  return a1;
}

_BYTE *sub_1D7B3C5F4(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(_BYTE *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1D7B49408();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[6];
  v11 = a3[7];
  v12 = &a1[v10];
  v13 = &a2[v10];
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v12[8] = v13[8];
  v14 = &a1[v11];
  v15 = &a2[v11];
  v16 = sub_1D7B490A8();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v17 + 40))(v14, v15, v16);
      goto LABEL_7;
    }
    (*(void (**)(_BYTE *, uint64_t))(v17 + 8))(v14, v16);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v17 + 32))(v14, v15, v16);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
LABEL_7:
  v22 = a3[8];
  v23 = &a1[v22];
  v24 = (uint64_t *)&a2[v22];
  v26 = *v24;
  v25 = v24[1];
  *v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D7B3C780()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D7B3C78C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v12;

  v6 = sub_1D7B49408();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v7 = *(_QWORD *)(v10 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v10;
    v9 = a3[7];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v12 = *(_QWORD *)(a1 + a3[8] + 8);
  if (v12 >= 0xFFFFFFFF)
    LODWORD(v12) = -1;
  return (v12 + 1);
}

uint64_t sub_1D7B3C84C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1D7B3C858(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v8 = sub_1D7B49408();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = a4[5];
LABEL_5:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
    return;
  }
  sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v9 = *(_QWORD *)(v12 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v12;
    v11 = a4[7];
    goto LABEL_5;
  }
  *(_QWORD *)(a1 + a4[8] + 8) = (a2 - 1);
}

void sub_1D7B3C914()
{
  unint64_t v0;
  unint64_t v1;

  sub_1D7B49408();
  if (v0 <= 0x3F)
  {
    sub_1D7AA787C(319, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *sub_1D7B3C9CC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  int *v10;
  uint64_t v11;
  unsigned int (*v12)(_BYTE *, uint64_t, int *);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  void (*v31)(_BYTE *, _QWORD, uint64_t, int *);
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  _BYTE *__dst;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    a1[1] = a2[1];
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = (int *)type metadata accessor for ErrorDetails(0);
    v11 = *((_QWORD *)v10 - 1);
    v12 = *(unsigned int (**)(_BYTE *, uint64_t, int *))(v11 + 48);
    swift_retain();
    if (v12(v9, 1, v10))
    {
      sub_1D7ADB344(0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      *v8 = *v9;
      v15 = v10[5];
      v16 = &v8[v15];
      v17 = &v9[v15];
      v18 = sub_1D7B49408();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
      v19 = v10[6];
      v20 = &v8[v19];
      v21 = &v9[v19];
      *(_QWORD *)v20 = *(_QWORD *)v21;
      v20[8] = v21[8];
      v22 = v10[7];
      __dst = &v8[v22];
      v23 = &v9[v22];
      v24 = sub_1D7B490A8();
      v25 = *(_QWORD *)(v24 - 8);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
      {
        sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(__dst, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v25 + 16))(__dst, v23, v24);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v25 + 56))(__dst, 0, 1, v24);
      }
      v27 = v10[8];
      v28 = &v8[v27];
      v29 = &v9[v27];
      v30 = v29[1];
      *v28 = *v29;
      v28[1] = v30;
      v31 = *(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v11 + 56);
      swift_bridgeObjectRetain();
      v31(v8, 0, 1, v10);
    }
    sub_1D7AA787C(0, qword_1F01507A0, (uint64_t (*)(uint64_t))sub_1D7ADB344, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDF9A8]);
    *(_QWORD *)&v8[*(int *)(v32 + 28)] = *(_QWORD *)&v9[*(int *)(v32 + 28)];
    v33 = *(int *)(a3 + 24);
    v34 = (uint64_t *)((char *)v4 + v33);
    v35 = (uint64_t *)((char *)a2 + v33);
    v36 = v35[1];
    *v34 = *v35;
    v34[1] = v36;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1D7B3CC1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for ErrorDetails(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    v6 = v4 + *(int *)(v5 + 20);
    v7 = sub_1D7B49408();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
    v8 = v4 + *(int *)(v5 + 28);
    v9 = sub_1D7B490A8();
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    swift_bridgeObjectRelease();
  }
  sub_1D7AA787C(0, qword_1F01507A0, (uint64_t (*)(uint64_t))sub_1D7ADB344, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDF9A8]);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D7B3CD38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  int *v9;
  uint64_t v10;
  unsigned int (*v11)(_BYTE *, uint64_t, int *);
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  void (*v29)(_BYTE *, _QWORD, uint64_t, int *);
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  _BYTE *__dst;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v6 = *(int *)(a3 + 20);
  v7 = (_BYTE *)(a1 + v6);
  v8 = (_BYTE *)(a2 + v6);
  v9 = (int *)type metadata accessor for ErrorDetails(0);
  v10 = *((_QWORD *)v9 - 1);
  v11 = *(unsigned int (**)(_BYTE *, uint64_t, int *))(v10 + 48);
  swift_retain();
  if (v11(v8, 1, v9))
  {
    sub_1D7ADB344(0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    v13 = v9[5];
    v14 = &v7[v13];
    v15 = &v8[v13];
    v16 = sub_1D7B49408();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    v17 = v9[6];
    v18 = &v7[v17];
    v19 = &v8[v17];
    *(_QWORD *)v18 = *(_QWORD *)v19;
    v18[8] = v19[8];
    v20 = v9[7];
    __dst = &v7[v20];
    v21 = &v8[v20];
    v22 = sub_1D7B490A8();
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
      sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(__dst, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v23 + 16))(__dst, v21, v22);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v23 + 56))(__dst, 0, 1, v22);
    }
    v25 = v9[8];
    v26 = &v7[v25];
    v27 = &v8[v25];
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    v29 = *(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v10 + 56);
    swift_bridgeObjectRetain();
    v29(v7, 0, 1, v9);
  }
  sub_1D7AA787C(0, qword_1F01507A0, (uint64_t (*)(uint64_t))sub_1D7ADB344, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDF9A8]);
  *(_QWORD *)&v7[*(int *)(v30 + 28)] = *(_QWORD *)&v8[*(int *)(v30 + 28)];
  v31 = *(int *)(a3 + 24);
  v32 = (_QWORD *)(a1 + v31);
  v33 = (_QWORD *)(a2 + v31);
  v34 = v33[1];
  *v32 = *v33;
  v32[1] = v34;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D7B3CF5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  int *v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, uint64_t, int *);
  int v12;
  int v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(_BYTE *, uint64_t, uint64_t);
  int v43;
  uint64_t v44;
  size_t v45;
  void *v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  void (*v50)(_BYTE *, _QWORD, uint64_t, int *);
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  void *v60;
  uint64_t v61;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  v6 = *(int *)(a3 + 20);
  v7 = (_BYTE *)(a1 + v6);
  v8 = (_BYTE *)(a2 + v6);
  v9 = (int *)type metadata accessor for ErrorDetails(0);
  v10 = *((_QWORD *)v9 - 1);
  v11 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_1D7AAD1B0((uint64_t)v7, type metadata accessor for ErrorDetails);
      goto LABEL_7;
    }
    v61 = a3;
    *v7 = *v8;
    v29 = v9[5];
    v30 = &v7[v29];
    v31 = &v8[v29];
    v32 = sub_1D7B49408();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v32 - 8) + 24))(v30, v31, v32);
    v33 = v9[6];
    v34 = &v7[v33];
    v35 = &v8[v33];
    v36 = *(_QWORD *)v35;
    v34[8] = v35[8];
    *(_QWORD *)v34 = v36;
    v37 = v9[7];
    v38 = &v7[v37];
    v39 = &v8[v37];
    v40 = sub_1D7B490A8();
    v41 = *(_QWORD *)(v40 - 8);
    v42 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v41 + 48);
    v60 = v38;
    LODWORD(v38) = v42(v38, 1, v40);
    v43 = v42(v39, 1, v40);
    if ((_DWORD)v38)
    {
      if (!v43)
      {
        (*(void (**)(void *, _BYTE *, uint64_t))(v41 + 16))(v60, v39, v40);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v60, 0, 1, v40);
        goto LABEL_18;
      }
      sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v45 = *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64);
      v46 = v60;
    }
    else
    {
      if (!v43)
      {
        (*(void (**)(void *, _BYTE *, uint64_t))(v41 + 24))(v60, v39, v40);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v41 + 8))(v60, v40);
      sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v45 = *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64);
      v46 = v60;
    }
    memcpy(v46, v39, v45);
LABEL_18:
    v52 = v9[8];
    v53 = &v7[v52];
    v54 = &v8[v52];
    *v53 = *v54;
    v53[1] = v54[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
LABEL_19:
    a3 = v61;
    goto LABEL_20;
  }
  if (!v13)
  {
    v61 = a3;
    *v7 = *v8;
    v14 = v9[5];
    v15 = &v7[v14];
    v16 = &v8[v14];
    v17 = sub_1D7B49408();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    v18 = v9[6];
    v19 = &v7[v18];
    v20 = &v8[v18];
    v21 = *(_QWORD *)v20;
    v19[8] = v20[8];
    *(_QWORD *)v19 = v21;
    v22 = v9[7];
    v23 = &v7[v22];
    v24 = &v8[v22];
    v25 = sub_1D7B490A8();
    v26 = *(_QWORD *)(v25 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    {
      sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v26 + 16))(v23, v24, v25);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    }
    v47 = v9[8];
    v48 = &v7[v47];
    v49 = &v8[v47];
    *v48 = *v49;
    v48[1] = v49[1];
    v50 = *(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v10 + 56);
    swift_bridgeObjectRetain();
    v50(v7, 0, 1, v9);
    goto LABEL_19;
  }
LABEL_7:
  sub_1D7ADB344(0);
  memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
LABEL_20:
  sub_1D7AA787C(0, qword_1F01507A0, (uint64_t (*)(uint64_t))sub_1D7ADB344, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDF9A8]);
  *(_QWORD *)&v7[*(int *)(v55 + 28)] = *(_QWORD *)&v8[*(int *)(v55 + 28)];
  swift_retain();
  swift_release();
  v56 = *(int *)(a3 + 24);
  v57 = (_QWORD *)(a1 + v56);
  v58 = (_QWORD *)(a2 + v56);
  *v57 = *v58;
  v57[1] = v58[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1D7B3D374(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *__dst;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = (int *)type metadata accessor for ErrorDetails(0);
  v10 = *((_QWORD *)v9 - 1);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
  {
    sub_1D7ADB344(0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    v12 = v9[5];
    v13 = &v7[v12];
    v14 = &v8[v12];
    v15 = sub_1D7B49408();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    v16 = v9[6];
    v17 = &v7[v16];
    v18 = &v8[v16];
    *(_QWORD *)v17 = *(_QWORD *)v18;
    v17[8] = v18[8];
    v19 = v9[7];
    __dst = &v7[v19];
    v20 = &v8[v19];
    v21 = sub_1D7B490A8();
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(__dst, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v22 + 32))(__dst, v20, v21);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
    }
    *(_OWORD *)&v7[v9[8]] = *(_OWORD *)&v8[v9[8]];
    (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
  }
  sub_1D7AA787C(0, qword_1F01507A0, (uint64_t (*)(uint64_t))sub_1D7ADB344, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDF9A8]);
  *(_QWORD *)&v7[*(int *)(v24 + 28)] = *(_QWORD *)&v8[*(int *)(v24 + 28)];
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1D7B3D568(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  int *v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, uint64_t, int *);
  int v12;
  int v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  _BYTE *v33;
  uint64_t v34;
  _BYTE *v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t (*v38)(_BYTE *, uint64_t, uint64_t);
  int v39;
  uint64_t v40;
  size_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  _BYTE *__dst;
  void *__dsta;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  v6 = *(int *)(a3 + 20);
  v7 = (_BYTE *)(a1 + v6);
  v8 = (_BYTE *)(a2 + v6);
  v9 = (int *)type metadata accessor for ErrorDetails(0);
  v10 = *((_QWORD *)v9 - 1);
  v11 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_1D7AAD1B0((uint64_t)v7, type metadata accessor for ErrorDetails);
      goto LABEL_7;
    }
    *v7 = *v8;
    v27 = v9[5];
    v28 = &v7[v27];
    v29 = &v8[v27];
    v30 = sub_1D7B49408();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
    v31 = v9[6];
    v32 = &v7[v31];
    v33 = &v8[v31];
    *(_QWORD *)v32 = *(_QWORD *)v33;
    v32[8] = v33[8];
    v34 = v9[7];
    v35 = &v7[v34];
    v36 = &v8[v34];
    v37 = sub_1D7B490A8();
    v56 = *(_QWORD *)(v37 - 8);
    v38 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v56 + 48);
    __dsta = v35;
    LODWORD(v35) = v38(v35, 1, v37);
    v39 = v38(v36, 1, v37);
    if ((_DWORD)v35)
    {
      if (!v39)
      {
        (*(void (**)(void *, _BYTE *, uint64_t))(v56 + 32))(__dsta, v36, v37);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v56 + 56))(__dsta, 0, 1, v37);
        goto LABEL_18;
      }
      sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v41 = *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64);
      v42 = __dsta;
    }
    else
    {
      if (!v39)
      {
        (*(void (**)(void *, _BYTE *, uint64_t))(v56 + 40))(__dsta, v36, v37);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v56 + 8))(__dsta, v37);
      sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v41 = *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64);
      v42 = __dsta;
    }
    memcpy(v42, v36, v41);
LABEL_18:
    v44 = v9[8];
    v45 = &v7[v44];
    v46 = (uint64_t *)&v8[v44];
    v48 = *v46;
    v47 = v46[1];
    *v45 = v48;
    v45[1] = v47;
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  if (v13)
  {
LABEL_7:
    sub_1D7ADB344(0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_19;
  }
  *v7 = *v8;
  v14 = v9[5];
  v15 = &v7[v14];
  v16 = &v8[v14];
  v17 = sub_1D7B49408();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  v18 = v9[6];
  v19 = &v7[v18];
  v20 = &v8[v18];
  *(_QWORD *)v19 = *(_QWORD *)v20;
  v19[8] = v20[8];
  v21 = v9[7];
  __dst = &v7[v21];
  v22 = &v8[v21];
  v23 = sub_1D7B490A8();
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(__dst, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v24 + 32))(__dst, v22, v23);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v23);
  }
  *(_OWORD *)&v7[v9[8]] = *(_OWORD *)&v8[v9[8]];
  (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
LABEL_19:
  sub_1D7AA787C(0, qword_1F01507A0, (uint64_t (*)(uint64_t))sub_1D7ADB344, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDF9A8]);
  *(_QWORD *)&v7[*(int *)(v49 + 28)] = *(_QWORD *)&v8[*(int *)(v49 + 28)];
  swift_release();
  v50 = *(int *)(a3 + 24);
  v51 = (_QWORD *)(a1 + v50);
  v52 = (uint64_t *)(a2 + v50);
  v54 = *v52;
  v53 = v52[1];
  *v51 = v54;
  v51[1] = v53;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D7B3D944()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D7B3D950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  sub_1D7AA787C(0, qword_1F01507A0, (uint64_t (*)(uint64_t))sub_1D7ADB344, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDF9A8]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1D7B3D9EC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1D7B3D9F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  sub_1D7AA787C(0, qword_1F01507A0, (uint64_t (*)(uint64_t))sub_1D7ADB344, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDF9A8]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, v8);
  else
    *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
}

void sub_1D7B3DA90()
{
  unint64_t v0;

  sub_1D7AA787C(319, qword_1F01507A0, (uint64_t (*)(uint64_t))sub_1D7ADB344, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CDF9A8]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1D7B3DB24()
{
  return MEMORY[0x1E0CE0788];
}

id sub_1D7B3DB30()
{
  id v0;
  void *v2;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CEF630]), sel_init);
  objc_msgSend(v0, sel_setAllowsBackForwardNavigationGestures_, 1);
  sub_1D7B3E138();
  sub_1D7B49CCC();
  objc_msgSend(v0, sel_setNavigationDelegate_, v2);

  return v0;
}

uint64_t sub_1D7B3DBBC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  objc_class *v11;
  id v12;
  id v13;
  uint64_t result;
  objc_super v15;

  v5 = type metadata accessor for InstructionsForUseWebViewContainer(0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D7AAD16C(v2, (uint64_t)v10, type metadata accessor for InstructionsForUseWebView);
  sub_1D7AAD16C(v2 + *(int *)(a1 + 28), (uint64_t)v8, type metadata accessor for InstructionsForUseWebViewContainer);
  v11 = (objc_class *)type metadata accessor for InstructionsForUseWebView.Coordinator(0);
  v12 = objc_allocWithZone(v11);
  sub_1D7AAD16C((uint64_t)v10, (uint64_t)v12+ OBJC_IVAR____TtCV8HealthUIP33_9391128D22BBD0797A4FA47559946E1D25InstructionsForUseWebView11Coordinator_parent, type metadata accessor for InstructionsForUseWebView);
  sub_1D7AAD16C((uint64_t)v8, (uint64_t)v12+ OBJC_IVAR____TtCV8HealthUIP33_9391128D22BBD0797A4FA47559946E1D25InstructionsForUseWebView11Coordinator_container, type metadata accessor for InstructionsForUseWebViewContainer);
  v15.receiver = v12;
  v15.super_class = v11;
  v13 = objc_msgSendSuper2(&v15, sel_init);
  sub_1D7AAD1B0((uint64_t)v8, type metadata accessor for InstructionsForUseWebViewContainer);
  result = sub_1D7AAD1B0((uint64_t)v10, type metadata accessor for InstructionsForUseWebView);
  *a2 = v13;
  return result;
}

uint64_t sub_1D7B3DD10()
{
  return sub_1D7B49B7C();
}

uint64_t sub_1D7B3DD50()
{
  sub_1D7AA76D4(qword_1F0150A08, type metadata accessor for InstructionsForUseWebView, (uint64_t)&unk_1D7B86EC0);
  return sub_1D7B49BDC();
}

uint64_t sub_1D7B3DDB8()
{
  sub_1D7AA76D4(qword_1F0150A08, type metadata accessor for InstructionsForUseWebView, (uint64_t)&unk_1D7B86EC0);
  return sub_1D7B49B88();
}

void sub_1D7B3DE20()
{
  sub_1D7AA76D4(qword_1F0150A08, type metadata accessor for InstructionsForUseWebView, (uint64_t)&unk_1D7B86EC0);
  sub_1D7B49BD0();
  __break(1u);
}

uint64_t sub_1D7B3DE5C()
{
  return sub_1D7AA76D4(&qword_1F0150980, type metadata accessor for InstructionsForUseWebView, (uint64_t)&unk_1D7B86E70);
}

uint64_t sub_1D7B3DE88()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for InstructionsForUseWebViewError(uint64_t a1)
{
  return sub_1D7ACDAE8(a1, qword_1F0150A68);
}

void sub_1D7B3DEAC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = type metadata accessor for InstructionsForUseWebViewError(255);
    v7 = a3(a1, v6, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1D7B3DF08()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1F01509A8;
  if (!qword_1F01509A8)
  {
    sub_1D7B3DEAC(255, &qword_1F0150990, MEMORY[0x1E0CDB880]);
    v2 = v1;
    v3[0] = sub_1D7AA76D4(&qword_1F01509B0, type metadata accessor for InstructionsForUseWebViewError, (uint64_t)&unk_1D7B870E4);
    v3[1] = v3[0];
    result = MEMORY[0x1D829FF28](MEMORY[0x1E0CDB8A0], v2, v3);
    atomic_store(result, (unint64_t *)&qword_1F01509A8);
  }
  return result;
}

uint64_t sub_1D7B3DF90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D7B3DEAC(0, &qword_1F0150990, MEMORY[0x1E0CDB880]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D7B3DFE4(uint64_t a1)
{
  uint64_t v2;

  sub_1D7B3DEAC(0, &qword_1F0150990, MEMORY[0x1E0CDB880]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D7B3E030(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ErrorDetails(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1D7B3E074()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1F01509B8)
  {
    sub_1D7AA787C(255, (unint64_t *)&unk_1F01509C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0C48], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1F01509B8);
  }
}

uint64_t sub_1D7B3E0EC(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void sub_1D7B3E138()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F0150A00)
  {
    type metadata accessor for InstructionsForUseWebView(255);
    sub_1D7AA76D4(qword_1F0150A08, type metadata accessor for InstructionsForUseWebView, (uint64_t)&unk_1D7B86EC0);
    v0 = sub_1D7B49CD8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F0150A00);
  }
}

id sub_1D7B3E1B0@<X0>(char *a1@<X0>, void *a2@<X8>)
{
  char v3;
  __int128 v4;
  char v5;
  uint64_t v6;
  uint64_t KeyPath;
  char v8;
  id result;
  void *v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[161];
  __int128 v25;
  _BYTE v26[32];
  _BYTE v27[32];
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  char v32;
  _OWORD v33[14];
  __int128 v34;
  _OWORD __src[26];
  _OWORD v36[16];
  _QWORD v37[2];
  char v38;
  __int128 v39;
  char v40;
  uint64_t v41;
  __int128 v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  __int128 v48;
  __int128 v49;
  char v50;
  _BYTE v51[264];
  char v52;
  char v53;
  char v54;
  char v55;

  v23 = sub_1D7B49B1C();
  sub_1D7B3E5E0(a1, (uint64_t)__src);
  v21 = __src[0];
  v3 = __src[1];
  v22 = *((_QWORD *)&__src[1] + 1);
  v4 = __src[2];
  v5 = __src[3];
  v6 = *((_QWORD *)&__src[3] + 1);
  KeyPath = swift_getKeyPath();
  v8 = sub_1D7B49D38();
  v55 = 0;
  v54 = v3;
  v53 = v5;
  v52 = 1;
  result = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (result)
  {
    v10 = result;
    v19 = v8;
    v11 = objc_msgSend(result, sel_isAppleInternalInstall);

    v12 = KeyPath;
    if (v11)
    {
      v13 = sub_1D7B49B1C();
      sub_1D7B3E8F4(a1, (uint64_t)v33);
      *(_OWORD *)((char *)&v36[11] + 7) = v33[11];
      *(_OWORD *)((char *)&v36[12] + 7) = v33[12];
      *(_OWORD *)((char *)&v36[13] + 7) = v33[13];
      *(_OWORD *)((char *)&v36[14] + 7) = v34;
      *(_OWORD *)((char *)&v36[7] + 7) = v33[7];
      *(_OWORD *)((char *)&v36[8] + 7) = v33[8];
      *(_OWORD *)((char *)&v36[9] + 7) = v33[9];
      *(_OWORD *)((char *)&v36[10] + 7) = v33[10];
      *(_OWORD *)((char *)&v36[3] + 7) = v33[3];
      *(_OWORD *)((char *)&v36[4] + 7) = v33[4];
      *(_OWORD *)((char *)&v36[5] + 7) = v33[5];
      *(_OWORD *)((char *)&v36[6] + 7) = v33[6];
      *(_OWORD *)((char *)v36 + 7) = v33[0];
      *(_OWORD *)((char *)&v36[1] + 7) = v33[1];
      *(_OWORD *)((char *)&v36[2] + 7) = v33[2];
      *(_OWORD *)((char *)&__src[13] + 1) = v36[12];
      *(_OWORD *)((char *)&__src[14] + 1) = v36[13];
      *(_OWORD *)((char *)&__src[15] + 1) = v36[14];
      *(_OWORD *)((char *)&__src[9] + 1) = v36[8];
      *(_OWORD *)((char *)&__src[10] + 1) = v36[9];
      *(_OWORD *)((char *)&__src[11] + 1) = v36[10];
      *(_OWORD *)((char *)&__src[12] + 1) = v36[11];
      *(_OWORD *)((char *)&__src[5] + 1) = v36[4];
      *(_OWORD *)((char *)&__src[6] + 1) = v36[5];
      *(_OWORD *)((char *)&__src[7] + 1) = v36[6];
      *(_OWORD *)((char *)&__src[8] + 1) = v36[7];
      *(_OWORD *)((char *)&__src[1] + 1) = v36[0];
      *(_OWORD *)((char *)&__src[2] + 1) = v36[1];
      *(_OWORD *)((char *)&__src[3] + 1) = v36[2];
      v24[0] = 1;
      __src[0] = (unint64_t)v13;
      LOBYTE(__src[1]) = 1;
      *(_QWORD *)&__src[16] = *((_QWORD *)&v34 + 1);
      *(_OWORD *)((char *)&__src[4] + 1) = v36[3];
      nullsub_1(__src);
    }
    else
    {
      sub_1D7B3FE40((uint64_t)__src);
    }
    sub_1D7B3FE6C((uint64_t)__src, (uint64_t)v51);
    v14 = v55;
    v15 = v54;
    v16 = v53;
    v18 = v53;
    v17 = v52;
    sub_1D7B3FE6C((uint64_t)v51, (uint64_t)v24);
    *(_QWORD *)&v25 = v23;
    *((_QWORD *)&v25 + 1) = 0x4024000000000000;
    v26[0] = v14;
    *(_OWORD *)&v26[8] = v21;
    v26[24] = v15;
    *(_QWORD *)v27 = v22;
    *(_OWORD *)&v27[8] = v4;
    v27[24] = v16;
    *(_QWORD *)&v28 = v6;
    *((_QWORD *)&v28 + 1) = v12;
    LOBYTE(v29) = 1;
    BYTE8(v29) = v19;
    v30 = 0u;
    v31 = 0u;
    v32 = v17;
    sub_1D7B3FE6C((uint64_t)v24, (uint64_t)v33);
    __src[6] = v29;
    __src[7] = v30;
    __src[8] = v31;
    LOBYTE(__src[9]) = v32;
    __src[2] = *(_OWORD *)&v26[16];
    __src[3] = *(_OWORD *)v27;
    __src[4] = *(_OWORD *)&v27[16];
    __src[5] = v28;
    __src[0] = v25;
    __src[1] = *(_OWORD *)v26;
    sub_1D7B3FE6C((uint64_t)v33, (uint64_t)&__src[9] + 8);
    memcpy(a2, __src, 0x1A0uLL);
    sub_1D7B3FE6C((uint64_t)v24, (uint64_t)v36);
    sub_1D7B400B4((uint64_t)&v25);
    sub_1D7B401B4((uint64_t)v33, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D7B40134);
    sub_1D7B401B4((uint64_t)v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D7B40230);
    v37[0] = v23;
    v37[1] = 0x4024000000000000;
    v38 = v14;
    v39 = v21;
    v40 = v15;
    v41 = v22;
    v42 = v4;
    v43 = v18;
    v44 = v6;
    v45 = v12;
    v46 = 1;
    v47 = v19;
    v48 = 0u;
    v49 = 0u;
    v50 = v17;
    return (id)sub_1D7B402B0((uint64_t)v37);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D7B3E5E0@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  sub_1D7B38180(*a1);
  sub_1D7ABCCEC();
  v3 = sub_1D7B49EB8();
  v5 = v4;
  v7 = v6 & 1;
  sub_1D7B49DEC();
  v8 = sub_1D7B49E88();
  v10 = v9;
  v12 = v11;
  swift_release();
  sub_1D7AACF84(v3, v5, v7);
  swift_bridgeObjectRelease();
  sub_1D7B49FD8();
  v13 = sub_1D7B49E70();
  v38 = v14;
  v39 = v13;
  v16 = v15;
  v40 = v17;
  swift_release();
  sub_1D7AACF84(v8, v10, v12 & 1);
  swift_bridgeObjectRelease();
  sub_1D7B4A7DC();
  swift_bridgeObjectRelease();
  if (qword_1F014CF90 != -1)
    swift_once();
  v37 = v16 & 1;
  v18 = (id)qword_1F0154598;
  sub_1D7B48F7C();

  v19 = sub_1D7B49EB8();
  v21 = v20;
  v23 = v22 & 1;
  sub_1D7B49D74();
  v24 = sub_1D7B49E88();
  v26 = v25;
  v28 = v27;
  swift_release();
  sub_1D7AACF84(v19, v21, v23);
  swift_bridgeObjectRelease();
  sub_1D7B49FD8();
  v29 = sub_1D7B49E70();
  v31 = v30;
  v33 = v32;
  v35 = v34;
  swift_release();
  sub_1D7AACF84(v24, v26, v28 & 1);
  swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v39;
  *(_QWORD *)(a2 + 8) = v38;
  *(_BYTE *)(a2 + 16) = v37;
  *(_QWORD *)(a2 + 24) = v40;
  *(_QWORD *)(a2 + 32) = v29;
  *(_QWORD *)(a2 + 40) = v31;
  *(_BYTE *)(a2 + 48) = v33 & 1;
  *(_QWORD *)(a2 + 56) = v35;
  sub_1D7ABF0C8(v39, v38, v37);
  swift_bridgeObjectRetain();
  sub_1D7ABF0C8(v29, v31, v33 & 1);
  swift_bridgeObjectRetain();
  sub_1D7AACF84(v29, v31, v33 & 1);
  swift_bridgeObjectRelease();
  sub_1D7AACF84(v39, v38, v37);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D7B3E8F4@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t KeyPath;
  char v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  _BYTE *v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  char v50;
  _BYTE v51[7];
  _BYTE v52[7];
  _OWORD v53[9];
  _OWORD v54[3];
  __int128 v55;
  __int128 v56;
  _BYTE v57[231];
  char v58;
  _OWORD v59[9];
  char v60;
  _BYTE v61[7];
  __int128 v62;
  __int128 v63;
  char v64;
  _BYTE v65[7];
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v40 - v6;
  *(_QWORD *)v57 = 0;
  *(_QWORD *)&v57[8] = 0xE000000000000000;
  sub_1D7B4A7DC();
  v70 = *(_QWORD *)v57;
  v71 = *(_QWORD *)&v57[8];
  sub_1D7B4A41C();
  v8 = type metadata accessor for ErrorDetails(0);
  swift_bridgeObjectRetain();
  sub_1D7B4A41C();
  swift_bridgeObjectRelease();
  sub_1D7B4A41C();
  v9 = *(int *)(v8 + 28);
  v40 = a1;
  sub_1D7B0C8A8((uint64_t)&a1[v9], (uint64_t)v7, &qword_1F014E400, v4);
  v10 = sub_1D7B490A8();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10) == 1)
  {
    sub_1D7B0EDDC((uint64_t)v7, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  }
  else
  {
    sub_1D7B49078();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v7, v10);
  }
  sub_1D7B4A41C();
  swift_bridgeObjectRelease();
  sub_1D7B4A41C();
  v12 = v40;
  v57[0] = *v40;
  sub_1D7B4A3E0();
  sub_1D7B4A41C();
  swift_bridgeObjectRelease();
  sub_1D7B4A41C();
  *(_QWORD *)v57 = sub_1D7B493FC();
  sub_1D7B40330();
  sub_1D7B4A764();
  sub_1D7B4A41C();
  swift_bridgeObjectRelease();
  sub_1D7B4A41C();
  v13 = &v12[*(int *)(v8 + 24)];
  if ((v13[8] & 1) == 0)
  {
    *(_QWORD *)v57 = *(_QWORD *)v13;
    sub_1D7B4A764();
  }
  sub_1D7B4A41C();
  swift_bridgeObjectRelease();
  v15 = v70;
  v14 = v71;
  v16 = sub_1D7B4A128();
  sub_1D7AFE81C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v41, 0.0, 1, 0.0, 1, v16, v17, v15, v14, 0, MEMORY[0x1E0DEE9D8]);
  swift_bridgeObjectRelease();
  LOBYTE(v14) = sub_1D7B49D38();
  v50 = 1;
  v18 = sub_1D7B49E1C();
  KeyPath = swift_getKeyPath();
  v20 = v50;
  v21 = sub_1D7B49FD8();
  v22 = swift_getKeyPath();
  v23 = v46;
  v53[5] = v46;
  v24 = v47;
  v53[6] = v47;
  v25 = v48;
  v53[7] = v48;
  v26 = v49;
  v53[8] = v49;
  v27 = v42;
  v53[1] = v42;
  v28 = v43;
  v53[2] = v43;
  v29 = v44;
  v53[3] = v44;
  v30 = v45;
  v53[4] = v45;
  v31 = v41;
  v53[0] = v41;
  LOBYTE(v54[0]) = v14;
  *(_DWORD *)((char *)v54 + 1) = *(_DWORD *)v51;
  DWORD1(v54[0]) = *(_DWORD *)&v51[3];
  *(_OWORD *)((char *)v54 + 8) = 0u;
  *(_OWORD *)((char *)&v54[1] + 8) = 0u;
  BYTE8(v54[2]) = v20;
  HIDWORD(v54[2]) = *(_DWORD *)&v52[3];
  *(_DWORD *)((char *)&v54[2] + 9) = *(_DWORD *)v52;
  *(_QWORD *)&v55 = KeyPath;
  *((_QWORD *)&v55 + 1) = v18;
  *(_QWORD *)&v56 = v22;
  *((_QWORD *)&v56 + 1) = v21;
  *(_OWORD *)&v57[167] = v54[1];
  *(_OWORD *)&v57[199] = v55;
  *(_OWORD *)&v57[215] = v56;
  *(_OWORD *)&v57[103] = v47;
  *(_OWORD *)&v57[119] = v48;
  *(_OWORD *)&v57[135] = v49;
  *(_OWORD *)&v57[39] = v43;
  *(_OWORD *)&v57[55] = v44;
  *(_OWORD *)&v57[71] = v45;
  *(_OWORD *)&v57[87] = v46;
  *(_OWORD *)&v57[7] = v41;
  *(_OWORD *)&v57[23] = v42;
  *(_OWORD *)&v57[183] = v54[2];
  *(_OWORD *)&v57[151] = v54[0];
  v32 = *(_OWORD *)&v57[160];
  *(_OWORD *)(a2 + 185) = *(_OWORD *)&v57[176];
  v33 = *(_OWORD *)&v57[208];
  *(_OWORD *)(a2 + 201) = *(_OWORD *)&v57[192];
  *(_OWORD *)(a2 + 217) = v33;
  v34 = *(_OWORD *)&v57[96];
  *(_OWORD *)(a2 + 121) = *(_OWORD *)&v57[112];
  v35 = *(_OWORD *)&v57[144];
  *(_OWORD *)(a2 + 137) = *(_OWORD *)&v57[128];
  *(_OWORD *)(a2 + 153) = v35;
  *(_OWORD *)(a2 + 169) = v32;
  v36 = *(_OWORD *)&v57[32];
  *(_OWORD *)(a2 + 57) = *(_OWORD *)&v57[48];
  v37 = *(_OWORD *)&v57[80];
  *(_OWORD *)(a2 + 73) = *(_OWORD *)&v57[64];
  *(_OWORD *)(a2 + 89) = v37;
  *(_OWORD *)(a2 + 105) = v34;
  v38 = *(_OWORD *)&v57[16];
  *(_OWORD *)(a2 + 9) = *(_OWORD *)v57;
  *(_OWORD *)(a2 + 25) = v38;
  *(_OWORD *)(a2 + 41) = v36;
  v59[6] = v24;
  v59[7] = v25;
  v59[8] = v26;
  v59[2] = v28;
  v59[3] = v29;
  v59[4] = v30;
  v59[5] = v23;
  *(_DWORD *)v65 = *(_DWORD *)v52;
  *(_DWORD *)&v65[3] = *(_DWORD *)&v52[3];
  v58 = 1;
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = 1;
  *(_QWORD *)(a2 + 232) = *(_QWORD *)&v57[223];
  v59[0] = v31;
  v59[1] = v27;
  v60 = v14;
  *(_DWORD *)v61 = *(_DWORD *)v51;
  *(_DWORD *)&v61[3] = *(_DWORD *)&v51[3];
  v62 = 0u;
  v63 = 0u;
  v64 = v20;
  v66 = KeyPath;
  v67 = v18;
  v68 = v22;
  v69 = v21;
  sub_1D7B40384((uint64_t)v53);
  return sub_1D7B403F8((uint64_t)v59);
}

void *sub_1D7B3EE7C@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE __src[424];

  v3 = sub_1D7B4A11C();
  v5 = v4;
  sub_1D7B3E1B0(v1, __src);
  *a1 = v3;
  a1[1] = v5;
  return memcpy(a1 + 2, __src, 0x1A0uLL);
}

void sub_1D7B3EED4(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v25 - v9;
  v11 = type metadata accessor for InstructionsForUseWebView(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = objc_msgSend(a2, sel_response);
  objc_opt_self();
  v15 = (void *)swift_dynamicCastObjCClass();
  if (v15 && (v16 = v15, (uint64_t)objc_msgSend(v15, sel_statusCode) >= 400))
  {
    v17 = a3
        + OBJC_IVAR____TtCV8HealthUIP33_9391128D22BBD0797A4FA47559946E1D25InstructionsForUseWebView11Coordinator_parent;
    sub_1D7AAD16C(v17, (uint64_t)v13, type metadata accessor for InstructionsForUseWebView);
    v18 = (uint64_t *)(v17 + *(int *)(v11 + 24));
    v19 = *v18;
    v20 = v18[1];
    v21 = objc_msgSend(a1, sel_URL);
    if (v21)
    {
      v22 = v21;
      sub_1D7B49090();

      v23 = sub_1D7B490A8();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v10, 0, 1, v23);
    }
    else
    {
      v24 = sub_1D7B490A8();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v10, 1, 1, v24);
    }
    sub_1D7B3927C(0, v19, v20, (uint64_t)v10, (uint64_t)objc_msgSend(v16, sel_statusCode), 0);
    sub_1D7B0EDDC((uint64_t)v10, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    sub_1D7AAD1B0((uint64_t)v13, type metadata accessor for InstructionsForUseWebView);
    (*(void (**)(uint64_t, _QWORD))(a4 + 16))(a4, 0);

  }
  else
  {

    (*(void (**)(uint64_t, uint64_t))(a4 + 16))(a4, 1);
  }
}

uint64_t *sub_1D7B3F11C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;

  v4 = type metadata accessor for ErrorDetails(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = (int *)v4;
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = *(int *)(v4 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1D7B49408();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = v6[6];
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    *(_QWORD *)v12 = *(_QWORD *)v13;
    v12[8] = v13[8];
    v14 = v6[7];
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = sub_1D7B490A8();
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    v21 = v6[8];
    v22 = (uint64_t *)((char *)a1 + v21);
    v23 = (uint64_t *)((char *)a2 + v21);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1D7B3F290(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = type metadata accessor for ErrorDetails(0);
  v3 = a1 + *(int *)(v2 + 20);
  v4 = sub_1D7B49408();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = a1 + *(int *)(v2 + 28);
  v6 = sub_1D7B490A8();
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  return swift_bridgeObjectRelease();
}

_BYTE *sub_1D7B3F338(_BYTE *a1, _BYTE *a2)
{
  int *v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;

  *a1 = *a2;
  v4 = (int *)type metadata accessor for ErrorDetails(0);
  v5 = v4[5];
  v6 = &a1[v5];
  v7 = &a2[v5];
  v8 = sub_1D7B49408();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  v9 = v4[6];
  v10 = &a1[v9];
  v11 = &a2[v9];
  *(_QWORD *)v10 = *(_QWORD *)v11;
  v10[8] = v11[8];
  v12 = v4[7];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_1D7B490A8();
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v18 = v4[8];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  swift_bridgeObjectRetain();
  return a1;
}

_BYTE *sub_1D7B3F480(_BYTE *a1, _BYTE *a2)
{
  int *v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(_BYTE *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;

  *a1 = *a2;
  v4 = (int *)type metadata accessor for ErrorDetails(0);
  v5 = v4[5];
  v6 = &a1[v5];
  v7 = &a2[v5];
  v8 = sub_1D7B49408();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v8 - 8) + 24))(v6, v7, v8);
  v9 = v4[6];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(_QWORD *)v11;
  v10[8] = v11[8];
  *(_QWORD *)v10 = v12;
  v13 = v4[7];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = sub_1D7B490A8();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v17 + 24))(v14, v15, v16);
      goto LABEL_7;
    }
    (*(void (**)(_BYTE *, uint64_t))(v17 + 8))(v14, v16);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v17 + 16))(v14, v15, v16);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
LABEL_7:
  v22 = v4[8];
  v23 = &a1[v22];
  v24 = &a2[v22];
  *v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_BYTE *sub_1D7B3F628(_BYTE *a1, _BYTE *a2)
{
  int *v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *a1 = *a2;
  v4 = (int *)type metadata accessor for ErrorDetails(0);
  v5 = v4[5];
  v6 = &a1[v5];
  v7 = &a2[v5];
  v8 = sub_1D7B49408();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  v9 = v4[6];
  v10 = &a1[v9];
  v11 = &a2[v9];
  *(_QWORD *)v10 = *(_QWORD *)v11;
  v10[8] = v11[8];
  v12 = v4[7];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_1D7B490A8();
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  *(_OWORD *)&a1[v4[8]] = *(_OWORD *)&a2[v4[8]];
  return a1;
}

_BYTE *sub_1D7B3F764(_BYTE *a1, _BYTE *a2)
{
  int *v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(_BYTE *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;

  *a1 = *a2;
  v4 = (int *)type metadata accessor for ErrorDetails(0);
  v5 = v4[5];
  v6 = &a1[v5];
  v7 = &a2[v5];
  v8 = sub_1D7B49408();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v8 - 8) + 40))(v6, v7, v8);
  v9 = v4[6];
  v10 = &a1[v9];
  v11 = &a2[v9];
  *(_QWORD *)v10 = *(_QWORD *)v11;
  v10[8] = v11[8];
  v12 = v4[7];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_1D7B490A8();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v16 + 40))(v13, v14, v15);
      goto LABEL_7;
    }
    (*(void (**)(_BYTE *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    sub_1D7AA787C(0, &qword_1F014E400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v16 + 32))(v13, v14, v15);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_7:
  v21 = v4[8];
  v22 = &a1[v21];
  v23 = (uint64_t *)&a2[v21];
  v25 = *v23;
  v24 = v23[1];
  *v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D7B3F8FC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D7B3F908(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ErrorDetails(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1D7B3F944()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D7B3F950(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ErrorDetails(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1D7B3F990()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ErrorDetails(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for InstructionsForUseWebViewContainer.Configuration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for InstructionsForUseWebViewContainer.Configuration()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for InstructionsForUseWebViewContainer.Configuration(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for InstructionsForUseWebViewContainer.Configuration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InstructionsForUseWebViewContainer.Configuration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InstructionsForUseWebViewContainer.Configuration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for InstructionsForUseWebViewContainer.Configuration()
{
  return &type metadata for InstructionsForUseWebViewContainer.Configuration;
}

uint64_t getEnumTagSinglePayload for ErrorReason(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ErrorReason(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D7B3FC0C + 4 * byte_1D7B86D85[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D7B3FC40 + 4 * byte_1D7B86D80[v4]))();
}

uint64_t sub_1D7B3FC40(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D7B3FC48(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D7B3FC50);
  return result;
}

uint64_t sub_1D7B3FC5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D7B3FC64);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D7B3FC68(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D7B3FC70(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ErrorReason()
{
  return &type metadata for ErrorReason;
}

unint64_t sub_1D7B3FC90()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1F0150AA0;
  if (!qword_1F0150AA0)
  {
    sub_1D7B3FD20(255, &qword_1F0150AA8, MEMORY[0x1E0CDB880]);
    v2 = v1;
    v3[0] = sub_1D7B3DF08();
    v3[1] = sub_1D7AA76D4(&qword_1F0150980, type metadata accessor for InstructionsForUseWebView, (uint64_t)&unk_1D7B86E70);
    result = MEMORY[0x1D829FF28](MEMORY[0x1E0CDB8A0], v2, v3);
    atomic_store(result, (unint64_t *)&qword_1F0150AA0);
  }
  return result;
}

void sub_1D7B3FD20(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_1D7B3DEAC(255, &qword_1F0150990, MEMORY[0x1E0CDB880]);
    v7 = v6;
    v8 = type metadata accessor for InstructionsForUseWebView(255);
    v9 = a3(a1, v7, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

unint64_t sub_1D7B3FD9C()
{
  unint64_t result;

  result = qword_1F0150AB0;
  if (!qword_1F0150AB0)
  {
    result = MEMORY[0x1D829FF28](&unk_1D7B8701C, &type metadata for ErrorReason);
    atomic_store(result, (unint64_t *)&qword_1F0150AB0);
  }
  return result;
}

unint64_t sub_1D7B3FDE4()
{
  unint64_t result;

  result = qword_1F0150AB8;
  if (!qword_1F0150AB8)
  {
    result = MEMORY[0x1D829FF28](&unk_1D7B87044, &type metadata for InstructionsForUseWebViewContainer.Configuration);
    atomic_store(result, (unint64_t *)&qword_1F0150AB8);
  }
  return result;
}

uint64_t sub_1D7B3FE28()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_1D7B3FE40(uint64_t a1)
{
  double result;

  *(_QWORD *)(a1 + 256) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_1D7B3FE6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D7AA787C(0, &qword_1F0150AC0, (uint64_t (*)(uint64_t))sub_1D7B3FEC8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1D7B3FEC8(uint64_t a1)
{
  sub_1D7B290D4(a1, &qword_1F0150AC8, &qword_1F0150AD0, (uint64_t (*)(uint64_t))sub_1D7B3FEEC, &qword_1F0150B00);
}

void sub_1D7B3FEEC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1F0150AD8)
  {
    sub_1D7B3FF50();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1F0150AD8);
  }
}

void sub_1D7B3FF50()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F0150AE0)
  {
    sub_1D7B3FFCC();
    sub_1D7AAAEE8(255, &qword_1ED0ACA30, &qword_1ED0ACA80, MEMORY[0x1E0CDF5D0]);
    v0 = sub_1D7B49978();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F0150AE0);
  }
}

void sub_1D7B3FFCC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F0150AE8)
  {
    sub_1D7B405C4(255, (unint64_t *)&unk_1F0150AF0, (void (*)(uint64_t))sub_1D7B40058);
    sub_1D7AAAEE8(255, &qword_1ED0ACA20, &qword_1ED0ACA58, MEMORY[0x1E0CDD840]);
    v0 = sub_1D7B49978();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F0150AE8);
  }
}

void sub_1D7B40058()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F014D980)
  {
    v0 = sub_1D7B49978();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F014D980);
  }
}

uint64_t sub_1D7B400B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_BYTE *)(a1 + 72);
  sub_1D7ABF0C8(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRetain();
  sub_1D7ABF0C8(v2, v3, v4);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_1D7B40134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9)
{
  uint64_t result;

  if (a9)
  {
    sub_1D7ABF0C8(a6, a7, a8 & 1);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_1D7B401B4(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  __int128 v4;

  v4 = *(_OWORD *)(a1 + 224);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    v4,
    *((_QWORD *)&v4 + 1),
    *(_QWORD *)(a1 + 240),
    *(_QWORD *)(a1 + 248),
    *(_QWORD *)(a1 + 256));
  return a1;
}

uint64_t sub_1D7B40230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9)
{
  uint64_t result;

  if (a9)
  {
    sub_1D7AACF84(a6, a7, a8 & 1);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1D7B402B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_BYTE *)(a1 + 72);
  sub_1D7AACF84(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRelease();
  sub_1D7AACF84(v2, v3, v4);
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1D7B40330()
{
  unint64_t result;

  result = qword_1F0150B08;
  if (!qword_1F0150B08)
  {
    result = MEMORY[0x1D829FF28](MEMORY[0x1E0DEB460], MEMORY[0x1E0DEB418]);
    atomic_store(result, (unint64_t *)&qword_1F0150B08);
  }
  return result;
}

uint64_t sub_1D7B40384(uint64_t a1)
{
  sub_1D7ABF0C8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1D7B403F8(uint64_t a1)
{
  sub_1D7AACF84(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_1D7B4046C()
{
  return sub_1D7AA76D4(&qword_1F0150B18, (uint64_t (*)(uint64_t))sub_1D7B40498, MEMORY[0x1E0CDFCF8]);
}

void sub_1D7B40498()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F0150B20)
  {
    sub_1D7AA787C(255, &qword_1F0150B28, (uint64_t (*)(uint64_t))sub_1D7B40530, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CE0648]);
    sub_1D7B01410((unint64_t *)&unk_1F0150B70, &qword_1F0150B28, (uint64_t (*)(uint64_t))sub_1D7B40530);
    v0 = sub_1D7B4A0BC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F0150B20);
  }
}

void sub_1D7B40530()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1F0150B30)
  {
    sub_1D7B405C4(255, &qword_1F0150B38, (void (*)(uint64_t))sub_1D7B40618);
    sub_1D7AA787C(255, &qword_1F0150AC0, (uint64_t (*)(uint64_t))sub_1D7B3FEC8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1F0150B30);
  }
}

void sub_1D7B405C4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1D7B49978();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_1D7B40618()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F0150B40)
  {
    sub_1D7B290D4(255, &qword_1F0150B48, &qword_1F0150B50, (uint64_t (*)(uint64_t))sub_1D7B406B4, (unint64_t *)&unk_1F0150B60);
    sub_1D7AA7E70(255, &qword_1ED0ACA08, MEMORY[0x1E0CD9070], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0CDCF68]);
    v0 = sub_1D7B49978();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F0150B40);
  }
}

void sub_1D7B406B4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1F0150B58)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1F0150B58);
  }
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return objc_opt_self();
}

void _createPrivateSecKeyRefFromP12_cold_1(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  OUTLINED_FUNCTION_5_0(&dword_1D7813000, a2, a3, "Failed to copy private key with error: %{public}i", a5, a6, a7, a8, 0);
  OUTLINED_FUNCTION_8_0();
}

void _createPrivateSecKeyRefFromP12_cold_2(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  OUTLINED_FUNCTION_5_0(&dword_1D7813000, a2, a3, "Failed to import P12 with error: %{public}i", a5, a6, a7, a8, 0);
  OUTLINED_FUNCTION_8_0();
}

void __getTUCallProviderManagerClass_block_invoke_cold_1()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getTUCallProviderManagerClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("HKMedicalIDTelephoneUtilities.m"), 16, CFSTR("Unable to find class %s"), "TUCallProviderManager");

  __break(1u);
}

void TelephonyUtilitiesLibrary_cold_1(_QWORD *a1)
{
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *TelephonyUtilitiesLibrary(void)");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("HKMedicalIDTelephoneUtilities.m"), 15, CFSTR("%s"), *a1);

  __break(1u);
}

void __getTUDialRequestClass_block_invoke_cold_1()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getTUDialRequestClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("HKMedicalIDTelephoneUtilities.m"), 18, CFSTR("Unable to find class %s"), "TUDialRequest");

  __break(1u);
}

void __getTUHandleClass_block_invoke_cold_1()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getTUHandleClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("HKMedicalIDTelephoneUtilities.m"), 19, CFSTR("Unable to find class %s"), "TUHandle");

  __break(1u);
}

void __getSOSUtilitiesClass_block_invoke_cold_1()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getSOSUtilitiesClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("HKMedicalIDData+SOSContactManager.m"), 19, CFSTR("Unable to find class %s"), "SOSUtilities");

  __break(1u);
}

void SOSLibrary_cold_1(_QWORD *a1)
{
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *SOSLibrary(void)");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("HKMedicalIDData+SOSContactManager.m"), 17, CFSTR("%s"), *a1);

  __break(1u);
}

void __getSOSContactsManagerClass_block_invoke_cold_1()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getSOSContactsManagerClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("HKMedicalIDData+SOSContactManager.m"), 18, CFSTR("Unable to find class %s"), "SOSContactsManager");

  __break(1u);
}

void ClampedWeightLoggingOutOfBoundsValues_cold_1(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  OUTLINED_FUNCTION_3_2(&dword_1D7813000, a2, a3, "invalid low value in HKSimpleDataEntryWeightItem %@", a5, a6, a7, a8, 2u);
}

void ClampedWeightLoggingOutOfBoundsValues_cold_2(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  OUTLINED_FUNCTION_3_2(&dword_1D7813000, a2, a3, "invalid high value in HKSimpleDataEntryWeightItem %@", a5, a6, a7, a8, 2u);
}

void __getSOSUtilitiesClass_block_invoke_cold_1_0()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getSOSUtilitiesClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("HKEmergencyCardContactsTableItem.m"), 47, CFSTR("Unable to find class %s"), "SOSUtilities");

  __break(1u);
}

void SOSLibrary_cold_1_0(_QWORD *a1)
{
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *SOSLibrary(void)");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("HKEmergencyCardContactsTableItem.m"), 46, CFSTR("%s"), *a1);

  __break(1u);
}

void __getSOSManagerClass_block_invoke_cold_1()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getSOSManagerClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("HKEmergencyCardContactsTableItem.m"), 48, CFSTR("Unable to find class %s"), "SOSManager");

  __break(1u);
}

void CoreTelephonyLibrary_cold_1(_QWORD *a1)
{
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *CoreTelephonyLibrary(void)");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("HKCoreTelephonyUtilities.m"), 15, CFSTR("%s"), *a1);

  __break(1u);
}

void __getSTStorageAppHeaderCellClass_block_invoke_cold_1(_QWORD *a1)
{
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *StorageSettingsLibrary(void)");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("HKHealthManageStorageViewController.m"), 24, CFSTR("%s"), *a1);

  __break(1u);
}

void __getSTStorageAppHeaderCellClass_block_invoke_cold_2()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getSTStorageAppHeaderCellClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("HKHealthManageStorageViewController.m"), 25, CFSTR("Unable to find class %s"), "STStorageAppHeaderCell");

  __break(1u);
}

void __getCNAvatarImageRendererClass_block_invoke_cold_1()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getCNAvatarImageRendererClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("HKTitledContactBuddyHeaderView.m"), 29, CFSTR("Unable to find class %s"), "CNAvatarImageRenderer");

  __break(1u);
}

void ContactsUILibrary_cold_1(_QWORD *a1)
{
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *ContactsUILibrary(void)");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("HKTitledContactBuddyHeaderView.m"), 27, CFSTR("%s"), *a1);

  __break(1u);
}

void __getCNAvatarImageRenderingScopeClass_block_invoke_cold_1()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getCNAvatarImageRenderingScopeClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("HKTitledContactBuddyHeaderView.m"), 30, CFSTR("Unable to find class %s"), "CNAvatarImageRenderingScope");

  __break(1u);
}

void __getMKBGetDeviceLockStateSymbolLoc_block_invoke_cold_1(_QWORD *a1)
{
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *MobileKeyBagLibrary(void)");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("HKMedicalIDViewController.m"), 95, CFSTR("%s"), *a1);

  __break(1u);
}

void __getBKDeviceClass_block_invoke_cold_1()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getBKDeviceClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("HKMedicalIDViewController.m"), 90, CFSTR("Unable to find class %s"), "BKDevice");

  __break(1u);
}

void BiometricKitLibrary_cold_1(_QWORD *a1)
{
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *BiometricKitLibrary(void)");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("HKMedicalIDViewController.m"), 89, CFSTR("%s"), *a1);

  __break(1u);
}

void __getBKDeviceManagerClass_block_invoke_cold_1()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getBKDeviceManagerClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("HKMedicalIDViewController.m"), 91, CFSTR("Unable to find class %s"), "BKDeviceManager");

  __break(1u);
}

void HKInteractiveChartDataSourceChartStyle_cold_1(void *a1, void *a2, uint64_t a3)
{
  NSObject *v5;
  void *v6;
  void *v7;
  int v8;
  void *v9;
  __int16 v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  objc_msgSend(a2, "displayTypeIdentifierString");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(a2, "chartingRules");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = 138412802;
  v9 = v6;
  v10 = 2048;
  v11 = a3;
  v12 = 2048;
  v13 = objc_msgSend(v7, "chartStyleForTimeScope:", a3);
  _os_log_error_impl(&dword_1D7813000, v5, OS_LOG_TYPE_ERROR, "No generic data source for display type: %@, timescope %ld, style %ld", (uint8_t *)&v8, 0x20u);

}

void __getCNContactPickerViewControllerClass_block_invoke_cold_1(_QWORD *a1)
{
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *ContactsUILibrary(void)");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("HKEmergencyContactPicker.m"), 17, CFSTR("%s"), *a1);

  __break(1u);
}

void __getCNContactPickerViewControllerClass_block_invoke_cold_2()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getCNContactPickerViewControllerClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("HKEmergencyContactPicker.m"), 18, CFSTR("Unable to find class %s"), "CNContactPickerViewController");

  __break(1u);
}

void __getWKWebViewConfigurationClass_block_invoke_cold_1()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getWKWebViewConfigurationClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("HKCDADocumentReportViewController.m"), 21, CFSTR("Unable to find class %s"), "WKWebViewConfiguration");

  __break(1u);
}

void WebKitLibrary_cold_1(_QWORD *a1)
{
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *WebKitLibrary(void)");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("HKCDADocumentReportViewController.m"), 20, CFSTR("%s"), *a1);

  __break(1u);
}

void __getWKWebViewClass_block_invoke_cold_1()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getWKWebViewClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("HKCDADocumentReportViewController.m"), 22, CFSTR("Unable to find class %s"), "WKWebView");

  __break(1u);
}

void __getCNLabeledValueClass_block_invoke_cold_1(_QWORD *a1)
{
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *ContactsUILibrary(void)");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("HKEmergencyContactRelationshipPicker.m"), 19, CFSTR("%s"), *a1);

  __break(1u);
}

void __getCNLabeledValueClass_block_invoke_cold_2()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getCNLabeledValueClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("HKEmergencyContactRelationshipPicker.m"), 20, CFSTR("Unable to find class %s"), "CNLabeledValue");

  __break(1u);
}

uint64_t sub_1D7B48CE8()
{
  return MEMORY[0x1E0CADEE8]();
}

uint64_t sub_1D7B48CF4()
{
  return MEMORY[0x1E0CADF10]();
}

uint64_t sub_1D7B48D00()
{
  return MEMORY[0x1E0CADF50]();
}

uint64_t sub_1D7B48D0C()
{
  return MEMORY[0x1E0CAE478]();
}

uint64_t sub_1D7B48D18()
{
  return MEMORY[0x1E0CAE490]();
}

uint64_t sub_1D7B48D24()
{
  return MEMORY[0x1E0CAE4B8]();
}

uint64_t sub_1D7B48D30()
{
  return MEMORY[0x1E0CAE568]();
}

uint64_t sub_1D7B48D3C()
{
  return MEMORY[0x1E0CAE578]();
}

uint64_t sub_1D7B48D48()
{
  return MEMORY[0x1E0CAE580]();
}

uint64_t sub_1D7B48D54()
{
  return MEMORY[0x1E0CAE590]();
}

uint64_t sub_1D7B48D60()
{
  return MEMORY[0x1E0CAE5A0]();
}

uint64_t sub_1D7B48D6C()
{
  return MEMORY[0x1E0CAE5C0]();
}

uint64_t sub_1D7B48D78()
{
  return MEMORY[0x1E0CAE5D0]();
}

uint64_t sub_1D7B48D84()
{
  return MEMORY[0x1E0CAE628]();
}

uint64_t sub_1D7B48D90()
{
  return MEMORY[0x1E0CAE648]();
}

uint64_t sub_1D7B48D9C()
{
  return MEMORY[0x1E0CAE940]();
}

uint64_t sub_1D7B48DA8()
{
  return MEMORY[0x1E0CAE9A0]();
}

uint64_t sub_1D7B48DB4()
{
  return MEMORY[0x1E0CAE9B8]();
}

uint64_t sub_1D7B48DC0()
{
  return MEMORY[0x1E0CAE9C8]();
}

uint64_t sub_1D7B48DCC()
{
  return MEMORY[0x1E0CAE9F8]();
}

uint64_t sub_1D7B48DD8()
{
  return MEMORY[0x1E0CAEA20]();
}

uint64_t sub_1D7B48DE4()
{
  return MEMORY[0x1E0CAEAB0]();
}

uint64_t sub_1D7B48DF0()
{
  return MEMORY[0x1E0CAECB8]();
}

uint64_t sub_1D7B48DFC()
{
  return MEMORY[0x1E0CAECD8]();
}

uint64_t sub_1D7B48E08()
{
  return MEMORY[0x1E0CAED48]();
}

uint64_t sub_1D7B48E14()
{
  return MEMORY[0x1E0CAEDB0]();
}

uint64_t sub_1D7B48E20()
{
  return MEMORY[0x1E0CAEDD0]();
}

uint64_t sub_1D7B48E2C()
{
  return MEMORY[0x1E0CAEDF0]();
}

uint64_t sub_1D7B48E38()
{
  return MEMORY[0x1E0CAEDF8]();
}

uint64_t sub_1D7B48E44()
{
  return MEMORY[0x1E0CAEE08]();
}

uint64_t sub_1D7B48E50()
{
  return MEMORY[0x1E0CAEE10]();
}

uint64_t sub_1D7B48E5C()
{
  return MEMORY[0x1E0CAEE20]();
}

uint64_t sub_1D7B48E68()
{
  return MEMORY[0x1E0CAEE30]();
}

uint64_t sub_1D7B48E74()
{
  return MEMORY[0x1E0DC19C0]();
}

uint64_t sub_1D7B48E80()
{
  return MEMORY[0x1E0DC19E0]();
}

uint64_t sub_1D7B48E8C()
{
  return MEMORY[0x1E0DC1A00]();
}

uint64_t sub_1D7B48E98()
{
  return MEMORY[0x1E0CD81D8]();
}

uint64_t sub_1D7B48EA4()
{
  return MEMORY[0x1E0CD81E0]();
}

uint64_t sub_1D7B48EB0()
{
  return MEMORY[0x1E0CAEEE8]();
}

uint64_t sub_1D7B48EBC()
{
  return MEMORY[0x1E0CAEF48]();
}

uint64_t sub_1D7B48EC8()
{
  return MEMORY[0x1E0CAEF80]();
}

uint64_t sub_1D7B48ED4()
{
  return MEMORY[0x1E0CAEFB0]();
}

uint64_t sub_1D7B48EE0()
{
  return MEMORY[0x1E0CAF118]();
}

uint64_t sub_1D7B48EEC()
{
  return MEMORY[0x1E0CAF120]();
}

uint64_t sub_1D7B48EF8()
{
  return MEMORY[0x1E0CAF130]();
}

uint64_t sub_1D7B48F04()
{
  return MEMORY[0x1E0CAF138]();
}

uint64_t sub_1D7B48F10()
{
  return MEMORY[0x1E0CAF150]();
}

uint64_t sub_1D7B48F1C()
{
  return MEMORY[0x1E0CAF160]();
}

uint64_t sub_1D7B48F28()
{
  return MEMORY[0x1E0CAF1A0]();
}

uint64_t sub_1D7B48F34()
{
  return MEMORY[0x1E0CAF1B0]();
}

uint64_t sub_1D7B48F40()
{
  return MEMORY[0x1E0CAF1E8]();
}

uint64_t sub_1D7B48F4C()
{
  return MEMORY[0x1E0CAF240]();
}

uint64_t sub_1D7B48F58()
{
  return MEMORY[0x1E0CAF278]();
}

uint64_t sub_1D7B48F64()
{
  return MEMORY[0x1E0CAF2B8]();
}

uint64_t sub_1D7B48F70()
{
  return MEMORY[0x1E0CAF2C0]();
}

uint64_t sub_1D7B48F7C()
{
  return MEMORY[0x1E0CAF328]();
}

uint64_t sub_1D7B48F88()
{
  return MEMORY[0x1E0CAF400]();
}

uint64_t sub_1D7B48F94()
{
  return MEMORY[0x1E0CAF410]();
}

uint64_t sub_1D7B48FA0()
{
  return MEMORY[0x1E0CAF420]();
}

uint64_t sub_1D7B48FAC()
{
  return MEMORY[0x1E0CAF438]();
}

uint64_t sub_1D7B48FB8()
{
  return MEMORY[0x1E0CAF440]();
}

uint64_t sub_1D7B48FC4()
{
  return MEMORY[0x1E0CAF458]();
}

uint64_t sub_1D7B48FD0()
{
  return MEMORY[0x1E0CAF460]();
}

uint64_t sub_1D7B48FDC()
{
  return MEMORY[0x1E0CAF578]();
}

uint64_t sub_1D7B48FE8()
{
  return MEMORY[0x1E0CAF5A8]();
}

uint64_t sub_1D7B48FF4()
{
  return MEMORY[0x1E0CAF910]();
}

uint64_t sub_1D7B49000()
{
  return MEMORY[0x1E0CAF960]();
}

uint64_t sub_1D7B4900C()
{
  return MEMORY[0x1E0DC1A18]();
}

uint64_t sub_1D7B49018()
{
  return MEMORY[0x1E0CD81F8]();
}

uint64_t sub_1D7B49024()
{
  return MEMORY[0x1E0CAF980]();
}

uint64_t sub_1D7B49030()
{
  return MEMORY[0x1E0CAF990]();
}

uint64_t sub_1D7B4903C()
{
  return MEMORY[0x1E0CAFA58]();
}

uint64_t sub_1D7B49048()
{
  return MEMORY[0x1E0CAFB20]();
}

uint64_t sub_1D7B49054()
{
  return MEMORY[0x1E0CAFB30]();
}

uint64_t sub_1D7B49060()
{
  return MEMORY[0x1E0CAFCE8]();
}

uint64_t sub_1D7B4906C()
{
  return MEMORY[0x1E0CAFCF0]();
}

uint64_t sub_1D7B49078()
{
  return MEMORY[0x1E0CAFDA0]();
}

uint64_t sub_1D7B49084()
{
  return MEMORY[0x1E0CAFE38]();
}

uint64_t sub_1D7B49090()
{
  return MEMORY[0x1E0CAFF00]();
}

uint64_t sub_1D7B4909C()
{
  return MEMORY[0x1E0CAFF90]();
}

uint64_t sub_1D7B490A8()
{
  return MEMORY[0x1E0CAFFF8]();
}

uint64_t sub_1D7B490B4()
{
  return MEMORY[0x1E0CB01F0]();
}

uint64_t sub_1D7B490C0()
{
  return MEMORY[0x1E0CB0228]();
}

uint64_t sub_1D7B490CC()
{
  return MEMORY[0x1E0CB03F0]();
}

uint64_t sub_1D7B490D8()
{
  return MEMORY[0x1E0CB03F8]();
}

uint64_t sub_1D7B490E4()
{
  return MEMORY[0x1E0CB0408]();
}

uint64_t sub_1D7B490F0()
{
  return MEMORY[0x1E0CB0420]();
}

uint64_t sub_1D7B490FC()
{
  return MEMORY[0x1E0CB0428]();
}

uint64_t sub_1D7B49108()
{
  return MEMORY[0x1E0CB0438]();
}

uint64_t sub_1D7B49114()
{
  return MEMORY[0x1E0CB0450]();
}

uint64_t sub_1D7B49120()
{
  return MEMORY[0x1E0CB0568]();
}

uint64_t sub_1D7B4912C()
{
  return MEMORY[0x1E0CB0598]();
}

uint64_t sub_1D7B49138()
{
  return MEMORY[0x1E0CB05B0]();
}

uint64_t sub_1D7B49144()
{
  return MEMORY[0x1E0CB05B8]();
}

uint64_t sub_1D7B49150()
{
  return MEMORY[0x1E0CB06B8]();
}

uint64_t sub_1D7B4915C()
{
  return MEMORY[0x1E0CB06D8]();
}

uint64_t sub_1D7B49168()
{
  return MEMORY[0x1E0CB07E8]();
}

uint64_t sub_1D7B49174()
{
  return MEMORY[0x1E0CB07F8]();
}

uint64_t sub_1D7B49180()
{
  return MEMORY[0x1E0CB0838]();
}

uint64_t sub_1D7B4918C()
{
  return MEMORY[0x1E0CB0860]();
}

uint64_t sub_1D7B49198()
{
  return MEMORY[0x1E0CB0870]();
}

uint64_t sub_1D7B491A4()
{
  return MEMORY[0x1E0CB0910]();
}

uint64_t sub_1D7B491B0()
{
  return MEMORY[0x1E0CB0958]();
}

uint64_t sub_1D7B491BC()
{
  return MEMORY[0x1E0CB0988]();
}

uint64_t sub_1D7B491C8()
{
  return MEMORY[0x1E0CB0998]();
}

uint64_t sub_1D7B491D4()
{
  return MEMORY[0x1E0CB0BE0]();
}

uint64_t sub_1D7B491E0()
{
  return MEMORY[0x1E0CB0BF8]();
}

uint64_t sub_1D7B491EC()
{
  return MEMORY[0x1E0CB0C40]();
}

uint64_t sub_1D7B491F8()
{
  return MEMORY[0x1E0CB0C48]();
}

uint64_t sub_1D7B49204()
{
  return MEMORY[0x1E0CB0CB0]();
}

uint64_t sub_1D7B49210()
{
  return MEMORY[0x1E0CB0CC8]();
}

uint64_t sub_1D7B4921C()
{
  return MEMORY[0x1E0CB0E38]();
}

uint64_t sub_1D7B49228()
{
  return MEMORY[0x1E0CB0F00]();
}

uint64_t sub_1D7B49234()
{
  return MEMORY[0x1E0CB0F20]();
}

uint64_t sub_1D7B49240()
{
  return MEMORY[0x1E0CB0F30]();
}

uint64_t sub_1D7B4924C()
{
  return MEMORY[0x1E0CB0F38]();
}

uint64_t sub_1D7B49258()
{
  return MEMORY[0x1E0CB0FA8]();
}

uint64_t sub_1D7B49264()
{
  return MEMORY[0x1E0CB0FB0]();
}

uint64_t sub_1D7B49270()
{
  return MEMORY[0x1E0CB0FB8]();
}

uint64_t sub_1D7B4927C()
{
  return MEMORY[0x1E0D2BCA0]();
}

uint64_t sub_1D7B49288()
{
  return MEMORY[0x1E0D2BCA8]();
}

uint64_t sub_1D7B49294()
{
  return MEMORY[0x1E0D2BCC0]();
}

uint64_t sub_1D7B492A0()
{
  return MEMORY[0x1E0D2BCC8]();
}

uint64_t sub_1D7B492AC()
{
  return MEMORY[0x1E0CB1028]();
}

uint64_t sub_1D7B492B8()
{
  return MEMORY[0x1E0CB1030]();
}

uint64_t sub_1D7B492C4()
{
  return MEMORY[0x1E0CB1050]();
}

uint64_t sub_1D7B492D0()
{
  return MEMORY[0x1E0CB1070]();
}

uint64_t sub_1D7B492DC()
{
  return MEMORY[0x1E0CB10E0]();
}

uint64_t sub_1D7B492E8()
{
  return MEMORY[0x1E0CB11B8]();
}

uint64_t sub_1D7B492F4()
{
  return MEMORY[0x1E0CB11E0]();
}

uint64_t sub_1D7B49300()
{
  return MEMORY[0x1E0CB11F0]();
}

uint64_t sub_1D7B4930C()
{
  return MEMORY[0x1E0CB1248]();
}

uint64_t sub_1D7B49318()
{
  return MEMORY[0x1E0CB1280]();
}

uint64_t sub_1D7B49324()
{
  return MEMORY[0x1E0CB12F8]();
}

uint64_t sub_1D7B49330()
{
  return MEMORY[0x1E0CB1318]();
}

uint64_t sub_1D7B4933C()
{
  return MEMORY[0x1E0CB1330]();
}

uint64_t sub_1D7B49348()
{
  return MEMORY[0x1E0CB1348]();
}

uint64_t sub_1D7B49354()
{
  return MEMORY[0x1E0CB1350]();
}

uint64_t sub_1D7B49360()
{
  return MEMORY[0x1E0CB1358]();
}

uint64_t sub_1D7B4936C()
{
  return MEMORY[0x1E0CB1388]();
}

uint64_t sub_1D7B49378()
{
  return MEMORY[0x1E0CB1390]();
}

uint64_t sub_1D7B49384()
{
  return MEMORY[0x1E0CB1398]();
}

uint64_t sub_1D7B49390()
{
  return MEMORY[0x1E0CB13A0]();
}

uint64_t sub_1D7B4939C()
{
  return MEMORY[0x1E0CB1400]();
}

uint64_t sub_1D7B493A8()
{
  return MEMORY[0x1E0CB1438]();
}

uint64_t sub_1D7B493B4()
{
  return MEMORY[0x1E0CB1448]();
}

uint64_t sub_1D7B493C0()
{
  return MEMORY[0x1E0CB1470]();
}

uint64_t sub_1D7B493CC()
{
  return MEMORY[0x1E0CB14E8]();
}

uint64_t sub_1D7B493D8()
{
  return MEMORY[0x1E0CB1530]();
}

uint64_t sub_1D7B493E4()
{
  return MEMORY[0x1E0CB1540]();
}

uint64_t sub_1D7B493F0()
{
  return MEMORY[0x1E0CB1548]();
}

uint64_t sub_1D7B493FC()
{
  return MEMORY[0x1E0CB1558]();
}

uint64_t sub_1D7B49408()
{
  return MEMORY[0x1E0CB1578]();
}

uint64_t sub_1D7B49414()
{
  return MEMORY[0x1E0CB15C0]();
}

uint64_t sub_1D7B49420()
{
  return MEMORY[0x1E0CB15E8]();
}

uint64_t sub_1D7B4942C()
{
  return MEMORY[0x1E0CB1600]();
}

uint64_t sub_1D7B49438()
{
  return MEMORY[0x1E0CB1608]();
}

uint64_t sub_1D7B49444()
{
  return MEMORY[0x1E0DC1A30]();
}

uint64_t sub_1D7B49450()
{
  return MEMORY[0x1E0DC1A38]();
}

uint64_t sub_1D7B4945C()
{
  return MEMORY[0x1E0DC1A48]();
}

uint64_t sub_1D7B49468()
{
  return MEMORY[0x1E0DC1A58]();
}

uint64_t sub_1D7B49474()
{
  return MEMORY[0x1E0CB1658]();
}

uint64_t sub_1D7B49480()
{
  return MEMORY[0x1E0DEFD58]();
}

uint64_t sub_1D7B4948C()
{
  return MEMORY[0x1E0DEFD60]();
}

uint64_t sub_1D7B49498()
{
  return MEMORY[0x1E0DEFD78]();
}

uint64_t sub_1D7B494A4()
{
  return MEMORY[0x1E0DEFD80]();
}

uint64_t sub_1D7B494B0()
{
  return MEMORY[0x1E0CB1708]();
}

uint64_t sub_1D7B494BC()
{
  return MEMORY[0x1E0CB1718]();
}

uint64_t sub_1D7B494C8()
{
  return MEMORY[0x1E0D28F80]();
}

uint64_t sub_1D7B494D4()
{
  return MEMORY[0x1E0D28F88]();
}

uint64_t sub_1D7B494E0()
{
  return MEMORY[0x1E0D28FA0]();
}

uint64_t sub_1D7B494EC()
{
  return MEMORY[0x1E0D28FC8]();
}

uint64_t sub_1D7B494F8()
{
  return MEMORY[0x1E0D28FD0]();
}

uint64_t sub_1D7B49504()
{
  return MEMORY[0x1E0D28FE0]();
}

uint64_t sub_1D7B49510()
{
  return MEMORY[0x1E0D29000]();
}

uint64_t sub_1D7B4951C()
{
  return MEMORY[0x1E0D29008]();
}

uint64_t sub_1D7B49528()
{
  return MEMORY[0x1E0D29020]();
}

uint64_t sub_1D7B49534()
{
  return MEMORY[0x1E0D29038]();
}

uint64_t sub_1D7B49540()
{
  return MEMORY[0x1E0D29040]();
}

uint64_t sub_1D7B4954C()
{
  return MEMORY[0x1E0D29048]();
}

uint64_t sub_1D7B49558()
{
  return MEMORY[0x1E0D29050]();
}

uint64_t sub_1D7B49564()
{
  return MEMORY[0x1E0D29058]();
}

uint64_t sub_1D7B49570()
{
  return MEMORY[0x1E0D29060]();
}

uint64_t sub_1D7B4957C()
{
  return MEMORY[0x1E0D29070]();
}

uint64_t sub_1D7B49588()
{
  return MEMORY[0x1E0D29090]();
}

uint64_t sub_1D7B49594()
{
  return MEMORY[0x1E0D290B0]();
}

uint64_t sub_1D7B495A0()
{
  return MEMORY[0x1E0D290B8]();
}

uint64_t sub_1D7B495AC()
{
  return MEMORY[0x1E0D290C0]();
}

uint64_t sub_1D7B495B8()
{
  return MEMORY[0x1E0D290C8]();
}

uint64_t sub_1D7B495C4()
{
  return MEMORY[0x1E0D290D0]();
}

uint64_t sub_1D7B495D0()
{
  return MEMORY[0x1E0D29118]();
}

uint64_t sub_1D7B495DC()
{
  return MEMORY[0x1E0D29128]();
}

uint64_t sub_1D7B495E8()
{
  return MEMORY[0x1E0D29130]();
}

uint64_t sub_1D7B495F4()
{
  return MEMORY[0x1E0D29138]();
}

uint64_t sub_1D7B49600()
{
  return MEMORY[0x1E0D29168]();
}

uint64_t sub_1D7B4960C()
{
  return MEMORY[0x1E0D29170]();
}

uint64_t sub_1D7B49618()
{
  return MEMORY[0x1E0D29178]();
}

uint64_t sub_1D7B49624()
{
  return MEMORY[0x1E0D29180]();
}

uint64_t sub_1D7B49630()
{
  return MEMORY[0x1E0D29188]();
}

uint64_t sub_1D7B4963C()
{
  return MEMORY[0x1E0D29190]();
}

uint64_t sub_1D7B49648()
{
  return MEMORY[0x1E0D2BE50]();
}

uint64_t sub_1D7B49654()
{
  return MEMORY[0x1E0D2BE60]();
}

uint64_t sub_1D7B49660()
{
  return MEMORY[0x1E0DF2080]();
}

uint64_t sub_1D7B4966C()
{
  return MEMORY[0x1E0D291C0]();
}

uint64_t sub_1D7B49678()
{
  return MEMORY[0x1E0D2BF90]();
}

uint64_t sub_1D7B49684()
{
  return MEMORY[0x1E0DF2240]();
}

uint64_t sub_1D7B49690()
{
  return MEMORY[0x1E0DF2248]();
}

uint64_t sub_1D7B4969C()
{
  return MEMORY[0x1E0DF2258]();
}

uint64_t sub_1D7B496A8()
{
  return MEMORY[0x1E0DC1E10]();
}

uint64_t sub_1D7B496B4()
{
  return MEMORY[0x1E0DC1E18]();
}

uint64_t sub_1D7B496C0()
{
  return MEMORY[0x1E0DC1EB0]();
}

uint64_t sub_1D7B496CC()
{
  return MEMORY[0x1E0DC1EC0]();
}

uint64_t sub_1D7B496D8()
{
  return MEMORY[0x1E0DC1EC8]();
}

uint64_t sub_1D7B496E4()
{
  return MEMORY[0x1E0DC2220]();
}

uint64_t sub_1D7B496F0()
{
  return MEMORY[0x1E0DC2250]();
}

uint64_t sub_1D7B496FC()
{
  return MEMORY[0x1E0DC2360]();
}

uint64_t sub_1D7B49708()
{
  return MEMORY[0x1E0DC23A0]();
}

uint64_t sub_1D7B49714()
{
  return MEMORY[0x1E0DC29B8]();
}

uint64_t sub_1D7B49720()
{
  return MEMORY[0x1E0C95C60]();
}

uint64_t sub_1D7B4972C()
{
  return MEMORY[0x1E0C95C70]();
}

uint64_t sub_1D7B49738()
{
  return MEMORY[0x1E0C95CA8]();
}

uint64_t sub_1D7B49744()
{
  return MEMORY[0x1E0C95D20]();
}

uint64_t sub_1D7B49750()
{
  return MEMORY[0x1E0C95D78]();
}

uint64_t sub_1D7B4975C()
{
  return MEMORY[0x1E0C95DD8]();
}

uint64_t sub_1D7B49768()
{
  return MEMORY[0x1E0C95DE0]();
}

uint64_t sub_1D7B49774()
{
  return MEMORY[0x1E0C95DE8]();
}

uint64_t sub_1D7B49780()
{
  return MEMORY[0x1E0C95ED8]();
}

uint64_t sub_1D7B4978C()
{
  return MEMORY[0x1E0C95F08]();
}

uint64_t sub_1D7B49798()
{
  return MEMORY[0x1E0C95F20]();
}

uint64_t sub_1D7B497A4()
{
  return MEMORY[0x1E0C95F28]();
}

uint64_t sub_1D7B497B0()
{
  return MEMORY[0x1E0C95F60]();
}

uint64_t sub_1D7B497BC()
{
  return MEMORY[0x1E0C95F70]();
}

uint64_t sub_1D7B497C8()
{
  return MEMORY[0x1E0C95FA8]();
}

uint64_t sub_1D7B497D4()
{
  return MEMORY[0x1E0C96018]();
}

uint64_t sub_1D7B497E0()
{
  return MEMORY[0x1E0C96030]();
}

uint64_t sub_1D7B497EC()
{
  return MEMORY[0x1E0C96128]();
}

uint64_t sub_1D7B497F8()
{
  return MEMORY[0x1E0C96150]();
}

uint64_t sub_1D7B49804()
{
  return MEMORY[0x1E0C96158]();
}

uint64_t sub_1D7B49810()
{
  return MEMORY[0x1E0C96160]();
}

uint64_t sub_1D7B4981C()
{
  return MEMORY[0x1E0C96170]();
}

uint64_t sub_1D7B49828()
{
  return MEMORY[0x1E0C96178]();
}

uint64_t sub_1D7B49834()
{
  return MEMORY[0x1E0C961D0]();
}

uint64_t sub_1D7B49840()
{
  return MEMORY[0x1E0C96290]();
}

uint64_t sub_1D7B4984C()
{
  return MEMORY[0x1E0C96378]();
}

uint64_t sub_1D7B49858()
{
  return MEMORY[0x1E0C96410]();
}

uint64_t sub_1D7B49864()
{
  return MEMORY[0x1E0CD83B8]();
}

uint64_t sub_1D7B49870()
{
  return MEMORY[0x1E0CD8550]();
}

uint64_t sub_1D7B4987C()
{
  return MEMORY[0x1E0CD8650]();
}

uint64_t sub_1D7B49888()
{
  return MEMORY[0x1E0CD88C0]();
}

uint64_t sub_1D7B49894()
{
  return MEMORY[0x1E0CD88F0]();
}

uint64_t sub_1D7B498A0()
{
  return MEMORY[0x1E0CD88F8]();
}

uint64_t sub_1D7B498AC()
{
  return MEMORY[0x1E0CD8B98]();
}

uint64_t sub_1D7B498B8()
{
  return MEMORY[0x1E0CD8BA8]();
}

uint64_t sub_1D7B498C4()
{
  return MEMORY[0x1E0CD8BB0]();
}

uint64_t sub_1D7B498D0()
{
  return MEMORY[0x1E0CD8CB0]();
}

uint64_t sub_1D7B498DC()
{
  return MEMORY[0x1E0CD8D60]();
}

uint64_t sub_1D7B498E8()
{
  return MEMORY[0x1E0CD8EF0]();
}

uint64_t sub_1D7B498F4()
{
  return MEMORY[0x1E0CD9000]();
}

uint64_t sub_1D7B49900()
{
  return MEMORY[0x1E0CD9030]();
}

uint64_t sub_1D7B4990C()
{
  return MEMORY[0x1E0CD9128]();
}

uint64_t sub_1D7B49918()
{
  return MEMORY[0x1E0CD9168]();
}

uint64_t sub_1D7B49924()
{
  return MEMORY[0x1E0CD91C0]();
}

uint64_t sub_1D7B49930()
{
  return MEMORY[0x1E0CD9240]();
}

uint64_t sub_1D7B4993C()
{
  return MEMORY[0x1E0CD9428]();
}

uint64_t sub_1D7B49948()
{
  return MEMORY[0x1E0CD9450]();
}

uint64_t sub_1D7B49954()
{
  return MEMORY[0x1E0CD94E8]();
}

uint64_t sub_1D7B49960()
{
  return MEMORY[0x1E0CD98C8]();
}

uint64_t sub_1D7B4996C()
{
  return MEMORY[0x1E0CD9958]();
}

uint64_t sub_1D7B49978()
{
  return MEMORY[0x1E0CD9BF0]();
}

uint64_t sub_1D7B49984()
{
  return MEMORY[0x1E0CD9D00]();
}

uint64_t sub_1D7B49990()
{
  return MEMORY[0x1E0CDA088]();
}

uint64_t sub_1D7B4999C()
{
  return MEMORY[0x1E0CDA218]();
}

uint64_t sub_1D7B499A8()
{
  return MEMORY[0x1E0CDA268]();
}

uint64_t sub_1D7B499B4()
{
  return MEMORY[0x1E0CDA4A8]();
}

uint64_t sub_1D7B499C0()
{
  return MEMORY[0x1E0CDA590]();
}

uint64_t sub_1D7B499CC()
{
  return MEMORY[0x1E0CDA5A0]();
}

uint64_t sub_1D7B499D8()
{
  return MEMORY[0x1E0CDA618]();
}

uint64_t sub_1D7B499E4()
{
  return MEMORY[0x1E0CDA620]();
}

uint64_t sub_1D7B499F0()
{
  return MEMORY[0x1E0CDA630]();
}

uint64_t sub_1D7B499FC()
{
  return MEMORY[0x1E0CDA640]();
}

uint64_t sub_1D7B49A08()
{
  return MEMORY[0x1E0CDA668]();
}

uint64_t sub_1D7B49A14()
{
  return MEMORY[0x1E0CDA670]();
}

uint64_t sub_1D7B49A20()
{
  return MEMORY[0x1E0CDA750]();
}

uint64_t sub_1D7B49A2C()
{
  return MEMORY[0x1E0CDA758]();
}

uint64_t sub_1D7B49A38()
{
  return MEMORY[0x1E0CDA7F8]();
}

uint64_t sub_1D7B49A44()
{
  return MEMORY[0x1E0CDA810]();
}

uint64_t sub_1D7B49A50()
{
  return MEMORY[0x1E0CDA8D8]();
}

uint64_t sub_1D7B49A5C()
{
  return MEMORY[0x1E0CDA8E0]();
}

uint64_t sub_1D7B49A68()
{
  return MEMORY[0x1E0CDA940]();
}

uint64_t sub_1D7B49A74()
{
  return MEMORY[0x1E0CDA948]();
}

uint64_t sub_1D7B49A80()
{
  return MEMORY[0x1E0CEF8C8]();
}

uint64_t sub_1D7B49A8C()
{
  return MEMORY[0x1E0CEF910]();
}

uint64_t sub_1D7B49A98()
{
  return MEMORY[0x1E0CEF998]();
}

uint64_t sub_1D7B49AA4()
{
  return MEMORY[0x1E0CDA9D0]();
}

uint64_t sub_1D7B49AB0()
{
  return MEMORY[0x1E0CDA9E0]();
}

uint64_t sub_1D7B49ABC()
{
  return MEMORY[0x1E0CDAA20]();
}

uint64_t sub_1D7B49AC8()
{
  return MEMORY[0x1E0CDAA30]();
}

uint64_t sub_1D7B49AD4()
{
  return MEMORY[0x1E0CDAA58]();
}

uint64_t sub_1D7B49AE0()
{
  return MEMORY[0x1E0CDAA60]();
}

uint64_t sub_1D7B49AEC()
{
  return MEMORY[0x1E0CDAA68]();
}

uint64_t sub_1D7B49AF8()
{
  return MEMORY[0x1E0CDACB8]();
}

uint64_t sub_1D7B49B04()
{
  return MEMORY[0x1E0CDACC8]();
}

uint64_t sub_1D7B49B10()
{
  return MEMORY[0x1E0CDB0E8]();
}

uint64_t sub_1D7B49B1C()
{
  return MEMORY[0x1E0CDB420]();
}

uint64_t sub_1D7B49B28()
{
  return MEMORY[0x1E0CDB430]();
}

uint64_t sub_1D7B49B34()
{
  return MEMORY[0x1E0CDB5F8]();
}

uint64_t sub_1D7B49B40()
{
  return MEMORY[0x1E0CDB608]();
}

uint64_t sub_1D7B49B4C()
{
  return MEMORY[0x1E0CDB628]();
}

uint64_t sub_1D7B49B58()
{
  return MEMORY[0x1E0CDB630]();
}

uint64_t sub_1D7B49B64()
{
  return MEMORY[0x1E0CDB658]();
}

uint64_t sub_1D7B49B70()
{
  return MEMORY[0x1E0CDB668]();
}

uint64_t sub_1D7B49B7C()
{
  return MEMORY[0x1E0CDB678]();
}

uint64_t sub_1D7B49B88()
{
  return MEMORY[0x1E0CDB688]();
}

uint64_t sub_1D7B49B94()
{
  return MEMORY[0x1E0CDB698]();
}

uint64_t sub_1D7B49BA0()
{
  return MEMORY[0x1E0CDB6A8]();
}

uint64_t sub_1D7B49BAC()
{
  return MEMORY[0x1E0CDB6B8]();
}

uint64_t sub_1D7B49BB8()
{
  return MEMORY[0x1E0CDB6D0]();
}

uint64_t sub_1D7B49BC4()
{
  return MEMORY[0x1E0CDB6E0]();
}

uint64_t sub_1D7B49BD0()
{
  return MEMORY[0x1E0CDB6F0]();
}

uint64_t sub_1D7B49BDC()
{
  return MEMORY[0x1E0CDB6F8]();
}

uint64_t sub_1D7B49BE8()
{
  return MEMORY[0x1E0CDB820]();
}

uint64_t sub_1D7B49BF4()
{
  return MEMORY[0x1E0CDB870]();
}

uint64_t sub_1D7B49C00()
{
  return MEMORY[0x1E0CDBA08]();
}

uint64_t sub_1D7B49C0C()
{
  return MEMORY[0x1E0CDBA18]();
}

uint64_t sub_1D7B49C18()
{
  return MEMORY[0x1E0CDBAB0]();
}

uint64_t sub_1D7B49C24()
{
  return MEMORY[0x1E0CDBB10]();
}

uint64_t sub_1D7B49C30()
{
  return MEMORY[0x1E0CDBD58]();
}

uint64_t sub_1D7B49C3C()
{
  return MEMORY[0x1E0CDBD70]();
}

uint64_t sub_1D7B49C48()
{
  return MEMORY[0x1E0CDBE08]();
}

uint64_t sub_1D7B49C54()
{
  return MEMORY[0x1E0CDBF88]();
}

uint64_t sub_1D7B49C60()
{
  return MEMORY[0x1E0CDBF98]();
}

uint64_t sub_1D7B49C6C()
{
  return MEMORY[0x1E0CDBFA8]();
}

uint64_t sub_1D7B49C78()
{
  return MEMORY[0x1E0CDC088]();
}

uint64_t sub_1D7B49C84()
{
  return MEMORY[0x1E0CDC098]();
}

uint64_t sub_1D7B49C90()
{
  return MEMORY[0x1E0CDC4D0]();
}

uint64_t sub_1D7B49C9C()
{
  return MEMORY[0x1E0CDC968]();
}

uint64_t sub_1D7B49CA8()
{
  return MEMORY[0x1E0CDC978]();
}

uint64_t sub_1D7B49CB4()
{
  return MEMORY[0x1E0CDC988]();
}

uint64_t sub_1D7B49CC0()
{
  return MEMORY[0x1E0CDC990]();
}

uint64_t sub_1D7B49CCC()
{
  return MEMORY[0x1E0CDCA38]();
}

uint64_t sub_1D7B49CD8()
{
  return MEMORY[0x1E0CDCA50]();
}

uint64_t sub_1D7B49CE4()
{
  return MEMORY[0x1E0CDCF68]();
}

uint64_t sub_1D7B49CF0()
{
  return MEMORY[0x1E0CDCFD0]();
}

uint64_t sub_1D7B49CFC()
{
  return MEMORY[0x1E0CDD2D8]();
}

uint64_t sub_1D7B49D08()
{
  return MEMORY[0x1E0CDD300]();
}

uint64_t sub_1D7B49D14()
{
  return MEMORY[0x1E0CDD310]();
}

uint64_t sub_1D7B49D20()
{
  return MEMORY[0x1E0CDD320]();
}

uint64_t sub_1D7B49D2C()
{
  return MEMORY[0x1E0CDD348]();
}

uint64_t sub_1D7B49D38()
{
  return MEMORY[0x1E0CDD358]();
}

uint64_t sub_1D7B49D44()
{
  return MEMORY[0x1E0CDD390]();
}

uint64_t sub_1D7B49D50()
{
  return MEMORY[0x1E0CDD3A0]();
}

uint64_t sub_1D7B49D5C()
{
  return MEMORY[0x1E0CDD3B0]();
}

uint64_t sub_1D7B49D68()
{
  return MEMORY[0x1E0CDD3C0]();
}

uint64_t sub_1D7B49D74()
{
  return MEMORY[0x1E0CDD438]();
}

uint64_t sub_1D7B49D80()
{
  return MEMORY[0x1E0CDD488]();
}

uint64_t sub_1D7B49D8C()
{
  return MEMORY[0x1E0CDD490]();
}

uint64_t sub_1D7B49D98()
{
  return MEMORY[0x1E0CDD4D8]();
}

uint64_t sub_1D7B49DA4()
{
  return MEMORY[0x1E0CDD520]();
}

uint64_t sub_1D7B49DB0()
{
  return MEMORY[0x1E0CDD560]();
}

uint64_t sub_1D7B49DBC()
{
  return MEMORY[0x1E0CDD5E0]();
}

uint64_t sub_1D7B49DC8()
{
  return MEMORY[0x1E0CDD5F8]();
}

uint64_t sub_1D7B49DD4()
{
  return MEMORY[0x1E0CDD638]();
}

uint64_t sub_1D7B49DE0()
{
  return MEMORY[0x1E0CDD648]();
}

uint64_t sub_1D7B49DEC()
{
  return MEMORY[0x1E0CDD678]();
}

uint64_t sub_1D7B49DF8()
{
  return MEMORY[0x1E0CDD688]();
}

uint64_t sub_1D7B49E04()
{
  return MEMORY[0x1E0CDD718]();
}

uint64_t sub_1D7B49E10()
{
  return MEMORY[0x1E0CDD728]();
}

uint64_t sub_1D7B49E1C()
{
  return MEMORY[0x1E0CDD750]();
}

uint64_t sub_1D7B49E28()
{
  return MEMORY[0x1E0CDD770]();
}

uint64_t sub_1D7B49E34()
{
  return MEMORY[0x1E0CDD860]();
}

uint64_t sub_1D7B49E40()
{
  return MEMORY[0x1E0CDD928]();
}

uint64_t sub_1D7B49E4C()
{
  return MEMORY[0x1E0CDD938]();
}

uint64_t sub_1D7B49E58()
{
  return MEMORY[0x1E0CDDA90]();
}

uint64_t sub_1D7B49E64()
{
  return MEMORY[0x1E0CDDAA0]();
}

uint64_t sub_1D7B49E70()
{
  return MEMORY[0x1E0CDDB88]();
}

uint64_t sub_1D7B49E7C()
{
  return MEMORY[0x1E0CDDB98]();
}

uint64_t sub_1D7B49E88()
{
  return MEMORY[0x1E0CDDC48]();
}

uint64_t sub_1D7B49E94()
{
  return MEMORY[0x1E0CDDC60]();
}

uint64_t sub_1D7B49EA0()
{
  return MEMORY[0x1E0CDDC68]();
}

uint64_t sub_1D7B49EAC()
{
  return MEMORY[0x1E0CDDDC0]();
}

uint64_t sub_1D7B49EB8()
{
  return MEMORY[0x1E0CDDDD0]();
}

uint64_t sub_1D7B49EC4()
{
  return MEMORY[0x1E0CEFAF8]();
}

uint64_t sub_1D7B49ED0()
{
  return MEMORY[0x1E0CDDE48]();
}

uint64_t sub_1D7B49EDC()
{
  return MEMORY[0x1E0CDDE58]();
}

uint64_t sub_1D7B49EE8()
{
  return MEMORY[0x1E0CDDF88]();
}

uint64_t sub_1D7B49EF4()
{
  return MEMORY[0x1E0CDE2C8]();
}

uint64_t sub_1D7B49F00()
{
  return MEMORY[0x1E0CDE380]();
}

uint64_t sub_1D7B49F0C()
{
  return MEMORY[0x1E0CDE590]();
}

uint64_t sub_1D7B49F18()
{
  return MEMORY[0x1E0CDE638]();
}

uint64_t sub_1D7B49F24()
{
  return MEMORY[0x1E0CDEA88]();
}

uint64_t sub_1D7B49F30()
{
  return MEMORY[0x1E0CDEAE8]();
}

uint64_t sub_1D7B49F3C()
{
  return MEMORY[0x1E0CDEC40]();
}

uint64_t sub_1D7B49F48()
{
  return MEMORY[0x1E0CDEDA0]();
}

uint64_t sub_1D7B49F54()
{
  return MEMORY[0x1E0CDEE88]();
}

uint64_t sub_1D7B49F60()
{
  return MEMORY[0x1E0CDEF48]();
}

uint64_t sub_1D7B49F6C()
{
  return MEMORY[0x1E0CDF0D8]();
}

uint64_t sub_1D7B49F78()
{
  return MEMORY[0x1E0CDF2B0]();
}

uint64_t sub_1D7B49F84()
{
  return MEMORY[0x1E0CDF3B0]();
}

uint64_t sub_1D7B49F90()
{
  return MEMORY[0x1E0CDF3C0]();
}

uint64_t sub_1D7B49F9C()
{
  return MEMORY[0x1E0CDF3F0]();
}

uint64_t sub_1D7B49FA8()
{
  return MEMORY[0x1E0CDF438]();
}

uint64_t sub_1D7B49FB4()
{
  return MEMORY[0x1E0CDF458]();
}

uint64_t sub_1D7B49FC0()
{
  return MEMORY[0x1E0CDF4D0]();
}

uint64_t sub_1D7B49FCC()
{
  return MEMORY[0x1E0CDF530]();
}

uint64_t sub_1D7B49FD8()
{
  return MEMORY[0x1E0CDF588]();
}

uint64_t sub_1D7B49FE4()
{
  return MEMORY[0x1E0CDF5F8]();
}

uint64_t sub_1D7B49FF0()
{
  return MEMORY[0x1E0CDF6A8]();
}

uint64_t sub_1D7B49FFC()
{
  return MEMORY[0x1E0CDF6D8]();
}

uint64_t sub_1D7B4A008()
{
  return MEMORY[0x1E0CDF700]();
}

uint64_t sub_1D7B4A014()
{
  return MEMORY[0x1E0CDF7E8]();
}

uint64_t sub_1D7B4A020()
{
  return MEMORY[0x1E0CDF810]();
}

uint64_t sub_1D7B4A02C()
{
  return MEMORY[0x1E0CDF858]();
}

uint64_t sub_1D7B4A038()
{
  return MEMORY[0x1E0CDF968]();
}

uint64_t sub_1D7B4A044()
{
  return MEMORY[0x1E0CDF970]();
}

uint64_t sub_1D7B4A050()
{
  return MEMORY[0x1E0CDF988]();
}

uint64_t sub_1D7B4A05C()
{
  return MEMORY[0x1E0CDF990]();
}

uint64_t sub_1D7B4A068()
{
  return MEMORY[0x1E0CDF9A8]();
}

uint64_t sub_1D7B4A074()
{
  return MEMORY[0x1E0CDF9F0]();
}

uint64_t sub_1D7B4A080()
{
  return MEMORY[0x1E0CDFA28]();
}

uint64_t sub_1D7B4A08C()
{
  return MEMORY[0x1E0CDFA38]();
}

uint64_t sub_1D7B4A098()
{
  return MEMORY[0x1E0CDFAF0]();
}

uint64_t sub_1D7B4A0A4()
{
  return MEMORY[0x1E0CDFC88]();
}

uint64_t sub_1D7B4A0B0()
{
  return MEMORY[0x1E0CDFCA0]();
}

uint64_t sub_1D7B4A0BC()
{
  return MEMORY[0x1E0CDFCE0]();
}

uint64_t sub_1D7B4A0C8()
{
  return MEMORY[0x1E0CDFD48]();
}

uint64_t sub_1D7B4A0D4()
{
  return MEMORY[0x1E0CDFE98]();
}

uint64_t sub_1D7B4A0E0()
{
  return MEMORY[0x1E0CDFEC0]();
}

uint64_t sub_1D7B4A0EC()
{
  return MEMORY[0x1E0CDFF48]();
}

uint64_t sub_1D7B4A0F8()
{
  return MEMORY[0x1E0CDFF60]();
}

uint64_t sub_1D7B4A104()
{
  return MEMORY[0x1E0CDFF78]();
}

uint64_t sub_1D7B4A110()
{
  return MEMORY[0x1E0CDFF80]();
}

uint64_t sub_1D7B4A11C()
{
  return MEMORY[0x1E0CE0220]();
}

uint64_t sub_1D7B4A128()
{
  return MEMORY[0x1E0CE0228]();
}

uint64_t sub_1D7B4A134()
{
  return MEMORY[0x1E0CE0648]();
}

uint64_t sub_1D7B4A140()
{
  return MEMORY[0x1E0CE0670]();
}

uint64_t sub_1D7B4A14C()
{
  return MEMORY[0x1E0CE06D0]();
}

uint64_t sub_1D7B4A158()
{
  return MEMORY[0x1E0DEF560]();
}

uint64_t sub_1D7B4A164()
{
  return MEMORY[0x1E0CB44A0]();
}

uint64_t sub_1D7B4A170()
{
  return MEMORY[0x1E0CB44A8]();
}

uint64_t sub_1D7B4A17C()
{
  return MEMORY[0x1E0CB44B0]();
}

uint64_t sub_1D7B4A188()
{
  return MEMORY[0x1E0CB44B8]();
}

uint64_t sub_1D7B4A194()
{
  return MEMORY[0x1E0CB44C0]();
}

uint64_t sub_1D7B4A1A0()
{
  return MEMORY[0x1E0CB44C8]();
}

uint64_t sub_1D7B4A1AC()
{
  return MEMORY[0x1E0CB44D0]();
}

uint64_t sub_1D7B4A1B8()
{
  return MEMORY[0x1E0CB44D8]();
}

uint64_t sub_1D7B4A1C4()
{
  return MEMORY[0x1E0CB44E0]();
}

uint64_t sub_1D7B4A1D0()
{
  return MEMORY[0x1E0CEFBA0]();
}

uint64_t sub_1D7B4A1DC()
{
  return MEMORY[0x1E0CEFBB0]();
}

uint64_t sub_1D7B4A1E8()
{
  return MEMORY[0x1E0CEFD70]();
}

uint64_t sub_1D7B4A1F4()
{
  return MEMORY[0x1E0CEFD78]();
}

uint64_t sub_1D7B4A200()
{
  return MEMORY[0x1E0CEFDA8]();
}

uint64_t sub_1D7B4A20C()
{
  return MEMORY[0x1E0CEFFC0]();
}

uint64_t sub_1D7B4A218()
{
  return MEMORY[0x1E0DE9D60]();
}

uint64_t sub_1D7B4A224()
{
  return MEMORY[0x1E0DE9D78]();
}

uint64_t sub_1D7B4A230()
{
  return MEMORY[0x1E0CB17D8]();
}

uint64_t sub_1D7B4A23C()
{
  return MEMORY[0x1E0CB1808]();
}

uint64_t sub_1D7B4A248()
{
  return MEMORY[0x1E0DE9E40]();
}

uint64_t sub_1D7B4A254()
{
  return MEMORY[0x1E0DE9EC0]();
}

uint64_t sub_1D7B4A260()
{
  return MEMORY[0x1E0DE9F38]();
}

uint64_t sub_1D7B4A26C()
{
  return MEMORY[0x1E0DE9F50]();
}

uint64_t sub_1D7B4A278()
{
  return MEMORY[0x1E0DEA048]();
}

uint64_t sub_1D7B4A284()
{
  return MEMORY[0x1E0DEA0A0]();
}

uint64_t sub_1D7B4A290()
{
  return MEMORY[0x1E0DEA0A8]();
}

uint64_t sub_1D7B4A29C()
{
  return MEMORY[0x1E0DEA1B8]();
}

uint64_t sub_1D7B4A2A8()
{
  return MEMORY[0x1E0DEA1C0]();
}

uint64_t sub_1D7B4A2B4()
{
  return MEMORY[0x1E0DEA1C8]();
}

uint64_t sub_1D7B4A2C0()
{
  return MEMORY[0x1E0DEA2B8]();
}

uint64_t sub_1D7B4A2CC()
{
  return MEMORY[0x1E0DEA390]();
}

uint64_t sub_1D7B4A2D8()
{
  return MEMORY[0x1E0DEA3B0]();
}

uint64_t sub_1D7B4A2E4()
{
  return MEMORY[0x1E0D2BFB8]();
}

uint64_t sub_1D7B4A2F0()
{
  return MEMORY[0x1E0DEA3C0]();
}

uint64_t sub_1D7B4A2FC()
{
  return MEMORY[0x1E0DEA3C8]();
}

uint64_t sub_1D7B4A308()
{
  return MEMORY[0x1E0DEA3D0]();
}

uint64_t sub_1D7B4A314()
{
  return MEMORY[0x1E0DEA4B0]();
}

uint64_t sub_1D7B4A320()
{
  return MEMORY[0x1E0DEA568]();
}

uint64_t sub_1D7B4A32C()
{
  return MEMORY[0x1E0CB18A0]();
}

uint64_t sub_1D7B4A338()
{
  return MEMORY[0x1E0CB18B8]();
}

uint64_t sub_1D7B4A344()
{
  return MEMORY[0x1E0CB18C0]();
}

uint64_t sub_1D7B4A350()
{
  return MEMORY[0x1E0CB18D8]();
}

uint64_t sub_1D7B4A35C()
{
  return MEMORY[0x1E0CB18E0]();
}

uint64_t sub_1D7B4A368()
{
  return MEMORY[0x1E0CB18E8]();
}

uint64_t sub_1D7B4A374()
{
  return MEMORY[0x1E0CB18F0]();
}

uint64_t sub_1D7B4A380()
{
  return MEMORY[0x1E0CB18F8]();
}

uint64_t sub_1D7B4A38C()
{
  return MEMORY[0x1E0CB1940]();
}

uint64_t sub_1D7B4A398()
{
  return MEMORY[0x1E0CB1950]();
}

uint64_t sub_1D7B4A3A4()
{
  return MEMORY[0x1E0CB1960]();
}

uint64_t sub_1D7B4A3B0()
{
  return MEMORY[0x1E0CB1970]();
}

uint64_t sub_1D7B4A3BC()
{
  return MEMORY[0x1E0CB1980]();
}

uint64_t sub_1D7B4A3C8()
{
  return MEMORY[0x1E0CB19C0]();
}

uint64_t sub_1D7B4A3D4()
{
  return MEMORY[0x1E0CB1A40]();
}

uint64_t sub_1D7B4A3E0()
{
  return MEMORY[0x1E0DEA5F8]();
}

uint64_t sub_1D7B4A3EC()
{
  return MEMORY[0x1E0DEA658]();
}

uint64_t sub_1D7B4A3F8()
{
  return MEMORY[0x1E0DEA758]();
}

uint64_t sub_1D7B4A404()
{
  return MEMORY[0x1E0DEA7B8]();
}

uint64_t sub_1D7B4A410()
{
  return MEMORY[0x1E0DEA7D0]();
}

uint64_t sub_1D7B4A41C()
{
  return MEMORY[0x1E0DEA800]();
}

uint64_t sub_1D7B4A428()
{
  return MEMORY[0x1E0DEA840]();
}

uint64_t sub_1D7B4A434()
{
  return MEMORY[0x1E0DEA850]();
}

uint64_t sub_1D7B4A440()
{
  return MEMORY[0x1E0DEAA08]();
}

uint64_t sub_1D7B4A44C()
{
  return MEMORY[0x1E0DEAA50]();
}

uint64_t sub_1D7B4A458()
{
  return MEMORY[0x1E0DEAA58]();
}

uint64_t sub_1D7B4A464()
{
  return MEMORY[0x1E0DEAB08]();
}

uint64_t sub_1D7B4A470()
{
  return MEMORY[0x1E0DEAB88]();
}

uint64_t sub_1D7B4A47C()
{
  return MEMORY[0x1E0DEAC88]();
}

uint64_t sub_1D7B4A488()
{
  return MEMORY[0x1E0DEAC90]();
}

uint64_t sub_1D7B4A494()
{
  return MEMORY[0x1E0DEADA0]();
}

uint64_t sub_1D7B4A4A0()
{
  return MEMORY[0x1E0CB1AC0]();
}

uint64_t sub_1D7B4A4AC()
{
  return MEMORY[0x1E0CB1AE8]();
}

uint64_t sub_1D7B4A4B8()
{
  return MEMORY[0x1E0DEADB8]();
}

uint64_t sub_1D7B4A4C4()
{
  return MEMORY[0x1E0DEADE8]();
}

uint64_t sub_1D7B4A4D0()
{
  return MEMORY[0x1E0DEAE28]();
}

uint64_t sub_1D7B4A4DC()
{
  return MEMORY[0x1E0DEAE58]();
}

uint64_t sub_1D7B4A4E8()
{
  return MEMORY[0x1E0DEAEC8]();
}

uint64_t sub_1D7B4A4F4()
{
  return MEMORY[0x1E0DF05B8]();
}

uint64_t sub_1D7B4A500()
{
  return MEMORY[0x1E0DF06D8]();
}

uint64_t sub_1D7B4A50C()
{
  return MEMORY[0x1E0DF06E0]();
}

uint64_t sub_1D7B4A518()
{
  return MEMORY[0x1E0DF0700]();
}

uint64_t sub_1D7B4A524()
{
  return MEMORY[0x1E0DF0748]();
}

uint64_t sub_1D7B4A530()
{
  return MEMORY[0x1E0DF0750]();
}

uint64_t sub_1D7B4A53C()
{
  return MEMORY[0x1E0CB1B50]();
}

uint64_t sub_1D7B4A548()
{
  return MEMORY[0x1E0DEB258]();
}

uint64_t sub_1D7B4A554()
{
  return MEMORY[0x1E0DEB2E8]();
}

uint64_t sub_1D7B4A560()
{
  return MEMORY[0x1E0DEB388]();
}

uint64_t sub_1D7B4A56C()
{
  return MEMORY[0x1E0CB1C10]();
}

uint64_t sub_1D7B4A578()
{
  return MEMORY[0x1E0DEB528]();
}

uint64_t sub_1D7B4A584()
{
  return MEMORY[0x1E0DEB560]();
}

uint64_t sub_1D7B4A590()
{
  return MEMORY[0x1E0DEB5A8]();
}

uint64_t sub_1D7B4A59C()
{
  return MEMORY[0x1E0DEB5B0]();
}

uint64_t sub_1D7B4A5A8()
{
  return MEMORY[0x1E0DEB6D0]();
}

uint64_t sub_1D7B4A5B4()
{
  return MEMORY[0x1E0D2BFC0]();
}

uint64_t sub_1D7B4A5C0()
{
  return MEMORY[0x1E0CB4510]();
}

uint64_t sub_1D7B4A5CC()
{
  return MEMORY[0x1E0CB4518]();
}

uint64_t sub_1D7B4A5D8()
{
  return MEMORY[0x1E0DEB848]();
}

uint64_t sub_1D7B4A5E4()
{
  return MEMORY[0x1E0C9B900]();
}

uint64_t sub_1D7B4A5F0()
{
  return MEMORY[0x1E0DF2270]();
}

uint64_t sub_1D7B4A5FC()
{
  return MEMORY[0x1E0DF2278]();
}

uint64_t sub_1D7B4A608()
{
  return MEMORY[0x1E0DF2280]();
}

uint64_t sub_1D7B4A614()
{
  return MEMORY[0x1E0DF2288]();
}

uint64_t sub_1D7B4A620()
{
  return MEMORY[0x1E0DF2290]();
}

uint64_t sub_1D7B4A62C()
{
  return MEMORY[0x1E0DC2AF0]();
}

uint64_t sub_1D7B4A638()
{
  return MEMORY[0x1E0DC2B20]();
}

uint64_t sub_1D7B4A644()
{
  return MEMORY[0x1E0DC2B40]();
}

uint64_t sub_1D7B4A650()
{
  return MEMORY[0x1E0DEF868]();
}

uint64_t sub_1D7B4A65C()
{
  return MEMORY[0x1E0DEF8E8]();
}

uint64_t sub_1D7B4A668()
{
  return MEMORY[0x1E0DEF920]();
}

uint64_t sub_1D7B4A674()
{
  return MEMORY[0x1E0DC2C50]();
}

uint64_t sub_1D7B4A680()
{
  return MEMORY[0x1E0CB1EC8]();
}

uint64_t sub_1D7B4A68C()
{
  return MEMORY[0x1E0CB1F30]();
}

uint64_t sub_1D7B4A698()
{
  return MEMORY[0x1E0CB1F50]();
}

uint64_t sub_1D7B4A6A4()
{
  return MEMORY[0x1E0CB45D0]();
}

uint64_t sub_1D7B4A6B0()
{
  return MEMORY[0x1E0CB45D8]();
}

uint64_t sub_1D7B4A6BC()
{
  return MEMORY[0x1E0DC2FC0]();
}

uint64_t sub_1D7B4A6C8()
{
  return MEMORY[0x1E0CB20E0]();
}

uint64_t sub_1D7B4A6D4()
{
  return MEMORY[0x1E0DEFCD8]();
}

uint64_t sub_1D7B4A6E0()
{
  return MEMORY[0x1E0DEFCE0]();
}

uint64_t sub_1D7B4A6EC()
{
  return MEMORY[0x1E0DC2FF8]();
}

uint64_t sub_1D7B4A6F8()
{
  return MEMORY[0x1E0DEB940]();
}

uint64_t sub_1D7B4A704()
{
  return MEMORY[0x1E0DEBC20]();
}

uint64_t sub_1D7B4A710()
{
  return MEMORY[0x1E0DEBC90]();
}

uint64_t sub_1D7B4A71C()
{
  return MEMORY[0x1E0DEBCB0]();
}

uint64_t sub_1D7B4A728()
{
  return MEMORY[0x1E0DEBCB8]();
}

uint64_t sub_1D7B4A734()
{
  return MEMORY[0x1E0CB2400]();
}

uint64_t sub_1D7B4A740()
{
  return MEMORY[0x1E0CB2430]();
}

uint64_t sub_1D7B4A74C()
{
  return MEMORY[0x1E0CB2478]();
}

uint64_t sub_1D7B4A758()
{
  return MEMORY[0x1E0CB24F0]();
}

uint64_t sub_1D7B4A764()
{
  return MEMORY[0x1E0DEBE30]();
}

uint64_t sub_1D7B4A770()
{
  return MEMORY[0x1E0DEBE50]();
}

uint64_t sub_1D7B4A77C()
{
  return MEMORY[0x1E0DEBFC8]();
}

uint64_t sub_1D7B4A788()
{
  return MEMORY[0x1E0DEBFD8]();
}

uint64_t sub_1D7B4A794()
{
  return MEMORY[0x1E0DEC050]();
}

uint64_t sub_1D7B4A7A0()
{
  return MEMORY[0x1E0DEC068]();
}

uint64_t sub_1D7B4A7AC()
{
  return MEMORY[0x1E0DEC248]();
}

uint64_t sub_1D7B4A7B8()
{
  return MEMORY[0x1E0DEC250]();
}

uint64_t sub_1D7B4A7C4()
{
  return MEMORY[0x1E0DEC260]();
}

uint64_t sub_1D7B4A7D0()
{
  return MEMORY[0x1E0DEC268]();
}

uint64_t sub_1D7B4A7DC()
{
  return MEMORY[0x1E0DEC2A8]();
}

uint64_t sub_1D7B4A7E8()
{
  return MEMORY[0x1E0DEC2B0]();
}

uint64_t sub_1D7B4A7F4()
{
  return MEMORY[0x1E0DEC300]();
}

uint64_t sub_1D7B4A800()
{
  return MEMORY[0x1E0DEC3E0]();
}

uint64_t sub_1D7B4A80C()
{
  return MEMORY[0x1E0DEC3E8]();
}

uint64_t sub_1D7B4A818()
{
  return MEMORY[0x1E0DEC518]();
}

uint64_t sub_1D7B4A824()
{
  return MEMORY[0x1E0DEC588]();
}

uint64_t sub_1D7B4A830()
{
  return MEMORY[0x1E0DEC660]();
}

uint64_t sub_1D7B4A83C()
{
  return MEMORY[0x1E0DEC670]();
}

uint64_t sub_1D7B4A848()
{
  return MEMORY[0x1E0DEC688]();
}

uint64_t sub_1D7B4A854()
{
  return MEMORY[0x1E0DEC6C0]();
}

uint64_t sub_1D7B4A860()
{
  return MEMORY[0x1E0DEC6C8]();
}

uint64_t sub_1D7B4A86C()
{
  return MEMORY[0x1E0DEC8E0]();
}

uint64_t sub_1D7B4A878()
{
  return MEMORY[0x1E0DEC8F8]();
}

uint64_t sub_1D7B4A884()
{
  return MEMORY[0x1E0DECBE0]();
}

uint64_t sub_1D7B4A890()
{
  return MEMORY[0x1E0DECBE8]();
}

uint64_t sub_1D7B4A89C()
{
  return MEMORY[0x1E0DECBF8]();
}

uint64_t sub_1D7B4A8A8()
{
  return MEMORY[0x1E0DECD18]();
}

uint64_t sub_1D7B4A8B4()
{
  return MEMORY[0x1E0DECD38]();
}

uint64_t sub_1D7B4A8C0()
{
  return MEMORY[0x1E0DECD40]();
}

uint64_t sub_1D7B4A8CC()
{
  return MEMORY[0x1E0DECD50]();
}

uint64_t sub_1D7B4A8D8()
{
  return MEMORY[0x1E0DECD58]();
}

uint64_t sub_1D7B4A8E4()
{
  return MEMORY[0x1E0DECD70]();
}

uint64_t sub_1D7B4A8F0()
{
  return MEMORY[0x1E0DECE70]();
}

uint64_t sub_1D7B4A8FC()
{
  return MEMORY[0x1E0DED1A0]();
}

uint64_t sub_1D7B4A908()
{
  return MEMORY[0x1E0DED1B0]();
}

uint64_t sub_1D7B4A914()
{
  return MEMORY[0x1E0DED1D0]();
}

uint64_t sub_1D7B4A920()
{
  return MEMORY[0x1E0DED1E8]();
}

uint64_t sub_1D7B4A92C()
{
  return MEMORY[0x1E0DED5F0]();
}

uint64_t sub_1D7B4A938()
{
  return MEMORY[0x1E0DED600]();
}

uint64_t sub_1D7B4A944()
{
  return MEMORY[0x1E0DED768]();
}

uint64_t sub_1D7B4A950()
{
  return MEMORY[0x1E0DED9C8]();
}

uint64_t sub_1D7B4A95C()
{
  return MEMORY[0x1E0DED9F8]();
}

uint64_t sub_1D7B4A968()
{
  return MEMORY[0x1E0DEDAE0]();
}

uint64_t sub_1D7B4A974()
{
  return MEMORY[0x1E0DEDAE8]();
}

uint64_t sub_1D7B4A980()
{
  return MEMORY[0x1E0DEDEF8]();
}

uint64_t sub_1D7B4A98C()
{
  return MEMORY[0x1E0DEDF10]();
}

uint64_t sub_1D7B4A998()
{
  return MEMORY[0x1E0DEDF40]();
}

uint64_t sub_1D7B4A9A4()
{
  return MEMORY[0x1E0DEE298]();
}

uint64_t sub_1D7B4A9B0()
{
  return MEMORY[0x1E0CB2778]();
}

uint64_t sub_1D7B4A9BC()
{
  return MEMORY[0x1E0CB2780]();
}

uint64_t sub_1D7B4A9C8()
{
  return MEMORY[0x1E0CB2788]();
}

uint64_t sub_1D7B4A9D4()
{
  return MEMORY[0x1E0CB2790]();
}

uint64_t sub_1D7B4A9E0()
{
  return MEMORY[0x1E0CB27A0]();
}

uint64_t sub_1D7B4A9EC()
{
  return MEMORY[0x1E0CB27A8]();
}

uint64_t sub_1D7B4A9F8()
{
  return MEMORY[0x1E0CB27B8]();
}

uint64_t sub_1D7B4AA04()
{
  return MEMORY[0x1E0CB27C0]();
}

uint64_t sub_1D7B4AA10()
{
  return MEMORY[0x1E0CB27D0]();
}

uint64_t sub_1D7B4AA1C()
{
  return MEMORY[0x1E0CB27E0]();
}

uint64_t sub_1D7B4AA28()
{
  return MEMORY[0x1E0CB27F0]();
}

uint64_t sub_1D7B4AA34()
{
  return MEMORY[0x1E0CB2818]();
}

uint64_t sub_1D7B4AA40()
{
  return MEMORY[0x1E0CB2820]();
}

uint64_t sub_1D7B4AA4C()
{
  return MEMORY[0x1E0CB2828]();
}

uint64_t sub_1D7B4AA58()
{
  return MEMORY[0x1E0CB2830]();
}

uint64_t sub_1D7B4AA64()
{
  return MEMORY[0x1E0CB2840]();
}

uint64_t sub_1D7B4AA70()
{
  return MEMORY[0x1E0CB2848]();
}

uint64_t sub_1D7B4AA7C()
{
  return MEMORY[0x1E0DEE7A8]();
}

uint64_t sub_1D7B4AA88()
{
  return MEMORY[0x1E0DEE7C8]();
}

uint64_t sub_1D7B4AA94()
{
  return MEMORY[0x1E0DEE978]();
}

uint64_t AnalyticsSendEvent()
{
  return MEMORY[0x1E0D15420]();
}

CFTimeInterval CACurrentMediaTime(void)
{
  CFTimeInterval result;

  MEMORY[0x1E0CD2388]();
  return result;
}

CATransform3D *__cdecl CATransform3DMakeTranslation(CATransform3D *__return_ptr retstr, CGFloat tx, CGFloat ty, CGFloat tz)
{
  return (CATransform3D *)MEMORY[0x1E0CD2648](retstr, tx, ty, tz);
}

CATransform3D *__cdecl CATransform3DScale(CATransform3D *__return_ptr retstr, CATransform3D *t, CGFloat sx, CGFloat sy, CGFloat sz)
{
  return (CATransform3D *)MEMORY[0x1E0CD2668](retstr, t, sx, sy, sz);
}

CATransform3D *__cdecl CATransform3DTranslate(CATransform3D *__return_ptr retstr, CATransform3D *t, CGFloat tx, CGFloat ty, CGFloat tz)
{
  return (CATransform3D *)MEMORY[0x1E0CD2678](retstr, t, tx, ty, tz);
}

unsigned __int8 *__cdecl CC_SHA1(const void *data, CC_LONG len, unsigned __int8 *md)
{
  return (unsigned __int8 *)MEMORY[0x1E0C80328](data, *(_QWORD *)&len, md);
}

unsigned __int8 *__cdecl CC_SHA256(const void *data, CC_LONG len, unsigned __int8 *md)
{
  return (unsigned __int8 *)MEMORY[0x1E0C80368](data, *(_QWORD *)&len, md);
}

CFAbsoluteTime CFAbsoluteTimeGetCurrent(void)
{
  CFAbsoluteTime result;

  MEMORY[0x1E0C97C58]();
  return result;
}

void CFArrayAppendValue(CFMutableArrayRef theArray, const void *value)
{
  MEMORY[0x1E0C97CF8](theArray, value);
}

CFMutableArrayRef CFArrayCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFArrayCallBacks *callBacks)
{
  return (CFMutableArrayRef)MEMORY[0x1E0C97D38](allocator, capacity, callBacks);
}

CFIndex CFArrayGetCount(CFArrayRef theArray)
{
  return MEMORY[0x1E0C97D60](theArray);
}

const void *__cdecl CFArrayGetValueAtIndex(CFArrayRef theArray, CFIndex idx)
{
  return (const void *)MEMORY[0x1E0C97D98](theArray, idx);
}

Boolean CFBooleanGetValue(CFBooleanRef BOOLean)
{
  return MEMORY[0x1E0C97FE0](BOOLean);
}

const void *__cdecl CFDictionaryGetValue(CFDictionaryRef theDict, const void *key)
{
  return (const void *)MEMORY[0x1E0C985B8](theDict, key);
}

void CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior)
{
  MEMORY[0x1E0C988B0](center, observer, callBack, name, object, suspensionBehavior);
}

CFNotificationCenterRef CFNotificationCenterGetLocalCenter(void)
{
  return (CFNotificationCenterRef)MEMORY[0x1E0C988D0]();
}

void CFRelease(CFTypeRef cf)
{
  MEMORY[0x1E0C98BC0](cf);
}

CFTypeRef CFRetain(CFTypeRef cf)
{
  return (CFTypeRef)MEMORY[0x1E0C98BD0](cf);
}

CFComparisonResult CFStringCompare(CFStringRef theString1, CFStringRef theString2, CFStringCompareFlags compareOptions)
{
  return MEMORY[0x1E0C98F10](theString1, theString2, compareOptions);
}

CGAffineTransform *__cdecl CGAffineTransformConcat(CGAffineTransform *__return_ptr retstr, CGAffineTransform *t1, CGAffineTransform *t2)
{
  return (CGAffineTransform *)MEMORY[0x1E0C9BA90](retstr, t1, t2);
}

CGAffineTransform *__cdecl CGAffineTransformInvert(CGAffineTransform *__return_ptr retstr, CGAffineTransform *t)
{
  return (CGAffineTransform *)MEMORY[0x1E0C9BAB0](retstr, t);
}

BOOL CGAffineTransformIsIdentity(CGAffineTransform *t)
{
  return MEMORY[0x1E0C9BAB8](t);
}

CGAffineTransform *__cdecl CGAffineTransformMakeRotation(CGAffineTransform *__return_ptr retstr, CGFloat angle)
{
  return (CGAffineTransform *)MEMORY[0x1E0C9BAD0](retstr, angle);
}

CGAffineTransform *__cdecl CGAffineTransformMakeScale(CGAffineTransform *__return_ptr retstr, CGFloat sx, CGFloat sy)
{
  return (CGAffineTransform *)MEMORY[0x1E0C9BAD8](retstr, sx, sy);
}

CGAffineTransform *__cdecl CGAffineTransformMakeTranslation(CGAffineTransform *__return_ptr retstr, CGFloat tx, CGFloat ty)
{
  return (CGAffineTransform *)MEMORY[0x1E0C9BAE0](retstr, tx, ty);
}

CGAffineTransform *__cdecl CGAffineTransformScale(CGAffineTransform *__return_ptr retstr, CGAffineTransform *t, CGFloat sx, CGFloat sy)
{
  return (CGAffineTransform *)MEMORY[0x1E0C9BAF8](retstr, t, sx, sy);
}

CGAffineTransform *__cdecl CGAffineTransformTranslate(CGAffineTransform *__return_ptr retstr, CGAffineTransform *t, CGFloat tx, CGFloat ty)
{
  return (CGAffineTransform *)MEMORY[0x1E0C9BB00](retstr, t, tx, ty);
}

CGContextRef CGBitmapContextCreate(void *data, size_t width, size_t height, size_t bitsPerComponent, size_t bytesPerRow, CGColorSpaceRef space, uint32_t bitmapInfo)
{
  return (CGContextRef)MEMORY[0x1E0C9BB10](data, width, height, bitsPerComponent, bytesPerRow, space, *(_QWORD *)&bitmapInfo);
}

const CGFloat *__cdecl CGColorGetComponents(CGColorRef color)
{
  return (const CGFloat *)MEMORY[0x1E0C9BD08](color);
}

CGColorSpaceRef CGColorSpaceCreateDeviceRGB(void)
{
  return (CGColorSpaceRef)MEMORY[0x1E0C9BDF0]();
}

CGColorSpaceRef CGColorSpaceCreatePattern(CGColorSpaceRef baseSpace)
{
  return (CGColorSpaceRef)MEMORY[0x1E0C9BE30](baseSpace);
}

CGColorSpaceRef CGColorSpaceCreateWithName(CFStringRef name)
{
  return (CGColorSpaceRef)MEMORY[0x1E0C9BE50](name);
}

void CGColorSpaceRelease(CGColorSpaceRef space)
{
  MEMORY[0x1E0C9BF30](space);
}

void CGContextAddArc(CGContextRef c, CGFloat x, CGFloat y, CGFloat radius, CGFloat startAngle, CGFloat endAngle, int clockwise)
{
  MEMORY[0x1E0C9BFB0](c, *(_QWORD *)&clockwise, x, y, radius, startAngle, endAngle);
}

void CGContextAddLineToPoint(CGContextRef c, CGFloat x, CGFloat y)
{
  MEMORY[0x1E0C9BFD0](c, x, y);
}

void CGContextAddPath(CGContextRef c, CGPathRef path)
{
  MEMORY[0x1E0C9BFD8](c, path);
}

void CGContextAddRect(CGContextRef c, CGRect rect)
{
  MEMORY[0x1E0C9BFE8](c, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

void CGContextBeginPath(CGContextRef c)
{
  MEMORY[0x1E0C9C000](c);
}

void CGContextClip(CGContextRef c)
{
  MEMORY[0x1E0C9C028](c);
}

void CGContextClipToRect(CGContextRef c, CGRect rect)
{
  MEMORY[0x1E0C9C038](c, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

void CGContextClosePath(CGContextRef c)
{
  MEMORY[0x1E0C9C048](c);
}

void CGContextConcatCTM(CGContextRef c, CGAffineTransform *transform)
{
  MEMORY[0x1E0C9C050](c, transform);
}

void CGContextDrawImage(CGContextRef c, CGRect rect, CGImageRef image)
{
  MEMORY[0x1E0C9C170](c, image, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

void CGContextDrawLinearGradient(CGContextRef c, CGGradientRef gradient, CGPoint startPoint, CGPoint endPoint, CGGradientDrawingOptions options)
{
  MEMORY[0x1E0C9C198](c, gradient, *(_QWORD *)&options, (__n128)startPoint, *(__n128 *)&startPoint.y, (__n128)endPoint, *(__n128 *)&endPoint.y);
}

void CGContextDrawPath(CGContextRef c, CGPathDrawingMode mode)
{
  MEMORY[0x1E0C9C1B8](c, *(_QWORD *)&mode);
}

void CGContextFillEllipseInRect(CGContextRef c, CGRect rect)
{
  MEMORY[0x1E0C9C210](c, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

void CGContextFillPath(CGContextRef c)
{
  MEMORY[0x1E0C9C218](c);
}

void CGContextFillRect(CGContextRef c, CGRect rect)
{
  MEMORY[0x1E0C9C220](c, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

void CGContextFlush(CGContextRef c)
{
  MEMORY[0x1E0C9C230](c);
}

void CGContextMoveToPoint(CGContextRef c, CGFloat x, CGFloat y)
{
  MEMORY[0x1E0C9C330](c, x, y);
}

void CGContextRelease(CGContextRef c)
{
  MEMORY[0x1E0C9C340](c);
}

void CGContextReplacePathWithStrokedPath(CGContextRef c)
{
  MEMORY[0x1E0C9C350](c);
}

void CGContextRestoreGState(CGContextRef c)
{
  MEMORY[0x1E0C9C370](c);
}

void CGContextSaveGState(CGContextRef c)
{
  MEMORY[0x1E0C9C388](c);
}

void CGContextScaleCTM(CGContextRef c, CGFloat sx, CGFloat sy)
{
  MEMORY[0x1E0C9C390](c, sx, sy);
}

void CGContextSetAlpha(CGContextRef c, CGFloat alpha)
{
  MEMORY[0x1E0C9C3B8](c, alpha);
}

void CGContextSetBlendMode(CGContextRef c, CGBlendMode mode)
{
  MEMORY[0x1E0C9C3C8](c, *(_QWORD *)&mode);
}

void CGContextSetFillColorWithColor(CGContextRef c, CGColorRef color)
{
  MEMORY[0x1E0C9C408](c, color);
}

void CGContextSetInterpolationQuality(CGContextRef c, CGInterpolationQuality quality)
{
  MEMORY[0x1E0C9C458](c, *(_QWORD *)&quality);
}

void CGContextSetLineCap(CGContextRef c, CGLineCap cap)
{
  MEMORY[0x1E0C9C468](c, *(_QWORD *)&cap);
}

void CGContextSetLineDash(CGContextRef c, CGFloat phase, const CGFloat *lengths, size_t count)
{
  MEMORY[0x1E0C9C470](c, lengths, count, phase);
}

void CGContextSetLineJoin(CGContextRef c, CGLineJoin join)
{
  MEMORY[0x1E0C9C478](c, *(_QWORD *)&join);
}

void CGContextSetLineWidth(CGContextRef c, CGFloat width)
{
  MEMORY[0x1E0C9C480](c, width);
}

void CGContextSetRGBFillColor(CGContextRef c, CGFloat red, CGFloat green, CGFloat blue, CGFloat alpha)
{
  MEMORY[0x1E0C9C4A0](c, red, green, blue, alpha);
}

void CGContextSetRGBStrokeColor(CGContextRef c, CGFloat red, CGFloat green, CGFloat blue, CGFloat alpha)
{
  MEMORY[0x1E0C9C4A8](c, red, green, blue, alpha);
}

void CGContextSetStrokeColorSpace(CGContextRef c, CGColorSpaceRef space)
{
  MEMORY[0x1E0C9C500](c, space);
}

void CGContextSetStrokeColorWithColor(CGContextRef c, CGColorRef color)
{
  MEMORY[0x1E0C9C508](c, color);
}

void CGContextSetStrokePattern(CGContextRef c, CGPatternRef pattern, const CGFloat *components)
{
  MEMORY[0x1E0C9C510](c, pattern, components);
}

void CGContextSetTextDrawingMode(CGContextRef c, CGTextDrawingMode mode)
{
  MEMORY[0x1E0C9C520](c, *(_QWORD *)&mode);
}

void CGContextStrokePath(CGContextRef c)
{
  MEMORY[0x1E0C9C570](c);
}

void CGContextTranslateCTM(CGContextRef c, CGFloat tx, CGFloat ty)
{
  MEMORY[0x1E0C9C588](c, tx, ty);
}

CGDataProviderRef CGDataProviderCreateWithData(void *info, const void *data, size_t size, CGDataProviderReleaseDataCallback releaseData)
{
  return (CGDataProviderRef)MEMORY[0x1E0C9C600](info, data, size, releaseData);
}

void CGDataProviderRelease(CGDataProviderRef provider)
{
  MEMORY[0x1E0C9C638](provider);
}

CGGradientRef CGGradientCreateWithColors(CGColorSpaceRef space, CFArrayRef colors, const CGFloat *locations)
{
  return (CGGradientRef)MEMORY[0x1E0C9CA90](space, colors, locations);
}

void CGGradientRelease(CGGradientRef gradient)
{
  MEMORY[0x1E0C9CAC0](gradient);
}

CGImageRef CGImageCreate(size_t width, size_t height, size_t bitsPerComponent, size_t bitsPerPixel, size_t bytesPerRow, CGColorSpaceRef space, CGBitmapInfo bitmapInfo, CGDataProviderRef provider, const CGFloat *decode, BOOL shouldInterpolate, CGColorRenderingIntent intent)
{
  return (CGImageRef)MEMORY[0x1E0C9CB80](width, height, bitsPerComponent, bitsPerPixel, bytesPerRow, space, *(_QWORD *)&bitmapInfo, provider);
}

CGImageRef CGImageCreateWithImageInRect(CGImageRef image, CGRect rect)
{
  return (CGImageRef)MEMORY[0x1E0C9CBA8](image, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

void CGImageRelease(CGImageRef image)
{
  MEMORY[0x1E0C9CDA0](image);
}

void CGPathAddLineToPoint(CGMutablePathRef path, const CGAffineTransform *m, CGFloat x, CGFloat y)
{
  MEMORY[0x1E0C9D2A8](path, m, x, y);
}

void CGPathAddLines(CGMutablePathRef path, const CGAffineTransform *m, const CGPoint *points, size_t count)
{
  MEMORY[0x1E0C9D2B0](path, m, points, count);
}

void CGPathApply(CGPathRef path, void *info, CGPathApplierFunction function)
{
  MEMORY[0x1E0C9D2E8](path, info, function);
}

void CGPathCloseSubpath(CGMutablePathRef path)
{
  MEMORY[0x1E0C9D310](path);
}

CGPathRef CGPathCreateCopyByDashingPath(CGPathRef path, const CGAffineTransform *transform, CGFloat phase, const CGFloat *lengths, size_t count)
{
  return (CGPathRef)MEMORY[0x1E0C9D328](path, transform, lengths, count, phase);
}

CGPathRef CGPathCreateCopyByStrokingPath(CGPathRef path, const CGAffineTransform *transform, CGFloat lineWidth, CGLineCap lineCap, CGLineJoin lineJoin, CGFloat miterLimit)
{
  return (CGPathRef)MEMORY[0x1E0C9D348](path, transform, *(_QWORD *)&lineCap, *(_QWORD *)&lineJoin, lineWidth, miterLimit);
}

CGMutablePathRef CGPathCreateMutable(void)
{
  return (CGMutablePathRef)MEMORY[0x1E0C9D388]();
}

void CGPathMoveToPoint(CGMutablePathRef path, const CGAffineTransform *m, CGFloat x, CGFloat y)
{
  MEMORY[0x1E0C9D490](path, m, x, y);
}

void CGPathRelease(CGPathRef path)
{
  MEMORY[0x1E0C9D498](path);
}

CGPatternRef CGPatternCreate(void *info, CGRect bounds, CGAffineTransform *matrix, CGFloat xStep, CGFloat yStep, CGPatternTiling tiling, BOOL isColored, const CGPatternCallbacks *callbacks)
{
  return (CGPatternRef)MEMORY[0x1E0C9D4A8](info, matrix, *(_QWORD *)&tiling, isColored, callbacks, (__n128)bounds.origin, *(__n128 *)&bounds.origin.y, (__n128)bounds.size, *(__n128 *)&bounds.size.height, xStep, yStep);
}

CGPoint CGPointApplyAffineTransform(CGPoint point, CGAffineTransform *t)
{
  double v2;
  double v3;
  CGPoint result;

  MEMORY[0x1E0C9D520](t, (__n128)point, *(__n128 *)&point.y);
  result.y = v3;
  result.x = v2;
  return result;
}

CGRect CGRectApplyAffineTransform(CGRect rect, CGAffineTransform *t)
{
  double v2;
  double v3;
  double v4;
  double v5;
  CGRect result;

  MEMORY[0x1E0C9D548](t, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  result.size.height = v5;
  result.size.width = v4;
  result.origin.y = v3;
  result.origin.x = v2;
  return result;
}

BOOL CGRectContainsPoint(CGRect rect, CGPoint point)
{
  return MEMORY[0x1E0C9D550]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height, (__n128)point, *(__n128 *)&point.y);
}

BOOL CGRectContainsRect(CGRect rect1, CGRect rect2)
{
  return MEMORY[0x1E0C9D558]((__n128)rect1.origin, *(__n128 *)&rect1.origin.y, (__n128)rect1.size, *(__n128 *)&rect1.size.height, (__n128)rect2.origin, *(__n128 *)&rect2.origin.y, (__n128)rect2.size, *(__n128 *)&rect2.size.height);
}

void CGRectDivide(CGRect rect, CGRect *slice, CGRect *remainder, CGFloat amount, CGRectEdge edge)
{
  MEMORY[0x1E0C9D568](slice, remainder, *(_QWORD *)&edge, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height, amount);
}

BOOL CGRectEqualToRect(CGRect rect1, CGRect rect2)
{
  return MEMORY[0x1E0C9D570]((__n128)rect1.origin, *(__n128 *)&rect1.origin.y, (__n128)rect1.size, *(__n128 *)&rect1.size.height, (__n128)rect2.origin, *(__n128 *)&rect2.origin.y, (__n128)rect2.size, *(__n128 *)&rect2.size.height);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D580]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMaxX(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D588]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMaxY(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5A0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMidX(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5A8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMidY(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5B0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinX(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5C0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinY(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5C8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetWidth(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5D0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGRect CGRectInset(CGRect rect, CGFloat dx, CGFloat dy)
{
  double v3;
  double v4;
  double v5;
  double v6;
  CGRect result;

  MEMORY[0x1E0C9D5E8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height, dx, dy);
  result.size.height = v6;
  result.size.width = v5;
  result.origin.y = v4;
  result.origin.x = v3;
  return result;
}

CGRect CGRectIntegral(CGRect rect)
{
  double v1;
  double v2;
  double v3;
  double v4;
  CGRect result;

  MEMORY[0x1E0C9D5F0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  result.size.height = v4;
  result.size.width = v3;
  result.origin.y = v2;
  result.origin.x = v1;
  return result;
}

CGRect CGRectIntersection(CGRect r1, CGRect r2)
{
  double v2;
  double v3;
  double v4;
  double v5;
  CGRect result;

  MEMORY[0x1E0C9D5F8]((__n128)r1.origin, *(__n128 *)&r1.origin.y, (__n128)r1.size, *(__n128 *)&r1.size.height, (__n128)r2.origin, *(__n128 *)&r2.origin.y, (__n128)r2.size, *(__n128 *)&r2.size.height);
  result.size.height = v5;
  result.size.width = v4;
  result.origin.y = v3;
  result.origin.x = v2;
  return result;
}

BOOL CGRectIntersectsRect(CGRect rect1, CGRect rect2)
{
  return MEMORY[0x1E0C9D600]((__n128)rect1.origin, *(__n128 *)&rect1.origin.y, (__n128)rect1.size, *(__n128 *)&rect1.size.height, (__n128)rect2.origin, *(__n128 *)&rect2.origin.y, (__n128)rect2.size, *(__n128 *)&rect2.size.height);
}

BOOL CGRectIsEmpty(CGRect rect)
{
  return MEMORY[0x1E0C9D608]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

BOOL CGRectIsNull(CGRect rect)
{
  return MEMORY[0x1E0C9D618]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

CGRect CGRectOffset(CGRect rect, CGFloat dx, CGFloat dy)
{
  double v3;
  double v4;
  double v5;
  double v6;
  CGRect result;

  MEMORY[0x1E0C9D630]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height, dx, dy);
  result.size.height = v6;
  result.size.width = v5;
  result.origin.y = v4;
  result.origin.x = v3;
  return result;
}

CGRect CGRectStandardize(CGRect rect)
{
  double v1;
  double v2;
  double v3;
  double v4;
  CGRect result;

  MEMORY[0x1E0C9D638]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  result.size.height = v4;
  result.size.width = v3;
  result.origin.y = v2;
  result.origin.x = v1;
  return result;
}

CGRect CGRectUnion(CGRect r1, CGRect r2)
{
  double v2;
  double v3;
  double v4;
  double v5;
  CGRect result;

  MEMORY[0x1E0C9D640]((__n128)r1.origin, *(__n128 *)&r1.origin.y, (__n128)r1.size, *(__n128 *)&r1.size.height, (__n128)r2.origin, *(__n128 *)&r2.origin.y, (__n128)r2.size, *(__n128 *)&r2.size.height);
  result.size.height = v5;
  result.size.width = v4;
  result.origin.y = v3;
  result.origin.x = v2;
  return result;
}

uint64_t CPDateFormatStringForFormatType()
{
  return MEMORY[0x1E0CFA260]();
}

uint64_t CTFontCopySystemUIFontExcessiveLineHeightCharacterSet()
{
  return MEMORY[0x1E0CA79F8]();
}

uint64_t CTFontDescriptorCreateWithTextStyleAndAttributes()
{
  return MEMORY[0x1E0CA7B20]();
}

uint64_t CUIKCurrentLocaleRequiresUnabbrevatedMonthNames()
{
  return MEMORY[0x1E0D0C978]();
}

uint64_t HKAnalyticsDecadeBucketedAgeForAge()
{
  return MEMORY[0x1E0CB46B0]();
}

uint64_t HKAnalyticsDecadeBucketedAgeForAgeWithMinimumAge()
{
  return MEMORY[0x1E0CB46C0]();
}

uint64_t HKAnalyticsErrorCategoryForFeatureAvailabilityOnboardingEligibility()
{
  return MEMORY[0x1E0CB46D0]();
}

uint64_t HKAnalyticsErrorCategoryForFeatureAvailabilityOnboardingIneligibilityReasons()
{
  return MEMORY[0x1E0CB46D8]();
}

uint64_t HKAnalyticsErrorDetailsForFeatureAvailabilityOnboardingEligibility()
{
  return MEMORY[0x1E0CB46E0]();
}

uint64_t HKAnalyticsErrorDetailsForFeatureAvailabilityOnboardingIneligibilityReasons()
{
  return MEMORY[0x1E0CB46E8]();
}

uint64_t HKAnalyticsPropertyValueForBiologicalSex()
{
  return MEMORY[0x1E0CB4748]();
}

uint64_t HKAppleSleepingBreathingDisturbancesClassificationForQuantity()
{
  return MEMORY[0x1E0CB4770]();
}

uint64_t HKAppleSleepingBreathingDisturbancesMinimumQuantityForClassification()
{
  return MEMORY[0x1E0CB4778]();
}

BOOL HKAppleWalkingSteadinessClassificationForQuantity(HKQuantity *value, HKAppleWalkingSteadinessClassification *classificationOut, NSError **errorOut)
{
  return MEMORY[0x1E0CB4780](value, classificationOut, errorOut);
}

uint64_t HKAuthorizationStatusAllowsReading()
{
  return MEMORY[0x1E0CB4808]();
}

uint64_t HKAuthorizationStatusAllowsSharing()
{
  return MEMORY[0x1E0CB4810]();
}

uint64_t HKCalendarDateTransformNone()
{
  return MEMORY[0x1E0CB4858]();
}

uint64_t HKCalendarDateTransformPreceding6PM()
{
  return MEMORY[0x1E0CB4860]();
}

NSSet *HKCategoryValueSleepAnalysisAsleepValues(void)
{
  return (NSSet *)MEMORY[0x1E0CB49B0]();
}

uint64_t HKCompareDoubles()
{
  return MEMORY[0x1E0CB4A48]();
}

uint64_t HKConditionallyRedactedHeartRhythmString()
{
  return MEMORY[0x1E0CB4A78]();
}

uint64_t HKCreateSerialDispatchQueue()
{
  return MEMORY[0x1E0CB4B08]();
}

uint64_t HKCreateSerialDispatchQueueWithQOSClass()
{
  return MEMORY[0x1E0CB4B10]();
}

uint64_t HKDateMax()
{
  return MEMORY[0x1E0CB4B78]();
}

uint64_t HKDateMid()
{
  return MEMORY[0x1E0CB4B80]();
}

uint64_t HKDateMin()
{
  return MEMORY[0x1E0CB4B88]();
}

uint64_t HKDispatchAsyncOnGlobalConcurrentQueue()
{
  return MEMORY[0x1E0CB4CE8]();
}

uint64_t HKFeatureFlagBloodOxygenSaturationEnabled()
{
  return MEMORY[0x1E0CB4FE8]();
}

uint64_t HKFeaturePropertiesChangeNotificationForFeatureIdentifier()
{
  return MEMORY[0x1E0CB50C0]();
}

uint64_t HKHealthKitFrameworkBundle()
{
  return MEMORY[0x1E0CB5148]();
}

uint64_t HKImproveHealthAndActivityAnalyticsAllowed()
{
  return MEMORY[0x1E0CB51B8]();
}

uint64_t HKInternalAuthorizationStatusMake()
{
  return MEMORY[0x1E0CB51C0]();
}

uint64_t HKIsUnitTesting()
{
  return MEMORY[0x1E0CB5240]();
}

uint64_t HKLogAnalytics()
{
  return MEMORY[0x1E0CB5270]();
}

uint64_t HKLogCameraAccess()
{
  return MEMORY[0x1E0CB5290]();
}

uint64_t HKLogInfrastructure()
{
  return MEMORY[0x1E0CB52F8]();
}

uint64_t HKLogPhotoAccess()
{
  return MEMORY[0x1E0CB5338]();
}

uint64_t HKOxygenSaturationLowBarometricPressureThresholdQuantity()
{
  return MEMORY[0x1E0CB5760]();
}

uint64_t HKSafeObject()
{
  return MEMORY[0x1E0CB5E40]();
}

uint64_t HKSemanticVersionFromString()
{
  return MEMORY[0x1E0CB5E80]();
}

uint64_t HKSensitiveLogItem()
{
  return MEMORY[0x1E0CB5E90]();
}

uint64_t HKSeparateTimeIntervalComponents()
{
  return MEMORY[0x1E0CB5E98]();
}

uint64_t HKSeparateTimeIntervalComponentsWithDays()
{
  return MEMORY[0x1E0CB5EA0]();
}

uint64_t HKSeparateTimeIntervalComponentsWithWeeks()
{
  return MEMORY[0x1E0CB5EA8]();
}

uint64_t HKSleepScheduleWeekdayFromWeekdayComponent()
{
  return MEMORY[0x1E0CB5F00]();
}

uint64_t HKSleepScheduleWeekdaysIsSingleDay()
{
  return MEMORY[0x1E0CB5F10]();
}

uint64_t HKStateOfMindAssociationFromDomain()
{
  return MEMORY[0x1E0CB5F70]();
}

uint64_t HKStateOfMindKindFromReflectiveInterval()
{
  return MEMORY[0x1E0CB5F78]();
}

uint64_t HKStateOfMindValenceClassificationForValence()
{
  return MEMORY[0x1E0CB5F80]();
}

uint64_t HKStringFromBool()
{
  return MEMORY[0x1E0CB5FC0]();
}

uint64_t MGGetStringAnswer()
{
  return MEMORY[0x1E0DE2B80]();
}

CLLocationCoordinate2D MKCoordinateForMapPoint(MKMapPoint mapPoint)
{
  double v1;
  double v2;
  CLLocationCoordinate2D result;

  MEMORY[0x1E0CC1558]((__n128)mapPoint, *(__n128 *)&mapPoint.y);
  result.longitude = v2;
  result.latitude = v1;
  return result;
}

MKMapPoint MKMapPointForCoordinate(CLLocationCoordinate2D coordinate)
{
  double v1;
  double v2;
  MKMapPoint result;

  MEMORY[0x1E0CC15F8]((__n128)coordinate, *(__n128 *)&coordinate.longitude);
  result.y = v2;
  result.x = v1;
  return result;
}

MKMapRect MKMapRectInset(MKMapRect rect, double dx, double dy)
{
  double v3;
  double v4;
  double v5;
  double v6;
  MKMapRect result;

  MEMORY[0x1E0CC1628]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height, dx, dy);
  result.size.height = v6;
  result.size.width = v5;
  result.origin.y = v4;
  result.origin.x = v3;
  return result;
}

BOOL MKMapRectIntersectsRect(MKMapRect rect1, MKMapRect rect2)
{
  return MEMORY[0x1E0CC1638]((__n128)rect1.origin, *(__n128 *)&rect1.origin.y, (__n128)rect1.size, *(__n128 *)&rect1.size.height, (__n128)rect2.origin, *(__n128 *)&rect2.origin.y, (__n128)rect2.size, *(__n128 *)&rect2.size.height);
}

CGFloat MKRoadWidthAtZoomScale(MKZoomScale zoomScale)
{
  CGFloat result;

  MEMORY[0x1E0CC16D8](zoomScale);
  return result;
}

Class NSClassFromString(NSString *aClassName)
{
  return (Class)MEMORY[0x1E0CB28A0](aClassName);
}

void NSDecimalRound(NSDecimal *result, const NSDecimal *number, NSInteger scale, NSRoundingMode roundingMode)
{
  MEMORY[0x1E0CB2948](result, number, scale, roundingMode);
}

uint64_t NSRequestConcreteImplementation()
{
  return MEMORY[0x1E0CB3158]();
}

NSString *__cdecl NSStringFromCGPoint(CGPoint point)
{
  return (NSString *)MEMORY[0x1E0DC32E0]((__n128)point, *(__n128 *)&point.y);
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return (NSString *)MEMORY[0x1E0CB3200](aClass);
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return (NSString *)MEMORY[0x1E0CB3230](aSelector);
}

NSString *NSTemporaryDirectory(void)
{
  return (NSString *)MEMORY[0x1E0CB3250]();
}

uint64_t NSWeekdayComponentFromHKSleepScheduleWeekday()
{
  return MEMORY[0x1E0CB6248]();
}

uint64_t PBDataWriterWriteBOOLField()
{
  return MEMORY[0x1E0D82C10]();
}

uint64_t PBDataWriterWriteDataField()
{
  return MEMORY[0x1E0D82C28]();
}

uint64_t PBDataWriterWriteDoubleField()
{
  return MEMORY[0x1E0D82C38]();
}

uint64_t PBDataWriterWriteInt32Field()
{
  return MEMORY[0x1E0D82C58]();
}

uint64_t PBDataWriterWriteInt64Field()
{
  return MEMORY[0x1E0D82C68]();
}

uint64_t PBDataWriterWriteStringField()
{
  return MEMORY[0x1E0D82C98]();
}

uint64_t PBDataWriterWriteSubmessage()
{
  return MEMORY[0x1E0D82CB0]();
}

uint64_t PBReaderPlaceMark()
{
  return MEMORY[0x1E0D82CE0]();
}

uint64_t PBReaderReadData()
{
  return MEMORY[0x1E0D82CF0]();
}

uint64_t PBReaderReadString()
{
  return MEMORY[0x1E0D82D00]();
}

uint64_t PBReaderRecallMark()
{
  return MEMORY[0x1E0D82D10]();
}

uint64_t PBReaderSkipValueWithTag()
{
  return MEMORY[0x1E0D82D28]();
}

uint64_t PBRepeatedDoubleAdd()
{
  return MEMORY[0x1E0D82D68]();
}

uint64_t PBRepeatedDoubleClear()
{
  return MEMORY[0x1E0D82D70]();
}

uint64_t PBRepeatedDoubleCopy()
{
  return MEMORY[0x1E0D82D78]();
}

uint64_t PBRepeatedDoubleHash()
{
  return MEMORY[0x1E0D82D80]();
}

uint64_t PBRepeatedDoubleIsEqual()
{
  return MEMORY[0x1E0D82D88]();
}

uint64_t PBRepeatedDoubleNSArray()
{
  return MEMORY[0x1E0D82D90]();
}

uint64_t PBRepeatedDoubleSet()
{
  return MEMORY[0x1E0D82D98]();
}

uint64_t PBRepeatedInt64Add()
{
  return MEMORY[0x1E0D82E10]();
}

uint64_t PBRepeatedInt64Clear()
{
  return MEMORY[0x1E0D82E18]();
}

uint64_t PBRepeatedInt64Copy()
{
  return MEMORY[0x1E0D82E20]();
}

uint64_t PBRepeatedInt64Hash()
{
  return MEMORY[0x1E0D82E28]();
}

uint64_t PBRepeatedInt64IsEqual()
{
  return MEMORY[0x1E0D82E30]();
}

uint64_t PBRepeatedInt64NSArray()
{
  return MEMORY[0x1E0D82E38]();
}

uint64_t PBRepeatedInt64Set()
{
  return MEMORY[0x1E0D82E40]();
}

uint64_t PSHighLegibilityAlternateFont()
{
  return MEMORY[0x1E0D80860]();
}

OSStatus SecIdentityCopyPrivateKey(SecIdentityRef identityRef, SecKeyRef *privateKeyRef)
{
  return MEMORY[0x1E0CD6278](identityRef, privateKeyRef);
}

OSStatus SecItemAdd(CFDictionaryRef attributes, CFTypeRef *result)
{
  return MEMORY[0x1E0CD6290](attributes, result);
}

OSStatus SecItemCopyMatching(CFDictionaryRef query, CFTypeRef *result)
{
  return MEMORY[0x1E0CD6298](query, result);
}

OSStatus SecItemDelete(CFDictionaryRef query)
{
  return MEMORY[0x1E0CD62A0](query);
}

OSStatus SecItemUpdate(CFDictionaryRef query, CFDictionaryRef attributesToUpdate)
{
  return MEMORY[0x1E0CD62D8](query, attributesToUpdate);
}

size_t SecKeyGetBlockSize(SecKeyRef key)
{
  return MEMORY[0x1E0CD63D8](key);
}

OSStatus SecKeyRawSign(SecKeyRef key, SecPadding padding, const uint8_t *dataToSign, size_t dataToSignLen, uint8_t *sig, size_t *sigLen)
{
  return MEMORY[0x1E0CD63F8](key, *(_QWORD *)&padding, dataToSign, dataToSignLen, sig, sigLen);
}

OSStatus SecPKCS12Import(CFDataRef pkcs12_data, CFDictionaryRef options, CFArrayRef *items)
{
  return MEMORY[0x1E0CD6420](pkcs12_data, options, items);
}

BOOL UIAccessibilityDarkerSystemColorsEnabled(void)
{
  return MEMORY[0x1E0DC4500]();
}

uint64_t UICeilToViewScale()
{
  return MEMORY[0x1E0DC4888]();
}

NSComparisonResult UIContentSizeCategoryCompareToCategory(UIContentSizeCategory lhs, UIContentSizeCategory rhs)
{
  return MEMORY[0x1E0DC48E0](lhs, rhs);
}

BOOL UIContentSizeCategoryIsAccessibilityCategory(UIContentSizeCategory category)
{
  return MEMORY[0x1E0DC4910](category);
}

uint64_t UIDistanceBetweenPoints()
{
  return MEMORY[0x1E0DC4988]();
}

void UIGraphicsBeginImageContext(CGSize size)
{
  MEMORY[0x1E0DC4BB8]((__n128)size, *(__n128 *)&size.height);
}

void UIGraphicsBeginImageContextWithOptions(CGSize size, BOOL opaque, CGFloat scale)
{
  MEMORY[0x1E0DC4BC0](opaque, (__n128)size, *(__n128 *)&size.height, scale);
}

void UIGraphicsEndImageContext(void)
{
  MEMORY[0x1E0DC4BD8]();
}

CGContextRef UIGraphicsGetCurrentContext(void)
{
  return (CGContextRef)MEMORY[0x1E0DC4BE8]();
}

UIImage *UIGraphicsGetImageFromCurrentImageContext(void)
{
  return (UIImage *)MEMORY[0x1E0DC4BF0]();
}

void UIGraphicsPopContext(void)
{
  MEMORY[0x1E0DC4C00]();
}

void UIGraphicsPushContext(CGContextRef context)
{
  MEMORY[0x1E0DC4C08](context);
}

NSData *__cdecl UIImageJPEGRepresentation(UIImage *image, CGFloat compressionQuality)
{
  return (NSData *)MEMORY[0x1E0DC4C58](image, compressionQuality);
}

NSData *__cdecl UIImagePNGRepresentation(UIImage *image)
{
  return (NSData *)MEMORY[0x1E0DC4C60](image);
}

uint64_t UIMidPointBetweenPoints()
{
  return MEMORY[0x1E0DC5198]();
}

uint64_t UIPointRoundToViewScale()
{
  return MEMORY[0x1E0DC5208]();
}

uint64_t UIRectCenteredXInRect()
{
  return MEMORY[0x1E0DC5260]();
}

uint64_t UIRectCenteredYInRect()
{
  return MEMORY[0x1E0DC5270]();
}

uint64_t UIRectInset()
{
  return MEMORY[0x1E0DC52B8]();
}

uint64_t UIRectIntegralWithScale()
{
  return MEMORY[0x1E0DC52C8]();
}

uint64_t UIRoundToScale()
{
  return MEMORY[0x1E0DC52E8]();
}

uint64_t UIRoundToViewScale()
{
  return MEMORY[0x1E0DC52F8]();
}

uint64_t UISizeRoundToViewScale()
{
  return MEMORY[0x1E0DC53A0]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1E0C80928](aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
  MEMORY[0x1E0C80948](a1, *(_QWORD *)&a2);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x1E0C80958](aBlock);
}

uint64_t _CPTimeFormatIs24HourMode()
{
  return MEMORY[0x1E0CFAA00]();
}

uint64_t _CTServerConnectionCopyCellularUsagePolicy()
{
  return MEMORY[0x1E0CA6E80]();
}

uint64_t _CTServerConnectionCreateOnTargetQueue()
{
  return MEMORY[0x1E0CA6F30]();
}

uint64_t _CTServerConnectionSetCellularUsagePolicy()
{
  return MEMORY[0x1E0CA7068]();
}

uint64_t _HKAllQuantityTypes()
{
  return MEMORY[0x1E0CB70A0]();
}

uint64_t _HKBarometricPressureUnit()
{
  return MEMORY[0x1E0CB70C0]();
}

uint64_t _HKBloodGlucoseMillimolesPerLiterUnit()
{
  return MEMORY[0x1E0CB70D8]();
}

uint64_t _HKCategoryValueSleepAnalysisAsleepValues()
{
  return MEMORY[0x1E0CB7100]();
}

uint64_t _HKCategoryValueSleepAnalysisDefaultAsleepValue()
{
  return MEMORY[0x1E0CB7108]();
}

uint64_t _HKGenerateDefaultUnitForQuantityType()
{
  return MEMORY[0x1E0CB7180]();
}

uint64_t _HKInitializeLogging()
{
  return MEMORY[0x1E0CB7190]();
}

uint64_t _HKLogDroppedError()
{
  return MEMORY[0x1E0CB71A0]();
}

uint64_t _HKLogSignpostIDGenerate()
{
  return MEMORY[0x1E0CB71B8]();
}

uint64_t _HKMetadataKeyIsPrivate()
{
  return MEMORY[0x1E0CB71D0]();
}

uint64_t _HKStatisticsOptionAttenuateSamples()
{
  return MEMORY[0x1E0CB73C8]();
}

uint64_t _HKStatisticsOptionBaselineRelativeQuantities()
{
  return MEMORY[0x1E0CB73D0]();
}

uint64_t _HKWeatherTemperatureUnit()
{
  return MEMORY[0x1E0CB7400]();
}

uint64_t _HKWorkoutActivityNameForActivityType()
{
  return MEMORY[0x1E0CB7418]();
}

uint64_t _HKWorkoutActivityTypeIsValid()
{
  return MEMORY[0x1E0CB7430]();
}

uint64_t _HKWorkoutDistanceTypeForActivityType()
{
  return MEMORY[0x1E0CB7490]();
}

uint64_t _HKWorkoutEventTypeName()
{
  return MEMORY[0x1E0CB7498]();
}

uint64_t _HKWorkoutFlooredValueForQuantity()
{
  return MEMORY[0x1E0CB74A0]();
}

uint64_t _HKWorkoutSwimmingLocationTypeName()
{
  return MEMORY[0x1E0CB74E0]();
}

NSDictionary *_NSDictionaryOfVariableBindings(NSString *commaSeparatedKeysString, id firstValue, ...)
{
  return (NSDictionary *)MEMORY[0x1E0CB3BC8](commaSeparatedKeysString, firstValue);
}

uint64_t _UIApplicationIsExtension()
{
  return MEMORY[0x1E0DC5720]();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
  MEMORY[0x1E0C80A20](exception_object);
}

void __assert_rtn(const char *a1, const char *a2, int a3, const char *a4)
{
  MEMORY[0x1E0C80A58](a1, a2, *(_QWORD *)&a3, a4);
}

double __exp10(double a1)
{
  double result;

  MEMORY[0x1E0C80AC8](a1);
  return result;
}

float __exp10f(float a1)
{
  float result;

  MEMORY[0x1E0C80AD0](a1);
  return result;
}

uint64_t _os_feature_enabled_impl()
{
  return MEMORY[0x1E0C81010]();
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81020](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81038](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81040](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81048](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C810D0](dso, log, type, spid, name, format, buf, *(_QWORD *)&size);
}

uint64_t _sl_dlopen()
{
  return MEMORY[0x1E0DA88F0]();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x1E0DEEA28]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x1E0DEEA40]();
}

uint32_t arc4random(void)
{
  return MEMORY[0x1E0C81570]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x1E0C81758](a1, a2);
}

int close(int a1)
{
  return MEMORY[0x1E0C82688](*(_QWORD *)&a1);
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82BC8](when, queue, block);
}

void dispatch_assert_queue_V2(dispatch_queue_t queue)
{
  MEMORY[0x1E0C82BE8](queue);
}

void dispatch_assert_queue_not_V2(dispatch_queue_t queue)
{
  MEMORY[0x1E0C82BF8](queue);
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82C00](queue, block);
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return (dispatch_queue_global_t)MEMORY[0x1E0C82D00](identifier, flags);
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x1E0C82D20]();
}

void dispatch_group_enter(dispatch_group_t group)
{
  MEMORY[0x1E0C82D28](group);
}

void dispatch_group_leave(dispatch_group_t group)
{
  MEMORY[0x1E0C82D30](group);
}

void dispatch_group_notify(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82D38](group, queue, block);
}

intptr_t dispatch_group_wait(dispatch_group_t group, dispatch_time_t timeout)
{
  return MEMORY[0x1E0C82D48](group, timeout);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
  MEMORY[0x1E0C82E08](predicate, block);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return (dispatch_queue_t)MEMORY[0x1E0C82E48](label, attr);
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return (dispatch_semaphore_t)MEMORY[0x1E0C82EB8](value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return MEMORY[0x1E0C82EC8](dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return MEMORY[0x1E0C82ED8](dsema, timeout);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82F90](queue, block);
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return MEMORY[0x1E0C82FB8](when, delta);
}

char *dlerror(void)
{
  return (char *)MEMORY[0x1E0C83038]();
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return (void *)MEMORY[0x1E0C83050](__handle, __symbol);
}

long double exp2(long double __x)
{
  long double result;

  MEMORY[0x1E0C83288](__x);
  return result;
}

long double fmod(long double __x, long double __y)
{
  long double result;

  MEMORY[0x1E0C83440](__x, __y);
  return result;
}

void free(void *a1)
{
  MEMORY[0x1E0C834A8](a1);
}

uint64_t hk_maxWalkingSteadinessValueForClassification()
{
  return MEMORY[0x1E0CB74E8]();
}

uint64_t hk_minWalkingSteadinessValueForClassification()
{
  return MEMORY[0x1E0CB74F0]();
}

long double hypot(long double __x, long double __y)
{
  long double result;

  MEMORY[0x1E0C838E8](__x, __y);
  return result;
}

long double log(long double __x)
{
  long double result;

  MEMORY[0x1E0C83BB8](__x);
  return result;
}

long double log10(long double __x)
{
  long double result;

  MEMORY[0x1E0C83BC0](__x);
  return result;
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1E0C83E68](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1E0C83EE0](ptr);
}

void *__cdecl malloc_type_calloc(size_t count, size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1E0C83EF8](count, size, type_id);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1E0C83F00](size, type_id);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1E0C84088](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1E0C84098](__dst, __src, __len);
}

char *__cdecl mkdtemp(char *a1)
{
  return (char *)MEMORY[0x1E0C84170](a1);
}

int mkstemps(char *a1, int a2)
{
  return MEMORY[0x1E0C841B0](a1, *(_QWORD *)&a2);
}

uint32_t notify_cancel(int token)
{
  return MEMORY[0x1E0C843D8](*(_QWORD *)&token);
}

uint32_t notify_post(const char *name)
{
  return MEMORY[0x1E0C843F8](name);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return MEMORY[0x1E0C84408](name, out_token, queue, handler);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1E0DE7BA8](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1E0DE7BB0](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x1E0DE7BB8]();
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7BD0](a1);
}

void objc_autoreleasePoolPop(void *context)
{
  MEMORY[0x1E0DE7BD8](context);
}

void *objc_autoreleasePoolPush(void)
{
  return (void *)MEMORY[0x1E0DE7BE0]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7BE8](a1);
}

id objc_begin_catch(void *exc_buf)
{
  return (id)MEMORY[0x1E0DE7BF0](exc_buf);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1E0DE7BF8]();
}

void objc_copyStruct(void *dest, const void *src, ptrdiff_t size, BOOL atomic, BOOL hasStrong)
{
  MEMORY[0x1E0DE7C30](dest, src, size, atomic, hasStrong);
}

void objc_copyWeak(id *to, id *from)
{
  MEMORY[0x1E0DE7C38](to, from);
}

void objc_destroyWeak(id *location)
{
  MEMORY[0x1E0DE7C60](location);
}

void objc_end_catch(void)
{
  MEMORY[0x1E0DE7C80]();
}

void objc_enumerationMutation(id obj)
{
  MEMORY[0x1E0DE7C90](obj);
}

void objc_exception_throw(id exception)
{
  MEMORY[0x1E0DE7CA0](exception);
}

Class objc_getClass(const char *name)
{
  return (Class)MEMORY[0x1E0DE7CB0](name);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return (id)MEMORY[0x1E0DE7CD0](self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return (id)MEMORY[0x1E0DE7CE0](location, val);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x1E0DE7D08](location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D20](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D30](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x1E0DE7D38]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x1E0DE7D40]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x1E0DE7D48]();
}

uint64_t objc_opt_respondsToSelector()
{
  return MEMORY[0x1E0DE7D50]();
}

uint64_t objc_opt_self()
{
  return MEMORY[0x1E0DE7D58]();
}

void objc_release(id a1)
{
  MEMORY[0x1E0DE7D78](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1E0DE7E50](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7E58](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E60](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E68](a1);
}

id objc_retainBlock(id a1)
{
  return (id)MEMORY[0x1E0DE7E70](a1);
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7F88](self, _cmd, newValue, offset);
}

void objc_setProperty_atomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7F90](self, _cmd, newValue, offset);
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7FA0](self, _cmd, newValue, offset);
}

void objc_storeStrong(id *location, id obj)
{
  MEMORY[0x1E0DE7FB0](location, obj);
}

id objc_storeWeak(id *location, id obj)
{
  return (id)MEMORY[0x1E0DE7FB8](location, obj);
}

int objc_sync_enter(id obj)
{
  return MEMORY[0x1E0DE7FC8](obj);
}

int objc_sync_exit(id obj)
{
  return MEMORY[0x1E0DE7FD0](obj);
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7FE0](a1);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x1E0C84728](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1E0C84780](oslog, type);
}

BOOL os_signpost_enabled(os_log_t log)
{
  return MEMORY[0x1E0C84920](log);
}

void os_unfair_lock_assert_owner(const os_unfair_lock *lock)
{
  MEMORY[0x1E0C84990](lock);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C84998](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C849B0](lock);
}

uint64_t random(void)
{
  return MEMORY[0x1E0C84FC0]();
}

int strcmp(const char *__s1, const char *__s2)
{
  return MEMORY[0x1E0C85520](__s1, __s2);
}

char *__cdecl strncpy(char *__dst, const char *__src, size_t __n)
{
  return (char *)MEMORY[0x1E0C855B0](__dst, __src, __n);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x1E0DEEA98]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x1E0DEEAA8]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1E0DEEAB0]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x1E0DEEAB8]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x1E0DEEAC0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1E0DEEAD8]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1E0DEEAE0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x1E0DEEAE8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x1E0DEEAF0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1E0DEEAF8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1E0DEEB08]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1E0DEEB10]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1E0DEEB18]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1E0DEEB20]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x1E0DEEB28]();
}

uint64_t swift_conformsToProtocol2()
{
  return MEMORY[0x1E0DEEB40]();
}

uint64_t swift_continuation_await()
{
  return MEMORY[0x1E0DF0F88]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x1E0DF0F90]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x1E0DF0FA0]();
}

uint64_t swift_continuation_throwingResumeWithError()
{
  return MEMORY[0x1E0DF0FA8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1E0DEEB50]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x1E0DEEB60]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x1E0DEEB68]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1E0DEEB80]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x1E0DEEB88]();
}

uint64_t swift_dynamicCastClassUnconditional()
{
  return MEMORY[0x1E0DEEB90]();
}

uint64_t swift_dynamicCastMetatype()
{
  return MEMORY[0x1E0DEEB98]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x1E0DEEBA8]();
}

uint64_t swift_dynamicCastObjCProtocolConditional()
{
  return MEMORY[0x1E0DEEBB8]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1E0DEEBE0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1E0DEEBF0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1E0DEEBF8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x1E0DEEC00]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x1E0DEEC08]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x1E0DEEC18]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x1E0DEEC40]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEC48]();
}

uint64_t swift_getExistentialMetatypeMetadata()
{
  return MEMORY[0x1E0DEEC58]();
}

uint64_t swift_getExistentialTypeMetadata()
{
  return MEMORY[0x1E0DEEC60]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x1E0DEECB0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x1E0DEECB8]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x1E0DEECC0]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1E0DEECC8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1E0DEECD8]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1E0DEECE0]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x1E0DEECE8]();
}

uint64_t swift_getOpaqueTypeMetadata2()
{
  return MEMORY[0x1E0DEECF0]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1E0DEECF8]();
}

uint64_t swift_getTupleTypeMetadata()
{
  return MEMORY[0x1E0DEED18]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x1E0DEED20]();
}

uint64_t swift_getTupleTypeMetadata3()
{
  return MEMORY[0x1E0DEED28]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1E0DEED50]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x1E0DEED58]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x1E0DEED70]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1E0DEED78]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1E0DEED88]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x1E0DEED98]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x1E0DEEDC8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1E0DEEDD0]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x1E0DEEDE0]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x1E0DEEDE8]();
}

uint64_t swift_once()
{
  return MEMORY[0x1E0DEEE00]();
}

uint64_t swift_release()
{
  return MEMORY[0x1E0DEEE30]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1E0DEEE38]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1E0DEEE48]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x1E0DEEE50]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x1E0DEEE70]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1E0DEEE78]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1E0DEEE80]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x1E0DEEE98]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEEA0]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x1E0DF1000]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x1E0DF1008]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x1E0DF1010]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x1E0DF1050]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x1E0DEEEB8]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1E0DEEEC0]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x1E0DEEEC8]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1E0DEEED0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x1E0DEEED8]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x1E0DEEF20]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x1E0DEEF38]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x1E0DEEF40]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x1E0DEEF48]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1E0DEEF78]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x1E0DEEF98]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x1E0DEEFA0]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x1E0DEEFA8]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1E0DEEFC0]();
}

