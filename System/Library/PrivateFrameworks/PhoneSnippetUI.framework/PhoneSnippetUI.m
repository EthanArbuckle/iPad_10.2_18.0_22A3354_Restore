uint64_t property wrapper backing initializer of SearchCallHistoryBinaryButtonModel.primaryText()
{
  return Loggable.init(wrappedValue:)();
}

uint64_t SearchCallHistoryBinaryButtonModel.primaryText.getter()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x249501128]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t key path getter for SearchCallHistoryBinaryButtonModel.primaryText : SearchCallHistoryBinaryButtonModel@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  result = Loggable.wrappedValue.getter();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t key path setter for SearchCallHistoryBinaryButtonModel.primaryText : SearchCallHistoryBinaryButtonModel()
{
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  return Loggable.wrappedValue.setter();
}

uint64_t SearchCallHistoryBinaryButtonModel.primaryText.setter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  return Loggable.wrappedValue.setter();
}

uint64_t (*SearchCallHistoryBinaryButtonModel.primaryText.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t property wrapper backing initializer of SearchCallHistoryBinaryButtonModel.primaryAction()
{
  type metadata accessor for SABaseClientBoundCommand(0, &lazy cache variable for type metadata for SABaseClientBoundCommand);
  return CodableAceObject.init(wrappedValue:)();
}

uint64_t SearchCallHistoryBinaryButtonModel.primaryAction.getter()
{
  type metadata accessor for SearchCallHistoryBinaryButtonModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  return CodableAceObject.wrappedValue.getter();
}

uint64_t type metadata accessor for SearchCallHistoryBinaryButtonModel()
{
  uint64_t result;

  result = type metadata singleton initialization cache for SearchCallHistoryBinaryButtonModel;
  if (!type metadata singleton initialization cache for SearchCallHistoryBinaryButtonModel)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t key path getter for SearchCallHistoryBinaryButtonModel.primaryAction : SearchCallHistoryBinaryButtonModel@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for SearchCallHistoryBinaryButtonModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  result = CodableAceObject.wrappedValue.getter();
  *a1 = result;
  return result;
}

uint64_t key path setter for SearchCallHistoryBinaryButtonModel.primaryAction : SearchCallHistoryBinaryButtonModel(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  type metadata accessor for SearchCallHistoryBinaryButtonModel();
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  return CodableAceObject.wrappedValue.setter();
}

uint64_t SearchCallHistoryBinaryButtonModel.primaryAction.setter()
{
  type metadata accessor for SearchCallHistoryBinaryButtonModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  return CodableAceObject.wrappedValue.setter();
}

uint64_t (*SearchCallHistoryBinaryButtonModel.primaryAction.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for SearchCallHistoryBinaryButtonModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  v2[4] = CodableAceObject.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t SearchCallHistoryBinaryButtonModel.secondaryText.getter()
{
  uint64_t v1;

  type metadata accessor for SearchCallHistoryBinaryButtonModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t key path getter for SearchCallHistoryBinaryButtonModel.secondaryText : SearchCallHistoryBinaryButtonModel@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for SearchCallHistoryBinaryButtonModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  result = Loggable.wrappedValue.getter();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t key path setter for SearchCallHistoryBinaryButtonModel.secondaryText : SearchCallHistoryBinaryButtonModel()
{
  type metadata accessor for SearchCallHistoryBinaryButtonModel();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  return Loggable.wrappedValue.setter();
}

uint64_t SearchCallHistoryBinaryButtonModel.secondaryText.setter()
{
  type metadata accessor for SearchCallHistoryBinaryButtonModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  return Loggable.wrappedValue.setter();
}

uint64_t (*SearchCallHistoryBinaryButtonModel.secondaryText.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for SearchCallHistoryBinaryButtonModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t SearchCallHistoryBinaryButtonModel.secondaryAction.getter()
{
  type metadata accessor for SearchCallHistoryBinaryButtonModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  return CodableAceObject.wrappedValue.getter();
}

uint64_t key path getter for SearchCallHistoryBinaryButtonModel.secondaryAction : SearchCallHistoryBinaryButtonModel@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for SearchCallHistoryBinaryButtonModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  result = CodableAceObject.wrappedValue.getter();
  *a1 = result;
  return result;
}

uint64_t key path setter for SearchCallHistoryBinaryButtonModel.secondaryAction : SearchCallHistoryBinaryButtonModel(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  type metadata accessor for SearchCallHistoryBinaryButtonModel();
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  return CodableAceObject.wrappedValue.setter();
}

uint64_t SearchCallHistoryBinaryButtonModel.secondaryAction.setter()
{
  type metadata accessor for SearchCallHistoryBinaryButtonModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  return CodableAceObject.wrappedValue.setter();
}

uint64_t (*SearchCallHistoryBinaryButtonModel.secondaryAction.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for SearchCallHistoryBinaryButtonModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  v2[4] = CodableAceObject.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

void SearchCallHistoryBinaryButtonModel.primaryText.modify(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 32))(*a1, 0);
  free(v1);
}

unint64_t variable initialization expression of SearchCallHistoryBinaryButtonModel.responseViewId()
{
  return 0xD000000000000021;
}

uint64_t SearchCallHistoryBinaryButtonModel.responseViewId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SearchCallHistoryBinaryButtonModel() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchCallHistoryBinaryButtonModel.responseViewId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for SearchCallHistoryBinaryButtonModel() + 32));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SearchCallHistoryBinaryButtonModel.responseViewId.modify())()
{
  type metadata accessor for SearchCallHistoryBinaryButtonModel();
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

void SearchCallHistoryBinaryButtonModel.init(primaryText:primaryAction:secondaryText:secondaryAction:)(void *a1@<X2>, uint64_t a2@<X8>)
{
  _QWORD *v3;
  id v4;

  v3 = (_QWORD *)(a2 + *(int *)(type metadata accessor for SearchCallHistoryBinaryButtonModel() + 32));
  *v3 = 0xD000000000000021;
  v3[1] = 0x8000000243B37170;
  Loggable.init(wrappedValue:)();
  type metadata accessor for SABaseClientBoundCommand(0, &lazy cache variable for type metadata for SABaseClientBoundCommand);
  v4 = a1;
  CodableAceObject.init(wrappedValue:)();
  Loggable.init(wrappedValue:)();
  CodableAceObject.init(wrappedValue:)();

}

uint64_t SearchCallHistoryBinaryButtonModel.CodingKeys.stringValue.getter(char a1)
{
  return *(_QWORD *)&aPrimarytprimar[8 * a1];
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance SearchCallHistoryBinaryButtonModel.CodingKeys(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance SearchCallHistoryBinaryButtonModel.CodingKeys()
{
  unsigned __int8 *v0;
  Swift::UInt v1;

  v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void protocol witness for Hashable.hash(into:) in conformance SearchCallHistoryBinaryButtonModel.CodingKeys()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance SearchCallHistoryBinaryButtonModel.CodingKeys()
{
  unsigned __int8 *v0;
  Swift::UInt v1;

  v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance SearchCallHistoryBinaryButtonModel.CodingKeys()
{
  char *v0;

  return SearchCallHistoryBinaryButtonModel.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance SearchCallHistoryBinaryButtonModel.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = specialized SearchCallHistoryBinaryButtonModel.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CodingKey.intValue.getter in conformance SearchCallHistoryBinaryButtonModel.CodingKeys()
{
  return 0;
}

void protocol witness for CodingKey.init(intValue:) in conformance SearchCallHistoryBinaryButtonModel.CodingKeys(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance SearchCallHistoryBinaryButtonModel.CodingKeys()
{
  lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel.CodingKeys and conformance SearchCallHistoryBinaryButtonModel.CodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance SearchCallHistoryBinaryButtonModel.CodingKeys()
{
  lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel.CodingKeys and conformance SearchCallHistoryBinaryButtonModel.CodingKeys();
  return CodingKey.debugDescription.getter();
}

uint64_t SearchCallHistoryBinaryButtonModel.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[4];
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<SearchCallHistoryBinaryButtonModel.CodingKeys>);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel.CodingKeys and conformance SearchCallHistoryBinaryButtonModel.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v18 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  lazy protocol witness table accessor for type Loggable<String> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<String> and conformance <A> Loggable<A>, MEMORY[0x24BEAD370]);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    v9 = type metadata accessor for SearchCallHistoryBinaryButtonModel();
    v13[2] = v3;
    v13[3] = v9;
    v17 = 1;
    v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
    v11 = lazy protocol witness table accessor for type CodableAceObject<SABaseClientBoundCommand> and conformance CodableAceObject<A>(&lazy protocol witness table cache variable for type CodableAceObject<SABaseClientBoundCommand> and conformance CodableAceObject<A>, MEMORY[0x24BEABA88]);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v13[0] = v11;
    v13[1] = v10;
    v16 = 2;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v15 = 3;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v14 = 4;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

unint64_t lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel.CodingKeys and conformance SearchCallHistoryBinaryButtonModel.CodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel.CodingKeys and conformance SearchCallHistoryBinaryButtonModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel.CodingKeys and conformance SearchCallHistoryBinaryButtonModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for SearchCallHistoryBinaryButtonModel.CodingKeys, &unk_2514485D0);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel.CodingKeys and conformance SearchCallHistoryBinaryButtonModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel.CodingKeys and conformance SearchCallHistoryBinaryButtonModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel.CodingKeys and conformance SearchCallHistoryBinaryButtonModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for SearchCallHistoryBinaryButtonModel.CodingKeys, &unk_2514485D0);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel.CodingKeys and conformance SearchCallHistoryBinaryButtonModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel.CodingKeys and conformance SearchCallHistoryBinaryButtonModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel.CodingKeys and conformance SearchCallHistoryBinaryButtonModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for SearchCallHistoryBinaryButtonModel.CodingKeys, &unk_2514485D0);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel.CodingKeys and conformance SearchCallHistoryBinaryButtonModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel.CodingKeys and conformance SearchCallHistoryBinaryButtonModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel.CodingKeys and conformance SearchCallHistoryBinaryButtonModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for SearchCallHistoryBinaryButtonModel.CodingKeys, &unk_2514485D0);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel.CodingKeys and conformance SearchCallHistoryBinaryButtonModel.CodingKeys);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x249501134](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t SearchCallHistoryBinaryButtonModel.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, char *, uint64_t);
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  _QWORD v41[2];
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  _QWORD *v57;
  char v58;
  char v59;
  char v60;
  char v61;
  char v62;

  v46 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  v48 = *(_QWORD *)(v3 - 8);
  v49 = v3;
  v4 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v47 = (char *)v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v51 = (char *)v41 - v6;
  v54 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v50 = *(_QWORD *)(v54 - 8);
  v7 = MEMORY[0x24BDAC7A8](v54);
  v9 = (char *)v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v52 = (char *)v41 - v10;
  v53 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<SearchCallHistoryBinaryButtonModel.CodingKeys>);
  v11 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53);
  v13 = (char *)v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for SearchCallHistoryBinaryButtonModel();
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = &v17[*(int *)(v15 + 32)];
  *(_QWORD *)v18 = 0xD000000000000021;
  *((_QWORD *)v18 + 1) = 0x8000000243B37170;
  v56 = v18;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel.CodingKeys and conformance SearchCallHistoryBinaryButtonModel.CodingKeys();
  v55 = v13;
  v19 = (uint64_t)v57;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v19)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v20 = v51;
    v43 = v9;
    v44 = v14;
    v45 = v11;
    v21 = v17;
    v57 = a1;
    v62 = 0;
    v22 = lazy protocol witness table accessor for type Loggable<String> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<String> and conformance <A> Loggable<A>, MEMORY[0x24BEAD380]);
    v23 = v52;
    v24 = v53;
    v25 = v54;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v41[1] = v22;
    v42 = (uint64_t)v21;
    v26 = *(void (**)(char *, char *, uint64_t))(v50 + 32);
    v26(v21, v23, v25);
    v61 = 1;
    lazy protocol witness table accessor for type CodableAceObject<SABaseClientBoundCommand> and conformance CodableAceObject<A>(&lazy protocol witness table cache variable for type CodableAceObject<SABaseClientBoundCommand> and conformance CodableAceObject<A>, MEMORY[0x24BEABA90]);
    v27 = v49;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v28 = v27;
    v29 = *(void (**)(uint64_t, char *, uint64_t))(v48 + 32);
    v29(v42 + *(int *)(v44 + 20), v20, v28);
    v60 = 2;
    v30 = v43;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v51 = (char *)v29;
    v52 = 0;
    v31 = v44;
    v26((char *)(v42 + *(int *)(v44 + 24)), v30, v25);
    v59 = 3;
    v32 = v47;
    v33 = v49;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v34 = *(int *)(v31 + 28);
    v35 = v42;
    ((void (*)(uint64_t, char *, uint64_t))v51)(v42 + v34, v32, v33);
    v58 = 4;
    v36 = KeyedDecodingContainer.decode(_:forKey:)();
    v38 = v37;
    (*(void (**)(char *, uint64_t))(v45 + 8))(v55, v24);
    v39 = (uint64_t *)v56;
    swift_bridgeObjectRelease();
    *v39 = v36;
    v39[1] = v38;
    outlined init with copy of SearchCallHistoryBinaryButtonModel(v35, v46);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
    return outlined destroy of SearchCallHistoryBinaryButtonModel(v35);
  }
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t lazy protocol witness table accessor for type Loggable<String> and conformance <A> Loggable<A>(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  _QWORD v6[2];

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Loggable<String>);
    v6[0] = MEMORY[0x24BEE0D38];
    v6[1] = MEMORY[0x24BEE0D08];
    result = MEMORY[0x249501140](a2, v5, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type CodableAceObject<SABaseClientBoundCommand> and conformance CodableAceObject<A>(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
    result = MEMORY[0x249501140](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t outlined init with copy of SearchCallHistoryBinaryButtonModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SearchCallHistoryBinaryButtonModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of SearchCallHistoryBinaryButtonModel(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SearchCallHistoryBinaryButtonModel();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t protocol witness for PhoneSnippetModel.responseViewId.getter in conformance SearchCallHistoryBinaryButtonModel(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 32));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t protocol witness for Decodable.init(from:) in conformance SearchCallHistoryBinaryButtonModel@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SearchCallHistoryBinaryButtonModel.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance SearchCallHistoryBinaryButtonModel(_QWORD *a1)
{
  return SearchCallHistoryBinaryButtonModel.encode(to:)(a1);
}

unint64_t variable initialization expression of SingleResultCallHistoryModel.responseViewId()
{
  return 0xD000000000000017;
}

uint64_t default argument 3 of SingleResultCallHistoryModel.init(displayName:displayCallDetail:displayDateTime:contactIds:searchCallHistoryBinaryButtonModel:)()
{
  return MEMORY[0x24BEE4AF8];
}

unint64_t variable initialization expression of SingleResultVoicemailModel.responseViewId()
{
  return 0xD000000000000015;
}

uint64_t default argument 9 of SingleResultVoicemailModel.init(displayName:displayCallDetail:displayDateTime:callDuration:callDurationInterval:transcript:transcriptTitle:callbackDirectInvocation:repeatDirectInvocation:contactIds:searchCallHistoryBinaryButtonModel:)()
{
  return MEMORY[0x24BEE4AF8];
}

uint64_t variable initialization expression of SingleVoicemailModel.responseViewId()
{
  return 0x6F56656C676E6953;
}

uint64_t variable initialization expression of PlayVoicemailModel.responseViewId()
{
  return 0x63696F5679616C50;
}

unint64_t variable initialization expression of SingleCallRecordModel.responseViewId()
{
  return 0xD000000000000010;
}

uint64_t variable initialization expression of SingleCallRecordModel.currentCallType()
{
  return 0;
}

unint64_t variable initialization expression of SearchCallHistoryModel.responseViewId()
{
  return 0xD000000000000011;
}

unint64_t variable initialization expression of ContactConfirmationModel.responseViewId()
{
  return 0xD000000000000013;
}

uint64_t variable initialization expression of ContactConfirmationModel.appId()
{
  return 0;
}

double variable initialization expression of ContactConfirmationModel.phoneContactHeader@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_BYTE *)(a1 + 64) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t variable initialization expression of ContactConfirmationModel.title()
{
  return 0;
}

unint64_t variable initialization expression of YesNoConfirmationModel.responseViewId()
{
  return 0xD000000000000011;
}

uint64_t variable initialization expression of SingleResultCallHistoryView._context()
{
  type metadata accessor for Context();
  lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
  return EnvironmentObject.init()();
}

uint64_t variable initialization expression of CountdownButtonStyle.animation()
{
  return static Animation.easeInOut(duration:)();
}

uint64_t variable initialization expression of CountdownButtonStyle.fastAnimation()
{
  return static Animation.easeInOut(duration:)();
}

double variable initialization expression of CountdownButtonStyle.sosTrailingMaxPadding()
{
  return 8.0;
}

uint64_t variable initialization expression of CountdownButtonStyle._isAnimating()
{
  return 0;
}

uint64_t variable initialization expression of CountdownButtonStyle._isSliding()
{
  return 0;
}

double variable initialization expression of ContactHeaderView.padding()
{
  return 10.0;
}

uint64_t default argument 0 of View.disambiguationListItem(isFirstElement:)()
{
  return 0;
}

double variable initialization expression of ShowCallHistorySingleItemView._circleWidth()
{
  return 35.0;
}

double variable initialization expression of ShowCallHistorySingleItemView._circleHeight()
{
  return 35.0;
}

uint64_t variable initialization expression of EmergencyCountdownViewModel.model@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = type metadata accessor for EmergencyCountdownModel();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t variable initialization expression of EmergencyCountdownViewModel._counter()
{
  return 3;
}

double variable initialization expression of EmergencyCountdownViewModel._animationStep()
{
  return 0.0;
}

uint64_t variable initialization expression of EmergencyCountdownViewModel._timer()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[2];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SABaseClientBoundCommand(0, (unint64_t *)&lazy cache variable for type metadata for NSTimer);
  v3 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
  v4 = type metadata accessor for NSRunLoop.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v2, 1, 1, v4);
  v5 = static NSTimer.publish(every:tolerance:on:in:options:)();

  outlined destroy of NSRunLoop.SchedulerOptions?((uint64_t)v2);
  v8[1] = v5;
  type metadata accessor for NSTimer.TimerPublisher();
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher, (uint64_t (*)(uint64_t))MEMORY[0x24BDD01C8], MEMORY[0x24BDD01B0]);
  v6 = ConnectablePublisher.autoconnect()();
  swift_release();
  return v6;
}

uint64_t type metadata accessor for SABaseClientBoundCommand(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t outlined destroy of NSRunLoop.SchedulerOptions?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t variable initialization expression of EmergencyCountdownViewModel._sashTitle()
{
  return 0;
}

uint64_t variable initialization expression of EmergencyCountdownViewModel._cancelButtonText()
{
  return 0;
}

uint64_t variable initialization expression of EmergencyCountdownViewModel._cancelledText()
{
  return 0;
}

uint64_t variable initialization expression of EmergencyCountdownViewModel._callButtonText()
{
  return 0;
}

uint64_t variable initialization expression of EmergencyCountdownViewModel._dialog()
{
  return 0;
}

uint64_t variable initialization expression of EmergencyCountdownViewModel._localeIdentifier()
{
  return 0;
}

uint64_t variable initialization expression of EmergencyCountdownViewModel._callingLabel()
{
  return 0;
}

uint64_t variable initialization expression of EmergencyCountdownViewModel._emergencyServicesLabel()
{
  return 0;
}

uint64_t variable initialization expression of EmergencyCountdownViewModel._sos()
{
  return 0;
}

uint64_t variable initialization expression of EmergencyCountdownViewModel._isCounterOnLastStep()
{
  return 0;
}

uint64_t variable initialization expression of EmergencyCountdownViewModel._timerCancelledByUser()
{
  return 0;
}

uint64_t variable initialization expression of EmergencyCountdownViewModel.sliderIsAtMax()
{
  return 0;
}

double variable initialization expression of EmergencyCountdownViewModel.startLocation()
{
  return 0.0;
}

double variable initialization expression of EmergencyCountdownViewModel._currentTranslation()
{
  return 0.0;
}

double variable initialization expression of EmergencyCountdownViewModel.currentOffset()
{
  return 0.0;
}

id variable initialization expression of EmergencyCountdownViewModel.notificationCenter()
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16D0]), sel_init);
}

uint64_t variable initialization expression of EmergencyCountdownViewModel.$__lazy_storage_$_numberFormatter()
{
  return 0;
}

uint64_t variable initialization expression of EmergencyCountdownViewModel.initialized()
{
  return 0;
}

uint64_t variable initialization expression of EmergencyCountdownViewModel.timerCancelled()
{
  return 0;
}

uint64_t variable initialization expression of EmergencyCountdownView._viewModel()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  swift_beginAccess();
  return swift_retain();
}

double variable initialization expression of CarPlayEmergencyCountdown.vStackSpacing()
{
  return 10.0;
}

double variable initialization expression of CarPlayEmergencyCountdown.countdownFontSize()
{
  return 72.0;
}

double variable initialization expression of CarPlayEmergencyCountdown.countdownMinWidth()
{
  return 96.0;
}

unint64_t variable initialization expression of EmergencyCountdownModel.responseViewId()
{
  return 0xD000000000000017;
}

uint64_t variable initialization expression of DisambiguationItemWithDirectInvocationModel._personHandle()
{
  return 0;
}

uint64_t variable initialization expression of DisambiguationItemWithDirectInvocationModel._label()
{
  return 0;
}

unint64_t variable initialization expression of ForeignEmergencyCallDisambiguationModel.responseViewId()
{
  return 0xD00000000000001ELL;
}

unint64_t variable initialization expression of LocalEmergencyCallDisambiguationModel.responseViewId()
{
  return 0xD00000000000001CLL;
}

uint64_t default argument 1 of static PhoneCallAppNameConstants.isPhoneOrFaceTime(appId:isInsensitive:)()
{
  return 1;
}

double variable initialization expression of SingleResultVoicemailView._circleWidth()
{
  return 35.0;
}

double variable initialization expression of SingleResultVoicemailView._circleHeight()
{
  return 35.0;
}

double variable initialization expression of SingleResultVoicemailView._progress()
{
  return 0.0;
}

uint64_t variable initialization expression of SingleResultVoicemailView._shouldStartTimer()
{
  return 0;
}

uint64_t instantiation function for generic protocol witness table for SearchCallHistoryBinaryButtonModel(uint64_t a1)
{
  uint64_t result;

  result = lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel, (uint64_t (*)(uint64_t))type metadata accessor for SearchCallHistoryBinaryButtonModel, (uint64_t)&protocol conformance descriptor for SearchCallHistoryBinaryButtonModel);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t base witness table accessor for Decodable in SearchCallHistoryBinaryButtonModel()
{
  return lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel, (uint64_t (*)(uint64_t))type metadata accessor for SearchCallHistoryBinaryButtonModel, (uint64_t)&protocol conformance descriptor for SearchCallHistoryBinaryButtonModel);
}

uint64_t base witness table accessor for Encodable in SearchCallHistoryBinaryButtonModel()
{
  return lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel, (uint64_t (*)(uint64_t))type metadata accessor for SearchCallHistoryBinaryButtonModel, (uint64_t)&protocol conformance descriptor for SearchCallHistoryBinaryButtonModel);
}

uint64_t lazy protocol witness table accessor for type Context and conformance Context(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x249501140](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for SearchCallHistoryBinaryButtonModel(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[5];
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    v13(v10, v11, v12);
    v8(&a1[a3[6]], &a2[a3[6]], v7);
    v13(&a1[a3[7]], &a2[a3[7]], v12);
    v14 = a3[8];
    v15 = &a1[v14];
    v16 = &a2[v14];
    v17 = *((_QWORD *)v16 + 1);
    *(_QWORD *)v15 = *(_QWORD *)v16;
    *((_QWORD *)v15 + 1) = v17;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SearchCallHistoryBinaryButtonModel(uint64_t a1, int *a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v6 = a1 + a2[5];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v8(v6, v7);
  v5(a1 + a2[6], v4);
  v8(a1 + a2[7], v7);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SearchCallHistoryBinaryButtonModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  v12(v9, v10, v11);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v12(a1 + a3[7], a2 + a3[7], v11);
  v13 = a3[8];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SearchCallHistoryBinaryButtonModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24);
  v12(v9, v10, v11);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v12(a1 + a3[7], a2 + a3[7], v11);
  v13 = a3[8];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for SearchCallHistoryBinaryButtonModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32);
  v12(v9, v10, v11);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v12(a1 + a3[7], a2 + a3[7], v11);
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t assignWithTake for SearchCallHistoryBinaryButtonModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40);
  v12(v9, v10, v11);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v12(a1 + a3[7], a2 + a3[7], v11);
  v13 = a3[8];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchCallHistoryBinaryButtonModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_243AC0ED8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 32) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchCallHistoryBinaryButtonModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_243AC0F98(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 32) + 8) = (a2 - 1);
  return result;
}

void type metadata completion function for SearchCallHistoryBinaryButtonModel()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for Loggable<String>(319, (unint64_t *)&lazy cache variable for type metadata for Loggable<String>, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEAD360]);
  if (v0 <= 0x3F)
  {
    type metadata accessor for CodableAceObject<SABaseClientBoundCommand>();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void type metadata accessor for CodableAceObject<SABaseClientBoundCommand>()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>)
  {
    type metadata accessor for SABaseClientBoundCommand(255, &lazy cache variable for type metadata for SABaseClientBoundCommand);
    v0 = type metadata accessor for CodableAceObject();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  }
}

void type metadata accessor for VRXVisualResponseLocation(uint64_t a1)
{
  type metadata accessor for Loggable<String>(a1, &lazy cache variable for type metadata for VRXVisualResponseLocation, (uint64_t)&unk_251448540, MEMORY[0x24BEE4D40]);
}

void type metadata accessor for Loggable<String>(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(_QWORD, uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    v5 = a4(0, a3);
    if (!v6)
      atomic_store(v5, a2);
  }
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for SearchCallHistoryBinaryButtonModel.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchCallHistoryBinaryButtonModel.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_243AC12A0 + 4 * byte_243B31145[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_243AC12D4 + 4 * byte_243B31140[v4]))();
}

uint64_t sub_243AC12D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_243AC12DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x243AC12E4);
  return result;
}

uint64_t sub_243AC12F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x243AC12F8);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_243AC12FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_243AC1304(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTag for SearchCallHistoryBinaryButtonModel.CodingKeys(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *destructiveInjectEnumTag for SearchCallHistoryBinaryButtonModel.CodingKeys(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

void *type metadata accessor for SearchCallHistoryBinaryButtonModel.CodingKeys()
{
  return &unk_2514485D0;
}

uint64_t specialized SearchCallHistoryBinaryButtonModel.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x547972616D697270 && a2 == 0xEB00000000747865;
  if (v3 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x417972616D697270 && a2 == 0xED00006E6F697463
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7261646E6F636573 && a2 == 0xED00007478655479
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7261646E6F636573 && a2 == 0xEF6E6F6974634179
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x65736E6F70736572 && a2 == 0xEE00644977656956)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

void EmergencyCountdownViewModel.__allocating_init()()
{
  swift_deletedMethodError();
  __break(1u);
}

uint64_t SingleResultCallHistoryModel.responseViewId.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SingleResultCallHistoryModel.responseViewId.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*SingleResultCallHistoryModel.responseViewId.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t SingleResultCallHistoryModel.displayName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SingleResultCallHistoryModel.displayName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*SingleResultCallHistoryModel.displayName.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t SingleResultCallHistoryModel.displayCallDetail.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SingleResultCallHistoryModel.displayCallDetail.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*SingleResultCallHistoryModel.displayCallDetail.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t SingleResultCallHistoryModel.displayDateTime.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SingleResultCallHistoryModel.displayDateTime.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return result;
}

uint64_t (*SingleResultCallHistoryModel.displayDateTime.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t SingleResultCallHistoryModel.contactIds.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SingleResultCallHistoryModel.contactIds.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 64) = a1;
  return result;
}

uint64_t (*SingleResultCallHistoryModel.contactIds.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t SingleResultCallHistoryModel.searchCallHistoryBinaryButtonModel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for SingleResultCallHistoryModel() + 36);
  return outlined init with copy of SearchCallHistoryBinaryButtonModel?(v3, a1);
}

uint64_t type metadata accessor for SingleResultCallHistoryModel()
{
  uint64_t result;

  result = type metadata singleton initialization cache for SingleResultCallHistoryModel;
  if (!type metadata singleton initialization cache for SingleResultCallHistoryModel)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t outlined init with copy of SearchCallHistoryBinaryButtonModel?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t SingleResultCallHistoryModel.init(displayName:displayCallDetail:displayDateTime:contactIds:searchCallHistoryBinaryButtonModel:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  uint64_t v10;

  *a9 = 0xD000000000000017;
  a9[1] = 0x8000000243B371A0;
  a9[2] = a1;
  a9[3] = a2;
  a9[4] = a3;
  a9[5] = a4;
  a9[6] = a5;
  a9[7] = a6;
  a9[8] = a7;
  v10 = (uint64_t)a9 + *(int *)(type metadata accessor for SingleResultCallHistoryModel() + 36);
  return outlined init with take of SearchCallHistoryBinaryButtonModel?(a8, v10);
}

uint64_t outlined init with take of SearchCallHistoryBinaryButtonModel?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t SingleResultCallHistoryModel.CodingKeys.stringValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_243AC1A18 + 4 * byte_243B313E0[a1]))(0xD000000000000011, 0x8000000243B372C0);
}

uint64_t sub_243AC1A18()
{
  return 0x65736E6F70736572;
}

uint64_t sub_243AC1A3C()
{
  return 0x4E79616C70736964;
}

uint64_t sub_243AC1A5C()
{
  return 0x4479616C70736964;
}

uint64_t sub_243AC1A80()
{
  return 0x49746361746E6F63;
}

uint64_t sub_243AC1A9C(uint64_t a1)
{
  return a1 + 17;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance SingleResultCallHistoryModel.CodingKeys()
{
  unsigned __int8 *v0;

  return SingleResultCallHistoryModel.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance SingleResultCallHistoryModel.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = specialized SingleResultCallHistoryModel.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

void protocol witness for CodingKey.init(intValue:) in conformance SingleResultCallHistoryModel.CodingKeys(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance SingleResultCallHistoryModel.CodingKeys()
{
  lazy protocol witness table accessor for type SingleResultCallHistoryModel.CodingKeys and conformance SingleResultCallHistoryModel.CodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance SingleResultCallHistoryModel.CodingKeys()
{
  lazy protocol witness table accessor for type SingleResultCallHistoryModel.CodingKeys and conformance SingleResultCallHistoryModel.CodingKeys();
  return CodingKey.debugDescription.getter();
}

uint64_t SingleResultCallHistoryModel.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  char v15;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<SingleResultCallHistoryModel.CodingKeys>);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type SingleResultCallHistoryModel.CodingKeys and conformance SingleResultCallHistoryModel.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v15 = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v2)
  {
    v14 = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    v13 = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    v12 = 3;
    KeyedEncodingContainer.encode(_:forKey:)();
    v11 = *(_QWORD *)(v3 + 64);
    v10[15] = 4;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance <A> [A](&lazy protocol witness table cache variable for type [String] and conformance <A> [A], MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    type metadata accessor for SingleResultCallHistoryModel();
    v10[14] = 5;
    type metadata accessor for SearchCallHistoryBinaryButtonModel();
    lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel, (uint64_t (*)(uint64_t))type metadata accessor for SearchCallHistoryBinaryButtonModel, (uint64_t)&protocol conformance descriptor for SearchCallHistoryBinaryButtonModel);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t lazy protocol witness table accessor for type SingleResultCallHistoryModel.CodingKeys and conformance SingleResultCallHistoryModel.CodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SingleResultCallHistoryModel.CodingKeys and conformance SingleResultCallHistoryModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SingleResultCallHistoryModel.CodingKeys and conformance SingleResultCallHistoryModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for SingleResultCallHistoryModel.CodingKeys, &unk_251448748);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SingleResultCallHistoryModel.CodingKeys and conformance SingleResultCallHistoryModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SingleResultCallHistoryModel.CodingKeys and conformance SingleResultCallHistoryModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SingleResultCallHistoryModel.CodingKeys and conformance SingleResultCallHistoryModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for SingleResultCallHistoryModel.CodingKeys, &unk_251448748);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SingleResultCallHistoryModel.CodingKeys and conformance SingleResultCallHistoryModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SingleResultCallHistoryModel.CodingKeys and conformance SingleResultCallHistoryModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SingleResultCallHistoryModel.CodingKeys and conformance SingleResultCallHistoryModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for SingleResultCallHistoryModel.CodingKeys, &unk_251448748);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SingleResultCallHistoryModel.CodingKeys and conformance SingleResultCallHistoryModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SingleResultCallHistoryModel.CodingKeys and conformance SingleResultCallHistoryModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SingleResultCallHistoryModel.CodingKeys and conformance SingleResultCallHistoryModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for SingleResultCallHistoryModel.CodingKeys, &unk_251448748);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SingleResultCallHistoryModel.CodingKeys and conformance SingleResultCallHistoryModel.CodingKeys);
  }
  return result;
}

uint64_t SingleResultCallHistoryModel.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;

  v23 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<SingleResultCallHistoryModel.CodingKeys>);
  v7 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for SingleResultCallHistoryModel();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (uint64_t *)((char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12[1] = 0x8000000243B371A0;
  v13 = a1[3];
  v25 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  lazy protocol witness table accessor for type SingleResultCallHistoryModel.CodingKeys and conformance SingleResultCallHistoryModel.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v14 = v7;
    v15 = (uint64_t)v6;
    v17 = v23;
    v16 = v24;
    v32 = 0;
    *v12 = KeyedDecodingContainer.decode(_:forKey:)();
    v12[1] = v18;
    v31 = 1;
    v12[2] = KeyedDecodingContainer.decode(_:forKey:)();
    v12[3] = v19;
    v30 = 2;
    v12[4] = KeyedDecodingContainer.decode(_:forKey:)();
    v12[5] = v20;
    v29 = 3;
    v12[6] = KeyedDecodingContainer.decode(_:forKey:)();
    v12[7] = v21;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    v28 = 4;
    lazy protocol witness table accessor for type [String] and conformance <A> [A](&lazy protocol witness table cache variable for type [String] and conformance <A> [A], MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v12[8] = v26;
    type metadata accessor for SearchCallHistoryBinaryButtonModel();
    v27 = 5;
    lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel, (uint64_t (*)(uint64_t))type metadata accessor for SearchCallHistoryBinaryButtonModel, (uint64_t)&protocol conformance descriptor for SearchCallHistoryBinaryButtonModel);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v16);
    outlined init with take of SearchCallHistoryBinaryButtonModel?(v15, (uint64_t)v12 + *(int *)(v10 + 36));
    outlined init with copy of SingleResultCallHistoryModel((uint64_t)v12, v17);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    return outlined destroy of SingleResultCallHistoryModel((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for SingleResultCallHistoryModel);
  }
}

uint64_t lazy protocol witness table accessor for type [String] and conformance <A> [A](unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [String]);
    v8 = a2;
    result = MEMORY[0x249501140](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t outlined init with copy of SingleResultCallHistoryModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SingleResultCallHistoryModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t protocol witness for PhoneSnippetModel.responseViewId.getter in conformance SingleResultCallHistoryModel()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t instantiation function for generic protocol witness table for SingleResultCallHistoryModel(uint64_t a1)
{
  uint64_t result;

  result = lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel, (uint64_t (*)(uint64_t))type metadata accessor for SingleResultCallHistoryModel, (uint64_t)&protocol conformance descriptor for SingleResultCallHistoryModel);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t base witness table accessor for Decodable in SingleResultCallHistoryModel()
{
  return lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel, (uint64_t (*)(uint64_t))type metadata accessor for SingleResultCallHistoryModel, (uint64_t)&protocol conformance descriptor for SingleResultCallHistoryModel);
}

uint64_t base witness table accessor for Encodable in SingleResultCallHistoryModel()
{
  return lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel, (uint64_t (*)(uint64_t))type metadata accessor for SingleResultCallHistoryModel, (uint64_t)&protocol conformance descriptor for SingleResultCallHistoryModel);
}

uint64_t protocol witness for Decodable.init(from:) in conformance SingleResultCallHistoryModel@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SingleResultCallHistoryModel.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance SingleResultCallHistoryModel(_QWORD *a1)
{
  return SingleResultCallHistoryModel.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for SingleResultCallHistoryModel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  int *v12;
  unsigned int (*v13)(char *, uint64_t, int *);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, _QWORD, uint64_t, int *);
  uint64_t v29;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v15 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    v8 = a2[7];
    a1[6] = a2[6];
    a1[7] = v8;
    v9 = *(int *)(a3 + 36);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    a1[8] = a2[8];
    v12 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
    v29 = *((_QWORD *)v12 - 1);
    v13 = *(unsigned int (**)(char *, uint64_t, int *))(v29 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v11, 1, v12))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
      v17(v10, v11, v16);
      v18 = v12[5];
      v19 = &v10[v18];
      v20 = &v11[v18];
      v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
      v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
      v22(v19, v20, v21);
      v17(&v10[v12[6]], &v11[v12[6]], v16);
      v22(&v10[v12[7]], &v11[v12[7]], v21);
      v23 = v12[8];
      v24 = &v10[v23];
      v25 = &v11[v23];
      v26 = *((_QWORD *)v25 + 1);
      *(_QWORD *)v24 = *(_QWORD *)v25;
      *((_QWORD *)v24 + 1) = v26;
      v27 = *(void (**)(char *, _QWORD, uint64_t, int *))(v29 + 56);
      swift_bridgeObjectRetain();
      v27(v10, 0, 1, v12);
    }
  }
  return v3;
}

uint64_t destroy for SingleResultCallHistoryModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t result;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 36);
  v5 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v5 - 1) + 48))(v4, 1, v5);
  if (!(_DWORD)result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
    v8(v4, v7);
    v9 = v4 + v5[5];
    v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
    v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
    v11(v9, v10);
    v8(v4 + v5[6], v7);
    v11(v4 + v5[7], v10);
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *initializeWithCopy for SingleResultCallHistoryModel(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  int *v11;
  unsigned int (*v12)(char *, uint64_t, int *);
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, _QWORD, uint64_t, int *);
  uint64_t v27;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  v8 = *(int *)(a3 + 36);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  a1[8] = a2[8];
  v11 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  v27 = *((_QWORD *)v11 - 1);
  v12 = *(unsigned int (**)(char *, uint64_t, int *))(v27 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    v15(v9, v10, v14);
    v16 = v11[5];
    v17 = &v9[v16];
    v18 = &v10[v16];
    v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
    v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
    v20(v17, v18, v19);
    v15(&v9[v11[6]], &v10[v11[6]], v14);
    v20(&v9[v11[7]], &v10[v11[7]], v19);
    v21 = v11[8];
    v22 = &v9[v21];
    v23 = &v10[v21];
    v24 = *((_QWORD *)v23 + 1);
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *((_QWORD *)v22 + 1) = v24;
    v25 = *(void (**)(char *, _QWORD, uint64_t, int *))(v27 + 56);
    swift_bridgeObjectRetain();
    v25(v9, 0, 1, v11);
  }
  return a1;
}

_QWORD *assignWithCopy for SingleResultCallHistoryModel(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, int *);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  void (*v23)(char *, _QWORD, uint64_t, int *);
  uint64_t v24;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  char *v34;
  char *v35;
  void (*v36)(char *, char *, uint64_t);

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 36);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  v10 = *((_QWORD *)v9 - 1);
  v11 = *(uint64_t (**)(char *, uint64_t, int *))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 24);
      v27(v7, v8, v26);
      v28 = v9[5];
      v29 = &v7[v28];
      v30 = &v8[v28];
      v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
      v32 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 24);
      v32(v29, v30, v31);
      v27(&v7[v9[6]], &v8[v9[6]], v26);
      v32(&v7[v9[7]], &v8[v9[7]], v31);
      v33 = v9[8];
      v34 = &v7[v33];
      v35 = &v8[v33];
      *(_QWORD *)v34 = *(_QWORD *)v35;
      *((_QWORD *)v34 + 1) = *((_QWORD *)v35 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    outlined destroy of SingleResultCallHistoryModel((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for SearchCallHistoryBinaryButtonModel);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    return a1;
  }
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v36 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  v36(v7, v8, v14);
  v15 = v9[5];
  v16 = &v7[v15];
  v17 = &v8[v15];
  v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  v19(v16, v17, v18);
  v36(&v7[v9[6]], &v8[v9[6]], v14);
  v19(&v7[v9[7]], &v8[v9[7]], v18);
  v20 = v9[8];
  v21 = &v7[v20];
  v22 = &v8[v20];
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
  v23 = *(void (**)(char *, _QWORD, uint64_t, int *))(v10 + 56);
  swift_bridgeObjectRetain();
  v23(v7, 0, 1, v9);
  return a1;
}

uint64_t outlined destroy of SingleResultCallHistoryModel(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t initializeWithTake for SingleResultCallHistoryModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  char *v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  void (*v19)(char *, char *, uint64_t);

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v6 = *(int *)(a3 + 36);
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  v10 = *((_QWORD *)v9 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32);
    v19(v7, v8, v12);
    v13 = v9[5];
    v14 = &v7[v13];
    v15 = &v8[v13];
    v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
    v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32);
    v17(v14, v15, v16);
    v19(&v7[v9[6]], &v8[v9[6]], v12);
    v17(&v7[v9[7]], &v8[v9[7]], v16);
    *(_OWORD *)&v7[v9[8]] = *(_OWORD *)&v8[v9[8]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
  }
  return a1;
}

_QWORD *assignWithTake for SingleResultCallHistoryModel(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int *v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, int *);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 36);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  v14 = *((_QWORD *)v13 - 1);
  v15 = *(uint64_t (**)(char *, uint64_t, int *))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 40);
      v27(v11, v12, v26);
      v28 = v13[5];
      v29 = &v11[v28];
      v30 = &v12[v28];
      v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
      v32 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 40);
      v32(v29, v30, v31);
      v27(&v11[v13[6]], &v12[v13[6]], v26);
      v32(&v11[v13[7]], &v12[v13[7]], v31);
      v33 = v13[8];
      v34 = &v11[v33];
      v35 = &v12[v33];
      v37 = *(_QWORD *)v35;
      v36 = *((_QWORD *)v35 + 1);
      *(_QWORD *)v34 = v37;
      *((_QWORD *)v34 + 1) = v36;
      swift_bridgeObjectRelease();
      return a1;
    }
    outlined destroy of SingleResultCallHistoryModel((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for SearchCallHistoryBinaryButtonModel);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    return a1;
  }
  v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v38 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32);
  v38(v11, v12, v18);
  v19 = v13[5];
  v20 = &v11[v19];
  v21 = &v12[v19];
  v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32);
  v23(v20, v21, v22);
  v38(&v11[v13[6]], &v12[v13[6]], v18);
  v23(&v11[v13[7]], &v12[v13[7]], v22);
  *(_OWORD *)&v11[v13[8]] = *(_OWORD *)&v12[v13[8]];
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v14 + 56))(v11, 0, 1, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for SingleResultCallHistoryModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_243AC2EFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for SingleResultCallHistoryModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_243AC2F88(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

void type metadata completion function for SingleResultCallHistoryModel()
{
  unint64_t v0;

  type metadata accessor for SearchCallHistoryBinaryButtonModel?();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void type metadata accessor for SearchCallHistoryBinaryButtonModel?()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for SearchCallHistoryBinaryButtonModel?)
  {
    type metadata accessor for SearchCallHistoryBinaryButtonModel();
    v0 = type metadata accessor for Optional();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
  }
}

uint64_t getEnumTagSinglePayload for SingleResultCallHistoryModel.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SingleResultCallHistoryModel.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_243AC31B8 + 4 * byte_243B313EB[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_243AC31EC + 4 * byte_243B313E6[v4]))();
}

uint64_t sub_243AC31EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_243AC31F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x243AC31FCLL);
  return result;
}

uint64_t sub_243AC3208(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x243AC3210);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_243AC3214(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_243AC321C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for SingleResultCallHistoryModel.CodingKeys()
{
  return &unk_251448748;
}

uint64_t specialized SingleResultCallHistoryModel.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x65736E6F70736572 && a2 == 0xEE00644977656956;
  if (v3 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4E79616C70736964 && a2 == 0xEB00000000656D61
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000243B372C0
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4479616C70736964 && a2 == 0xEF656D6954657461
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x49746361746E6F63 && a2 == 0xEA00000000007364
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x8000000243B372E0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t *SingleResultVoicemailModel.resultViewID.unsafeMutableAddressor()
{
  return &static SingleResultVoicemailModel.resultViewID;
}

uint64_t static SingleResultVoicemailModel.resultViewID.getter()
{
  uint64_t v0;

  swift_beginAccess();
  v0 = static SingleResultVoicemailModel.resultViewID;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static SingleResultVoicemailModel.resultViewID.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  static SingleResultVoicemailModel.resultViewID = a1;
  qword_2572DE168 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static SingleResultVoicemailModel.resultViewID.modify())()
{
  swift_beginAccess();
  return static SingleResultVoicemailModel.resultViewID.modify;
}

uint64_t SingleResultVoicemailModel.responseViewId.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SingleResultVoicemailModel.responseViewId.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*SingleResultVoicemailModel.responseViewId.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t SingleResultVoicemailModel.displayName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SingleResultVoicemailModel.displayName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*SingleResultVoicemailModel.displayName.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t SingleResultVoicemailModel.displayCallDetail.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SingleResultVoicemailModel.displayCallDetail.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*SingleResultVoicemailModel.displayCallDetail.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t SingleResultVoicemailModel.displayDateTime.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SingleResultVoicemailModel.displayDateTime.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return result;
}

uint64_t (*SingleResultVoicemailModel.displayDateTime.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t SingleResultVoicemailModel.callDuration.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SingleResultVoicemailModel.callDuration.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = a2;
  return result;
}

uint64_t (*SingleResultVoicemailModel.callDuration.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

double SingleResultVoicemailModel.callDurationInterval.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 80);
}

void SingleResultVoicemailModel.callDurationInterval.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 80) = a1;
}

uint64_t (*SingleResultVoicemailModel.callDurationInterval.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t SingleResultVoicemailModel.contactIds.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SingleResultVoicemailModel.contactIds.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 88) = a1;
  return result;
}

uint64_t (*SingleResultVoicemailModel.contactIds.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t SingleResultVoicemailModel.transcript.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SingleResultVoicemailModel.transcript.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 96) = a1;
  *(_QWORD *)(v2 + 104) = a2;
  return result;
}

uint64_t (*SingleResultVoicemailModel.transcript.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t SingleResultVoicemailModel.transcriptTitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SingleResultVoicemailModel.transcriptTitle.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 112) = a1;
  *(_QWORD *)(v2 + 120) = a2;
  return result;
}

uint64_t (*SingleResultVoicemailModel.transcriptTitle.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

unint64_t type metadata accessor for SAIntentGroupRunSiriKitExecutor()
{
  unint64_t result;

  result = lazy cache variable for type metadata for SAIntentGroupRunSiriKitExecutor;
  if (!lazy cache variable for type metadata for SAIntentGroupRunSiriKitExecutor)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupRunSiriKitExecutor);
  }
  return result;
}

uint64_t SingleResultVoicemailModel.callbackDirectInvocation.getter()
{
  type metadata accessor for SingleResultVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  return CodableAceObject.wrappedValue.getter();
}

uint64_t type metadata accessor for SingleResultVoicemailModel()
{
  uint64_t result;

  result = type metadata singleton initialization cache for SingleResultVoicemailModel;
  if (!type metadata singleton initialization cache for SingleResultVoicemailModel)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t key path setter for SingleResultVoicemailModel.callbackDirectInvocation : SingleResultVoicemailModel(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  type metadata accessor for SingleResultVoicemailModel();
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  return CodableAceObject.wrappedValue.setter();
}

uint64_t SingleResultVoicemailModel.callbackDirectInvocation.setter()
{
  type metadata accessor for SingleResultVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  return CodableAceObject.wrappedValue.setter();
}

uint64_t (*SingleResultVoicemailModel.callbackDirectInvocation.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for SingleResultVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v2[4] = CodableAceObject.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t property wrapper backing initializer of SingleResultVoicemailModel.repeatDirectInvocation()
{
  type metadata accessor for SAIntentGroupRunSiriKitExecutor();
  return CodableAceObject.init(wrappedValue:)();
}

uint64_t SingleResultVoicemailModel.repeatDirectInvocation.getter()
{
  type metadata accessor for SingleResultVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  return CodableAceObject.wrappedValue.getter();
}

uint64_t key path setter for SingleResultVoicemailModel.repeatDirectInvocation : SingleResultVoicemailModel(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  type metadata accessor for SingleResultVoicemailModel();
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  return CodableAceObject.wrappedValue.setter();
}

uint64_t SingleResultVoicemailModel.repeatDirectInvocation.setter()
{
  type metadata accessor for SingleResultVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  return CodableAceObject.wrappedValue.setter();
}

uint64_t (*SingleResultVoicemailModel.repeatDirectInvocation.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for SingleResultVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v2[4] = CodableAceObject.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t SingleResultVoicemailModel.searchCallHistoryBinaryButtonModel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for SingleResultVoicemailModel();
  return outlined init with copy of SearchCallHistoryBinaryButtonModel(v1 + *(int *)(v3 + 60), a1, (uint64_t (*)(_QWORD))type metadata accessor for SearchCallHistoryBinaryButtonModel);
}

uint64_t SingleResultVoicemailModel.init(displayName:displayCallDetail:displayDateTime:callDuration:callDurationInterval:transcript:transcriptTitle:callbackDirectInvocation:repeatDirectInvocation:contactIds:searchCallHistoryBinaryButtonModel:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, __int128 a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17)
{
  uint64_t v18;
  id v19;

  *(_QWORD *)a9 = 0xD000000000000015;
  *(_QWORD *)(a9 + 8) = 0x8000000243B371C0;
  *(_QWORD *)(a9 + 16) = a1;
  *(_QWORD *)(a9 + 24) = a2;
  *(_QWORD *)(a9 + 32) = a3;
  *(_QWORD *)(a9 + 40) = a4;
  *(_QWORD *)(a9 + 48) = a5;
  *(_QWORD *)(a9 + 56) = a6;
  *(_QWORD *)(a9 + 64) = a7;
  *(_QWORD *)(a9 + 72) = a8;
  *(double *)(a9 + 80) = a10;
  *(_OWORD *)(a9 + 96) = a11;
  *(_QWORD *)(a9 + 112) = a12;
  *(_QWORD *)(a9 + 120) = a13;
  v18 = type metadata accessor for SingleResultVoicemailModel();
  type metadata accessor for SAIntentGroupRunSiriKitExecutor();
  v19 = a15;
  CodableAceObject.init(wrappedValue:)();
  *(_QWORD *)(a9 + 88) = a16;
  CodableAceObject.init(wrappedValue:)();

  return outlined init with take of SearchCallHistoryBinaryButtonModel(a17, a9 + *(int *)(v18 + 60));
}

uint64_t outlined init with take of SearchCallHistoryBinaryButtonModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SearchCallHistoryBinaryButtonModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t SingleResultVoicemailModel.CodingKeys.stringValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_243AC3EC8 + 4 * byte_243B315E0[a1]))(0xD000000000000011, 0x8000000243B372C0);
}

uint64_t sub_243AC3EC8()
{
  return 0x65736E6F70736572;
}

uint64_t sub_243AC3EEC()
{
  return 0x4E79616C70736964;
}

uint64_t sub_243AC3F0C()
{
  return 0x4479616C70736964;
}

uint64_t sub_243AC3F30()
{
  return 0x617275446C6C6163;
}

uint64_t sub_243AC3F50(uint64_t a1)
{
  return a1 + 3;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance SingleResultVoicemailModel.CodingKeys()
{
  unsigned __int8 *v0;

  return SingleResultVoicemailModel.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance SingleResultVoicemailModel.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = specialized SingleResultVoicemailModel.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

void protocol witness for CodingKey.init(intValue:) in conformance SingleResultVoicemailModel.CodingKeys(_BYTE *a1@<X8>)
{
  *a1 = 12;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance SingleResultVoicemailModel.CodingKeys()
{
  lazy protocol witness table accessor for type SingleResultVoicemailModel.CodingKeys and conformance SingleResultVoicemailModel.CodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance SingleResultVoicemailModel.CodingKeys()
{
  lazy protocol witness table accessor for type SingleResultVoicemailModel.CodingKeys and conformance SingleResultVoicemailModel.CodingKeys();
  return CodingKey.debugDescription.getter();
}

uint64_t SingleResultVoicemailModel.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<SingleResultVoicemailModel.CodingKeys>);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type SingleResultVoicemailModel.CodingKeys and conformance SingleResultVoicemailModel.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v13) = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (v2)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  LOBYTE(v13) = 1;
  KeyedEncodingContainer.encode(_:forKey:)();
  LOBYTE(v13) = 2;
  KeyedEncodingContainer.encode(_:forKey:)();
  LOBYTE(v13) = 3;
  KeyedEncodingContainer.encode(_:forKey:)();
  LOBYTE(v13) = 4;
  KeyedEncodingContainer.encode(_:forKey:)();
  LOBYTE(v13) = 5;
  KeyedEncodingContainer.encode(_:forKey:)();
  v13 = *(_QWORD *)(v3 + 88);
  v12 = 6;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
  lazy protocol witness table accessor for type [String] and conformance <A> [A](&lazy protocol witness table cache variable for type [String] and conformance <A> [A], MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  LOBYTE(v13) = 7;
  KeyedEncodingContainer.encode(_:forKey:)();
  LOBYTE(v13) = 8;
  KeyedEncodingContainer.encode(_:forKey:)();
  v11 = v6;
  type metadata accessor for SingleResultVoicemailModel();
  LOBYTE(v13) = 9;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  lazy protocol witness table accessor for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>(&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>, MEMORY[0x24BEABA88]);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  LOBYTE(v13) = 10;
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  LOBYTE(v13) = 11;
  type metadata accessor for SearchCallHistoryBinaryButtonModel();
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel, (uint64_t (*)(uint64_t))type metadata accessor for SearchCallHistoryBinaryButtonModel, (uint64_t)&protocol conformance descriptor for SearchCallHistoryBinaryButtonModel);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v8, v5);
}

unint64_t lazy protocol witness table accessor for type SingleResultVoicemailModel.CodingKeys and conformance SingleResultVoicemailModel.CodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SingleResultVoicemailModel.CodingKeys and conformance SingleResultVoicemailModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SingleResultVoicemailModel.CodingKeys and conformance SingleResultVoicemailModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for SingleResultVoicemailModel.CodingKeys, &unk_251448980);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SingleResultVoicemailModel.CodingKeys and conformance SingleResultVoicemailModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SingleResultVoicemailModel.CodingKeys and conformance SingleResultVoicemailModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SingleResultVoicemailModel.CodingKeys and conformance SingleResultVoicemailModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for SingleResultVoicemailModel.CodingKeys, &unk_251448980);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SingleResultVoicemailModel.CodingKeys and conformance SingleResultVoicemailModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SingleResultVoicemailModel.CodingKeys and conformance SingleResultVoicemailModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SingleResultVoicemailModel.CodingKeys and conformance SingleResultVoicemailModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for SingleResultVoicemailModel.CodingKeys, &unk_251448980);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SingleResultVoicemailModel.CodingKeys and conformance SingleResultVoicemailModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SingleResultVoicemailModel.CodingKeys and conformance SingleResultVoicemailModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SingleResultVoicemailModel.CodingKeys and conformance SingleResultVoicemailModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for SingleResultVoicemailModel.CodingKeys, &unk_251448980);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SingleResultVoicemailModel.CodingKeys and conformance SingleResultVoicemailModel.CodingKeys);
  }
  return result;
}

uint64_t SingleResultVoicemailModel.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  uint64_t result;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  int *v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  char v59;
  uint64_t v60;

  v49 = a2;
  v50 = type metadata accessor for SearchCallHistoryBinaryButtonModel();
  MEMORY[0x24BDAC7A8](v50);
  v4 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v54 = *(_QWORD *)(v56 - 8);
  v5 = MEMORY[0x24BDAC7A8](v56);
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v48 - v8;
  v52 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<SingleResultVoicemailModel.CodingKeys>);
  v10 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = (int *)type metadata accessor for SingleResultVoicemailModel();
  MEMORY[0x24BDAC7A8](v55);
  v14 = (uint64_t *)((char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v14 = 0xD000000000000015;
  v14[1] = 0x8000000243B371C0;
  v57 = v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type SingleResultVoicemailModel.CodingKeys and conformance SingleResultVoicemailModel.CodingKeys();
  v51 = v12;
  v15 = v58;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  v53 = a1;
  if (v15)
  {
    v58 = v15;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    v27 = 0;
    LODWORD(v52) = 0;
LABEL_4:
    v29 = v57;
    goto LABEL_5;
  }
  v16 = v10;
  v17 = v51;
  v48 = v4;
  LOBYTE(v60) = 0;
  v18 = v52;
  v19 = KeyedDecodingContainer.decode(_:forKey:)();
  v29 = v57;
  *v57 = v19;
  v29[1] = v30;
  LOBYTE(v60) = 1;
  v29[2] = KeyedDecodingContainer.decode(_:forKey:)();
  v29[3] = v31;
  LOBYTE(v60) = 2;
  v29[4] = KeyedDecodingContainer.decode(_:forKey:)();
  v29[5] = v32;
  LOBYTE(v60) = 3;
  v29[6] = KeyedDecodingContainer.decode(_:forKey:)();
  v29[7] = v33;
  LOBYTE(v60) = 4;
  v29[8] = KeyedDecodingContainer.decode(_:forKey:)();
  v29[9] = v34;
  LOBYTE(v60) = 5;
  KeyedDecodingContainer.decode(_:forKey:)();
  v58 = 0;
  v29[10] = v35;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
  v59 = 6;
  lazy protocol witness table accessor for type [String] and conformance <A> [A](&lazy protocol witness table cache variable for type [String] and conformance <A> [A], MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
  v36 = v58;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  if (!v36)
  {
    v29[11] = v60;
    LOBYTE(v60) = 7;
    v37 = KeyedDecodingContainer.decode(_:forKey:)();
    v38 = v57;
    v57[12] = v37;
    v38[13] = v39;
    LOBYTE(v60) = 8;
    v40 = KeyedDecodingContainer.decode(_:forKey:)();
    v58 = 0;
    v41 = v57;
    v57[14] = v40;
    v41[15] = v42;
    LOBYTE(v60) = 9;
    lazy protocol witness table accessor for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>(&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>, MEMORY[0x24BEABA90]);
    v43 = v58;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v58 = v43;
    if (v43)
    {
      (*(void (**)(char *, uint64_t))(v16 + 8))(v51, v52);
      v27 = 0;
      LODWORD(v52) = 0;
      v20 = 1;
      v21 = 1;
      v22 = 1;
      v23 = 1;
      v24 = 1;
      v25 = 1;
      v26 = 1;
    }
    else
    {
      v44 = *(void (**)(char *, char *, uint64_t))(v54 + 32);
      v44((char *)v57 + v55[13], v9, v56);
      LOBYTE(v60) = 10;
      v45 = v58;
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      v58 = v45;
      if (v45)
      {
        (*(void (**)(char *, uint64_t))(v16 + 8))(v51, v52);
        LODWORD(v52) = 0;
        v20 = 1;
        v21 = 1;
        v22 = 1;
        v23 = 1;
        v24 = 1;
        v25 = 1;
        v26 = 1;
        v27 = 1;
      }
      else
      {
        v44((char *)v57 + v55[14], v7, v56);
        LOBYTE(v60) = 11;
        lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel, (uint64_t (*)(uint64_t))type metadata accessor for SearchCallHistoryBinaryButtonModel, (uint64_t)&protocol conformance descriptor for SearchCallHistoryBinaryButtonModel);
        v46 = v58;
        KeyedDecodingContainer.decode<A>(_:forKey:)();
        v58 = v46;
        if (!v46)
        {
          (*(void (**)(char *, uint64_t))(v16 + 8))(v51, v52);
          v47 = (uint64_t)v57;
          outlined init with take of SearchCallHistoryBinaryButtonModel((uint64_t)v48, (uint64_t)v57 + v55[15]);
          outlined init with copy of SearchCallHistoryBinaryButtonModel(v47, v49, (uint64_t (*)(_QWORD))type metadata accessor for SingleResultVoicemailModel);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
          return outlined destroy of SingleResultVoicemailModel(v47);
        }
        (*(void (**)(char *, uint64_t))(v16 + 8))(v51, v52);
        v20 = 1;
        v21 = 1;
        v22 = 1;
        v23 = 1;
        v24 = 1;
        v25 = 1;
        v26 = 1;
        v27 = 1;
        LODWORD(v52) = 1;
      }
    }
    goto LABEL_4;
  }
  v58 = v36;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v17, v18);
  v24 = 0;
  v25 = 0;
  v26 = 0;
  v27 = 0;
  LODWORD(v52) = 0;
  v20 = 1;
  v21 = 1;
  v22 = 1;
  v23 = 1;
LABEL_5:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
  result = swift_bridgeObjectRelease();
  if (v20)
  {
    result = swift_bridgeObjectRelease();
    if (!v21)
    {
LABEL_7:
      if (!v22)
        goto LABEL_8;
      goto LABEL_19;
    }
  }
  else if (!v21)
  {
    goto LABEL_7;
  }
  result = swift_bridgeObjectRelease();
  if (!v22)
  {
LABEL_8:
    if (!v23)
      goto LABEL_9;
    goto LABEL_20;
  }
LABEL_19:
  result = swift_bridgeObjectRelease();
  if (!v23)
  {
LABEL_9:
    if (!v24)
      goto LABEL_10;
    goto LABEL_21;
  }
LABEL_20:
  result = swift_bridgeObjectRelease();
  if (!v24)
  {
LABEL_10:
    if (!v25)
      goto LABEL_11;
    goto LABEL_22;
  }
LABEL_21:
  result = swift_bridgeObjectRelease();
  if (!v25)
  {
LABEL_11:
    if (!v26)
      goto LABEL_12;
    goto LABEL_23;
  }
LABEL_22:
  result = swift_bridgeObjectRelease();
  if (!v26)
  {
LABEL_12:
    if (!v27)
      goto LABEL_14;
    goto LABEL_13;
  }
LABEL_23:
  result = swift_bridgeObjectRelease();
  if (v27)
LABEL_13:
    result = (*(uint64_t (**)(char *, uint64_t))(v54 + 8))((char *)v29 + v55[13], v56);
LABEL_14:
  if ((_DWORD)v52)
    return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))((char *)v29 + v55[14], v56);
  return result;
}

uint64_t lazy protocol witness table accessor for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    result = MEMORY[0x249501140](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t outlined init with copy of SearchCallHistoryBinaryButtonModel(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t outlined destroy of SingleResultVoicemailModel(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SingleResultVoicemailModel();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t protocol witness for static ResultViewIDProviding.resultViewID.getter in conformance SingleResultVoicemailModel()
{
  uint64_t v0;

  swift_beginAccess();
  v0 = static SingleResultVoicemailModel.resultViewID;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t protocol witness for Decodable.init(from:) in conformance SingleResultVoicemailModel@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SingleResultVoicemailModel.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance SingleResultVoicemailModel(_QWORD *a1)
{
  return SingleResultVoicemailModel.encode(to:)(a1);
}

PhoneSnippetUI::VoicemailUpdateAction_optional __swiftcall VoicemailUpdateAction.init(rawValue:)(Swift::String rawValue)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;
  PhoneSnippetUI::VoicemailUpdateAction_optional v4;

  object = rawValue._object;
  v2._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of VoicemailUpdateAction.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 == 1)
    v4.value = PhoneSnippetUI_VoicemailUpdateAction_repeatVoicemail;
  else
    v4.value = PhoneSnippetUI_VoicemailUpdateAction_unknownDefault;
  if (v3)
    return v4;
  else
    return 0;
}

uint64_t VoicemailUpdateAction.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6F56746165706572;
  else
    return 0xD000000000000015;
}

uint64_t instantiation function for generic protocol witness table for SingleResultVoicemailModel(uint64_t a1)
{
  uint64_t result;

  result = lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type SingleResultVoicemailModel and conformance SingleResultVoicemailModel, (uint64_t (*)(uint64_t))type metadata accessor for SingleResultVoicemailModel, (uint64_t)&protocol conformance descriptor for SingleResultVoicemailModel);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t base witness table accessor for Decodable in SingleResultVoicemailModel()
{
  return lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type SingleResultVoicemailModel and conformance SingleResultVoicemailModel, (uint64_t (*)(uint64_t))type metadata accessor for SingleResultVoicemailModel, (uint64_t)&protocol conformance descriptor for SingleResultVoicemailModel);
}

uint64_t base witness table accessor for Encodable in SingleResultVoicemailModel()
{
  return lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type SingleResultVoicemailModel and conformance SingleResultVoicemailModel, (uint64_t (*)(uint64_t))type metadata accessor for SingleResultVoicemailModel, (uint64_t)&protocol conformance descriptor for SingleResultVoicemailModel);
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance VoicemailUpdateAction(char *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

unint64_t lazy protocol witness table accessor for type VoicemailUpdateAction and conformance VoicemailUpdateAction()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type VoicemailUpdateAction and conformance VoicemailUpdateAction;
  if (!lazy protocol witness table cache variable for type VoicemailUpdateAction and conformance VoicemailUpdateAction)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for VoicemailUpdateAction, &type metadata for VoicemailUpdateAction);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VoicemailUpdateAction and conformance VoicemailUpdateAction);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type VoicemailUpdateAction and conformance VoicemailUpdateAction;
  if (!lazy protocol witness table cache variable for type VoicemailUpdateAction and conformance VoicemailUpdateAction)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for VoicemailUpdateAction, &type metadata for VoicemailUpdateAction);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VoicemailUpdateAction and conformance VoicemailUpdateAction);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type VoicemailUpdateAction and conformance VoicemailUpdateAction;
  if (!lazy protocol witness table cache variable for type VoicemailUpdateAction and conformance VoicemailUpdateAction)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for VoicemailUpdateAction, &type metadata for VoicemailUpdateAction);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VoicemailUpdateAction and conformance VoicemailUpdateAction);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type VoicemailUpdateAction and conformance VoicemailUpdateAction;
  if (!lazy protocol witness table cache variable for type VoicemailUpdateAction and conformance VoicemailUpdateAction)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for VoicemailUpdateAction, &type metadata for VoicemailUpdateAction);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VoicemailUpdateAction and conformance VoicemailUpdateAction);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type VoicemailUpdateAction and conformance VoicemailUpdateAction;
  if (!lazy protocol witness table cache variable for type VoicemailUpdateAction and conformance VoicemailUpdateAction)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for VoicemailUpdateAction, &type metadata for VoicemailUpdateAction);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VoicemailUpdateAction and conformance VoicemailUpdateAction);
  }
  return result;
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance VoicemailUpdateAction()
{
  return specialized RawRepresentable<>.hashValue.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance VoicemailUpdateAction()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance VoicemailUpdateAction()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

uint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance VoicemailUpdateAction@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  Swift::Int v3;
  uint64_t result;
  char v5;

  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of VoicemailUpdateAction.init(rawValue:), *a1);
  result = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *a2 = v5;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance VoicemailUpdateAction@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = VoicemailUpdateAction.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t protocol witness for Decodable.init(from:) in conformance VoicemailUpdateAction()
{
  lazy protocol witness table accessor for type VoicemailUpdateAction and conformance VoicemailUpdateAction();
  return RawRepresentable<>.init(from:)();
}

uint64_t protocol witness for Encodable.encode(to:) in conformance VoicemailUpdateAction()
{
  lazy protocol witness table accessor for type VoicemailUpdateAction and conformance VoicemailUpdateAction();
  return RawRepresentable<>.encode(to:)();
}

uint64_t protocol witness for UpdateResponseCommand.init(_:) in conformance VoicemailUpdateAction()
{
  lazy protocol witness table accessor for type VoicemailUpdateAction and conformance VoicemailUpdateAction();
  lazy protocol witness table accessor for type VoicemailUpdateAction and conformance VoicemailUpdateAction();
  return UpdateResponseCommand<>.init(_:)();
}

uint64_t protocol witness for UpdateResponseCommand.serializeData() in conformance VoicemailUpdateAction()
{
  lazy protocol witness table accessor for type VoicemailUpdateAction and conformance VoicemailUpdateAction();
  lazy protocol witness table accessor for type VoicemailUpdateAction and conformance VoicemailUpdateAction();
  return UpdateResponseCommand<>.serializeData()();
}

uint64_t sub_243AC50BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for SingleResultVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  result = CodableAceObject.wrappedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_243AC510C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for SingleResultVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  result = CodableAceObject.wrappedValue.getter();
  *a1 = result;
  return result;
}

char *initializeBufferWithCopyOfBuffer for SingleResultVoicemailModel(char *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  int *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v35;
  char *v36;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v33 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = (char *)(v33 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *((_QWORD *)a1 + 1) = v7;
    v8 = a2[3];
    *((_QWORD *)a1 + 2) = a2[2];
    *((_QWORD *)a1 + 3) = v8;
    v9 = a2[5];
    *((_QWORD *)a1 + 4) = a2[4];
    *((_QWORD *)a1 + 5) = v9;
    v10 = a2[7];
    *((_QWORD *)a1 + 6) = a2[6];
    *((_QWORD *)a1 + 7) = v10;
    v11 = a2[9];
    *((_QWORD *)a1 + 8) = a2[8];
    *((_QWORD *)a1 + 9) = v11;
    v12 = a2[11];
    *((_QWORD *)a1 + 10) = a2[10];
    *((_QWORD *)a1 + 11) = v12;
    v13 = a2[13];
    *((_QWORD *)a1 + 12) = a2[12];
    *((_QWORD *)a1 + 13) = v13;
    v14 = a2[15];
    v15 = a3[13];
    v35 = (char *)a2 + v15;
    v36 = &a1[v15];
    *((_QWORD *)a1 + 14) = a2[14];
    *((_QWORD *)a1 + 15) = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    v17(v36, v35, v16);
    v17(&a1[a3[14]], (char *)a2 + a3[14], v16);
    v18 = a3[15];
    v19 = &a1[v18];
    v20 = (char *)a2 + v18;
    v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
    v22(v19, v20, v21);
    v23 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
    v24 = v23[5];
    v25 = &v19[v24];
    v26 = &v20[v24];
    v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
    v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
    v28(v25, v26, v27);
    v22(&v19[v23[6]], &v20[v23[6]], v21);
    v28(&v19[v23[7]], &v20[v23[7]], v27);
    v29 = v23[8];
    v30 = &v19[v29];
    v31 = &v20[v29];
    v32 = *((_QWORD *)v31 + 1);
    *(_QWORD *)v30 = *(_QWORD *)v31;
    *((_QWORD *)v30 + 1) = v32;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SingleResultVoicemailModel(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  int *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[13];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(a1 + a2[14], v5);
  v7 = a1 + a2[15];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
  v9(v7, v8);
  v10 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  v11 = v7 + v10[5];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  v13 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
  v13(v11, v12);
  v9(v7 + v10[6], v8);
  v13(v7 + v10[7], v12);
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for SingleResultVoicemailModel(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v33;
  char *v34;

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  v7 = *((_QWORD *)a2 + 3);
  *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
  *((_QWORD *)a1 + 3) = v7;
  v8 = *((_QWORD *)a2 + 5);
  *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
  *((_QWORD *)a1 + 5) = v8;
  v9 = *((_QWORD *)a2 + 7);
  *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
  *((_QWORD *)a1 + 7) = v9;
  v10 = *((_QWORD *)a2 + 9);
  *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
  *((_QWORD *)a1 + 9) = v10;
  v11 = *((_QWORD *)a2 + 11);
  *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
  *((_QWORD *)a1 + 11) = v11;
  v12 = *((_QWORD *)a2 + 13);
  *((_QWORD *)a1 + 12) = *((_QWORD *)a2 + 12);
  *((_QWORD *)a1 + 13) = v12;
  v13 = *((_QWORD *)a2 + 15);
  v14 = a3[13];
  v33 = &a2[v14];
  v34 = &a1[v14];
  *((_QWORD *)a1 + 14) = *((_QWORD *)a2 + 14);
  *((_QWORD *)a1 + 15) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  v16(v34, v33, v15);
  v16(&a1[a3[14]], &a2[a3[14]], v15);
  v17 = a3[15];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
  v21(v18, v19, v20);
  v22 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  v23 = v22[5];
  v24 = &v18[v23];
  v25 = &v19[v23];
  v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
  v27(v24, v25, v26);
  v21(&v18[v22[6]], &v19[v22[6]], v20);
  v27(&v18[v22[7]], &v19[v22[7]], v26);
  v28 = v22[8];
  v29 = &v18[v28];
  v30 = &v19[v28];
  v31 = *((_QWORD *)v30 + 1);
  *(_QWORD *)v29 = *(_QWORD *)v30;
  *((_QWORD *)v29 + 1) = v31;
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for SingleResultVoicemailModel(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
  *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
  *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
  *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
  *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
  *((_QWORD *)a1 + 11) = *((_QWORD *)a2 + 11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 12) = *((_QWORD *)a2 + 12);
  *((_QWORD *)a1 + 13) = *((_QWORD *)a2 + 13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 14) = *((_QWORD *)a2 + 14);
  *((_QWORD *)a1 + 15) = *((_QWORD *)a2 + 15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[13];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&a1[a3[14]], &a2[a3[14]], v9);
  v11 = a3[15];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24);
  v15(v12, v13, v14);
  v16 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  v17 = v16[5];
  v18 = &v12[v17];
  v19 = &v13[v17];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 24);
  v21(v18, v19, v20);
  v15(&v12[v16[6]], &v13[v16[6]], v14);
  v21(&v12[v16[7]], &v13[v16[7]], v20);
  v22 = v16[8];
  v23 = &v12[v22];
  v24 = &v13[v22];
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *((_QWORD *)v23 + 1) = *((_QWORD *)v24 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for SingleResultVoicemailModel(char *a1, char *a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);

  v6 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v6;
  v7 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a1 + 3) = v7;
  v8 = *((_OWORD *)a2 + 5);
  *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
  *((_OWORD *)a1 + 5) = v8;
  v9 = *((_OWORD *)a2 + 7);
  v10 = a3[13];
  v11 = &a1[v10];
  v12 = &a2[v10];
  *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
  *((_OWORD *)a1 + 7) = v9;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32);
  v14(v11, v12, v13);
  v14(&a1[a3[14]], &a2[a3[14]], v13);
  v15 = a3[15];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32);
  v19(v16, v17, v18);
  v20 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  v21 = v20[5];
  v22 = &v16[v21];
  v23 = &v17[v21];
  v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32);
  v25(v22, v23, v24);
  v19(&v16[v20[6]], &v17[v20[6]], v18);
  v25(&v16[v20[7]], &v17[v20[7]], v24);
  *(_OWORD *)&v16[v20[8]] = *(_OWORD *)&v17[v20[8]];
  return a1;
}

char *assignWithTake for SingleResultVoicemailModel(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  int *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  v7 = *((_QWORD *)a2 + 3);
  *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
  *((_QWORD *)a1 + 3) = v7;
  swift_bridgeObjectRelease();
  v8 = *((_QWORD *)a2 + 5);
  *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
  *((_QWORD *)a1 + 5) = v8;
  swift_bridgeObjectRelease();
  v9 = *((_QWORD *)a2 + 7);
  *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
  *((_QWORD *)a1 + 7) = v9;
  swift_bridgeObjectRelease();
  v10 = *((_QWORD *)a2 + 9);
  *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
  *((_QWORD *)a1 + 9) = v10;
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
  *((_QWORD *)a1 + 11) = *((_QWORD *)a2 + 11);
  swift_bridgeObjectRelease();
  v11 = *((_QWORD *)a2 + 13);
  *((_QWORD *)a1 + 12) = *((_QWORD *)a2 + 12);
  *((_QWORD *)a1 + 13) = v11;
  swift_bridgeObjectRelease();
  v12 = *((_QWORD *)a2 + 15);
  *((_QWORD *)a1 + 14) = *((_QWORD *)a2 + 14);
  *((_QWORD *)a1 + 15) = v12;
  swift_bridgeObjectRelease();
  v13 = a3[13];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 40);
  v17(v14, v15, v16);
  v17(&a1[a3[14]], &a2[a3[14]], v16);
  v18 = a3[15];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 40);
  v22(v19, v20, v21);
  v23 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  v24 = v23[5];
  v25 = &v19[v24];
  v26 = &v20[v24];
  v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 40);
  v28(v25, v26, v27);
  v22(&v19[v23[6]], &v20[v23[6]], v21);
  v28(&v19[v23[7]], &v20[v23[7]], v27);
  v29 = v23[8];
  v30 = &v19[v29];
  v31 = &v20[v29];
  v33 = *(_QWORD *)v31;
  v32 = *((_QWORD *)v31 + 1);
  *(_QWORD *)v30 = v33;
  *((_QWORD *)v30 + 1) = v32;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SingleResultVoicemailModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_243AC5BE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 52);
    }
    else
    {
      v10 = type metadata accessor for SearchCallHistoryBinaryButtonModel();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 60);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for SingleResultVoicemailModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_243AC5C98(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 52);
    }
    else
    {
      v10 = type metadata accessor for SearchCallHistoryBinaryButtonModel();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 60);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void type metadata completion function for SingleResultVoicemailModel()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for CodableAceObject<SAIntentGroupRunSiriKitExecutor>();
  if (v0 <= 0x3F)
  {
    type metadata accessor for SearchCallHistoryBinaryButtonModel();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void type metadata accessor for CodableAceObject<SAIntentGroupRunSiriKitExecutor>()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>)
  {
    type metadata accessor for SAIntentGroupRunSiriKitExecutor();
    v0 = type metadata accessor for CodableAceObject();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  }
}

uint64_t getEnumTagSinglePayload for VoicemailUpdateAction(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for VoicemailUpdateAction(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_243AC5F20 + 4 * byte_243B315F1[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_243AC5F54 + 4 * byte_243B315EC[v4]))();
}

uint64_t sub_243AC5F54(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_243AC5F5C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x243AC5F64);
  return result;
}

uint64_t sub_243AC5F70(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x243AC5F78);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_243AC5F7C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_243AC5F84(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *destructiveInjectEnumTag for VoicemailUpdateAction(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for VoicemailUpdateAction()
{
  return &type metadata for VoicemailUpdateAction;
}

uint64_t getEnumTagSinglePayload for SingleResultVoicemailModel.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF5)
    goto LABEL_17;
  if (a2 + 11 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 11) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 11;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 11;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 11;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xC;
  v8 = v6 - 12;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SingleResultVoicemailModel.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_243AC6088 + 4 * byte_243B315FB[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_243AC60BC + 4 * byte_243B315F6[v4]))();
}

uint64_t sub_243AC60BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_243AC60C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x243AC60CCLL);
  return result;
}

uint64_t sub_243AC60D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x243AC60E0);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_243AC60E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_243AC60EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for SingleResultVoicemailModel.CodingKeys()
{
  return &unk_251448980;
}

uint64_t specialized SingleResultVoicemailModel.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x65736E6F70736572 && a2 == 0xEE00644977656956;
  if (v3 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4E79616C70736964 && a2 == 0xEB00000000656D61
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000243B372C0
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4479616C70736964 && a2 == 0xEF656D6954657461
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x617275446C6C6163 && a2 == 0xEC0000006E6F6974
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000243B37310
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x49746361746E6F63 && a2 == 0xEA00000000007364
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x697263736E617274 && a2 == 0xEA00000000007470
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x697263736E617274 && a2 == -1196430878757850000
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000243B37330
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000243B37350
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x8000000243B372E0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 11;
    else
      return 12;
  }
}

uint64_t SingleVoicemailModel.responseViewId.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SingleVoicemailModel.responseViewId.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*SingleVoicemailModel.responseViewId.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t SingleVoicemailModel.displayName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SingleVoicemailModel.displayName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*SingleVoicemailModel.displayName.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t SingleVoicemailModel.displayCallDetail.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SingleVoicemailModel.displayCallDetail.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*SingleVoicemailModel.displayCallDetail.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t SingleVoicemailModel.displayDateTime.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SingleVoicemailModel.displayDateTime.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return result;
}

uint64_t (*SingleVoicemailModel.displayDateTime.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t SingleVoicemailModel.callDuration.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SingleVoicemailModel.callDuration.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = a2;
  return result;
}

uint64_t (*SingleVoicemailModel.callDuration.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t SingleVoicemailModel.unseen.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t SingleVoicemailModel.unseen.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 80) = result;
  return result;
}

uint64_t (*SingleVoicemailModel.unseen.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t property wrapper backing initializer of SingleVoicemailModel.openVoicemailRSKE()
{
  type metadata accessor for SAIntentGroupRunSiriKitExecutor();
  return CodableAceObject.init(wrappedValue:)();
}

uint64_t SingleVoicemailModel.openVoicemailRSKE.getter()
{
  type metadata accessor for SingleVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  return CodableAceObject.wrappedValue.getter();
}

uint64_t type metadata accessor for SingleVoicemailModel()
{
  uint64_t result;

  result = type metadata singleton initialization cache for SingleVoicemailModel;
  if (!type metadata singleton initialization cache for SingleVoicemailModel)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t key path setter for SingleVoicemailModel.openVoicemailRSKE : SingleVoicemailModel(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  type metadata accessor for SingleVoicemailModel();
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  return CodableAceObject.wrappedValue.setter();
}

uint64_t SingleVoicemailModel.openVoicemailRSKE.setter()
{
  type metadata accessor for SingleVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  return CodableAceObject.wrappedValue.setter();
}

uint64_t (*SingleVoicemailModel.openVoicemailRSKE.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for SingleVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v2[4] = CodableAceObject.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t SingleVoicemailModel.openContactRSKE.getter()
{
  type metadata accessor for SingleVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  return CodableAceObject.wrappedValue.getter();
}

uint64_t key path setter for SingleVoicemailModel.openContactRSKE : SingleVoicemailModel(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  type metadata accessor for SingleVoicemailModel();
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  return CodableAceObject.wrappedValue.setter();
}

uint64_t SingleVoicemailModel.openContactRSKE.setter()
{
  type metadata accessor for SingleVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  return CodableAceObject.wrappedValue.setter();
}

uint64_t (*SingleVoicemailModel.openContactRSKE.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for SingleVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v2[4] = CodableAceObject.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

void SingleVoicemailModel.init(displayName:displayCallDetail:displayDateTime:callDuration:unseen:openVoicemailRSKE:openContactRSKE:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10, void *a11)
{
  id v14;

  *(_QWORD *)a9 = 0x6F56656C676E6953;
  *(_QWORD *)(a9 + 8) = 0xEF6C69616D656369;
  *(_QWORD *)(a9 + 16) = a1;
  *(_QWORD *)(a9 + 24) = a2;
  *(_QWORD *)(a9 + 32) = a3;
  *(_QWORD *)(a9 + 40) = a4;
  *(_QWORD *)(a9 + 48) = a5;
  *(_QWORD *)(a9 + 56) = a6;
  type metadata accessor for SingleVoicemailModel();
  type metadata accessor for SAIntentGroupRunSiriKitExecutor();
  v14 = a11;
  CodableAceObject.init(wrappedValue:)();
  *(_QWORD *)(a9 + 64) = a7;
  *(_QWORD *)(a9 + 72) = a8;
  *(_BYTE *)(a9 + 80) = a10;
  CodableAceObject.init(wrappedValue:)();

}

uint64_t SingleVoicemailModel.CodingKeys.stringValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_243AC6DD4 + 4 * byte_243B31940[a1]))(0xD000000000000011, 0x8000000243B372C0);
}

uint64_t sub_243AC6DD4()
{
  return 0x65736E6F70736572;
}

uint64_t sub_243AC6DF8()
{
  return 0x4E79616C70736964;
}

uint64_t sub_243AC6E18()
{
  return 0x4479616C70736964;
}

uint64_t sub_243AC6E3C()
{
  return 0x617275446C6C6163;
}

uint64_t sub_243AC6E5C()
{
  return 0x6E6565736E75;
}

uint64_t sub_243AC6E84()
{
  return 0x746E6F436E65706FLL;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance SingleVoicemailModel.CodingKeys()
{
  unsigned __int8 *v0;

  return SingleVoicemailModel.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance SingleVoicemailModel.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = specialized SingleVoicemailModel.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

void protocol witness for CodingKey.init(intValue:) in conformance SingleVoicemailModel.CodingKeys(_BYTE *a1@<X8>)
{
  *a1 = 8;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance SingleVoicemailModel.CodingKeys()
{
  lazy protocol witness table accessor for type SingleVoicemailModel.CodingKeys and conformance SingleVoicemailModel.CodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance SingleVoicemailModel.CodingKeys()
{
  lazy protocol witness table accessor for type SingleVoicemailModel.CodingKeys and conformance SingleVoicemailModel.CodingKeys();
  return CodingKey.debugDescription.getter();
}

uint64_t SingleVoicemailModel.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<SingleVoicemailModel.CodingKeys>);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type SingleVoicemailModel.CodingKeys and conformance SingleVoicemailModel.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v16 = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1)
  {
    v15 = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    v14 = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    v13 = 3;
    KeyedEncodingContainer.encode(_:forKey:)();
    v12 = 4;
    KeyedEncodingContainer.encode(_:forKey:)();
    v11 = 5;
    KeyedEncodingContainer.encode(_:forKey:)();
    type metadata accessor for SingleVoicemailModel();
    v10 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    lazy protocol witness table accessor for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>(&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>, MEMORY[0x24BEABA88]);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v9 = 7;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t lazy protocol witness table accessor for type SingleVoicemailModel.CodingKeys and conformance SingleVoicemailModel.CodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SingleVoicemailModel.CodingKeys and conformance SingleVoicemailModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SingleVoicemailModel.CodingKeys and conformance SingleVoicemailModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for SingleVoicemailModel.CodingKeys, &unk_251448B58);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SingleVoicemailModel.CodingKeys and conformance SingleVoicemailModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SingleVoicemailModel.CodingKeys and conformance SingleVoicemailModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SingleVoicemailModel.CodingKeys and conformance SingleVoicemailModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for SingleVoicemailModel.CodingKeys, &unk_251448B58);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SingleVoicemailModel.CodingKeys and conformance SingleVoicemailModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SingleVoicemailModel.CodingKeys and conformance SingleVoicemailModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SingleVoicemailModel.CodingKeys and conformance SingleVoicemailModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for SingleVoicemailModel.CodingKeys, &unk_251448B58);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SingleVoicemailModel.CodingKeys and conformance SingleVoicemailModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SingleVoicemailModel.CodingKeys and conformance SingleVoicemailModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SingleVoicemailModel.CodingKeys and conformance SingleVoicemailModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for SingleVoicemailModel.CodingKeys, &unk_251448B58);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SingleVoicemailModel.CodingKeys and conformance SingleVoicemailModel.CodingKeys);
  }
  return result;
}

uint64_t SingleVoicemailModel.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v30;
  void (*v31)(uint64_t, char *, uint64_t);
  char *v32;
  _QWORD v33[2];
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  char *v40;
  uint64_t v41;
  char v42;
  char v43;
  char v44;
  char v45;
  char v46;
  char v47;
  char v48;
  char v49;

  v35 = a2;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v37 = *(_QWORD *)(v41 - 8);
  v3 = MEMORY[0x24BDAC7A8](v41);
  v5 = (char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v33 - v6;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<SingleVoicemailModel.CodingKeys>);
  v8 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v10 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for SingleVoicemailModel();
  MEMORY[0x24BDAC7A8](v38);
  v12 = (_QWORD *)((char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v12 = 0x6F56656C676E6953;
  v12[1] = 0xEF6C69616D656369;
  v13 = v12;
  v14 = a1[3];
  v39 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  lazy protocol witness table accessor for type SingleVoicemailModel.CodingKeys and conformance SingleVoicemailModel.CodingKeys();
  v15 = v40;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v15)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v40 = v7;
    v16 = v8;
    v34 = v5;
    v49 = 0;
    v17 = v10;
    v18 = (uint64_t)v13;
    *v13 = KeyedDecodingContainer.decode(_:forKey:)();
    v13[1] = v19;
    v48 = 1;
    v20 = KeyedDecodingContainer.decode(_:forKey:)();
    v21 = (uint64_t)v39;
    v13[2] = v20;
    v13[3] = v22;
    v47 = 2;
    v13[4] = KeyedDecodingContainer.decode(_:forKey:)();
    v13[5] = v23;
    v46 = 3;
    v13[6] = KeyedDecodingContainer.decode(_:forKey:)();
    v13[7] = v24;
    v45 = 4;
    v13[8] = KeyedDecodingContainer.decode(_:forKey:)();
    v13[9] = v25;
    v44 = 5;
    *((_BYTE *)v13 + 80) = KeyedDecodingContainer.decode(_:forKey:)() & 1;
    v43 = 6;
    v26 = lazy protocol witness table accessor for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>(&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>, MEMORY[0x24BEABA90]);
    v28 = v40;
    v27 = v41;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v30 = v18 + *(int *)(v38 + 40);
    v33[1] = v26;
    v31 = *(void (**)(uint64_t, char *, uint64_t))(v37 + 32);
    v31(v30, v28, v27);
    v42 = 7;
    v32 = v34;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v17, v36);
    v31(v18 + *(int *)(v38 + 44), v32, v27);
    outlined init with copy of SingleVoicemailModel(v18, v35);
    __swift_destroy_boxed_opaque_existential_1(v21);
    return outlined destroy of SingleVoicemailModel(v18);
  }
}

uint64_t outlined init with copy of SingleVoicemailModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SingleVoicemailModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of SingleVoicemailModel(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SingleVoicemailModel();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t instantiation function for generic protocol witness table for SingleVoicemailModel(uint64_t a1)
{
  uint64_t result;

  result = lazy protocol witness table accessor for type SingleVoicemailModel and conformance SingleVoicemailModel(&lazy protocol witness table cache variable for type SingleVoicemailModel and conformance SingleVoicemailModel, (uint64_t)&protocol conformance descriptor for SingleVoicemailModel);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t base witness table accessor for Decodable in SingleVoicemailModel()
{
  return lazy protocol witness table accessor for type SingleVoicemailModel and conformance SingleVoicemailModel(&lazy protocol witness table cache variable for type SingleVoicemailModel and conformance SingleVoicemailModel, (uint64_t)&protocol conformance descriptor for SingleVoicemailModel);
}

uint64_t base witness table accessor for Encodable in SingleVoicemailModel()
{
  return lazy protocol witness table accessor for type SingleVoicemailModel and conformance SingleVoicemailModel(&lazy protocol witness table cache variable for type SingleVoicemailModel and conformance SingleVoicemailModel, (uint64_t)&protocol conformance descriptor for SingleVoicemailModel);
}

uint64_t lazy protocol witness table accessor for type SingleVoicemailModel and conformance SingleVoicemailModel(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for SingleVoicemailModel();
    result = MEMORY[0x249501140](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t protocol witness for Decodable.init(from:) in conformance SingleVoicemailModel@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SingleVoicemailModel.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance SingleVoicemailModel(_QWORD *a1)
{
  return SingleVoicemailModel.encode(to:)(a1);
}

uint64_t sub_243AC7860@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for SingleVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  result = CodableAceObject.wrappedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_243AC78B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for SingleVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  result = CodableAceObject.wrappedValue.getter();
  *a1 = result;
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for SingleVoicemailModel(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v18 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    v9 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v9;
    v10 = a2[7];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v10;
    v11 = a2[8];
    v12 = a2[9];
    *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
    v13 = *(int *)(a3 + 40);
    v14 = a1 + v13;
    v15 = (uint64_t)a2 + v13;
    *(_QWORD *)(a1 + 64) = v11;
    *(_QWORD *)(a1 + 72) = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    v17(v14, v15, v16);
    v17(a1 + *(int *)(a3 + 44), (uint64_t)a2 + *(int *)(a3 + 44), v16);
  }
  return a1;
}

uint64_t destroy for SingleVoicemailModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v7)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 40);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v7(v4, v5);
  return ((uint64_t (*)(uint64_t, uint64_t))v7)(a1 + *(int *)(a2 + 44), v5);
}

uint64_t initializeWithCopy for SingleVoicemailModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  v10 = *(_QWORD *)(a2 + 64);
  v11 = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v12 = *(int *)(a3 + 40);
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  v16(v13, v14, v15);
  v16(a1 + *(int *)(a3 + 44), a2 + *(int *)(a3 + 44), v15);
  return a1;
}

uint64_t assignWithCopy for SingleVoicemailModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v6 = *(int *)(a3 + 40);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(a1 + *(int *)(a3 + 44), a2 + *(int *)(a3 + 44), v9);
  return a1;
}

uint64_t initializeWithTake for SingleVoicemailModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  v8 = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v9 = *(int *)(a3 + 40);
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_OWORD *)(a1 + 64) = v8;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32);
  v13(v10, v11, v12);
  v13(a1 + *(int *)(a3 + 44), a2 + *(int *)(a3 + 44), v12);
  return a1;
}

uint64_t assignWithTake for SingleVoicemailModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v11 = *(int *)(a3 + 40);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40);
  v15(v12, v13, v14);
  v15(a1 + *(int *)(a3 + 44), a2 + *(int *)(a3 + 44), v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for SingleVoicemailModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_243AC7E54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 40), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for SingleVoicemailModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_243AC7EE0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 40), a2, a2, v7);
  }
  return result;
}

void type metadata completion function for SingleVoicemailModel()
{
  unint64_t v0;

  type metadata accessor for CodableAceObject<SAIntentGroupRunSiriKitExecutor>();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t getEnumTagSinglePayload for SingleVoicemailModel.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SingleVoicemailModel.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_243AC80B8 + 4 * byte_243B3194D[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_243AC80EC + 4 * byte_243B31948[v4]))();
}

uint64_t sub_243AC80EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_243AC80F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x243AC80FCLL);
  return result;
}

uint64_t sub_243AC8108(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x243AC8110);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_243AC8114(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_243AC811C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for SingleVoicemailModel.CodingKeys()
{
  return &unk_251448B58;
}

uint64_t specialized SingleVoicemailModel.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x65736E6F70736572 && a2 == 0xEE00644977656956;
  if (v3 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4E79616C70736964 && a2 == 0xEB00000000656D61
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000243B372C0
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4479616C70736964 && a2 == 0xEF656D6954657461
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x617275446C6C6163 && a2 == 0xEC0000006E6F6974
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E6565736E75 && a2 == 0xE600000000000000
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000243B37370
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x746E6F436E65706FLL && a2 == 0xEF454B5352746361)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t PlayVoicemailModel.responseViewId.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PlayVoicemailModel.responseViewId.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*PlayVoicemailModel.responseViewId.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t property wrapper backing initializer of PlayVoicemailModel.callRecords()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SingleVoicemailModel]);
  return Loggable.init(wrappedValue:)();
}

uint64_t PlayVoicemailModel.callRecords.getter()
{
  uint64_t v1;

  type metadata accessor for PlayVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t type metadata accessor for PlayVoicemailModel()
{
  uint64_t result;

  result = type metadata singleton initialization cache for PlayVoicemailModel;
  if (!type metadata singleton initialization cache for PlayVoicemailModel)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t key path getter for PlayVoicemailModel.callRecords : PlayVoicemailModel@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  type metadata accessor for PlayVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
  result = Loggable.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t key path setter for PlayVoicemailModel.callRecords : PlayVoicemailModel()
{
  type metadata accessor for PlayVoicemailModel();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
  return Loggable.wrappedValue.setter();
}

uint64_t PlayVoicemailModel.callRecords.setter()
{
  type metadata accessor for PlayVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
  return Loggable.wrappedValue.setter();
}

uint64_t (*PlayVoicemailModel.callRecords.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for PlayVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t PlayVoicemailModel.voicemailTitle.getter()
{
  uint64_t v1;

  type metadata accessor for PlayVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t key path getter for PlayVoicemailModel.voicemailTitle : PlayVoicemailModel@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for PlayVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  result = Loggable.wrappedValue.getter();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t key path setter for PlayVoicemailModel.voicemailTitle : PlayVoicemailModel()
{
  type metadata accessor for PlayVoicemailModel();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  return Loggable.wrappedValue.setter();
}

uint64_t PlayVoicemailModel.voicemailTitle.setter()
{
  type metadata accessor for PlayVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  return Loggable.wrappedValue.setter();
}

uint64_t (*PlayVoicemailModel.voicemailTitle.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for PlayVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t property wrapper backing initializer of PlayVoicemailModel.openPhoneText()
{
  return Loggable.init(wrappedValue:)();
}

uint64_t PlayVoicemailModel.openPhoneText.getter()
{
  uint64_t v1;

  type metadata accessor for PlayVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t key path getter for PlayVoicemailModel.openPhoneText : PlayVoicemailModel@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for PlayVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  result = Loggable.wrappedValue.getter();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t key path setter for PlayVoicemailModel.openPhoneText : PlayVoicemailModel()
{
  type metadata accessor for PlayVoicemailModel();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  return Loggable.wrappedValue.setter();
}

uint64_t PlayVoicemailModel.openPhoneText.setter()
{
  type metadata accessor for PlayVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  return Loggable.wrappedValue.setter();
}

uint64_t (*PlayVoicemailModel.openPhoneText.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for PlayVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t property wrapper backing initializer of PlayVoicemailModel.openPhoneAction()
{
  type metadata accessor for SABaseCommand();
  return CodableAceObject.init(wrappedValue:)();
}

unint64_t type metadata accessor for SABaseCommand()
{
  unint64_t result;

  result = lazy cache variable for type metadata for SABaseCommand;
  if (!lazy cache variable for type metadata for SABaseCommand)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for SABaseCommand);
  }
  return result;
}

uint64_t PlayVoicemailModel.openPhoneAction.getter()
{
  type metadata accessor for PlayVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  return CodableAceObject.wrappedValue.getter();
}

uint64_t key path setter for PlayVoicemailModel.openPhoneAction : PlayVoicemailModel(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  type metadata accessor for PlayVoicemailModel();
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  return CodableAceObject.wrappedValue.setter();
}

uint64_t PlayVoicemailModel.openPhoneAction.setter()
{
  type metadata accessor for PlayVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  return CodableAceObject.wrappedValue.setter();
}

uint64_t (*PlayVoicemailModel.openPhoneAction.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for PlayVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  v2[4] = CodableAceObject.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t PlayVoicemailModel.CodingKeys.stringValue.getter(char a1)
{
  return *(_QWORD *)&aResponsecallre[8 * a1];
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance PlayVoicemailModel.CodingKeys()
{
  char *v0;

  return PlayVoicemailModel.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance PlayVoicemailModel.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = specialized PlayVoicemailModel.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PlayVoicemailModel.CodingKeys()
{
  lazy protocol witness table accessor for type PlayVoicemailModel.CodingKeys and conformance PlayVoicemailModel.CodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PlayVoicemailModel.CodingKeys()
{
  lazy protocol witness table accessor for type PlayVoicemailModel.CodingKeys and conformance PlayVoicemailModel.CodingKeys();
  return CodingKey.debugDescription.getter();
}

uint64_t PlayVoicemailModel.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PlayVoicemailModel.CodingKeys>);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type PlayVoicemailModel.CodingKeys and conformance PlayVoicemailModel.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v13 = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1)
  {
    type metadata accessor for PlayVoicemailModel();
    v12 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
    lazy protocol witness table accessor for type Loggable<[SingleVoicemailModel]> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<[SingleVoicemailModel]> and conformance <A> Loggable<A>, MEMORY[0x24BEAD370]);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v11 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    lazy protocol witness table accessor for type Loggable<String> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<String> and conformance <A> Loggable<A>, MEMORY[0x24BEAD370]);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v10 = 3;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v9 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
    lazy protocol witness table accessor for type CodableAceObject<SABaseCommand> and conformance CodableAceObject<A>(&lazy protocol witness table cache variable for type CodableAceObject<SABaseCommand> and conformance CodableAceObject<A>, MEMORY[0x24BEABA88]);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t lazy protocol witness table accessor for type PlayVoicemailModel.CodingKeys and conformance PlayVoicemailModel.CodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PlayVoicemailModel.CodingKeys and conformance PlayVoicemailModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type PlayVoicemailModel.CodingKeys and conformance PlayVoicemailModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PlayVoicemailModel.CodingKeys, &unk_251448D10);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PlayVoicemailModel.CodingKeys and conformance PlayVoicemailModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PlayVoicemailModel.CodingKeys and conformance PlayVoicemailModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type PlayVoicemailModel.CodingKeys and conformance PlayVoicemailModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PlayVoicemailModel.CodingKeys, &unk_251448D10);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PlayVoicemailModel.CodingKeys and conformance PlayVoicemailModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PlayVoicemailModel.CodingKeys and conformance PlayVoicemailModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type PlayVoicemailModel.CodingKeys and conformance PlayVoicemailModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PlayVoicemailModel.CodingKeys, &unk_251448D10);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PlayVoicemailModel.CodingKeys and conformance PlayVoicemailModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PlayVoicemailModel.CodingKeys and conformance PlayVoicemailModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type PlayVoicemailModel.CodingKeys and conformance PlayVoicemailModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PlayVoicemailModel.CodingKeys, &unk_251448D10);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PlayVoicemailModel.CodingKeys and conformance PlayVoicemailModel.CodingKeys);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type [SingleVoicemailModel] and conformance <A> [A](unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [SingleVoicemailModel]);
    v10 = lazy protocol witness table accessor for type Context and conformance Context(a2, (uint64_t (*)(uint64_t))type metadata accessor for SingleVoicemailModel, a3);
    result = MEMORY[0x249501140](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t PlayVoicemailModel.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  char *v29;
  char *v30;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int *v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;

  v34 = a2;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  v33 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v35 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v44 = *(_QWORD *)(v42 - 8);
  v4 = MEMORY[0x24BDAC7A8](v42);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v32 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
  v39 = *(_QWORD *)(v9 - 8);
  v40 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PlayVoicemailModel.CodingKeys>);
  v12 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = (int *)type metadata accessor for PlayVoicemailModel();
  MEMORY[0x24BDAC7A8](v45);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  strcpy(v16, "PlayVoicemail");
  *((_WORD *)v16 + 7) = -4864;
  v17 = a1[3];
  v41 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  lazy protocol witness table accessor for type PlayVoicemailModel.CodingKeys and conformance PlayVoicemailModel.CodingKeys();
  v38 = v14;
  v18 = v43;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v18)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v19 = v8;
    v32 = v6;
    v43 = v12;
    v20 = v36;
    v21 = v37;
    v50 = 0;
    *(_QWORD *)v16 = KeyedDecodingContainer.decode(_:forKey:)();
    *((_QWORD *)v16 + 1) = v22;
    v49 = 1;
    lazy protocol witness table accessor for type Loggable<[SingleVoicemailModel]> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<[SingleVoicemailModel]> and conformance <A> Loggable<A>, MEMORY[0x24BEAD380]);
    v23 = v11;
    v24 = v40;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v25 = v42;
    (*(void (**)(char *, char *, uint64_t))(v39 + 32))(&v16[v45[5]], v23, v24);
    v48 = 2;
    lazy protocol witness table accessor for type Loggable<String> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<String> and conformance <A> Loggable<A>, MEMORY[0x24BEAD380]);
    v26 = v19;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v27 = *(void (**)(char *, char *, uint64_t))(v44 + 32);
    v27(&v16[v45[6]], v26, v25);
    v47 = 3;
    v28 = v32;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v27(&v16[v45[7]], v28, v25);
    v46 = 4;
    lazy protocol witness table accessor for type CodableAceObject<SABaseCommand> and conformance CodableAceObject<A>(&lazy protocol witness table cache variable for type CodableAceObject<SABaseCommand> and conformance CodableAceObject<A>, MEMORY[0x24BEABA90]);
    v29 = v35;
    v30 = v38;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v30, v21);
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(&v16[v45[8]], v29, v20);
    outlined init with copy of PlayVoicemailModel((uint64_t)v16, v34);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    return outlined destroy of PlayVoicemailModel((uint64_t)v16);
  }
}

uint64_t lazy protocol witness table accessor for type Loggable<[SingleVoicemailModel]> and conformance <A> Loggable<A>(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  _QWORD v6[2];

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
    v6[0] = lazy protocol witness table accessor for type [SingleVoicemailModel] and conformance <A> [A](&lazy protocol witness table cache variable for type [SingleVoicemailModel] and conformance <A> [A], &lazy protocol witness table cache variable for type SingleVoicemailModel and conformance SingleVoicemailModel, (uint64_t)&protocol conformance descriptor for SingleVoicemailModel, MEMORY[0x24BEE12D0]);
    v6[1] = lazy protocol witness table accessor for type [SingleVoicemailModel] and conformance <A> [A](&lazy protocol witness table cache variable for type [SingleVoicemailModel] and conformance <A> [A], &lazy protocol witness table cache variable for type SingleVoicemailModel and conformance SingleVoicemailModel, (uint64_t)&protocol conformance descriptor for SingleVoicemailModel, MEMORY[0x24BEE12A0]);
    result = MEMORY[0x249501140](a2, v5, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type CodableAceObject<SABaseCommand> and conformance CodableAceObject<A>(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
    result = MEMORY[0x249501140](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t outlined init with copy of PlayVoicemailModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PlayVoicemailModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of PlayVoicemailModel(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PlayVoicemailModel();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t default argument 0 of PlayVoicemailModel.init(responseViewId:callRecords:voicemailTitle:openPhoneText:openPhoneAction:)()
{
  return 0x63696F5679616C50;
}

uint64_t PlayVoicemailModel.init(responseViewId:callRecords:voicemailTitle:openPhoneText:openPhoneAction:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  type metadata accessor for PlayVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SingleVoicemailModel]);
  Loggable.init(wrappedValue:)();
  Loggable.init(wrappedValue:)();
  Loggable.init(wrappedValue:)();
  type metadata accessor for SABaseCommand();
  return CodableAceObject.init(wrappedValue:)();
}

uint64_t instantiation function for generic protocol witness table for PlayVoicemailModel(uint64_t a1)
{
  uint64_t result;

  result = lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type PlayVoicemailModel and conformance PlayVoicemailModel, (uint64_t (*)(uint64_t))type metadata accessor for PlayVoicemailModel, (uint64_t)&protocol conformance descriptor for PlayVoicemailModel);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t base witness table accessor for Decodable in PlayVoicemailModel()
{
  return lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type PlayVoicemailModel and conformance PlayVoicemailModel, (uint64_t (*)(uint64_t))type metadata accessor for PlayVoicemailModel, (uint64_t)&protocol conformance descriptor for PlayVoicemailModel);
}

uint64_t base witness table accessor for Encodable in PlayVoicemailModel()
{
  return lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type PlayVoicemailModel and conformance PlayVoicemailModel, (uint64_t (*)(uint64_t))type metadata accessor for PlayVoicemailModel, (uint64_t)&protocol conformance descriptor for PlayVoicemailModel);
}

uint64_t protocol witness for Decodable.init(from:) in conformance PlayVoicemailModel@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PlayVoicemailModel.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance PlayVoicemailModel(_QWORD *a1)
{
  return PlayVoicemailModel.encode(to:)(a1);
}

uint64_t sub_243AC99AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for PlayVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  result = CodableAceObject.wrappedValue.getter();
  *a1 = result;
  return result;
}

char *initializeBufferWithCopyOfBuffer for PlayVoicemailModel(char *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = (char *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *((_QWORD *)a1 + 1) = v7;
    v8 = a3[5];
    v9 = &a1[v8];
    v10 = (char *)a2 + v8;
    swift_bridgeObjectRetain();
    v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = &a1[v12];
    v14 = (char *)a2 + v12;
    v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    v16(v13, v14, v15);
    v16(&a1[a3[7]], (char *)a2 + a3[7], v15);
    v17 = a3[8];
    v18 = &a1[v17];
    v19 = (char *)a2 + v17;
    v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  }
  return a1;
}

uint64_t destroy for PlayVoicemailModel(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[6];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v8(v6, v7);
  v8(a1 + a2[7], v7);
  v9 = a1 + a2[8];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

char *initializeWithCopy for PlayVoicemailModel(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  v7 = a3[5];
  v8 = &a1[v7];
  v9 = &a2[v7];
  swift_bridgeObjectRetain();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  v15(v12, v13, v14);
  v15(&a1[a3[7]], &a2[a3[7]], v14);
  v16 = a3[8];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  return a1;
}

char *assignWithCopy for PlayVoicemailModel(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24);
  v14(v11, v12, v13);
  v14(&a1[a3[7]], &a2[a3[7]], v13);
  v15 = a3[8];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

char *initializeWithTake for PlayVoicemailModel(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32);
  v14(v11, v12, v13);
  v14(&a1[a3[7]], &a2[a3[7]], v13);
  v15 = a3[8];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

char *assignWithTake for PlayVoicemailModel(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40);
  v15(v12, v13, v14);
  v15(&a1[a3[7]], &a2[a3[7]], v14);
  v16 = a3[8];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, v18, v19);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlayVoicemailModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_243AC9FCC(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[5];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[6];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[8];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PlayVoicemailModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_243ACA0A8(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[5];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[6];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[8];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void type metadata completion function for PlayVoicemailModel()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  type metadata accessor for Loggable<[SingleVoicemailModel]>();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Loggable<String>();
    if (v1 <= 0x3F)
    {
      type metadata accessor for CodableAceObject<SABaseCommand>();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void type metadata accessor for Loggable<[SingleVoicemailModel]>()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for Loggable<[SingleVoicemailModel]>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [SingleVoicemailModel]);
    v0 = type metadata accessor for Loggable();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
  }
}

void type metadata accessor for Loggable<String>()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for Loggable<String>)
  {
    v0 = type metadata accessor for Loggable();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Loggable<String>);
  }
}

void type metadata accessor for CodableAceObject<SABaseCommand>()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for CodableAceObject<SABaseCommand>)
  {
    type metadata accessor for SABaseCommand();
    v0 = type metadata accessor for CodableAceObject();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for CodableAceObject<SABaseCommand>);
  }
}

uint64_t storeEnumTagSinglePayload for PlayVoicemailModel.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_243ACA36C + 4 * byte_243B31B65[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_243ACA3A0 + 4 * byte_243B31B60[v4]))();
}

uint64_t sub_243ACA3A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_243ACA3A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x243ACA3B0);
  return result;
}

uint64_t sub_243ACA3BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x243ACA3C4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_243ACA3C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_243ACA3D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for PlayVoicemailModel.CodingKeys()
{
  return &unk_251448D10;
}

uint64_t specialized PlayVoicemailModel.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x65736E6F70736572 && a2 == 0xEE00644977656956;
  if (v3 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F6365526C6C6163 && a2 == 0xEB00000000736472
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x69616D6563696F76 && a2 == 0xEE00656C7469546CLL
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6F68506E65706FLL && a2 == 0xED00007478655465
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E6F68506E65706FLL && a2 == 0xEF6E6F6974634165)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t SingleCallRecordModel.responseViewId.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SingleCallRecordModel.responseViewId.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*SingleCallRecordModel.responseViewId.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t SingleCallRecordModel.displayName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SingleCallRecordModel.displayName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*SingleCallRecordModel.displayName.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t SingleCallRecordModel.displayCallDetail.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SingleCallRecordModel.displayCallDetail.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*SingleCallRecordModel.displayCallDetail.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t SingleCallRecordModel.displayDateTime.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SingleCallRecordModel.displayDateTime.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return result;
}

uint64_t (*SingleCallRecordModel.displayDateTime.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t SingleCallRecordModel.currentCallType.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SingleCallRecordModel.currentCallType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = a2;
  return result;
}

uint64_t (*SingleCallRecordModel.currentCallType.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t SingleCallRecordModel.contactIds.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SingleCallRecordModel.contactIds.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 80) = a1;
  return result;
}

uint64_t (*SingleCallRecordModel.contactIds.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t SingleCallRecordModel.isVideoCall.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 88);
}

uint64_t SingleCallRecordModel.isVideoCall.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 88) = result;
  return result;
}

uint64_t (*SingleCallRecordModel.isVideoCall.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t property wrapper backing initializer of SingleCallRecordModel.directInvocation()
{
  type metadata accessor for SAIntentGroupRunSiriKitExecutor();
  return CodableAceObject.init(wrappedValue:)();
}

uint64_t SingleCallRecordModel.directInvocation.getter()
{
  type metadata accessor for SingleCallRecordModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  return CodableAceObject.wrappedValue.getter();
}

uint64_t type metadata accessor for SingleCallRecordModel()
{
  uint64_t result;

  result = type metadata singleton initialization cache for SingleCallRecordModel;
  if (!type metadata singleton initialization cache for SingleCallRecordModel)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t key path setter for SingleCallRecordModel.directInvocation : SingleCallRecordModel(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  type metadata accessor for SingleCallRecordModel();
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  return CodableAceObject.wrappedValue.setter();
}

uint64_t SingleCallRecordModel.directInvocation.setter()
{
  type metadata accessor for SingleCallRecordModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  return CodableAceObject.wrappedValue.setter();
}

uint64_t (*SingleCallRecordModel.directInvocation.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for SingleCallRecordModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v2[4] = CodableAceObject.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t SingleCallRecordModel.openContactDirectInvocation.getter()
{
  type metadata accessor for SingleCallRecordModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  return CodableAceObject.wrappedValue.getter();
}

uint64_t key path setter for SingleCallRecordModel.openContactDirectInvocation : SingleCallRecordModel(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  type metadata accessor for SingleCallRecordModel();
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  return CodableAceObject.wrappedValue.setter();
}

uint64_t SingleCallRecordModel.openContactDirectInvocation.setter()
{
  type metadata accessor for SingleCallRecordModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  return CodableAceObject.wrappedValue.setter();
}

uint64_t (*SingleCallRecordModel.openContactDirectInvocation.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for SingleCallRecordModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v2[4] = CodableAceObject.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

void SingleCallRecordModel.init(displayName:displayCallDetail:displayDateTime:currentCallType:contactIds:directInvocation:openContactDirectInvocation:isVideoCall:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, void *a11, uint64_t a12, char a13)
{
  id v16;

  *(_QWORD *)a9 = 0xD000000000000010;
  *(_QWORD *)(a9 + 8) = 0x8000000243B371E0;
  *(_QWORD *)(a9 + 16) = a1;
  *(_QWORD *)(a9 + 24) = a2;
  *(_QWORD *)(a9 + 32) = a3;
  *(_QWORD *)(a9 + 40) = a4;
  *(_QWORD *)(a9 + 48) = a5;
  *(_QWORD *)(a9 + 56) = a6;
  type metadata accessor for SingleCallRecordModel();
  type metadata accessor for SAIntentGroupRunSiriKitExecutor();
  v16 = a11;
  CodableAceObject.init(wrappedValue:)();
  *(_QWORD *)(a9 + 72) = a8;
  *(_QWORD *)(a9 + 80) = a10;
  *(_QWORD *)(a9 + 64) = a7;
  CodableAceObject.init(wrappedValue:)();

  *(_BYTE *)(a9 + 88) = a13;
}

uint64_t SingleCallRecordModel.CodingKeys.stringValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_243ACADB0 + 4 * byte_243B31DB0[a1]))(0xD000000000000011, 0x8000000243B372C0);
}

uint64_t sub_243ACADB0()
{
  return 0x65736E6F70736572;
}

uint64_t sub_243ACADD4()
{
  return 0x4E79616C70736964;
}

uint64_t sub_243ACADF4()
{
  return 0x4479616C70736964;
}

uint64_t sub_243ACAE18()
{
  return 0x43746E6572727563;
}

uint64_t sub_243ACAE3C()
{
  return 0x49746361746E6F63;
}

uint64_t sub_243ACAE58()
{
  return 0x436F656469567369;
}

unint64_t sub_243ACAE78()
{
  return 0xD000000000000010;
}

uint64_t sub_243ACAE94()
{
  uint64_t v0;

  return v0 + 11;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance SingleCallRecordModel.CodingKeys()
{
  unsigned __int8 *v0;

  return SingleCallRecordModel.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance SingleCallRecordModel.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = specialized SingleCallRecordModel.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

void protocol witness for CodingKey.init(intValue:) in conformance SingleCallRecordModel.CodingKeys(_BYTE *a1@<X8>)
{
  *a1 = 9;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance SingleCallRecordModel.CodingKeys()
{
  lazy protocol witness table accessor for type SingleCallRecordModel.CodingKeys and conformance SingleCallRecordModel.CodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance SingleCallRecordModel.CodingKeys()
{
  lazy protocol witness table accessor for type SingleCallRecordModel.CodingKeys and conformance SingleCallRecordModel.CodingKeys();
  return CodingKey.debugDescription.getter();
}

uint64_t SingleCallRecordModel.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  uint64_t v11;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<SingleCallRecordModel.CodingKeys>);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type SingleCallRecordModel.CodingKeys and conformance SingleCallRecordModel.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v11) = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v2)
  {
    LOBYTE(v11) = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v11) = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v11) = 3;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v11) = 4;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    v11 = *(_QWORD *)(v3 + 80);
    v10[15] = 5;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance <A> [A](&lazy protocol witness table cache variable for type [String] and conformance <A> [A], MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    LOBYTE(v11) = 6;
    KeyedEncodingContainer.encode(_:forKey:)();
    type metadata accessor for SingleCallRecordModel();
    LOBYTE(v11) = 7;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    lazy protocol witness table accessor for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>(&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>, MEMORY[0x24BEABA88]);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    LOBYTE(v11) = 8;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t lazy protocol witness table accessor for type SingleCallRecordModel.CodingKeys and conformance SingleCallRecordModel.CodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SingleCallRecordModel.CodingKeys and conformance SingleCallRecordModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SingleCallRecordModel.CodingKeys and conformance SingleCallRecordModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for SingleCallRecordModel.CodingKeys, &unk_251448EA8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SingleCallRecordModel.CodingKeys and conformance SingleCallRecordModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SingleCallRecordModel.CodingKeys and conformance SingleCallRecordModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SingleCallRecordModel.CodingKeys and conformance SingleCallRecordModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for SingleCallRecordModel.CodingKeys, &unk_251448EA8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SingleCallRecordModel.CodingKeys and conformance SingleCallRecordModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SingleCallRecordModel.CodingKeys and conformance SingleCallRecordModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SingleCallRecordModel.CodingKeys and conformance SingleCallRecordModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for SingleCallRecordModel.CodingKeys, &unk_251448EA8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SingleCallRecordModel.CodingKeys and conformance SingleCallRecordModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SingleCallRecordModel.CodingKeys and conformance SingleCallRecordModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SingleCallRecordModel.CodingKeys and conformance SingleCallRecordModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for SingleCallRecordModel.CodingKeys, &unk_251448EA8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SingleCallRecordModel.CodingKeys and conformance SingleCallRecordModel.CodingKeys);
  }
  return result;
}

uint64_t SingleCallRecordModel.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  char v30;
  uint64_t v31;

  v24 = a2;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v26 = *(_QWORD *)(v28 - 8);
  v4 = MEMORY[0x24BDAC7A8](v28);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v23 - v7;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<SingleCallRecordModel.CodingKeys>);
  v9 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for SingleCallRecordModel();
  MEMORY[0x24BDAC7A8](v27);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v13 = 0xD000000000000010;
  *((_QWORD *)v13 + 1) = 0x8000000243B371E0;
  *((_QWORD *)v13 + 8) = 0;
  *((_QWORD *)v13 + 9) = 0;
  v14 = a1[3];
  v29 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  lazy protocol witness table accessor for type SingleCallRecordModel.CodingKeys and conformance SingleCallRecordModel.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v15 = v9;
    LOBYTE(v31) = 0;
    *(_QWORD *)v13 = KeyedDecodingContainer.decode(_:forKey:)();
    *((_QWORD *)v13 + 1) = v16;
    LOBYTE(v31) = 1;
    *((_QWORD *)v13 + 2) = KeyedDecodingContainer.decode(_:forKey:)();
    *((_QWORD *)v13 + 3) = v17;
    LOBYTE(v31) = 2;
    *((_QWORD *)v13 + 4) = KeyedDecodingContainer.decode(_:forKey:)();
    *((_QWORD *)v13 + 5) = v18;
    LOBYTE(v31) = 3;
    *((_QWORD *)v13 + 6) = KeyedDecodingContainer.decode(_:forKey:)();
    *((_QWORD *)v13 + 7) = v19;
    LOBYTE(v31) = 4;
    *((_QWORD *)v13 + 8) = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    *((_QWORD *)v13 + 9) = v20;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    v30 = 5;
    lazy protocol witness table accessor for type [String] and conformance <A> [A](&lazy protocol witness table cache variable for type [String] and conformance <A> [A], MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    *((_QWORD *)v13 + 10) = v31;
    LOBYTE(v31) = 6;
    v13[88] = KeyedDecodingContainer.decode(_:forKey:)() & 1;
    LOBYTE(v31) = 7;
    v23 = lazy protocol witness table accessor for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>(&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>, MEMORY[0x24BEABA90]);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v21 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
    v21(&v13[*(int *)(v27 + 44)], v8, v28);
    LOBYTE(v31) = 8;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v11, v25);
    v21(&v13[*(int *)(v27 + 48)], v6, v28);
    outlined init with copy of SingleCallRecordModel((uint64_t)v13, v24);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    return outlined destroy of SingleCallRecordModel((uint64_t)v13);
  }
}

uint64_t outlined init with copy of SingleCallRecordModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SingleCallRecordModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of SingleCallRecordModel(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SingleCallRecordModel();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t instantiation function for generic protocol witness table for SingleCallRecordModel(uint64_t a1)
{
  uint64_t result;

  result = lazy protocol witness table accessor for type SingleCallRecordModel and conformance SingleCallRecordModel(&lazy protocol witness table cache variable for type SingleCallRecordModel and conformance SingleCallRecordModel, (uint64_t)&protocol conformance descriptor for SingleCallRecordModel);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t base witness table accessor for Decodable in SingleCallRecordModel()
{
  return lazy protocol witness table accessor for type SingleCallRecordModel and conformance SingleCallRecordModel(&lazy protocol witness table cache variable for type SingleCallRecordModel and conformance SingleCallRecordModel, (uint64_t)&protocol conformance descriptor for SingleCallRecordModel);
}

uint64_t base witness table accessor for Encodable in SingleCallRecordModel()
{
  return lazy protocol witness table accessor for type SingleCallRecordModel and conformance SingleCallRecordModel(&lazy protocol witness table cache variable for type SingleCallRecordModel and conformance SingleCallRecordModel, (uint64_t)&protocol conformance descriptor for SingleCallRecordModel);
}

uint64_t lazy protocol witness table accessor for type SingleCallRecordModel and conformance SingleCallRecordModel(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for SingleCallRecordModel();
    result = MEMORY[0x249501140](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t protocol witness for Decodable.init(from:) in conformance SingleCallRecordModel@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SingleCallRecordModel.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance SingleCallRecordModel(_QWORD *a1)
{
  return SingleCallRecordModel.encode(to:)(a1);
}

uint64_t sub_243ACB8D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for SingleCallRecordModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  result = CodableAceObject.wrappedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_243ACB924@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for SingleCallRecordModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  result = CodableAceObject.wrappedValue.getter();
  *a1 = result;
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for SingleCallRecordModel(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v18 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    v9 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v9;
    v10 = a2[7];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v10;
    v11 = a2[9];
    *(_QWORD *)(a1 + 64) = a2[8];
    *(_QWORD *)(a1 + 72) = v11;
    v12 = a2[10];
    *(_BYTE *)(a1 + 88) = *((_BYTE *)a2 + 88);
    v13 = *(int *)(a3 + 44);
    v14 = a1 + v13;
    v15 = (uint64_t)a2 + v13;
    *(_QWORD *)(a1 + 80) = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    v17(v14, v15, v16);
    v17(a1 + *(int *)(a3 + 48), (uint64_t)a2 + *(int *)(a3 + 48), v16);
  }
  return a1;
}

uint64_t destroy for SingleCallRecordModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v7)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 44);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v7(v4, v5);
  return ((uint64_t (*)(uint64_t, uint64_t))v7)(a1 + *(int *)(a2 + 48), v5);
}

uint64_t initializeWithCopy for SingleCallRecordModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  v10 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v10;
  v11 = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v12 = *(int *)(a3 + 44);
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_QWORD *)(a1 + 80) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  v16(v13, v14, v15);
  v16(a1 + *(int *)(a3 + 48), a2 + *(int *)(a3 + 48), v15);
  return a1;
}

uint64_t assignWithCopy for SingleCallRecordModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v6 = *(int *)(a3 + 44);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(a1 + *(int *)(a3 + 48), a2 + *(int *)(a3 + 48), v9);
  return a1;
}

uint64_t initializeWithTake for SingleCallRecordModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  v8 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v9 = *(int *)(a3 + 44);
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_OWORD *)(a1 + 64) = v8;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32);
  v13(v10, v11, v12);
  v13(a1 + *(int *)(a3 + 48), a2 + *(int *)(a3 + 48), v12);
  return a1;
}

uint64_t assignWithTake for SingleCallRecordModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v10;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v11 = *(int *)(a3 + 44);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40);
  v15(v12, v13, v14);
  v15(a1 + *(int *)(a3 + 48), a2 + *(int *)(a3 + 48), v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for SingleCallRecordModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_243ACBF20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 44), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for SingleCallRecordModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_243ACBFAC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 44), a2, a2, v7);
  }
  return result;
}

void type metadata completion function for SingleCallRecordModel()
{
  unint64_t v0;

  type metadata accessor for CodableAceObject<SAIntentGroupRunSiriKitExecutor>();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t getEnumTagSinglePayload for SingleCallRecordModel.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SingleCallRecordModel.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_243ACC19C + 4 * byte_243B31DBE[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_243ACC1D0 + 4 * byte_243B31DB9[v4]))();
}

uint64_t sub_243ACC1D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_243ACC1D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x243ACC1E0);
  return result;
}

uint64_t sub_243ACC1EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x243ACC1F4);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_243ACC1F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_243ACC200(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for SingleCallRecordModel.CodingKeys()
{
  return &unk_251448EA8;
}

uint64_t specialized SingleCallRecordModel.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x65736E6F70736572 && a2 == 0xEE00644977656956;
  if (v3 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4E79616C70736964 && a2 == 0xEB00000000656D61
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000243B372C0
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4479616C70736964 && a2 == 0xEF656D6954657461
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x43746E6572727563 && a2 == 0xEF657079546C6C61
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x49746361746E6F63 && a2 == 0xEA00000000007364
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x436F656469567369 && a2 == 0xEB000000006C6C61
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000243B37390
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000243B373B0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

uint64_t SearchCallHistoryModel.responseViewId.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchCallHistoryModel.responseViewId.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*SearchCallHistoryModel.responseViewId.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t SearchCallHistoryModel.appId.getter()
{
  uint64_t v1;

  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t type metadata accessor for SearchCallHistoryModel()
{
  uint64_t result;

  result = type metadata singleton initialization cache for SearchCallHistoryModel;
  if (!type metadata singleton initialization cache for SearchCallHistoryModel)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t key path getter for SearchCallHistoryModel.appId : SearchCallHistoryModel@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  result = Loggable.wrappedValue.getter();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t key path setter for SearchCallHistoryModel.appId : SearchCallHistoryModel()
{
  type metadata accessor for SearchCallHistoryModel();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  return Loggable.wrappedValue.setter();
}

uint64_t SearchCallHistoryModel.appId.setter()
{
  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  return Loggable.wrappedValue.setter();
}

uint64_t (*SearchCallHistoryModel.appId.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t property wrapper backing initializer of SearchCallHistoryModel.callRecords()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SingleCallRecordModel]);
  return Loggable.init(wrappedValue:)();
}

uint64_t SearchCallHistoryModel.callRecords.getter()
{
  uint64_t v1;

  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t key path getter for SearchCallHistoryModel.callRecords : SearchCallHistoryModel@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
  result = Loggable.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t key path setter for SearchCallHistoryModel.callRecords : SearchCallHistoryModel()
{
  type metadata accessor for SearchCallHistoryModel();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
  return Loggable.wrappedValue.setter();
}

uint64_t SearchCallHistoryModel.callRecords.setter()
{
  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
  return Loggable.wrappedValue.setter();
}

uint64_t (*SearchCallHistoryModel.callRecords.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t SearchCallHistoryModel.recentsText.getter()
{
  uint64_t v1;

  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t key path getter for SearchCallHistoryModel.recentsText : SearchCallHistoryModel@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  result = Loggable.wrappedValue.getter();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t key path setter for SearchCallHistoryModel.recentsText : SearchCallHistoryModel()
{
  type metadata accessor for SearchCallHistoryModel();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  return Loggable.wrappedValue.setter();
}

uint64_t SearchCallHistoryModel.recentsText.setter()
{
  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  return Loggable.wrappedValue.setter();
}

uint64_t (*SearchCallHistoryModel.recentsText.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t property wrapper backing initializer of SearchCallHistoryModel.openPhoneText()
{
  return Loggable.init(wrappedValue:)();
}

uint64_t SearchCallHistoryModel.openPhoneText.getter()
{
  uint64_t v1;

  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t key path getter for SearchCallHistoryModel.openPhoneText : SearchCallHistoryModel@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  result = Loggable.wrappedValue.getter();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t key path setter for SearchCallHistoryModel.openPhoneText : SearchCallHistoryModel()
{
  type metadata accessor for SearchCallHistoryModel();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  return Loggable.wrappedValue.setter();
}

uint64_t SearchCallHistoryModel.openPhoneText.setter()
{
  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  return Loggable.wrappedValue.setter();
}

uint64_t (*SearchCallHistoryModel.openPhoneText.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t property wrapper backing initializer of SearchCallHistoryModel.shouldShowBottomView()
{
  return Loggable.init(wrappedValue:)();
}

uint64_t SearchCallHistoryModel.shouldShowBottomView.getter()
{
  unsigned __int8 v1;

  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t key path getter for SearchCallHistoryModel.shouldShowBottomView : SearchCallHistoryModel@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  result = Loggable.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t key path setter for SearchCallHistoryModel.shouldShowBottomView : SearchCallHistoryModel()
{
  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  return Loggable.wrappedValue.setter();
}

uint64_t SearchCallHistoryModel.shouldShowBottomView.setter()
{
  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  return Loggable.wrappedValue.setter();
}

uint64_t (*SearchCallHistoryModel.shouldShowBottomView.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t property wrapper backing initializer of SearchCallHistoryModel.openPhoneAction()
{
  type metadata accessor for SABaseCommand();
  return CodableAceObject.init(wrappedValue:)();
}

uint64_t SearchCallHistoryModel.openPhoneAction.getter()
{
  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  return CodableAceObject.wrappedValue.getter();
}

uint64_t key path setter for SearchCallHistoryModel.openPhoneAction : SearchCallHistoryModel(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  type metadata accessor for SearchCallHistoryModel();
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  return CodableAceObject.wrappedValue.setter();
}

uint64_t SearchCallHistoryModel.openPhoneAction.setter()
{
  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  return CodableAceObject.wrappedValue.setter();
}

uint64_t (*SearchCallHistoryModel.openPhoneAction.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  v2[4] = CodableAceObject.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t SearchCallHistoryModel.CodingKeys.stringValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_243ACD254 + 4 * byte_243B31FF0[a1]))(0xD000000000000014, 0x8000000243B373D0);
}

uint64_t sub_243ACD254()
{
  return 0x65736E6F70736572;
}

uint64_t sub_243ACD278()
{
  return 0x6449707061;
}

uint64_t sub_243ACD28C()
{
  return 0x6F6365526C6C6163;
}

uint64_t sub_243ACD2AC()
{
  return 0x5473746E65636572;
}

uint64_t sub_243ACD2CC()
{
  return 0x6E6F68506E65706FLL;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance SearchCallHistoryModel.CodingKeys()
{
  unsigned __int8 *v0;

  return SearchCallHistoryModel.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance SearchCallHistoryModel.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = specialized SearchCallHistoryModel.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

void protocol witness for CodingKey.init(intValue:) in conformance SearchCallHistoryModel.CodingKeys(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance SearchCallHistoryModel.CodingKeys()
{
  lazy protocol witness table accessor for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance SearchCallHistoryModel.CodingKeys()
{
  lazy protocol witness table accessor for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys();
  return CodingKey.debugDescription.getter();
}

uint64_t SearchCallHistoryModel.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<SearchCallHistoryModel.CodingKeys>);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v16 = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1)
  {
    v7 = type metadata accessor for SearchCallHistoryModel();
    v15 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    lazy protocol witness table accessor for type Loggable<String> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<String> and conformance <A> Loggable<A>, MEMORY[0x24BEAD370]);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v9[1] = v7;
    v14 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
    lazy protocol witness table accessor for type Loggable<[SingleCallRecordModel]> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<[SingleCallRecordModel]> and conformance <A> Loggable<A>, MEMORY[0x24BEAD370]);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v13 = 3;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v12 = 4;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v11 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    lazy protocol witness table accessor for type Loggable<Bool> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<Bool> and conformance <A> Loggable<A>, MEMORY[0x24BEAD370]);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v10 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
    lazy protocol witness table accessor for type CodableAceObject<SABaseCommand> and conformance CodableAceObject<A>(&lazy protocol witness table cache variable for type CodableAceObject<SABaseCommand> and conformance CodableAceObject<A>, MEMORY[0x24BEABA88]);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t lazy protocol witness table accessor for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for SearchCallHistoryModel.CodingKeys, &unk_251449080);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for SearchCallHistoryModel.CodingKeys, &unk_251449080);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for SearchCallHistoryModel.CodingKeys, &unk_251449080);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for SearchCallHistoryModel.CodingKeys, &unk_251449080);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type [SingleCallRecordModel] and conformance <A> [A](unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [SingleCallRecordModel]);
    v10 = lazy protocol witness table accessor for type Context and conformance Context(a2, (uint64_t (*)(uint64_t))type metadata accessor for SingleCallRecordModel, a3);
    result = MEMORY[0x249501140](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type Loggable<Bool> and conformance <A> Loggable<A>(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  _QWORD v6[2];

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Loggable<Bool>);
    v6[0] = MEMORY[0x24BEE1348];
    v6[1] = MEMORY[0x24BEE1330];
    result = MEMORY[0x249501140](a2, v5, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t SearchCallHistoryModel.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, char *, uint64_t);
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  char *v57;
  int *v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  char v62;
  char v63;
  char v64;
  char v65;
  char v66;
  char v67;

  v45 = a2;
  v46 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  v44 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v47 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  v52 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v48 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
  v53 = *(_QWORD *)(v5 - 8);
  v54 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v49 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v59 = *(_QWORD *)(v7 - 8);
  v60 = v7;
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v40 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v40 - v14;
  v50 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<SearchCallHistoryModel.CodingKeys>);
  v16 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = (int *)type metadata accessor for SearchCallHistoryModel();
  MEMORY[0x24BDAC7A8](v58);
  v20 = (uint64_t *)((char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v20 = 0xD000000000000011;
  v20[1] = 0x8000000243B37200;
  v21 = v20;
  v22 = a1[3];
  v55 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v22);
  lazy protocol witness table accessor for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys();
  v51 = v18;
  v23 = v57;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v23)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v57 = v13;
    v43 = v10;
    v24 = v16;
    v67 = 0;
    v26 = v49;
    v25 = v50;
    *v21 = KeyedDecodingContainer.decode(_:forKey:)();
    v21[1] = v27;
    v66 = 1;
    v28 = lazy protocol witness table accessor for type Loggable<String> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<String> and conformance <A> Loggable<A>, MEMORY[0x24BEAD380]);
    v29 = v60;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v30 = (char *)v21 + v58[5];
    v41 = *(void (**)(char *, char *, uint64_t))(v59 + 32);
    v42 = v28;
    v41(v30, v15, v29);
    v65 = 2;
    lazy protocol witness table accessor for type Loggable<[SingleCallRecordModel]> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<[SingleCallRecordModel]> and conformance <A> Loggable<A>, MEMORY[0x24BEAD380]);
    v31 = v54;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, char *, uint64_t))(v53 + 32))((char *)v21 + v58[6], v26, v31);
    v64 = 3;
    v32 = v57;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v33 = v56;
    v34 = v32;
    v35 = v41;
    v41((char *)v21 + v58[7], v34, v29);
    v63 = 4;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v35((char *)v21 + v58[8], v43, v29);
    v62 = 5;
    lazy protocol witness table accessor for type Loggable<Bool> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<Bool> and conformance <A> Loggable<A>, MEMORY[0x24BEAD380]);
    v36 = v48;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, char *, uint64_t))(v52 + 32))((char *)v21 + v58[9], v36, v33);
    v61 = 6;
    lazy protocol witness table accessor for type CodableAceObject<SABaseCommand> and conformance CodableAceObject<A>(&lazy protocol witness table cache variable for type CodableAceObject<SABaseCommand> and conformance CodableAceObject<A>, MEMORY[0x24BEABA90]);
    v37 = v46;
    v38 = v47;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v51, v25);
    (*(void (**)(char *, char *, uint64_t))(v44 + 32))((char *)v21 + v58[10], v38, v37);
    outlined init with copy of SearchCallHistoryModel((uint64_t)v21, v45);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
    return outlined destroy of SearchCallHistoryModel((uint64_t)v21);
  }
}

uint64_t lazy protocol witness table accessor for type Loggable<[SingleCallRecordModel]> and conformance <A> Loggable<A>(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  _QWORD v6[2];

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
    v6[0] = lazy protocol witness table accessor for type [SingleCallRecordModel] and conformance <A> [A](&lazy protocol witness table cache variable for type [SingleCallRecordModel] and conformance <A> [A], &lazy protocol witness table cache variable for type SingleCallRecordModel and conformance SingleCallRecordModel, (uint64_t)&protocol conformance descriptor for SingleCallRecordModel, MEMORY[0x24BEE12D0]);
    v6[1] = lazy protocol witness table accessor for type [SingleCallRecordModel] and conformance <A> [A](&lazy protocol witness table cache variable for type [SingleCallRecordModel] and conformance <A> [A], &lazy protocol witness table cache variable for type SingleCallRecordModel and conformance SingleCallRecordModel, (uint64_t)&protocol conformance descriptor for SingleCallRecordModel, MEMORY[0x24BEE12A0]);
    result = MEMORY[0x249501140](a2, v5, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t outlined init with copy of SearchCallHistoryModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SearchCallHistoryModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of SearchCallHistoryModel(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SearchCallHistoryModel();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t default argument 0 of SearchCallHistoryModel.init(responseViewId:appId:callRecords:recentsText:openPhoneText:shouldShowBottomView:openPhoneAction:)()
{
  return 0xD000000000000011;
}

uint64_t SearchCallHistoryModel.init(responseViewId:appId:callRecords:recentsText:openPhoneText:shouldShowBottomView:openPhoneAction:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  type metadata accessor for SearchCallHistoryModel();
  Loggable.init(wrappedValue:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SingleCallRecordModel]);
  Loggable.init(wrappedValue:)();
  Loggable.init(wrappedValue:)();
  Loggable.init(wrappedValue:)();
  Loggable.init(wrappedValue:)();
  type metadata accessor for SABaseCommand();
  return CodableAceObject.init(wrappedValue:)();
}

uint64_t instantiation function for generic protocol witness table for SearchCallHistoryModel(uint64_t a1)
{
  uint64_t result;

  result = lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type SearchCallHistoryModel and conformance SearchCallHistoryModel, (uint64_t (*)(uint64_t))type metadata accessor for SearchCallHistoryModel, (uint64_t)&protocol conformance descriptor for SearchCallHistoryModel);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t base witness table accessor for Decodable in SearchCallHistoryModel()
{
  return lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type SearchCallHistoryModel and conformance SearchCallHistoryModel, (uint64_t (*)(uint64_t))type metadata accessor for SearchCallHistoryModel, (uint64_t)&protocol conformance descriptor for SearchCallHistoryModel);
}

uint64_t base witness table accessor for Encodable in SearchCallHistoryModel()
{
  return lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type SearchCallHistoryModel and conformance SearchCallHistoryModel, (uint64_t (*)(uint64_t))type metadata accessor for SearchCallHistoryModel, (uint64_t)&protocol conformance descriptor for SearchCallHistoryModel);
}

uint64_t protocol witness for Decodable.init(from:) in conformance SearchCallHistoryModel@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SearchCallHistoryModel.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance SearchCallHistoryModel(_QWORD *a1)
{
  return SearchCallHistoryModel.encode(to:)(a1);
}

uint64_t sub_243ACE1D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  result = CodableAceObject.wrappedValue.getter();
  *a1 = result;
  return result;
}

char *initializeBufferWithCopyOfBuffer for SearchCallHistoryModel(char *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = (char *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *((_QWORD *)a1 + 1) = v7;
    v8 = a3[5];
    v9 = &a1[v8];
    v10 = (char *)a2 + v8;
    swift_bridgeObjectRetain();
    v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = &a1[v13];
    v15 = (char *)a2 + v13;
    v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    v12(&a1[a3[7]], (char *)a2 + a3[7], v11);
    v12(&a1[a3[8]], (char *)a2 + a3[8], v11);
    v17 = a3[9];
    v18 = &a1[v17];
    v19 = (char *)a2 + v17;
    v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    v21 = a3[10];
    v22 = &a1[v21];
    v23 = (char *)a2 + v21;
    v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
  }
  return a1;
}

uint64_t destroy for SearchCallHistoryModel(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v7 = a1 + a2[6];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v6(a1 + a2[7], v5);
  v6(a1 + a2[8], v5);
  v9 = a1 + a2[9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[10];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
}

char *initializeWithCopy for SearchCallHistoryModel(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  v7 = a3[5];
  v8 = &a1[v7];
  v9 = &a2[v7];
  swift_bridgeObjectRetain();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  v11(&a1[a3[7]], &a2[a3[7]], v10);
  v11(&a1[a3[8]], &a2[a3[8]], v10);
  v16 = a3[9];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  v20 = a3[10];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  return a1;
}

char *assignWithCopy for SearchCallHistoryModel(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v11 = a3[6];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v10(&a1[a3[7]], &a2[a3[7]], v9);
  v10(&a1[a3[8]], &a2[a3[8]], v9);
  v15 = a3[9];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[10];
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

char *initializeWithTake for SearchCallHistoryModel(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = a3[6];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v10(&a1[a3[7]], &a2[a3[7]], v9);
  v10(&a1[a3[8]], &a2[a3[8]], v9);
  v15 = a3[9];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[10];
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

char *assignWithTake for SearchCallHistoryModel(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v11(&a1[a3[7]], &a2[a3[7]], v10);
  v11(&a1[a3[8]], &a2[a3[8]], v10);
  v16 = a3[9];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, v18, v19);
  v20 = a3[10];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 40))(v21, v22, v23);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchCallHistoryModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_243ACE980(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[5];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[6];
      }
      else
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
        {
          v10 = v13;
          v11 = a3[9];
        }
        else
        {
          v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
          v9 = *(_QWORD *)(v10 - 8);
          v11 = a3[10];
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for SearchCallHistoryModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_243ACEA84(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[5];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[6];
      }
      else
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == a3)
        {
          v10 = v13;
          v11 = a4[9];
        }
        else
        {
          v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
          v9 = *(_QWORD *)(v10 - 8);
          v11 = a4[10];
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void type metadata completion function for SearchCallHistoryModel()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  _s10SnippetKit8LoggableVySSGMaTm_0(319, (unint64_t *)&lazy cache variable for type metadata for Loggable<String>);
  if (v0 <= 0x3F)
  {
    type metadata accessor for Loggable<[SingleCallRecordModel]>();
    if (v1 <= 0x3F)
    {
      _s10SnippetKit8LoggableVySSGMaTm_0(319, &lazy cache variable for type metadata for Loggable<Bool>);
      if (v2 <= 0x3F)
      {
        type metadata accessor for CodableAceObject<SABaseCommand>();
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

void type metadata accessor for Loggable<[SingleCallRecordModel]>()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for Loggable<[SingleCallRecordModel]>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [SingleCallRecordModel]);
    v0 = type metadata accessor for Loggable();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
  }
}

void _s10SnippetKit8LoggableVySSGMaTm_0(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = type metadata accessor for Loggable();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t getEnumTagSinglePayload for SearchCallHistoryModel.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchCallHistoryModel.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_243ACEDDC + 4 * byte_243B31FFC[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_243ACEE10 + 4 * byte_243B31FF7[v4]))();
}

uint64_t sub_243ACEE10(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_243ACEE18(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x243ACEE20);
  return result;
}

uint64_t sub_243ACEE2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x243ACEE34);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_243ACEE38(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_243ACEE40(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for SearchCallHistoryModel.CodingKeys()
{
  return &unk_251449080;
}

uint64_t specialized SearchCallHistoryModel.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x65736E6F70736572 && a2 == 0xEE00644977656956;
  if (v3 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6449707061 && a2 == 0xE500000000000000
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F6365526C6C6163 && a2 == 0xEB00000000736472
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x5473746E65636572 && a2 == 0xEB00000000747865
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E6F68506E65706FLL && a2 == 0xED00007478655465
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000243B373D0
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6E6F68506E65706FLL && a2 == 0xEF6E6F6974634165)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t ContactConfirmationModel.responseViewId.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ContactConfirmationModel.responseViewId.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ContactConfirmationModel.responseViewId.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t ContactConfirmationModel.appId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ContactConfirmationModel.appId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ContactConfirmationModel.appId.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t ContactConfirmationModel.yesNoConfirmationModel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ContactConfirmationModel();
  return outlined init with copy of SearchCallHistoryBinaryButtonModel(v1 + *(int *)(v3 + 24), a1, (uint64_t (*)(_QWORD))type metadata accessor for YesNoConfirmationModel);
}

uint64_t type metadata accessor for ContactConfirmationModel()
{
  uint64_t result;

  result = type metadata singleton initialization cache for ContactConfirmationModel;
  if (!type metadata singleton initialization cache for ContactConfirmationModel)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t ContactConfirmationModel.yesNoConfirmationModel.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for ContactConfirmationModel() + 24);
  return outlined assign with take of YesNoConfirmationModel(a1, v3);
}

uint64_t outlined assign with take of YesNoConfirmationModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for YesNoConfirmationModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*ContactConfirmationModel.yesNoConfirmationModel.modify())()
{
  type metadata accessor for ContactConfirmationModel();
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t ContactConfirmationModel.phoneContactHeader.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for ContactConfirmationModel() + 28);
  return outlined init with copy of PhoneContactHeader?(v3, a1);
}

uint64_t outlined init with copy of PhoneContactHeader?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneContactHeader?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t ContactConfirmationModel.phoneContactHeader.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for ContactConfirmationModel() + 28);
  return outlined assign with take of PhoneContactHeader?(a1, v3);
}

uint64_t outlined assign with take of PhoneContactHeader?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneContactHeader?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*ContactConfirmationModel.phoneContactHeader.modify())()
{
  type metadata accessor for ContactConfirmationModel();
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t ContactConfirmationModel.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ContactConfirmationModel() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ContactConfirmationModel.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for ContactConfirmationModel() + 32));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ContactConfirmationModel.title.modify())()
{
  type metadata accessor for ContactConfirmationModel();
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t ContactConfirmationModel.CodingKeys.stringValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_243ACF638 + 4 * byte_243B32200[a1]))(0xD000000000000016, 0x8000000243B373F0);
}

uint64_t sub_243ACF638()
{
  return 0x65736E6F70736572;
}

uint64_t sub_243ACF65C()
{
  return 0x6449707061;
}

unint64_t sub_243ACF670()
{
  return 0xD000000000000012;
}

uint64_t sub_243ACF68C()
{
  return 0x656C746974;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance ContactConfirmationModel.CodingKeys()
{
  unsigned __int8 *v0;

  return ContactConfirmationModel.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance ContactConfirmationModel.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = specialized ContactConfirmationModel.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance ContactConfirmationModel.CodingKeys()
{
  lazy protocol witness table accessor for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ContactConfirmationModel.CodingKeys()
{
  lazy protocol witness table accessor for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys();
  return CodingKey.debugDescription.getter();
}

uint64_t ContactConfirmationModel.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  __int128 *v10;
  char v11;
  __int128 v12;
  __int128 v13;
  _BYTE v15[16];
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  char v20;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<ContactConfirmationModel.CodingKeys>);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v16) = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v2)
  {
    LOBYTE(v16) = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    v9 = type metadata accessor for ContactConfirmationModel();
    LOBYTE(v16) = 2;
    type metadata accessor for YesNoConfirmationModel();
    lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type YesNoConfirmationModel and conformance YesNoConfirmationModel, (uint64_t (*)(uint64_t))type metadata accessor for YesNoConfirmationModel, (uint64_t)&protocol conformance descriptor for YesNoConfirmationModel);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v10 = (__int128 *)(v3 + *(int *)(v9 + 28));
    v11 = *((_BYTE *)v10 + 64);
    v12 = v10[1];
    v16 = *v10;
    v17 = v12;
    v13 = v10[3];
    v18 = v10[2];
    v19 = v13;
    v20 = v11;
    v15[15] = 3;
    lazy protocol witness table accessor for type PhoneContactHeader and conformance PhoneContactHeader();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v16) = 4;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t lazy protocol witness table accessor for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for ContactConfirmationModel.CodingKeys, &unk_2514491F8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for ContactConfirmationModel.CodingKeys, &unk_2514491F8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for ContactConfirmationModel.CodingKeys, &unk_2514491F8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for ContactConfirmationModel.CodingKeys, &unk_2514491F8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneContactHeader and conformance PhoneContactHeader()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneContactHeader and conformance PhoneContactHeader;
  if (!lazy protocol witness table cache variable for type PhoneContactHeader and conformance PhoneContactHeader)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneContactHeader, &type metadata for PhoneContactHeader);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneContactHeader and conformance PhoneContactHeader);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneContactHeader and conformance PhoneContactHeader;
  if (!lazy protocol witness table cache variable for type PhoneContactHeader and conformance PhoneContactHeader)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneContactHeader, &type metadata for PhoneContactHeader);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneContactHeader and conformance PhoneContactHeader);
  }
  return result;
}

uint64_t ContactConfirmationModel.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  char *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  char v40;
  char v41;

  v29 = a2;
  v3 = type metadata accessor for YesNoConfirmationModel();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<ContactConfirmationModel.CodingKeys>);
  v6 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ContactConfirmationModel();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (uint64_t *)((char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v12 = 0xD000000000000013;
  v12[1] = 0x8000000243B37220;
  v12[2] = 0;
  v12[3] = 0;
  v13 = (char *)v12 + *(int *)(v10 + 28);
  *((_OWORD *)v13 + 2) = 0u;
  *((_OWORD *)v13 + 3) = 0u;
  *(_OWORD *)v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  v13[64] = 0;
  v32 = v10;
  v33 = a1;
  v14 = (uint64_t *)((char *)v12 + *(int *)(v10 + 32));
  *v14 = 0;
  v14[1] = 0;
  v34 = v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys();
  v31 = v8;
  v15 = v35;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v15)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    outlined consume of PhoneContactHeader?(*(_QWORD *)v13, *((_QWORD *)v13 + 1));
    return swift_bridgeObjectRelease();
  }
  else
  {
    v16 = v6;
    LOBYTE(v36) = 0;
    *v12 = KeyedDecodingContainer.decode(_:forKey:)();
    v12[1] = v17;
    LOBYTE(v36) = 1;
    v12[2] = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    v12[3] = v18;
    LOBYTE(v36) = 2;
    lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type YesNoConfirmationModel and conformance YesNoConfirmationModel, (uint64_t (*)(uint64_t))type metadata accessor for YesNoConfirmationModel, (uint64_t)&protocol conformance descriptor for YesNoConfirmationModel);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    outlined init with take of YesNoConfirmationModel((uint64_t)v5, (uint64_t)v12 + *(int *)(v32 + 24));
    v41 = 3;
    lazy protocol witness table accessor for type PhoneContactHeader and conformance PhoneContactHeader();
    v19 = v31;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    v20 = v40;
    v21 = v37;
    *(_OWORD *)v13 = v36;
    *((_OWORD *)v13 + 1) = v21;
    v22 = v39;
    *((_OWORD *)v13 + 2) = v38;
    *((_OWORD *)v13 + 3) = v22;
    v13[64] = v20;
    LOBYTE(v36) = 4;
    v23 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    v25 = v24;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v30);
    v26 = v34;
    swift_bridgeObjectRelease();
    *v26 = v23;
    v26[1] = v25;
    outlined init with copy of SearchCallHistoryBinaryButtonModel((uint64_t)v12, v29, (uint64_t (*)(_QWORD))type metadata accessor for ContactConfirmationModel);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    return outlined destroy of SingleResultCallHistoryModel((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ContactConfirmationModel);
  }
}

uint64_t outlined consume of PhoneContactHeader?(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t outlined init with take of YesNoConfirmationModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for YesNoConfirmationModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t default argument 0 of ContactConfirmationModel.init(responseViewId:appId:yesNoConfirmationModel:phoneContactHeader:title:)()
{
  return 0xD000000000000013;
}

uint64_t ContactConfirmationModel.init(responseViewId:appId:yesNoConfirmationModel:phoneContactHeader:title:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  int *v14;
  uint64_t result;
  _QWORD *v16;

  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  v14 = (int *)type metadata accessor for ContactConfirmationModel();
  outlined init with take of YesNoConfirmationModel(a5, (uint64_t)a9 + v14[6]);
  result = outlined init with take of PhoneContactHeader?(a6, (uint64_t)a9 + v14[7]);
  v16 = (_QWORD *)((char *)a9 + v14[8]);
  *v16 = a7;
  v16[1] = a8;
  return result;
}

uint64_t outlined init with take of PhoneContactHeader?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneContactHeader?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t instantiation function for generic protocol witness table for ContactConfirmationModel(uint64_t a1)
{
  uint64_t result;

  result = lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type ContactConfirmationModel and conformance ContactConfirmationModel, (uint64_t (*)(uint64_t))type metadata accessor for ContactConfirmationModel, (uint64_t)&protocol conformance descriptor for ContactConfirmationModel);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t base witness table accessor for Decodable in ContactConfirmationModel()
{
  return lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type ContactConfirmationModel and conformance ContactConfirmationModel, (uint64_t (*)(uint64_t))type metadata accessor for ContactConfirmationModel, (uint64_t)&protocol conformance descriptor for ContactConfirmationModel);
}

uint64_t base witness table accessor for Encodable in ContactConfirmationModel()
{
  return lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type ContactConfirmationModel and conformance ContactConfirmationModel, (uint64_t (*)(uint64_t))type metadata accessor for ContactConfirmationModel, (uint64_t)&protocol conformance descriptor for ContactConfirmationModel);
}

uint64_t protocol witness for Decodable.init(from:) in conformance ContactConfirmationModel@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ContactConfirmationModel.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance ContactConfirmationModel(_QWORD *a1)
{
  return ContactConfirmationModel.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for ContactConfirmationModel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v30 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = *(int *)(a3 + 24);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    v38 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    v38(v10, v11, v12);
    v13 = (int *)type metadata accessor for YesNoConfirmationModel();
    v14 = v13[5];
    v15 = &v10[v14];
    v16 = &v11[v14];
    v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    v39 = a3;
    v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
    v18(v15, v16, v17);
    v38(&v10[v13[6]], &v11[v13[6]], v12);
    v18(&v10[v13[7]], &v11[v13[7]], v17);
    v19 = v13[8];
    v20 = &v10[v19];
    v21 = &v11[v19];
    v22 = *((_QWORD *)v21 + 1);
    *(_QWORD *)v20 = *(_QWORD *)v21;
    *((_QWORD *)v20 + 1) = v22;
    v23 = *(int *)(v39 + 28);
    v24 = (char *)a1 + v23;
    v25 = (char *)a2 + v23;
    v26 = *(uint64_t *)((char *)a2 + v23 + 8);
    swift_bridgeObjectRetain();
    if (v26)
    {
      *(_QWORD *)v24 = *(_QWORD *)v25;
      *((_QWORD *)v24 + 1) = v26;
      v27 = *((_QWORD *)v25 + 3);
      *((_QWORD *)v24 + 2) = *((_QWORD *)v25 + 2);
      *((_QWORD *)v24 + 3) = v27;
      v28 = *((_QWORD *)v25 + 5);
      *((_QWORD *)v24 + 4) = *((_QWORD *)v25 + 4);
      *((_QWORD *)v24 + 5) = v28;
      v29 = *((_QWORD *)v25 + 7);
      *((_QWORD *)v24 + 6) = *((_QWORD *)v25 + 6);
      *((_QWORD *)v24 + 7) = v29;
      v24[64] = v25[64];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v31 = *((_OWORD *)v25 + 3);
      *((_OWORD *)v24 + 2) = *((_OWORD *)v25 + 2);
      *((_OWORD *)v24 + 3) = v31;
      v24[64] = v25[64];
      v32 = *((_OWORD *)v25 + 1);
      *(_OWORD *)v24 = *(_OWORD *)v25;
      *((_OWORD *)v24 + 1) = v32;
    }
    v33 = *(int *)(v39 + 32);
    v34 = (uint64_t *)((char *)a1 + v33);
    v35 = (uint64_t *)((char *)a2 + v33);
    v36 = v35[1];
    *v34 = *v35;
    v34[1] = v36;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ContactConfirmationModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  int *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v7 = (int *)type metadata accessor for YesNoConfirmationModel();
  v8 = v4 + v7[5];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
  v10(v8, v9);
  v6(v4 + v7[6], v5);
  v10(v4 + v7[7], v9);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + *(int *)(a2 + 28) + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ContactConfirmationModel(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  void (*v35)(char *, char *, uint64_t);

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v35 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v35(v8, v9, v10);
  v11 = (int *)type metadata accessor for YesNoConfirmationModel();
  v12 = v11[5];
  v13 = &v8[v12];
  v14 = &v9[v12];
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  v16(v13, v14, v15);
  v35(&v8[v11[6]], &v9[v11[6]], v10);
  v16(&v8[v11[7]], &v9[v11[7]], v15);
  v17 = v11[8];
  v18 = &v8[v17];
  v19 = &v9[v17];
  v20 = *((_QWORD *)v19 + 1);
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *((_QWORD *)v18 + 1) = v20;
  v21 = a3[7];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = *(_QWORD *)((char *)a2 + v21 + 8);
  swift_bridgeObjectRetain();
  if (v24)
  {
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *((_QWORD *)v22 + 1) = v24;
    v25 = *((_QWORD *)v23 + 3);
    *((_QWORD *)v22 + 2) = *((_QWORD *)v23 + 2);
    *((_QWORD *)v22 + 3) = v25;
    v26 = *((_QWORD *)v23 + 5);
    *((_QWORD *)v22 + 4) = *((_QWORD *)v23 + 4);
    *((_QWORD *)v22 + 5) = v26;
    v27 = *((_QWORD *)v23 + 7);
    *((_QWORD *)v22 + 6) = *((_QWORD *)v23 + 6);
    *((_QWORD *)v22 + 7) = v27;
    v22[64] = v23[64];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v28 = *((_OWORD *)v23 + 3);
    *((_OWORD *)v22 + 2) = *((_OWORD *)v23 + 2);
    *((_OWORD *)v22 + 3) = v28;
    v22[64] = v23[64];
    v29 = *((_OWORD *)v23 + 1);
    *(_OWORD *)v22 = *(_OWORD *)v23;
    *((_OWORD *)v22 + 1) = v29;
  }
  v30 = a3[8];
  v31 = (_QWORD *)((char *)a1 + v30);
  v32 = (_QWORD *)((char *)a2 + v30);
  v33 = v32[1];
  *v31 = *v32;
  v31[1] = v33;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ContactConfirmationModel(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  void (*v34)(char *, char *, uint64_t);

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v34 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v34(v7, v8, v9);
  v10 = (int *)type metadata accessor for YesNoConfirmationModel();
  v11 = v10[5];
  v12 = &v7[v11];
  v13 = &v8[v11];
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24);
  v15(v12, v13, v14);
  v34(&v7[v10[6]], &v8[v10[6]], v9);
  v15(&v7[v10[7]], &v8[v10[7]], v14);
  v16 = v10[8];
  v17 = &v7[v16];
  v18 = &v8[v16];
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = a3[7];
  v20 = (uint64_t)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = *(_QWORD *)((char *)a1 + v19 + 8);
  v23 = *(_QWORD *)((char *)a2 + v19 + 8);
  if (v22)
  {
    if (v23)
    {
      *(_QWORD *)v20 = *(_QWORD *)v21;
      *(_QWORD *)(v20 + 8) = *((_QWORD *)v21 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v20 + 16) = *((_QWORD *)v21 + 2);
      *(_QWORD *)(v20 + 24) = *((_QWORD *)v21 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v20 + 32) = *((_QWORD *)v21 + 4);
      *(_QWORD *)(v20 + 40) = *((_QWORD *)v21 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v20 + 48) = *((_QWORD *)v21 + 6);
      *(_QWORD *)(v20 + 56) = *((_QWORD *)v21 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v20 + 64) = v21[64];
    }
    else
    {
      outlined destroy of PhoneContactHeader(v20);
      *(_OWORD *)v20 = *(_OWORD *)v21;
      v25 = *((_OWORD *)v21 + 2);
      v24 = *((_OWORD *)v21 + 3);
      v26 = *((_OWORD *)v21 + 1);
      *(_BYTE *)(v20 + 64) = v21[64];
      *(_OWORD *)(v20 + 32) = v25;
      *(_OWORD *)(v20 + 48) = v24;
      *(_OWORD *)(v20 + 16) = v26;
    }
  }
  else if (v23)
  {
    *(_QWORD *)v20 = *(_QWORD *)v21;
    *(_QWORD *)(v20 + 8) = *((_QWORD *)v21 + 1);
    *(_QWORD *)(v20 + 16) = *((_QWORD *)v21 + 2);
    *(_QWORD *)(v20 + 24) = *((_QWORD *)v21 + 3);
    *(_QWORD *)(v20 + 32) = *((_QWORD *)v21 + 4);
    *(_QWORD *)(v20 + 40) = *((_QWORD *)v21 + 5);
    *(_QWORD *)(v20 + 48) = *((_QWORD *)v21 + 6);
    *(_QWORD *)(v20 + 56) = *((_QWORD *)v21 + 7);
    *(_BYTE *)(v20 + 64) = v21[64];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v20 = *(_OWORD *)v21;
    v27 = *((_OWORD *)v21 + 1);
    v28 = *((_OWORD *)v21 + 2);
    v29 = *((_OWORD *)v21 + 3);
    *(_BYTE *)(v20 + 64) = v21[64];
    *(_OWORD *)(v20 + 32) = v28;
    *(_OWORD *)(v20 + 48) = v29;
    *(_OWORD *)(v20 + 16) = v27;
  }
  v30 = a3[8];
  v31 = (_QWORD *)((char *)a1 + v30);
  v32 = (_QWORD *)((char *)a2 + v30);
  *v31 = *v32;
  v31[1] = v32[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t outlined destroy of PhoneContactHeader(uint64_t a1)
{
  destroy for PhoneContactHeader();
  return a1;
}

_OWORD *initializeWithTake for ContactConfirmationModel(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  __int128 v20;
  __int128 v21;
  void (*v23)(char *, char *, uint64_t);

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v23(v7, v8, v9);
  v10 = (int *)type metadata accessor for YesNoConfirmationModel();
  v11 = v10[5];
  v12 = &v7[v11];
  v13 = &v8[v11];
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32);
  v15(v12, v13, v14);
  v23(&v7[v10[6]], &v8[v10[6]], v9);
  v15(&v7[v10[7]], &v8[v10[7]], v14);
  *(_OWORD *)&v7[v10[8]] = *(_OWORD *)&v8[v10[8]];
  v16 = a3[7];
  v17 = a3[8];
  v18 = (char *)a1 + v16;
  v19 = (char *)a2 + v16;
  v18[64] = v19[64];
  v20 = *((_OWORD *)v19 + 3);
  *((_OWORD *)v18 + 2) = *((_OWORD *)v19 + 2);
  *((_OWORD *)v18 + 3) = v20;
  v21 = *((_OWORD *)v19 + 1);
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *((_OWORD *)v18 + 1) = v21;
  *(_OWORD *)((char *)a1 + v17) = *(_OWORD *)((char *)a2 + v17);
  return a1;
}

_QWORD *assignWithTake for ContactConfirmationModel(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v38)(char *, char *, uint64_t);

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v38 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40);
  v38(v9, v10, v11);
  v12 = (int *)type metadata accessor for YesNoConfirmationModel();
  v13 = v12[5];
  v14 = &v9[v13];
  v15 = &v10[v13];
  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 40);
  v17(v14, v15, v16);
  v38(&v9[v12[6]], &v10[v12[6]], v11);
  v17(&v9[v12[7]], &v10[v12[7]], v16);
  v18 = v12[8];
  v19 = &v9[v18];
  v20 = &v10[v18];
  v22 = *(_QWORD *)v20;
  v21 = *((_QWORD *)v20 + 1);
  *(_QWORD *)v19 = v22;
  *((_QWORD *)v19 + 1) = v21;
  swift_bridgeObjectRelease();
  v23 = a3[7];
  v24 = (uint64_t)a1 + v23;
  v25 = (char *)a2 + v23;
  if (!*(_QWORD *)((char *)a1 + v23 + 8))
    goto LABEL_5;
  v26 = *((_QWORD *)v25 + 1);
  if (!v26)
  {
    outlined destroy of PhoneContactHeader(v24);
LABEL_5:
    v30 = *((_OWORD *)v25 + 3);
    *(_OWORD *)(v24 + 32) = *((_OWORD *)v25 + 2);
    *(_OWORD *)(v24 + 48) = v30;
    *(_BYTE *)(v24 + 64) = v25[64];
    v31 = *((_OWORD *)v25 + 1);
    *(_OWORD *)v24 = *(_OWORD *)v25;
    *(_OWORD *)(v24 + 16) = v31;
    goto LABEL_6;
  }
  *(_QWORD *)v24 = *(_QWORD *)v25;
  *(_QWORD *)(v24 + 8) = v26;
  swift_bridgeObjectRelease();
  v27 = *((_QWORD *)v25 + 3);
  *(_QWORD *)(v24 + 16) = *((_QWORD *)v25 + 2);
  *(_QWORD *)(v24 + 24) = v27;
  swift_bridgeObjectRelease();
  v28 = *((_QWORD *)v25 + 5);
  *(_QWORD *)(v24 + 32) = *((_QWORD *)v25 + 4);
  *(_QWORD *)(v24 + 40) = v28;
  swift_bridgeObjectRelease();
  v29 = *((_QWORD *)v25 + 7);
  *(_QWORD *)(v24 + 48) = *((_QWORD *)v25 + 6);
  *(_QWORD *)(v24 + 56) = v29;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v24 + 64) = v25[64];
LABEL_6:
  v32 = a3[8];
  v33 = (_QWORD *)((char *)a1 + v32);
  v34 = (_QWORD *)((char *)a2 + v32);
  v36 = *v34;
  v35 = v34[1];
  *v33 = v36;
  v33[1] = v35;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ContactConfirmationModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_243AD0ACC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for YesNoConfirmationModel();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ContactConfirmationModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_243AD0B54(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for YesNoConfirmationModel();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata completion function for ContactConfirmationModel()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for YesNoConfirmationModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ContactConfirmationModel.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_243AD0C9C + 4 * byte_243B3220A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_243AD0CD0 + 4 * byte_243B32205[v4]))();
}

uint64_t sub_243AD0CD0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_243AD0CD8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x243AD0CE0);
  return result;
}

uint64_t sub_243AD0CEC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x243AD0CF4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_243AD0CF8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_243AD0D00(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for ContactConfirmationModel.CodingKeys()
{
  return &unk_2514491F8;
}

uint64_t specialized ContactConfirmationModel.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x65736E6F70736572 && a2 == 0xEE00644977656956;
  if (v3 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6449707061 && a2 == 0xE500000000000000
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000243B373F0
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000243B37410
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t SingleResultCallHistoryView.singleResultCallHistoryModel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for SingleResultCallHistoryView();
  return outlined init with copy of SearchCallHistoryBinaryButtonModel(v1 + *(int *)(v3 + 24), a1, (uint64_t (*)(_QWORD))type metadata accessor for SingleResultCallHistoryModel);
}

uint64_t type metadata accessor for SingleResultCallHistoryView()
{
  uint64_t result;

  result = type metadata singleton initialization cache for SingleResultCallHistoryView;
  if (!type metadata singleton initialization cache for SingleResultCallHistoryView)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t SingleResultCallHistoryView.init(singleResultCallHistoryModel:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  type metadata accessor for Context();
  lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
  *a2 = EnvironmentObject.init()();
  a2[1] = v4;
  v5 = type metadata accessor for SingleResultCallHistoryView();
  ActionHandler.init()();
  return outlined init with take of SingleResultCallHistoryModel(a1, (uint64_t)a2 + *(int *)(v5 + 24), (uint64_t (*)(_QWORD))type metadata accessor for SingleResultCallHistoryModel);
}

uint64_t SingleResultCallHistoryView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v2 = v1;
  v4 = type metadata accessor for SingleResultCallHistoryView();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ComponentStack<TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)>>);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v2, (uint64_t)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for SingleResultCallHistoryView);
  v11 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v12 = swift_allocObject();
  outlined init with take of SingleResultCallHistoryModel((uint64_t)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11, (uint64_t (*)(_QWORD))type metadata accessor for SingleResultCallHistoryView);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)>);
  v14 = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)>, MEMORY[0x24BDF5420]);
  MEMORY[0x24950072C](partial apply for closure #1 in SingleResultCallHistoryView.body.getter, v12, v13, v14);
  LOBYTE(v12) = static Edge.Set.all.getter();
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(a1, v10, v7);
  *(_BYTE *)(a1
           + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)>>, _BackgroundStyleModifier<BackgroundStyle>>)
                    + 36)) = v12;
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t closure #1 in SingleResultCallHistoryView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;
  __int128 v81;
  __int128 v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;

  v67 = a2;
  v66 = type metadata accessor for SearchCallHistoryBinaryButtonView();
  v65 = *(_QWORD *)(v66 - 8);
  MEMORY[0x24BDAC7A8](v66);
  v61 = (char *)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
  MEMORY[0x24BDAC7A8](v4);
  v77 = (uint64_t)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = type metadata accessor for SearchCallHistoryBinaryButtonModel();
  v75 = *(_QWORD *)(v76 - 8);
  MEMORY[0x24BDAC7A8](v76);
  v60 = (uint64_t)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonView?);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v64 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v63 = (uint64_t)&v60 - v10;
  v72 = type metadata accessor for SeparatorStyle();
  v70 = *(_QWORD *)(v72 - 8);
  MEMORY[0x24BDAC7A8](v72);
  v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for SummaryItemStandardView();
  v69 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.separators(_:isOverride:)>>.0);
  v71 = *(_QWORD *)(v73 - 8);
  MEMORY[0x24BDAC7A8](v73);
  v17 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>);
  v18 = MEMORY[0x24BDAC7A8](v68);
  v62 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v60 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v74 = (uint64_t)&v60 - v23;
  v24 = (_QWORD *)(a1 + *(int *)(type metadata accessor for SingleResultCallHistoryView() + 24));
  v26 = v24[2];
  v25 = v24[3];
  v94 = MEMORY[0x24BEE0D00];
  v95 = MEMORY[0x24BEAE5C0];
  v92 = v26;
  v93 = v25;
  v27 = v24[4];
  v28 = v24[5];
  v90 = MEMORY[0x24BEE0D00];
  v91 = MEMORY[0x24BEAE5C0];
  v88 = v27;
  v89 = v28;
  v29 = v24[6];
  v30 = v24[7];
  v86 = MEMORY[0x24BEE0D00];
  v87 = MEMORY[0x24BEAE5C0];
  v84 = v29;
  v85 = v30;
  v83 = 0;
  v82 = 0u;
  v81 = 0u;
  v31 = v24[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v32 = SingleResultCallHistoryView.getAvatarView(contactIds:)(v31);
  if (v32)
  {
    v80 = MEMORY[0x24BEAD940];
    *((_QWORD *)&v79 + 1) = MEMORY[0x24BDF4788];
    *(_QWORD *)&v78 = v32;
  }
  else
  {
    v80 = 0;
    v79 = 0u;
    v78 = 0u;
  }
  SummaryItemStandardView.init(text1:text2:text3:text4:thumbnail:)();
  v33 = v70;
  v34 = v72;
  (*(void (**)(char *, _QWORD, uint64_t))(v70 + 104))(v12, *MEMORY[0x24BEAB518], v72);
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type SummaryItemStandardView and conformance SummaryItemStandardView, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE230], MEMORY[0x24BEAE210]);
  View.separators(_:isOverride:)();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v34);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v15, v13);
  LOBYTE(v34) = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  v36 = v35;
  v38 = v37;
  v40 = v39;
  v42 = v41;
  v43 = v71;
  v44 = v73;
  (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v22, v17, v73);
  v45 = &v22[*(int *)(v68 + 36)];
  *v45 = v34;
  *((_QWORD *)v45 + 1) = v36;
  *((_QWORD *)v45 + 2) = v38;
  *((_QWORD *)v45 + 3) = v40;
  *((_QWORD *)v45 + 4) = v42;
  v45[40] = 0;
  (*(void (**)(char *, uint64_t))(v43 + 8))(v17, v44);
  v46 = v74;
  outlined init with take of ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>((uint64_t)v22, v74);
  v47 = type metadata accessor for SingleResultCallHistoryModel();
  v48 = v77;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?((uint64_t)v24 + *(int *)(v47 + 36), v77, &demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v48, 1, v76) == 1)
  {
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v48, &demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
    v49 = 1;
    v50 = v67;
    v51 = v66;
    v52 = v65;
    v53 = (uint64_t)v64;
    v54 = v63;
  }
  else
  {
    v55 = v60;
    outlined init with take of SingleResultCallHistoryModel(v48, v60, (uint64_t (*)(_QWORD))type metadata accessor for SearchCallHistoryBinaryButtonModel);
    v51 = v66;
    v56 = (uint64_t)v61;
    outlined init with copy of SearchCallHistoryBinaryButtonModel(v55, (uint64_t)&v61[*(int *)(v66 + 20)], (uint64_t (*)(_QWORD))type metadata accessor for SearchCallHistoryBinaryButtonModel);
    ActionHandler.init()();
    outlined destroy of SearchCallHistoryBinaryButtonModel(v55);
    v54 = v63;
    outlined init with take of SingleResultCallHistoryModel(v56, v63, (uint64_t (*)(_QWORD))type metadata accessor for SearchCallHistoryBinaryButtonView);
    v49 = 0;
    v50 = v67;
    v52 = v65;
    v53 = (uint64_t)v64;
  }
  v57 = (uint64_t)v62;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 56))(v54, v49, 1, v51);
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v46, v57, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>);
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v54, v53, &demangling cache variable for type metadata for SearchCallHistoryBinaryButtonView?);
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v57, v50, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?));
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v53, v50 + *(int *)(v58 + 48), &demangling cache variable for type metadata for SearchCallHistoryBinaryButtonView?);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v54, &demangling cache variable for type metadata for SearchCallHistoryBinaryButtonView?);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v46, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v53, &demangling cache variable for type metadata for SearchCallHistoryBinaryButtonView?);
  return outlined destroy of SearchCallHistoryBinaryButtonModel?(v57, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>);
}

uint64_t associated type witness table accessor for View.Body : View in SingleResultCallHistoryView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t SingleResultCallHistoryView.getAvatarView(contactIds:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v2 = type metadata accessor for ImageElement.ImageStyle();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ImageElement();
  MEMORY[0x24BDAC7A8](v6);
  v7 = type metadata accessor for ImageElementView();
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
    return 0;
  v11 = *MEMORY[0x24BEAAAD8];
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  v20 = v8;
  v12(v5, v11, v2);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<_ProtoIdiom>);
  v19 = a1;
  v13 = type metadata accessor for _ProtoIdiom();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_243B32430;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v14 + 104))(v16 + v15, *MEMORY[0x24BEAA998], v13);
  specialized Set.init(_nonEmptyArrayLiteral:)(v16);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  static ImageElement.contactImageAvatar(contactIds:imageStyle:idioms:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  ImageElementView.init(_:)();
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type ImageElementView and conformance ImageElementView, (uint64_t (*)(uint64_t))MEMORY[0x24BEADD10], MEMORY[0x24BEADD00]);
  v17 = View.eraseToAnyView()();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v7);
  return v17;
}

uint64_t protocol witness for static View._viewListCount(inputs:) in conformance SingleResultCallHistoryView()
{
  return static View._viewListCount(inputs:)();
}

uint64_t protocol witness for View.body.getter in conformance SingleResultCallHistoryView@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = v2;
  v5 = *(_QWORD *)(a1 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ComponentStack<TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)>>);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v3, (uint64_t)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for SingleResultCallHistoryView);
  v11 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v12 = swift_allocObject();
  outlined init with take of SingleResultCallHistoryModel((uint64_t)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11, (uint64_t (*)(_QWORD))type metadata accessor for SingleResultCallHistoryView);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)>);
  v14 = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)>, MEMORY[0x24BDF5420]);
  MEMORY[0x24950072C](partial apply for closure #1 in SingleResultCallHistoryView.body.getter, v12, v13, v14);
  LOBYTE(v12) = static Edge.Set.all.getter();
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(a2, v10, v7);
  *(_BYTE *)(a2
           + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)>>, _BackgroundStyleModifier<BackgroundStyle>>)
                    + 36)) = v12;
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

char *initializeBufferWithCopyOfBuffer for SingleResultCallHistoryView(char *a1, char **a2, uint64_t a3)
{
  int v3;
  char *v4;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  int *v24;
  unsigned int (*v25)(char *, uint64_t, int *);
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, _QWORD, uint64_t, int *);
  uint64_t v40;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v7 = a1;
    *((_QWORD *)a1 + 1) = a2[1];
    v8 = *(int *)(a3 + 20);
    v9 = &a1[v8];
    v10 = (uint64_t)a2 + v8;
    v11 = type metadata accessor for ActionHandler();
    v12 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v13 = v4;
    v12(v9, v10, v11);
    v14 = *(int *)(a3 + 24);
    v15 = &v7[v14];
    v16 = (uint64_t)a2 + v14;
    v17 = *(uint64_t *)((char *)a2 + v14 + 8);
    *(_QWORD *)v15 = *(char **)((char *)a2 + v14);
    *((_QWORD *)v15 + 1) = v17;
    v18 = *(uint64_t *)((char *)a2 + v14 + 24);
    *((_QWORD *)v15 + 2) = *(char **)((char *)a2 + v14 + 16);
    *((_QWORD *)v15 + 3) = v18;
    v19 = *(uint64_t *)((char *)a2 + v14 + 40);
    *((_QWORD *)v15 + 4) = *(char **)((char *)a2 + v14 + 32);
    *((_QWORD *)v15 + 5) = v19;
    v20 = *(uint64_t *)((char *)a2 + v14 + 56);
    *((_QWORD *)v15 + 6) = *(char **)((char *)a2 + v14 + 48);
    *((_QWORD *)v15 + 7) = v20;
    *((_QWORD *)v15 + 8) = *(char **)((char *)a2 + v14 + 64);
    v21 = *(int *)(type metadata accessor for SingleResultCallHistoryModel() + 36);
    v22 = &v15[v21];
    v23 = (char *)(v16 + v21);
    v24 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
    v40 = *((_QWORD *)v24 - 1);
    v25 = *(unsigned int (**)(char *, uint64_t, int *))(v40 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v25(v23, 1, v24))
    {
      v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
      v28(v22, v23, v27);
      v29 = v24[5];
      v30 = &v22[v29];
      v31 = &v23[v29];
      v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
      v33 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16);
      v33(v30, v31, v32);
      v28(&v22[v24[6]], &v23[v24[6]], v27);
      v33(&v22[v24[7]], &v23[v24[7]], v32);
      v34 = v24[8];
      v35 = &v22[v34];
      v36 = &v23[v34];
      v37 = *((_QWORD *)v36 + 1);
      *(_QWORD *)v35 = *(_QWORD *)v36;
      *((_QWORD *)v35 + 1) = v37;
      v38 = *(void (**)(char *, _QWORD, uint64_t, int *))(v40 + 56);
      swift_bridgeObjectRetain();
      v38(v22, 0, 1, v24);
    }
  }
  return v7;
}

uint64_t destroy for SingleResultCallHistoryView(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  int *v8;
  uint64_t result;
  uint64_t v10;
  void (*v11)(char *, uint64_t);
  char *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);

  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = (char *)a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = &v6[*(int *)(type metadata accessor for SingleResultCallHistoryModel() + 36)];
  v8 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  result = (*(uint64_t (**)(char *, uint64_t, int *))(*((_QWORD *)v8 - 1) + 48))(v7, 1, v8);
  if (!(_DWORD)result)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    v11 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
    v11(v7, v10);
    v12 = &v7[v8[5]];
    v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
    v14 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8);
    v14(v12, v13);
    v11(&v7[v8[6]], v10);
    v14(&v7[v8[7]], v13);
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *initializeWithCopy for SingleResultCallHistoryView(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  id v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  int *v24;
  unsigned int (*v25)(char *, uint64_t, int *);
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, _QWORD, uint64_t, int *);
  uint64_t v40;

  v7 = *(void **)a2;
  v6 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v6;
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for ActionHandler();
  v12 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  v13 = v7;
  v12(v9, v10, v11);
  v14 = *(int *)(a3 + 24);
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v18 = v16[3];
  v15[2] = v16[2];
  v15[3] = v18;
  v19 = v16[5];
  v15[4] = v16[4];
  v15[5] = v19;
  v20 = v16[7];
  v15[6] = v16[6];
  v15[7] = v20;
  v15[8] = v16[8];
  v21 = *(int *)(type metadata accessor for SingleResultCallHistoryModel() + 36);
  v22 = (char *)v15 + v21;
  v23 = (char *)v16 + v21;
  v24 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  v40 = *((_QWORD *)v24 - 1);
  v25 = *(unsigned int (**)(char *, uint64_t, int *))(v40 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v25(v23, 1, v24))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
    v28(v22, v23, v27);
    v29 = v24[5];
    v30 = &v22[v29];
    v31 = &v23[v29];
    v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
    v33 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16);
    v33(v30, v31, v32);
    v28(&v22[v24[6]], &v23[v24[6]], v27);
    v33(&v22[v24[7]], &v23[v24[7]], v32);
    v34 = v24[8];
    v35 = &v22[v34];
    v36 = &v23[v34];
    v37 = *((_QWORD *)v36 + 1);
    *(_QWORD *)v35 = *(_QWORD *)v36;
    *((_QWORD *)v35 + 1) = v37;
    v38 = *(void (**)(char *, _QWORD, uint64_t, int *))(v40 + 56);
    swift_bridgeObjectRetain();
    v38(v22, 0, 1, v24);
  }
  return a1;
}

uint64_t assignWithCopy for SingleResultCallHistoryView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  int *v19;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t, int *);
  int v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  char *v30;
  char *v31;
  void (*v32)(char *, _QWORD, uint64_t, int *);
  uint64_t v33;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  char *v43;
  char *v44;
  void (*v45)(char *, char *, uint64_t);

  v6 = *(void **)a1;
  v7 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v7;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v9 = *(int *)(a3 + 20);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v13 = *(int *)(a3 + 24);
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14[2] = v15[2];
  v14[3] = v15[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14[4] = v15[4];
  v14[5] = v15[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14[6] = v15[6];
  v14[7] = v15[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14[8] = v15[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = *(int *)(type metadata accessor for SingleResultCallHistoryModel() + 36);
  v17 = (char *)v14 + v16;
  v18 = (char *)v15 + v16;
  v19 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  v20 = *((_QWORD *)v19 - 1);
  v21 = *(uint64_t (**)(char *, uint64_t, int *))(v20 + 48);
  LODWORD(v11) = v21(v17, 1, v19);
  v22 = v21(v18, 1, v19);
  if (!(_DWORD)v11)
  {
    if (!v22)
    {
      v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      v36 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 24);
      v36(v17, v18, v35);
      v37 = v19[5];
      v38 = &v17[v37];
      v39 = &v18[v37];
      v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
      v41 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 24);
      v41(v38, v39, v40);
      v36(&v17[v19[6]], &v18[v19[6]], v35);
      v41(&v17[v19[7]], &v18[v19[7]], v40);
      v42 = v19[8];
      v43 = &v17[v42];
      v44 = &v18[v42];
      *(_QWORD *)v43 = *(_QWORD *)v44;
      *((_QWORD *)v43 + 1) = *((_QWORD *)v44 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    outlined destroy of SearchCallHistoryBinaryButtonModel((uint64_t)v17);
    goto LABEL_6;
  }
  if (v22)
  {
LABEL_6:
    v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    return a1;
  }
  v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v45 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
  v45(v17, v18, v23);
  v24 = v19[5];
  v25 = &v17[v24];
  v26 = &v18[v24];
  v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
  v28(v25, v26, v27);
  v45(&v17[v19[6]], &v18[v19[6]], v23);
  v28(&v17[v19[7]], &v18[v19[7]], v27);
  v29 = v19[8];
  v30 = &v17[v29];
  v31 = &v18[v29];
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *((_QWORD *)v30 + 1) = *((_QWORD *)v31 + 1);
  v32 = *(void (**)(char *, _QWORD, uint64_t, int *))(v20 + 56);
  swift_bridgeObjectRetain();
  v32(v17, 0, 1, v19);
  return a1;
}

_OWORD *initializeWithTake for SingleResultCallHistoryView(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  void (*v28)(char *, char *, uint64_t);

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = *((_OWORD *)v12 + 1);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v13;
  v14 = *((_OWORD *)v12 + 3);
  *((_OWORD *)v11 + 2) = *((_OWORD *)v12 + 2);
  *((_OWORD *)v11 + 3) = v14;
  *((_QWORD *)v11 + 8) = *((_QWORD *)v12 + 8);
  v15 = *(int *)(type metadata accessor for SingleResultCallHistoryModel() + 36);
  v16 = &v11[v15];
  v17 = &v12[v15];
  v18 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  v19 = *((_QWORD *)v18 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v19 + 48))(v17, 1, v18))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32);
    v28(v16, v17, v21);
    v22 = v18[5];
    v23 = &v16[v22];
    v24 = &v17[v22];
    v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
    v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32);
    v26(v23, v24, v25);
    v28(&v16[v18[6]], &v17[v18[6]], v21);
    v26(&v16[v18[7]], &v17[v18[7]], v25);
    *(_OWORD *)&v16[v18[8]] = *(_OWORD *)&v17[v18[8]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v19 + 56))(v16, 0, 1, v18);
  }
  return a1;
}

uint64_t assignWithTake for SingleResultCallHistoryView(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  int *v21;
  uint64_t v22;
  uint64_t (*v23)(char *, uint64_t, int *);
  int v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  *(_QWORD *)(a1 + 8) = a2[1];
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  v15 = v13[3];
  v12[2] = v13[2];
  v12[3] = v15;
  swift_bridgeObjectRelease();
  v16 = v13[5];
  v12[4] = v13[4];
  v12[5] = v16;
  swift_bridgeObjectRelease();
  v17 = v13[7];
  v12[6] = v13[6];
  v12[7] = v17;
  swift_bridgeObjectRelease();
  v12[8] = v13[8];
  swift_bridgeObjectRelease();
  v18 = *(int *)(type metadata accessor for SingleResultCallHistoryModel() + 36);
  v19 = (char *)v12 + v18;
  v20 = (char *)v13 + v18;
  v21 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  v22 = *((_QWORD *)v21 - 1);
  v23 = *(uint64_t (**)(char *, uint64_t, int *))(v22 + 48);
  LODWORD(v9) = v23(v19, 1, v21);
  v24 = v23(v20, 1, v21);
  if (!(_DWORD)v9)
  {
    if (!v24)
    {
      v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      v34 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 40);
      v34(v19, v20, v33);
      v35 = v21[5];
      v36 = &v19[v35];
      v37 = &v20[v35];
      v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
      v39 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 40);
      v39(v36, v37, v38);
      v34(&v19[v21[6]], &v20[v21[6]], v33);
      v39(&v19[v21[7]], &v20[v21[7]], v38);
      v40 = v21[8];
      v41 = &v19[v40];
      v42 = &v20[v40];
      v44 = *(_QWORD *)v42;
      v43 = *((_QWORD *)v42 + 1);
      *(_QWORD *)v41 = v44;
      *((_QWORD *)v41 + 1) = v43;
      swift_bridgeObjectRelease();
      return a1;
    }
    outlined destroy of SearchCallHistoryBinaryButtonModel((uint64_t)v19);
    goto LABEL_6;
  }
  if (v24)
  {
LABEL_6:
    v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    return a1;
  }
  v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v45 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32);
  v45(v19, v20, v25);
  v26 = v21[5];
  v27 = &v19[v26];
  v28 = &v20[v26];
  v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  v30 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32);
  v30(v27, v28, v29);
  v45(&v19[v21[6]], &v20[v21[6]], v25);
  v30(&v19[v21[7]], &v20[v21[7]], v29);
  *(_OWORD *)&v19[v21[8]] = *(_OWORD *)&v20[v21[8]];
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v22 + 56))(v19, 0, 1, v21);
  return a1;
}

uint64_t getEnumTagSinglePayload for SingleResultCallHistoryView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_243AD2A8C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = type metadata accessor for ActionHandler();
    v10 = *(_QWORD *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v9;
      v12 = *(int *)(a3 + 20);
    }
    else
    {
      v11 = type metadata accessor for SingleResultCallHistoryModel();
      v10 = *(_QWORD *)(v11 - 8);
      v12 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(&a1[v12], a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for SingleResultCallHistoryView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_243AD2B44(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)result = a2;
  }
  else
  {
    v8 = type metadata accessor for ActionHandler();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = type metadata accessor for SingleResultCallHistoryModel();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

uint64_t type metadata completion function for SingleResultCallHistoryView()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for ActionHandler();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for SingleResultCallHistoryModel();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ComponentStack<TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)>>, _BackgroundStyleModifier<BackgroundStyle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ComponentStack<TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)>>, _BackgroundStyleModifier<BackgroundStyle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ComponentStack<TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)>>, _BackgroundStyleModifier<BackgroundStyle>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)>>, _BackgroundStyleModifier<BackgroundStyle>>);
    v2[0] = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type ComponentStack<TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)>> and conformance ComponentStack<A>, &demangling cache variable for type metadata for ComponentStack<TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)>>, MEMORY[0x24BEADBF8]);
    v2[1] = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type _BackgroundStyleModifier<BackgroundStyle> and conformance _BackgroundStyleModifier<A>, &demangling cache variable for type metadata for _BackgroundStyleModifier<BackgroundStyle>, MEMORY[0x24BDF06D8]);
    result = MEMORY[0x249501140](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ComponentStack<TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)>>, _BackgroundStyleModifier<BackgroundStyle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x249501140](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t objectdestroyTm()
{
  uint64_t v0;
  uint64_t v1;
  id *v2;
  char *v3;
  uint64_t v4;
  char *v5;
  char *v6;
  int *v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t);
  char *v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t);

  v1 = type metadata accessor for SingleResultCallHistoryView();
  v2 = (id *)(v0
            + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)));

  v3 = (char *)v2 + *(int *)(v1 + 20);
  v4 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = (char *)v2 + *(int *)(v1 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = &v5[*(int *)(type metadata accessor for SingleResultCallHistoryModel() + 36)];
  v7 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48))(v6, 1, v7))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    v9 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
    v9(v6, v8);
    v10 = &v6[v7[5]];
    v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
    v12 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8);
    v12(v10, v11);
    v9(&v6[v7[6]], v8);
    v12(&v6[v7[7]], v11);
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in SingleResultCallHistoryView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SingleResultCallHistoryView() - 8) + 80);
  return closure #1 in SingleResultCallHistoryView.body.getter(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t outlined init with take of ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with copy of SearchCallHistoryBinaryButtonModel?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t outlined destroy of SearchCallHistoryBinaryButtonModel?(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t outlined init with take of SingleResultCallHistoryModel(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t YesNoConfirmationModel.yesText.getter()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t YesNoConfirmationModel.yesText.setter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  return Loggable.wrappedValue.setter();
}

uint64_t (*YesNoConfirmationModel.yesText.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t YesNoConfirmationModel.yesAction.getter()
{
  type metadata accessor for YesNoConfirmationModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  return CodableAceObject.wrappedValue.getter();
}

uint64_t type metadata accessor for YesNoConfirmationModel()
{
  uint64_t result;

  result = type metadata singleton initialization cache for YesNoConfirmationModel;
  if (!type metadata singleton initialization cache for YesNoConfirmationModel)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t key path setter for YesNoConfirmationModel.yesAction : YesNoConfirmationModel(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  type metadata accessor for YesNoConfirmationModel();
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  return CodableAceObject.wrappedValue.setter();
}

uint64_t YesNoConfirmationModel.yesAction.setter()
{
  type metadata accessor for YesNoConfirmationModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  return CodableAceObject.wrappedValue.setter();
}

uint64_t (*YesNoConfirmationModel.yesAction.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for YesNoConfirmationModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v2[4] = CodableAceObject.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t property wrapper backing initializer of YesNoConfirmationModel.noText()
{
  return Loggable.init(wrappedValue:)();
}

uint64_t YesNoConfirmationModel.noText.getter()
{
  uint64_t v1;

  type metadata accessor for YesNoConfirmationModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t key path getter for YesNoConfirmationModel.noText : YesNoConfirmationModel@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for YesNoConfirmationModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  result = Loggable.wrappedValue.getter();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t key path setter for YesNoConfirmationModel.noText : YesNoConfirmationModel()
{
  type metadata accessor for YesNoConfirmationModel();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  return Loggable.wrappedValue.setter();
}

uint64_t YesNoConfirmationModel.noText.setter()
{
  type metadata accessor for YesNoConfirmationModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  return Loggable.wrappedValue.setter();
}

uint64_t (*YesNoConfirmationModel.noText.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for YesNoConfirmationModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t property wrapper backing initializer of YesNoConfirmationModel.noAction()
{
  type metadata accessor for SAIntentGroupRunSiriKitExecutor();
  return CodableAceObject.init(wrappedValue:)();
}

uint64_t YesNoConfirmationModel.noAction.getter()
{
  type metadata accessor for YesNoConfirmationModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  return CodableAceObject.wrappedValue.getter();
}

uint64_t key path setter for YesNoConfirmationModel.noAction : YesNoConfirmationModel(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  type metadata accessor for YesNoConfirmationModel();
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  return CodableAceObject.wrappedValue.setter();
}

uint64_t YesNoConfirmationModel.noAction.setter()
{
  type metadata accessor for YesNoConfirmationModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  return CodableAceObject.wrappedValue.setter();
}

uint64_t (*YesNoConfirmationModel.noAction.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for YesNoConfirmationModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v2[4] = CodableAceObject.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t YesNoConfirmationModel.responseViewId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for YesNoConfirmationModel() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t YesNoConfirmationModel.responseViewId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for YesNoConfirmationModel() + 32));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*YesNoConfirmationModel.responseViewId.modify())()
{
  type metadata accessor for YesNoConfirmationModel();
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

void YesNoConfirmationModel.init(yesText:yesAction:noText:noAction:)(void *a1@<X2>, uint64_t a2@<X8>)
{
  _QWORD *v3;
  id v4;

  v3 = (_QWORD *)(a2 + *(int *)(type metadata accessor for YesNoConfirmationModel() + 32));
  *v3 = 0xD000000000000011;
  v3[1] = 0x8000000243B37240;
  Loggable.init(wrappedValue:)();
  type metadata accessor for SAIntentGroupRunSiriKitExecutor();
  v4 = a1;
  CodableAceObject.init(wrappedValue:)();
  Loggable.init(wrappedValue:)();
  CodableAceObject.init(wrappedValue:)();

}

uint64_t YesNoConfirmationModel.CodingKeys.stringValue.getter(char a1)
{
  return *(_QWORD *)&aYestext_1[8 * a1];
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance YesNoConfirmationModel.CodingKeys()
{
  char *v0;

  return YesNoConfirmationModel.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance YesNoConfirmationModel.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = specialized YesNoConfirmationModel.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance YesNoConfirmationModel.CodingKeys()
{
  lazy protocol witness table accessor for type YesNoConfirmationModel.CodingKeys and conformance YesNoConfirmationModel.CodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance YesNoConfirmationModel.CodingKeys()
{
  lazy protocol witness table accessor for type YesNoConfirmationModel.CodingKeys and conformance YesNoConfirmationModel.CodingKeys();
  return CodingKey.debugDescription.getter();
}

uint64_t YesNoConfirmationModel.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[4];
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<YesNoConfirmationModel.CodingKeys>);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type YesNoConfirmationModel.CodingKeys and conformance YesNoConfirmationModel.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v18 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  lazy protocol witness table accessor for type Loggable<String> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<String> and conformance <A> Loggable<A>, MEMORY[0x24BEAD370]);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    v9 = type metadata accessor for YesNoConfirmationModel();
    v13[2] = v3;
    v13[3] = v9;
    v17 = 1;
    v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    v11 = lazy protocol witness table accessor for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>(&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>, MEMORY[0x24BEABA88]);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v13[0] = v11;
    v13[1] = v10;
    v16 = 2;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v15 = 3;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v14 = 4;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t lazy protocol witness table accessor for type YesNoConfirmationModel.CodingKeys and conformance YesNoConfirmationModel.CodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type YesNoConfirmationModel.CodingKeys and conformance YesNoConfirmationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type YesNoConfirmationModel.CodingKeys and conformance YesNoConfirmationModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for YesNoConfirmationModel.CodingKeys, &unk_251449438);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type YesNoConfirmationModel.CodingKeys and conformance YesNoConfirmationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type YesNoConfirmationModel.CodingKeys and conformance YesNoConfirmationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type YesNoConfirmationModel.CodingKeys and conformance YesNoConfirmationModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for YesNoConfirmationModel.CodingKeys, &unk_251449438);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type YesNoConfirmationModel.CodingKeys and conformance YesNoConfirmationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type YesNoConfirmationModel.CodingKeys and conformance YesNoConfirmationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type YesNoConfirmationModel.CodingKeys and conformance YesNoConfirmationModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for YesNoConfirmationModel.CodingKeys, &unk_251449438);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type YesNoConfirmationModel.CodingKeys and conformance YesNoConfirmationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type YesNoConfirmationModel.CodingKeys and conformance YesNoConfirmationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type YesNoConfirmationModel.CodingKeys and conformance YesNoConfirmationModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for YesNoConfirmationModel.CodingKeys, &unk_251449438);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type YesNoConfirmationModel.CodingKeys and conformance YesNoConfirmationModel.CodingKeys);
  }
  return result;
}

uint64_t YesNoConfirmationModel.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, char *, uint64_t);
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  _QWORD v41[2];
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  _QWORD *v57;
  char v58;
  char v59;
  char v60;
  char v61;
  char v62;

  v46 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v48 = *(_QWORD *)(v3 - 8);
  v49 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v47 = (char *)v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v51 = (char *)v41 - v6;
  v54 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v50 = *(_QWORD *)(v54 - 8);
  v7 = MEMORY[0x24BDAC7A8](v54);
  v9 = (char *)v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v52 = (char *)v41 - v10;
  v53 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<YesNoConfirmationModel.CodingKeys>);
  v11 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53);
  v13 = (char *)v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for YesNoConfirmationModel();
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = &v17[*(int *)(v15 + 32)];
  *(_QWORD *)v18 = 0xD000000000000011;
  *((_QWORD *)v18 + 1) = 0x8000000243B37240;
  v56 = v18;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type YesNoConfirmationModel.CodingKeys and conformance YesNoConfirmationModel.CodingKeys();
  v55 = v13;
  v19 = (uint64_t)v57;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v19)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v20 = v51;
    v43 = v9;
    v44 = v14;
    v45 = v11;
    v21 = v17;
    v57 = a1;
    v62 = 0;
    v22 = lazy protocol witness table accessor for type Loggable<String> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<String> and conformance <A> Loggable<A>, MEMORY[0x24BEAD380]);
    v23 = v52;
    v24 = v53;
    v25 = v54;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v41[1] = v22;
    v42 = (uint64_t)v21;
    v26 = *(void (**)(char *, char *, uint64_t))(v50 + 32);
    v26(v21, v23, v25);
    v61 = 1;
    lazy protocol witness table accessor for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>(&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>, MEMORY[0x24BEABA90]);
    v27 = v49;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v28 = v27;
    v29 = *(void (**)(uint64_t, char *, uint64_t))(v48 + 32);
    v29(v42 + *(int *)(v44 + 20), v20, v28);
    v60 = 2;
    v30 = v43;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v51 = (char *)v29;
    v52 = 0;
    v31 = v44;
    v26((char *)(v42 + *(int *)(v44 + 24)), v30, v25);
    v59 = 3;
    v32 = v47;
    v33 = v49;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v34 = *(int *)(v31 + 28);
    v35 = v42;
    ((void (*)(uint64_t, char *, uint64_t))v51)(v42 + v34, v32, v33);
    v58 = 4;
    v36 = KeyedDecodingContainer.decode(_:forKey:)();
    v38 = v37;
    (*(void (**)(char *, uint64_t))(v45 + 8))(v55, v24);
    v39 = (uint64_t *)v56;
    swift_bridgeObjectRelease();
    *v39 = v36;
    v39[1] = v38;
    outlined init with copy of YesNoConfirmationModel(v35, v46);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
    return outlined destroy of YesNoConfirmationModel(v35);
  }
}

uint64_t outlined init with copy of YesNoConfirmationModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for YesNoConfirmationModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of YesNoConfirmationModel(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for YesNoConfirmationModel();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t instantiation function for generic protocol witness table for YesNoConfirmationModel(uint64_t a1)
{
  uint64_t result;

  result = lazy protocol witness table accessor for type YesNoConfirmationModel and conformance YesNoConfirmationModel(&lazy protocol witness table cache variable for type YesNoConfirmationModel and conformance YesNoConfirmationModel, (uint64_t)&protocol conformance descriptor for YesNoConfirmationModel);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t base witness table accessor for Decodable in YesNoConfirmationModel()
{
  return lazy protocol witness table accessor for type YesNoConfirmationModel and conformance YesNoConfirmationModel(&lazy protocol witness table cache variable for type YesNoConfirmationModel and conformance YesNoConfirmationModel, (uint64_t)&protocol conformance descriptor for YesNoConfirmationModel);
}

uint64_t base witness table accessor for Encodable in YesNoConfirmationModel()
{
  return lazy protocol witness table accessor for type YesNoConfirmationModel and conformance YesNoConfirmationModel(&lazy protocol witness table cache variable for type YesNoConfirmationModel and conformance YesNoConfirmationModel, (uint64_t)&protocol conformance descriptor for YesNoConfirmationModel);
}

uint64_t lazy protocol witness table accessor for type YesNoConfirmationModel and conformance YesNoConfirmationModel(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for YesNoConfirmationModel();
    result = MEMORY[0x249501140](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t protocol witness for Decodable.init(from:) in conformance YesNoConfirmationModel@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return YesNoConfirmationModel.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance YesNoConfirmationModel(_QWORD *a1)
{
  return YesNoConfirmationModel.encode(to:)(a1);
}

uint64_t sub_243AD413C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  result = Loggable.wrappedValue.getter();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_243AD4184@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for YesNoConfirmationModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  result = CodableAceObject.wrappedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_243AD41DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for YesNoConfirmationModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  result = CodableAceObject.wrappedValue.getter();
  *a1 = result;
  return result;
}

char *initializeBufferWithCopyOfBuffer for YesNoConfirmationModel(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[5];
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    v13(v10, v11, v12);
    v8(&a1[a3[6]], &a2[a3[6]], v7);
    v13(&a1[a3[7]], &a2[a3[7]], v12);
    v14 = a3[8];
    v15 = &a1[v14];
    v16 = &a2[v14];
    v17 = *((_QWORD *)v16 + 1);
    *(_QWORD *)v15 = *(_QWORD *)v16;
    *((_QWORD *)v15 + 1) = v17;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for YesNoConfirmationModel(uint64_t a1, int *a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v6 = a1 + a2[5];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v8(v6, v7);
  v5(a1 + a2[6], v4);
  v8(a1 + a2[7], v7);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for YesNoConfirmationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  v12(v9, v10, v11);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v12(a1 + a3[7], a2 + a3[7], v11);
  v13 = a3[8];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for YesNoConfirmationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24);
  v12(v9, v10, v11);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v12(a1 + a3[7], a2 + a3[7], v11);
  v13 = a3[8];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for YesNoConfirmationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32);
  v12(v9, v10, v11);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v12(a1 + a3[7], a2 + a3[7], v11);
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t assignWithTake for YesNoConfirmationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40);
  v12(v9, v10, v11);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v12(a1 + a3[7], a2 + a3[7], v11);
  v13 = a3[8];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for YesNoConfirmationModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_243AD4798(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 32) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for YesNoConfirmationModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_243AD4858(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 32) + 8) = (a2 - 1);
  return result;
}

void type metadata completion function for YesNoConfirmationModel()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for Loggable<String>();
  if (v0 <= 0x3F)
  {
    type metadata accessor for CodableAceObject<SAIntentGroupRunSiriKitExecutor>();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t storeEnumTagSinglePayload for YesNoConfirmationModel.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_243AD49E4 + 4 * byte_243B324E5[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_243AD4A18 + 4 * byte_243B324E0[v4]))();
}

uint64_t sub_243AD4A18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_243AD4A20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x243AD4A28);
  return result;
}

uint64_t sub_243AD4A34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x243AD4A3CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_243AD4A40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_243AD4A48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for YesNoConfirmationModel.CodingKeys()
{
  return &unk_251449438;
}

uint64_t specialized YesNoConfirmationModel.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x74786554736579 && a2 == 0xE700000000000000;
  if (v3 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F69746341736579 && a2 == 0xE90000000000006ELL
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x747865546F6ELL && a2 == 0xE600000000000000
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6F697463416F6ELL && a2 == 0xE800000000000000
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x65736E6F70736572 && a2 == 0xEE00644977656956)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t ShowCallHistoryListView.model.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ShowCallHistoryListView();
  return outlined init with copy of SearchCallHistoryBinaryButtonModel(v1 + *(int *)(v3 + 24), a1, (uint64_t (*)(_QWORD))type metadata accessor for SearchCallHistoryModel);
}

uint64_t type metadata accessor for ShowCallHistoryListView()
{
  uint64_t result;

  result = type metadata singleton initialization cache for ShowCallHistoryListView;
  if (!type metadata singleton initialization cache for ShowCallHistoryListView)
    return swift_getSingletonMetadata();
  return result;
}

void one-time initialization function for bottomCornerRadius()
{
  static ShowCallHistoryListView.bottomCornerRadius = 0x4034000000000000;
}

{
  static ShowPlayVoicemailListView.bottomCornerRadius = 0x4034000000000000;
}

uint64_t ShowCallHistoryListView.init(model:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  type metadata accessor for Context();
  lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
  *a2 = EnvironmentObject.init()();
  a2[1] = v4;
  v5 = type metadata accessor for ShowCallHistoryListView();
  ActionHandler.init()();
  return outlined init with take of SingleResultCallHistoryModel(a1, (uint64_t)a2 + *(int *)(v5 + 24), (uint64_t (*)(_QWORD))type metadata accessor for SearchCallHistoryModel);
}

uint64_t ShowCallHistoryListView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(void);
  uint64_t v25;
  uint64_t v26;

  v2 = v1;
  v26 = a1;
  v3 = type metadata accessor for RoundedCornerStyle();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UnevenRoundedRectangle();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(<<opaque return type of View.lastComponentBottomSpacing(_:)>>.0, ListBottomView?)>>);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(<<opaque return type of View.lastComponentBottomSpacing(_:)>>.0, ListBottomView?)>>, _BackgroundStyleModifier<BackgroundStyle>>);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v12 = static HorizontalAlignment.center.getter();
  *((_QWORD *)v12 + 1) = 0;
  v12[16] = 1;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(<<opaque return type of View.lastComponentBottomSpacing(_:)>>.0, ListBottomView?)>>);
  closure #1 in ShowCallHistoryListView.body.getter(v2, &v12[*(int *)(v16 + 44)]);
  LOBYTE(v2) = static Edge.Set.all.getter();
  outlined init with copy of SearchCallHistoryBinaryButtonModel?((uint64_t)v12, (uint64_t)v15, &demangling cache variable for type metadata for VStack<TupleView<(<<opaque return type of View.lastComponentBottomSpacing(_:)>>.0, ListBottomView?)>>);
  v15[*(int *)(v13 + 36)] = v2;
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v12, &demangling cache variable for type metadata for VStack<TupleView<(<<opaque return type of View.lastComponentBottomSpacing(_:)>>.0, ListBottomView?)>>);
  if (one-time initialization token for bottomCornerRadius != -1)
    swift_once();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BDEEB60], v3);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(&v9[*(int *)(v7 + 20)], v6, v3);
  RectangleCornerRadii.init(topLeft:topRight:bottomRight:bottomLeft:)();
  *(_QWORD *)v9 = v17;
  *((_QWORD *)v9 + 1) = v18;
  *((_QWORD *)v9 + 2) = v19;
  *((_QWORD *)v9 + 3) = v20;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(<<opaque return type of View.lastComponentBottomSpacing(_:)>>.0, ListBottomView?)>>, _BackgroundStyleModifier<BackgroundStyle>>, _ContainerShapeModifier<UnevenRoundedRectangle>>);
  v22 = v26;
  v23 = MEMORY[0x24BDEFEC0];
  outlined init with copy of SearchCallHistoryBinaryButtonModel((uint64_t)v9, v26 + *(int *)(v21 + 36), (uint64_t (*)(_QWORD))MEMORY[0x24BDEFEC0]);
  outlined init with copy of SearchCallHistoryBinaryButtonModel?((uint64_t)v15, v22, &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(<<opaque return type of View.lastComponentBottomSpacing(_:)>>.0, ListBottomView?)>>, _BackgroundStyleModifier<BackgroundStyle>>);
  outlined destroy of SingleResultCallHistoryModel((uint64_t)v9, (uint64_t (*)(_QWORD))v23);
  return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v15, &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(<<opaque return type of View.lastComponentBottomSpacing(_:)>>.0, ListBottomView?)>>, _BackgroundStyleModifier<BackgroundStyle>>);
}

uint64_t closure #1 in ShowCallHistoryListView.body.getter@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v57 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ListBottomView?);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v58 = (uint64_t)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v56 = (uint64_t *)((char *)&v49 - v6);
  v7 = type metadata accessor for ComponentStackBottomSpacing();
  v53 = *(_QWORD *)(v7 - 8);
  v54 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = type metadata accessor for ShowCallHistoryListView();
  v10 = *(_QWORD *)(v55 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v55);
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ForEach<[(offset: Int, element: SingleCallRecordModel)], Int, <<opaque return type of View.componentSpacing(top:bottom:)>>.0>)>>);
  v52 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0);
  v17 = *(_QWORD *)(v16 - 8);
  v50 = v16;
  v51 = v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v49 - v21;
  outlined init with copy of SearchCallHistoryBinaryButtonModel(a1, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ShowCallHistoryListView);
  v23 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v24 = swift_allocObject();
  outlined init with take of SingleResultCallHistoryModel((uint64_t)v12, v24 + v23, (uint64_t (*)(_QWORD))type metadata accessor for ShowCallHistoryListView);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ForEach<[(offset: Int, element: SingleCallRecordModel)], Int, <<opaque return type of View.componentSpacing(top:bottom:)>>.0>)>);
  v26 = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ForEach<[(offset: Int, element: SingleCallRecordModel)], Int, <<opaque return type of View.componentSpacing(top:bottom:)>>.0>)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ForEach<[(offset: Int, element: SingleCallRecordModel)], Int, <<opaque return type of View.componentSpacing(top:bottom:)>>.0>)>, MEMORY[0x24BDF5420]);
  v27 = v24;
  v28 = v22;
  MEMORY[0x24950072C](partial apply for closure #1 in closure #1 in ShowCallHistoryListView.body.getter, v27, v25, v26);
  v30 = v53;
  v29 = v54;
  (*(void (**)(char *, _QWORD, uint64_t))(v53 + 104))(v9, *MEMORY[0x24BEAE360], v54);
  lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ForEach<[(offset: Int, element: SingleCallRecordModel)], Int, <<opaque return type of View.componentSpacing(top:bottom:)>>.0>)>> and conformance ComponentStack<A>, &demangling cache variable for type metadata for ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ForEach<[(offset: Int, element: SingleCallRecordModel)], Int, <<opaque return type of View.componentSpacing(top:bottom:)>>.0>)>>, MEMORY[0x24BEADBF8]);
  View.lastComponentBottomSpacing(_:)();
  v31 = *(void (**)(char *, uint64_t))(v30 + 8);
  v32 = v50;
  v33 = v51;
  v31(v9, v29);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v15, v13);
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v28, v20, v32);
  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  Loggable.wrappedValue.getter();
  if (v59 == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    Loggable.wrappedValue.getter();
    v34 = v59;
    v35 = v60;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
    v36 = CodableAceObject.wrappedValue.getter();
    type metadata accessor for Context();
    lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
    v37 = EnvironmentObject.init()();
    v38 = (uint64_t)v56;
    *v56 = v37;
    *(_QWORD *)(v38 + 8) = v39;
    v40 = type metadata accessor for ListBottomView();
    ActionHandler.init()();
    v41 = (_QWORD *)(v38 + *(int *)(v40 + 24));
    *v41 = v34;
    v41[1] = v35;
    *(_QWORD *)(v38 + *(int *)(v40 + 28)) = v36;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v38, 0, 1, v40);
  }
  else
  {
    v42 = type metadata accessor for ListBottomView();
    v38 = (uint64_t)v56;
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v56, 1, 1, v42);
  }
  v43 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
  v43(v20, v28, v32);
  v44 = v58;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v38, v58, &demangling cache variable for type metadata for ListBottomView?);
  v45 = v57;
  v43(v57, v20, v32);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (<<opaque return type of View.lastComponentBottomSpacing(_:)>>.0, ListBottomView?));
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v44, (uint64_t)&v45[*(int *)(v46 + 48)], &demangling cache variable for type metadata for ListBottomView?);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v38, &demangling cache variable for type metadata for ListBottomView?);
  v47 = *(void (**)(char *, uint64_t))(v33 + 8);
  v47(v28, v32);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v44, &demangling cache variable for type metadata for ListBottomView?);
  return ((uint64_t (*)(char *, uint64_t))v47)(v20, v32);
}

uint64_t associated type witness table accessor for View.Body : View in ShowCallHistoryListView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t closure #1 in closure #1 in ShowCallHistoryListView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  size_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  ValueMetadata *v29;
  unint64_t v30;
  char *v31;
  void (*v32)(uint64_t, char *, uint64_t);
  char *v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  void (*v41)(char *, uint64_t);
  _QWORD v43[2];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  size_t v57;
  ValueMetadata *v58;
  unint64_t v59;

  v46 = a1;
  v54 = a2;
  v3 = type metadata accessor for ShowCallHistoryListView();
  v4 = *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64);
  v48 = *(_QWORD *)(v3 - 8);
  v49 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v47 = (uint64_t)v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ForEach<[(offset: Int, element: SingleCallRecordModel)], Int, <<opaque return type of View.componentSpacing(top:bottom:)>>.0>);
  v52 = *(_QWORD *)(v6 - 8);
  v53 = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v51 = (char *)v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v50 = (char *)v43 - v9;
  v10 = type metadata accessor for SeparatorStyle();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.componentSpacing(top:bottom:)>>.0);
  v45 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.separators(_:isOverride:)>>.0);
  v55 = *(_QWORD *)(v44 - 8);
  v17 = MEMORY[0x24BDAC7A8](v44);
  v43[0] = (char *)v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v56 = (char *)v43 - v19;
  v43[1] = a1 + *(int *)(v3 + 24);
  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  v20 = lazy protocol witness table accessor for type ListHeaderView and conformance ListHeaderView();
  View.componentSpacing(top:bottom:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x24BEAB4F0], v10);
  v58 = &type metadata for ListHeaderView;
  v59 = v20;
  swift_getOpaqueTypeConformance2();
  v21 = (char *)v43[0];
  View.separators(_:isOverride:)();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v16, v14);
  v22 = v55;
  v23 = v44;
  (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v56, v21, v44);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
  Loggable.wrappedValue.getter();
  v24 = specialized _copySequenceToContiguousArray<A>(_:)((uint64_t)v58);
  swift_bridgeObjectRelease();
  v57 = v24;
  swift_getKeyPath();
  v25 = v47;
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v46, v47, (uint64_t (*)(_QWORD))type metadata accessor for ShowCallHistoryListView);
  v26 = (*(unsigned __int8 *)(v48 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
  v27 = swift_allocObject();
  outlined init with take of SingleResultCallHistoryModel(v25, v27 + v26, (uint64_t (*)(_QWORD))type metadata accessor for ShowCallHistoryListView);
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = partial apply for closure #1 in closure #1 in closure #1 in ShowCallHistoryListView.body.getter;
  *(_QWORD *)(v28 + 24) = v27;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [(offset: Int, element: SingleCallRecordModel)]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.componentSpacing(top:bottom:)>>.0);
  lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type [(offset: Int, element: SingleCallRecordModel)] and conformance [A], &demangling cache variable for type metadata for [(offset: Int, element: SingleCallRecordModel)], MEMORY[0x24BEE12D8]);
  v29 = (ValueMetadata *)__swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>);
  v30 = lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem> and conformance <> ModifiedContent<A, B>();
  v58 = v29;
  v59 = v30;
  swift_getOpaqueTypeConformance2();
  v31 = v50;
  ForEach<>.init(_:id:content:)();
  v32 = *(void (**)(uint64_t, char *, uint64_t))(v22 + 16);
  v33 = v56;
  v32((uint64_t)v21, v56, v23);
  v34 = v51;
  v35 = v52;
  v36 = *(void (**)(char *, char *, uint64_t))(v52 + 16);
  v37 = v53;
  v36(v51, v31, v53);
  v38 = v54;
  v32(v54, v21, v23);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (<<opaque return type of View.separators(_:isOverride:)>>.0, ForEach<[(offset: Int, element: SingleCallRecordModel)], Int, <<opaque return type of View.componentSpacing(top:bottom:)>>.0>));
  v36((char *)(v38 + *(int *)(v39 + 48)), v34, v37);
  v40 = *(void (**)(char *, uint64_t))(v35 + 8);
  v40(v31, v37);
  v41 = *(void (**)(char *, uint64_t))(v55 + 8);
  v41(v33, v23);
  v40(v34, v37);
  return ((uint64_t (*)(char *, uint64_t))v41)(v21, v23);
}

uint64_t closure #1 in closure #1 in closure #1 in ShowCallHistoryListView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, id *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  id v22;
  char v23;
  unsigned int *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  char *v37;
  uint64_t result;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  id *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v42 = a3;
  v53 = a1;
  v54 = a4;
  v5 = type metadata accessor for SeparatorStyle();
  v51 = *(_QWORD *)(v5 - 8);
  v52 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v50 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Font.TextStyle();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ShowCallHistorySingleItemView();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (uint64_t *)((char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.separators(_:isOverride:)>>.0);
  v47 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  v45 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>);
  MEMORY[0x24BDAC7A8](v48);
  v40 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.componentSpacing(top:bottom:)>>.0);
  v44 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v43 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(a2, (uint64_t)v13 + *(int *)(v11 + 32), (uint64_t (*)(_QWORD))type metadata accessor for SingleCallRecordModel);
  v17 = type metadata accessor for Context();
  v18 = lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
  v41 = v17;
  v39 = v18;
  *v13 = EnvironmentObject.init()();
  v13[1] = v19;
  ActionHandler.init()();
  v55 = 0x4041800000000000;
  v20 = *MEMORY[0x24BDF1870];
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 104);
  v21(v10, v20, v7);
  lazy protocol witness table accessor for type CGFloat and conformance CGFloat();
  ScaledMetric.init(wrappedValue:relativeTo:)();
  v55 = 0x4041800000000000;
  v21(v10, v20, v7);
  ScaledMetric.init(wrappedValue:relativeTo:)();
  if (*v42)
  {
    v22 = *v42;
    dispatch thunk of Context.currentIdiom.getter();
    v23 = VRXIdiom.isCarPlay.getter();
    v24 = (unsigned int *)MEMORY[0x24BEAB508];
    v26 = v50;
    v25 = v51;
    if ((v23 & 1) == 0)
      v24 = (unsigned int *)MEMORY[0x24BEAB4F0];
    v27 = v52;
    (*(void (**)(char *, _QWORD, uint64_t))(v51 + 104))(v50, *v24, v52);

    lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type ShowCallHistorySingleItemView and conformance ShowCallHistorySingleItemView, (uint64_t (*)(uint64_t))type metadata accessor for ShowCallHistorySingleItemView, (uint64_t)&protocol conformance descriptor for ShowCallHistorySingleItemView);
    v28 = v45;
    View.separators(_:isOverride:)();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v26, v27);
    outlined destroy of SingleResultCallHistoryModel((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ShowCallHistorySingleItemView);
    v29 = EnvironmentObject.init()();
    v31 = v30;
    v32 = v47;
    v33 = (uint64_t)v40;
    v34 = v49;
    (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v40, v28, v49);
    v35 = v53 == 0;
    v36 = v33 + *(int *)(v48 + 36);
    *(_QWORD *)v36 = v29;
    *(_QWORD *)(v36 + 8) = v31;
    *(_BYTE *)(v36 + 16) = v35;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v28, v34);
    lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem> and conformance <> ModifiedContent<A, B>();
    v37 = v43;
    View.componentSpacing(top:bottom:)();
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v33, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v44 + 32))(v54, v37, v46);
  }
  else
  {
    result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for ShowCallHistoryListView(char *a1, char **a2, uint64_t a3)
{
  int v3;
  char *v4;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v7 = a1;
    *((_QWORD *)a1 + 1) = a2[1];
    v8 = *(int *)(a3 + 20);
    v9 = &a1[v8];
    v10 = (uint64_t)a2 + v8;
    v11 = type metadata accessor for ActionHandler();
    v12 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v13 = v4;
    v12(v9, v10, v11);
    v14 = *(int *)(a3 + 24);
    v15 = &v7[v14];
    v16 = (uint64_t)a2 + v14;
    v17 = *(uint64_t *)((char *)a2 + v14 + 8);
    *(_QWORD *)v15 = *(char **)((char *)a2 + v14);
    *((_QWORD *)v15 + 1) = v17;
    v18 = (int *)type metadata accessor for SearchCallHistoryModel();
    v19 = v18[5];
    v20 = &v15[v19];
    v21 = v16 + v19;
    swift_bridgeObjectRetain();
    v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    v23 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
    v23(v20, v21, v22);
    v24 = v18[6];
    v25 = &v15[v24];
    v26 = v16 + v24;
    v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v23(&v15[v18[7]], v16 + v18[7], v22);
    v23(&v15[v18[8]], v16 + v18[8], v22);
    v28 = v18[9];
    v29 = &v15[v28];
    v30 = v16 + v28;
    v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = v18[10];
    v33 = &v15[v32];
    v34 = v16 + v32;
    v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
  }
  return v7;
}

uint64_t destroy for ShowCallHistoryListView(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  char *v6;
  int *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;

  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = (char *)a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  v7 = (int *)type metadata accessor for SearchCallHistoryModel();
  v8 = &v6[v7[5]];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v10 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
  v10(v8, v9);
  v11 = &v6[v7[6]];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v10(&v6[v7[7]], v9);
  v10(&v6[v7[8]], v9);
  v13 = &v6[v7[9]];
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = &v6[v7[10]];
  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
}

_QWORD *initializeWithCopy for ShowCallHistoryListView(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  id v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;

  v7 = *(void **)a2;
  v6 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v6;
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for ActionHandler();
  v12 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  v13 = v7;
  v12(v9, v10, v11);
  v14 = *(int *)(a3 + 24);
  v15 = (char *)a1 + v14;
  v16 = a2 + v14;
  v17 = *(_QWORD *)(a2 + v14);
  v18 = *(_QWORD *)(v16 + 8);
  *(_QWORD *)v15 = v17;
  *((_QWORD *)v15 + 1) = v18;
  v19 = (int *)type metadata accessor for SearchCallHistoryModel();
  v20 = v19[5];
  v21 = &v15[v20];
  v22 = v16 + v20;
  swift_bridgeObjectRetain();
  v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v24 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
  v24(v21, v22, v23);
  v25 = v19[6];
  v26 = &v15[v25];
  v27 = v16 + v25;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
  v24(&v15[v19[7]], v16 + v19[7], v23);
  v24(&v15[v19[8]], v16 + v19[8], v23);
  v29 = v19[9];
  v30 = &v15[v29];
  v31 = v16 + v29;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
  v33 = v19[10];
  v34 = &v15[v33];
  v35 = v16 + v33;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v34, v35, v36);
  return a1;
}

uint64_t assignWithCopy for ShowCallHistoryListView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;

  v6 = *(void **)a1;
  v7 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v7;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v9 = *(int *)(a3 + 20);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v13 = *(int *)(a3 + 24);
  v14 = (char *)(a1 + v13);
  v15 = a2 + v13;
  *(_QWORD *)v14 = *(_QWORD *)(a2 + v13);
  *((_QWORD *)v14 + 1) = *(_QWORD *)(a2 + v13 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = (int *)type metadata accessor for SearchCallHistoryModel();
  v17 = v16[5];
  v18 = &v14[v17];
  v19 = v15 + v17;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v21 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 24);
  v21(v18, v19, v20);
  v22 = v16[6];
  v23 = &v14[v22];
  v24 = v15 + v22;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v23, v24, v25);
  v21(&v14[v16[7]], v15 + v16[7], v20);
  v21(&v14[v16[8]], v15 + v16[8], v20);
  v26 = v16[9];
  v27 = &v14[v26];
  v28 = v15 + v26;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 24))(v27, v28, v29);
  v30 = v16[10];
  v31 = &v14[v30];
  v32 = v15 + v30;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 24))(v31, v32, v33);
  return a1;
}

_OWORD *initializeWithTake for ShowCallHistoryListView(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  v13 = (int *)type metadata accessor for SearchCallHistoryModel();
  v14 = v13[5];
  v15 = &v11[v14];
  v16 = &v12[v14];
  v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32);
  v18(v15, v16, v17);
  v19 = v13[6];
  v20 = &v11[v19];
  v21 = &v12[v19];
  v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v18(&v11[v13[7]], &v12[v13[7]], v17);
  v18(&v11[v13[8]], &v12[v13[8]], v17);
  v23 = v13[9];
  v24 = &v11[v23];
  v25 = &v12[v23];
  v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = v13[10];
  v28 = &v11[v27];
  v29 = &v12[v27];
  v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  return a1;
}

uint64_t assignWithTake for ShowCallHistoryListView(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  *(_QWORD *)(a1 + 8) = a2[1];
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = (char *)(a1 + v11);
  v13 = (char *)a2 + v11;
  v14 = *(_QWORD *)((char *)a2 + v11 + 8);
  *(_QWORD *)v12 = *(_QWORD *)((char *)a2 + v11);
  *((_QWORD *)v12 + 1) = v14;
  swift_bridgeObjectRelease();
  v15 = (int *)type metadata accessor for SearchCallHistoryModel();
  v16 = v15[5];
  v17 = &v12[v16];
  v18 = &v13[v16];
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 40);
  v20(v17, v18, v19);
  v21 = v15[6];
  v22 = &v12[v21];
  v23 = &v13[v21];
  v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 40))(v22, v23, v24);
  v20(&v12[v15[7]], &v13[v15[7]], v19);
  v20(&v12[v15[8]], &v13[v15[8]], v19);
  v25 = v15[9];
  v26 = &v12[v25];
  v27 = &v13[v25];
  v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 40))(v26, v27, v28);
  v29 = v15[10];
  v30 = &v12[v29];
  v31 = &v13[v29];
  v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 40))(v30, v31, v32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShowCallHistoryListView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_243AD6800(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = type metadata accessor for ActionHandler();
    v10 = *(_QWORD *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v9;
      v12 = *(int *)(a3 + 20);
    }
    else
    {
      v11 = type metadata accessor for SearchCallHistoryModel();
      v10 = *(_QWORD *)(v11 - 8);
      v12 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(&a1[v12], a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for ShowCallHistoryListView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_243AD68B8(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)result = a2;
  }
  else
  {
    v8 = type metadata accessor for ActionHandler();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = type metadata accessor for SearchCallHistoryModel();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

uint64_t type metadata completion function for ShowCallHistoryListView()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for ActionHandler();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for SearchCallHistoryModel();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<VStack<TupleView<(<<opaque return type of View.lastComponentBottomSpacing(_:)>>.0, ListBottomView?)>>, _BackgroundStyleModifier<BackgroundStyle>>, _ContainerShapeModifier<UnevenRoundedRectangle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<VStack<TupleView<(<<opaque return type of View.lastComponentBottomSpacing(_:)>>.0, ListBottomView?)>>, _BackgroundStyleModifier<BackgroundStyle>>, _ContainerShapeModifier<UnevenRoundedRectangle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<VStack<TupleView<(<<opaque return type of View.lastComponentBottomSpacing(_:)>>.0, ListBottomView?)>>, _BackgroundStyleModifier<BackgroundStyle>>, _ContainerShapeModifier<UnevenRoundedRectangle>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(<<opaque return type of View.lastComponentBottomSpacing(_:)>>.0, ListBottomView?)>>, _BackgroundStyleModifier<BackgroundStyle>>, _ContainerShapeModifier<UnevenRoundedRectangle>>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<VStack<TupleView<(<<opaque return type of View.lastComponentBottomSpacing(_:)>>.0, ListBottomView?)>>, _BackgroundStyleModifier<BackgroundStyle>> and conformance <> ModifiedContent<A, B>();
    v2[1] = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type _ContainerShapeModifier<UnevenRoundedRectangle> and conformance _ContainerShapeModifier<A>, &demangling cache variable for type metadata for _ContainerShapeModifier<UnevenRoundedRectangle>, MEMORY[0x24BDF03D0]);
    result = MEMORY[0x249501140](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<VStack<TupleView<(<<opaque return type of View.lastComponentBottomSpacing(_:)>>.0, ListBottomView?)>>, _BackgroundStyleModifier<BackgroundStyle>>, _ContainerShapeModifier<UnevenRoundedRectangle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<VStack<TupleView<(<<opaque return type of View.lastComponentBottomSpacing(_:)>>.0, ListBottomView?)>>, _BackgroundStyleModifier<BackgroundStyle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(<<opaque return type of View.lastComponentBottomSpacing(_:)>>.0, ListBottomView?)>>, _BackgroundStyleModifier<BackgroundStyle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(<<opaque return type of View.lastComponentBottomSpacing(_:)>>.0, ListBottomView?)>>, _BackgroundStyleModifier<BackgroundStyle>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(<<opaque return type of View.lastComponentBottomSpacing(_:)>>.0, ListBottomView?)>>, _BackgroundStyleModifier<BackgroundStyle>>);
    v2[0] = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type VStack<TupleView<(<<opaque return type of View.lastComponentBottomSpacing(_:)>>.0, ListBottomView?)>> and conformance VStack<A>, &demangling cache variable for type metadata for VStack<TupleView<(<<opaque return type of View.lastComponentBottomSpacing(_:)>>.0, ListBottomView?)>>, MEMORY[0x24BDF46F8]);
    v2[1] = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type _BackgroundStyleModifier<BackgroundStyle> and conformance _BackgroundStyleModifier<A>, &demangling cache variable for type metadata for _BackgroundStyleModifier<BackgroundStyle>, MEMORY[0x24BDF06D8]);
    result = MEMORY[0x249501140](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(<<opaque return type of View.lastComponentBottomSpacing(_:)>>.0, ListBottomView?)>>, _BackgroundStyleModifier<BackgroundStyle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t partial apply for closure #1 in closure #1 in ShowCallHistoryListView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ShowCallHistoryListView() - 8) + 80);
  return closure #1 in closure #1 in ShowCallHistoryListView.body.getter(v1 + ((v3 + 16) & ~v3), a1);
}

unint64_t lazy protocol witness table accessor for type ListHeaderView and conformance ListHeaderView()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ListHeaderView and conformance ListHeaderView;
  if (!lazy protocol witness table cache variable for type ListHeaderView and conformance ListHeaderView)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for ListHeaderView, &type metadata for ListHeaderView);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ListHeaderView and conformance ListHeaderView);
  }
  return result;
}

uint64_t objectdestroyTm_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  int *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;

  v1 = type metadata accessor for ShowCallHistoryListView();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (id *)(v0 + ((v2 + 16) & ~v2));

  v4 = (char *)v3 + *(int *)(v1 + 20);
  v5 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = (char *)v3 + *(int *)(v1 + 24);
  swift_bridgeObjectRelease();
  v7 = (int *)type metadata accessor for SearchCallHistoryModel();
  v8 = &v6[v7[5]];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v10 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
  v10(v8, v9);
  v11 = &v6[v7[6]];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v10(&v6[v7[7]], v9);
  v10(&v6[v7[8]], v9);
  v13 = &v6[v7[9]];
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = &v6[v7[10]];
  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in ShowCallHistoryListView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ShowCallHistoryListView() - 8) + 80);
  return closure #1 in closure #1 in closure #1 in ShowCallHistoryListView.body.getter(a1, a2, (id *)(v3 + ((v7 + 16) & ~v7)), a3);
}

uint64_t sub_243AD6D58()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@unowned Int, @in_guaranteed SingleCallRecordModel) -> (@out <<opaque return type of View.componentSpacing(top:bottom:)>>.0)(char *a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, char *);
  uint64_t v4;
  uint64_t v5;

  v3 = *(uint64_t (**)(uint64_t, char *))(v1 + 16);
  v4 = *(_QWORD *)a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: SingleCallRecordModel));
  return v3(v4, &a1[*(int *)(v5 + 48)]);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>);
    v2[2] = type metadata accessor for ShowCallHistorySingleItemView();
    v2[3] = lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type ShowCallHistorySingleItemView and conformance ShowCallHistorySingleItemView, (uint64_t (*)(uint64_t))type metadata accessor for ShowCallHistorySingleItemView, (uint64_t)&protocol conformance descriptor for ShowCallHistorySingleItemView);
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = lazy protocol witness table accessor for type CarPlayDisambiguationListItem and conformance CarPlayDisambiguationListItem();
    result = MEMORY[0x249501140](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>);
    v2[2] = type metadata accessor for ShowPlayVoicemailSingleItemView();
    v2[3] = lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type ShowPlayVoicemailSingleItemView and conformance ShowPlayVoicemailSingleItemView, (uint64_t (*)(uint64_t))type metadata accessor for ShowPlayVoicemailSingleItemView, (uint64_t)&protocol conformance descriptor for ShowPlayVoicemailSingleItemView);
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = lazy protocol witness table accessor for type CarPlayDisambiguationListItem and conformance CarPlayDisambiguationListItem();
    result = MEMORY[0x249501140](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type CarPlayDisambiguationListItem and conformance CarPlayDisambiguationListItem()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type CarPlayDisambiguationListItem and conformance CarPlayDisambiguationListItem;
  if (!lazy protocol witness table cache variable for type CarPlayDisambiguationListItem and conformance CarPlayDisambiguationListItem)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for CarPlayDisambiguationListItem, &type metadata for CarPlayDisambiguationListItem);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CarPlayDisambiguationListItem and conformance CarPlayDisambiguationListItem);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type CGFloat and conformance CGFloat()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type CGFloat and conformance CGFloat;
  if (!lazy protocol witness table cache variable for type CGFloat and conformance CGFloat)
  {
    result = MEMORY[0x249501140](MEMORY[0x24BEE50B8], MEMORY[0x24BEE50B0]);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CGFloat and conformance CGFloat);
  }
  return result;
}

uint64_t property wrapper backing initializer of CountdownButtonStyle.model()
{
  type metadata accessor for EmergencyCountdownViewModel(0);
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type EmergencyCountdownViewModel and conformance EmergencyCountdownViewModel, type metadata accessor for EmergencyCountdownViewModel, (uint64_t)&protocol conformance descriptor for EmergencyCountdownViewModel);
  return ObservedObject.init(wrappedValue:)();
}

uint64_t CountdownButtonStyle.model.getter()
{
  return swift_retain();
}

uint64_t CountdownButtonStyle.model.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_release();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*CountdownButtonStyle.model.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t CountdownButtonStyle.$model.getter()
{
  type metadata accessor for EmergencyCountdownViewModel(0);
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type EmergencyCountdownViewModel and conformance EmergencyCountdownViewModel, type metadata accessor for EmergencyCountdownViewModel, (uint64_t)&protocol conformance descriptor for EmergencyCountdownViewModel);
  return ObservedObject.projectedValue.getter();
}

uint64_t CountdownButtonStyle.actionHandler.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for CountdownButtonStyle();
  return outlined init with copy of SearchCallHistoryBinaryButtonModel?(v1 + *(int *)(v3 + 20), a1, &demangling cache variable for type metadata for StandardActionHandler?);
}

uint64_t type metadata accessor for CountdownButtonStyle()
{
  uint64_t result;

  result = type metadata singleton initialization cache for CountdownButtonStyle;
  if (!type metadata singleton initialization cache for CountdownButtonStyle)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t CountdownButtonStyle.showCountdown.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for CountdownButtonStyle() + 24));
}

uint64_t CountdownButtonStyle.showCountdown.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for CountdownButtonStyle();
  *(_BYTE *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*CountdownButtonStyle.showCountdown.modify())()
{
  type metadata accessor for CountdownButtonStyle();
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t property wrapper backing initializer of CountdownButtonStyle.isAnimating()
{
  unsigned __int8 v1;

  State.init(wrappedValue:)();
  return v1;
}

uint64_t CountdownButtonStyle.makeBody(configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double (*v23)(uint64_t);
  uint64_t v24;
  double v25;
  double v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unsigned __int8 v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;

  v3 = v2;
  v38 = a1;
  v46 = a2;
  v45 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ClipEffect<Capsule>);
  MEMORY[0x24BDAC7A8](v45);
  v44 = (uint64_t)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Capsule();
  MEMORY[0x24BDAC7A8](v6);
  v43 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for CountdownButtonStyle();
  v8 = *(_QWORD *)(v39 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v39);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ButtonStyleConfiguration();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x24BDAC7A8](v11);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout>, _ClipEffect<Capsule>>);
  MEMORY[0x24BDAC7A8](v42);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = static Alignment.leading.getter();
  v40 = v17;
  v41 = v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v3, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for CountdownButtonStyle);
  v18 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v19 = (v13 + *(unsigned __int8 *)(v8 + 80) + v18) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v20 + v18, (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  outlined init with take of CountdownButtonStyle((uint64_t)v10, v20 + v19);
  v21 = v3;
  v22 = *(_QWORD *)(v3 + *(int *)(v39 + 28));
  v23 = *(double (**)(uint64_t))(**(_QWORD **)(v21 + 8) + 344);
  v24 = swift_retain();
  v25 = v23(v24);
  swift_release();
  swift_retain();
  if ((ButtonStyleConfiguration.isPressed.getter() & 1) != 0)
    v26 = 0.6;
  else
    v26 = 1.0;
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  v39 = v47;
  LODWORD(v38) = v48;
  v27 = v49;
  v28 = v50;
  v29 = v51;
  v30 = v52;
  v31 = *MEMORY[0x24BDEEB60];
  v32 = type metadata accessor for RoundedCornerStyle();
  v33 = (uint64_t)v43;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v43, v31, v32);
  v34 = v44;
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v33, v44, (uint64_t (*)(_QWORD))MEMORY[0x24BDF48E0]);
  *(_WORD *)(v34 + *(int *)(v45 + 36)) = 256;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v34, (uint64_t)&v15[*(int *)(v42 + 36)], &demangling cache variable for type metadata for _ClipEffect<Capsule>);
  v35 = v40;
  *(_QWORD *)v15 = v41;
  *((_QWORD *)v15 + 1) = v35;
  *((_QWORD *)v15 + 2) = partial apply for closure #1 in closure #1 in CountdownButtonStyle.makeBody(configuration:);
  *((_QWORD *)v15 + 3) = v20;
  *((_QWORD *)v15 + 4) = v22;
  *((double *)v15 + 5) = v25;
  *((double *)v15 + 6) = v26;
  *((_QWORD *)v15 + 7) = v39;
  v15[64] = v38;
  *((_QWORD *)v15 + 9) = v27;
  v15[80] = v28;
  *((_QWORD *)v15 + 11) = v29;
  *((_QWORD *)v15 + 12) = v30;
  swift_retain();
  swift_retain();
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v34, &demangling cache variable for type metadata for _ClipEffect<Capsule>);
  outlined destroy of SingleResultCallHistoryModel(v33, (uint64_t (*)(_QWORD))MEMORY[0x24BDF48E0]);
  swift_release();
  swift_release();
  return outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout>, _ClipEffect<Capsule>>((uint64_t)v15, v46, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout>, _ClipEffect<Capsule>>);
}

uint64_t closure #1 in closure #1 in CountdownButtonStyle.makeBody(configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  void (**v40)(char *, char *, char *);
  uint64_t v41;
  __n128 v42;
  char v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  char v56;
  uint64_t v57;
  uint64_t (*v58)(uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t KeyPath;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t (*v77)(uint64_t);
  uint64_t v78;
  double v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  double v87;
  double v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(char *, uint64_t);
  uint64_t v102;
  char v103;
  double v104;
  double v105;
  double v106;
  double v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  char v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t (*v129)(void);
  uint64_t v130;
  uint64_t v131;
  uint64_t (*v132)(uint64_t);
  uint64_t v133;
  void *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t (**v147)(uint64_t);
  uint64_t v148;
  uint64_t v149;
  _QWORD *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  char *v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  char *v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  void (**v196)(char *, char *, char *);
  char *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  char v205;
  uint64_t v206;
  char v207;
  uint64_t v208;
  uint64_t v209;
  char v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  char v215;
  uint64_t v216;
  char v217;
  uint64_t v218;
  uint64_t v219;
  int v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  char v224;
  uint64_t v225;
  char v226;
  uint64_t v227;
  uint64_t v228;

  v204 = a2;
  v195 = a1;
  v200 = a3;
  v201 = type metadata accessor for CountdownButtonStyle();
  v189 = *(_QWORD *)(v201 - 8);
  MEMORY[0x24BDAC7A8](v201);
  v190 = v3;
  v194 = (uint64_t)&v158 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v193 = type metadata accessor for NSNotificationCenter.Publisher();
  v192 = *(_QWORD *)(v193 - 8);
  MEMORY[0x24BDAC7A8](v193);
  v191 = (char *)&v158 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v188 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EndedGesture<_ChangedGesture<DragGesture>>);
  v187 = *(_QWORD *)(v188 - 8);
  MEMORY[0x24BDAC7A8](v188);
  v186 = (uint64_t)&v158 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Capsule();
  MEMORY[0x24BDAC7A8](v6);
  v179 = (char *)&v158 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Font.Width?);
  MEMORY[0x24BDAC7A8](v8);
  v161 = (char *)&v158 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v166 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.fontWidth(_:)>>.0);
  v163 = *(_QWORD *)(v166 - 8);
  MEMORY[0x24BDAC7A8](v166);
  v162 = (char *)&v158 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v165 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWidth(_:)>>.0, _OpacityEffect>);
  MEMORY[0x24BDAC7A8](v165);
  v164 = (char *)&v158 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.fontWeight(_:)>>.0);
  v169 = *(_QWORD *)(v170 - 8);
  MEMORY[0x24BDAC7A8](v170);
  v168 = (char *)&v158 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v167 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout>);
  MEMORY[0x24BDAC7A8](v167);
  v172 = (char *)&v158 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v171 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout>, _PaddingLayout>);
  MEMORY[0x24BDAC7A8](v171);
  v174 = (uint64_t)&v158 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v173 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>>);
  MEMORY[0x24BDAC7A8](v173);
  v175 = (uint64_t)&v158 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v176 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Capsule>>);
  MEMORY[0x24BDAC7A8](v176);
  v177 = (char *)&v158 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v184 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.gesture<A>(_:including:)>>.0);
  v181 = *(_QWORD *)(v184 - 8);
  MEMORY[0x24BDAC7A8](v184);
  v180 = (char *)&v158 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v178 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>);
  MEMORY[0x24BDAC7A8](v178);
  v185 = (char *)&v158 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v203 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>);
  v198 = *(_QWORD *)(v203 - 8);
  v19 = MEMORY[0x24BDAC7A8](v203);
  v183 = (uint64_t)&v158 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v182 = (uint64_t)&v158 - v21;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v199 = (uint64_t)&v158 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v202 = (uint64_t)&v158 - v25;
  v197 = (char *)type metadata accessor for Material();
  v196 = (void (**)(char *, char *, char *))*((_QWORD *)v197 - 1);
  MEMORY[0x24BDAC7A8](v197);
  v27 = (char *)&v158 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for ButtonStyleConfiguration.Label();
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v31 = (char *)&v158 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>);
  MEMORY[0x24BDAC7A8](v32);
  v34 = (char *)&v158 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>);
  v36 = MEMORY[0x24BDAC7A8](v35);
  v38 = (char *)&v158 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v36);
  v40 = (void (**)(char *, char *, char *))((char *)&v158 - v39);
  ButtonStyleConfiguration.label.getter();
  static Alignment.center.getter();
  v41 = 1;
  v42 = specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v34, 0.0, 1, INFINITY, 0);
  (*(void (**)(char *, uint64_t, __n128))(v29 + 8))(v31, v28, v42);
  static Material.ultraThin.getter();
  v43 = static Edge.Set.all.getter();
  v44 = &v38[*(int *)(v35 + 36)];
  v45 = (uint64_t)v196;
  v46 = (uint64_t)v197;
  v196[2](v44, v27, v197);
  v44[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _BackgroundStyleModifier<Material>)
             + 36)] = v43;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?((uint64_t)v34, (uint64_t)v38, &demangling cache variable for type metadata for ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>);
  v47 = v201;
  v48 = v204;
  (*(void (**)(char *, uint64_t))(v45 + 8))(v27, v46);
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v34, &demangling cache variable for type metadata for ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>);
  v197 = v38;
  v196 = v40;
  v49 = (uint64_t)v40;
  v50 = v202;
  outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout>, _ClipEffect<Capsule>>((uint64_t)v38, v49, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>);
  v51 = *(int *)(v47 + 24);
  v52 = v203;
  if (*(_BYTE *)(v48 + v51) == 1)
  {
    v208 = CountdownButtonStyle.countdownLabel.getter();
    v209 = v53;
    lazy protocol witness table accessor for type String and conformance String();
    v159 = Text.init<A>(_:)();
    v158 = v54;
    v56 = v55;
    v160 = v57;
    v58 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(v48 + 8) + 296);
    v59 = swift_retain();
    v60 = v58(v59);
    swift_release();
    GeometryProxy.size.getter();
    GeometryProxy.size.getter();
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    v61 = v223;
    v62 = v224;
    v63 = v225;
    v64 = v226;
    v65 = v227;
    v66 = v228;
    v67 = static HierarchicalShapeStyle.primary.getter();
    v68 = static Font.title3.getter();
    KeyPath = swift_getKeyPath();
    v208 = v159;
    v209 = v158;
    v210 = v56 & 1;
    v211 = v160;
    v212 = 0;
    v213 = v60;
    v70 = v201;
    v214 = v61;
    v215 = v62;
    v71 = v204;
    v216 = v63;
    v217 = v64;
    v218 = v65;
    v219 = v66;
    v220 = v67;
    v221 = KeyPath;
    v222 = v68;
    v72 = (char *)(v204 + *(int *)(v201 + 44));
    v73 = *((_QWORD *)v72 + 1);
    v205 = *v72;
    v206 = v73;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
    State.wrappedValue.getter();
    v74 = (uint64_t)v161;
    if (v207 == 1)
      static Font.Width.condensed.getter();
    else
      static Font.Width.standard.getter();
    v75 = v162;
    v76 = type metadata accessor for Font.Width();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56))(v74, 0, 1, v76);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _AnimationModifier<Int>>, _FrameLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _AnimationModifier<Int>>, _FrameLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>();
    View.fontWidth(_:)();
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v74, &demangling cache variable for type metadata for Font.Width?);
    outlined consume of Text.Storage(v208, v209, v210);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    v77 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(v71 + 8) + 872);
    v78 = swift_retain();
    LOBYTE(v77) = v77(v78);
    swift_release();
    v79 = 0.0;
    if ((v77 & 1) == 0)
    {
      v80 = v71 + *(int *)(v70 + 40);
      v81 = *(_BYTE *)v80;
      v82 = *(_QWORD *)(v80 + 8);
      LOBYTE(v208) = v81;
      v209 = v82;
      State.wrappedValue.getter();
      if (v205)
        v79 = 0.25;
      else
        v79 = 1.0;
    }
    v83 = v163;
    v84 = (uint64_t)v164;
    v85 = v166;
    (*(void (**)(char *, char *, uint64_t))(v163 + 16))(v164, v75, v166);
    *(double *)(v84 + *(int *)(v165 + 36)) = v79;
    (*(void (**)(char *, uint64_t))(v83 + 8))(v75, v85);
    static Font.Weight.heavy.getter();
    lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.fontWidth(_:)>>.0, _OpacityEffect> and conformance <> ModifiedContent<A, B>();
    v86 = v168;
    View.fontWeight(_:)();
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v84, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWidth(_:)>>.0, _OpacityEffect>);
    LOBYTE(v85) = static Edge.Set.leading.getter();
    GeometryProxy.size.getter();
    CountdownButtonStyle.emergencyLeadingSliderOffset(for:)(v87, v88);
    EdgeInsets.init(_all:)();
    v90 = v89;
    v92 = v91;
    v94 = v93;
    v96 = v95;
    v97 = v169;
    v98 = (uint64_t)v172;
    v99 = v170;
    (*(void (**)(char *, char *, uint64_t))(v169 + 16))(v172, v86, v170);
    v100 = v98 + *(int *)(v167 + 36);
    *(_BYTE *)v100 = v85;
    *(_QWORD *)(v100 + 8) = v90;
    *(_QWORD *)(v100 + 16) = v92;
    *(_QWORD *)(v100 + 24) = v94;
    *(_QWORD *)(v100 + 32) = v96;
    *(_BYTE *)(v100 + 40) = 0;
    v101 = *(void (**)(char *, uint64_t))(v97 + 8);
    v102 = v71;
    v101(v86, v99);
    v103 = static Edge.Set.trailing.getter();
    GeometryProxy.size.getter();
    v105 = v104;
    v107 = v106;
    v108 = *((_QWORD *)v72 + 1);
    LOBYTE(v208) = *v72;
    v209 = v108;
    State.wrappedValue.getter();
    if (v205 == 1)
      CountdownButtonStyle.emergencyLeadingSliderOffset(for:)(v105, v107);
    EdgeInsets.init(_all:)();
    v110 = v109;
    v112 = v111;
    v114 = v113;
    v116 = v115;
    v117 = v174;
    outlined init with copy of SearchCallHistoryBinaryButtonModel?(v98, v174, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout>);
    v118 = v117 + *(int *)(v171 + 36);
    *(_BYTE *)v118 = v103;
    *(_QWORD *)(v118 + 8) = v110;
    *(_QWORD *)(v118 + 16) = v112;
    *(_QWORD *)(v118 + 24) = v114;
    *(_QWORD *)(v118 + 32) = v116;
    *(_BYTE *)(v118 + 40) = 0;
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v98, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout>);
    v119 = v180;
    if (one-time initialization token for emergencyRed != -1)
      swift_once();
    v120 = static Color.emergencyRed;
    swift_retain();
    v121 = static Edge.Set.all.getter();
    v122 = v175;
    outlined init with copy of SearchCallHistoryBinaryButtonModel?(v117, v175, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout>, _PaddingLayout>);
    v123 = v122 + *(int *)(v173 + 36);
    *(_QWORD *)v123 = v120;
    *(_BYTE *)(v123 + 8) = v121;
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v117, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout>, _PaddingLayout>);
    v124 = *MEMORY[0x24BDEEB60];
    v125 = type metadata accessor for RoundedCornerStyle();
    v126 = (uint64_t)v179;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v125 - 8) + 104))(v179, v124, v125);
    v127 = (uint64_t)v177;
    v128 = (uint64_t)&v177[*(int *)(v176 + 36)];
    v129 = MEMORY[0x24BDF48E0];
    outlined init with copy of SearchCallHistoryBinaryButtonModel(v126, v128, (uint64_t (*)(_QWORD))MEMORY[0x24BDF48E0]);
    *(_WORD *)(v128
             + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ClipEffect<Capsule>)
                      + 36)) = 256;
    outlined init with copy of SearchCallHistoryBinaryButtonModel?(v122, v127, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>>);
    outlined destroy of SingleResultCallHistoryModel(v126, (uint64_t (*)(_QWORD))v129);
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v122, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>>);
    v130 = v186;
    CountdownButtonStyle.dragGesture.getter(v186);
    static GestureMask.all.getter();
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout>, _ClipEffect<Capsule>> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Capsule>> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Capsule>>, (uint64_t (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>);
    lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type _EndedGesture<_ChangedGesture<DragGesture>> and conformance _EndedGesture<A>, &demangling cache variable for type metadata for _EndedGesture<_ChangedGesture<DragGesture>>, MEMORY[0x24BDEC408]);
    v131 = v188;
    View.gesture<A>(_:including:)();
    (*(void (**)(uint64_t, uint64_t))(v187 + 8))(v130, v131);
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v127, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Capsule>>);
    v132 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(v102 + 8) + 1088);
    v133 = swift_retain();
    v134 = (void *)v132(v133);
    swift_release();
    if (one-time initialization token for counterPosition != -1)
      swift_once();
    v135 = v191;
    NSNotificationCenter.publisher(for:object:)();

    v136 = v194;
    outlined init with copy of SearchCallHistoryBinaryButtonModel(v102, v194, (uint64_t (*)(_QWORD))type metadata accessor for CountdownButtonStyle);
    v137 = *(unsigned __int8 *)(v189 + 80);
    v195 = ((v137 + 16) & ~v137) + v190;
    v138 = (v137 + 16) & ~v137;
    v201 = v138;
    v190 = v137 | 7;
    v139 = swift_allocObject();
    outlined init with take of CountdownButtonStyle(v136, v139 + v138);
    v140 = v181;
    v141 = (uint64_t)v185;
    v142 = v184;
    (*(void (**)(char *, char *, uint64_t))(v181 + 16))(v185, v119, v184);
    v143 = v178;
    v144 = v192;
    v145 = v119;
    v146 = v193;
    (*(void (**)(uint64_t, char *, uint64_t))(v192 + 16))(v141 + *(int *)(v178 + 52), v135, v193);
    v147 = (uint64_t (**)(uint64_t))(v141 + *(int *)(v143 + 56));
    *v147 = partial apply for closure #1 in closure #1 in closure #1 in CountdownButtonStyle.makeBody(configuration:);
    v147[1] = (uint64_t (*)(uint64_t))v139;
    (*(void (**)(char *, uint64_t))(v144 + 8))(v135, v146);
    (*(void (**)(char *, uint64_t))(v140 + 8))(v145, v142);
    outlined init with copy of SearchCallHistoryBinaryButtonModel(v204, v136, (uint64_t (*)(_QWORD))type metadata accessor for CountdownButtonStyle);
    v148 = swift_allocObject();
    outlined init with take of CountdownButtonStyle(v136, v148 + v201);
    v149 = v183;
    outlined init with copy of SearchCallHistoryBinaryButtonModel?(v141, v183, &demangling cache variable for type metadata for SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>);
    v52 = v203;
    v150 = (_QWORD *)(v149 + *(int *)(v203 + 36));
    *v150 = 0;
    v150[1] = 0;
    v150[2] = partial apply for closure #2 in closure #1 in closure #1 in CountdownButtonStyle.makeBody(configuration:);
    v150[3] = v148;
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v141, &demangling cache variable for type metadata for SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>);
    v151 = v182;
    outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout>, _ClipEffect<Capsule>>(v149, v182, &demangling cache variable for type metadata for ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>);
    v50 = v202;
    outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout>, _ClipEffect<Capsule>>(v151, v202, &demangling cache variable for type metadata for ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>);
    v41 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v198 + 56))(v50, v41, 1, v52);
  v152 = (uint64_t)v196;
  v153 = (uint64_t)v197;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?((uint64_t)v196, (uint64_t)v197, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>);
  v154 = v199;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v50, v199, &demangling cache variable for type metadata for ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?);
  v155 = v200;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v153, v200, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>);
  v156 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?));
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v154, v155 + *(int *)(v156 + 48), &demangling cache variable for type metadata for ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v50, &demangling cache variable for type metadata for ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v152, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v154, &demangling cache variable for type metadata for ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?);
  return outlined destroy of SearchCallHistoryBinaryButtonModel?(v153, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>);
}

uint64_t sub_243AD8660()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for ButtonStyleConfiguration();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = type metadata accessor for CountdownButtonStyle();
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  v7 = v0 + ((v3 + v4 + v6) & ~v6) + *(int *)(v5 + 20);
  v8 = type metadata accessor for StandardActionHandler();
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v7, v8);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t outlined init with take of CountdownButtonStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CountdownButtonStyle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t partial apply for closure #1 in closure #1 in CountdownButtonStyle.makeBody(configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(type metadata accessor for ButtonStyleConfiguration() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CountdownButtonStyle() - 8) + 80);
  return closure #1 in closure #1 in CountdownButtonStyle.makeBody(configuration:)(a1, v2 + ((v6 + v7 + v8) & ~v8), a2);
}

uint64_t CountdownButtonStyle.countdownLabel.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char v7;

  type metadata accessor for CountdownButtonStyle();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.wrappedValue.getter();
  v1 = *(_QWORD **)(v0 + 8);
  v2 = 1248;
  if (v7)
    v2 = 824;
  v3 = *(uint64_t (**)(uint64_t))(*v1 + v2);
  v4 = swift_retain();
  v5 = v3(v4);
  swift_release();
  return v5;
}

double CountdownButtonStyle.emergencyLeadingSliderOffset(for:)(double a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  double v13;
  double v14;
  uint64_t *v15;
  uint64_t v16;
  double (*v17)(uint64_t);
  uint64_t v18;
  double v19;
  double (*v20)(uint64_t);
  uint64_t v21;
  double v22;
  double v23;
  void (*v24)(BOOL);
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t);
  uint64_t v30;
  double (*v31)(uint64_t);
  uint64_t v32;
  double v33;
  void (*v34)(uint64_t, double);
  uint64_t v35;
  uint64_t v37;
  double v38;
  uint64_t v39;
  char v40;

  v3 = v2;
  v6 = type metadata accessor for CountdownButtonStyle();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v2 + *(int *)(v7 + 44);
  v11 = *(_BYTE *)v10;
  v12 = *(_QWORD *)(v10 + 8);
  LOBYTE(v38) = *(_BYTE *)v10;
  v39 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.wrappedValue.getter();
  v13 = 0.0;
  if (v40 == 1)
    v13 = *(double *)(v2 + *(int *)(v6 + 36));
  v14 = a1 - a2 - v13;
  LOBYTE(v38) = v11;
  v39 = v12;
  State.wrappedValue.getter();
  v15 = *(uint64_t **)(v2 + 8);
  v16 = *v15;
  if ((v40 & 1) == 0)
  {
    v31 = *(double (**)(uint64_t))(v16 + 344);
    v32 = swift_retain();
    v33 = v31(v32);
    swift_release();
    v34 = *(void (**)(uint64_t, double))(*v15 + 1072);
    v19 = v14 * v33 / 3.0;
    v35 = swift_retain();
    v34(v35, v19);
    swift_release();
    return v19;
  }
  v17 = *(double (**)(uint64_t))(v16 + 1064);
  v18 = swift_retain();
  v19 = v17(v18);
  swift_release();
  v20 = *(double (**)(uint64_t))(*v15 + 1016);
  v21 = swift_retain();
  v22 = v20(v21);
  swift_release();
  if (v14 < 0.0)
  {
    __break(1u);
  }
  else
  {
    v23 = v19 + v22;
    if (v19 + v22 <= 0.0)
      v23 = 0.0;
    if (v14 >= v23)
      v19 = v23;
    else
      v19 = v14;
    v22 = v14 + -3.0;
    v24 = *(void (**)(BOOL))(*v15 + 976);
    swift_retain();
    v24(v14 + -3.0 <= v19);
    swift_release();
    if (one-time initialization token for phoneSnippetUI == -1)
      goto LABEL_11;
  }
  swift_once();
LABEL_11:
  v25 = type metadata accessor for Logger();
  __swift_project_value_buffer(v25, (uint64_t)static Logger.phoneSnippetUI);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v3, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for CountdownButtonStyle);
  v26 = Logger.logObject.getter();
  v27 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = swift_slowAlloc();
    *(_DWORD *)v28 = 67109632;
    v29 = *(uint64_t (**)(uint64_t))(**((_QWORD **)v9 + 1) + 968);
    v30 = swift_retain();
    LOBYTE(v29) = v29(v30);
    swift_release();
    outlined destroy of SingleResultCallHistoryModel((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for CountdownButtonStyle);
    LODWORD(v38) = v29 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v28 + 8) = 2048;
    v38 = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v28 + 18) = 2048;
    v38 = v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_243ABD000, v26, v27, "#CountdownButtonStyle sliderIsAtMax=%{BOOL}d newOffset=%f av-maxt%f", (uint8_t *)v28, 0x1Cu);
    MEMORY[0x2495011B8](v28, -1, -1);
  }
  else
  {
    outlined destroy of SingleResultCallHistoryModel((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for CountdownButtonStyle);
  }

  return v19;
}

uint64_t CountdownButtonStyle.dragGesture.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = v1;
  v21 = a1;
  v3 = type metadata accessor for CountdownButtonStyle();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for LocalCoordinateSpace();
  MEMORY[0x24BDAC7A8](v7);
  v8 = type metadata accessor for DragGesture();
  v19 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ChangedGesture<DragGesture>);
  v20 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  static CoordinateSpaceProtocol<>.local.getter();
  DragGesture.init<A>(minimumDistance:coordinateSpace:)();
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v2, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for CountdownButtonStyle);
  v14 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v15 = swift_allocObject();
  outlined init with take of CountdownButtonStyle((uint64_t)v6, v15 + v14);
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type DragGesture and conformance DragGesture, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB538], MEMORY[0x24BDEB528]);
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type DragGesture.Value and conformance DragGesture.Value, MEMORY[0x24BDEB508], MEMORY[0x24BDEB518]);
  Gesture<>.onChanged(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v10, v8);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v18, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for CountdownButtonStyle);
  v16 = swift_allocObject();
  outlined init with take of CountdownButtonStyle((uint64_t)v6, v16 + v14);
  lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type _ChangedGesture<DragGesture> and conformance _ChangedGesture<A>, &demangling cache variable for type metadata for _ChangedGesture<DragGesture>, MEMORY[0x24BDED578]);
  Gesture.onEnded(_:)();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v13, v11);
}

void closure #1 in closure #1 in closure #1 in CountdownButtonStyle.makeBody(configuration:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  _QWORD v24[3];
  _QWORD v25[5];
  __int128 v26;
  __int128 v27;

  v3 = type metadata accessor for AnimationCompletionCriteria();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CountdownButtonStyle();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = Notification.userInfo.getter();
  if (!v11)
  {
    v26 = 0u;
    v27 = 0u;
LABEL_12:
    outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)&v26, &demangling cache variable for type metadata for Any?);
    goto LABEL_13;
  }
  v12 = v11;
  if (one-time initialization token for animationStepKey != -1)
    swift_once();
  v24[1] = static EmergencyCountdownConfiguration.animationStepKey;
  v24[2] = *(_QWORD *)algn_2572EAFF8;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)();
  if (*(_QWORD *)(v12 + 16) && (v13 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v25), (v14 & 1) != 0))
  {
    outlined init with copy of Any(*(_QWORD *)(v12 + 56) + 32 * v13, (uint64_t)&v26);
  }
  else
  {
    v26 = 0u;
    v27 = 0u;
  }
  swift_bridgeObjectRelease();
  outlined destroy of AnyHashable((uint64_t)v25);
  if (!*((_QWORD *)&v27 + 1))
    goto LABEL_12;
  v15 = swift_dynamicCast();
  if ((v15 & 1) != 0)
  {
    v16 = v25[0];
    MEMORY[0x24BDAC7A8](v15);
    v24[-2] = a2;
    v24[-1] = v16;
    outlined init with copy of SearchCallHistoryBinaryButtonModel(a2, (uint64_t)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for CountdownButtonStyle);
    v17 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v18 = (v9 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
    v19 = swift_allocObject();
    outlined init with take of CountdownButtonStyle((uint64_t)v10, v19 + v17);
    *(_QWORD *)(v19 + v18) = v16;
    static AnimationCompletionCriteria.logicallyComplete.getter();
    withAnimation<A>(_:completionCriteria:_:completion:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return;
  }
LABEL_13:
  if (one-time initialization token for phoneSnippetUI != -1)
    swift_once();
  v20 = type metadata accessor for Logger();
  __swift_project_value_buffer(v20, (uint64_t)static Logger.phoneSnippetUI);
  v21 = Logger.logObject.getter();
  v22 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v23 = 0;
    _os_log_impl(&dword_243ABD000, v21, v22, "#CountdownButtonStyle did not receive a CGFloat for currentAnimationStep. Not updating animation", v23, 2u);
    MEMORY[0x2495011B8](v23, -1, -1);
  }

}

uint64_t closure #1 in closure #1 in closure #1 in closure #1 in CountdownButtonStyle.makeBody(configuration:)(uint64_t a1, double a2)
{
  void (*v4)(uint64_t, double);
  uint64_t v5;

  type metadata accessor for CountdownButtonStyle();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.wrappedValue.setter();
  v4 = *(void (**)(uint64_t, double))(**(_QWORD **)(a1 + 8) + 1216);
  v5 = swift_retain();
  v4(v5, a2);
  return swift_release();
}

uint64_t closure #2 in closure #1 in closure #1 in closure #1 in CountdownButtonStyle.makeBody(configuration:)()
{
  type metadata accessor for CountdownButtonStyle();
  return withAnimation<A>(_:_:)();
}

uint64_t closure #1 in closure #2 in closure #1 in closure #1 in closure #1 in CountdownButtonStyle.makeBody(configuration:)(uint64_t a1, double a2)
{
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD, _QWORD);

  v3 = *(_QWORD *)(a1 + 8);
  v4 = a1 + *(int *)(type metadata accessor for CountdownButtonStyle() + 20);
  v5 = *(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)v3 + 1224);
  swift_retain();
  v5(v4, *(_QWORD *)&a2, 0);
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  return State.wrappedValue.setter();
}

uint64_t closure #2 in closure #1 in closure #1 in CountdownButtonStyle.makeBody(configuration:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  void *v12;
  void (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v16;

  v2 = type metadata accessor for CountdownButtonStyle();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for phoneSnippetUI != -1)
    swift_once();
  v5 = type metadata accessor for Logger();
  __swift_project_value_buffer(v5, (uint64_t)static Logger.phoneSnippetUI);
  v6 = Logger.logObject.getter();
  v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_243ABD000, v6, v7, "#CountdownButtonStyle view disappeared. Removing self from NotificationCenter", v8, 2u);
    MEMORY[0x2495011B8](v8, -1, -1);
  }

  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 1088);
  v11 = swift_retain();
  v12 = (void *)v10(v11);
  swift_release();
  outlined init with copy of SearchCallHistoryBinaryButtonModel(a1, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for CountdownButtonStyle);
  objc_msgSend(v12, sel_removeObserver_, _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)());

  swift_unknownObjectRelease();
  v13 = *(void (**)(uint64_t))(*(_QWORD *)v9 + 1200);
  v14 = swift_retain();
  v13(v14);
  return swift_release();
}

uint64_t closure #1 in CountdownButtonStyle.dragGesture.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  char v7;
  uint64_t result;
  void (*v9)(uint64_t);
  uint64_t v10;

  v2 = *(_QWORD *)(a2 + 8);
  swift_retain();
  v3 = DragGesture.Value.startLocation.getter();
  (*(void (**)(uint64_t))(*(_QWORD *)v2 + 1000))(v3);
  swift_release();
  swift_retain();
  v4 = DragGesture.Value.translation.getter();
  (*(void (**)(uint64_t))(*(_QWORD *)v2 + 1024))(v4);
  swift_release();
  type metadata accessor for CountdownButtonStyle();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.wrappedValue.setter();
  v5 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 1160);
  v6 = swift_retain();
  v7 = v5(v6);
  result = swift_release();
  if ((v7 & 1) == 0)
  {
    v9 = *(void (**)(uint64_t))(*(_QWORD *)v2 + 1280);
    v10 = swift_retain();
    v9(v10);
    return swift_release();
  }
  return result;
}

uint64_t closure #2 in CountdownButtonStyle.dragGesture.getter(uint64_t a1, uint64_t a2)
{
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  void (*v17)(uint64_t);
  uint64_t v18;

  v3 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(a2 + 8) + 968);
  v4 = swift_retain();
  LOBYTE(v3) = v3(v4);
  swift_release();
  if ((v3 & 1) != 0)
  {
    if (one-time initialization token for phoneSnippetUI != -1)
      swift_once();
    v5 = type metadata accessor for Logger();
    __swift_project_value_buffer(v5, (uint64_t)static Logger.phoneSnippetUI);
    v6 = Logger.logObject.getter();
    v7 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_243ABD000, v6, v7, "#CountdownButtonStyle sliding ended at max. Calling emergency services", v8, 2u);
      MEMORY[0x2495011B8](v8, -1, -1);
    }

    v9 = *(_QWORD *)(a2 + 8);
    v10 = a2 + *(int *)(type metadata accessor for CountdownButtonStyle() + 20);
    v11 = *(void (**)(uint64_t))(*(_QWORD *)v9 + 1264);
    swift_retain();
    v11(v10);
    return swift_release();
  }
  else
  {
    type metadata accessor for CountdownButtonStyle();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
    State.wrappedValue.setter();
    if (one-time initialization token for phoneSnippetUI != -1)
      swift_once();
    v13 = type metadata accessor for Logger();
    __swift_project_value_buffer(v13, (uint64_t)static Logger.phoneSnippetUI);
    v14 = Logger.logObject.getter();
    v15 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_243ABD000, v14, v15, "#CountdownButtonStyle sliding ended but not at the end. Resuming timer", v16, 2u);
      MEMORY[0x2495011B8](v16, -1, -1);
    }

    v17 = *(void (**)(uint64_t))(**(_QWORD **)(a2 + 8) + 1288);
    v18 = swift_retain();
    v17(v18);
    return swift_release();
  }
}

uint64_t Comparable.clamped(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v3 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  max<A>(_:_:)();
  type metadata accessor for ClosedRange();
  min<A>(_:_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, a2);
}

uint64_t CountdownButtonStyle.init(model:actionHandler:showCountdown:)@<X0>(uint64_t a1@<X1>, char a2@<W2>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t result;
  char v13;
  uint64_t v14;

  type metadata accessor for EmergencyCountdownViewModel(0);
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type EmergencyCountdownViewModel and conformance EmergencyCountdownViewModel, type metadata accessor for EmergencyCountdownViewModel, (uint64_t)&protocol conformance descriptor for EmergencyCountdownViewModel);
  *a3 = ObservedObject.init(wrappedValue:)();
  a3[1] = v6;
  v7 = (int *)type metadata accessor for CountdownButtonStyle();
  outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout>, _ClipEffect<Capsule>>(a1, (uint64_t)a3 + v7[5], &demangling cache variable for type metadata for StandardActionHandler?);
  *((_BYTE *)a3 + v7[6]) = a2;
  v8 = v7[7];
  *(uint64_t *)((char *)a3 + v8) = static Animation.easeInOut(duration:)();
  v9 = v7[8];
  *(uint64_t *)((char *)a3 + v9) = static Animation.easeInOut(duration:)();
  *(uint64_t *)((char *)a3 + v7[9]) = 0x4020000000000000;
  v10 = (char *)a3 + v7[10];
  State.init(wrappedValue:)();
  *v10 = v13;
  *((_QWORD *)v10 + 1) = v14;
  v11 = (char *)a3 + v7[11];
  result = State.init(wrappedValue:)();
  *v11 = v13;
  *((_QWORD *)v11 + 1) = v14;
  return result;
}

uint64_t associated type witness table accessor for ButtonStyle.Body : View in CountdownButtonStyle()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_243AD9B14@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 8);
  return swift_retain();
}

uint64_t sub_243AD9B20(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 8) = v3;
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for CountdownButtonStyle(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for StandardActionHandler();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_retain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = a3[7];
    *((_BYTE *)v4 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    *(_QWORD *)((char *)v4 + v16) = *(_QWORD *)((char *)a2 + v16);
    v17 = a3[9];
    *(_QWORD *)((char *)v4 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
    *(_QWORD *)((char *)v4 + v17) = *(_QWORD *)((char *)a2 + v17);
    v18 = a3[10];
    v19 = a3[11];
    v20 = (char *)v4 + v18;
    v21 = (char *)a2 + v18;
    *v20 = *v21;
    *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
    v22 = (char *)v4 + v19;
    v23 = (char *)a2 + v19;
    *v22 = *v23;
    *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t destroy for CountdownButtonStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for StandardActionHandler();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *initializeWithCopy for CountdownButtonStyle(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for StandardActionHandler();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_retain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v14) = *(_QWORD *)((char *)a2 + v14);
  v15 = a3[9];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  *(_QWORD *)((char *)a1 + v15) = *(_QWORD *)((char *)a2 + v15);
  v16 = a3[10];
  v17 = a3[11];
  v18 = (char *)a1 + v16;
  v19 = (char *)a2 + v16;
  *v18 = *v19;
  *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
  v20 = (char *)a1 + v17;
  v21 = (char *)a2 + v17;
  *v20 = *v21;
  *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for CountdownButtonStyle(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for StandardActionHandler();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_retain();
  swift_release();
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  swift_retain();
  swift_release();
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  v15 = a3[10];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  *v16 = *v17;
  *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
  swift_retain();
  swift_release();
  v18 = a3[11];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  *v19 = *v20;
  *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *initializeWithTake for CountdownButtonStyle(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for StandardActionHandler();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v12) = *(_QWORD *)((char *)a2 + v12);
  v13 = a3[9];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  *(_QWORD *)((char *)a1 + v13) = *(_QWORD *)((char *)a2 + v13);
  v14 = a3[11];
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  *(_OWORD *)((char *)a1 + v14) = *(_OWORD *)((char *)a2 + v14);
  return a1;
}

_QWORD *assignWithTake for CountdownButtonStyle(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for StandardActionHandler();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  v16 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v16) = *(_QWORD *)((char *)a2 + v16);
  swift_release();
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  swift_release();
  v17 = a3[10];
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  *v18 = *v19;
  *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
  swift_release();
  v20 = a3[11];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  *v21 = *v22;
  *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CountdownButtonStyle()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_243ADA368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for CountdownButtonStyle()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_243ADA3F4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void type metadata completion function for CountdownButtonStyle()
{
  unint64_t v0;

  type metadata accessor for StandardActionHandler?();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void type metadata accessor for StandardActionHandler?()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for StandardActionHandler?)
  {
    type metadata accessor for StandardActionHandler();
    v0 = type metadata accessor for Optional();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for StandardActionHandler?);
  }
}

uint64_t sub_243ADA568()
{
  return lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout>, _ClipEffect<Capsule>> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout>, _ClipEffect<Capsule>> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout>, _ClipEffect<Capsule>>, lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>);
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>()
{
  return lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout>, lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect> and conformance <> ModifiedContent<A, B>, MEMORY[0x24BDEBED8]);
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect> and conformance <> ModifiedContent<A, B>()
{
  return lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, (uint64_t (*)(void))lazy protocol witness table accessor for type ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>> and conformance <> ModifiedContent<A, B>, MEMORY[0x24BDECC30]);
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = a3();
    v9[1] = a4;
    result = MEMORY[0x249501140](MEMORY[0x24BDED300], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>);
    v2[0] = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>> and conformance ZStack<A>, &demangling cache variable for type metadata for ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, MEMORY[0x24BDF4758]);
    v2[1] = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type _AnimationModifier<CGFloat> and conformance _AnimationModifier<A>, &demangling cache variable for type metadata for _AnimationModifier<CGFloat>, MEMORY[0x24BDEEC08]);
    result = MEMORY[0x249501140](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type String and conformance String()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type String and conformance String;
  if (!lazy protocol witness table cache variable for type String and conformance String)
  {
    result = MEMORY[0x249501140](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type String and conformance String);
  }
  return result;
}

uint64_t sub_243ADA724@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_243ADA74C()
{
  swift_retain();
  return EnvironmentValues.font.setter();
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _AnimationModifier<Int>>, _FrameLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _AnimationModifier<Int>>, _FrameLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _AnimationModifier<Int>>, _FrameLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _AnimationModifier<Int>>, _FrameLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _AnimationModifier<Int>>, _FrameLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>> and conformance <> ModifiedContent<A, B>();
    v2[1] = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Font?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Font?>, MEMORY[0x24BDF1020]);
    result = MEMORY[0x249501140](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _AnimationModifier<Int>>, _FrameLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _AnimationModifier<Int>>, _FrameLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _AnimationModifier<Int>>, _FrameLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _AnimationModifier<Int>>, _FrameLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Text, _AnimationModifier<Int>>, _FrameLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _AnimationModifier<Int>>, _FrameLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _AnimationModifier<Int>>, _FrameLayout>, (uint64_t (*)(void))lazy protocol witness table accessor for type ModifiedContent<Text, _AnimationModifier<Int>> and conformance <> ModifiedContent<A, B>, MEMORY[0x24BDEBED8]);
    v2[1] = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type _ForegroundStyleModifier<HierarchicalShapeStyle> and conformance _ForegroundStyleModifier<A>, &demangling cache variable for type metadata for _ForegroundStyleModifier<HierarchicalShapeStyle>, MEMORY[0x24BDF0718]);
    result = MEMORY[0x249501140](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _AnimationModifier<Int>>, _FrameLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Text, _AnimationModifier<Int>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<Text, _AnimationModifier<Int>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Text, _AnimationModifier<Int>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Text, _AnimationModifier<Int>>);
    v2 = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type _AnimationModifier<Int> and conformance _AnimationModifier<A>, &demangling cache variable for type metadata for _AnimationModifier<Int>, MEMORY[0x24BDEEC08]);
    v3[0] = MEMORY[0x24BDF1F78];
    v3[1] = v2;
    result = MEMORY[0x249501140](MEMORY[0x24BDED300], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Text, _AnimationModifier<Int>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t outlined consume of Text.Storage(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release();
  else
    return swift_bridgeObjectRelease();
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.fontWidth(_:)>>.0, _OpacityEffect> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.fontWidth(_:)>>.0, _OpacityEffect> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.fontWidth(_:)>>.0, _OpacityEffect> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWidth(_:)>>.0, _OpacityEffect>);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _AnimationModifier<Int>>, _FrameLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>);
    v2[3] = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _AnimationModifier<Int>>, _FrameLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = MEMORY[0x24BDECC30];
    result = MEMORY[0x249501140](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.fontWidth(_:)>>.0, _OpacityEffect> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout>, _ClipEffect<Capsule>> and conformance <> ModifiedContent<A, B>(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = a3();
    v7[1] = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type _ClipEffect<Capsule> and conformance _ClipEffect<A>, &demangling cache variable for type metadata for _ClipEffect<Capsule>, MEMORY[0x24BDEB958]);
    result = MEMORY[0x249501140](MEMORY[0x24BDED300], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout>, _PaddingLayout>, (uint64_t (*)(void))lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout> and conformance <> ModifiedContent<A, B>, MEMORY[0x24BDECC58]);
    v2[1] = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type _BackgroundStyleModifier<Color> and conformance _BackgroundStyleModifier<A>, &demangling cache variable for type metadata for _BackgroundStyleModifier<Color>, MEMORY[0x24BDF06D8]);
    result = MEMORY[0x249501140](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout>);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWidth(_:)>>.0, _OpacityEffect>);
    v2[3] = lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.fontWidth(_:)>>.0, _OpacityEffect> and conformance <> ModifiedContent<A, B>();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = MEMORY[0x24BDECC58];
    result = MEMORY[0x249501140](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in CountdownButtonStyle.makeBody(configuration:)(uint64_t a1)
{
  return partial apply for closure #1 in closure #1 in closure #1 in CountdownButtonStyle.makeBody(configuration:)(a1, (uint64_t (*)(uint64_t, uint64_t))closure #1 in closure #1 in closure #1 in CountdownButtonStyle.makeBody(configuration:));
}

uint64_t partial apply for closure #2 in closure #1 in closure #1 in CountdownButtonStyle.makeBody(configuration:)()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CountdownButtonStyle() - 8) + 80);
  return closure #2 in closure #1 in closure #1 in CountdownButtonStyle.makeBody(configuration:)(v0 + ((v1 + 16) & ~v1));
}

uint64_t outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout>, _ClipEffect<Capsule>>(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t outlined destroy of AnyHashable(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 8))();
  return a1;
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in closure #1 in CountdownButtonStyle.makeBody(configuration:)()
{
  uint64_t v0;

  return closure #1 in closure #1 in closure #1 in closure #1 in CountdownButtonStyle.makeBody(configuration:)(*(_QWORD *)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t sub_243ADAC6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for CountdownButtonStyle();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  v3 = v0 + ((v2 + 16) & ~v2) + *(int *)(v1 + 20);
  v4 = type metadata accessor for StandardActionHandler();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in closure #1 in closure #1 in closure #1 in CountdownButtonStyle.makeBody(configuration:)()
{
  type metadata accessor for CountdownButtonStyle();
  return closure #2 in closure #1 in closure #1 in closure #1 in CountdownButtonStyle.makeBody(configuration:)();
}

uint64_t outlined init with copy of Any(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t partial apply for closure #1 in closure #2 in closure #1 in closure #1 in closure #1 in CountdownButtonStyle.makeBody(configuration:)()
{
  uint64_t v0;

  return closure #1 in closure #2 in closure #1 in closure #1 in closure #1 in CountdownButtonStyle.makeBody(configuration:)(*(_QWORD *)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t partial apply for closure #1 in CountdownButtonStyle.dragGesture.getter(uint64_t a1)
{
  return partial apply for closure #1 in closure #1 in closure #1 in CountdownButtonStyle.makeBody(configuration:)(a1, closure #1 in CountdownButtonStyle.dragGesture.getter);
}

uint64_t objectdestroy_5Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for CountdownButtonStyle();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  v3 = v0 + ((v2 + 16) & ~v2) + *(int *)(v1 + 20);
  v4 = type metadata accessor for StandardActionHandler();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in CountdownButtonStyle.dragGesture.getter(uint64_t a1)
{
  return partial apply for closure #1 in closure #1 in closure #1 in CountdownButtonStyle.makeBody(configuration:)(a1, closure #2 in CountdownButtonStyle.dragGesture.getter);
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in CountdownButtonStyle.makeBody(configuration:)(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CountdownButtonStyle() - 8) + 80);
  return a2(a1, v2 + ((v4 + 16) & ~v4));
}

uint64_t ContactHeaderView.model.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return outlined init with copy of PhoneContactHeader(v1 + 24, a1);
}

uint64_t outlined init with copy of PhoneContactHeader(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for PhoneContactHeader(a2, a1);
  return a2;
}

uint64_t ContactHeaderView.model.setter(uint64_t a1)
{
  uint64_t v1;

  return outlined assign with take of PhoneContactHeader(a1, v1 + 24);
}

uint64_t outlined assign with take of PhoneContactHeader(uint64_t a1, uint64_t a2)
{
  assignWithTake for PhoneContactHeader(a2, a1);
  return a2;
}

uint64_t (*ContactHeaderView.model.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t ContactHeaderView.body.getter@<X0>(uint64_t a1@<X8>)
{
  id *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t result;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;
  __int128 v74;
  __int128 v75;
  uint64_t v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  __int128 v80;
  __int128 v81;
  uint64_t v82;
  __int128 v83;
  __int128 v84;
  uint64_t v85;
  __int128 v86;
  uint64_t v87;
  uint64_t v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;

  v2 = (uint64_t)v1;
  v61 = a1;
  v3 = type metadata accessor for ImageElementView();
  v51 = *(_QWORD *)(v3 - 8);
  v52 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for SimpleItemRichView();
  v55 = *(_QWORD *)(v60 - 8);
  v6 = MEMORY[0x24BDAC7A8](v60);
  v53 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v54 = (char *)&v51 - v8;
  v57 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.componentSpacing(top:bottom:)>>.0, SimpleItemRichView>.Storage);
  MEMORY[0x24BDAC7A8](v57);
  v59 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(_ConditionalContent<ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>, ImageElementView>, ModifiedContent<Text, _FlexFrameLayout>)>>);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>, ImageElementView>, ModifiedContent<Text, _FlexFrameLayout>)>>, _PaddingLayout>);
  MEMORY[0x24BDAC7A8](v56);
  v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.componentSpacing(top:bottom:)>>.0);
  v15 = *(_QWORD *)(v58 - 8);
  v16 = MEMORY[0x24BDAC7A8](v58);
  v18 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v51 - v19;
  if (*v1)
  {
    v21 = *v1;
    dispatch thunk of Context.currentIdiom.getter();

    if ((VRXIdiom.isCarPlay.getter() & 1) != 0)
    {
      v22 = *(_QWORD *)(v2 + 16);
      *(_QWORD *)v12 = static VerticalAlignment.center.getter();
      *((_QWORD *)v12 + 1) = v22;
      v12[16] = 0;
      v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, TupleView<(_ConditionalContent<ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>, ImageElementView>, ModifiedContent<Text, _FlexFrameLayout>)>>);
      closure #1 in ContactHeaderView.body.getter(v2, (uint64_t)&v12[*(int *)(v23 + 44)]);
      v24 = static Edge.Set.horizontal.getter();
      EdgeInsets.init(_all:)();
      v26 = v25;
      v28 = v27;
      v30 = v29;
      v32 = v31;
      outlined init with copy of SearchCallHistoryBinaryButtonModel?((uint64_t)v12, (uint64_t)v14, &demangling cache variable for type metadata for HStack<TupleView<(_ConditionalContent<ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>, ImageElementView>, ModifiedContent<Text, _FlexFrameLayout>)>>);
      v33 = v56;
      v34 = &v14[*(int *)(v56 + 36)];
      *v34 = v24;
      *((_QWORD *)v34 + 1) = v26;
      *((_QWORD *)v34 + 2) = v28;
      *((_QWORD *)v34 + 3) = v30;
      *((_QWORD *)v34 + 4) = v32;
      v34[40] = 0;
      outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v12, &demangling cache variable for type metadata for HStack<TupleView<(_ConditionalContent<ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>, ImageElementView>, ModifiedContent<Text, _FlexFrameLayout>)>>);
      v35 = lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>, ImageElementView>, ModifiedContent<Text, _FlexFrameLayout>)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>();
      View.componentSpacing(top:bottom:)();
      outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v14, &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>, ImageElementView>, ModifiedContent<Text, _FlexFrameLayout>)>>, _PaddingLayout>);
      v36 = v58;
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v20, v18, v58);
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v59, v20, v36);
      swift_storeEnumTagMultiPayload();
      *(_QWORD *)&v89 = v33;
      *((_QWORD *)&v89 + 1) = v35;
      swift_getOpaqueTypeConformance2();
      lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type SimpleItemRichView and conformance SimpleItemRichView, (uint64_t (*)(uint64_t))MEMORY[0x24BEADE98], MEMORY[0x24BEADE78]);
      _ConditionalContent<>.init(storage:)();
      return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v20, v36);
    }
    else
    {
      v38 = *(_OWORD *)(v2 + 40);
      v89 = *(_OWORD *)(v2 + 24);
      v90 = v38;
      v40 = *(_QWORD *)(v2 + 72);
      v39 = *(_QWORD *)(v2 + 80);
      v41 = MEMORY[0x24BEE0D00];
      v91 = *(_OWORD *)(v2 + 56);
      v92 = v91;
      v42 = MEMORY[0x24BEAE5C0];
      v87 = MEMORY[0x24BEE0D00];
      v88 = MEMORY[0x24BEAE5C0];
      v86 = v91;
      v43 = v21;
      outlined retain of String((uint64_t)&v92);
      dispatch thunk of Context.currentIdiom.getter();

      if ((VRXIdiom.isCarPlay.getter() & 1) != 0)
      {
        v85 = 0;
        v83 = 0u;
        v84 = 0u;
      }
      else
      {
        *((_QWORD *)&v84 + 1) = v41;
        v85 = v42;
        *(_QWORD *)&v83 = v40;
        *((_QWORD *)&v83 + 1) = v39;
        swift_bridgeObjectRetain();
      }
      v44 = v60;
      v82 = 0;
      v80 = 0u;
      v81 = 0u;
      v79 = 0;
      v77 = 0u;
      v78 = 0u;
      v76 = 0;
      v74 = 0u;
      v75 = 0u;
      v73 = 0;
      v71 = 0u;
      v72 = 0u;
      v70 = 0;
      v68 = 0u;
      v69 = 0u;
      v67 = 0;
      v65 = 0u;
      v66 = 0u;
      ContactHeaderView.thumbnail.getter((uint64_t)v5);
      lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type ImageElementView and conformance ImageElementView, (uint64_t (*)(uint64_t))MEMORY[0x24BEADD10], MEMORY[0x24BEADD00]);
      v45 = v52;
      v46 = View.eraseToAnyView()();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v5, v45);
      v63 = MEMORY[0x24BDF4788];
      v64 = MEMORY[0x24BEAD940];
      v62 = v46;
      v47 = v53;
      SimpleItemRichView.init(text1:text2:text3:text4:text5:text6:text7:text8:thumbnail:)();
      v49 = v54;
      v48 = v55;
      (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v54, v47, v44);
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v59, v49, v44);
      swift_storeEnumTagMultiPayload();
      v50 = lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>, ImageElementView>, ModifiedContent<Text, _FlexFrameLayout>)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>();
      *(_QWORD *)&v86 = v56;
      *((_QWORD *)&v86 + 1) = v50;
      swift_getOpaqueTypeConformance2();
      lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type SimpleItemRichView and conformance SimpleItemRichView, (uint64_t (*)(uint64_t))MEMORY[0x24BEADE98], MEMORY[0x24BEADE78]);
      _ConditionalContent<>.init(storage:)();
      return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v49, v44);
    }
  }
  else
  {
    type metadata accessor for Context();
    lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
    result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t outlined retain of String(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t closure #1 in ContactHeaderView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t KeyPath;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  _OWORD *v68;
  _QWORD v70[3];
  uint64_t v71;
  void (*v72)(char *, uint64_t, uint64_t);
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  _OWORD v95[9];
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;

  v84 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>, ImageElementView>.Storage);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ImageElement.ImageStyle?);
  MEMORY[0x24BDAC7A8](v6);
  v79 = (char *)v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ImageElement.ImageStyle();
  v77 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ImageElement();
  MEMORY[0x24BDAC7A8](v11);
  v76 = (char *)v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ImageElementView();
  v81 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v78 = (uint64_t)v70 - v20;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>, ImageElementView>);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v83 = (uint64_t)v70 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v85 = (uint64_t)v70 - v24;
  v80 = *(_QWORD *)(a1 + 56);
  v82 = *(_QWORD *)(a1 + 64);
  if ((*(_BYTE *)(a1 + 88) & 1) != 0)
  {
    ContactHeaderView.thumbnail.getter((uint64_t)v15);
    v41 = v81;
    (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v5, v15, v13);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type ImageElementView and conformance ImageElementView, (uint64_t (*)(uint64_t))MEMORY[0x24BEADD10], MEMORY[0x24BEADD00]);
    _ConditionalContent<>.init(storage:)();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v15, v13);
  }
  else
  {
    v25 = *(_QWORD *)(a1 + 32);
    v70[1] = *(_QWORD *)(a1 + 24);
    v70[2] = v25;
    v26 = *MEMORY[0x24BEAABB0];
    v74 = v13;
    v27 = v77;
    v72 = *(void (**)(char *, uint64_t, uint64_t))(v77 + 104);
    v72(v10, v26, v8);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<_ProtoIdiom>);
    v28 = type metadata accessor for _ProtoIdiom();
    v75 = v3;
    v29 = v28;
    v71 = v16;
    v30 = *(_QWORD *)(v28 - 8);
    v31 = *(unsigned __int8 *)(v30 + 80);
    v73 = v5;
    v32 = (v31 + 32) & ~v31;
    v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_243B32430;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v30 + 104))(v33 + v32, *MEMORY[0x24BEAA998], v29);
    specialized Set.init(_nonEmptyArrayLiteral:)(v33);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    static ImageElement.appIcon(_:imageStyle:idioms:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v8);
    ImageElementView.init(_:)();
    KeyPath = swift_getKeyPath();
    v35 = (uint64_t)v79;
    v72(v79, *MEMORY[0x24BEAAC20], v8);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v27 + 56))(v35, 0, 1, v8);
    v36 = (uint64_t *)&v19[*(int *)(v71 + 36)];
    v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>);
    outlined init with copy of SearchCallHistoryBinaryButtonModel?(v35, (uint64_t)v36 + *(int *)(v37 + 28), &demangling cache variable for type metadata for ImageElement.ImageStyle?);
    *v36 = KeyPath;
    v38 = v81;
    v39 = v74;
    (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v19, v15, v74);
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v35, &demangling cache variable for type metadata for ImageElement.ImageStyle?);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v15, v39);
    v40 = v78;
    outlined init with take of ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>((uint64_t)v19, v78);
    outlined init with copy of SearchCallHistoryBinaryButtonModel?(v40, (uint64_t)v73, &demangling cache variable for type metadata for ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type ImageElementView and conformance ImageElementView, (uint64_t (*)(uint64_t))MEMORY[0x24BEADD10], MEMORY[0x24BEADD00]);
    _ConditionalContent<>.init(storage:)();
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v40, &demangling cache variable for type metadata for ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>);
  }
  *(_QWORD *)&v96 = v80;
  *((_QWORD *)&v96 + 1) = v82;
  lazy protocol witness table accessor for type String and conformance String();
  swift_bridgeObjectRetain();
  v42 = Text.init<A>(_:)();
  v44 = v43;
  v46 = v45 & 1;
  static Font.headline.getter();
  static Font.Weight.bold.getter();
  Font.weight(_:)();
  swift_release();
  v47 = Text.font(_:)();
  v49 = v48;
  v51 = v50;
  v53 = v52;
  swift_release();
  outlined consume of Text.Storage(v42, v44, v46);
  swift_bridgeObjectRelease();
  v54 = static Alignment.leading.getter();
  specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v96, 0.0, 1, 0.0, 1, v54, v55, v47, v49, v51 & 1, v53);
  outlined consume of Text.Storage(v47, v49, v51 & 1);
  swift_bridgeObjectRelease();
  v92 = v102;
  v93 = v103;
  v94 = v104;
  v88 = v98;
  v89 = v99;
  v90 = v100;
  v91 = v101;
  v86 = v96;
  v87 = v97;
  v56 = v85;
  v57 = v83;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v85, v83, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>, ImageElementView>);
  v58 = v84;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v57, v84, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>, ImageElementView>);
  v59 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (_ConditionalContent<ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>, ImageElementView>, ModifiedContent<Text, _FlexFrameLayout>))
               + 48);
  v60 = v93;
  v95[6] = v92;
  v95[7] = v93;
  v61 = v94;
  v95[8] = v94;
  v63 = v90;
  v62 = v91;
  v95[4] = v90;
  v95[5] = v91;
  v64 = v88;
  v65 = v89;
  v95[2] = v88;
  v95[3] = v89;
  v67 = v86;
  v66 = v87;
  v95[0] = v86;
  v95[1] = v87;
  v68 = (_OWORD *)(v58 + v59);
  v68[6] = v92;
  v68[7] = v60;
  v68[8] = v61;
  v68[2] = v64;
  v68[3] = v65;
  v68[4] = v63;
  v68[5] = v62;
  *v68 = v67;
  v68[1] = v66;
  outlined retain of ModifiedContent<Text, _FlexFrameLayout>((uint64_t)v95);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v56, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>, ImageElementView>);
  v102 = v92;
  v103 = v93;
  v104 = v94;
  v98 = v88;
  v99 = v89;
  v100 = v90;
  v101 = v91;
  v96 = v86;
  v97 = v87;
  outlined release of ModifiedContent<Text, _FlexFrameLayout>((uint64_t)&v96);
  return outlined destroy of SearchCallHistoryBinaryButtonModel?(v57, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>, ImageElementView>);
}

uint64_t ContactHeaderView.thumbnail.getter@<X0>(uint64_t a1@<X8>)
{
  id *v1;
  id *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void (*v22)(char *, _QWORD, uint64_t);
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, _QWORD, uint64_t);
  void (*v26)(char *, uint64_t);
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t result;
  _QWORD v36[2];
  __int128 v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  char v46;
  __int128 v47;

  v2 = v1;
  v41 = a1;
  v40 = type metadata accessor for ImageElement.ImageStyle();
  v38 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v4 = (char *)v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ImageElement.Contact.Content();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ImageElement.SourceType();
  *(_QWORD *)&v37 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v36 - v13;
  v15 = type metadata accessor for ImageElement();
  MEMORY[0x24BDAC7A8](v15);
  v39 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*v1)
  {
    v17 = *v1;
    dispatch thunk of Context.currentIdiom.getter();

    v18 = VRXIdiom.isCarPlay.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
    v19 = swift_allocObject();
    v20 = v19;
    *(_OWORD *)(v19 + 16) = xmmword_243B32430;
    if ((v18 & 1) != 0)
    {
      v36[1] = v2[3];
      v21 = v2[6];
      *(_QWORD *)(v20 + 32) = v2[5];
      *(_QWORD *)(v20 + 40) = v21;
      swift_bridgeObjectRetain();
      ImageElement.Contact.Avatar.init(contactIds:)();
      (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BEAB000], v5);
      v22 = *(void (**)(char *, _QWORD, uint64_t))(v38 + 104);
      v23 = v40;
      v22(v4, *MEMORY[0x24BEAAAB8], v40);
      ImageElement.Contact.init(_:imageStyle:)();
      v24 = v37;
      v25 = *(void (**)(char *, _QWORD, uint64_t))(v37 + 104);
      v25(v14, *MEMORY[0x24BEAAD28], v9);
      v22(v4, *MEMORY[0x24BEAAC10], v23);
      swift_bridgeObjectRetain();
      ImageElement.AppIcon.init(_:imageStyle:)();
      v25(v12, *MEMORY[0x24BEAAD18], v9);
      static ImageElement.badgedImage(image:badge:)();
      v26 = *(void (**)(char *, uint64_t))(v24 + 8);
      v26(v12, v9);
      v26(v14, v9);
    }
    else
    {
      v37 = xmmword_243B32430;
      v27 = *(_OWORD *)(v2 + 9);
      v44 = *(_OWORD *)(v2 + 7);
      v45 = v27;
      v46 = *((_BYTE *)v2 + 88);
      v28 = *(_OWORD *)(v2 + 5);
      v42 = *(_OWORD *)(v2 + 3);
      v43 = v28;
      v47 = v28;
      *(_OWORD *)(v19 + 32) = v28;
      v29 = v38;
      v30 = v40;
      (*(void (**)(char *, _QWORD, uint64_t))(v38 + 104))(v4, *MEMORY[0x24BEAAAD0], v40);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<_ProtoIdiom>);
      v31 = type metadata accessor for _ProtoIdiom();
      v32 = *(_QWORD *)(v31 - 8);
      v33 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
      v34 = swift_allocObject();
      *(_OWORD *)(v34 + 16) = v37;
      (*(void (**)(unint64_t, _QWORD, uint64_t))(v32 + 104))(v34 + v33, *MEMORY[0x24BEAA998], v31);
      outlined retain of String((uint64_t)&v47);
      specialized Set.init(_nonEmptyArrayLiteral:)(v34);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      static ImageElement.contactImageAvatar(contactIds:imageStyle:idioms:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v4, v30);
    }
    return ImageElementView.init(_:)();
  }
  else
  {
    type metadata accessor for Context();
    lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
    result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>, ImageElementView>, ModifiedContent<Text, _FlexFrameLayout>)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>, ImageElementView>, ModifiedContent<Text, _FlexFrameLayout>)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>, ImageElementView>, ModifiedContent<Text, _FlexFrameLayout>)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>, ImageElementView>, ModifiedContent<Text, _FlexFrameLayout>)>>, _PaddingLayout>);
    v2[0] = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type HStack<TupleView<(_ConditionalContent<ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>, ImageElementView>, ModifiedContent<Text, _FlexFrameLayout>)>> and conformance HStack<A>, &demangling cache variable for type metadata for HStack<TupleView<(_ConditionalContent<ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>, ImageElementView>, ModifiedContent<Text, _FlexFrameLayout>)>>, MEMORY[0x24BDF44A0]);
    v2[1] = MEMORY[0x24BDECC58];
    result = MEMORY[0x249501140](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>, ImageElementView>, ModifiedContent<Text, _FlexFrameLayout>)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

__n128 ContactHeaderView.init(model:)@<Q0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  __n128 result;
  __n128 v8;
  __int128 v9;
  __int128 v10;

  v9 = a1[1];
  v10 = *a1;
  v8 = (__n128)a1[2];
  v3 = *((_QWORD *)a1 + 6);
  v4 = *((_QWORD *)a1 + 7);
  v5 = a1[4] & 1;
  type metadata accessor for Context();
  lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
  *(_QWORD *)a2 = EnvironmentObject.init()();
  *(_QWORD *)(a2 + 8) = v6;
  *(_QWORD *)(a2 + 16) = 0x4024000000000000;
  *(_OWORD *)(a2 + 24) = v10;
  *(_OWORD *)(a2 + 40) = v9;
  result = v8;
  *(__n128 *)(a2 + 56) = v8;
  *(_QWORD *)(a2 + 72) = v3;
  *(_QWORD *)(a2 + 80) = v4;
  *(_BYTE *)(a2 + 88) = v5;
  return result;
}

uint64_t protocol witness for View.body.getter in conformance ContactHeaderView@<X0>(uint64_t a1@<X8>)
{
  return ContactHeaderView.body.getter(a1);
}

__n128 PhoneContactHeader.view.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  __n128 result;
  __n128 v8;
  __int128 v9;
  __int128 v10;

  v9 = *(_OWORD *)(v1 + 16);
  v10 = *(_OWORD *)v1;
  v8 = *(__n128 *)(v1 + 32);
  v3 = *(_QWORD *)(v1 + 48);
  v4 = *(_QWORD *)(v1 + 56);
  v5 = *(_BYTE *)(v1 + 64) & 1;
  outlined retain of PhoneContactHeader(v1);
  type metadata accessor for Context();
  lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
  *(_QWORD *)a1 = EnvironmentObject.init()();
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = 0x4024000000000000;
  *(_OWORD *)(a1 + 24) = v10;
  *(_OWORD *)(a1 + 40) = v9;
  result = v8;
  *(__n128 *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 72) = v3;
  *(_QWORD *)(a1 + 80) = v4;
  *(_BYTE *)(a1 + 88) = v5;
  return result;
}

uint64_t outlined retain of PhoneContactHeader(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t associated type witness table accessor for View.Body : View in ContactHeaderView()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t lazy protocol witness table accessor for type ContactHeaderView and conformance ContactHeaderView()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ContactHeaderView and conformance ContactHeaderView;
  if (!lazy protocol witness table cache variable for type ContactHeaderView and conformance ContactHeaderView)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for ContactHeaderView, &type metadata for ContactHeaderView);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ContactHeaderView and conformance ContactHeaderView);
  }
  return result;
}

uint64_t protocol witness for CustomCanvasComponent.view.getter in conformance PhoneContactHeader@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v4 = *v1;
  v3 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  v8 = v1[4];
  v7 = v1[5];
  v9 = v1[7];
  v13 = v1[6];
  v12 = *((_BYTE *)v1 + 64);
  type metadata accessor for Context();
  lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = EnvironmentObject.init()();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v11;
  *(_QWORD *)(a1 + 16) = 0x4024000000000000;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v3;
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = v7;
  *(_QWORD *)(a1 + 72) = v13;
  *(_QWORD *)(a1 + 80) = v9;
  *(_BYTE *)(a1 + 88) = v12;
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ContactHeaderView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for ContactHeaderView(id *a1)
{

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ContactHeaderView(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  v7 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v7;
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v8 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ContactHeaderView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  return a1;
}

__n128 __swift_memcpy89_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for ContactHeaderView(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContactHeaderView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 89))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ContactHeaderView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 88) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 89) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 89) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ContactHeaderView()
{
  return &type metadata for ContactHeaderView;
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<<<opaque return type of View.componentSpacing(top:bottom:)>>.0, SimpleItemRichView> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = lazy protocol witness table cache variable for type _ConditionalContent<<<opaque return type of View.componentSpacing(top:bottom:)>>.0, SimpleItemRichView> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<<<opaque return type of View.componentSpacing(top:bottom:)>>.0, SimpleItemRichView> and conformance <> _ConditionalContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.componentSpacing(top:bottom:)>>.0, SimpleItemRichView>);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>, ImageElementView>, ModifiedContent<Text, _FlexFrameLayout>)>>, _PaddingLayout>);
    v2[3] = lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>, ImageElementView>, ModifiedContent<Text, _FlexFrameLayout>)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type SimpleItemRichView and conformance SimpleItemRichView, (uint64_t (*)(uint64_t))MEMORY[0x24BEADE98], MEMORY[0x24BEADE78]);
    result = MEMORY[0x249501140](MEMORY[0x24BDEF3D8], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<<<opaque return type of View.componentSpacing(top:bottom:)>>.0, SimpleItemRichView> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

uint64_t outlined init with take of ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>);
    v2[0] = lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type ImageElementView and conformance ImageElementView, (uint64_t (*)(uint64_t))MEMORY[0x24BEADD10], MEMORY[0x24BEADD00]);
    v2[1] = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>, MEMORY[0x24BDF1020]);
    result = MEMORY[0x249501140](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t outlined retain of ModifiedContent<Text, _FlexFrameLayout>(uint64_t a1)
{
  outlined copy of Text.Storage(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t outlined copy of Text.Storage(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain();
  else
    return swift_bridgeObjectRetain();
}

uint64_t outlined release of ModifiedContent<Text, _FlexFrameLayout>(uint64_t a1)
{
  outlined consume of Text.Storage(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t ForEachWithIndex.data.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t ForEachWithIndex.content.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 68));
  swift_retain();
  return v2;
}

uint64_t ForEachWithIndex.body.getter@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  char *v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  void (*v29)(char *, uint64_t);
  _QWORD v31[2];
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v40 = a2;
  v41 = *(a1 - 1);
  v39 = *(_QWORD *)(v41 + 64);
  v4 = MEMORY[0x24BDAC7A8](a1);
  v36 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v4 + 16);
  v33 = *(_QWORD *)(v4 + 32);
  v7 = type metadata accessor for EnumeratedSequence();
  MEMORY[0x24BDAC7A8](v7);
  swift_getAssociatedTypeWitness();
  v8 = MEMORY[0x24BEE1768];
  swift_getTupleTypeMetadata2();
  v9 = type metadata accessor for Array();
  v37 = v9;
  v10 = a1[3];
  v35 = MEMORY[0x249501140](MEMORY[0x24BEE12D8], v9);
  v49 = v9;
  v50 = v8;
  v51 = v10;
  v52 = v35;
  v11 = v10;
  v53 = MEMORY[0x24BEE1778];
  v31[0] = type metadata accessor for ForEach();
  v38 = *(_QWORD *)(v31[0] - 8);
  v12 = MEMORY[0x24BDAC7A8](v31[0]);
  v32 = (char *)v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v34 = (char *)v31 - v14;
  Sequence.enumerated()();
  MEMORY[0x249501140](MEMORY[0x24BEE2FC0], v7);
  v49 = Array.init<A>(_:)();
  v42 = v6;
  v43 = v10;
  v15 = a1[5];
  v16 = a1[6];
  v17 = v33;
  v44 = v33;
  v45 = v15;
  v18 = a1[7];
  v46 = v16;
  v47 = v18;
  v31[1] = swift_getKeyPath();
  v19 = v41;
  v20 = v36;
  (*(void (**)(char *, uint64_t, _QWORD *))(v41 + 16))(v36, v2, a1);
  v21 = (*(unsigned __int8 *)(v19 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v22 = (char *)swift_allocObject();
  *((_QWORD *)v22 + 2) = v6;
  *((_QWORD *)v22 + 3) = v11;
  *((_QWORD *)v22 + 4) = v17;
  *((_QWORD *)v22 + 5) = v15;
  *((_QWORD *)v22 + 6) = v16;
  *((_QWORD *)v22 + 7) = v18;
  (*(void (**)(char *, char *, _QWORD *))(v41 + 32))(&v22[v21], v20, a1);
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = v6;
  v23[3] = v11;
  v23[4] = v17;
  v23[5] = v15;
  v23[6] = v16;
  v23[7] = v18;
  v23[8] = partial apply for closure #1 in ForEachWithIndex.body.getter;
  v23[9] = v22;
  v24 = v32;
  ForEach<>.init(_:id:content:)();
  v48 = v15;
  v25 = v31[0];
  MEMORY[0x249501140](MEMORY[0x24BDF4A00], v31[0], &v48);
  v26 = v38;
  v27 = *(void (**)(char *, char *, uint64_t))(v38 + 16);
  v28 = v34;
  v27(v34, v24, v25);
  v29 = *(void (**)(char *, uint64_t))(v26 + 8);
  v29(v24, v25);
  v27(v40, v28, v25);
  return ((uint64_t (*)(char *, uint64_t))v29)(v28, v25);
}

void closure #1 in ForEachWithIndex.body.getter(uint64_t a1)
{
  uint64_t v1;

  v1 = MEMORY[0x24BDAC7A8](a1);
  MEMORY[0x24BDAC7A8](v1);
  type metadata accessor for ForEachWithIndex();
}

uint64_t sub_243ADCEF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  void (*v10)(uint64_t, uint64_t);

  (*(void (**)(uint64_t, uint64_t))(v2 + *(int *)(a1 + 68)))(v5, v4);
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  v9(v7, v6, v1);
  v10 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v10(v6, v1);
  v9(v3, v7, v1);
  return ((uint64_t (*)(uint64_t, uint64_t))v10)(v7, v1);
}

void sub_243ADCF70()
{
  type metadata accessor for ForEachWithIndex();
}

uint64_t sub_243ADCFA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  (*(void (**)(uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v1 + ((v2 + 64) & ~v2));
  swift_release();
  return swift_deallocObject();
}

void type metadata accessor for ForEachWithIndex()
{
  JUMPOUT(0x2495010C8);
}

void partial apply for closure #1 in ForEachWithIndex.body.getter()
{
  type metadata accessor for ForEachWithIndex();
}

void sub_243ADD074()
{
  uint64_t v0;

  closure #1 in ForEachWithIndex.body.getter(v0);
}

uint64_t thunk for @escaping @callee_guaranteed (@unowned Int, @in_guaranteed A.Sequence.Element) -> (@out B)(char *a1, uint64_t (*a2)(uint64_t, char *))
{
  uint64_t v4;
  uint64_t TupleTypeMetadata2;

  v4 = *(_QWORD *)a1;
  swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(v4, &a1[*(int *)(TupleTypeMetadata2 + 48)]);
}

uint64_t sub_243ADD16C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@unowned Int, @in_guaranteed A.Sequence.Element) -> (@out B)(char *a1)
{
  uint64_t v1;

  return thunk for @escaping @callee_guaranteed (@unowned Int, @in_guaranteed A.Sequence.Element) -> (@out B)(a1, *(uint64_t (**)(uint64_t, char *))(v1 + 64));
}

void ForEachWithIndex.init(data:content:)(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1, a2);
  type metadata accessor for ForEachWithIndex();
}

uint64_t sub_243ADD234(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v4 = (_QWORD *)(v3 + *(int *)(result + 68));
  *v4 = v2;
  v4[1] = v1;
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in ForEachWithIndex<A, B>()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata instantiation function for ForEachWithIndex()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t type metadata completion function for ForEachWithIndex()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ForEachWithIndex(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v11 = v10[1];
    v12 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v12 = *v10;
    v12[1] = v11;
  }
  swift_retain();
  return v4;
}

uint64_t destroy for ForEachWithIndex(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
  return swift_release();
}

uint64_t initializeWithCopy for ForEachWithIndex(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = v8[1];
  *v7 = *v8;
  v7[1] = v9;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ForEachWithIndex(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = v8[1];
  *v7 = *v8;
  v7[1] = v9;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for ForEachWithIndex(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t assignWithTake for ForEachWithIndex(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ForEachWithIndex(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_243ADD618 + 4 * byte_243B32980[v10]))();
  }
}

void storeEnumTagSinglePayload for ForEachWithIndex(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_243ADD790()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x243ADD808);
}

void sub_243ADD798(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x243ADD7A0);
  JUMPOUT(0x243ADD808);
}

void sub_243ADD7E0()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x243ADD808);
}

void sub_243ADD7E8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x243ADD808);
}

uint64_t sub_243ADD7F0(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x243ADD808);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x243ADD804);
    JUMPOUT(0x243ADD7FCLL);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

uint64_t sub_243ADD820(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 24);
  swift_getAssociatedTypeWitness();
  v3 = MEMORY[0x24BEE1768];
  swift_getTupleTypeMetadata2();
  v7 = type metadata accessor for Array();
  v8 = v3;
  v9 = v1;
  v10 = MEMORY[0x249501140](MEMORY[0x24BEE12D8], v7);
  v11 = MEMORY[0x24BEE1778];
  v4 = type metadata accessor for ForEach();
  v6 = v2;
  return MEMORY[0x249501140](MEMORY[0x24BDF4A00], v4, &v6);
}

uint64_t ForeignEmergencyCallDisambiguationView.init(model:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  type metadata accessor for Context();
  lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
  *a2 = EnvironmentObject.init()();
  a2[1] = v4;
  v5 = type metadata accessor for ForeignEmergencyCallDisambiguationView();
  ActionHandler.init()();
  return outlined init with take of SingleResultCallHistoryModel(a1, (uint64_t)a2 + *(int *)(v5 + 24), type metadata accessor for ForeignEmergencyCallDisambiguationModel);
}

uint64_t type metadata accessor for ForeignEmergencyCallDisambiguationView()
{
  uint64_t result;

  result = type metadata singleton initialization cache for ForeignEmergencyCallDisambiguationView;
  if (!type metadata singleton initialization cache for ForeignEmergencyCallDisambiguationView)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t ForeignEmergencyCallDisambiguationView.body.getter@<X0>(uint64_t a1@<X8>)
{
  id *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (**v29)();
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v64 = a1;
  v57 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>>?);
  MEMORY[0x24BDAC7A8](v57);
  v55 = (uint64_t)&v51 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.privacySensitive(_:)>>.0);
  v58 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60);
  v4 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = type metadata accessor for BinaryButtonView();
  v62 = *(_QWORD *)(v68 - 8);
  MEMORY[0x24BDAC7A8](v68);
  v59 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.privacySensitive(_:)>>.0);
  v61 = *(_QWORD *)(v69 - 8);
  v6 = MEMORY[0x24BDAC7A8](v69);
  v56 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v63 = (char *)&v51 - v8;
  v65 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>)>>, _AppearanceActionModifier>, <<opaque return type of View.privacySensitive(_:)>>.0>.Storage);
  MEMORY[0x24BDAC7A8](v65);
  v67 = (uint64_t)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ForeignEmergencyCallDisambiguationView();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>)>>);
  v52 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53);
  v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>)>>, _AppearanceActionModifier>);
  v16 = MEMORY[0x24BDAC7A8](v66);
  v18 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v54 = (uint64_t)&v51 - v19;
  v20 = (uint64_t)v1;
  if (*v1)
  {
    v21 = *v1;
    dispatch thunk of Context.currentIdiom.getter();

    if ((VRXIdiom.isCarPlay.getter() & 1) != 0)
    {
      outlined init with copy of SearchCallHistoryBinaryButtonModel(v20, (uint64_t)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for ForeignEmergencyCallDisambiguationView);
      v22 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
      v23 = swift_allocObject();
      outlined init with take of SingleResultCallHistoryModel((uint64_t)v13, v23 + v22, (uint64_t (*)(_QWORD))type metadata accessor for ForeignEmergencyCallDisambiguationView);
      v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>)>);
      v25 = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>)>, MEMORY[0x24BDF5420]);
      MEMORY[0x24950072C](partial apply for closure #1 in ForeignEmergencyCallDisambiguationView.body.getter, v23, v24, v25);
      outlined init with copy of SearchCallHistoryBinaryButtonModel(v20, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ForeignEmergencyCallDisambiguationView);
      v26 = swift_allocObject();
      outlined init with take of SingleResultCallHistoryModel((uint64_t)v13, v26 + v22, (uint64_t (*)(_QWORD))type metadata accessor for ForeignEmergencyCallDisambiguationView);
      v27 = v52;
      v28 = v53;
      (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v18, v15, v53);
      v29 = (void (**)())&v18[*(int *)(v66 + 36)];
      *v29 = partial apply for closure #2 in ForeignEmergencyCallDisambiguationView.body.getter;
      v29[1] = (void (*)())v26;
      v29[2] = 0;
      v29[3] = 0;
      (*(void (**)(char *, uint64_t))(v27 + 8))(v15, v28);
      v30 = v54;
      outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout>, _ClipEffect<Capsule>>((uint64_t)v18, v54, &demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>)>>, _AppearanceActionModifier>);
      outlined init with copy of SearchCallHistoryBinaryButtonModel?(v30, v67, &demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>)>>, _AppearanceActionModifier>);
      swift_storeEnumTagMultiPayload();
      lazy protocol witness table accessor for type ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>();
      v31 = lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type BinaryButtonView and conformance BinaryButtonView, (uint64_t (*)(uint64_t))MEMORY[0x24BEADCE8], MEMORY[0x24BEADCC8]);
      v74 = v68;
      v75 = v31;
      swift_getOpaqueTypeConformance2();
      _ConditionalContent<>.init(storage:)();
      return outlined destroy of SearchCallHistoryBinaryButtonModel?(v30, &demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>)>>, _AppearanceActionModifier>);
    }
    else
    {
      v33 = ForeignEmergencyCallDisambiguationView.emergencyServicesButton.getter();
      v34 = MEMORY[0x24BDF4788];
      v35 = MEMORY[0x24BEAD940];
      v76 = MEMORY[0x24BDF4788];
      v77 = MEMORY[0x24BEAD940];
      v74 = v33;
      v36 = v20 + *(int *)(v10 + 24);
      v37 = type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
      v38 = v55;
      ForeignEmergencyCallDisambiguationView.button(for:)(v36 + *(int *)(v37 + 20), v55);
      v39 = lazy protocol witness table accessor for type _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>>? and conformance <A> A?();
      v40 = v57;
      View.privacySensitive(_:)();
      outlined destroy of SearchCallHistoryBinaryButtonModel?(v38, &demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>>?);
      v70 = v40;
      v71 = v39;
      swift_getOpaqueTypeConformance2();
      v41 = v60;
      v42 = View.eraseToAnyView()();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v4, v41);
      v72 = v34;
      v73 = v35;
      v70 = v42;
      v43 = v59;
      BinaryButtonView.init(primaryButton:secondaryButton:)();
      v44 = lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type BinaryButtonView and conformance BinaryButtonView, (uint64_t (*)(uint64_t))MEMORY[0x24BEADCE8], MEMORY[0x24BEADCC8]);
      v45 = v56;
      v46 = v68;
      View.privacySensitive(_:)();
      (*(void (**)(char *, uint64_t))(v62 + 8))(v43, v46);
      v47 = v61;
      v48 = v63;
      v49 = v45;
      v50 = v69;
      (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v63, v49, v69);
      (*(void (**)(uint64_t, char *, uint64_t))(v47 + 16))(v67, v48, v50);
      swift_storeEnumTagMultiPayload();
      lazy protocol witness table accessor for type ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>();
      v74 = v46;
      v75 = v44;
      swift_getOpaqueTypeConformance2();
      _ConditionalContent<>.init(storage:)();
      return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v48, v50);
    }
  }
  else
  {
    type metadata accessor for Context();
    lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
    result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t closure #1 in ForeignEmergencyCallDisambiguationView.body.getter@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  _QWORD v44[2];
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  unint64_t v54;

  v52 = a2;
  v51 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>);
  v3 = MEMORY[0x24BDAC7A8](v51);
  v49 = (char *)v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v50 = (uint64_t)v44 - v5;
  v6 = type metadata accessor for SeparatorStyle();
  v48 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>>?);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.privacySensitive(_:)>>.0);
  v45 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.separators(_:isOverride:)>>.0);
  v47 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v46 = (char *)v44 - v19;
  v20 = *(int *)(type metadata accessor for ForeignEmergencyCallDisambiguationView() + 24);
  v44[1] = a1;
  v21 = a1 + v20;
  v22 = type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
  ForeignEmergencyCallDisambiguationView.button(for:)(v21 + *(int *)(v22 + 20), (uint64_t)v11);
  v23 = lazy protocol witness table accessor for type _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>>? and conformance <A> A?();
  View.privacySensitive(_:)();
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v11, &demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>>?);
  v53 = v9;
  v54 = v23;
  swift_getOpaqueTypeConformance2();
  v24 = View.eraseToAnyView()();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v14, v12);
  v53 = v24;
  v25 = *MEMORY[0x24BEAB508];
  v26 = v48;
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v48 + 104);
  v27(v8, v25, v6);
  View.separators(_:isOverride:)();
  v28 = *(void (**)(char *, uint64_t))(v26 + 8);
  v28(v8, v6);
  swift_release();
  v30 = v46;
  v29 = v47;
  (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v46, v18, v15);
  v53 = ForeignEmergencyCallDisambiguationView.emergencyServicesButton.getter();
  v27(v8, v25, v6);
  View.separators(_:isOverride:)();
  v28(v8, v6);
  swift_release();
  type metadata accessor for Context();
  lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
  v31 = EnvironmentObject.init()();
  v33 = v32;
  v34 = *(void (**)(char *, char *, uint64_t))(v29 + 16);
  v35 = (uint64_t)v49;
  v34(v49, v18, v15);
  v36 = v35 + *(int *)(v51 + 36);
  *(_QWORD *)v36 = v31;
  *(_QWORD *)(v36 + 8) = v33;
  *(_BYTE *)(v36 + 16) = 0;
  v37 = *(void (**)(char *, uint64_t))(v29 + 8);
  v37(v18, v15);
  v38 = v50;
  outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout>, _ClipEffect<Capsule>>(v35, v50, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>);
  v39 = v30;
  v34(v18, v30, v15);
  v40 = v38;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v38, v35, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>);
  v41 = v52;
  v34(v52, v18, v15);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (<<opaque return type of View.separators(_:isOverride:)>>.0, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>));
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v35, (uint64_t)&v41[*(int *)(v42 + 48)], &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v40, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>);
  v37(v39, v15);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v35, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>);
  return ((uint64_t (*)(char *, uint64_t))v37)(v18, v15);
}

uint64_t ForeignEmergencyCallDisambiguationView.emergencyServicesButton.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  unint64_t v16;
  uint64_t OpaqueTypeConformance2;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;

  v1 = type metadata accessor for ButtonItemButtonStyle.Role();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>>?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.buttonRole(_:foreground:background:)>>.0);
  v22 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.privacySensitive(_:)>>.0);
  v23 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ForeignEmergencyCallDisambiguationView();
  ForeignEmergencyCallDisambiguationView.button(for:)(v0 + *(int *)(v13 + 24), (uint64_t)v7);
  v14 = *MEMORY[0x24BEAD958];
  v24 = v2;
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  v26 = v1;
  v15(v4, v14, v1);
  v27 = static Color.white.getter();
  AnyShapeStyle.init<A>(_:)();
  if (one-time initialization token for emergencyRed != -1)
    swift_once();
  v27 = static Color.emergencyRed;
  swift_retain();
  AnyShapeStyle.init<A>(_:)();
  v16 = lazy protocol witness table accessor for type _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>>? and conformance <A> A?();
  View.buttonRole(_:foreground:background:)();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v4, v26);
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v7, &demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>>?);
  v27 = v5;
  v28 = v16;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  View.privacySensitive(_:)();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v8);
  v27 = v8;
  v28 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  v18 = v25;
  v19 = View.eraseToAnyView()();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v18);
  return v19;
}

void closure #2 in ForeignEmergencyCallDisambiguationView.body.getter(id *a1)
{
  id v1;

  if (*a1)
  {
    v1 = *a1;
    dispatch thunk of Context.hideBackgroundBehindSiri()();

  }
  else
  {
    type metadata accessor for Context();
    lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
    EnvironmentObject.error()();
    __break(1u);
  }
}

uint64_t ForeignEmergencyCallDisambiguationView.button(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t OpaqueTypeConformance2;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t result;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  id *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __int128 v95;
  __int128 v96;
  uint64_t v97;
  __int128 v98;
  __int128 v99;
  uint64_t v100;
  __int128 v101;
  __int128 v102;
  uint64_t v103;
  __int128 v104;
  __int128 v105;
  uint64_t v106;
  __int128 v107;
  __int128 v108;
  uint64_t v109;
  __int128 v110;
  __int128 v111;
  uint64_t v112;
  __int128 v113;
  __int128 v114;
  uint64_t v115;
  __int128 v116;
  __int128 v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;

  v94 = a2;
  v90 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>);
  v76 = *(_QWORD *)(v90 - 8);
  MEMORY[0x24BDAC7A8](v90);
  v75 = (char *)&v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>>.Storage);
  MEMORY[0x24BDAC7A8](v87);
  v89 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SeparatorStyle();
  v80 = *(_QWORD *)(v5 - 8);
  v81 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v78 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ForeignEmergencyCallDisambiguationView();
  v82 = *(_QWORD *)(v7 - 8);
  v8 = *(_QWORD *)(v82 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v83 = (uint64_t)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = type metadata accessor for SimpleItemRichView();
  v71 = *(_QWORD *)(v84 - 8);
  MEMORY[0x24BDAC7A8](v84);
  v70 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.componentTapped(isNavigation:perform:)>>.0);
  v74 = *(_QWORD *)(v85 - 8);
  MEMORY[0x24BDAC7A8](v85);
  v73 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.separators(_:isOverride:)>>.0);
  v79 = *(_QWORD *)(v88 - 8);
  v11 = MEMORY[0x24BDAC7A8](v88);
  v72 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v77 = (char *)&v69 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>>);
  v92 = *(_QWORD *)(v14 - 8);
  v93 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v86 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(_QWORD *)(v20 + 64);
  v22 = MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v69 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v69 - v24;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(a1, (uint64_t)v18, &demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v18, &demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
LABEL_8:
    v56 = 1;
    v57 = v94;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v92 + 56))(v57, v56, 1, v93);
  }
  outlined init with take of SingleResultCallHistoryModel((uint64_t)v18, (uint64_t)v25, type metadata accessor for DisambiguationItemWithDirectInvocationModel);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  Loggable.wrappedValue.getter();
  v26 = v120;
  if (!v120)
  {
    outlined destroy of DisambiguationItemWithDirectInvocationModel((uint64_t)v25);
    goto LABEL_8;
  }
  if (*v91)
  {
    v27 = v119;
    v28 = *v91;
    dispatch thunk of Context.currentIdiom.getter();

    if ((VRXIdiom.isCarPlay.getter() & 1) != 0)
    {
      v119 = v27;
      v120 = v26;
      lazy protocol witness table accessor for type String and conformance String();
      v29 = Text.init<A>(_:)();
      v31 = v30;
      v33 = v32;
      v35 = v34;
      v121 = MEMORY[0x24BDF1FA0];
      v122 = MEMORY[0x24BEAD6B8];
      v36 = swift_allocObject();
      v119 = v36;
      *(_QWORD *)(v36 + 16) = v29;
      *(_QWORD *)(v36 + 24) = v31;
      *(_BYTE *)(v36 + 32) = v33 & 1;
      *(_QWORD *)(v36 + 40) = v35;
      v118 = 0;
      v116 = 0u;
      v117 = 0u;
      v115 = 0;
      v113 = 0u;
      v114 = 0u;
      v112 = 0;
      v110 = 0u;
      v111 = 0u;
      v109 = 0;
      v107 = 0u;
      v108 = 0u;
      v106 = 0;
      v104 = 0u;
      v105 = 0u;
      v103 = 0;
      v101 = 0u;
      v102 = 0u;
      v100 = 0;
      v98 = 0u;
      v99 = 0u;
      v97 = 0;
      v95 = 0u;
      v96 = 0u;
      v37 = v70;
      SimpleItemRichView.init(text1:text2:text3:text4:text5:text6:text7:text8:thumbnail:)();
      v38 = v83;
      outlined init with copy of SearchCallHistoryBinaryButtonModel((uint64_t)v91, v83, (uint64_t (*)(_QWORD))type metadata accessor for ForeignEmergencyCallDisambiguationView);
      outlined init with copy of SearchCallHistoryBinaryButtonModel((uint64_t)v25, (uint64_t)v23, type metadata accessor for DisambiguationItemWithDirectInvocationModel);
      v39 = (*(unsigned __int8 *)(v82 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80);
      v40 = (v8 + *(unsigned __int8 *)(v20 + 80) + v39) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
      v41 = swift_allocObject();
      outlined init with take of SingleResultCallHistoryModel(v38, v41 + v39, (uint64_t (*)(_QWORD))type metadata accessor for ForeignEmergencyCallDisambiguationView);
      outlined init with take of SingleResultCallHistoryModel((uint64_t)v23, v41 + v40, type metadata accessor for DisambiguationItemWithDirectInvocationModel);
      v42 = lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type SimpleItemRichView and conformance SimpleItemRichView, (uint64_t (*)(uint64_t))MEMORY[0x24BEADE98], MEMORY[0x24BEADE78]);
      v43 = v73;
      v44 = v84;
      View.componentTapped(isNavigation:perform:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v71 + 8))(v37, v44);
      v46 = v80;
      v45 = v81;
      v47 = v78;
      (*(void (**)(char *, _QWORD, uint64_t))(v80 + 104))(v78, *MEMORY[0x24BEAB508], v81);
      v119 = v44;
      v120 = v42;
      OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
      v49 = v72;
      v50 = v85;
      View.separators(_:isOverride:)();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v45);
      (*(void (**)(char *, uint64_t))(v74 + 8))(v43, v50);
      v51 = v79;
      v52 = v77;
      v53 = v49;
      v54 = v88;
      (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v77, v53, v88);
      (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v89, v52, v54);
      swift_storeEnumTagMultiPayload();
      v119 = v50;
      v120 = OpaqueTypeConformance2;
      swift_getOpaqueTypeConformance2();
      lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>> and conformance Button<A>, &demangling cache variable for type metadata for Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>, MEMORY[0x24BDF43B8]);
      v55 = (uint64_t)v86;
      _ConditionalContent<>.init(storage:)();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v54);
    }
    else
    {
      v58 = v83;
      outlined init with copy of SearchCallHistoryBinaryButtonModel((uint64_t)v91, v83, (uint64_t (*)(_QWORD))type metadata accessor for ForeignEmergencyCallDisambiguationView);
      outlined init with copy of SearchCallHistoryBinaryButtonModel((uint64_t)v25, (uint64_t)v23, type metadata accessor for DisambiguationItemWithDirectInvocationModel);
      v59 = (*(unsigned __int8 *)(v82 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80);
      v60 = (v8 + *(unsigned __int8 *)(v20 + 80) + v59) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
      v61 = swift_allocObject();
      outlined init with take of SingleResultCallHistoryModel(v58, v61 + v59, (uint64_t (*)(_QWORD))type metadata accessor for ForeignEmergencyCallDisambiguationView);
      v62 = outlined init with take of SingleResultCallHistoryModel((uint64_t)v23, v61 + v60, type metadata accessor for DisambiguationItemWithDirectInvocationModel);
      MEMORY[0x24BDAC7A8](v62);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>);
      lazy protocol witness table accessor for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>> and conformance <> ModifiedContent<A, B>();
      v63 = v75;
      Button.init(action:label:)();
      swift_bridgeObjectRelease();
      v64 = v76;
      v65 = v90;
      (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v89, v63, v90);
      swift_storeEnumTagMultiPayload();
      v66 = lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type SimpleItemRichView and conformance SimpleItemRichView, (uint64_t (*)(uint64_t))MEMORY[0x24BEADE98], MEMORY[0x24BEADE78]);
      v119 = v84;
      v120 = v66;
      v67 = swift_getOpaqueTypeConformance2();
      v119 = v85;
      v120 = v67;
      swift_getOpaqueTypeConformance2();
      lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>> and conformance Button<A>, &demangling cache variable for type metadata for Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>, MEMORY[0x24BDF43B8]);
      v55 = (uint64_t)v86;
      _ConditionalContent<>.init(storage:)();
      (*(void (**)(char *, uint64_t))(v64 + 8))(v63, v65);
    }
    outlined destroy of DisambiguationItemWithDirectInvocationModel((uint64_t)v25);
    v57 = v94;
    outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout>, _ClipEffect<Capsule>>(v55, v94, &demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>>);
    v56 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v92 + 56))(v57, v56, 1, v93);
  }
  type metadata accessor for Context();
  lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
  result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>>? and conformance <A> A?()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = lazy protocol witness table cache variable for type _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>>? and conformance <A> A?;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>>? and conformance <A> A?)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>>?);
    v2 = lazy protocol witness table accessor for type _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>> and conformance <> _ConditionalContent<A, B>();
    result = MEMORY[0x249501140](MEMORY[0x24BDF5580], v1, &v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>>? and conformance <A> A?);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[4];

  result = lazy protocol witness table cache variable for type _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>> and conformance <> _ConditionalContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>>);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for <<opaque return type of View.componentTapped(isNavigation:perform:)>>.0);
    type metadata accessor for SimpleItemRichView();
    lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type SimpleItemRichView and conformance SimpleItemRichView, (uint64_t (*)(uint64_t))MEMORY[0x24BEADE98], MEMORY[0x24BEADE78]);
    v3[2] = v2;
    v3[3] = swift_getOpaqueTypeConformance2();
    v3[0] = swift_getOpaqueTypeConformance2();
    v3[1] = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>> and conformance Button<A>, &demangling cache variable for type metadata for Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>, MEMORY[0x24BDF43B8]);
    result = MEMORY[0x249501140](MEMORY[0x24BDEF3D8], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>)>>, _AppearanceActionModifier>);
    v2[0] = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>)>> and conformance ComponentStack<A>, &demangling cache variable for type metadata for ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>)>>, MEMORY[0x24BEADBF8]);
    v2[1] = MEMORY[0x24BDF0908];
    result = MEMORY[0x249501140](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t partial apply for closure #1 in ForeignEmergencyCallDisambiguationView.body.getter@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ForeignEmergencyCallDisambiguationView() - 8) + 80);
  return closure #1 in ForeignEmergencyCallDisambiguationView.body.getter(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t objectdestroyTm_1()
{
  uint64_t v0;
  uint64_t v1;
  id *v2;
  char *v3;
  uint64_t v4;
  char *v5;
  int *v6;
  unsigned int (*v7)(char *, uint64_t, int *);
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t);
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;

  v1 = type metadata accessor for ForeignEmergencyCallDisambiguationView();
  v2 = (id *)(v0
            + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)));

  v3 = (char *)v2 + *(int *)(v1 + 20);
  v4 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = (char *)v2 + *(int *)(v1 + 24);
  v6 = (int *)type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  v7 = *(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v6 - 1) + 48);
  if (!v7(v5, 1, v6))
  {
    v8 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v5, v8);
    v9 = &v5[v6[5]];
    v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
    v11 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
    v11(v9, v10);
    v12 = &v5[v6[6]];
    v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
    v14 = &v5[v6[7]];
    v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
    v11(&v5[v6[8]], v10);
    v16 = &v5[v6[9]];
    v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
  }
  v18 = &v5[*(int *)(type metadata accessor for ForeignEmergencyCallDisambiguationModel(0) + 20)];
  if (!v7(v18, 1, v6))
  {
    v19 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
    v20 = &v18[v6[5]];
    v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
    v22 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v21 - 8) + 8);
    v22(v20, v21);
    v23 = &v18[v6[6]];
    v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
    v25 = &v18[v6[7]];
    v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
    v22(&v18[v6[8]], v21);
    v27 = &v18[v6[9]];
    v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
  }
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void partial apply for closure #2 in ForeignEmergencyCallDisambiguationView.body.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ForeignEmergencyCallDisambiguationView() - 8) + 80);
  closure #2 in ForeignEmergencyCallDisambiguationView.body.getter((id *)(v0 + ((v1 + 16) & ~v1)));
}

uint64_t ForeignEmergencyCallDisambiguationView.performAction(for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for InteractionType?);
  MEMORY[0x24BDAC7A8](v0);
  v27 = (char *)&v26 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionProperty?);
  MEMORY[0x24BDAC7A8](v2);
  v26 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for ActionProperty();
  v11 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionElementConvertible>);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_243B32430;
  v15 = type metadata accessor for Command();
  v16 = MEMORY[0x24BEAD1E8];
  *(_QWORD *)(v14 + 56) = v15;
  *(_QWORD *)(v14 + 64) = v16;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v14 + 32));
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  Loggable.wrappedValue.getter();
  v18 = CodableAceObject.wrappedValue.getter();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *boxed_opaque_existential_1 = v18;
  *((_BYTE *)boxed_opaque_existential_1 + 8) = 0;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x24BEAD1C8], v15);
  ActionProperty.init(_:)();
  type metadata accessor for ForeignEmergencyCallDisambiguationView();
  ActionHandler.wrappedValue.getter();
  v19 = type metadata accessor for StandardActionHandler();
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v6, 1, v19) == 1)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v28);
    return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v6, &demangling cache variable for type metadata for StandardActionHandler?);
  }
  else
  {
    v22 = (uint64_t)v26;
    v23 = v28;
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v26, v13, v28);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(v22, 0, 1, v23);
    v24 = type metadata accessor for InteractionType();
    v25 = (uint64_t)v27;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v27, 1, 1, v24);
    StandardActionHandler.perform(_:interactionType:)();
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v25, &demangling cache variable for type metadata for InteractionType?);
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v22, &demangling cache variable for type metadata for ActionProperty?);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v23);
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v6, v19);
  }
}

uint64_t closure #3 in ForeignEmergencyCallDisambiguationView.button(for:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  lazy protocol witness table accessor for type String and conformance String();
  swift_bridgeObjectRetain();
  v2 = Text.init<A>(_:)();
  v4 = v3;
  v6 = v5;
  v8 = v7;
  result = swift_getKeyPath();
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v6 & 1;
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = result;
  *(_BYTE *)(a1 + 40) = 1;
  return result;
}

uint64_t one-time initialization function for emergencyServicesItem(uint64_t a1)
{
  return one-time initialization function for emergencyServicesItem(a1, static ForeignEmergencyCallDisambiguationView_Previews.emergencyServicesItem);
}

{
  return one-time initialization function for emergencyServicesItem(a1, static LocalEmergencyCallDisambiguationView_Previews.emergencyServicesItem);
}

uint64_t ForeignEmergencyCallDisambiguationView_Previews.emergencyServicesItem.unsafeMutableAddressor()
{
  return ForeignEmergencyCallDisambiguationView_Previews.emergencyServicesItem.unsafeMutableAddressor(&one-time initialization token for emergencyServicesItem, type metadata accessor for DisambiguationItemWithDirectInvocationModel, (uint64_t)static ForeignEmergencyCallDisambiguationView_Previews.emergencyServicesItem);
}

uint64_t static ForeignEmergencyCallDisambiguationView_Previews.emergencyServicesItem.getter@<X0>(uint64_t a1@<X8>)
{
  return static ForeignEmergencyCallDisambiguationView_Previews.emergencyServicesItem.getter(&one-time initialization token for emergencyServicesItem, type metadata accessor for DisambiguationItemWithDirectInvocationModel, (uint64_t)static ForeignEmergencyCallDisambiguationView_Previews.emergencyServicesItem, a1);
}

uint64_t one-time initialization function for foreignEmergencyNumberItem(uint64_t a1)
{
  return one-time initialization function for emergencyServicesItem(a1, static ForeignEmergencyCallDisambiguationView_Previews.foreignEmergencyNumberItem);
}

{
  return one-time initialization function for emergencyServicesItem(a1, static LocalEmergencyCallDisambiguationView_Previews.foreignEmergencyNumberItem);
}

uint64_t one-time initialization function for emergencyServicesItem(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v10;

  v3 = type metadata accessor for UUID();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  __swift_allocate_value_buffer(v6, a2);
  v7 = __swift_project_value_buffer(v6, (uint64_t)a2);
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE813A0]), sel_init);
  UUID.init()();
  return DisambiguationItemWithDirectInvocationModel.init(id:personHandle:spokenHandle:shouldPrintHandleBlue:label:rskeCommand:)((uint64_t)v5, 0xE000000000000000, v7, v8);
}

{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v10;

  v3 = type metadata accessor for UUID();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  __swift_allocate_value_buffer(v6, a2);
  v7 = __swift_project_value_buffer(v6, (uint64_t)a2);
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE813A0]), sel_init);
  UUID.init()();
  return DisambiguationItemWithDirectInvocationModel.init(id:personHandle:spokenHandle:shouldPrintHandleBlue:label:rskeCommand:)((uint64_t)v5, 0xE300000000000000, v7, v8);
}

uint64_t ForeignEmergencyCallDisambiguationView_Previews.foreignEmergencyNumberItem.unsafeMutableAddressor()
{
  return ForeignEmergencyCallDisambiguationView_Previews.emergencyServicesItem.unsafeMutableAddressor(&one-time initialization token for foreignEmergencyNumberItem, type metadata accessor for DisambiguationItemWithDirectInvocationModel, (uint64_t)static ForeignEmergencyCallDisambiguationView_Previews.foreignEmergencyNumberItem);
}

uint64_t ForeignEmergencyCallDisambiguationView_Previews.emergencyServicesItem.unsafeMutableAddressor(_QWORD *a1, uint64_t (*a2)(_QWORD), uint64_t a3)
{
  uint64_t v5;

  if (*a1 != -1)
    swift_once();
  v5 = a2(0);
  return __swift_project_value_buffer(v5, a3);
}

uint64_t static ForeignEmergencyCallDisambiguationView_Previews.foreignEmergencyNumberItem.getter@<X0>(uint64_t a1@<X8>)
{
  return static ForeignEmergencyCallDisambiguationView_Previews.emergencyServicesItem.getter(&one-time initialization token for foreignEmergencyNumberItem, type metadata accessor for DisambiguationItemWithDirectInvocationModel, (uint64_t)static ForeignEmergencyCallDisambiguationView_Previews.foreignEmergencyNumberItem, a1);
}

uint64_t static ForeignEmergencyCallDisambiguationView_Previews.emergencyServicesItem.getter@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;

  if (*a1 != -1)
    swift_once();
  v7 = a2(0);
  v8 = __swift_project_value_buffer(v7, a3);
  return outlined init with copy of SearchCallHistoryBinaryButtonModel(v8, a4, a2);
}

uint64_t one-time initialization function for sampleModel()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
  v1 = MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v14 - v4;
  v6 = type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
  __swift_allocate_value_buffer(v6, static ForeignEmergencyCallDisambiguationView_Previews.sampleModel);
  v7 = __swift_project_value_buffer(v6, (uint64_t)static ForeignEmergencyCallDisambiguationView_Previews.sampleModel);
  if (one-time initialization token for emergencyServicesItem != -1)
    swift_once();
  v8 = type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  v9 = __swift_project_value_buffer(v8, (uint64_t)static ForeignEmergencyCallDisambiguationView_Previews.emergencyServicesItem);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v9, (uint64_t)v5, type metadata accessor for DisambiguationItemWithDirectInvocationModel);
  v10 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56);
  v10(v5, 0, 1, v8);
  if (one-time initialization token for foreignEmergencyNumberItem != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v8, (uint64_t)static ForeignEmergencyCallDisambiguationView_Previews.foreignEmergencyNumberItem);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v11, (uint64_t)v3, type metadata accessor for DisambiguationItemWithDirectInvocationModel);
  v10(v3, 0, 1, v8);
  v12 = (_QWORD *)(v7 + *(int *)(v6 + 24));
  *v12 = 0xD00000000000001ELL;
  v12[1] = 0x8000000243B37280;
  outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout>, _ClipEffect<Capsule>>((uint64_t)v5, v7, &demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
  return outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout>, _ClipEffect<Capsule>>((uint64_t)v3, v7 + *(int *)(v6 + 20), &demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
  v1 = MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v14 - v4;
  v6 = type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
  __swift_allocate_value_buffer(v6, static LocalEmergencyCallDisambiguationView_Previews.sampleModel);
  v7 = __swift_project_value_buffer(v6, (uint64_t)static LocalEmergencyCallDisambiguationView_Previews.sampleModel);
  if (one-time initialization token for emergencyServicesItem != -1)
    swift_once();
  v8 = type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  v9 = __swift_project_value_buffer(v8, (uint64_t)static LocalEmergencyCallDisambiguationView_Previews.emergencyServicesItem);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v9, (uint64_t)v5, type metadata accessor for DisambiguationItemWithDirectInvocationModel);
  v10 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56);
  v10(v5, 0, 1, v8);
  if (one-time initialization token for foreignEmergencyNumberItem != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v8, (uint64_t)static LocalEmergencyCallDisambiguationView_Previews.foreignEmergencyNumberItem);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v11, (uint64_t)v3, type metadata accessor for DisambiguationItemWithDirectInvocationModel);
  v10(v3, 0, 1, v8);
  v12 = (_QWORD *)(v7 + *(int *)(v6 + 24));
  *v12 = 0xD00000000000001ELL;
  v12[1] = 0x8000000243B37280;
  outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout>, _ClipEffect<Capsule>>((uint64_t)v5, v7, &demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
  return outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout>, _ClipEffect<Capsule>>((uint64_t)v3, v7 + *(int *)(v6 + 20), &demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
}

uint64_t ForeignEmergencyCallDisambiguationView_Previews.sampleModel.unsafeMutableAddressor()
{
  return ForeignEmergencyCallDisambiguationView_Previews.emergencyServicesItem.unsafeMutableAddressor(&one-time initialization token for sampleModel, type metadata accessor for ForeignEmergencyCallDisambiguationModel, (uint64_t)static ForeignEmergencyCallDisambiguationView_Previews.sampleModel);
}

uint64_t static ForeignEmergencyCallDisambiguationView_Previews.sampleModel.getter@<X0>(uint64_t a1@<X8>)
{
  return static ForeignEmergencyCallDisambiguationView_Previews.emergencyServicesItem.getter(&one-time initialization token for sampleModel, type metadata accessor for ForeignEmergencyCallDisambiguationModel, (uint64_t)static ForeignEmergencyCallDisambiguationView_Previews.sampleModel, a1);
}

uint64_t static ForeignEmergencyCallDisambiguationView_Previews.previews.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v5;

  v0 = type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for sampleModel != -1)
    swift_once();
  v3 = __swift_project_value_buffer(v0, (uint64_t)static ForeignEmergencyCallDisambiguationView_Previews.sampleModel);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v3, (uint64_t)v2, type metadata accessor for ForeignEmergencyCallDisambiguationModel);
  type metadata accessor for ForeignEmergencyCallDisambiguationView();
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel and conformance ForeignEmergencyCallDisambiguationModel, type metadata accessor for ForeignEmergencyCallDisambiguationModel, (uint64_t)&protocol conformance descriptor for ForeignEmergencyCallDisambiguationModel);
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationView and conformance ForeignEmergencyCallDisambiguationView, (uint64_t (*)(uint64_t))type metadata accessor for ForeignEmergencyCallDisambiguationView, (uint64_t)&protocol conformance descriptor for ForeignEmergencyCallDisambiguationView);
  return SnippetPreview.init(snippetModel:content:)();
}

uint64_t implicit closure #1 in static ForeignEmergencyCallDisambiguationView_Previews.previews.getter@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for ForeignEmergencyCallDisambiguationView();
  outlined init with copy of SearchCallHistoryBinaryButtonModel(a1, (uint64_t)a2 + *(int *)(v4 + 24), type metadata accessor for ForeignEmergencyCallDisambiguationModel);
  type metadata accessor for Context();
  lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
  *a2 = EnvironmentObject.init()();
  a2[1] = v5;
  return ActionHandler.init()();
}

uint64_t associated type witness table accessor for View.Body : View in ForeignEmergencyCallDisambiguationView()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t lazy protocol witness table accessor for type ForeignEmergencyCallDisambiguationView_Previews and conformance ForeignEmergencyCallDisambiguationView_Previews()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationView_Previews and conformance ForeignEmergencyCallDisambiguationView_Previews;
  if (!lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationView_Previews and conformance ForeignEmergencyCallDisambiguationView_Previews)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for ForeignEmergencyCallDisambiguationView_Previews, &type metadata for ForeignEmergencyCallDisambiguationView_Previews);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationView_Previews and conformance ForeignEmergencyCallDisambiguationView_Previews);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationView_Previews and conformance ForeignEmergencyCallDisambiguationView_Previews;
  if (!lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationView_Previews and conformance ForeignEmergencyCallDisambiguationView_Previews)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for ForeignEmergencyCallDisambiguationView_Previews, &type metadata for ForeignEmergencyCallDisambiguationView_Previews);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationView_Previews and conformance ForeignEmergencyCallDisambiguationView_Previews);
  }
  return result;
}

uint64_t associated type witness table accessor for PreviewProvider.Previews : View in ForeignEmergencyCallDisambiguationView_Previews()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t protocol witness for static PreviewProvider.previews.getter in conformance ForeignEmergencyCallDisambiguationView_Previews()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v5;

  v0 = type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for sampleModel != -1)
    swift_once();
  v3 = __swift_project_value_buffer(v0, (uint64_t)static ForeignEmergencyCallDisambiguationView_Previews.sampleModel);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v3, (uint64_t)v2, type metadata accessor for ForeignEmergencyCallDisambiguationModel);
  type metadata accessor for ForeignEmergencyCallDisambiguationView();
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel and conformance ForeignEmergencyCallDisambiguationModel, type metadata accessor for ForeignEmergencyCallDisambiguationModel, (uint64_t)&protocol conformance descriptor for ForeignEmergencyCallDisambiguationModel);
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationView and conformance ForeignEmergencyCallDisambiguationView, (uint64_t (*)(uint64_t))type metadata accessor for ForeignEmergencyCallDisambiguationView, (uint64_t)&protocol conformance descriptor for ForeignEmergencyCallDisambiguationView);
  return SnippetPreview.init(snippetModel:content:)();
}

uint64_t protocol witness for static _PreviewProvider._previews.getter in conformance ForeignEmergencyCallDisambiguationView_Previews()
{
  lazy protocol witness table accessor for type ForeignEmergencyCallDisambiguationView_Previews and conformance ForeignEmergencyCallDisambiguationView_Previews();
  return static PreviewProvider._previews.getter();
}

uint64_t protocol witness for static _PreviewProvider._platform.getter in conformance ForeignEmergencyCallDisambiguationView_Previews()
{
  lazy protocol witness table accessor for type ForeignEmergencyCallDisambiguationView_Previews and conformance ForeignEmergencyCallDisambiguationView_Previews();
  return static PreviewProvider._platform.getter();
}

char *initializeBufferWithCopyOfBuffer for ForeignEmergencyCallDisambiguationView(char *a1, char **a2, uint64_t a3)
{
  int v3;
  char *v4;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int *v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, int *);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v67;
  uint64_t v68;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v7 = a1;
    *((_QWORD *)a1 + 1) = a2[1];
    v8 = *(int *)(a3 + 20);
    v9 = &a1[v8];
    v10 = (uint64_t)a2 + v8;
    v11 = type metadata accessor for ActionHandler();
    v12 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v13 = v4;
    v12(v9, v10, v11);
    v14 = *(int *)(a3 + 24);
    v15 = &v7[v14];
    v16 = (char *)a2 + v14;
    v17 = (int *)type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
    v18 = *((_QWORD *)v17 - 1);
    v19 = *(unsigned int (**)(char *, uint64_t, int *))(v18 + 48);
    if (v19(v16, 1, v17))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      v21 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v15, v16, v21);
      v22 = v17[5];
      v23 = &v15[v22];
      v24 = &v16[v22];
      v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
      v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
      v26(v23, v24, v25);
      v27 = v17[6];
      v28 = &v15[v27];
      v29 = &v16[v27];
      v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
      v31 = v17[7];
      v32 = &v15[v31];
      v33 = &v16[v31];
      v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
      v26(&v15[v17[8]], &v16[v17[8]], v25);
      v35 = v17[9];
      v36 = &v15[v35];
      v37 = &v16[v35];
      v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v18 + 56))(v15, 0, 1, v17);
    }
    v39 = type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
    v40 = *(int *)(v39 + 20);
    v41 = &v15[v40];
    v42 = &v16[v40];
    if (v19(&v16[v40], 1, v17))
    {
      v43 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    else
    {
      v44 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v41, v42, v44);
      v45 = v17[5];
      v46 = &v41[v45];
      v47 = &v42[v45];
      v67 = v39;
      v68 = v18;
      v48 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
      v49 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16);
      v49(v46, v47, v48);
      v50 = v17[6];
      v51 = &v41[v50];
      v52 = &v42[v50];
      v53 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v51, v52, v53);
      v54 = v17[7];
      v55 = &v41[v54];
      v56 = &v42[v54];
      v57 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v55, v56, v57);
      v49(&v41[v17[8]], &v42[v17[8]], v48);
      v39 = v67;
      v58 = v17[9];
      v59 = &v41[v58];
      v60 = &v42[v58];
      v61 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(v59, v60, v61);
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v68 + 56))(v41, 0, 1, v17);
    }
    v62 = *(int *)(v39 + 24);
    v63 = &v15[v62];
    v64 = &v16[v62];
    v65 = *((_QWORD *)v64 + 1);
    *(_QWORD *)v63 = *(_QWORD *)v64;
    *((_QWORD *)v63 + 1) = v65;
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t destroy for ForeignEmergencyCallDisambiguationView(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  char *v6;
  int *v7;
  unsigned int (*v8)(char *, uint64_t, int *);
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t);
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;

  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = (char *)a1 + *(int *)(a2 + 24);
  v7 = (int *)type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  v8 = *(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48);
  if (!v8(v6, 1, v7))
  {
    v9 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v6, v9);
    v10 = &v6[v7[5]];
    v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
    v12 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8);
    v12(v10, v11);
    v13 = &v6[v7[6]];
    v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
    v15 = &v6[v7[7]];
    v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
    v12(&v6[v7[8]], v11);
    v17 = &v6[v7[9]];
    v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  }
  v19 = &v6[*(int *)(type metadata accessor for ForeignEmergencyCallDisambiguationModel(0) + 20)];
  if (!v8(v19, 1, v7))
  {
    v20 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
    v21 = &v19[v7[5]];
    v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
    v23 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v22 - 8) + 8);
    v23(v21, v22);
    v24 = &v19[v7[6]];
    v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
    v26 = &v19[v7[7]];
    v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v26, v27);
    v23(&v19[v7[8]], v22);
    v28 = &v19[v7[9]];
    v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v28, v29);
  }
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ForeignEmergencyCallDisambiguationView(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  id v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int *v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, int *);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  _QWORD *v67;
  uint64_t v68;

  v5 = a1;
  v7 = *(void **)a2;
  v6 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v6;
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for ActionHandler();
  v12 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  v13 = v7;
  v12(v9, v10, v11);
  v14 = *(int *)(a3 + 24);
  v15 = (char *)v5 + v14;
  v16 = (char *)(a2 + v14);
  v17 = (int *)type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  v18 = *((_QWORD *)v17 - 1);
  v19 = *(unsigned int (**)(char *, uint64_t, int *))(v18 + 48);
  if (v19(v16, 1, v17))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v21 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v15, v16, v21);
    v22 = v17[5];
    v23 = &v15[v22];
    v24 = &v16[v22];
    v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
    v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
    v26(v23, v24, v25);
    v27 = v17[6];
    v28 = &v15[v27];
    v29 = &v16[v27];
    v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
    v31 = v17[7];
    v32 = &v15[v31];
    v33 = &v16[v31];
    v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
    v26(&v15[v17[8]], &v16[v17[8]], v25);
    v35 = v17[9];
    v36 = &v15[v35];
    v37 = &v16[v35];
    v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v18 + 56))(v15, 0, 1, v17);
  }
  v39 = type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
  v40 = *(int *)(v39 + 20);
  v41 = &v15[v40];
  v42 = &v16[v40];
  if (v19(&v16[v40], 1, v17))
  {
    v43 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  else
  {
    v44 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v41, v42, v44);
    v45 = v17[5];
    v46 = &v41[v45];
    v47 = &v42[v45];
    v67 = v5;
    v68 = v18;
    v48 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
    v49 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16);
    v49(v46, v47, v48);
    v50 = v17[6];
    v51 = &v41[v50];
    v52 = &v42[v50];
    v53 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v51, v52, v53);
    v54 = v17[7];
    v55 = &v41[v54];
    v56 = &v42[v54];
    v57 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v55, v56, v57);
    v49(&v41[v17[8]], &v42[v17[8]], v48);
    v5 = v67;
    v58 = v17[9];
    v59 = &v41[v58];
    v60 = &v42[v58];
    v61 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(v59, v60, v61);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v68 + 56))(v41, 0, 1, v17);
  }
  v62 = *(int *)(v39 + 24);
  v63 = &v15[v62];
  v64 = &v16[v62];
  v65 = *((_QWORD *)v64 + 1);
  *(_QWORD *)v63 = *(_QWORD *)v64;
  *((_QWORD *)v63 + 1) = v65;
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t assignWithCopy for ForeignEmergencyCallDisambiguationView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  int *v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, int *);
  int v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  void (*v73)(char *, char *, uint64_t);
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  void (*v90)(char *, char *, uint64_t);
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;

  v6 = *(void **)a1;
  v7 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v7;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v9 = *(int *)(a3 + 20);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v13 = *(int *)(a3 + 24);
  v14 = (char *)(a1 + v13);
  v15 = (char *)(a2 + v13);
  v16 = (int *)type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  v17 = *((_QWORD *)v16 - 1);
  v18 = *(uint64_t (**)(char *, uint64_t, int *))(v17 + 48);
  LODWORD(v11) = v18(v14, 1, v16);
  v19 = v18(v15, 1, v16);
  if ((_DWORD)v11)
  {
    if (!v19)
    {
      v20 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v14, v15, v20);
      v21 = v16[5];
      v22 = &v14[v21];
      v23 = &v15[v21];
      v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
      v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
      v25(v22, v23, v24);
      v26 = v16[6];
      v27 = &v14[v26];
      v28 = &v15[v26];
      v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
      v30 = v16[7];
      v31 = &v14[v30];
      v32 = &v15[v30];
      v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
      v25(&v14[v16[8]], &v15[v16[8]], v24);
      v34 = v16[9];
      v35 = &v14[v34];
      v36 = &v15[v34];
      v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v35, v36, v37);
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v17 + 56))(v14, 0, 1, v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    outlined destroy of DisambiguationItemWithDirectInvocationModel((uint64_t)v14);
LABEL_6:
    v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    goto LABEL_7;
  }
  v68 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 24))(v14, v15, v68);
  v69 = v16[5];
  v70 = &v14[v69];
  v71 = &v15[v69];
  v72 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  v73 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 24);
  v73(v70, v71, v72);
  v74 = v16[6];
  v75 = &v14[v74];
  v76 = &v15[v74];
  v77 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 24))(v75, v76, v77);
  v78 = v16[7];
  v79 = &v14[v78];
  v80 = &v15[v78];
  v81 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 24))(v79, v80, v81);
  v73(&v14[v16[8]], &v15[v16[8]], v72);
  v82 = v16[9];
  v83 = &v14[v82];
  v84 = &v15[v82];
  v85 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v85 - 8) + 24))(v83, v84, v85);
LABEL_7:
  v39 = type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
  v40 = *(int *)(v39 + 20);
  v41 = &v14[v40];
  v42 = &v15[v40];
  v43 = v18(&v14[v40], 1, v16);
  v44 = v18(v42, 1, v16);
  if (!v43)
  {
    if (!v44)
    {
      v86 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 24))(v41, v42, v86);
      v87 = v16[5];
      v88 = &v41[v87];
      v89 = &v42[v87];
      v105 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
      v90 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v105 - 8) + 24);
      v90(v88, v89, v105);
      v91 = v16[6];
      v92 = &v41[v91];
      v93 = &v42[v91];
      v94 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 24))(v92, v93, v94);
      v95 = v16[7];
      v96 = &v41[v95];
      v97 = &v42[v95];
      v98 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 24))(v96, v97, v98);
      v90(&v41[v16[8]], &v42[v16[8]], v105);
      v99 = v16[9];
      v100 = &v41[v99];
      v101 = &v42[v99];
      v102 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 24))(v100, v101, v102);
      goto LABEL_13;
    }
    outlined destroy of DisambiguationItemWithDirectInvocationModel((uint64_t)v41);
    goto LABEL_12;
  }
  if (v44)
  {
LABEL_12:
    v63 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    goto LABEL_13;
  }
  v45 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v41, v42, v45);
  v46 = v16[5];
  v47 = &v41[v46];
  v48 = &v42[v46];
  v103 = v39;
  v104 = v17;
  v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  v50 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16);
  v50(v47, v48, v49);
  v51 = v16[6];
  v52 = &v41[v51];
  v53 = &v42[v51];
  v54 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v52, v53, v54);
  v55 = v16[7];
  v56 = &v41[v55];
  v57 = &v42[v55];
  v58 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v56, v57, v58);
  v50(&v41[v16[8]], &v42[v16[8]], v49);
  v39 = v103;
  v59 = v16[9];
  v60 = &v41[v59];
  v61 = &v42[v59];
  v62 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v60, v61, v62);
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v104 + 56))(v41, 0, 1, v16);
LABEL_13:
  v64 = *(int *)(v39 + 24);
  v65 = &v14[v64];
  v66 = &v15[v64];
  *(_QWORD *)v65 = *(_QWORD *)v66;
  *((_QWORD *)v65 + 1) = *((_QWORD *)v66 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t outlined destroy of DisambiguationItemWithDirectInvocationModel(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *initializeWithTake for ForeignEmergencyCallDisambiguationView(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  _OWORD *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int *v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, int *);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v59;
  _OWORD *v60;

  v5 = a1;
  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (char *)v5 + v10;
  v12 = (char *)a2 + v10;
  v13 = (int *)type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  v14 = *((_QWORD *)v13 - 1);
  v15 = *(unsigned int (**)(char *, uint64_t, int *))(v14 + 48);
  if (v15(v12, 1, v13))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v17 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v11, v12, v17);
    v18 = v13[5];
    v19 = &v11[v18];
    v20 = &v12[v18];
    v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
    v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32);
    v22(v19, v20, v21);
    v23 = v13[6];
    v24 = &v11[v23];
    v25 = &v12[v23];
    v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
    v27 = v13[7];
    v28 = &v11[v27];
    v29 = &v12[v27];
    v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
    v22(&v11[v13[8]], &v12[v13[8]], v21);
    v31 = v13[9];
    v32 = &v11[v31];
    v33 = &v12[v31];
    v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v14 + 56))(v11, 0, 1, v13);
  }
  v35 = type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
  v36 = *(int *)(v35 + 20);
  v37 = &v11[v36];
  v38 = &v12[v36];
  if (v15(&v12[v36], 1, v13))
  {
    v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    v40 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v37, v38, v40);
    v41 = v13[5];
    v42 = &v37[v41];
    v43 = &v38[v41];
    v59 = v14;
    v60 = v5;
    v44 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
    v45 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32);
    v45(v42, v43, v44);
    v46 = v13[6];
    v47 = &v37[v46];
    v48 = &v38[v46];
    v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v47, v48, v49);
    v50 = v13[7];
    v51 = &v37[v50];
    v52 = &v38[v50];
    v53 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v51, v52, v53);
    v45(&v37[v13[8]], &v38[v13[8]], v44);
    v5 = v60;
    v54 = v13[9];
    v55 = &v37[v54];
    v56 = &v38[v54];
    v57 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v55, v56, v57);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v59 + 56))(v37, 0, 1, v13);
  }
  *(_OWORD *)&v11[*(int *)(v35 + 24)] = *(_OWORD *)&v12[*(int *)(v35 + 24)];
  return v5;
}

uint64_t assignWithTake for ForeignEmergencyCallDisambiguationView(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int *v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, int *);
  int v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  void (*v73)(char *, char *, uint64_t);
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  void (*v90)(char *, char *, uint64_t);
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  *(_QWORD *)(a1 + 8) = a2[1];
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = (char *)(a1 + v11);
  v13 = (char *)a2 + v11;
  v14 = (int *)type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  v15 = *((_QWORD *)v14 - 1);
  v16 = *(uint64_t (**)(char *, uint64_t, int *))(v15 + 48);
  LODWORD(v9) = v16(v12, 1, v14);
  v17 = v16(v13, 1, v14);
  if ((_DWORD)v9)
  {
    if (!v17)
    {
      v18 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v12, v13, v18);
      v19 = v14[5];
      v20 = &v12[v19];
      v21 = &v13[v19];
      v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
      v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32);
      v23(v20, v21, v22);
      v24 = v14[6];
      v25 = &v12[v24];
      v26 = &v13[v24];
      v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
      v28 = v14[7];
      v29 = &v12[v28];
      v30 = &v13[v28];
      v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
      v23(&v12[v14[8]], &v13[v14[8]], v22);
      v32 = v14[9];
      v33 = &v12[v32];
      v34 = &v13[v32];
      v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    outlined destroy of DisambiguationItemWithDirectInvocationModel((uint64_t)v12);
LABEL_6:
    v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    goto LABEL_7;
  }
  v68 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 40))(v12, v13, v68);
  v69 = v14[5];
  v70 = &v12[v69];
  v71 = &v13[v69];
  v72 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  v73 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 40);
  v73(v70, v71, v72);
  v74 = v14[6];
  v75 = &v12[v74];
  v76 = &v13[v74];
  v77 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 40))(v75, v76, v77);
  v78 = v14[7];
  v79 = &v12[v78];
  v80 = &v13[v78];
  v81 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 40))(v79, v80, v81);
  v73(&v12[v14[8]], &v13[v14[8]], v72);
  v82 = v14[9];
  v83 = &v12[v82];
  v84 = &v13[v82];
  v85 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v85 - 8) + 40))(v83, v84, v85);
LABEL_7:
  v37 = type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
  v38 = *(int *)(v37 + 20);
  v39 = &v12[v38];
  v40 = &v13[v38];
  v41 = v16(&v12[v38], 1, v14);
  v42 = v16(v40, 1, v14);
  if (!v41)
  {
    if (!v42)
    {
      v86 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 40))(v39, v40, v86);
      v87 = v14[5];
      v88 = &v39[v87];
      v89 = &v40[v87];
      v105 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
      v90 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v105 - 8) + 40);
      v90(v88, v89, v105);
      v91 = v14[6];
      v92 = &v39[v91];
      v93 = &v40[v91];
      v94 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 40))(v92, v93, v94);
      v95 = v14[7];
      v96 = &v39[v95];
      v97 = &v40[v95];
      v98 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 40))(v96, v97, v98);
      v90(&v39[v14[8]], &v40[v14[8]], v105);
      v99 = v14[9];
      v100 = &v39[v99];
      v101 = &v40[v99];
      v102 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 40))(v100, v101, v102);
      goto LABEL_13;
    }
    outlined destroy of DisambiguationItemWithDirectInvocationModel((uint64_t)v39);
    goto LABEL_12;
  }
  if (v42)
  {
LABEL_12:
    v61 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    goto LABEL_13;
  }
  v43 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v39, v40, v43);
  v44 = v14[5];
  v45 = &v39[v44];
  v46 = &v40[v44];
  v103 = v37;
  v104 = v15;
  v47 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  v48 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32);
  v48(v45, v46, v47);
  v49 = v14[6];
  v50 = &v39[v49];
  v51 = &v40[v49];
  v52 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v50, v51, v52);
  v53 = v14[7];
  v54 = &v39[v53];
  v55 = &v40[v53];
  v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v54, v55, v56);
  v48(&v39[v14[8]], &v40[v14[8]], v47);
  v37 = v103;
  v57 = v14[9];
  v58 = &v39[v57];
  v59 = &v40[v57];
  v60 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(v58, v59, v60);
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v104 + 56))(v39, 0, 1, v14);
LABEL_13:
  v62 = *(int *)(v37 + 24);
  v63 = &v12[v62];
  v64 = &v13[v62];
  v66 = *(_QWORD *)v64;
  v65 = *((_QWORD *)v64 + 1);
  *(_QWORD *)v63 = v66;
  *((_QWORD *)v63 + 1) = v65;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ForeignEmergencyCallDisambiguationView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_243AE1B04(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = type metadata accessor for ActionHandler();
    v10 = *(_QWORD *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v9;
      v12 = *(int *)(a3 + 20);
    }
    else
    {
      v11 = type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
      v10 = *(_QWORD *)(v11 - 8);
      v12 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(&a1[v12], a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for ForeignEmergencyCallDisambiguationView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_243AE1BBC(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)result = a2;
  }
  else
  {
    v8 = type metadata accessor for ActionHandler();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

uint64_t type metadata completion function for ForeignEmergencyCallDisambiguationView()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for ActionHandler();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for ForeignEmergencyCallDisambiguationModel(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ForeignEmergencyCallDisambiguationView_Previews()
{
  return &type metadata for ForeignEmergencyCallDisambiguationView_Previews;
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>)>>, _AppearanceActionModifier>, <<opaque return type of View.privacySensitive(_:)>>.0> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[4];

  result = lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>)>>, _AppearanceActionModifier>, <<opaque return type of View.privacySensitive(_:)>>.0> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>)>>, _AppearanceActionModifier>, <<opaque return type of View.privacySensitive(_:)>>.0> and conformance <> _ConditionalContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>)>>, _AppearanceActionModifier>, <<opaque return type of View.privacySensitive(_:)>>.0>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>();
    v3[2] = type metadata accessor for BinaryButtonView();
    v3[3] = lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type BinaryButtonView and conformance BinaryButtonView, (uint64_t (*)(uint64_t))MEMORY[0x24BEADCE8], MEMORY[0x24BEADCC8]);
    v3[0] = v2;
    v3[1] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x249501140](MEMORY[0x24BDEF3D8], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>)>>, _AppearanceActionModifier>, <<opaque return type of View.privacySensitive(_:)>>.0> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

uint64_t sub_243AE1DAC()
{
  return lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type SnippetPreview<ForeignEmergencyCallDisambiguationModel, ForeignEmergencyCallDisambiguationView> and conformance SnippetPreview<A, B>, &demangling cache variable for type metadata for SnippetPreview<ForeignEmergencyCallDisambiguationModel, ForeignEmergencyCallDisambiguationView>, MEMORY[0x24BEAD9E8]);
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t partial apply for closure #3 in ForeignEmergencyCallDisambiguationView.button(for:)@<X0>(uint64_t a1@<X8>)
{
  return closure #3 in ForeignEmergencyCallDisambiguationView.button(for:)(a1);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>);
    v2 = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<TextAlignment>, MEMORY[0x24BDF1020]);
    v3[0] = MEMORY[0x24BDF1F78];
    v3[1] = v2;
    result = MEMORY[0x249501140](MEMORY[0x24BDED300], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t sub_243AE1EF0()
{
  uint64_t v0;

  outlined consume of Text.Storage(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t objectdestroy_7Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unsigned int (*v11)(unint64_t, uint64_t, int *);
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(unint64_t, uint64_t);
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  void (*v27)(unint64_t, uint64_t);
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;

  v1 = type metadata accessor for ForeignEmergencyCallDisambiguationView();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = (int *)type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  v6 = *((_QWORD *)v5 - 1);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v48 = v0;

  v8 = v0 + v3 + *(int *)(v1 + 20);
  v9 = type metadata accessor for ActionHandler();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = v0 + v3 + *(int *)(v1 + 24);
  v11 = *(unsigned int (**)(unint64_t, uint64_t, int *))(v6 + 48);
  if (!v11(v10, 1, v5))
  {
    v12 = type metadata accessor for UUID();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
    v13 = v10 + v5[5];
    v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
    v15 = v4;
    v16 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8);
    v16(v13, v14);
    v17 = v10 + v5[6];
    v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
    v19 = v10 + v5[7];
    v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
    v16(v10 + v5[8], v14);
    v4 = v15;
    v21 = v10 + v5[9];
    v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
  }
  v23 = v10 + *(int *)(type metadata accessor for ForeignEmergencyCallDisambiguationModel(0) + 20);
  if (!v11(v23, 1, v5))
  {
    v24 = type metadata accessor for UUID();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
    v25 = v23 + v5[5];
    v47 = v4;
    v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
    v27 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8);
    v27(v25, v26);
    v28 = v23 + v5[6];
    v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v28, v29);
    v30 = v23 + v5[7];
    v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v30, v31);
    v32 = v26;
    v4 = v47;
    v27(v23 + v5[8], v32);
    v33 = v23 + v5[9];
    v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v33, v34);
  }
  swift_bridgeObjectRelease();
  v35 = v48 + ((v3 + v4 + v7) & ~v7);
  v36 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v35, v36);
  v37 = v35 + v5[5];
  v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  v39 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 8);
  v39(v37, v38);
  v40 = v35 + v5[6];
  v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 8))(v40, v41);
  v42 = v35 + v5[7];
  v43 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 8))(v42, v43);
  v39(v35 + v5[8], v38);
  v44 = v35 + v5[9];
  v45 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 8))(v44, v45);
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in ForeignEmergencyCallDisambiguationView.button(for:)()
{
  type metadata accessor for ForeignEmergencyCallDisambiguationView();
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  return ForeignEmergencyCallDisambiguationView.performAction(for:)();
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

void static RFImage.sfSymbol(_:)(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_243AE23D0()
{
  static RFImage.symbol(_:dark:)();
  return swift_bridgeObjectRelease();
}

uint64_t Symbols.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_243AE24EC + 4 * byte_243B32BA8[a1]))(0xD000000000000019, 0x8000000243B36EE0);
}

uint64_t sub_243AE24EC()
{
  return 0x69662E656E6F6870;
}

unint64_t sub_243AE256C()
{
  return 0xD000000000000010;
}

uint64_t sub_243AE2588()
{
  return 0x70752E776F727261;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance Symbols(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = Symbols.rawValue.getter(*a1);
  v5 = v4;
  if (v3 == Symbols.rawValue.getter(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance Symbols()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  Hasher.init(_seed:)();
  Symbols.rawValue.getter(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Symbols()
{
  unsigned __int8 *v0;

  Symbols.rawValue.getter(*v0);
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance Symbols()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  Hasher.init(_seed:)();
  Symbols.rawValue.getter(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

unint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance Symbols@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = specialized Symbols.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance Symbols@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = Symbols.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t specialized Symbols.init(rawValue:)(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of Symbols.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 8)
    return 8;
  else
    return v3;
}

unint64_t lazy protocol witness table accessor for type Symbols and conformance Symbols()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Symbols and conformance Symbols;
  if (!lazy protocol witness table cache variable for type Symbols and conformance Symbols)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for Symbols, &type metadata for Symbols);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Symbols and conformance Symbols);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for Symbols(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_243AE2864 + 4 * byte_243B32BB5[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_243AE2898 + 4 * byte_243B32BB0[v4]))();
}

uint64_t sub_243AE2898(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_243AE28A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x243AE28A8);
  return result;
}

uint64_t sub_243AE28B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x243AE28BCLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_243AE28C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_243AE28C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Symbols()
{
  return &type metadata for Symbols;
}

uint64_t AppDescriptionView.app.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for AppDescriptionView();
  return outlined init with copy of SearchCallHistoryBinaryButtonModel(v1 + *(int *)(v3 + 24), a1, (uint64_t (*)(_QWORD))type metadata accessor for AppDescription);
}

uint64_t type metadata accessor for AppDescriptionView()
{
  uint64_t result;

  result = type metadata singleton initialization cache for AppDescriptionView;
  if (!type metadata singleton initialization cache for AppDescriptionView)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t AppDescriptionView.imageStyle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppDescriptionView() + 28);
  v4 = type metadata accessor for ImageElement.ImageStyle();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AppDescriptionView.fontWeight.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for AppDescriptionView() + 32));
}

uint64_t AppDescriptionView.init(for:imageStyle:fontWeight:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t *a5@<X8>)
{
  uint64_t v10;
  int *v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  char *v15;

  type metadata accessor for Context();
  lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
  *a5 = EnvironmentObject.init()();
  a5[1] = v10;
  v11 = (int *)type metadata accessor for AppDescriptionView();
  ActionHandler.init()();
  outlined init with take of SingleResultCallHistoryModel(a1, (uint64_t)a5 + v11[6], (uint64_t (*)(_QWORD))type metadata accessor for AppDescription);
  v12 = (char *)a5 + v11[7];
  v13 = type metadata accessor for ImageElement.ImageStyle();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v12, a2, v13);
  v15 = (char *)a5 + v11[8];
  *(_QWORD *)v15 = a3;
  v15[8] = a4 & 1;
  return result;
}

uint64_t AppDescriptionView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v25 = a1;
  v2 = type metadata accessor for AppDescriptionView();
  v22 = *(_QWORD *)(v2 - 8);
  v3 = *(_QWORD *)(v22 + 64);
  MEMORY[0x24BDAC7A8](v2);
  v4 = type metadata accessor for SimpleItemRichView();
  v21 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.fontWeight(_:)>>.0);
  v8 = *(_QWORD *)(v7 - 8);
  v23 = v7;
  v24 = v8;
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v1 + *(int *)(v2 + 24);
  v12 = (uint64_t *)(v11 + *(int *)(type metadata accessor for AppDescription() + 20));
  v14 = *v12;
  v13 = v12[1];
  v52 = MEMORY[0x24BEE0D00];
  v53 = MEMORY[0x24BEAE5C0];
  v50 = v14;
  v51 = v13;
  v49 = 0;
  v47 = 0u;
  v48 = 0u;
  v46 = 0;
  v44 = 0u;
  v45 = 0u;
  v43 = 0;
  v41 = 0u;
  v42 = 0u;
  v40 = 0;
  v38 = 0u;
  v39 = 0u;
  v37 = 0;
  v35 = 0u;
  v36 = 0u;
  v34 = 0;
  v32 = 0u;
  v33 = 0u;
  v31 = 0;
  v29 = 0u;
  v30 = 0u;
  swift_bridgeObjectRetain();
  v15 = AppDescriptionView.appIconView.getter();
  v27 = MEMORY[0x24BDF4788];
  v28 = MEMORY[0x24BEAD940];
  v26 = v15;
  SimpleItemRichView.init(text1:text2:text3:text4:text5:text6:text7:text8:thumbnail:)();
  v16 = lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type SimpleItemRichView and conformance SimpleItemRichView, (uint64_t (*)(uint64_t))MEMORY[0x24BEADE98], MEMORY[0x24BEADE78]);
  View.fontWeight(_:)();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v4);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v1, (uint64_t)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for AppDescriptionView);
  v17 = (*(unsigned __int8 *)(v22 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v18 = swift_allocObject();
  outlined init with take of SingleResultCallHistoryModel((uint64_t)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17, (uint64_t (*)(_QWORD))type metadata accessor for AppDescriptionView);
  v50 = v4;
  v51 = v16;
  swift_getOpaqueTypeConformance2();
  v19 = v23;
  View.componentTapped(isNavigation:perform:)();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v10, v19);
}

uint64_t AppDescriptionView.appIconView.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t KeyPath;
  char *v21;
  void (*v22)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v30[2];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ImageElement.ImageStyle?);
  MEMORY[0x24BDAC7A8](v1);
  v36 = (char *)v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for ImageElement.ImageStyle();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ImageElement();
  MEMORY[0x24BDAC7A8](v7);
  v8 = type metadata accessor for ImageElementView();
  v34 = *(_QWORD *)(v8 - 8);
  v35 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>);
  MEMORY[0x24BDAC7A8](v33);
  v12 = (char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for AppDescriptionView();
  v13 = v0 + *(int *)(v31 + 24);
  v14 = (uint64_t *)(v13 + *(int *)(type metadata accessor for AppDescription() + 24));
  v15 = *v14;
  v30[0] = v14[1];
  v30[1] = v15;
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BEAABB0], v3);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<_ProtoIdiom>);
  v16 = type metadata accessor for _ProtoIdiom();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_243B32430;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v17 + 104))(v19 + v18, *MEMORY[0x24BEAA998], v16);
  specialized Set.init(_nonEmptyArrayLiteral:)(v19);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  static ImageElement.appIcon(_:imageStyle:idioms:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  ImageElementView.init(_:)();
  KeyPath = swift_getKeyPath();
  v21 = v36;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v36, v32 + *(int *)(v31 + 28), v3);
  v22 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56);
  v23 = (uint64_t)v21;
  v22(v21, 0, 1, v3);
  v24 = (uint64_t *)&v12[*(int *)(v33 + 36)];
  v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>);
  outlined init with copy of ImageElement.ImageStyle?(v23, (uint64_t)v24 + *(int *)(v25 + 28));
  *v24 = KeyPath;
  v27 = v34;
  v26 = v35;
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v12, v10, v35);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v23, &demangling cache variable for type metadata for ImageElement.ImageStyle?);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v26);
  lazy protocol witness table accessor for type ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>> and conformance <> ModifiedContent<A, B>();
  v28 = View.eraseToAnyView()();
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v12, &demangling cache variable for type metadata for ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>);
  return v28;
}

uint64_t closure #1 in AppDescriptionView.body.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[2];
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for InteractionType?);
  MEMORY[0x24BDAC7A8](v2);
  v42 = (char *)v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionProperty?);
  MEMORY[0x24BDAC7A8](v4);
  v41 = (char *)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for AppDescriptionView();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ActionProperty();
  v44 = *(_QWORD *)(v12 - 8);
  v45 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionElementConvertible>);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_243B32430;
  v16 = type metadata accessor for Command();
  v17 = MEMORY[0x24BEAD1E8];
  *(_QWORD *)(v15 + 56) = v16;
  *(_QWORD *)(v15 + 64) = v17;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v15 + 32));
  v19 = type metadata accessor for AppDescription();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  *boxed_opaque_existential_1 = CodableAceObject.wrappedValue.getter();
  *((_BYTE *)boxed_opaque_existential_1 + 8) = 0;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x24BEAD1C8], v16);
  v43 = v14;
  ActionProperty.init(_:)();
  if (one-time initialization token for phoneSnippetUI != -1)
    swift_once();
  v20 = type metadata accessor for Logger();
  __swift_project_value_buffer(v20, (uint64_t)static Logger.phoneSnippetUI);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(a1, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for AppDescriptionView);
  v21 = Logger.logObject.getter();
  v22 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = swift_slowAlloc();
    v40 = v8;
    v24 = (uint8_t *)v23;
    v25 = swift_slowAlloc();
    v47 = v25;
    v39[1] = a1;
    *(_DWORD *)v24 = 136315138;
    v26 = (uint64_t *)&v11[*(int *)(v9 + 24) + (uint64_t)*(int *)(v19 + 24)];
    v28 = *v26;
    v27 = v26[1];
    swift_bridgeObjectRetain();
    v46 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v28, v27, &v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined destroy of AppDescriptionView((uint64_t)v11);
    _os_log_impl(&dword_243ABD000, v21, v22, "#AppDescriptionView tapped, performing direct action for %s", v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2495011B8](v25, -1, -1);
    v29 = v24;
    v8 = v40;
    MEMORY[0x2495011B8](v29, -1, -1);
  }
  else
  {
    outlined destroy of AppDescriptionView((uint64_t)v11);
  }

  ActionHandler.wrappedValue.getter();
  v30 = type metadata accessor for StandardActionHandler();
  v31 = *(_QWORD *)(v30 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v8, 1, v30) == 1)
  {
    (*(void (**)(char *, uint64_t))(v44 + 8))(v43, v45);
    return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v8, &demangling cache variable for type metadata for StandardActionHandler?);
  }
  else
  {
    v34 = v43;
    v33 = v44;
    v35 = (uint64_t)v41;
    v36 = v45;
    (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v41, v43, v45);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v33 + 56))(v35, 0, 1, v36);
    v37 = type metadata accessor for InteractionType();
    v38 = (uint64_t)v42;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v42, 1, 1, v37);
    StandardActionHandler.perform(_:interactionType:)();
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v38, &demangling cache variable for type metadata for InteractionType?);
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v35, &demangling cache variable for type metadata for ActionProperty?);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v36);
    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v8, v30);
  }
}

uint64_t sub_243AE3590()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  id *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;

  v1 = (int *)type metadata accessor for AppDescriptionView();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = (id *)(v0 + ((v2 + 16) & ~v2));

  v4 = (char *)v3 + v1[5];
  v5 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = (char *)v3 + v1[6];
  v7 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = type metadata accessor for AppDescription();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = &v6[*(int *)(v8 + 32)];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = (char *)v3 + v1[7];
  v12 = type metadata accessor for ImageElement.ImageStyle();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in AppDescriptionView.body.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AppDescriptionView() - 8) + 80);
  return closure #1 in AppDescriptionView.body.getter(v0 + ((v1 + 16) & ~v1));
}

uint64_t associated type witness table accessor for View.Body : View in AppDescriptionView()
{
  return swift_getOpaqueTypeConformance2();
}

char *initializeBufferWithCopyOfBuffer for AppDescriptionView(char *a1, char **a2, int *a3)
{
  int v3;
  char *v4;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v7 = a1;
    *((_QWORD *)a1 + 1) = a2[1];
    v8 = a3[5];
    v9 = &a1[v8];
    v10 = (uint64_t)a2 + v8;
    v11 = type metadata accessor for ActionHandler();
    v12 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v13 = v4;
    v12(v9, v10, v11);
    v14 = a3[6];
    v15 = &v7[v14];
    v16 = (uint64_t)a2 + v14;
    v17 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    v18 = (int *)type metadata accessor for AppDescription();
    v19 = v18[5];
    v20 = &v15[v19];
    v21 = (uint64_t *)(v16 + v19);
    v23 = *v21;
    v22 = v21[1];
    *(_QWORD *)v20 = v23;
    *((_QWORD *)v20 + 1) = v22;
    v24 = v18[6];
    v25 = &v15[v24];
    v26 = (_QWORD *)(v16 + v24);
    v27 = v26[1];
    *(_QWORD *)v25 = *v26;
    *((_QWORD *)v25 + 1) = v27;
    v15[v18[7]] = *(_BYTE *)(v16 + v18[7]);
    v28 = v18[8];
    v29 = &v15[v28];
    v30 = v16 + v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[7];
    v33 = &v7[v32];
    v34 = (uint64_t)a2 + v32;
    v35 = type metadata accessor for ImageElement.ImageStyle();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[8];
    v37 = &v7[v36];
    v38 = (uint64_t)a2 + v36;
    *(_QWORD *)v37 = *(_QWORD *)v38;
    v37[8] = *(_BYTE *)(v38 + 8);
  }
  return v7;
}

uint64_t destroy for AppDescriptionView(id *a1, int *a2)
{
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;

  v4 = (char *)a1 + a2[5];
  v5 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = (char *)a1 + a2[6];
  v7 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = type metadata accessor for AppDescription();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = &v6[*(int *)(v8 + 32)];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = (char *)a1 + a2[7];
  v12 = type metadata accessor for ImageElement.ImageStyle();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
}

_QWORD *initializeWithCopy for AppDescriptionView(_QWORD *a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  id v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;

  v7 = *(void **)a2;
  v6 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v6;
  v8 = a3[5];
  v9 = (char *)a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for ActionHandler();
  v12 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  v13 = v7;
  v12(v9, v10, v11);
  v14 = a3[6];
  v15 = (char *)a1 + v14;
  v16 = a2 + v14;
  v17 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  v18 = (int *)type metadata accessor for AppDescription();
  v19 = v18[5];
  v20 = &v15[v19];
  v21 = (uint64_t *)(v16 + v19);
  v23 = *v21;
  v22 = v21[1];
  *(_QWORD *)v20 = v23;
  *((_QWORD *)v20 + 1) = v22;
  v24 = v18[6];
  v25 = &v15[v24];
  v26 = (_QWORD *)(v16 + v24);
  v27 = v26[1];
  *(_QWORD *)v25 = *v26;
  *((_QWORD *)v25 + 1) = v27;
  v15[v18[7]] = *(_BYTE *)(v16 + v18[7]);
  v28 = v18[8];
  v29 = &v15[v28];
  v30 = v16 + v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
  v32 = a3[7];
  v33 = (char *)a1 + v32;
  v34 = a2 + v32;
  v35 = type metadata accessor for ImageElement.ImageStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
  v36 = a3[8];
  v37 = (char *)a1 + v36;
  v38 = a2 + v36;
  *(_QWORD *)v37 = *(_QWORD *)v38;
  v37[8] = *(_BYTE *)(v38 + 8);
  return a1;
}

uint64_t assignWithCopy for AppDescriptionView(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;

  v6 = *(void **)a1;
  v7 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v7;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v9 = a3[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v13 = a3[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v14, v15, v16);
  v17 = (int *)type metadata accessor for AppDescription();
  v18 = v17[5];
  v19 = (_QWORD *)(v14 + v18);
  v20 = (_QWORD *)(v15 + v18);
  *v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = v17[6];
  v22 = (_QWORD *)(v14 + v21);
  v23 = (_QWORD *)(v15 + v21);
  *v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v14 + v17[7]) = *(_BYTE *)(v15 + v17[7]);
  v24 = v17[8];
  v25 = v14 + v24;
  v26 = v15 + v24;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 24))(v25, v26, v27);
  v28 = a3[7];
  v29 = a1 + v28;
  v30 = a2 + v28;
  v31 = type metadata accessor for ImageElement.ImageStyle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 24))(v29, v30, v31);
  v32 = a3[8];
  v33 = a1 + v32;
  v34 = a2 + v32;
  v35 = *(_BYTE *)(v34 + 8);
  *(_QWORD *)v33 = *(_QWORD *)v34;
  *(_BYTE *)(v33 + 8) = v35;
  return a1;
}

_OWORD *initializeWithTake for AppDescriptionView(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = (int *)type metadata accessor for AppDescription();
  *(_OWORD *)&v11[v14[5]] = *(_OWORD *)&v12[v14[5]];
  *(_OWORD *)&v11[v14[6]] = *(_OWORD *)&v12[v14[6]];
  v11[v14[7]] = v12[v14[7]];
  v15 = v14[8];
  v16 = &v11[v15];
  v17 = &v12[v15];
  v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[7];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = type metadata accessor for ImageElement.ImageStyle();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[8];
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  *(_QWORD *)v24 = *(_QWORD *)v25;
  v24[8] = v25[8];
  return a1;
}

uint64_t assignWithTake for AppDescriptionView(uint64_t a1, _QWORD *a2, int *a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  _QWORD *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  *(_QWORD *)(a1 + 8) = a2[1];
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = (int *)type metadata accessor for AppDescription();
  v16 = v15[5];
  v17 = (_QWORD *)(v12 + v16);
  v18 = &v13[v16];
  v20 = *(_QWORD *)v18;
  v19 = *((_QWORD *)v18 + 1);
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  v21 = v15[6];
  v22 = (_QWORD *)(v12 + v21);
  v23 = &v13[v21];
  v25 = *(_QWORD *)v23;
  v24 = *((_QWORD *)v23 + 1);
  *v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + v15[7]) = v13[v15[7]];
  v26 = v15[8];
  v27 = v12 + v26;
  v28 = &v13[v26];
  v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 40))(v27, v28, v29);
  v30 = a3[7];
  v31 = a1 + v30;
  v32 = (char *)a2 + v30;
  v33 = type metadata accessor for ImageElement.ImageStyle();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 40))(v31, v32, v33);
  v34 = a3[8];
  v35 = a1 + v34;
  v36 = (char *)a2 + v34;
  *(_QWORD *)v35 = *(_QWORD *)v36;
  *(_BYTE *)(v35 + 8) = v36[8];
  return a1;
}

uint64_t getEnumTagSinglePayload for AppDescriptionView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_243AE3F48(char *a1, uint64_t a2, int *a3)
{
  uint64_t v4;
  int v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = type metadata accessor for ActionHandler();
    v10 = *(_QWORD *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v9;
      v12 = a3[5];
    }
    else
    {
      v13 = type metadata accessor for AppDescription();
      v10 = *(_QWORD *)(v13 - 8);
      if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
      {
        v11 = v13;
        v12 = a3[6];
      }
      else
      {
        v11 = type metadata accessor for ImageElement.ImageStyle();
        v10 = *(_QWORD *)(v11 - 8);
        v12 = a3[7];
      }
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(&a1[v12], a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for AppDescriptionView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_243AE4024(char *result, uint64_t a2, int a3, int *a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)result = a2;
  }
  else
  {
    v8 = type metadata accessor for ActionHandler();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[5];
    }
    else
    {
      v12 = type metadata accessor for AppDescription();
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[6];
      }
      else
      {
        v10 = type metadata accessor for ImageElement.ImageStyle();
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[7];
      }
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

uint64_t type metadata completion function for AppDescriptionView()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = type metadata accessor for ActionHandler();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for AppDescription();
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for ImageElement.ImageStyle();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_243AE4198()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for <<opaque return type of View.fontWeight(_:)>>.0);
  type metadata accessor for SimpleItemRichView();
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type SimpleItemRichView and conformance SimpleItemRichView, (uint64_t (*)(uint64_t))MEMORY[0x24BEADE98], MEMORY[0x24BEADE78]);
  swift_getOpaqueTypeConformance2();
  return swift_getOpaqueTypeConformance2();
}

uint64_t outlined destroy of AppDescriptionView(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AppDescriptionView();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t outlined init with copy of ImageElement.ImageStyle?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ImageElement.ImageStyle?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t SearchCallHistoryBinaryButtonView.init(model:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  ActionHandler.init()();
  v4 = type metadata accessor for SearchCallHistoryBinaryButtonView();
  return outlined init with take of SingleResultCallHistoryModel(a1, a2 + *(int *)(v4 + 20), (uint64_t (*)(_QWORD))type metadata accessor for SearchCallHistoryBinaryButtonModel);
}

uint64_t type metadata accessor for SearchCallHistoryBinaryButtonView()
{
  uint64_t result;

  result = type metadata singleton initialization cache for SearchCallHistoryBinaryButtonView;
  if (!type metadata singleton initialization cache for SearchCallHistoryBinaryButtonView)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t key path setter for SearchCallHistoryBinaryButtonView.actionHandler : SearchCallHistoryBinaryButtonView(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v9 - v6;
  outlined init with copy of StandardActionHandler?(a1, (uint64_t)&v9 - v6);
  outlined init with copy of StandardActionHandler?((uint64_t)v7, (uint64_t)v5);
  ActionHandler.wrappedValue.setter();
  return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v7, &demangling cache variable for type metadata for StandardActionHandler?);
}

uint64_t SearchCallHistoryBinaryButtonView.actionHandler.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  MEMORY[0x24BDAC7A8](v2);
  outlined init with copy of StandardActionHandler?(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  ActionHandler.wrappedValue.setter();
  return outlined destroy of SearchCallHistoryBinaryButtonModel?(a1, &demangling cache variable for type metadata for StandardActionHandler?);
}

uint64_t outlined init with copy of StandardActionHandler?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void (*SearchCallHistoryBinaryButtonView.actionHandler.modify(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = ActionHandler.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t SearchCallHistoryBinaryButtonView.model.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for SearchCallHistoryBinaryButtonView();
  return outlined init with copy of SearchCallHistoryBinaryButtonModel(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(_QWORD))type metadata accessor for SearchCallHistoryBinaryButtonModel);
}

uint64_t SearchCallHistoryBinaryButtonView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[12];

  v14[1] = a1;
  v2 = type metadata accessor for SearchCallHistoryBinaryButtonView();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<Text>);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = SearchCallHistoryBinaryButtonView.primaryButton.getter();
  v14[10] = MEMORY[0x24BDF4788];
  v14[11] = MEMORY[0x24BEAD940];
  v14[7] = v9;
  type metadata accessor for SearchCallHistoryBinaryButtonModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v1, (uint64_t)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for SearchCallHistoryBinaryButtonView);
  v10 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v11 = swift_allocObject();
  outlined init with take of SingleResultCallHistoryModel((uint64_t)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10, (uint64_t (*)(_QWORD))type metadata accessor for SearchCallHistoryBinaryButtonView);
  lazy protocol witness table accessor for type String and conformance String();
  Button<>.init<A>(_:action:)();
  lazy protocol witness table accessor for type Button<Text> and conformance Button<A>();
  v12 = View.eraseToAnyView()();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v14[6] = MEMORY[0x24BEAD940];
  v14[5] = MEMORY[0x24BDF4788];
  v14[2] = v12;
  return BinaryButtonView.init(primaryButton:secondaryButton:)();
}

uint64_t SearchCallHistoryBinaryButtonView.primaryButton.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v1 = v0;
  v23 = type metadata accessor for ButtonItemButtonStyle.Role();
  v21 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for SearchCallHistoryBinaryButtonView();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<Text>);
  v20 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.buttonRole(_:)>>.0);
  v22 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v1, (uint64_t)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for SearchCallHistoryBinaryButtonView);
  v13 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v14 = swift_allocObject();
  outlined init with take of SingleResultCallHistoryModel((uint64_t)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13, (uint64_t (*)(_QWORD))type metadata accessor for SearchCallHistoryBinaryButtonView);
  lazy protocol witness table accessor for type String and conformance String();
  Button<>.init<A>(_:action:)();
  v15 = v21;
  v16 = v23;
  (*(void (**)(char *, _QWORD, uint64_t))(v21 + 104))(v3, *MEMORY[0x24BEAD980], v23);
  v17 = lazy protocol witness table accessor for type Button<Text> and conformance Button<A>();
  View.buttonRole(_:)();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v3, v16);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v7);
  v24 = v7;
  v25 = v17;
  swift_getOpaqueTypeConformance2();
  v18 = View.eraseToAnyView()();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v10);
  return v18;
}

void SearchCallHistoryBinaryButtonView.command(for:)(uint64_t a1@<X8>)
{
  id v2;
  uint64_t v3;
  void *v4;
  Class isa;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  NSObject *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  unsigned int *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;

  type metadata accessor for SearchCallHistoryBinaryButtonView();
  swift_getAtKeyPath();
  v2 = objc_msgSend(v23, sel_dictionary);

  if (v2)
  {
    type metadata accessor for NSObject();
    lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type NSObject and conformance NSObject, (uint64_t (*)(uint64_t))type metadata accessor for NSObject, MEMORY[0x24BEE5BD8]);
    v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    v4 = (void *)objc_opt_self();
    specialized _dictionaryUpCast<A, B, C, D>(_:)(v3);
    swift_bridgeObjectRelease();
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    v6 = objc_msgSend(v4, sel_aceObjectWithDictionary_, isa);

    if (v6 && (objc_opt_self(), (v7 = swift_dynamicCastObjCClass()) != 0))
    {
      v8 = v7;
      v9 = one-time initialization token for phoneSnippetUI;
      v10 = v6;
      if (v9 != -1)
        swift_once();
      v11 = type metadata accessor for Logger();
      __swift_project_value_buffer(v11, (uint64_t)static Logger.phoneSnippetUI);
      v12 = Logger.logObject.getter();
      v13 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v14 = 0;
        _os_log_impl(&dword_243ABD000, v12, v13, "#SearchCallHistoryBinaryButtonView tap button is SAIntentGroupRunSiriKitExecutor", v14, 2u);
        MEMORY[0x2495011B8](v14, -1, -1);
        v15 = v10;
      }
      else
      {
        v15 = v12;
        v12 = v10;
      }

      *(_QWORD *)a1 = v8;
      *(_BYTE *)(a1 + 8) = 0;
      v20 = (unsigned int *)MEMORY[0x24BEAD1C8];
    }
    else
    {
      if (one-time initialization token for phoneSnippetUI != -1)
        swift_once();
      v16 = type metadata accessor for Logger();
      __swift_project_value_buffer(v16, (uint64_t)static Logger.phoneSnippetUI);
      v17 = Logger.logObject.getter();
      v18 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v17, v18))
      {
        v19 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v19 = 0;
        _os_log_impl(&dword_243ABD000, v17, v18, "#SearchCallHistoryBinaryButtonView tap button is aceCommand", v19, 2u);
        MEMORY[0x2495011B8](v19, -1, -1);
      }

      swift_getAtKeyPath();
      *(_QWORD *)a1 = v23;
      *(_BYTE *)(a1 + 8) = 0;
      v20 = (unsigned int *)MEMORY[0x24BEAD188];
    }
    v21 = *v20;
    v22 = type metadata accessor for Command();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(a1, v21, v22);
  }
  else
  {
    __break(1u);
  }
}

uint64_t closure #1 in SearchCallHistoryBinaryButtonView.primaryButton.getter(uint64_t a1, const char *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for InteractionType?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionProperty?);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for phoneSnippetUI != -1)
    swift_once();
  v12 = type metadata accessor for Logger();
  __swift_project_value_buffer(v12, (uint64_t)static Logger.phoneSnippetUI);
  v13 = Logger.logObject.getter();
  v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v15 = 0;
    _os_log_impl(&dword_243ABD000, v13, v14, a2, v15, 2u);
    MEMORY[0x2495011B8](v15, -1, -1);
  }

  ActionHandler.wrappedValue.getter();
  v16 = type metadata accessor for StandardActionHandler();
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v11, 1, v16) == 1)
    return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v11, &demangling cache variable for type metadata for StandardActionHandler?);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionElementConvertible>);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_243B32430;
  swift_getKeyPath();
  v20 = type metadata accessor for Command();
  v21 = MEMORY[0x24BEAD1E8];
  *(_QWORD *)(v19 + 56) = v20;
  *(_QWORD *)(v19 + 64) = v21;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v19 + 32));
  SearchCallHistoryBinaryButtonView.command(for:)((uint64_t)boxed_opaque_existential_1);
  swift_release();
  ActionProperty.init(_:)();
  v23 = type metadata accessor for ActionProperty();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v8, 0, 1, v23);
  v24 = type metadata accessor for InteractionType();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v5, 1, 1, v24);
  StandardActionHandler.perform(_:interactionType:)();
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v5, &demangling cache variable for type metadata for InteractionType?);
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v8, &demangling cache variable for type metadata for ActionProperty?);
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v11, v16);
}

uint64_t partial apply for closure #1 in SearchCallHistoryBinaryButtonView.secondaryButton.getter()
{
  return partial apply for closure #1 in SearchCallHistoryBinaryButtonView.secondaryButton.getter("#SearchCallHistoryBinaryButtonView secondaryButton tapped");
}

unint64_t lazy protocol witness table accessor for type Button<Text> and conformance Button<A>()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type Button<Text> and conformance Button<A>;
  if (!lazy protocol witness table cache variable for type Button<Text> and conformance Button<A>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Button<Text>);
    result = MEMORY[0x249501140](MEMORY[0x24BDF43B8], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Button<Text> and conformance Button<A>);
  }
  return result;
}

unint64_t type metadata accessor for NSObject()
{
  unint64_t result;

  result = lazy cache variable for type metadata for NSObject;
  if (!lazy cache variable for type metadata for NSObject)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for NSObject);
  }
  return result;
}

uint64_t specialized _dictionaryUpCast<A, B, C, D>(_:)(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  int64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  int64_t v34;
  unint64_t v35;
  int64_t v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  _OWORD v44[2];
  _OWORD v45[2];
  void *v46;
  uint64_t v47;

  v1 = a1;
  v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
LABEL_8:
    v3 = MEMORY[0x24BEE4B00];
    if (v2)
      goto LABEL_6;
LABEL_9:
    v8 = -1 << *(_BYTE *)(v1 + 32);
    v5 = ~v8;
    v35 = v1 + 64;
    v9 = -v8;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v6 = v10 & *(_QWORD *)(v1 + 64);
    v7 = v1;
    goto LABEL_13;
  }
  if (a1 >= 0)
    a1 &= 0xFFFFFFFFFFFFFF8uLL;
  if (!MEMORY[0x249500C0C](a1))
    goto LABEL_8;
LABEL_5:
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<AnyHashable, Any>);
  v3 = static _DictionaryStorage.allocate(capacity:)();
  if (!v2)
    goto LABEL_9;
LABEL_6:
  v4 = __CocoaDictionary.makeIterator()();
  v35 = 0;
  v5 = 0;
  v6 = 0;
  v7 = v4 | 0x8000000000000000;
LABEL_13:
  v34 = (unint64_t)(v5 + 64) >> 6;
  v11 = v3 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v36 = 0;
  while ((v7 & 0x8000000000000000) != 0)
  {
    v17 = __CocoaDictionary.Iterator.next()();
    if (!v17)
      goto LABEL_47;
    v19 = v18;
    *(_QWORD *)&v41 = v17;
    type metadata accessor for NSObject();
    swift_dynamicCast();
    v47 = v19;
    v20 = v46;
LABEL_38:
    *(_QWORD *)&v45[0] = v20;
    type metadata accessor for NSObject();
    swift_dynamicCast();
    swift_dynamicCast();
    v41 = v37;
    v42 = v38;
    v43 = v39;
    outlined init with take of Any(&v40, v44);
    v37 = v41;
    v38 = v42;
    v39 = v43;
    outlined init with take of Any(v44, v45);
    outlined init with take of Any(v45, &v41);
    result = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(v3 + 40));
    v27 = -1 << *(_BYTE *)(v3 + 32);
    v28 = result & ~v27;
    v29 = v28 >> 6;
    if (((-1 << v28) & ~*(_QWORD *)(v11 + 8 * (v28 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v30 = 0;
      v31 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_48;
        }
        v32 = v29 == v31;
        if (v29 == v31)
          v29 = 0;
        v30 |= v32;
        v33 = *(_QWORD *)(v11 + 8 * v29);
      }
      while (v33 == -1);
      v13 = __clz(__rbit64(~v33)) + (v29 << 6);
    }
    *(_QWORD *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    v14 = *(_QWORD *)(v3 + 48) + 40 * v13;
    *(_OWORD *)v14 = v37;
    *(_OWORD *)(v14 + 16) = v38;
    *(_QWORD *)(v14 + 32) = v39;
    result = (uint64_t)outlined init with take of Any(&v41, (_OWORD *)(*(_QWORD *)(v3 + 56) + 32 * v13));
    ++*(_QWORD *)(v3 + 16);
  }
  if (v6)
  {
    v15 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    v16 = v15 | (v36 << 6);
LABEL_37:
    v20 = *(void **)(*(_QWORD *)(v7 + 48) + 8 * v16);
    v25 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v16);
    v46 = v20;
    v47 = v25;
    v26 = v20;
    swift_unknownObjectRetain();
    goto LABEL_38;
  }
  v21 = v36 + 1;
  if (__OFADD__(v36, 1))
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  if (v21 >= v34)
    goto LABEL_47;
  v22 = *(_QWORD *)(v35 + 8 * v21);
  v23 = v36 + 1;
  if (v22)
    goto LABEL_36;
  v23 = v36 + 2;
  if (v36 + 2 >= v34)
    goto LABEL_47;
  v22 = *(_QWORD *)(v35 + 8 * v23);
  if (v22)
    goto LABEL_36;
  v23 = v36 + 3;
  if (v36 + 3 >= v34)
    goto LABEL_47;
  v22 = *(_QWORD *)(v35 + 8 * v23);
  if (v22)
    goto LABEL_36;
  v23 = v36 + 4;
  if (v36 + 4 >= v34)
    goto LABEL_47;
  v22 = *(_QWORD *)(v35 + 8 * v23);
  if (v22)
  {
LABEL_36:
    v6 = (v22 - 1) & v22;
    v16 = __clz(__rbit64(v22)) + (v23 << 6);
    v36 = v23;
    goto LABEL_37;
  }
  v24 = v36 + 5;
  if (v36 + 5 >= v34)
  {
LABEL_47:
    v46 = 0;
    v47 = 0;
    swift_release();
    outlined consume of [NSObject : Swift.AnyObject].Iterator._Variant();
    return v3;
  }
  v22 = *(_QWORD *)(v35 + 8 * v24);
  if (v22)
  {
    v23 = v36 + 5;
    goto LABEL_36;
  }
  while (1)
  {
    v23 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v23 >= v34)
      goto LABEL_47;
    v22 = *(_QWORD *)(v35 + 8 * v23);
    ++v24;
    if (v22)
      goto LABEL_36;
  }
LABEL_49:
  __break(1u);
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in SearchCallHistoryBinaryButtonView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_243AE54C8()
{
  return ActionHandler.wrappedValue.getter();
}

uint64_t *initializeBufferWithCopyOfBuffer for SearchCallHistoryBinaryButtonView(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for ActionHandler();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    v13 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
    v14 = v13[5];
    v15 = &v9[v14];
    v16 = &v10[v14];
    v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
    v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
    v18(v15, v16, v17);
    v12(&v9[v13[6]], &v10[v13[6]], v11);
    v18(&v9[v13[7]], &v10[v13[7]], v17);
    v19 = v13[8];
    v20 = &v9[v19];
    v21 = &v10[v19];
    v22 = *((_QWORD *)v21 + 1);
    *(_QWORD *)v20 = *(_QWORD *)v21;
    *((_QWORD *)v20 + 1) = v22;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SearchCallHistoryBinaryButtonView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  int *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);

  v4 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  v8 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  v9 = v5 + v8[5];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
  v11(v9, v10);
  v7(v5 + v8[6], v6);
  v11(v5 + v8[7], v10);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SearchCallHistoryBinaryButtonView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;

  v6 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  v12 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  v13 = v12[5];
  v14 = v8 + v13;
  v15 = v9 + v13;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
  v17(v14, v15, v16);
  v11(v8 + v12[6], v9 + v12[6], v10);
  v17(v8 + v12[7], v9 + v12[7], v16);
  v18 = v12[8];
  v19 = (_QWORD *)(v8 + v18);
  v20 = (_QWORD *)(v9 + v18);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SearchCallHistoryBinaryButtonView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;

  v6 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  v12 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  v13 = v12[5];
  v14 = v8 + v13;
  v15 = v9 + v13;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 24);
  v17(v14, v15, v16);
  v11(v8 + v12[6], v9 + v12[6], v10);
  v17(v8 + v12[7], v9 + v12[7], v16);
  v18 = v12[8];
  v19 = (_QWORD *)(v8 + v18);
  v20 = (_QWORD *)(v9 + v18);
  *v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for SearchCallHistoryBinaryButtonView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v12 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  v13 = v12[5];
  v14 = v8 + v13;
  v15 = v9 + v13;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32);
  v17(v14, v15, v16);
  v11(v8 + v12[6], v9 + v12[6], v10);
  v17(v8 + v12[7], v9 + v12[7], v16);
  *(_OWORD *)(v8 + v12[8]) = *(_OWORD *)(v9 + v12[8]);
  return a1;
}

uint64_t assignWithTake for SearchCallHistoryBinaryButtonView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;

  v6 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v12 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  v13 = v12[5];
  v14 = v8 + v13;
  v15 = v9 + v13;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 40);
  v17(v14, v15, v16);
  v11(v8 + v12[6], v9 + v12[6], v10);
  v17(v8 + v12[7], v9 + v12[7], v16);
  v18 = v12[8];
  v19 = (_QWORD *)(v8 + v18);
  v20 = (uint64_t *)(v9 + v18);
  v22 = *v20;
  v21 = v20[1];
  *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchCallHistoryBinaryButtonView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_243AE5BA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for ActionHandler();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = type metadata accessor for SearchCallHistoryBinaryButtonModel();
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for SearchCallHistoryBinaryButtonView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_243AE5C20(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for ActionHandler();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = type metadata accessor for SearchCallHistoryBinaryButtonModel();
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata completion function for SearchCallHistoryBinaryButtonView()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for ActionHandler();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for SearchCallHistoryBinaryButtonModel();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_243AE5D20()
{
  return lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type BinaryButtonView and conformance BinaryButtonView, (uint64_t (*)(uint64_t))MEMORY[0x24BEADCE8], MEMORY[0x24BEADCC8]);
}

_OWORD *outlined init with take of Any(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t objectdestroyTm_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  int *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);

  v1 = type metadata accessor for SearchCallHistoryBinaryButtonView();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v3 + *(int *)(v1 + 20);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  v8 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  v9 = v5 + v8[5];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
  v11(v9, v10);
  v7(v5 + v8[6], v6);
  v11(v5 + v8[7], v10);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in SearchCallHistoryBinaryButtonView.primaryButton.getter()
{
  return partial apply for closure #1 in SearchCallHistoryBinaryButtonView.secondaryButton.getter("#SearchCallHistoryBinaryButtonView primaryButton tapped");
}

uint64_t partial apply for closure #1 in SearchCallHistoryBinaryButtonView.secondaryButton.getter(const char *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SearchCallHistoryBinaryButtonView() - 8) + 80);
  return closure #1 in SearchCallHistoryBinaryButtonView.primaryButton.getter(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t ButtonConfigurationModel.label.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t property wrapper backing initializer of ButtonConfigurationModel.action()
{
  type metadata accessor for SABaseClientBoundCommand(0, (unint64_t *)&lazy cache variable for type metadata for SABaseCommand);
  return CodableAceObject.init(wrappedValue:)();
}

uint64_t ButtonConfigurationModel.action.getter()
{
  type metadata accessor for ButtonConfigurationModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  return CodableAceObject.wrappedValue.getter();
}

uint64_t type metadata accessor for ButtonConfigurationModel()
{
  uint64_t result;

  result = type metadata singleton initialization cache for ButtonConfigurationModel;
  if (!type metadata singleton initialization cache for ButtonConfigurationModel)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t key path setter for ButtonConfigurationModel.action : ButtonConfigurationModel(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  type metadata accessor for ButtonConfigurationModel();
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  return CodableAceObject.wrappedValue.setter();
}

uint64_t ButtonConfigurationModel.action.setter()
{
  type metadata accessor for ButtonConfigurationModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  return CodableAceObject.wrappedValue.setter();
}

uint64_t (*ButtonConfigurationModel.action.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for ButtonConfigurationModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  v2[4] = CodableAceObject.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t property wrapper backing initializer of ButtonConfigurationModel.directInvocation()
{
  type metadata accessor for SABaseClientBoundCommand(0, (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupRunSiriKitExecutor);
  return CodableAceObject.init(wrappedValue:)();
}

uint64_t ButtonConfigurationModel.directInvocation.getter()
{
  type metadata accessor for ButtonConfigurationModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  return CodableAceObject.wrappedValue.getter();
}

uint64_t key path setter for ButtonConfigurationModel.directInvocation : ButtonConfigurationModel(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  type metadata accessor for ButtonConfigurationModel();
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  return CodableAceObject.wrappedValue.setter();
}

uint64_t ButtonConfigurationModel.directInvocation.setter()
{
  type metadata accessor for ButtonConfigurationModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  return CodableAceObject.wrappedValue.setter();
}

uint64_t (*ButtonConfigurationModel.directInvocation.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for ButtonConfigurationModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v2[4] = CodableAceObject.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t ButtonConfigurationModel.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ButtonConfigurationModel() + 28);
  v4 = type metadata accessor for UUID();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ButtonConfigurationModel.isDirectInvocation.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ButtonConfigurationModel() + 32));
}

uint64_t ButtonConfigurationModel.init(label:action:id:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v8;
  id v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  *a5 = a1;
  a5[1] = a2;
  v8 = type metadata accessor for ButtonConfigurationModel();
  type metadata accessor for SABaseClientBoundCommand(0, (unint64_t *)&lazy cache variable for type metadata for SABaseCommand);
  v9 = a3;
  CodableAceObject.init(wrappedValue:)();
  v10 = (char *)a5 + *(int *)(v8 + 28);
  v11 = type metadata accessor for UUID();
  v12 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v10, a4, v11);
  *((_BYTE *)a5 + *(int *)(v8 + 32)) = 0;
  objc_msgSend(objc_allocWithZone(MEMORY[0x24BE813A0]), sel_init);
  type metadata accessor for SABaseClientBoundCommand(0, (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupRunSiriKitExecutor);
  CodableAceObject.init(wrappedValue:)();

  return (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(a4, v11);
}

void ButtonConfigurationModel.init(label:url:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  NSURL *v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v31 = a2;
  v32 = a3;
  v29 = a1;
  v3 = type metadata accessor for ButtonConfigurationModel();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for UUID();
  v6 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE81860]), sel_init);
  URL.init(string:)();
  swift_bridgeObjectRelease();
  v13 = type metadata accessor for URL();
  v14 = *(_QWORD *)(v13 - 8);
  v16 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1)
  {
    URL._bridgeToObjectiveC()(v15);
    v16 = v17;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
  }
  objc_msgSend(v12, sel_setPunchOutUri_, v16);

  v18 = v12;
  UUID.init()();
  v19 = UUID.uuidString.getter();
  v21 = v20;
  v28 = *(void (**)(char *, uint64_t))(v6 + 8);
  v22 = v30;
  v28(v8, v30);
  v23 = (void *)MEMORY[0x249500990](v19, v21);
  swift_bridgeObjectRelease();
  objc_msgSend(v18, sel_setAceId_, v23);

  v24 = v18;
  UUID.init()();
  v25 = v31;
  *(_QWORD *)v5 = v29;
  *((_QWORD *)v5 + 1) = v25;
  type metadata accessor for SABaseClientBoundCommand(0, (unint64_t *)&lazy cache variable for type metadata for SABaseCommand);
  v26 = v24;
  CodableAceObject.init(wrappedValue:)();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(&v5[*(int *)(v3 + 28)], v8, v22);
  v5[*(int *)(v3 + 32)] = 0;
  objc_msgSend(objc_allocWithZone(MEMORY[0x24BE813A0]), sel_init);
  type metadata accessor for SABaseClientBoundCommand(0, (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupRunSiriKitExecutor);
  CodableAceObject.init(wrappedValue:)();

  v28(v8, v22);
  outlined init with take of ButtonConfigurationModel((uint64_t)v5, v32);

}

uint64_t outlined init with take of ButtonConfigurationModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ButtonConfigurationModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t ButtonConfigurationModel.init(label:directInvocation:id:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;

  *a4 = a1;
  a4[1] = a2;
  objc_msgSend(objc_allocWithZone(MEMORY[0x24BE81158]), sel_init);
  v6 = type metadata accessor for ButtonConfigurationModel();
  type metadata accessor for SABaseClientBoundCommand(0, (unint64_t *)&lazy cache variable for type metadata for SABaseCommand);
  CodableAceObject.init(wrappedValue:)();
  *((_BYTE *)a4 + *(int *)(v6 + 32)) = 1;
  type metadata accessor for SABaseClientBoundCommand(0, (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupRunSiriKitExecutor);
  CodableAceObject.init(wrappedValue:)();
  v7 = (char *)a4 + *(int *)(v6 + 28);
  v8 = type metadata accessor for UUID();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7, a3, v8);
}

uint64_t ButtonConfigurationModel.CodingKeys.stringValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_243AE6834 + 4 * byte_243B32E40[a1]))(0xD000000000000010, 0x8000000243B37390);
}

uint64_t sub_243AE6834()
{
  return 0x6C6562616CLL;
}

uint64_t sub_243AE6848()
{
  return 0x6E6F69746361;
}

uint64_t sub_243AE685C()
{
  return 25705;
}

uint64_t sub_243AE6868(uint64_t a1)
{
  return a1 + 2;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance ButtonConfigurationModel.CodingKeys()
{
  unsigned __int8 *v0;

  return ButtonConfigurationModel.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance ButtonConfigurationModel.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = specialized ButtonConfigurationModel.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance ButtonConfigurationModel.CodingKeys()
{
  lazy protocol witness table accessor for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ButtonConfigurationModel.CodingKeys()
{
  lazy protocol witness table accessor for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys();
  return CodingKey.debugDescription.getter();
}

uint64_t ButtonConfigurationModel.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<ButtonConfigurationModel.CodingKeys>);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v13 = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1)
  {
    type metadata accessor for ButtonConfigurationModel();
    v12 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
    lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type CodableAceObject<SABaseCommand> and conformance CodableAceObject<A>, &demangling cache variable for type metadata for CodableAceObject<SABaseCommand>, MEMORY[0x24BEABA88]);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v11 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>, &demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>, MEMORY[0x24BEABA88]);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v10 = 3;
    type metadata accessor for UUID();
    lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v9 = 4;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t lazy protocol witness table accessor for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for ButtonConfigurationModel.CodingKeys, &unk_251449E70);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for ButtonConfigurationModel.CodingKeys, &unk_251449E70);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for ButtonConfigurationModel.CodingKeys, &unk_251449E70);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for ButtonConfigurationModel.CodingKeys, &unk_251449E70);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys);
  }
  return result;
}

uint64_t ButtonConfigurationModel.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  _QWORD *v37;
  char v38;
  char v39;
  char v40;
  char v41;
  char v42;

  v26 = a2;
  v29 = type metadata accessor for UUID();
  v31 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v27 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v32 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v28 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  v30 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<ButtonConfigurationModel.CodingKeys>);
  v7 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ButtonConfigurationModel();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (uint64_t *)((char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys();
  v35 = v9;
  v13 = (uint64_t)v37;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v14 = v7;
  v15 = v33;
  v16 = v34;
  v37 = a1;
  v42 = 0;
  *v12 = KeyedDecodingContainer.decode(_:forKey:)();
  v12[1] = v17;
  v41 = 1;
  lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type CodableAceObject<SABaseCommand> and conformance CodableAceObject<A>, &demangling cache variable for type metadata for CodableAceObject<SABaseCommand>, MEMORY[0x24BEABA90]);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  v25 = v10;
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))((char *)v12 + *(int *)(v10 + 20), v6, v15);
  v40 = 2;
  lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>, &demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>, MEMORY[0x24BEABA90]);
  v18 = v28;
  v19 = v16;
  v24 = 0;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  v20 = v25;
  (*(void (**)(char *, char *, uint64_t))(v32 + 32))((char *)v12 + *(int *)(v25 + 24), v18, v19);
  v39 = 3;
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v21 = v27;
  v22 = v29;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))((char *)v12 + *(int *)(v20 + 28), v21, v22);
  v38 = 4;
  LOBYTE(v22) = KeyedDecodingContainer.decode(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v35, v36);
  *((_BYTE *)v12 + *(int *)(v20 + 32)) = v22 & 1;
  outlined init with copy of ButtonConfigurationModel((uint64_t)v12, v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  return outlined destroy of ButtonConfigurationModel((uint64_t)v12);
}

uint64_t outlined init with copy of ButtonConfigurationModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ButtonConfigurationModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of ButtonConfigurationModel(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ButtonConfigurationModel();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t protocol witness for Identifiable.id.getter in conformance ButtonConfigurationModel@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 28);
  v5 = type metadata accessor for UUID();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t protocol witness for Decodable.init(from:) in conformance ButtonConfigurationModel@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ButtonConfigurationModel.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance ButtonConfigurationModel(_QWORD *a1)
{
  return ButtonConfigurationModel.encode(to:)(a1);
}

uint64_t StackedButtonsModel.UseCase.rawValue.getter(char a1)
{
  if (!a1)
    return 0x6C6143724F646461;
  if (a1 == 1)
    return 0x747465536E65706FLL;
  return 0xD000000000000011;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance StackedButtonsModel.UseCase(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance StackedButtonsModel.UseCase()
{
  return specialized RawRepresentable<>.hashValue.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance StackedButtonsModel.UseCase()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance StackedButtonsModel.UseCase()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

unint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance StackedButtonsModel.UseCase@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = specialized StackedButtonsModel.UseCase.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance StackedButtonsModel.UseCase@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = StackedButtonsModel.UseCase.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t protocol witness for Decodable.init(from:) in conformance StackedButtonsModel.UseCase()
{
  lazy protocol witness table accessor for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase();
  return RawRepresentable<>.init(from:)();
}

uint64_t protocol witness for Encodable.encode(to:) in conformance StackedButtonsModel.UseCase()
{
  lazy protocol witness table accessor for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase();
  return RawRepresentable<>.encode(to:)();
}

uint64_t StackedButtonsModel.useCase.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t StackedButtonsModel.init(buttonConfiguration:useCase:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ButtonConfigurationModel>);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ButtonConfigurationModel() - 8) + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_243B32430;
  outlined init with take of ButtonConfigurationModel(a1, v4 + v3);
  return v4;
}

unint64_t StackedButtonsModel.responseViewId.getter(uint64_t a1, char a2)
{
  return specialized StackedButtonsModel.responseViewId.getter(a2);
}

uint64_t StackedButtonsModel.shouldHideSnippet(on:)(uint64_t a1, uint64_t a2, char a3)
{
  return specialized StackedButtonsModel.shouldHideSnippet(on:)(a1, a3);
}

uint64_t StackedButtonsModel.CodingKeys.stringValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x65736143657375;
  else
    return 0xD000000000000014;
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance StackedButtonsModel.CodingKeys(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance StackedButtonsModel.CodingKeys()
{
  char *v0;

  return StackedButtonsModel.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance StackedButtonsModel.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = specialized StackedButtonsModel.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

void protocol witness for CodingKey.init(intValue:) in conformance StackedButtonsModel.CodingKeys(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance StackedButtonsModel.CodingKeys()
{
  lazy protocol witness table accessor for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance StackedButtonsModel.CodingKeys()
{
  lazy protocol witness table accessor for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys();
  return CodingKey.debugDescription.getter();
}

uint64_t StackedButtonsModel.encode(to:)(_QWORD *a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE v12[16];
  uint64_t v13;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<StackedButtonsModel.CodingKeys>);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v12[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v13 = a2;
  v12[15] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [ButtonConfigurationModel]);
  lazy protocol witness table accessor for type [ButtonConfigurationModel] and conformance <A> [A](&lazy protocol witness table cache variable for type [ButtonConfigurationModel] and conformance <A> [A], &lazy protocol witness table cache variable for type ButtonConfigurationModel and conformance ButtonConfigurationModel, (uint64_t)&protocol conformance descriptor for ButtonConfigurationModel, MEMORY[0x24BEE12A0]);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v3)
  {
    v12[14] = a3;
    v12[13] = 1;
    lazy protocol witness table accessor for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t StackedButtonsModel.init(from:)(_QWORD *a1)
{
  return specialized StackedButtonsModel.init(from:)(a1);
}

unint64_t protocol witness for PhoneSnippetModel.responseViewId.getter in conformance StackedButtonsModel()
{
  uint64_t v0;

  return specialized StackedButtonsModel.responseViewId.getter(*(_BYTE *)(v0 + 8));
}

uint64_t protocol witness for Decodable.init(from:) in conformance StackedButtonsModel@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v5;

  result = specialized StackedButtonsModel.init(from:)(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_BYTE *)(a2 + 8) = v5;
  }
  return result;
}

uint64_t protocol witness for Encodable.encode(to:) in conformance StackedButtonsModel(_QWORD *a1)
{
  uint64_t v1;

  return StackedButtonsModel.encode(to:)(a1, *(_QWORD *)v1, *(_BYTE *)(v1 + 8));
}

uint64_t specialized ButtonConfigurationModel.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6C6562616CLL && a2 == 0xE500000000000000;
  if (v3 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F69746361 && a2 == 0xE600000000000000
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000243B37390
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 25705 && a2 == 0xE200000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000243B37460)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

unint64_t specialized StackedButtonsModel.UseCase.init(rawValue:)(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of StackedButtonsModel.UseCase.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

unint64_t specialized StackedButtonsModel.responseViewId.getter(char a1)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease();
  if (a1)
  {
    if (a1 == 1)
      v2 = 0x747465536E65706FLL;
    else
      v2 = 0xD000000000000011;
    if (a1 == 1)
      v3 = 0xEC00000073676E69;
    else
      v3 = 0x8000000243B36F60;
  }
  else
  {
    v3 = 0xEF74706D6F72506CLL;
    v2 = 0x6C6143724F646461;
  }
  v4 = v3;
  String.append(_:)(*(Swift::String *)&v2);
  swift_bridgeObjectRelease();
  return 0xD000000000000014;
}

uint64_t specialized StackedButtonsModel.shouldHideSnippet(on:)(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, _QWORD, uint64_t);
  void (*v13)(char *, uint64_t);
  char v14;
  char v15;
  uint64_t v17;

  v4 = type metadata accessor for DeviceIdiom();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BEA89B0];
  v6 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v17 - v10;
  v12 = *(void (**)(char *, _QWORD, uint64_t))(v6 + 104);
  v12((char *)&v17 - v10, *MEMORY[0x24BEA8968], v4);
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type DeviceIdiom and conformance DeviceIdiom, v5, MEMORY[0x24BEA89B8]);
  LOBYTE(v5) = dispatch thunk of static Equatable.== infix(_:_:)();
  v13 = *(void (**)(char *, uint64_t))(v6 + 8);
  v13(v11, v4);
  if ((v5 & 1) != 0)
  {
    v14 = 1;
  }
  else if (a2 == 1)
  {
    v12(v11, *MEMORY[0x24BEA8990], v4);
    v15 = static DeviceIdiom.== infix(_:_:)();
    v13(v11, v4);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a1, v4);
    if ((v15 & 1) != 0)
    {
      v14 = 1;
    }
    else
    {
      v12(v11, *MEMORY[0x24BEA8970], v4);
      v14 = static DeviceIdiom.== infix(_:_:)();
      v13(v11, v4);
    }
    v13(v9, v4);
  }
  else
  {
    v14 = 0;
  }
  return v14 & 1;
}

unint64_t lazy protocol witness table accessor for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for StackedButtonsModel.CodingKeys, &unk_251449DE0);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for StackedButtonsModel.CodingKeys, &unk_251449DE0);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for StackedButtonsModel.CodingKeys, &unk_251449DE0);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for StackedButtonsModel.CodingKeys, &unk_251449DE0);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase;
  if (!lazy protocol witness table cache variable for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for StackedButtonsModel.UseCase, &type metadata for StackedButtonsModel.UseCase);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase;
  if (!lazy protocol witness table cache variable for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for StackedButtonsModel.UseCase, &type metadata for StackedButtonsModel.UseCase);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase;
  if (!lazy protocol witness table cache variable for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for StackedButtonsModel.UseCase, &type metadata for StackedButtonsModel.UseCase);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase;
  if (!lazy protocol witness table cache variable for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for StackedButtonsModel.UseCase, &type metadata for StackedButtonsModel.UseCase);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase);
  }
  return result;
}

uint64_t specialized StackedButtonsModel.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000014 && a2 == 0x8000000243B37480
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65736143657375 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t specialized StackedButtonsModel.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v9[8];
  uint64_t v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<StackedButtonsModel.CodingKeys>);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  lazy protocol witness table accessor for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [ButtonConfigurationModel]);
    v9[7] = 0;
    lazy protocol witness table accessor for type [ButtonConfigurationModel] and conformance <A> [A](&lazy protocol witness table cache variable for type [ButtonConfigurationModel] and conformance <A> [A], &lazy protocol witness table cache variable for type ButtonConfigurationModel and conformance ButtonConfigurationModel, (uint64_t)&protocol conformance descriptor for ButtonConfigurationModel, MEMORY[0x24BEE12D0]);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v7 = v10;
    v9[5] = 1;
    lazy protocol witness table accessor for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase();
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t base witness table accessor for Decodable in ButtonConfigurationModel()
{
  return lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type ButtonConfigurationModel and conformance ButtonConfigurationModel, (uint64_t (*)(uint64_t))type metadata accessor for ButtonConfigurationModel, (uint64_t)&protocol conformance descriptor for ButtonConfigurationModel);
}

uint64_t base witness table accessor for Encodable in ButtonConfigurationModel()
{
  return lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type ButtonConfigurationModel and conformance ButtonConfigurationModel, (uint64_t (*)(uint64_t))type metadata accessor for ButtonConfigurationModel, (uint64_t)&protocol conformance descriptor for ButtonConfigurationModel);
}

uint64_t associated type witness table accessor for Identifiable.ID : Hashable in ButtonConfigurationModel()
{
  return lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
}

unint64_t instantiation function for generic protocol witness table for StackedButtonsModel(uint64_t a1)
{
  unint64_t result;

  result = lazy protocol witness table accessor for type StackedButtonsModel and conformance StackedButtonsModel();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t lazy protocol witness table accessor for type StackedButtonsModel and conformance StackedButtonsModel()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type StackedButtonsModel and conformance StackedButtonsModel;
  if (!lazy protocol witness table cache variable for type StackedButtonsModel and conformance StackedButtonsModel)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for StackedButtonsModel, &type metadata for StackedButtonsModel);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StackedButtonsModel and conformance StackedButtonsModel);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type StackedButtonsModel and conformance StackedButtonsModel;
  if (!lazy protocol witness table cache variable for type StackedButtonsModel and conformance StackedButtonsModel)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for StackedButtonsModel, &type metadata for StackedButtonsModel);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StackedButtonsModel and conformance StackedButtonsModel);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type StackedButtonsModel and conformance StackedButtonsModel;
  if (!lazy protocol witness table cache variable for type StackedButtonsModel and conformance StackedButtonsModel)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for StackedButtonsModel, &type metadata for StackedButtonsModel);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StackedButtonsModel and conformance StackedButtonsModel);
  }
  return result;
}

uint64_t sub_243AE7FE8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for ButtonConfigurationModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  result = CodableAceObject.wrappedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_243AE8038@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for ButtonConfigurationModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  result = CodableAceObject.wrappedValue.getter();
  *a1 = result;
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for ButtonConfigurationModel(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    swift_bridgeObjectRetain();
    v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  }
  return a1;
}

uint64_t destroy for ButtonConfigurationModel(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[6];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = a1 + a2[7];
  v9 = type metadata accessor for UUID();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

_QWORD *initializeWithCopy for ButtonConfigurationModel(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  swift_bridgeObjectRetain();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

_QWORD *assignWithCopy for ButtonConfigurationModel(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  v14 = a3[7];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

_OWORD *initializeWithTake for ButtonConfigurationModel(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = a3[7];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

_QWORD *assignWithTake for ButtonConfigurationModel(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

uint64_t getEnumTagSinglePayload for ButtonConfigurationModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_243AE85C0(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[5];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[6];
      }
      else
      {
        v10 = type metadata accessor for UUID();
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[7];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ButtonConfigurationModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_243AE8698(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[5];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[6];
      }
      else
      {
        v10 = type metadata accessor for UUID();
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[7];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void type metadata completion function for ButtonConfigurationModel()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  type metadata accessor for CodableAceObject<SABaseCommand>(319, (unint64_t *)&lazy cache variable for type metadata for CodableAceObject<SABaseCommand>, (unint64_t *)&lazy cache variable for type metadata for SABaseCommand);
  if (v0 <= 0x3F)
  {
    type metadata accessor for CodableAceObject<SABaseCommand>(319, (unint64_t *)&lazy cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>, (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupRunSiriKitExecutor);
    if (v1 <= 0x3F)
    {
      type metadata accessor for UUID();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void type metadata accessor for CodableAceObject<SABaseCommand>(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    type metadata accessor for SABaseClientBoundCommand(255, a3);
    v4 = type metadata accessor for CodableAceObject();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t initializeBufferWithCopyOfBuffer for StackedButtonsModel(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for StackedButtonsModel()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for StackedButtonsModel(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for StackedButtonsModel(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for StackedButtonsModel(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 9))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StackedButtonsModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 9) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StackedButtonsModel()
{
  return &type metadata for StackedButtonsModel;
}

uint64_t getEnumTagSinglePayload for StackedButtonsModel.UseCase(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for StackedButtonsModel.UseCase(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_243AE8AE4 + 4 * byte_243B32E4A[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_243AE8B18 + 4 * byte_243B32E45[v4]))();
}

uint64_t sub_243AE8B18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_243AE8B20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x243AE8B28);
  return result;
}

uint64_t sub_243AE8B34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x243AE8B3CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_243AE8B40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_243AE8B48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StackedButtonsModel.UseCase()
{
  return &type metadata for StackedButtonsModel.UseCase;
}

uint64_t storeEnumTagSinglePayload for StackedButtonsModel.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_243AE8BB0 + 4 * byte_243B32E54[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_243AE8BE4 + 4 * byte_243B32E4F[v4]))();
}

uint64_t sub_243AE8BE4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_243AE8BEC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x243AE8BF4);
  return result;
}

uint64_t sub_243AE8C00(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x243AE8C08);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_243AE8C0C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_243AE8C14(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for StackedButtonsModel.CodingKeys()
{
  return &unk_251449DE0;
}

uint64_t storeEnumTagSinglePayload for ButtonConfigurationModel.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_243AE8C7C + 4 * byte_243B32E5E[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_243AE8CB0 + 4 * byte_243B32E59[v4]))();
}

uint64_t sub_243AE8CB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_243AE8CB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x243AE8CC0);
  return result;
}

uint64_t sub_243AE8CCC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x243AE8CD4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_243AE8CD8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_243AE8CE0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for ButtonConfigurationModel.CodingKeys()
{
  return &unk_251449E70;
}

uint64_t lazy protocol witness table accessor for type [ButtonConfigurationModel] and conformance <A> [A](unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [ButtonConfigurationModel]);
    v10 = lazy protocol witness table accessor for type Context and conformance Context(a2, (uint64_t (*)(uint64_t))type metadata accessor for ButtonConfigurationModel, a3);
    result = MEMORY[0x249501140](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t Logger.phoneSnippetUI.unsafeMutableAddressor()
{
  uint64_t v0;

  if (one-time initialization token for phoneSnippetUI != -1)
    swift_once();
  v0 = type metadata accessor for Logger();
  return __swift_project_value_buffer(v0, (uint64_t)static Logger.phoneSnippetUI);
}

uint64_t one-time initialization function for phoneSnippetUI()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, static Logger.phoneSnippetUI);
  __swift_project_value_buffer(v0, (uint64_t)static Logger.phoneSnippetUI);
  if (one-time initialization token for phoneSnippetUI != -1)
    swift_once();
  swift_bridgeObjectRetain();
  return Logger.init(subsystem:category:)();
}

void *LogConst.subsystem.unsafeMutableAddressor()
{
  return &static LogConst.subsystem;
}

uint64_t *LogConst.Category.phoneSnippetUI.unsafeMutableAddressor()
{
  if (one-time initialization token for phoneSnippetUI != -1)
    swift_once();
  return &static LogConst.Category.phoneSnippetUI;
}

uint64_t static Logger.phoneSnippetUI.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (one-time initialization token for phoneSnippetUI != -1)
    swift_once();
  v2 = type metadata accessor for Logger();
  v3 = __swift_project_value_buffer(v2, (uint64_t)static Logger.phoneSnippetUI);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

unint64_t static LogConst.subsystem.getter()
{
  return 0xD000000000000014;
}

void one-time initialization function for phoneSnippetUI()
{
  strcpy((char *)&static LogConst.Category.phoneSnippetUI, "PhoneSnippetUI");
  algn_2572EAFD8[7] = -18;
}

uint64_t static LogConst.Category.phoneSnippetUI.getter()
{
  uint64_t v0;

  if (one-time initialization token for phoneSnippetUI != -1)
    swift_once();
  v0 = static LogConst.Category.phoneSnippetUI;
  swift_bridgeObjectRetain();
  return v0;
}

ValueMetadata *type metadata accessor for Logger()
{
  return &type metadata for Logger;
}

ValueMetadata *type metadata accessor for LogConst()
{
  return &type metadata for LogConst;
}

ValueMetadata *type metadata accessor for LogConst.Category()
{
  return &type metadata for LogConst.Category;
}

uint64_t CustomCanvasModel<>.init(serializedData:)(uint64_t a1, unint64_t a2)
{
  type metadata accessor for JSONDecoder();
  swift_allocObject();
  JSONDecoder.init()();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  outlined consume of Data._Representation(a1, a2);
  return swift_release();
}

uint64_t outlined consume of Data._Representation(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t CustomCanvasModel<>.serializedData()()
{
  uint64_t v0;

  type metadata accessor for JSONEncoder();
  swift_allocObject();
  JSONEncoder.init()();
  v0 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  swift_release();
  return v0;
}

uint64_t static CustomCanvasModel<>.name.getter()
{
  swift_getMetatypeMetadata();
  return String.init<A>(describing:)();
}

double protocol witness for CustomCanvasModel.init(serializedData:) in conformance PhoneContactHeader@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  double result;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  type metadata accessor for JSONDecoder();
  swift_allocObject();
  JSONDecoder.init()();
  lazy protocol witness table accessor for type PhoneContactHeader and conformance PhoneContactHeader();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  outlined consume of Data._Representation(a1, a2);
  swift_release();
  if (!v3)
  {
    result = *(double *)&v8;
    *(_OWORD *)a3 = v8;
    *(_OWORD *)(a3 + 16) = v9;
    *(_OWORD *)(a3 + 32) = v10;
    *(_QWORD *)(a3 + 48) = v11;
    *(_QWORD *)(a3 + 56) = v12;
    *(_BYTE *)(a3 + 64) = v13;
  }
  return result;
}

uint64_t protocol witness for static CustomCanvasModel.name.getter in conformance PhoneContactHeader()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneContactHeader.Type);
  return String.init<A>(describing:)();
}

uint64_t protocol witness for CATSerializable.serializedData() in conformance PhoneContactHeader()
{
  uint64_t v0;

  type metadata accessor for JSONEncoder();
  swift_allocObject();
  JSONEncoder.init()();
  lazy protocol witness table accessor for type PhoneContactHeader and conformance PhoneContactHeader();
  v0 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  swift_release();
  return v0;
}

void one-time initialization function for bundleName()
{
  strcpy((char *)&static PhoneSnippetDataModels.bundleName, "PhoneUIPlugin");
  *(_WORD *)&algn_2572EAFE8[6] = -4864;
}

uint64_t *PhoneSnippetDataModels.bundleName.unsafeMutableAddressor()
{
  if (one-time initialization token for bundleName != -1)
    swift_once();
  return &static PhoneSnippetDataModels.bundleName;
}

uint64_t static PhoneSnippetDataModels.bundleName.getter()
{
  uint64_t v0;

  if (one-time initialization token for bundleName != -1)
    swift_once();
  v0 = static PhoneSnippetDataModels.bundleName;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t PhoneSnippetDataModels.snippetHidden(for:idiom:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int EnumCaseMultiPayload;
  char v13;
  uint64_t v15;

  v3 = v2;
  v5 = type metadata accessor for DeviceIdiom();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PhoneSnippetDataModels();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of PhoneSnippetDataModels(v3, (uint64_t)v11);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 7)
  {
    if (EnumCaseMultiPayload == 6)
    {
      v13 = specialized StackedButtonsModel.shouldHideSnippet(on:)(a2, v11[8]);
      swift_bridgeObjectRelease();
      return v13 & 1;
    }
    if (EnumCaseMultiPayload)
    {
      outlined destroy of SingleResultCallHistoryModel((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for PhoneSnippetDataModels);
      v13 = 0;
      return v13 & 1;
    }
  }
  outlined destroy of SingleResultCallHistoryModel((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for PhoneSnippetDataModels);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BEA8968], v5);
  v13 = static DeviceIdiom.== infix(_:_:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v13 & 1;
}

uint64_t type metadata accessor for PhoneSnippetDataModels()
{
  uint64_t result;

  result = type metadata singleton initialization cache for PhoneSnippetDataModels;
  if (!type metadata singleton initialization cache for PhoneSnippetDataModels)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t outlined init with copy of PhoneSnippetDataModels(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PhoneSnippetDataModels();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t PhoneSnippetDataModels.CodingKeys.stringValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_243AE9890 + 4 * byte_243B33380[a1]))(0xD000000000000011, 0x8000000243B37510);
}

uint64_t sub_243AE9890()
{
  return 0x69666E6F43707061;
}

uint64_t sub_243AE98B4(uint64_t a1)
{
  return a1 + 2;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance PhoneSnippetDataModels.AppConfirmationCodingKeys()
{
  return 1;
}

void protocol witness for CodingKey.init(intValue:) in conformance PhoneSnippetDataModels.AppConfirmationCodingKeys(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneSnippetDataModels.AppConfirmationCodingKeys()
{
  lazy protocol witness table accessor for type PhoneSnippetDataModels.AppConfirmationCodingKeys and conformance PhoneSnippetDataModels.AppConfirmationCodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhoneSnippetDataModels.AppConfirmationCodingKeys()
{
  lazy protocol witness table accessor for type PhoneSnippetDataModels.AppConfirmationCodingKeys and conformance PhoneSnippetDataModels.AppConfirmationCodingKeys();
  return CodingKey.debugDescription.getter();
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys()
{
  lazy protocol witness table accessor for type PhoneSnippetDataModels.AppDisambiguationCodingKeys and conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys()
{
  lazy protocol witness table accessor for type PhoneSnippetDataModels.AppDisambiguationCodingKeys and conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys();
  return CodingKey.debugDescription.getter();
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneSnippetDataModels.CallHistoryListCodingKeys()
{
  lazy protocol witness table accessor for type PhoneSnippetDataModels.CallHistoryListCodingKeys and conformance PhoneSnippetDataModels.CallHistoryListCodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhoneSnippetDataModels.CallHistoryListCodingKeys()
{
  lazy protocol witness table accessor for type PhoneSnippetDataModels.CallHistoryListCodingKeys and conformance PhoneSnippetDataModels.CallHistoryListCodingKeys();
  return CodingKey.debugDescription.getter();
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance PhoneSnippetDataModels.CodingKeys()
{
  unsigned __int8 *v0;

  return PhoneSnippetDataModels.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance PhoneSnippetDataModels.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = specialized PhoneSnippetDataModels.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneSnippetDataModels.CodingKeys()
{
  lazy protocol witness table accessor for type PhoneSnippetDataModels.CodingKeys and conformance PhoneSnippetDataModels.CodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhoneSnippetDataModels.CodingKeys()
{
  lazy protocol witness table accessor for type PhoneSnippetDataModels.CodingKeys and conformance PhoneSnippetDataModels.CodingKeys();
  return CodingKey.debugDescription.getter();
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys()
{
  lazy protocol witness table accessor for type PhoneSnippetDataModels.ContactConfirmationCodingKeys and conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys()
{
  lazy protocol witness table accessor for type PhoneSnippetDataModels.ContactConfirmationCodingKeys and conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys();
  return CodingKey.debugDescription.getter();
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys()
{
  lazy protocol witness table accessor for type PhoneSnippetDataModels.EmergencyCountdownCodingKeys and conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys()
{
  lazy protocol witness table accessor for type PhoneSnippetDataModels.EmergencyCountdownCodingKeys and conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys();
  return CodingKey.debugDescription.getter();
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys()
{
  lazy protocol witness table accessor for type PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys()
{
  lazy protocol witness table accessor for type PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys();
  return CodingKey.debugDescription.getter();
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys()
{
  lazy protocol witness table accessor for type PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys()
{
  lazy protocol witness table accessor for type PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys();
  return CodingKey.debugDescription.getter();
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys()
{
  lazy protocol witness table accessor for type PhoneSnippetDataModels.PlayVoicemailListCodingKeys and conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys()
{
  lazy protocol witness table accessor for type PhoneSnippetDataModels.PlayVoicemailListCodingKeys and conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys();
  return CodingKey.debugDescription.getter();
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys()
{
  lazy protocol witness table accessor for type PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys and conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys()
{
  lazy protocol witness table accessor for type PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys and conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys();
  return CodingKey.debugDescription.getter();
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys()
{
  lazy protocol witness table accessor for type PhoneSnippetDataModels.SingleVoicemailCodingKeys and conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys()
{
  lazy protocol witness table accessor for type PhoneSnippetDataModels.SingleVoicemailCodingKeys and conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys();
  return CodingKey.debugDescription.getter();
}

void protocol witness for Hashable.hash(into:) in conformance PhoneSnippetDataModels.StackedButtonsCodingKeys()
{
  Hasher._combine(_:)(0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance PhoneSnippetDataModels.StackedButtonsCodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = specialized PhoneSnippetDataModels.AppConfirmationCodingKeys.init(stringValue:)(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneSnippetDataModels.StackedButtonsCodingKeys()
{
  lazy protocol witness table accessor for type PhoneSnippetDataModels.StackedButtonsCodingKeys and conformance PhoneSnippetDataModels.StackedButtonsCodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhoneSnippetDataModels.StackedButtonsCodingKeys()
{
  lazy protocol witness table accessor for type PhoneSnippetDataModels.StackedButtonsCodingKeys and conformance PhoneSnippetDataModels.StackedButtonsCodingKeys();
  return CodingKey.debugDescription.getter();
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance PhoneSnippetDataModels.AppConfirmationCodingKeys()
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(0);
  return Hasher._finalize()();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneSnippetDataModels.AppConfirmationCodingKeys()
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(0);
  return Hasher._finalize()();
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys()
{
  lazy protocol witness table accessor for type PhoneSnippetDataModels.YesNoConfirmationCodingKeys and conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys()
{
  lazy protocol witness table accessor for type PhoneSnippetDataModels.YesNoConfirmationCodingKeys and conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys();
  return CodingKey.debugDescription.getter();
}

void PhoneSnippetDataModels.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  _QWORD v29[2];
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys>);
  v77 = *(_QWORD *)(v2 - 8);
  v78 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v76 = (char *)v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = type metadata accessor for SingleResultCallHistoryModel();
  MEMORY[0x24BDAC7A8](v73);
  v75 = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhoneSnippetDataModels.SingleVoicemailCodingKeys>);
  v72 = *(_QWORD *)(v74 - 8);
  MEMORY[0x24BDAC7A8](v74);
  v71 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = type metadata accessor for SingleResultVoicemailModel();
  MEMORY[0x24BDAC7A8](v68);
  v70 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhoneSnippetDataModels.PlayVoicemailListCodingKeys>);
  v67 = *(_QWORD *)(v69 - 8);
  MEMORY[0x24BDAC7A8](v69);
  v66 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for PlayVoicemailModel();
  MEMORY[0x24BDAC7A8](v63);
  v65 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhoneSnippetDataModels.CallHistoryListCodingKeys>);
  v29[0] = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64);
  v62 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = type metadata accessor for SearchCallHistoryModel();
  MEMORY[0x24BDAC7A8](v59);
  v61 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhoneSnippetDataModels.YesNoConfirmationCodingKeys>);
  v58 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60);
  v57 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhoneSnippetDataModels.StackedButtonsCodingKeys>);
  v55 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v54 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys>);
  v52 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53);
  v51 = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
  MEMORY[0x24BDAC7A8](v48);
  v50 = (char *)v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys>);
  v47 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  v46 = (char *)v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
  MEMORY[0x24BDAC7A8](v43);
  v45 = (char *)v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhoneSnippetDataModels.EmergencyCountdownCodingKeys>);
  v42 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v41 = (char *)v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for EmergencyCountdownModel();
  MEMORY[0x24BDAC7A8](v38);
  v40 = (char *)v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhoneSnippetDataModels.ContactConfirmationCodingKeys>);
  v37 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v36 = (char *)v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for ContactConfirmationModel();
  MEMORY[0x24BDAC7A8](v34);
  v35 = (char *)v29 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhoneSnippetDataModels.AppDisambiguationCodingKeys>);
  v32 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v31 = (char *)v29 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhoneSnippetDataModels.AppConfirmationCodingKeys>);
  v29[1] = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v79 = type metadata accessor for YesNoConfirmationModel();
  v22 = MEMORY[0x24BDAC7A8](v79);
  MEMORY[0x24BDAC7A8](v22);
  v23 = type metadata accessor for PhoneSnippetDataModels();
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)v29 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhoneSnippetDataModels.CodingKeys>);
  v80 = *(_QWORD *)(v82 - 8);
  MEMORY[0x24BDAC7A8](v82);
  v27 = (char *)v29 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type PhoneSnippetDataModels.CodingKeys and conformance PhoneSnippetDataModels.CodingKeys();
  v81 = v27;
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  outlined init with copy of PhoneSnippetDataModels(v83, (uint64_t)v25);
  v28 = (char *)sub_243AEA5BC + 4 * word_243B3338C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_243AEA5BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  outlined init with take of SingleResultCallHistoryModel(v0, v1, (uint64_t (*)(_QWORD))type metadata accessor for YesNoConfirmationModel);
  *(_BYTE *)(v3 - 112) = 0;
  lazy protocol witness table accessor for type PhoneSnippetDataModels.AppConfirmationCodingKeys and conformance PhoneSnippetDataModels.AppConfirmationCodingKeys();
  v5 = *(_QWORD *)(v3 - 136);
  v4 = *(_QWORD *)(v3 - 128);
  KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type YesNoConfirmationModel and conformance YesNoConfirmationModel, (uint64_t (*)(uint64_t))type metadata accessor for YesNoConfirmationModel, (uint64_t)&protocol conformance descriptor for YesNoConfirmationModel);
  v6 = *(_QWORD *)(v3 - 544);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 552) + 8))(v2, v6);
  outlined destroy of SingleResultCallHistoryModel(v1, (uint64_t (*)(_QWORD))type metadata accessor for YesNoConfirmationModel);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 144) + 8))(v5, v4);
}

uint64_t PhoneSnippetDataModels.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t *v56;
  _QWORD v58[15];
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  char *v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  char *v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;

  v91 = a2;
  v80 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys>);
  v98 = *(_QWORD *)(v80 - 8);
  MEMORY[0x24BDAC7A8](v80);
  v97 = (char *)v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhoneSnippetDataModels.SingleVoicemailCodingKeys>);
  v78 = *(_QWORD *)(v79 - 8);
  MEMORY[0x24BDAC7A8](v79);
  v90 = (char *)v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhoneSnippetDataModels.PlayVoicemailListCodingKeys>);
  v76 = *(_QWORD *)(v77 - 8);
  MEMORY[0x24BDAC7A8](v77);
  v89 = (char *)v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhoneSnippetDataModels.CallHistoryListCodingKeys>);
  v74 = *(_QWORD *)(v75 - 8);
  MEMORY[0x24BDAC7A8](v75);
  v88 = (char *)v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhoneSnippetDataModels.YesNoConfirmationCodingKeys>);
  v72 = *(_QWORD *)(v73 - 8);
  MEMORY[0x24BDAC7A8](v73);
  v87 = (char *)v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhoneSnippetDataModels.StackedButtonsCodingKeys>);
  v70 = *(_QWORD *)(v71 - 8);
  MEMORY[0x24BDAC7A8](v71);
  v86 = (char *)v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys>);
  v68 = *(_QWORD *)(v69 - 8);
  MEMORY[0x24BDAC7A8](v69);
  v85 = (char *)v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys>);
  v67 = *(_QWORD *)(v66 - 8);
  MEMORY[0x24BDAC7A8](v66);
  v84 = (char *)v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhoneSnippetDataModels.EmergencyCountdownCodingKeys>);
  v64 = *(_QWORD *)(v65 - 8);
  MEMORY[0x24BDAC7A8](v65);
  v95 = (char *)v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhoneSnippetDataModels.ContactConfirmationCodingKeys>);
  v62 = *(_QWORD *)(v63 - 8);
  MEMORY[0x24BDAC7A8](v63);
  v83 = (char *)v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhoneSnippetDataModels.AppDisambiguationCodingKeys>);
  v60 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v82 = (char *)v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhoneSnippetDataModels.AppConfirmationCodingKeys>);
  v58[14] = *(_QWORD *)(v59 - 8);
  MEMORY[0x24BDAC7A8](v59);
  v81 = (char *)v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhoneSnippetDataModels.CodingKeys>);
  v92 = *(_QWORD *)(v94 - 8);
  MEMORY[0x24BDAC7A8](v94);
  v16 = (char *)v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = type metadata accessor for PhoneSnippetDataModels();
  v17 = MEMORY[0x24BDAC7A8](v93);
  v58[13] = (char *)v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v58[12] = (char *)v58 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v58[11] = (char *)v58 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v58[10] = (char *)v58 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v58[9] = (char *)v58 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v58[6] = (char *)v58 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v58[8] = (char *)v58 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v58[7] = (char *)v58 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v35 = (char *)v58 - v34;
  v36 = MEMORY[0x24BDAC7A8](v33);
  v38 = (char *)v58 - v37;
  v39 = MEMORY[0x24BDAC7A8](v36);
  v41 = (char *)v58 - v40;
  v42 = MEMORY[0x24BDAC7A8](v39);
  v44 = (char *)v58 - v43;
  MEMORY[0x24BDAC7A8](v42);
  v46 = (char *)v58 - v45;
  v47 = a1[3];
  v99 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v47);
  lazy protocol witness table accessor for type PhoneSnippetDataModels.CodingKeys and conformance PhoneSnippetDataModels.CodingKeys();
  v96 = v16;
  v48 = v100;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  v100 = v48;
  if (!v48)
  {
    v58[1] = v41;
    v58[2] = v44;
    v58[3] = v38;
    v58[4] = v35;
    v49 = v93;
    v58[5] = v46;
    v50 = v94;
    v51 = v96;
    v52 = KeyedDecodingContainer.allKeys.getter();
    if (*(_QWORD *)(v52 + 16) == 1)
      __asm { BR              X10 }
    v53 = type metadata accessor for DecodingError();
    v54 = swift_allocError();
    v56 = v55;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (@thick Any.Type, DecodingError.Context));
    *v56 = v49;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v53 - 8) + 104))(v56, *MEMORY[0x24BEE26D0], v53);
    v100 = v54;
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v92 + 8))(v51, v50);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v99);
}

uint64_t protocol witness for static SnippetPluginModel.bundleName.getter in conformance PhoneSnippetDataModels()
{
  uint64_t v0;

  if (one-time initialization token for bundleName != -1)
    swift_once();
  v0 = static PhoneSnippetDataModels.bundleName;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t protocol witness for Decodable.init(from:) in conformance PhoneSnippetDataModels@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PhoneSnippetDataModels.init(from:)(a1, a2);
}

void protocol witness for Encodable.encode(to:) in conformance PhoneSnippetDataModels(_QWORD *a1)
{
  PhoneSnippetDataModels.encode(to:)(a1);
}

unint64_t lazy protocol witness table accessor for type PhoneSnippetDataModels.CodingKeys and conformance PhoneSnippetDataModels.CodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.CodingKeys and conformance PhoneSnippetDataModels.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.CodingKeys and conformance PhoneSnippetDataModels.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneSnippetDataModels.CodingKeys, &unk_25144A088);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.CodingKeys and conformance PhoneSnippetDataModels.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.CodingKeys and conformance PhoneSnippetDataModels.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.CodingKeys and conformance PhoneSnippetDataModels.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneSnippetDataModels.CodingKeys, &unk_25144A088);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.CodingKeys and conformance PhoneSnippetDataModels.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.CodingKeys and conformance PhoneSnippetDataModels.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.CodingKeys and conformance PhoneSnippetDataModels.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneSnippetDataModels.CodingKeys, &unk_25144A088);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.CodingKeys and conformance PhoneSnippetDataModels.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.CodingKeys and conformance PhoneSnippetDataModels.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.CodingKeys and conformance PhoneSnippetDataModels.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneSnippetDataModels.CodingKeys, &unk_25144A088);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.CodingKeys and conformance PhoneSnippetDataModels.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys and conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys and conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys and conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys, &unk_25144A748);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys and conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys and conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys and conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys, &unk_25144A748);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys and conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys and conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys and conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys, &unk_25144A748);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys and conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys and conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys and conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys, &unk_25144A748);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys and conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneSnippetDataModels.SingleVoicemailCodingKeys and conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleVoicemailCodingKeys and conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleVoicemailCodingKeys and conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneSnippetDataModels.SingleVoicemailCodingKeys, &unk_25144A6B8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleVoicemailCodingKeys and conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleVoicemailCodingKeys and conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleVoicemailCodingKeys and conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneSnippetDataModels.SingleVoicemailCodingKeys, &unk_25144A6B8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleVoicemailCodingKeys and conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleVoicemailCodingKeys and conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleVoicemailCodingKeys and conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneSnippetDataModels.SingleVoicemailCodingKeys, &unk_25144A6B8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleVoicemailCodingKeys and conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleVoicemailCodingKeys and conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleVoicemailCodingKeys and conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneSnippetDataModels.SingleVoicemailCodingKeys, &unk_25144A6B8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleVoicemailCodingKeys and conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneSnippetDataModels.PlayVoicemailListCodingKeys and conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.PlayVoicemailListCodingKeys and conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.PlayVoicemailListCodingKeys and conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneSnippetDataModels.PlayVoicemailListCodingKeys, &unk_25144A628);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.PlayVoicemailListCodingKeys and conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.PlayVoicemailListCodingKeys and conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.PlayVoicemailListCodingKeys and conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneSnippetDataModels.PlayVoicemailListCodingKeys, &unk_25144A628);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.PlayVoicemailListCodingKeys and conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.PlayVoicemailListCodingKeys and conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.PlayVoicemailListCodingKeys and conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneSnippetDataModels.PlayVoicemailListCodingKeys, &unk_25144A628);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.PlayVoicemailListCodingKeys and conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.PlayVoicemailListCodingKeys and conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.PlayVoicemailListCodingKeys and conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneSnippetDataModels.PlayVoicemailListCodingKeys, &unk_25144A628);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.PlayVoicemailListCodingKeys and conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneSnippetDataModels.CallHistoryListCodingKeys and conformance PhoneSnippetDataModels.CallHistoryListCodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.CallHistoryListCodingKeys and conformance PhoneSnippetDataModels.CallHistoryListCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.CallHistoryListCodingKeys and conformance PhoneSnippetDataModels.CallHistoryListCodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneSnippetDataModels.CallHistoryListCodingKeys, &unk_25144A598);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.CallHistoryListCodingKeys and conformance PhoneSnippetDataModels.CallHistoryListCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.CallHistoryListCodingKeys and conformance PhoneSnippetDataModels.CallHistoryListCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.CallHistoryListCodingKeys and conformance PhoneSnippetDataModels.CallHistoryListCodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneSnippetDataModels.CallHistoryListCodingKeys, &unk_25144A598);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.CallHistoryListCodingKeys and conformance PhoneSnippetDataModels.CallHistoryListCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.CallHistoryListCodingKeys and conformance PhoneSnippetDataModels.CallHistoryListCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.CallHistoryListCodingKeys and conformance PhoneSnippetDataModels.CallHistoryListCodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneSnippetDataModels.CallHistoryListCodingKeys, &unk_25144A598);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.CallHistoryListCodingKeys and conformance PhoneSnippetDataModels.CallHistoryListCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.CallHistoryListCodingKeys and conformance PhoneSnippetDataModels.CallHistoryListCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.CallHistoryListCodingKeys and conformance PhoneSnippetDataModels.CallHistoryListCodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneSnippetDataModels.CallHistoryListCodingKeys, &unk_25144A598);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.CallHistoryListCodingKeys and conformance PhoneSnippetDataModels.CallHistoryListCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneSnippetDataModels.YesNoConfirmationCodingKeys and conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.YesNoConfirmationCodingKeys and conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.YesNoConfirmationCodingKeys and conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneSnippetDataModels.YesNoConfirmationCodingKeys, &unk_25144A508);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.YesNoConfirmationCodingKeys and conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.YesNoConfirmationCodingKeys and conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.YesNoConfirmationCodingKeys and conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneSnippetDataModels.YesNoConfirmationCodingKeys, &unk_25144A508);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.YesNoConfirmationCodingKeys and conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.YesNoConfirmationCodingKeys and conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.YesNoConfirmationCodingKeys and conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneSnippetDataModels.YesNoConfirmationCodingKeys, &unk_25144A508);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.YesNoConfirmationCodingKeys and conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.YesNoConfirmationCodingKeys and conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.YesNoConfirmationCodingKeys and conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneSnippetDataModels.YesNoConfirmationCodingKeys, &unk_25144A508);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.YesNoConfirmationCodingKeys and conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneSnippetDataModels.StackedButtonsCodingKeys and conformance PhoneSnippetDataModels.StackedButtonsCodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.StackedButtonsCodingKeys and conformance PhoneSnippetDataModels.StackedButtonsCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.StackedButtonsCodingKeys and conformance PhoneSnippetDataModels.StackedButtonsCodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneSnippetDataModels.StackedButtonsCodingKeys, &unk_25144A478);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.StackedButtonsCodingKeys and conformance PhoneSnippetDataModels.StackedButtonsCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.StackedButtonsCodingKeys and conformance PhoneSnippetDataModels.StackedButtonsCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.StackedButtonsCodingKeys and conformance PhoneSnippetDataModels.StackedButtonsCodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneSnippetDataModels.StackedButtonsCodingKeys, &unk_25144A478);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.StackedButtonsCodingKeys and conformance PhoneSnippetDataModels.StackedButtonsCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.StackedButtonsCodingKeys and conformance PhoneSnippetDataModels.StackedButtonsCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.StackedButtonsCodingKeys and conformance PhoneSnippetDataModels.StackedButtonsCodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneSnippetDataModels.StackedButtonsCodingKeys, &unk_25144A478);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.StackedButtonsCodingKeys and conformance PhoneSnippetDataModels.StackedButtonsCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.StackedButtonsCodingKeys and conformance PhoneSnippetDataModels.StackedButtonsCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.StackedButtonsCodingKeys and conformance PhoneSnippetDataModels.StackedButtonsCodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneSnippetDataModels.StackedButtonsCodingKeys, &unk_25144A478);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.StackedButtonsCodingKeys and conformance PhoneSnippetDataModels.StackedButtonsCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys, &unk_25144A3E8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys, &unk_25144A3E8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys, &unk_25144A3E8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys, &unk_25144A3E8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys, &unk_25144A358);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys, &unk_25144A358);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys, &unk_25144A358);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys, &unk_25144A358);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneSnippetDataModels.EmergencyCountdownCodingKeys and conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.EmergencyCountdownCodingKeys and conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.EmergencyCountdownCodingKeys and conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneSnippetDataModels.EmergencyCountdownCodingKeys, &unk_25144A2C8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.EmergencyCountdownCodingKeys and conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.EmergencyCountdownCodingKeys and conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.EmergencyCountdownCodingKeys and conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneSnippetDataModels.EmergencyCountdownCodingKeys, &unk_25144A2C8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.EmergencyCountdownCodingKeys and conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.EmergencyCountdownCodingKeys and conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.EmergencyCountdownCodingKeys and conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneSnippetDataModels.EmergencyCountdownCodingKeys, &unk_25144A2C8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.EmergencyCountdownCodingKeys and conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.EmergencyCountdownCodingKeys and conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.EmergencyCountdownCodingKeys and conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneSnippetDataModels.EmergencyCountdownCodingKeys, &unk_25144A2C8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.EmergencyCountdownCodingKeys and conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneSnippetDataModels.ContactConfirmationCodingKeys and conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.ContactConfirmationCodingKeys and conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.ContactConfirmationCodingKeys and conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneSnippetDataModels.ContactConfirmationCodingKeys, &unk_25144A238);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.ContactConfirmationCodingKeys and conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.ContactConfirmationCodingKeys and conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.ContactConfirmationCodingKeys and conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneSnippetDataModels.ContactConfirmationCodingKeys, &unk_25144A238);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.ContactConfirmationCodingKeys and conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.ContactConfirmationCodingKeys and conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.ContactConfirmationCodingKeys and conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneSnippetDataModels.ContactConfirmationCodingKeys, &unk_25144A238);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.ContactConfirmationCodingKeys and conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.ContactConfirmationCodingKeys and conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.ContactConfirmationCodingKeys and conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneSnippetDataModels.ContactConfirmationCodingKeys, &unk_25144A238);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.ContactConfirmationCodingKeys and conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneSnippetDataModels.AppDisambiguationCodingKeys and conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppDisambiguationCodingKeys and conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppDisambiguationCodingKeys and conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneSnippetDataModels.AppDisambiguationCodingKeys, &unk_25144A1A8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppDisambiguationCodingKeys and conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppDisambiguationCodingKeys and conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppDisambiguationCodingKeys and conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneSnippetDataModels.AppDisambiguationCodingKeys, &unk_25144A1A8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppDisambiguationCodingKeys and conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppDisambiguationCodingKeys and conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppDisambiguationCodingKeys and conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneSnippetDataModels.AppDisambiguationCodingKeys, &unk_25144A1A8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppDisambiguationCodingKeys and conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppDisambiguationCodingKeys and conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppDisambiguationCodingKeys and conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneSnippetDataModels.AppDisambiguationCodingKeys, &unk_25144A1A8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppDisambiguationCodingKeys and conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type AppDisambiguationModel and conformance AppDisambiguationModel()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AppDisambiguationModel and conformance AppDisambiguationModel;
  if (!lazy protocol witness table cache variable for type AppDisambiguationModel and conformance AppDisambiguationModel)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for AppDisambiguationModel, &type metadata for AppDisambiguationModel);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AppDisambiguationModel and conformance AppDisambiguationModel);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AppDisambiguationModel and conformance AppDisambiguationModel;
  if (!lazy protocol witness table cache variable for type AppDisambiguationModel and conformance AppDisambiguationModel)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for AppDisambiguationModel, &type metadata for AppDisambiguationModel);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AppDisambiguationModel and conformance AppDisambiguationModel);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AppDisambiguationModel and conformance AppDisambiguationModel;
  if (!lazy protocol witness table cache variable for type AppDisambiguationModel and conformance AppDisambiguationModel)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for AppDisambiguationModel, &type metadata for AppDisambiguationModel);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AppDisambiguationModel and conformance AppDisambiguationModel);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneSnippetDataModels.AppConfirmationCodingKeys and conformance PhoneSnippetDataModels.AppConfirmationCodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppConfirmationCodingKeys and conformance PhoneSnippetDataModels.AppConfirmationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppConfirmationCodingKeys and conformance PhoneSnippetDataModels.AppConfirmationCodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneSnippetDataModels.AppConfirmationCodingKeys, &unk_25144A118);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppConfirmationCodingKeys and conformance PhoneSnippetDataModels.AppConfirmationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppConfirmationCodingKeys and conformance PhoneSnippetDataModels.AppConfirmationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppConfirmationCodingKeys and conformance PhoneSnippetDataModels.AppConfirmationCodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneSnippetDataModels.AppConfirmationCodingKeys, &unk_25144A118);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppConfirmationCodingKeys and conformance PhoneSnippetDataModels.AppConfirmationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppConfirmationCodingKeys and conformance PhoneSnippetDataModels.AppConfirmationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppConfirmationCodingKeys and conformance PhoneSnippetDataModels.AppConfirmationCodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneSnippetDataModels.AppConfirmationCodingKeys, &unk_25144A118);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppConfirmationCodingKeys and conformance PhoneSnippetDataModels.AppConfirmationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppConfirmationCodingKeys and conformance PhoneSnippetDataModels.AppConfirmationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppConfirmationCodingKeys and conformance PhoneSnippetDataModels.AppConfirmationCodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneSnippetDataModels.AppConfirmationCodingKeys, &unk_25144A118);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppConfirmationCodingKeys and conformance PhoneSnippetDataModels.AppConfirmationCodingKeys);
  }
  return result;
}

uint64_t base witness table accessor for Decodable in PhoneSnippetDataModels()
{
  return lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type PhoneSnippetDataModels and conformance PhoneSnippetDataModels, (uint64_t (*)(uint64_t))type metadata accessor for PhoneSnippetDataModels, (uint64_t)&protocol conformance descriptor for PhoneSnippetDataModels);
}

uint64_t base witness table accessor for Encodable in PhoneSnippetDataModels()
{
  return lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type PhoneSnippetDataModels and conformance PhoneSnippetDataModels, (uint64_t (*)(uint64_t))type metadata accessor for PhoneSnippetDataModels, (uint64_t)&protocol conformance descriptor for PhoneSnippetDataModels);
}

uint64_t initializeBufferWithCopyOfBuffer for PhoneSnippetDataModels(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_243AEC768 + 4 * word_243B333BC[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for PhoneSnippetDataModels(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  int *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  int *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  unsigned int (*v26)(uint64_t, uint64_t, int *);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int *v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  int *v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(uint64_t, uint64_t);
  uint64_t v74;
  void (*v75)(uint64_t, uint64_t);
  uint64_t v76;
  int *v77;
  uint64_t v78;
  void (*v79)(uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  void (*v82)(uint64_t, uint64_t);

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 7:
      v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
      v4(a1, v3);
      v5 = (int *)type metadata accessor for YesNoConfirmationModel();
      v6 = a1 + v5[5];
      v7 = &demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>;
      goto LABEL_17;
    case 1:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v8 = type metadata accessor for ContactConfirmationModel();
      v9 = a1 + *(int *)(v8 + 24);
      v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
      v11(v9, v10);
      v12 = (int *)type metadata accessor for YesNoConfirmationModel();
      v13 = v9 + v12[5];
      v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
      v15 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8);
      v15(v13, v14);
      v11(v9 + v12[6], v10);
      v15(v9 + v12[7], v14);
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + *(int *)(v8 + 28) + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      return swift_bridgeObjectRelease();
    case 3:
      v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      v17 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8);
      v17(a1, v16);
      v18 = (int *)type metadata accessor for EmergencyCountdownModel();
      v17(a1 + v18[5], v16);
      v17(a1 + v18[6], v16);
      v17(a1 + v18[7], v16);
      v17(a1 + v18[8], v16);
      v17(a1 + v18[9], v16);
      v17(a1 + v18[10], v16);
      v17(a1 + v18[11], v16);
      v17(a1 + v18[12], v16);
      v19 = a1 + v18[13];
      v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
      v21 = a1 + v18[14];
      v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
      v23 = a1 + v18[15];
      v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
      return swift_bridgeObjectRelease();
    case 4:
      v25 = (int *)type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
      v26 = *(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v25 - 1) + 48);
      if (!v26(a1, 1, v25))
      {
        v27 = type metadata accessor for UUID();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(a1, v27);
        v28 = a1 + v25[5];
        v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
        v30 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8);
        v30(v28, v29);
        v31 = a1 + v25[6];
        v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v31, v32);
        v33 = a1 + v25[7];
        v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v33, v34);
        v30(a1 + v25[8], v29);
        v35 = a1 + v25[9];
        v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v35, v36);
      }
      v37 = a1 + *(int *)(type metadata accessor for ForeignEmergencyCallDisambiguationModel(0) + 20);
      if (!v26(v37, 1, v25))
      {
        v38 = type metadata accessor for UUID();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(v37, v38);
        v39 = v37 + v25[5];
        v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
        v41 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8);
        v41(v39, v40);
        v42 = v37 + v25[6];
        v43 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 8))(v42, v43);
        v44 = v37 + v25[7];
        v45 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 8))(v44, v45);
        v41(v37 + v25[8], v40);
        v46 = v37 + v25[9];
        v47 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 8))(v46, v47);
      }
      return swift_bridgeObjectRelease();
    case 5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v48 = type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
      v49 = a1 + *(int *)(v48 + 24);
      v50 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 8))(v49, v50);
      v51 = a1 + *(int *)(v48 + 28);
      v52 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 8))(v51, v52);
      return swift_bridgeObjectRelease();
    case 6:
      return swift_bridgeObjectRelease();
    case 8:
      swift_bridgeObjectRelease();
      v53 = (int *)type metadata accessor for SearchCallHistoryModel();
      v54 = a1 + v53[5];
      v55 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      v56 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 8);
      v56(v54, v55);
      v57 = a1 + v53[6];
      v58 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 8))(v57, v58);
      v56(a1 + v53[7], v55);
      v56(a1 + v53[8], v55);
      v59 = a1 + v53[9];
      v60 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 8))(v59, v60);
      v61 = v53[10];
      goto LABEL_15;
    case 9:
      swift_bridgeObjectRelease();
      v62 = (int *)type metadata accessor for PlayVoicemailModel();
      v63 = a1 + v62[5];
      v64 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 8))(v63, v64);
      v65 = a1 + v62[6];
      v66 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      v67 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 8);
      v67(v65, v66);
      v67(a1 + v62[7], v66);
      v61 = v62[8];
LABEL_15:
      v68 = a1 + v61;
      v69 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 8))(v68, v69);
    case 10:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v70 = (int *)type metadata accessor for SingleResultVoicemailModel();
      v71 = a1 + v70[13];
      v72 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
      v73 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 8);
      v73(v71, v72);
      v73(a1 + v70[14], v72);
      a1 += v70[15];
      v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
      v4(a1, v3);
      v5 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
      v6 = a1 + v5[5];
      v7 = &demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>;
LABEL_17:
      v74 = __swift_instantiateConcreteTypeFromMangledName(v7);
      v75 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 8);
      v75(v6, v74);
      v4(a1 + v5[6], v3);
      v75(a1 + v5[7], v74);
      return swift_bridgeObjectRelease();
    case 11:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v76 = a1 + *(int *)(type metadata accessor for SingleResultCallHistoryModel() + 36);
      v77 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
      result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v77 - 1) + 48))(v76, 1, v77);
      if ((_DWORD)result)
        return result;
      v78 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      v79 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 8);
      v79(v76, v78);
      v80 = v76 + v77[5];
      v81 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
      v82 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 8);
      v82(v80, v81);
      v79(v76 + v77[6], v78);
      v82(v76 + v77[7], v81);
      return swift_bridgeObjectRelease();
    default:
      return result;
  }
}

void initializeWithCopy for PhoneSnippetDataModels()
{
  char *v0;

  v0 = (char *)sub_243AEDE58 + 4 * word_243B333EC[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_243AEDE58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t);
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16);
  v3(v0, v1, v2);
  v4 = (int *)type metadata accessor for YesNoConfirmationModel();
  v5 = v4[5];
  v6 = v0 + v5;
  v7 = v1 + v5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  v9(v6, v7, v8);
  v3(v0 + v4[6], v1 + v4[6], v2);
  v9(v0 + v4[7], v1 + v4[7], v8);
  v10 = v4[8];
  v11 = (_QWORD *)(v0 + v10);
  v12 = (_QWORD *)(v1 + v10);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for PhoneSnippetDataModels(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    outlined destroy of SingleResultCallHistoryModel(result, (uint64_t (*)(_QWORD))type metadata accessor for PhoneSnippetDataModels);
    v2 = (char *)&loc_243AEEC84 + 4 * word_243B33404[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

char *initializeWithTake for PhoneSnippetDataModels(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(char *, char *, uint64_t);
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  __int128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char *v26;
  char *v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  int *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  unsigned int (*v47)(char *, uint64_t, int *);
  uint64_t v48;
  int *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  int *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t);
  int *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  void (*v71)(char *, char *, uint64_t);
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  int *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  void (*v93)(char *, char *, uint64_t);
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  int *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  void (*v107)(char *, char *, uint64_t);
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  void (*v112)(char *, char *, uint64_t);
  int *v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  void (*v118)(char *, char *, uint64_t);
  __int128 v119;
  __int128 v120;
  uint64_t v121;
  char *v122;
  char *v123;
  int *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  void (*v132)(char *, char *, uint64_t);
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  char *v153;
  uint64_t v154;
  void (*v155)(char *, char *, uint64_t);
  uint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  void (*v161)(char *, char *, uint64_t);
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  void (*v175)(char *, char *, uint64_t);
  int *v176;
  void (*v177)(char *, char *, uint64_t);
  uint64_t v178;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      v7 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
      v7(a1, a2, v6);
      v8 = (int *)type metadata accessor for YesNoConfirmationModel();
      v9 = v8[5];
      v10 = &a1[v9];
      v11 = &a2[v9];
      v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
      v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32);
      v13(v10, v11, v12);
      v7(&a1[v8[6]], &a2[v8[6]], v6);
      v13(&a1[v8[7]], &a2[v8[7]], v12);
      *(_OWORD *)&a1[v8[8]] = *(_OWORD *)&a2[v8[8]];
      goto LABEL_22;
    case 2u:
      v14 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v14;
      v176 = (int *)type metadata accessor for ContactConfirmationModel();
      v15 = v176[6];
      v16 = &a1[v15];
      v17 = &a2[v15];
      v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      v175 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32);
      v175(v16, v17, v18);
      v19 = (int *)type metadata accessor for YesNoConfirmationModel();
      v20 = v19[5];
      v21 = &v16[v20];
      v22 = &v17[v20];
      v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
      v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32);
      v24(v21, v22, v23);
      v175(&v16[v19[6]], &v17[v19[6]], v18);
      v24(&v16[v19[7]], &v17[v19[7]], v23);
      *(_OWORD *)&v16[v19[8]] = *(_OWORD *)&v17[v19[8]];
      v25 = v176[7];
      v26 = &a1[v25];
      v27 = &a2[v25];
      v28 = *((_OWORD *)v27 + 3);
      *((_OWORD *)v26 + 2) = *((_OWORD *)v27 + 2);
      *((_OWORD *)v26 + 3) = v28;
      v26[64] = v27[64];
      v29 = *((_OWORD *)v27 + 1);
      *(_OWORD *)v26 = *(_OWORD *)v27;
      *((_OWORD *)v26 + 1) = v29;
      *(_OWORD *)&a1[v176[8]] = *(_OWORD *)&a2[v176[8]];
      goto LABEL_22;
    case 3u:
      v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      v31 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32);
      v31(a1, a2, v30);
      v32 = (int *)type metadata accessor for EmergencyCountdownModel();
      v31(&a1[v32[5]], &a2[v32[5]], v30);
      v31(&a1[v32[6]], &a2[v32[6]], v30);
      v31(&a1[v32[7]], &a2[v32[7]], v30);
      v31(&a1[v32[8]], &a2[v32[8]], v30);
      v31(&a1[v32[9]], &a2[v32[9]], v30);
      v31(&a1[v32[10]], &a2[v32[10]], v30);
      v31(&a1[v32[11]], &a2[v32[11]], v30);
      v31(&a1[v32[12]], &a2[v32[12]], v30);
      v33 = v32[13];
      v34 = &a1[v33];
      v35 = &a2[v33];
      v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v34, v35, v36);
      v37 = v32[14];
      v38 = &a1[v37];
      v39 = &a2[v37];
      v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
      v41 = v32[15];
      v42 = &a1[v41];
      v43 = &a2[v41];
      v44 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
      *(_OWORD *)&a1[v32[16]] = *(_OWORD *)&a2[v32[16]];
      goto LABEL_22;
    case 4u:
      v45 = (int *)type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
      v46 = *((_QWORD *)v45 - 1);
      v47 = *(unsigned int (**)(char *, uint64_t, int *))(v46 + 48);
      if (v47(a2, 1, v45))
      {
        v48 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        v127 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v127 - 8) + 32))(a1, a2, v127);
        v128 = v45[5];
        v129 = &a1[v128];
        v130 = &a2[v128];
        v131 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
        v132 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v131 - 8) + 32);
        v132(v129, v130, v131);
        v133 = v45[6];
        v134 = &a1[v133];
        v135 = &a2[v133];
        v136 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v136 - 8) + 32))(v134, v135, v136);
        v137 = v45[7];
        v138 = &a1[v137];
        v139 = &a2[v137];
        v140 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v140 - 8) + 32))(v138, v139, v140);
        v132(&a1[v45[8]], &a2[v45[8]], v131);
        v141 = v45[9];
        v142 = &a1[v141];
        v143 = &a2[v141];
        v144 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v144 - 8) + 32))(v142, v143, v144);
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v46 + 56))(a1, 0, 1, v45);
      }
      v145 = type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
      v146 = *(int *)(v145 + 20);
      v147 = &a1[v146];
      v148 = &a2[v146];
      if (v47(&a2[v146], 1, v45))
      {
        v149 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
        memcpy(v147, v148, *(_QWORD *)(*(_QWORD *)(v149 - 8) + 64));
      }
      else
      {
        v156 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v156 - 8) + 32))(v147, v148, v156);
        v157 = v45[5];
        v158 = &v147[v157];
        v159 = &v148[v157];
        v178 = v46;
        v160 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
        v161 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v160 - 8) + 32);
        v161(v158, v159, v160);
        v162 = v45[6];
        v163 = &v147[v162];
        v164 = &v148[v162];
        v165 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v165 - 8) + 32))(v163, v164, v165);
        v166 = v45[7];
        v167 = &v147[v166];
        v168 = &v148[v166];
        v169 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v169 - 8) + 32))(v167, v168, v169);
        v161(&v147[v45[8]], &v148[v45[8]], v160);
        v170 = v45[9];
        v171 = &v147[v170];
        v172 = &v148[v170];
        v173 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v173 - 8) + 32))(v171, v172, v173);
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v178 + 56))(v147, 0, 1, v45);
      }
      *(_OWORD *)&a1[*(int *)(v145 + 24)] = *(_OWORD *)&a2[*(int *)(v145 + 24)];
      goto LABEL_22;
    case 5u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      v49 = (int *)type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
      v50 = v49[6];
      v51 = &a1[v50];
      v52 = &a2[v50];
      v53 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v51, v52, v53);
      v54 = v49[7];
      v55 = &a1[v54];
      v56 = &a2[v54];
      v57 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v55, v56, v57);
      a1[v49[8]] = a2[v49[8]];
      *(_OWORD *)&a1[v49[9]] = *(_OWORD *)&a2[v49[9]];
      goto LABEL_22;
    case 7u:
      v58 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      v59 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 32);
      v59(a1, a2, v58);
      v60 = (int *)type metadata accessor for YesNoConfirmationModel();
      v61 = v60[5];
      v62 = &a1[v61];
      v63 = &a2[v61];
      v64 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
      v65 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 32);
      v65(v62, v63, v64);
      v59(&a1[v60[6]], &a2[v60[6]], v58);
      v65(&a1[v60[7]], &a2[v60[7]], v64);
      *(_OWORD *)&a1[v60[8]] = *(_OWORD *)&a2[v60[8]];
      goto LABEL_22;
    case 8u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v66 = (int *)type metadata accessor for SearchCallHistoryModel();
      v67 = v66[5];
      v68 = &a1[v67];
      v69 = &a2[v67];
      v70 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      v71 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 32);
      v71(v68, v69, v70);
      v72 = v66[6];
      v73 = &a1[v72];
      v74 = &a2[v72];
      v75 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 32))(v73, v74, v75);
      v71(&a1[v66[7]], &a2[v66[7]], v70);
      v71(&a1[v66[8]], &a2[v66[8]], v70);
      v76 = v66[9];
      v77 = &a1[v76];
      v78 = &a2[v76];
      v79 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 32))(v77, v78, v79);
      v80 = v66[10];
      v81 = &a1[v80];
      v82 = &a2[v80];
      v83 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(v81, v82, v83);
      goto LABEL_22;
    case 9u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v84 = (int *)type metadata accessor for PlayVoicemailModel();
      v85 = v84[5];
      v86 = &a1[v85];
      v87 = &a2[v85];
      v88 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 32))(v86, v87, v88);
      v89 = v84[6];
      v90 = &a1[v89];
      v91 = &a2[v89];
      v92 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      v93 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 32);
      v93(v90, v91, v92);
      v93(&a1[v84[7]], &a2[v84[7]], v92);
      v94 = v84[8];
      v95 = &a1[v94];
      v96 = &a2[v94];
      v97 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 32))(v95, v96, v97);
      goto LABEL_22;
    case 0xAu:
      v98 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v98;
      v99 = *((_OWORD *)a2 + 3);
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      *((_OWORD *)a1 + 3) = v99;
      v100 = *((_OWORD *)a2 + 5);
      *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
      *((_OWORD *)a1 + 5) = v100;
      v101 = *((_OWORD *)a2 + 7);
      *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
      *((_OWORD *)a1 + 7) = v101;
      v102 = (int *)type metadata accessor for SingleResultVoicemailModel();
      v103 = v102[13];
      v104 = &a1[v103];
      v105 = &a2[v103];
      v106 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
      v107 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v106 - 8) + 32);
      v107(v104, v105, v106);
      v107(&a1[v102[14]], &a2[v102[14]], v106);
      v108 = v102[15];
      v109 = &a1[v108];
      v110 = &a2[v108];
      v111 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      v112 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v111 - 8) + 32);
      v112(v109, v110, v111);
      v113 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
      v114 = v113[5];
      v115 = &v109[v114];
      v116 = &v110[v114];
      v117 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
      v118 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v117 - 8) + 32);
      v118(v115, v116, v117);
      v112(&v109[v113[6]], &v110[v113[6]], v111);
      v118(&v109[v113[7]], &v110[v113[7]], v117);
      *(_OWORD *)&v109[v113[8]] = *(_OWORD *)&v110[v113[8]];
      goto LABEL_22;
    case 0xBu:
      v119 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v119;
      v120 = *((_OWORD *)a2 + 3);
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      *((_OWORD *)a1 + 3) = v120;
      *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
      v121 = *(int *)(type metadata accessor for SingleResultCallHistoryModel() + 36);
      v122 = &a1[v121];
      v123 = &a2[v121];
      v124 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
      v125 = *((_QWORD *)v124 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v125 + 48))(v123, 1, v124))
      {
        v126 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
        memcpy(v122, v123, *(_QWORD *)(*(_QWORD *)(v126 - 8) + 64));
      }
      else
      {
        v150 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        v177 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v150 - 8) + 32);
        v177(v122, v123, v150);
        v151 = v124[5];
        v152 = &v122[v151];
        v153 = &v123[v151];
        v154 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
        v155 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v154 - 8) + 32);
        v155(v152, v153, v154);
        v177(&v122[v124[6]], &v123[v124[6]], v150);
        v155(&v122[v124[7]], &v123[v124[7]], v154);
        *(_OWORD *)&v122[v124[8]] = *(_OWORD *)&v123[v124[8]];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v125 + 56))(v122, 0, 1, v124);
      }
LABEL_22:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithTake for PhoneSnippetDataModels(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(char *, char *, uint64_t);
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  __int128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char *v26;
  char *v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  int *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  unsigned int (*v47)(char *, uint64_t, int *);
  uint64_t v48;
  int *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  int *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t);
  int *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  void (*v71)(char *, char *, uint64_t);
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  int *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  void (*v93)(char *, char *, uint64_t);
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  int *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  void (*v107)(char *, char *, uint64_t);
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  void (*v112)(char *, char *, uint64_t);
  int *v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  void (*v118)(char *, char *, uint64_t);
  __int128 v119;
  __int128 v120;
  uint64_t v121;
  char *v122;
  char *v123;
  int *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  void (*v132)(char *, char *, uint64_t);
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  char *v153;
  uint64_t v154;
  void (*v155)(char *, char *, uint64_t);
  uint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  void (*v161)(char *, char *, uint64_t);
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  void (*v175)(char *, char *, uint64_t);
  int *v176;
  void (*v177)(char *, char *, uint64_t);
  uint64_t v178;

  if (a1 != a2)
  {
    outlined destroy of SingleResultCallHistoryModel((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for PhoneSnippetDataModels);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        v7 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
        v7(a1, a2, v6);
        v8 = (int *)type metadata accessor for YesNoConfirmationModel();
        v9 = v8[5];
        v10 = &a1[v9];
        v11 = &a2[v9];
        v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
        v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32);
        v13(v10, v11, v12);
        v7(&a1[v8[6]], &a2[v8[6]], v6);
        v13(&a1[v8[7]], &a2[v8[7]], v12);
        *(_OWORD *)&a1[v8[8]] = *(_OWORD *)&a2[v8[8]];
        goto LABEL_23;
      case 2u:
        v14 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v14;
        v176 = (int *)type metadata accessor for ContactConfirmationModel();
        v15 = v176[6];
        v16 = &a1[v15];
        v17 = &a2[v15];
        v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        v175 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32);
        v175(v16, v17, v18);
        v19 = (int *)type metadata accessor for YesNoConfirmationModel();
        v20 = v19[5];
        v21 = &v16[v20];
        v22 = &v17[v20];
        v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
        v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32);
        v24(v21, v22, v23);
        v175(&v16[v19[6]], &v17[v19[6]], v18);
        v24(&v16[v19[7]], &v17[v19[7]], v23);
        *(_OWORD *)&v16[v19[8]] = *(_OWORD *)&v17[v19[8]];
        v25 = v176[7];
        v26 = &a1[v25];
        v27 = &a2[v25];
        v28 = *((_OWORD *)v27 + 3);
        *((_OWORD *)v26 + 2) = *((_OWORD *)v27 + 2);
        *((_OWORD *)v26 + 3) = v28;
        v26[64] = v27[64];
        v29 = *((_OWORD *)v27 + 1);
        *(_OWORD *)v26 = *(_OWORD *)v27;
        *((_OWORD *)v26 + 1) = v29;
        *(_OWORD *)&a1[v176[8]] = *(_OWORD *)&a2[v176[8]];
        goto LABEL_23;
      case 3u:
        v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        v31 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32);
        v31(a1, a2, v30);
        v32 = (int *)type metadata accessor for EmergencyCountdownModel();
        v31(&a1[v32[5]], &a2[v32[5]], v30);
        v31(&a1[v32[6]], &a2[v32[6]], v30);
        v31(&a1[v32[7]], &a2[v32[7]], v30);
        v31(&a1[v32[8]], &a2[v32[8]], v30);
        v31(&a1[v32[9]], &a2[v32[9]], v30);
        v31(&a1[v32[10]], &a2[v32[10]], v30);
        v31(&a1[v32[11]], &a2[v32[11]], v30);
        v31(&a1[v32[12]], &a2[v32[12]], v30);
        v33 = v32[13];
        v34 = &a1[v33];
        v35 = &a2[v33];
        v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v34, v35, v36);
        v37 = v32[14];
        v38 = &a1[v37];
        v39 = &a2[v37];
        v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
        v41 = v32[15];
        v42 = &a1[v41];
        v43 = &a2[v41];
        v44 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
        *(_OWORD *)&a1[v32[16]] = *(_OWORD *)&a2[v32[16]];
        goto LABEL_23;
      case 4u:
        v45 = (int *)type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
        v46 = *((_QWORD *)v45 - 1);
        v47 = *(unsigned int (**)(char *, uint64_t, int *))(v46 + 48);
        if (v47(a2, 1, v45))
        {
          v48 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
        }
        else
        {
          v127 = type metadata accessor for UUID();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v127 - 8) + 32))(a1, a2, v127);
          v128 = v45[5];
          v129 = &a1[v128];
          v130 = &a2[v128];
          v131 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
          v132 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v131 - 8) + 32);
          v132(v129, v130, v131);
          v133 = v45[6];
          v134 = &a1[v133];
          v135 = &a2[v133];
          v136 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v136 - 8) + 32))(v134, v135, v136);
          v137 = v45[7];
          v138 = &a1[v137];
          v139 = &a2[v137];
          v140 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v140 - 8) + 32))(v138, v139, v140);
          v132(&a1[v45[8]], &a2[v45[8]], v131);
          v141 = v45[9];
          v142 = &a1[v141];
          v143 = &a2[v141];
          v144 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v144 - 8) + 32))(v142, v143, v144);
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v46 + 56))(a1, 0, 1, v45);
        }
        v145 = type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
        v146 = *(int *)(v145 + 20);
        v147 = &a1[v146];
        v148 = &a2[v146];
        if (v47(&a2[v146], 1, v45))
        {
          v149 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
          memcpy(v147, v148, *(_QWORD *)(*(_QWORD *)(v149 - 8) + 64));
        }
        else
        {
          v156 = type metadata accessor for UUID();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v156 - 8) + 32))(v147, v148, v156);
          v157 = v45[5];
          v158 = &v147[v157];
          v159 = &v148[v157];
          v178 = v46;
          v160 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
          v161 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v160 - 8) + 32);
          v161(v158, v159, v160);
          v162 = v45[6];
          v163 = &v147[v162];
          v164 = &v148[v162];
          v165 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v165 - 8) + 32))(v163, v164, v165);
          v166 = v45[7];
          v167 = &v147[v166];
          v168 = &v148[v166];
          v169 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v169 - 8) + 32))(v167, v168, v169);
          v161(&v147[v45[8]], &v148[v45[8]], v160);
          v170 = v45[9];
          v171 = &v147[v170];
          v172 = &v148[v170];
          v173 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v173 - 8) + 32))(v171, v172, v173);
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v178 + 56))(v147, 0, 1, v45);
        }
        *(_OWORD *)&a1[*(int *)(v145 + 24)] = *(_OWORD *)&a2[*(int *)(v145 + 24)];
        goto LABEL_23;
      case 5u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        v49 = (int *)type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
        v50 = v49[6];
        v51 = &a1[v50];
        v52 = &a2[v50];
        v53 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v51, v52, v53);
        v54 = v49[7];
        v55 = &a1[v54];
        v56 = &a2[v54];
        v57 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v55, v56, v57);
        a1[v49[8]] = a2[v49[8]];
        *(_OWORD *)&a1[v49[9]] = *(_OWORD *)&a2[v49[9]];
        goto LABEL_23;
      case 7u:
        v58 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        v59 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 32);
        v59(a1, a2, v58);
        v60 = (int *)type metadata accessor for YesNoConfirmationModel();
        v61 = v60[5];
        v62 = &a1[v61];
        v63 = &a2[v61];
        v64 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
        v65 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 32);
        v65(v62, v63, v64);
        v59(&a1[v60[6]], &a2[v60[6]], v58);
        v65(&a1[v60[7]], &a2[v60[7]], v64);
        *(_OWORD *)&a1[v60[8]] = *(_OWORD *)&a2[v60[8]];
        goto LABEL_23;
      case 8u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v66 = (int *)type metadata accessor for SearchCallHistoryModel();
        v67 = v66[5];
        v68 = &a1[v67];
        v69 = &a2[v67];
        v70 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        v71 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 32);
        v71(v68, v69, v70);
        v72 = v66[6];
        v73 = &a1[v72];
        v74 = &a2[v72];
        v75 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 32))(v73, v74, v75);
        v71(&a1[v66[7]], &a2[v66[7]], v70);
        v71(&a1[v66[8]], &a2[v66[8]], v70);
        v76 = v66[9];
        v77 = &a1[v76];
        v78 = &a2[v76];
        v79 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 32))(v77, v78, v79);
        v80 = v66[10];
        v81 = &a1[v80];
        v82 = &a2[v80];
        v83 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(v81, v82, v83);
        goto LABEL_23;
      case 9u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v84 = (int *)type metadata accessor for PlayVoicemailModel();
        v85 = v84[5];
        v86 = &a1[v85];
        v87 = &a2[v85];
        v88 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 32))(v86, v87, v88);
        v89 = v84[6];
        v90 = &a1[v89];
        v91 = &a2[v89];
        v92 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        v93 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 32);
        v93(v90, v91, v92);
        v93(&a1[v84[7]], &a2[v84[7]], v92);
        v94 = v84[8];
        v95 = &a1[v94];
        v96 = &a2[v94];
        v97 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 32))(v95, v96, v97);
        goto LABEL_23;
      case 0xAu:
        v98 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v98;
        v99 = *((_OWORD *)a2 + 3);
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 3) = v99;
        v100 = *((_OWORD *)a2 + 5);
        *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
        *((_OWORD *)a1 + 5) = v100;
        v101 = *((_OWORD *)a2 + 7);
        *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
        *((_OWORD *)a1 + 7) = v101;
        v102 = (int *)type metadata accessor for SingleResultVoicemailModel();
        v103 = v102[13];
        v104 = &a1[v103];
        v105 = &a2[v103];
        v106 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
        v107 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v106 - 8) + 32);
        v107(v104, v105, v106);
        v107(&a1[v102[14]], &a2[v102[14]], v106);
        v108 = v102[15];
        v109 = &a1[v108];
        v110 = &a2[v108];
        v111 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        v112 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v111 - 8) + 32);
        v112(v109, v110, v111);
        v113 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
        v114 = v113[5];
        v115 = &v109[v114];
        v116 = &v110[v114];
        v117 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
        v118 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v117 - 8) + 32);
        v118(v115, v116, v117);
        v112(&v109[v113[6]], &v110[v113[6]], v111);
        v118(&v109[v113[7]], &v110[v113[7]], v117);
        *(_OWORD *)&v109[v113[8]] = *(_OWORD *)&v110[v113[8]];
        goto LABEL_23;
      case 0xBu:
        v119 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v119;
        v120 = *((_OWORD *)a2 + 3);
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 3) = v120;
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
        v121 = *(int *)(type metadata accessor for SingleResultCallHistoryModel() + 36);
        v122 = &a1[v121];
        v123 = &a2[v121];
        v124 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
        v125 = *((_QWORD *)v124 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v125 + 48))(v123, 1, v124))
        {
          v126 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
          memcpy(v122, v123, *(_QWORD *)(*(_QWORD *)(v126 - 8) + 64));
        }
        else
        {
          v150 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
          v177 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v150 - 8) + 32);
          v177(v122, v123, v150);
          v151 = v124[5];
          v152 = &v122[v151];
          v153 = &v123[v151];
          v154 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
          v155 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v154 - 8) + 32);
          v155(v152, v153, v154);
          v177(&v122[v124[6]], &v123[v124[6]], v150);
          v155(&v122[v124[7]], &v123[v124[7]], v154);
          *(_OWORD *)&v122[v124[8]] = *(_OWORD *)&v123[v124[8]];
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v125 + 56))(v122, 0, 1, v124);
        }
LABEL_23:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for PhoneSnippetDataModels(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for PhoneSnippetDataModels(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t destructiveInjectEnumTag for PhoneSnippetDataModels()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t type metadata completion function for PhoneSnippetDataModels()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  result = type metadata accessor for YesNoConfirmationModel();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for ContactConfirmationModel();
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for EmergencyCountdownModel();
      if (v3 <= 0x3F)
      {
        result = type metadata accessor for ForeignEmergencyCallDisambiguationModel(319);
        if (v4 <= 0x3F)
        {
          result = type metadata accessor for LocalEmergencyCallDisambiguationModel(319);
          if (v5 <= 0x3F)
          {
            result = type metadata accessor for SearchCallHistoryModel();
            if (v6 <= 0x3F)
            {
              result = type metadata accessor for PlayVoicemailModel();
              if (v7 <= 0x3F)
              {
                result = type metadata accessor for SingleResultVoicemailModel();
                if (v8 <= 0x3F)
                {
                  result = type metadata accessor for SingleResultCallHistoryModel();
                  if (v9 <= 0x3F)
                  {
                    swift_initEnumMetadataMultiPayload();
                    return 0;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PhoneSnippetDataModels.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_243AF15B8 + 4 * byte_243B33451[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_243AF15EC + 4 * byte_243B3344C[v4]))();
}

uint64_t sub_243AF15EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_243AF15F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x243AF15FCLL);
  return result;
}

uint64_t sub_243AF1608(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x243AF1610);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_243AF1614(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_243AF161C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for PhoneSnippetDataModels.CodingKeys()
{
  return &unk_25144A088;
}

uint64_t getEnumTag for PhoneSnippetDataModels.AppConfirmationCodingKeys()
{
  return 0;
}

void *type metadata accessor for PhoneSnippetDataModels.AppConfirmationCodingKeys()
{
  return &unk_25144A118;
}

void *type metadata accessor for PhoneSnippetDataModels.AppDisambiguationCodingKeys()
{
  return &unk_25144A1A8;
}

void *type metadata accessor for PhoneSnippetDataModels.ContactConfirmationCodingKeys()
{
  return &unk_25144A238;
}

void *type metadata accessor for PhoneSnippetDataModels.EmergencyCountdownCodingKeys()
{
  return &unk_25144A2C8;
}

void *type metadata accessor for PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys()
{
  return &unk_25144A358;
}

void *type metadata accessor for PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys()
{
  return &unk_25144A3E8;
}

void *type metadata accessor for PhoneSnippetDataModels.StackedButtonsCodingKeys()
{
  return &unk_25144A478;
}

void *type metadata accessor for PhoneSnippetDataModels.YesNoConfirmationCodingKeys()
{
  return &unk_25144A508;
}

void *type metadata accessor for PhoneSnippetDataModels.CallHistoryListCodingKeys()
{
  return &unk_25144A598;
}

void *type metadata accessor for PhoneSnippetDataModels.PlayVoicemailListCodingKeys()
{
  return &unk_25144A628;
}

void *type metadata accessor for PhoneSnippetDataModels.SingleVoicemailCodingKeys()
{
  return &unk_25144A6B8;
}

uint64_t getEnumTagSinglePayload for PhoneSnippetDataModels.AppConfirmationCodingKeys(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for PhoneSnippetDataModels.AppConfirmationCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_243AF178C + 4 * byte_243B33456[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_243AF17AC + 4 * byte_243B3345B[v4]))();
}

_BYTE *sub_243AF178C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_243AF17AC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_243AF17B4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_243AF17BC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_243AF17C4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_243AF17CC(_DWORD *result)
{
  *result = 0;
  return result;
}

void *type metadata accessor for PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys()
{
  return &unk_25144A748;
}

uint64_t specialized PhoneSnippetDataModels.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x69666E6F43707061 && a2 == 0xEF6E6F6974616D72;
  if (v3 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000243B37510
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000243B37530
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000243B37550
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x8000000243B37570
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x8000000243B375A0
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x4264656B63617473 && a2 == 0xEE00736E6F747475
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000243B375D0
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x747369486C6C6163 && a2 == 0xEF7473694C79726FLL
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000243B375F0
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6F56656C676E6973 && a2 == 0xEF6C69616D656369
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000243B37610)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 11;
    else
      return 12;
  }
}

uint64_t specialized PhoneSnippetDataModels.StackedButtonsCodingKeys.stringValue.getter()
{
  return 12383;
}

uint64_t specialized PhoneSnippetDataModels.AppConfirmationCodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t AppDisambiguationView.model.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AppDisambiguationView() + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for AppDisambiguationView()
{
  uint64_t result;

  result = type metadata singleton initialization cache for AppDisambiguationView;
  if (!type metadata singleton initialization cache for AppDisambiguationView)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t AppDisambiguationView.init(model:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _QWORD *v11;

  type metadata accessor for Context();
  lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
  *a4 = EnvironmentObject.init()();
  a4[1] = v8;
  v9 = type metadata accessor for AppDisambiguationView();
  result = ActionHandler.init()();
  v11 = (uint64_t *)((char *)a4 + *(int *)(v9 + 24));
  *v11 = a1;
  v11[1] = a2;
  v11[2] = a3;
  return result;
}

uint64_t AppDisambiguationView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v19;
  uint64_t v20;

  v2 = v1;
  v20 = a1;
  v3 = type metadata accessor for AppDisambiguationView();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ComponentStack<TupleView<(SashStandardView?, ForEachWithIndex<[AppDescription], ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>>)>>);
  v7 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v1, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for AppDisambiguationView);
  v10 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v11 = swift_allocObject();
  outlined init with take of AppDisambiguationView((uint64_t)v6, v11 + v10);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(SashStandardView?, ForEachWithIndex<[AppDescription], ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>>)>);
  v13 = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type TupleView<(SashStandardView?, ForEachWithIndex<[AppDescription], ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>>)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(SashStandardView?, ForEachWithIndex<[AppDescription], ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>>)>, MEMORY[0x24BDF5420]);
  MEMORY[0x24950072C](partial apply for closure #1 in AppDisambiguationView.body.getter, v11, v12, v13);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v2, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for AppDisambiguationView);
  v14 = swift_allocObject();
  outlined init with take of AppDisambiguationView((uint64_t)v6, v14 + v10);
  v16 = v19;
  v15 = v20;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(v20, v9, v19);
  v17 = (_QWORD *)(v15
                 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(SashStandardView?, ForEachWithIndex<[AppDescription], ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>>)>>, _AppearanceActionModifier>)
                          + 36));
  *v17 = partial apply for closure #2 in AppDisambiguationView.body.getter;
  v17[1] = v14;
  v17[2] = 0;
  v17[3] = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v16);
}

uint64_t closure #1 in AppDisambiguationView.body.getter@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t result;
  uint64_t v21;

  v4 = type metadata accessor for AppDisambiguationView();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SashStandardView?);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v21 - v11;
  if (*a1)
  {
    v13 = *a1;
    dispatch thunk of Context.currentIdiom.getter();

    if ((VRXIdiom.isCarPlay.getter() & 1) != 0)
    {
      v14 = type metadata accessor for SashStandardView();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v12, 1, 1, v14);
    }
    else
    {
      if (one-time initialization token for siriAppBundleId != -1)
        swift_once();
      swift_bridgeObjectRetain();
      SashStandardView.init(_:titleColor:showOnWatch:)();
      v15 = type metadata accessor for SashStandardView();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v12, 0, 1, v15);
    }
    v16 = *(uint64_t *)((char *)a1 + *(int *)(v4 + 24));
    outlined init with copy of SearchCallHistoryBinaryButtonModel((uint64_t)a1, (uint64_t)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for AppDisambiguationView);
    v17 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v18 = swift_allocObject();
    outlined init with take of AppDisambiguationView((uint64_t)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17);
    outlined init with copy of SashStandardView?((uint64_t)v12, (uint64_t)v10);
    outlined init with copy of SashStandardView?((uint64_t)v10, a2);
    v19 = (_QWORD *)(a2
                   + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SashStandardView?, ForEachWithIndex<[AppDescription], ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>>))
                            + 48));
    *v19 = v16;
    v19[1] = partial apply for closure #1 in closure #1 in AppDisambiguationView.body.getter;
    v19[2] = v18;
    swift_bridgeObjectRetain_n();
    swift_retain();
    outlined destroy of SashStandardView?((uint64_t)v12);
    swift_release();
    swift_bridgeObjectRelease();
    return outlined destroy of SashStandardView?((uint64_t)v10);
  }
  else
  {
    type metadata accessor for Context();
    lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
    result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t outlined init with take of AppDisambiguationView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AppDisambiguationView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t closure #1 in closure #1 in AppDisambiguationView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, id *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  id v23;
  char v24;
  unsigned int *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v39 = a1;
  v40 = a4;
  v37 = type metadata accessor for SeparatorStyle();
  v6 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for AppDescriptionView();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t *)((char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.separators(_:isOverride:)>>.0);
  v36 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>);
  MEMORY[0x24BDAC7A8](v35);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(a2, (uint64_t)v11 + v9[6], (uint64_t (*)(_QWORD))type metadata accessor for AppDescription);
  static Font.Weight.regular.getter();
  v17 = v16;
  v18 = (char *)v11 + v9[7];
  v19 = *MEMORY[0x24BEAAC20];
  v20 = type metadata accessor for ImageElement.ImageStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v18, v19, v20);
  type metadata accessor for Context();
  lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
  *v11 = EnvironmentObject.init()();
  v11[1] = v21;
  ActionHandler.init()();
  v22 = (char *)v11 + v9[8];
  *(_QWORD *)v22 = v17;
  v22[8] = 0;
  if (*a3)
  {
    v23 = *a3;
    dispatch thunk of Context.currentIdiom.getter();
    v24 = VRXIdiom.isCarPlay.getter();
    v25 = (unsigned int *)MEMORY[0x24BEAB508];
    if ((v24 & 1) == 0)
      v25 = (unsigned int *)MEMORY[0x24BEAB4F0];
    v26 = v37;
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *v25, v37);

    lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type AppDescriptionView and conformance AppDescriptionView, (uint64_t (*)(uint64_t))type metadata accessor for AppDescriptionView, (uint64_t)&protocol conformance descriptor for AppDescriptionView);
    View.separators(_:isOverride:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v26);
    outlined destroy of AppDescriptionView((uint64_t)v11);
    v27 = v39 == 0;
    v28 = EnvironmentObject.init()();
    v30 = v29;
    v31 = v36;
    v32 = v38;
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v15, v13, v38);
    v33 = &v15[*(int *)(v35 + 36)];
    *(_QWORD *)v33 = v28;
    *((_QWORD *)v33 + 1) = v30;
    v33[16] = v27;
    (*(void (**)(char *, uint64_t))(v31 + 8))(v13, v32);
    return outlined init with take of ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>((uint64_t)v15, v40);
  }
  else
  {
    result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

void closure #2 in AppDisambiguationView.body.getter(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  if (*a1)
  {
    type metadata accessor for AppDisambiguationView();
    v2 = v1;
    dispatch thunk of Context.informHostListItemCount(_:)();

  }
  else
  {
    type metadata accessor for Context();
    lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
    EnvironmentObject.error()();
    __break(1u);
  }
}

uint64_t associated type witness table accessor for View.Body : View in AppDisambiguationView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t protocol witness for View.body.getter in conformance AppDisambiguationView@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v19;
  uint64_t v20;

  v3 = v2;
  v20 = a2;
  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ComponentStack<TupleView<(SashStandardView?, ForEachWithIndex<[AppDescription], ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>>)>>);
  v7 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v2, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for AppDisambiguationView);
  v10 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v11 = swift_allocObject();
  outlined init with take of AppDisambiguationView((uint64_t)v6, v11 + v10);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(SashStandardView?, ForEachWithIndex<[AppDescription], ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>>)>);
  v13 = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type TupleView<(SashStandardView?, ForEachWithIndex<[AppDescription], ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>>)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(SashStandardView?, ForEachWithIndex<[AppDescription], ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>>)>, MEMORY[0x24BDF5420]);
  MEMORY[0x24950072C](partial apply for closure #1 in AppDisambiguationView.body.getter, v11, v12, v13);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v3, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for AppDisambiguationView);
  v14 = swift_allocObject();
  outlined init with take of AppDisambiguationView((uint64_t)v6, v14 + v10);
  v16 = v19;
  v15 = v20;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(v20, v9, v19);
  v17 = (_QWORD *)(v15
                 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(SashStandardView?, ForEachWithIndex<[AppDescription], ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>>)>>, _AppearanceActionModifier>)
                          + 36));
  *v17 = partial apply for closure #2 in AppDisambiguationView.body.getter;
  v17[1] = v14;
  v17[2] = 0;
  v17[3] = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v16);
}

char *initializeBufferWithCopyOfBuffer for AppDisambiguationView(char *a1, char **a2, uint64_t a3)
{
  int v3;
  char *v4;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  char *v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  uint64_t v17;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v7 = a1;
    *((_QWORD *)a1 + 1) = a2[1];
    v8 = *(int *)(a3 + 20);
    v9 = &a1[v8];
    v10 = (uint64_t)a2 + v8;
    v11 = type metadata accessor for ActionHandler();
    v12 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v13 = v4;
    v12(v9, v10, v11);
    v14 = *(int *)(a3 + 24);
    v15 = &v7[v14];
    v16 = (char **)((char *)a2 + v14);
    v17 = v16[1];
    *(_QWORD *)v15 = *v16;
    *((_QWORD *)v15 + 1) = v17;
    *((_QWORD *)v15 + 2) = v16[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t destroy for AppDisambiguationView(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for AppDisambiguationView(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  id v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  v7 = *(void **)a2;
  v6 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v6;
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for ActionHandler();
  v12 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  v13 = v7;
  v12(v9, v10, v11);
  v14 = *(int *)(a3 + 24);
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v15[2] = v16[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AppDisambiguationView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v6 = *(void **)a1;
  v7 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v7;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v9 = *(int *)(a3 + 20);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v13 = *(int *)(a3 + 24);
  v14 = a1 + v13;
  v15 = (_QWORD *)(a2 + v13);
  *(_QWORD *)(a1 + v13) = *v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v14 + 8) = v15[1];
  *(_QWORD *)(v14 + 16) = v15[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for AppDisambiguationView(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *((_QWORD *)v11 + 2) = *((_QWORD *)v12 + 2);
  return a1;
}

uint64_t assignWithTake for AppDisambiguationView(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  *(_QWORD *)(a1 + 8) = a2[1];
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = (_QWORD *)((char *)a2 + v11);
  *(_QWORD *)(a1 + v11) = *v13;
  swift_bridgeObjectRelease();
  v14 = v13[2];
  *(_QWORD *)(v12 + 8) = v13[1];
  *(_QWORD *)(v12 + 16) = v14;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AppDisambiguationView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_243AF3764(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for ActionHandler();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for AppDisambiguationView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_243AF37F0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for ActionHandler();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t type metadata completion function for AppDisambiguationView()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ActionHandler();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ComponentStack<TupleView<(SashStandardView?, ForEachWithIndex<[AppDescription], ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>>)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ComponentStack<TupleView<(SashStandardView?, ForEachWithIndex<[AppDescription], ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>>)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ComponentStack<TupleView<(SashStandardView?, ForEachWithIndex<[AppDescription], ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>>)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(SashStandardView?, ForEachWithIndex<[AppDescription], ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>>)>>, _AppearanceActionModifier>);
    v2[0] = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type ComponentStack<TupleView<(SashStandardView?, ForEachWithIndex<[AppDescription], ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>>)>> and conformance ComponentStack<A>, &demangling cache variable for type metadata for ComponentStack<TupleView<(SashStandardView?, ForEachWithIndex<[AppDescription], ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>>)>>, MEMORY[0x24BEADBF8]);
    v2[1] = MEMORY[0x24BDF0908];
    result = MEMORY[0x249501140](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ComponentStack<TupleView<(SashStandardView?, ForEachWithIndex<[AppDescription], ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>>)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t partial apply for closure #1 in AppDisambiguationView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AppDisambiguationView() - 8) + 80);
  return closure #1 in AppDisambiguationView.body.getter((id *)(v1 + ((v3 + 16) & ~v3)), a1);
}

void partial apply for closure #2 in AppDisambiguationView.body.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AppDisambiguationView() - 8) + 80);
  closure #2 in AppDisambiguationView.body.getter((void **)(v0 + ((v1 + 16) & ~v1)));
}

uint64_t objectdestroyTm_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id *v3;
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for AppDisambiguationView();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (id *)(v0 + ((v2 + 16) & ~v2));

  v4 = (char *)v3 + *(int *)(v1 + 20);
  v5 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in AppDisambiguationView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AppDisambiguationView() - 8) + 80);
  return closure #1 in closure #1 in AppDisambiguationView.body.getter(a1, a2, (id *)(v3 + ((v7 + 16) & ~v7)), a3);
}

uint64_t outlined init with copy of SashStandardView?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SashStandardView?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of SashStandardView?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SashStandardView?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t outlined init with take of ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t YesNoConfirmationView.actionHandler.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  MEMORY[0x24BDAC7A8](v2);
  outlined init with copy of StandardActionHandler?(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  ActionHandler.wrappedValue.setter();
  return outlined destroy of SearchCallHistoryBinaryButtonModel?(a1, &demangling cache variable for type metadata for StandardActionHandler?);
}

void (*YesNoConfirmationView.actionHandler.modify(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = ActionHandler.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t YesNoConfirmationView.model.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for YesNoConfirmationView();
  return outlined init with copy of SearchCallHistoryBinaryButtonModel(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(_QWORD))type metadata accessor for YesNoConfirmationModel);
}

uint64_t type metadata accessor for YesNoConfirmationView()
{
  uint64_t result;

  result = type metadata singleton initialization cache for YesNoConfirmationView;
  if (!type metadata singleton initialization cache for YesNoConfirmationView)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t YesNoConfirmationView.init(model:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  ActionHandler.init()();
  v4 = type metadata accessor for YesNoConfirmationView();
  return outlined init with take of SingleResultCallHistoryModel(a1, a2 + *(int *)(v4 + 20), (uint64_t (*)(_QWORD))type metadata accessor for YesNoConfirmationModel);
}

uint64_t YesNoConfirmationView.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;

  v1 = type metadata accessor for YesNoConfirmationView();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  MEMORY[0x24BDAC7A8](v1);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v0, (uint64_t)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for YesNoConfirmationView);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  outlined init with take of SingleResultCallHistoryModel((uint64_t)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v5 + v4, (uint64_t (*)(_QWORD))type metadata accessor for YesNoConfirmationView);
  v6 = type metadata accessor for BinaryButtonView();
  v7 = lazy protocol witness table accessor for type BinaryButtonView and conformance BinaryButtonView();
  return MEMORY[0x24950072C](partial apply for closure #1 in YesNoConfirmationView.body.getter, v5, v6, v7);
}

uint64_t closure #1 in YesNoConfirmationView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[12];

  v15[1] = a2;
  v3 = type metadata accessor for YesNoConfirmationView();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<Text>);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = YesNoConfirmationView.yesButton.getter();
  v15[10] = MEMORY[0x24BDF4788];
  v15[11] = MEMORY[0x24BEAD940];
  v15[7] = v10;
  type metadata accessor for YesNoConfirmationModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  outlined init with copy of SearchCallHistoryBinaryButtonModel(a1, (uint64_t)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for YesNoConfirmationView);
  v11 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v12 = swift_allocObject();
  outlined init with take of SingleResultCallHistoryModel((uint64_t)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11, (uint64_t (*)(_QWORD))type metadata accessor for YesNoConfirmationView);
  lazy protocol witness table accessor for type String and conformance String();
  Button<>.init<A>(_:action:)();
  lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>((unint64_t *)&lazy protocol witness table cache variable for type Button<Text> and conformance Button<A>, &demangling cache variable for type metadata for Button<Text>, MEMORY[0x24BDF43B8]);
  v13 = View.eraseToAnyView()();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v15[6] = MEMORY[0x24BEAD940];
  v15[5] = MEMORY[0x24BDF4788];
  v15[2] = v13;
  return BinaryButtonView.init(primaryButton:secondaryButton:)();
}

unint64_t lazy protocol witness table accessor for type BinaryButtonView and conformance BinaryButtonView()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type BinaryButtonView and conformance BinaryButtonView;
  if (!lazy protocol witness table cache variable for type BinaryButtonView and conformance BinaryButtonView)
  {
    v1 = type metadata accessor for BinaryButtonView();
    result = MEMORY[0x249501140](MEMORY[0x24BEADCC8], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type BinaryButtonView and conformance BinaryButtonView);
  }
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in YesNoConfirmationView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t YesNoConfirmationView.yesButton.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = type metadata accessor for ButtonItemButtonStyle.Role();
  v22 = *(_QWORD *)(v2 - 8);
  v23 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for YesNoConfirmationView();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<Text>);
  v21 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.buttonRole(_:)>>.0);
  v24 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v1, (uint64_t)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for YesNoConfirmationView);
  v14 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v15 = swift_allocObject();
  outlined init with take of SingleResultCallHistoryModel((uint64_t)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14, (uint64_t (*)(_QWORD))type metadata accessor for YesNoConfirmationView);
  lazy protocol witness table accessor for type String and conformance String();
  Button<>.init<A>(_:action:)();
  v17 = v22;
  v16 = v23;
  (*(void (**)(char *, _QWORD, uint64_t))(v22 + 104))(v4, *MEMORY[0x24BEAD980], v23);
  v18 = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>((unint64_t *)&lazy protocol witness table cache variable for type Button<Text> and conformance Button<A>, &demangling cache variable for type metadata for Button<Text>, MEMORY[0x24BDF43B8]);
  View.buttonRole(_:)();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v4, v16);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v8);
  v25 = v8;
  v26 = v18;
  swift_getOpaqueTypeConformance2();
  v19 = View.eraseToAnyView()();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v13, v11);
  return v19;
}

uint64_t closure #1 in YesNoConfirmationView.yesButton.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for InteractionType?);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionProperty?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  ActionHandler.wrappedValue.getter();
  v9 = type metadata accessor for StandardActionHandler();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v8, &demangling cache variable for type metadata for StandardActionHandler?);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionElementConvertible>);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_243B32430;
  v13 = type metadata accessor for Command();
  v14 = MEMORY[0x24BEAD1E8];
  *(_QWORD *)(v12 + 56) = v13;
  *(_QWORD *)(v12 + 64) = v14;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v12 + 32));
  type metadata accessor for YesNoConfirmationView();
  type metadata accessor for YesNoConfirmationModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  *boxed_opaque_existential_1 = CodableAceObject.wrappedValue.getter();
  *((_BYTE *)boxed_opaque_existential_1 + 8) = 0;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x24BEAD1C8], v13);
  ActionProperty.init(_:)();
  v16 = type metadata accessor for ActionProperty();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v5, 0, 1, v16);
  v17 = type metadata accessor for InteractionType();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v2, 1, 1, v17);
  StandardActionHandler.perform(_:interactionType:)();
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v2, &demangling cache variable for type metadata for InteractionType?);
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v5, &demangling cache variable for type metadata for ActionProperty?);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v8, v9);
}

uint64_t closure #1 in YesNoConfirmationView.noButton.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for InteractionType?);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionProperty?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  ActionHandler.wrappedValue.getter();
  v9 = type metadata accessor for StandardActionHandler();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v8, &demangling cache variable for type metadata for StandardActionHandler?);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionElementConvertible>);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_243B32430;
  v13 = type metadata accessor for Command();
  v14 = MEMORY[0x24BEAD1E8];
  *(_QWORD *)(v12 + 56) = v13;
  *(_QWORD *)(v12 + 64) = v14;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v12 + 32));
  type metadata accessor for YesNoConfirmationView();
  type metadata accessor for YesNoConfirmationModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  *boxed_opaque_existential_1 = CodableAceObject.wrappedValue.getter();
  *((_BYTE *)boxed_opaque_existential_1 + 8) = 0;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x24BEAD1C8], v13);
  ActionProperty.init(_:)();
  v16 = type metadata accessor for ActionProperty();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v5, 0, 1, v16);
  v17 = type metadata accessor for InteractionType();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v2, 1, 1, v17);
  StandardActionHandler.perform(_:interactionType:)();
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v2, &demangling cache variable for type metadata for InteractionType?);
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v5, &demangling cache variable for type metadata for ActionProperty?);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v8, v9);
}

uint64_t protocol witness for View.body.getter in conformance YesNoConfirmationView(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  MEMORY[0x24BDAC7A8](a1);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v1, (uint64_t)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for YesNoConfirmationView);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  outlined init with take of SingleResultCallHistoryModel((uint64_t)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v5 + v4, (uint64_t (*)(_QWORD))type metadata accessor for YesNoConfirmationView);
  v6 = type metadata accessor for BinaryButtonView();
  v7 = lazy protocol witness table accessor for type BinaryButtonView and conformance BinaryButtonView();
  return MEMORY[0x24950072C](partial apply for closure #1 in YesNoConfirmationView.body.getter, v5, v6, v7);
}

uint64_t sub_243AF4898()
{
  return ActionHandler.wrappedValue.getter();
}

uint64_t *initializeBufferWithCopyOfBuffer for YesNoConfirmationView(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for ActionHandler();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    v13 = (int *)type metadata accessor for YesNoConfirmationModel();
    v14 = v13[5];
    v15 = &v9[v14];
    v16 = &v10[v14];
    v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
    v18(v15, v16, v17);
    v12(&v9[v13[6]], &v10[v13[6]], v11);
    v18(&v9[v13[7]], &v10[v13[7]], v17);
    v19 = v13[8];
    v20 = &v9[v19];
    v21 = &v10[v19];
    v22 = *((_QWORD *)v21 + 1);
    *(_QWORD *)v20 = *(_QWORD *)v21;
    *((_QWORD *)v20 + 1) = v22;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for YesNoConfirmationView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  int *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);

  v4 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  v8 = (int *)type metadata accessor for YesNoConfirmationModel();
  v9 = v5 + v8[5];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
  v11(v9, v10);
  v7(v5 + v8[6], v6);
  v11(v5 + v8[7], v10);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for YesNoConfirmationView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;

  v6 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  v12 = (int *)type metadata accessor for YesNoConfirmationModel();
  v13 = v12[5];
  v14 = v8 + v13;
  v15 = v9 + v13;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
  v17(v14, v15, v16);
  v11(v8 + v12[6], v9 + v12[6], v10);
  v17(v8 + v12[7], v9 + v12[7], v16);
  v18 = v12[8];
  v19 = (_QWORD *)(v8 + v18);
  v20 = (_QWORD *)(v9 + v18);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for YesNoConfirmationView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;

  v6 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  v12 = (int *)type metadata accessor for YesNoConfirmationModel();
  v13 = v12[5];
  v14 = v8 + v13;
  v15 = v9 + v13;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 24);
  v17(v14, v15, v16);
  v11(v8 + v12[6], v9 + v12[6], v10);
  v17(v8 + v12[7], v9 + v12[7], v16);
  v18 = v12[8];
  v19 = (_QWORD *)(v8 + v18);
  v20 = (_QWORD *)(v9 + v18);
  *v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for YesNoConfirmationView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v12 = (int *)type metadata accessor for YesNoConfirmationModel();
  v13 = v12[5];
  v14 = v8 + v13;
  v15 = v9 + v13;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32);
  v17(v14, v15, v16);
  v11(v8 + v12[6], v9 + v12[6], v10);
  v17(v8 + v12[7], v9 + v12[7], v16);
  *(_OWORD *)(v8 + v12[8]) = *(_OWORD *)(v9 + v12[8]);
  return a1;
}

uint64_t assignWithTake for YesNoConfirmationView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;

  v6 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v12 = (int *)type metadata accessor for YesNoConfirmationModel();
  v13 = v12[5];
  v14 = v8 + v13;
  v15 = v9 + v13;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 40);
  v17(v14, v15, v16);
  v11(v8 + v12[6], v9 + v12[6], v10);
  v17(v8 + v12[7], v9 + v12[7], v16);
  v18 = v12[8];
  v19 = (_QWORD *)(v8 + v18);
  v20 = (uint64_t *)(v9 + v18);
  v22 = *v20;
  v21 = v20[1];
  *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for YesNoConfirmationView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_243AF4F70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for ActionHandler();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = type metadata accessor for YesNoConfirmationModel();
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for YesNoConfirmationView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_243AF4FF0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for ActionHandler();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = type metadata accessor for YesNoConfirmationModel();
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata completion function for YesNoConfirmationView()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for ActionHandler();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for YesNoConfirmationModel();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_243AF50F0()
{
  return lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type ComponentStack<BinaryButtonView> and conformance ComponentStack<A>, &demangling cache variable for type metadata for ComponentStack<BinaryButtonView>, MEMORY[0x24BEADBF8]);
}

uint64_t partial apply for closure #1 in YesNoConfirmationView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for YesNoConfirmationView() - 8) + 80);
  return closure #1 in YesNoConfirmationView.body.getter(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t partial apply for closure #1 in YesNoConfirmationView.noButton.getter()
{
  return partial apply for closure #1 in YesNoConfirmationView.noButton.getter((uint64_t (*)(uint64_t))closure #1 in YesNoConfirmationView.noButton.getter);
}

uint64_t objectdestroyTm_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  int *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);

  v1 = type metadata accessor for YesNoConfirmationView();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v3 + *(int *)(v1 + 20);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  v8 = (int *)type metadata accessor for YesNoConfirmationModel();
  v9 = v5 + v8[5];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
  v11(v9, v10);
  v7(v5 + v8[6], v6);
  v11(v5 + v8[7], v10);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in YesNoConfirmationView.yesButton.getter()
{
  return partial apply for closure #1 in YesNoConfirmationView.noButton.getter((uint64_t (*)(uint64_t))closure #1 in YesNoConfirmationView.yesButton.getter);
}

uint64_t partial apply for closure #1 in YesNoConfirmationView.noButton.getter(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for YesNoConfirmationView() - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

uint64_t StackedButtonsView.model.getter()
{
  type metadata accessor for StackedButtonsView();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for StackedButtonsView()
{
  uint64_t result;

  result = type metadata singleton initialization cache for StackedButtonsView;
  if (!type metadata singleton initialization cache for StackedButtonsView)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t StackedButtonsView.init(model:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t result;
  uint64_t v7;

  ActionHandler.init()();
  result = type metadata accessor for StackedButtonsView();
  v7 = a3 + *(int *)(result + 20);
  *(_QWORD *)v7 = a1;
  *(_BYTE *)(v7 + 8) = a2;
  return result;
}

uint64_t StackedButtonsView.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;

  v1 = type metadata accessor for StackedButtonsView();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  MEMORY[0x24BDAC7A8](v1);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v0, (uint64_t)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for StackedButtonsView);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  outlined init with take of SingleResultCallHistoryModel((uint64_t)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v5 + v4, (uint64_t (*)(_QWORD))type metadata accessor for StackedButtonsView);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ForEach<[ButtonConfigurationModel], UUID, Button<Text>>);
  v7 = lazy protocol witness table accessor for type ForEach<[ButtonConfigurationModel], UUID, Button<Text>> and conformance <> ForEach<A, B, C>();
  return MEMORY[0x24950072C](partial apply for closure #1 in StackedButtonsView.body.getter, v5, v6, v7);
}

uint64_t closure #1 in StackedButtonsView.body.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD v8[2];

  v2 = type metadata accessor for StackedButtonsView();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v8[1] = *(_QWORD *)(a1 + *(int *)(MEMORY[0x24BDAC7A8](v2) + 20));
  outlined init with copy of SearchCallHistoryBinaryButtonModel(a1, (uint64_t)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for StackedButtonsView);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  outlined init with take of SingleResultCallHistoryModel((uint64_t)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v6 + v5, (uint64_t (*)(_QWORD))type metadata accessor for StackedButtonsView);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [ButtonConfigurationModel]);
  type metadata accessor for UUID();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<Text>);
  lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type [ButtonConfigurationModel] and conformance [A], &demangling cache variable for type metadata for [ButtonConfigurationModel], MEMORY[0x24BEE12D8]);
  lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>((unint64_t *)&lazy protocol witness table cache variable for type Button<Text> and conformance Button<A>, &demangling cache variable for type metadata for Button<Text>, MEMORY[0x24BDF43B8]);
  lazy protocol witness table accessor for type ButtonConfigurationModel and conformance ButtonConfigurationModel();
  return ForEach<>.init(_:content:)();
}

unint64_t lazy protocol witness table accessor for type ForEach<[ButtonConfigurationModel], UUID, Button<Text>> and conformance <> ForEach<A, B, C>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = lazy protocol witness table cache variable for type ForEach<[ButtonConfigurationModel], UUID, Button<Text>> and conformance <> ForEach<A, B, C>;
  if (!lazy protocol witness table cache variable for type ForEach<[ButtonConfigurationModel], UUID, Button<Text>> and conformance <> ForEach<A, B, C>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ForEach<[ButtonConfigurationModel], UUID, Button<Text>>);
    v2 = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>((unint64_t *)&lazy protocol witness table cache variable for type Button<Text> and conformance Button<A>, &demangling cache variable for type metadata for Button<Text>, MEMORY[0x24BDF43B8]);
    result = MEMORY[0x249501140](MEMORY[0x24BDF4A00], v1, &v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ForEach<[ButtonConfigurationModel], UUID, Button<Text>> and conformance <> ForEach<A, B, C>);
  }
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in StackedButtonsView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t closure #1 in closure #1 in StackedButtonsView.body.getter@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD v16[4];

  v16[1] = a3;
  v5 = type metadata accessor for StackedButtonsView();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v8 = type metadata accessor for ButtonConfigurationModel();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  v11 = a1[1];
  v16[2] = *a1;
  v16[3] = v11;
  outlined init with copy of SearchCallHistoryBinaryButtonModel((uint64_t)a1, (uint64_t)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for ButtonConfigurationModel);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(a2, (uint64_t)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for StackedButtonsView);
  v12 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v13 = (v10 + *(unsigned __int8 *)(v6 + 80) + v12) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v14 = swift_allocObject();
  outlined init with take of SingleResultCallHistoryModel((uint64_t)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v12, (uint64_t (*)(_QWORD))type metadata accessor for ButtonConfigurationModel);
  outlined init with take of SingleResultCallHistoryModel((uint64_t)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13, (uint64_t (*)(_QWORD))type metadata accessor for StackedButtonsView);
  lazy protocol witness table accessor for type String and conformance String();
  swift_bridgeObjectRetain();
  return Button<>.init<A>(_:action:)();
}

uint64_t closure #1 in closure #1 in closure #1 in StackedButtonsView.body.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint8_t *v27;
  int v28;
  NSObject *v29;
  os_log_type_t v30;
  _BOOL4 v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *boxed_opaque_existential_1;
  unsigned int *v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for InteractionType?);
  MEMORY[0x24BDAC7A8](v4);
  v57 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionProperty?);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  MEMORY[0x24BDAC7A8](v9);
  v62 = (uint64_t)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ActionProperty();
  v61 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = type metadata accessor for ButtonConfigurationModel();
  MEMORY[0x24BDAC7A8](v59);
  v15 = (uint64_t *)((char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (one-time initialization token for phoneSnippetUI != -1)
    swift_once();
  v16 = type metadata accessor for Logger();
  v17 = __swift_project_value_buffer(v16, (uint64_t)static Logger.phoneSnippetUI);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(a1, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for ButtonConfigurationModel);
  v58 = v17;
  v18 = Logger.logObject.getter();
  v19 = static os_log_type_t.debug.getter();
  v20 = os_log_type_enabled(v18, v19);
  v60 = v13;
  if (v20)
  {
    v21 = swift_slowAlloc();
    v54 = a1;
    v22 = (uint8_t *)v21;
    v23 = swift_slowAlloc();
    v55 = a2;
    v24 = v23;
    v64 = v23;
    *(_DWORD *)v22 = 136315138;
    v56 = v11;
    v25 = *v15;
    v26 = v15[1];
    swift_bridgeObjectRetain();
    v63 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v25, v26, &v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v11 = v56;
    swift_bridgeObjectRelease();
    outlined destroy of ButtonConfigurationModel((uint64_t)v15);
    _os_log_impl(&dword_243ABD000, v18, v19, "#StackedButtonsView Tapped button %s", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2495011B8](v24, -1, -1);
    v27 = v22;
    a1 = v54;
    MEMORY[0x2495011B8](v27, -1, -1);
  }
  else
  {
    outlined destroy of ButtonConfigurationModel((uint64_t)v15);
  }

  v28 = *(unsigned __int8 *)(a1 + *(int *)(v59 + 32));
  v29 = Logger.logObject.getter();
  v30 = static os_log_type_t.debug.getter();
  v31 = os_log_type_enabled(v29, v30);
  if (v28 == 1)
  {
    if (v31)
    {
      v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v32 = 0;
      _os_log_impl(&dword_243ABD000, v29, v30, "#StackedButtonsView running direct invocation", v32, 2u);
      MEMORY[0x2495011B8](v32, -1, -1);
    }

    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionElementConvertible>);
    v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_243B32430;
    v34 = type metadata accessor for Command();
    v35 = MEMORY[0x24BEAD1E8];
    *(_QWORD *)(v33 + 56) = v34;
    *(_QWORD *)(v33 + 64) = v35;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v33 + 32));
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    *boxed_opaque_existential_1 = CodableAceObject.wrappedValue.getter();
    *((_BYTE *)boxed_opaque_existential_1 + 8) = 0;
    v37 = (unsigned int *)MEMORY[0x24BEAD1C8];
  }
  else
  {
    if (v31)
    {
      v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v38 = 0;
      _os_log_impl(&dword_243ABD000, v29, v30, "#StackedButtonsView running ace command", v38, 2u);
      MEMORY[0x2495011B8](v38, -1, -1);
    }

    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionElementConvertible>);
    v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = xmmword_243B32430;
    v34 = type metadata accessor for Command();
    v40 = MEMORY[0x24BEAD1E8];
    *(_QWORD *)(v39 + 56) = v34;
    *(_QWORD *)(v39 + 64) = v40;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v39 + 32));
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
    *boxed_opaque_existential_1 = CodableAceObject.wrappedValue.getter();
    *((_BYTE *)boxed_opaque_existential_1 + 8) = 0;
    v37 = (unsigned int *)MEMORY[0x24BEAD188];
  }
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v34 - 8) + 104))(boxed_opaque_existential_1, *v37, v34);
  v41 = v60;
  ActionProperty.init(_:)();
  v42 = v62;
  ActionHandler.wrappedValue.getter();
  v43 = type metadata accessor for StandardActionHandler();
  v44 = *(_QWORD *)(v43 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43) == 1)
  {
    (*(void (**)(char *, uint64_t))(v61 + 8))(v41, v11);
    return outlined destroy of SearchCallHistoryBinaryButtonModel?(v62, &demangling cache variable for type metadata for StandardActionHandler?);
  }
  else
  {
    v46 = v61;
    (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v8, v41, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v8, 0, 1, v11);
    v47 = v41;
    v48 = *MEMORY[0x24BEADC68];
    v49 = type metadata accessor for InteractionType();
    v50 = *(_QWORD *)(v49 - 8);
    v51 = (uint64_t)v57;
    (*(void (**)(char *, uint64_t, uint64_t))(v50 + 104))(v57, v48, v49);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v50 + 56))(v51, 0, 1, v49);
    v52 = v62;
    StandardActionHandler.perform(_:interactionType:)();
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v51, &demangling cache variable for type metadata for InteractionType?);
    outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v8, &demangling cache variable for type metadata for ActionProperty?);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v11);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 8))(v52, v43);
  }
}

uint64_t protocol witness for View.body.getter in conformance StackedButtonsView(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  MEMORY[0x24BDAC7A8](a1);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v1, (uint64_t)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for StackedButtonsView);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  outlined init with take of SingleResultCallHistoryModel((uint64_t)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v5 + v4, (uint64_t (*)(_QWORD))type metadata accessor for StackedButtonsView);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ForEach<[ButtonConfigurationModel], UUID, Button<Text>>);
  v7 = lazy protocol witness table accessor for type ForEach<[ButtonConfigurationModel], UUID, Button<Text>> and conformance <> ForEach<A, B, C>();
  return MEMORY[0x24950072C](partial apply for closure #1 in StackedButtonsView.body.getter, v5, v6, v7);
}

uint64_t *initializeBufferWithCopyOfBuffer for StackedButtonsView(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for ActionHandler();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    *(_QWORD *)v9 = *(_QWORD *)v10;
    v9[8] = v10[8];
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for StackedButtonsView(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StackedButtonsView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StackedButtonsView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)(a1 + v7) = *(_QWORD *)v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
  return a1;
}

uint64_t initializeWithTake for StackedButtonsView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
  return a1;
}

uint64_t assignWithTake for StackedButtonsView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)(a1 + v7) = *(_QWORD *)v9;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for StackedButtonsView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_243AF61A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for ActionHandler();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for StackedButtonsView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_243AF622C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for ActionHandler();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t type metadata completion function for StackedButtonsView()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ActionHandler();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_243AF6314()
{
  return lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type ComponentStack<ForEach<[ButtonConfigurationModel], UUID, Button<Text>>> and conformance ComponentStack<A>, &demangling cache variable for type metadata for ComponentStack<ForEach<[ButtonConfigurationModel], UUID, Button<Text>>>, MEMORY[0x24BEADBF8]);
}

uint64_t partial apply for closure #1 in StackedButtonsView.body.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for StackedButtonsView() - 8) + 80);
  return closure #1 in StackedButtonsView.body.getter(v0 + ((v1 + 16) & ~v1));
}

uint64_t objectdestroyTm_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for StackedButtonsView() - 8) + 80);
  v2 = v0 + ((v1 + 16) & ~v1);
  v3 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in StackedButtonsView.body.getter@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for StackedButtonsView() - 8) + 80);
  return closure #1 in closure #1 in StackedButtonsView.body.getter(a1, v2 + ((v5 + 16) & ~v5), a2);
}

unint64_t lazy protocol witness table accessor for type ButtonConfigurationModel and conformance ButtonConfigurationModel()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type ButtonConfigurationModel and conformance ButtonConfigurationModel;
  if (!lazy protocol witness table cache variable for type ButtonConfigurationModel and conformance ButtonConfigurationModel)
  {
    v1 = type metadata accessor for ButtonConfigurationModel();
    result = MEMORY[0x249501140](&protocol conformance descriptor for ButtonConfigurationModel, v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ButtonConfigurationModel and conformance ButtonConfigurationModel);
  }
  return result;
}

uint64_t sub_243AF64A0()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = (int *)type metadata accessor for ButtonConfigurationModel();
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for StackedButtonsView() - 8) + 80);
  v6 = (v3 + v4 + v5) & ~v5;
  v7 = v0 + v3;
  swift_bridgeObjectRelease();
  v8 = v0 + v3 + v1[5];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = v7 + v1[6];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v12 = v7 + v1[7];
  v13 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  v14 = type metadata accessor for ActionHandler();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v0 + v6, v14);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in StackedButtonsView.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for ButtonConfigurationModel() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for StackedButtonsView() - 8) + 80);
  return closure #1 in closure #1 in closure #1 in StackedButtonsView.body.getter(v0 + v2, v0 + ((v2 + v3 + v4) & ~v4));
}

uint64_t ShowPlayVoicemailListView.model.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ShowPlayVoicemailListView();
  return outlined init with copy of SearchCallHistoryBinaryButtonModel(v1 + *(int *)(v3 + 24), a1, (uint64_t (*)(_QWORD))type metadata accessor for PlayVoicemailModel);
}

uint64_t type metadata accessor for ShowPlayVoicemailListView()
{
  uint64_t result;

  result = type metadata singleton initialization cache for ShowPlayVoicemailListView;
  if (!type metadata singleton initialization cache for ShowPlayVoicemailListView)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t ShowPlayVoicemailListView.init(model:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  type metadata accessor for Context();
  lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
  *a2 = EnvironmentObject.init()();
  a2[1] = v4;
  v5 = type metadata accessor for ShowPlayVoicemailListView();
  ActionHandler.init()();
  return outlined init with take of SingleResultCallHistoryModel(a1, (uint64_t)a2 + *(int *)(v5 + 24), (uint64_t (*)(_QWORD))type metadata accessor for PlayVoicemailModel);
}

uint64_t ShowPlayVoicemailListView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(void);
  uint64_t v25;
  uint64_t v26;

  v2 = v1;
  v26 = a1;
  v3 = type metadata accessor for RoundedCornerStyle();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UnevenRoundedRectangle();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>, ListBottomView)>>);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>, ListBottomView)>>, _BackgroundStyleModifier<BackgroundStyle>>);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v12 = static HorizontalAlignment.center.getter();
  *((_QWORD *)v12 + 1) = 0;
  v12[16] = 1;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>, ListBottomView)>>);
  closure #1 in ShowPlayVoicemailListView.body.getter(v2, (uint64_t)&v12[*(int *)(v16 + 44)]);
  LOBYTE(v2) = static Edge.Set.all.getter();
  outlined init with copy of SearchCallHistoryBinaryButtonModel?((uint64_t)v12, (uint64_t)v15, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>, ListBottomView)>>);
  v15[*(int *)(v13 + 36)] = v2;
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v12, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>, ListBottomView)>>);
  if (one-time initialization token for bottomCornerRadius != -1)
    swift_once();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BDEEB60], v3);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(&v9[*(int *)(v7 + 20)], v6, v3);
  RectangleCornerRadii.init(topLeft:topRight:bottomRight:bottomLeft:)();
  *(_QWORD *)v9 = v17;
  *((_QWORD *)v9 + 1) = v18;
  *((_QWORD *)v9 + 2) = v19;
  *((_QWORD *)v9 + 3) = v20;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>, ListBottomView)>>, _BackgroundStyleModifier<BackgroundStyle>>, _ContainerShapeModifier<UnevenRoundedRectangle>>);
  v22 = v26;
  v23 = MEMORY[0x24BDEFEC0];
  outlined init with copy of SearchCallHistoryBinaryButtonModel((uint64_t)v9, v26 + *(int *)(v21 + 36), (uint64_t (*)(_QWORD))MEMORY[0x24BDEFEC0]);
  outlined init with copy of SearchCallHistoryBinaryButtonModel?((uint64_t)v15, v22, &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>, ListBottomView)>>, _BackgroundStyleModifier<BackgroundStyle>>);
  outlined destroy of SingleResultCallHistoryModel((uint64_t)v9, (uint64_t (*)(_QWORD))v23);
  return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v15, &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>, ListBottomView)>>, _BackgroundStyleModifier<BackgroundStyle>>);
}

uint64_t closure #1 in ShowPlayVoicemailListView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34[2];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v34[1] = a1;
  v38 = a2;
  v36 = type metadata accessor for ListBottomView();
  v3 = MEMORY[0x24BDAC7A8](v36);
  v37 = (uint64_t)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (uint64_t *)((char *)v34 - v5);
  v35 = type metadata accessor for ShowPlayVoicemailListView();
  v7 = *(_QWORD *)(v35 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v35);
  v9 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v34[0] = (uint64_t)v34 - v18;
  outlined init with copy of SearchCallHistoryBinaryButtonModel(a1, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ShowPlayVoicemailListView);
  v19 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v20 = swift_allocObject();
  outlined init with take of SingleResultCallHistoryModel((uint64_t)v9, v20 + v19, (uint64_t (*)(_QWORD))type metadata accessor for ShowPlayVoicemailListView);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>);
  v22 = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>, MEMORY[0x24BDF5420]);
  MEMORY[0x24950072C](partial apply for closure #1 in closure #1 in ShowPlayVoicemailListView.body.getter, v20, v21, v22);
  LOBYTE(v9) = static Edge.Set.all.getter();
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v17, v13, v10);
  v17[*(int *)(v14 + 36)] = (char)v9;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v23 = v34[0];
  outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout>, _ClipEffect<Capsule>>((uint64_t)v17, v34[0], &demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>);
  type metadata accessor for PlayVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  v24 = v39;
  v25 = v40;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  v26 = CodableAceObject.wrappedValue.getter();
  type metadata accessor for Context();
  lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
  *v6 = EnvironmentObject.init()();
  v6[1] = v27;
  v28 = v36;
  ActionHandler.init()();
  v29 = (uint64_t *)((char *)v6 + *(int *)(v28 + 24));
  *v29 = v24;
  v29[1] = v25;
  *(uint64_t *)((char *)v6 + *(int *)(v28 + 28)) = v26;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v23, (uint64_t)v17, &demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>);
  v30 = v37;
  outlined init with copy of SearchCallHistoryBinaryButtonModel((uint64_t)v6, v37, (uint64_t (*)(_QWORD))type metadata accessor for ListBottomView);
  v31 = v38;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?((uint64_t)v17, v38, &demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>, ListBottomView));
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v30, v31 + *(int *)(v32 + 48), (uint64_t (*)(_QWORD))type metadata accessor for ListBottomView);
  outlined destroy of SingleResultCallHistoryModel((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ListBottomView);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v23, &demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>);
  outlined destroy of SingleResultCallHistoryModel(v30, (uint64_t (*)(_QWORD))type metadata accessor for ListBottomView);
  return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v17, &demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>);
}

uint64_t associated type witness table accessor for View.Body : View in ShowPlayVoicemailListView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t closure #1 in closure #1 in ShowPlayVoicemailListView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  ValueMetadata *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  void (*v41)(uint64_t, char *, uint64_t);
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  void (*v51)(char *, uint64_t);
  _QWORD v53[2];
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  ValueMetadata *v73;
  unint64_t v74;

  v56 = a1;
  v70 = a2;
  v3 = type metadata accessor for ComponentStackBottomSpacing();
  v68 = *(_QWORD *)(v3 - 8);
  v69 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v67 = (char *)v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ShowPlayVoicemailListView();
  v6 = *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64);
  v58 = *(_QWORD *)(v5 - 8);
  v59 = v6;
  MEMORY[0x24BDAC7A8](v5);
  v57 = (uint64_t)v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ForEach<[(offset: Int, element: SingleVoicemailModel)], Int, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>>);
  v66 = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64);
  v60 = (char *)v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0);
  v63 = *(_QWORD *)(v65 - 8);
  v9 = MEMORY[0x24BDAC7A8](v65);
  v61 = (char *)v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v62 = (char *)v53 - v11;
  v12 = type metadata accessor for SeparatorStyle();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.componentSpacing(top:bottom:)>>.0);
  v55 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.separators(_:isOverride:)>>.0);
  v71 = *(_QWORD *)(v19 - 8);
  v72 = v19;
  v20 = MEMORY[0x24BDAC7A8](v19);
  v53[0] = (char *)v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v54 = (char *)v53 - v22;
  v53[1] = a1 + *(int *)(v5 + 24);
  type metadata accessor for PlayVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  v23 = lazy protocol witness table accessor for type ListHeaderView and conformance ListHeaderView();
  View.componentSpacing(top:bottom:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x24BEAB4F0], v12);
  v73 = &type metadata for ListHeaderView;
  v74 = v23;
  swift_getOpaqueTypeConformance2();
  v24 = (char *)v53[0];
  View.separators(_:isOverride:)();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v18, v16);
  v25 = v71;
  v26 = v54;
  (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v54, v24, v72);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
  Loggable.wrappedValue.getter();
  v27 = (ValueMetadata *)specialized _copySequenceToContiguousArray<A>(_:)((uint64_t)v73, &demangling cache variable for type metadata for (offset: Int, element: SingleVoicemailModel), (uint64_t (*)(_QWORD))type metadata accessor for SingleVoicemailModel, &demangling cache variable for type metadata for _ContiguousArrayStorage<(offset: Int, element: SingleVoicemailModel)>);
  swift_bridgeObjectRelease();
  v73 = v27;
  swift_getKeyPath();
  v28 = v57;
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v56, v57, (uint64_t (*)(_QWORD))type metadata accessor for ShowPlayVoicemailListView);
  v29 = (*(unsigned __int8 *)(v58 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
  v30 = swift_allocObject();
  outlined init with take of SingleResultCallHistoryModel(v28, v30 + v29, (uint64_t (*)(_QWORD))type metadata accessor for ShowPlayVoicemailListView);
  v31 = swift_allocObject();
  *(_QWORD *)(v31 + 16) = partial apply for closure #1 in closure #1 in closure #1 in ShowPlayVoicemailListView.body.getter;
  *(_QWORD *)(v31 + 24) = v30;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [(offset: Int, element: SingleVoicemailModel)]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>);
  lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type [(offset: Int, element: SingleVoicemailModel)] and conformance [A], &demangling cache variable for type metadata for [(offset: Int, element: SingleVoicemailModel)], MEMORY[0x24BEE12D8]);
  lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem> and conformance <> ModifiedContent<A, B>();
  v32 = v60;
  ForEach<>.init(_:id:content:)();
  v34 = v67;
  v33 = v68;
  v35 = v69;
  (*(void (**)(char *, _QWORD, uint64_t))(v68 + 104))(v67, *MEMORY[0x24BEAE360], v69);
  lazy protocol witness table accessor for type ForEach<[(offset: Int, element: SingleVoicemailModel)], Int, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>> and conformance <> ForEach<A, B, C>();
  v36 = v61;
  v37 = v64;
  View.lastComponentBottomSpacing(_:)();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v35);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v32, v37);
  v39 = v62;
  v38 = v63;
  v40 = v65;
  (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v62, v36, v65);
  v41 = *(void (**)(uint64_t, char *, uint64_t))(v25 + 16);
  v42 = v72;
  v41((uint64_t)v24, v26, v72);
  v43 = *(void (**)(char *, char *, uint64_t))(v38 + 16);
  v44 = v38;
  v45 = v36;
  v46 = v36;
  v47 = v40;
  v43(v45, v39, v40);
  v48 = v70;
  v41(v70, v24, v42);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0));
  v43((char *)(v48 + *(int *)(v49 + 48)), v46, v47);
  v50 = *(void (**)(char *, uint64_t))(v44 + 8);
  v50(v39, v47);
  v51 = *(void (**)(char *, uint64_t))(v71 + 8);
  v51(v26, v42);
  v50(v46, v47);
  return ((uint64_t (*)(char *, uint64_t))v51)(v24, v42);
}

uint64_t closure #1 in closure #1 in closure #1 in ShowPlayVoicemailListView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, id *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  char v21;
  unsigned int *v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v35 = a1;
  v36 = a4;
  v6 = type metadata accessor for SeparatorStyle();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ShowPlayVoicemailSingleItemView();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (uint64_t *)((char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.separators(_:isOverride:)>>.0);
  v33 = *(_QWORD *)(v13 - 8);
  v34 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>);
  MEMORY[0x24BDAC7A8](v32);
  v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(a2, (uint64_t)v12 + *(int *)(v10 + 24), (uint64_t (*)(_QWORD))type metadata accessor for SingleVoicemailModel);
  v18 = type metadata accessor for Context();
  lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
  v31 = v18;
  *v12 = EnvironmentObject.init()();
  v12[1] = v19;
  ActionHandler.init()();
  if (*a3)
  {
    v20 = *a3;
    dispatch thunk of Context.currentIdiom.getter();
    v21 = VRXIdiom.isCarPlay.getter();
    v22 = (unsigned int *)MEMORY[0x24BEAB508];
    if ((v21 & 1) == 0)
      v22 = (unsigned int *)MEMORY[0x24BEAB4F0];
    (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *v22, v6);

    lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type ShowPlayVoicemailSingleItemView and conformance ShowPlayVoicemailSingleItemView, (uint64_t (*)(uint64_t))type metadata accessor for ShowPlayVoicemailSingleItemView, (uint64_t)&protocol conformance descriptor for ShowPlayVoicemailSingleItemView);
    View.separators(_:isOverride:)();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    outlined destroy of SingleResultCallHistoryModel((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ShowPlayVoicemailSingleItemView);
    v23 = v35 == 0;
    v24 = EnvironmentObject.init()();
    v26 = v25;
    v28 = v33;
    v27 = v34;
    (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v17, v15, v34);
    v29 = &v17[*(int *)(v32 + 36)];
    *(_QWORD *)v29 = v24;
    *((_QWORD *)v29 + 1) = v26;
    v29[16] = v23;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v15, v27);
    return outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout>, _ClipEffect<Capsule>>((uint64_t)v17, v36, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>);
  }
  else
  {
    result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for ShowPlayVoicemailListView(char *a1, char **a2, uint64_t a3)
{
  int v3;
  char *v4;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v7 = a1;
    *((_QWORD *)a1 + 1) = a2[1];
    v8 = *(int *)(a3 + 20);
    v9 = &a1[v8];
    v10 = (uint64_t)a2 + v8;
    v11 = type metadata accessor for ActionHandler();
    v12 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v13 = v4;
    v12(v9, v10, v11);
    v14 = *(int *)(a3 + 24);
    v15 = &v7[v14];
    v16 = (uint64_t)a2 + v14;
    v17 = *(uint64_t *)((char *)a2 + v14);
    v18 = *(_QWORD *)(v16 + 8);
    *(_QWORD *)v15 = v17;
    *((_QWORD *)v15 + 1) = v18;
    v19 = (int *)type metadata accessor for PlayVoicemailModel();
    v20 = v19[5];
    v21 = &v15[v20];
    v22 = v16 + v20;
    swift_bridgeObjectRetain();
    v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = v19[6];
    v25 = &v15[v24];
    v26 = v16 + v24;
    v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    v28 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
    v28(v25, v26, v27);
    v28(&v15[v19[7]], v16 + v19[7], v27);
    v29 = v19[8];
    v30 = &v15[v29];
    v31 = v16 + v29;
    v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
  }
  return v7;
}

uint64_t destroy for ShowPlayVoicemailListView(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  char *v6;
  int *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t);
  char *v13;
  uint64_t v14;

  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = (char *)a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  v7 = (int *)type metadata accessor for PlayVoicemailModel();
  v8 = &v6[v7[5]];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = &v6[v7[6]];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v12 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8);
  v12(v10, v11);
  v12(&v6[v7[7]], v11);
  v13 = &v6[v7[8]];
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
}

_QWORD *initializeWithCopy for ShowPlayVoicemailListView(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  id v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;

  v7 = *(void **)a2;
  v6 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v6;
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for ActionHandler();
  v12 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  v13 = v7;
  v12(v9, v10, v11);
  v14 = *(int *)(a3 + 24);
  v15 = (char *)a1 + v14;
  v16 = a2 + v14;
  v17 = *(_QWORD *)(a2 + v14 + 8);
  *(_QWORD *)v15 = *(_QWORD *)(a2 + v14);
  *((_QWORD *)v15 + 1) = v17;
  v18 = (int *)type metadata accessor for PlayVoicemailModel();
  v19 = v18[5];
  v20 = &v15[v19];
  v21 = v16 + v19;
  swift_bridgeObjectRetain();
  v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = v18[6];
  v24 = &v15[v23];
  v25 = v16 + v23;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v27 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
  v27(v24, v25, v26);
  v27(&v15[v18[7]], v16 + v18[7], v26);
  v28 = v18[8];
  v29 = &v15[v28];
  v30 = v16 + v28;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
  return a1;
}

uint64_t assignWithCopy for ShowPlayVoicemailListView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;

  v6 = *(void **)a1;
  v7 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v7;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v9 = *(int *)(a3 + 20);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v13 = *(int *)(a3 + 24);
  v14 = (char *)(a1 + v13);
  v15 = a2 + v13;
  *(_QWORD *)v14 = *(_QWORD *)(a2 + v13);
  *((_QWORD *)v14 + 1) = *(_QWORD *)(a2 + v13 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = (int *)type metadata accessor for PlayVoicemailModel();
  v17 = v16[5];
  v18 = &v14[v17];
  v19 = v15 + v17;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 24))(v18, v19, v20);
  v21 = v16[6];
  v22 = &v14[v21];
  v23 = v15 + v21;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v25 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 24);
  v25(v22, v23, v24);
  v25(&v14[v16[7]], v15 + v16[7], v24);
  v26 = v16[8];
  v27 = &v14[v26];
  v28 = v15 + v26;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 24))(v27, v28, v29);
  return a1;
}

_OWORD *initializeWithTake for ShowPlayVoicemailListView(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  v13 = (int *)type metadata accessor for PlayVoicemailModel();
  v14 = v13[5];
  v15 = &v11[v14];
  v16 = &v12[v14];
  v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  v18 = v13[6];
  v19 = &v11[v18];
  v20 = &v12[v18];
  v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32);
  v22(v19, v20, v21);
  v22(&v11[v13[7]], &v12[v13[7]], v21);
  v23 = v13[8];
  v24 = &v11[v23];
  v25 = &v12[v23];
  v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  return a1;
}

uint64_t assignWithTake for ShowPlayVoicemailListView(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  *(_QWORD *)(a1 + 8) = a2[1];
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = (char *)(a1 + v11);
  v13 = (char *)a2 + v11;
  v14 = *(_QWORD *)((char *)a2 + v11 + 8);
  *(_QWORD *)v12 = *(_QWORD *)((char *)a2 + v11);
  *((_QWORD *)v12 + 1) = v14;
  swift_bridgeObjectRelease();
  v15 = (int *)type metadata accessor for PlayVoicemailModel();
  v16 = v15[5];
  v17 = &v12[v16];
  v18 = &v13[v16];
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, v18, v19);
  v20 = v15[6];
  v21 = &v12[v20];
  v22 = &v13[v20];
  v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 40);
  v24(v21, v22, v23);
  v24(&v12[v15[7]], &v13[v15[7]], v23);
  v25 = v15[8];
  v26 = &v12[v25];
  v27 = &v13[v25];
  v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 40))(v26, v27, v28);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShowPlayVoicemailListView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_243AF7DE8(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = type metadata accessor for ActionHandler();
    v10 = *(_QWORD *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v9;
      v12 = *(int *)(a3 + 20);
    }
    else
    {
      v11 = type metadata accessor for PlayVoicemailModel();
      v10 = *(_QWORD *)(v11 - 8);
      v12 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(&a1[v12], a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for ShowPlayVoicemailListView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_243AF7EA0(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)result = a2;
  }
  else
  {
    v8 = type metadata accessor for ActionHandler();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = type metadata accessor for PlayVoicemailModel();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

uint64_t type metadata completion function for ShowPlayVoicemailListView()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for ActionHandler();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for PlayVoicemailModel();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>, ListBottomView)>>, _BackgroundStyleModifier<BackgroundStyle>>, _ContainerShapeModifier<UnevenRoundedRectangle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>, ListBottomView)>>, _BackgroundStyleModifier<BackgroundStyle>>, _ContainerShapeModifier<UnevenRoundedRectangle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>, ListBottomView)>>, _BackgroundStyleModifier<BackgroundStyle>>, _ContainerShapeModifier<UnevenRoundedRectangle>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>, ListBottomView)>>, _BackgroundStyleModifier<BackgroundStyle>>, _ContainerShapeModifier<UnevenRoundedRectangle>>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<VStack<TupleView<(ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>, ListBottomView)>>, _BackgroundStyleModifier<BackgroundStyle>> and conformance <> ModifiedContent<A, B>();
    v2[1] = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type _ContainerShapeModifier<UnevenRoundedRectangle> and conformance _ContainerShapeModifier<A>, &demangling cache variable for type metadata for _ContainerShapeModifier<UnevenRoundedRectangle>, MEMORY[0x24BDF03D0]);
    result = MEMORY[0x249501140](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>, ListBottomView)>>, _BackgroundStyleModifier<BackgroundStyle>>, _ContainerShapeModifier<UnevenRoundedRectangle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<VStack<TupleView<(ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>, ListBottomView)>>, _BackgroundStyleModifier<BackgroundStyle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>, ListBottomView)>>, _BackgroundStyleModifier<BackgroundStyle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>, ListBottomView)>>, _BackgroundStyleModifier<BackgroundStyle>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>, ListBottomView)>>, _BackgroundStyleModifier<BackgroundStyle>>);
    v2[0] = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type VStack<TupleView<(ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>, ListBottomView)>> and conformance VStack<A>, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>, ListBottomView)>>, MEMORY[0x24BDF46F8]);
    v2[1] = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type _BackgroundStyleModifier<BackgroundStyle> and conformance _BackgroundStyleModifier<A>, &demangling cache variable for type metadata for _BackgroundStyleModifier<BackgroundStyle>, MEMORY[0x24BDF06D8]);
    result = MEMORY[0x249501140](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>, ListBottomView)>>, _BackgroundStyleModifier<BackgroundStyle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t partial apply for closure #1 in closure #1 in ShowPlayVoicemailListView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ShowPlayVoicemailListView() - 8) + 80);
  return closure #1 in closure #1 in ShowPlayVoicemailListView.body.getter(v1 + ((v3 + 16) & ~v3), a1);
}

size_t specialized _copySequenceToContiguousArray<A>(_:)(uint64_t a1)
{
  return specialized _copySequenceToContiguousArray<A>(_:)(a1, &demangling cache variable for type metadata for (offset: Int, element: SingleCallRecordModel), (uint64_t (*)(_QWORD))type metadata accessor for SingleCallRecordModel, &demangling cache variable for type metadata for _ContiguousArrayStorage<(offset: Int, element: SingleCallRecordModel)>);
}

size_t specialized _copySequenceToContiguousArray<A>(_:)(uint64_t a1, uint64_t *a2, uint64_t (*a3)(_QWORD), uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t (*v22)(_QWORD);
  uint64_t *v23;
  BOOL v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  size_t result;
  unint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(_QWORD);
  uint64_t v50;
  uint64_t *v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;

  v51 = a4;
  v52 = a2;
  v58 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v6 = MEMORY[0x24BDAC7A8](v58);
  v57 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v56 = (uint64_t *)((char *)&v48 - v9);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v48 - v10;
  v59 = v12;
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  v15 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v55 = v14;
  v48 = a1;
  if (v14)
  {
    v53 = (v13 + 32) & ~v13;
    v16 = MEMORY[0x24BEE4AF8] + v53;
    v17 = 0;
    v18 = 0;
    v19 = *(_QWORD *)(a3(0) - 8);
    v20 = a1 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
    v54 = *(_QWORD *)(v19 + 72);
    v49 = a3;
    v50 = v13 | 7;
    v21 = v15;
    v22 = a3;
    v23 = v52;
    while (1)
    {
      v25 = v11;
      v26 = v58;
      v27 = (uint64_t)&v57[*(int *)(v58 + 48)];
      outlined init with copy of SearchCallHistoryBinaryButtonModel(v20, v27, v22);
      v28 = *(int *)(v26 + 48);
      v11 = v25;
      v29 = (uint64_t)v56;
      v30 = (uint64_t)v56 + v28;
      *v56 = v17;
      outlined init with take of SingleResultCallHistoryModel(v27, v30, v22);
      result = outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout>, _ClipEffect<Capsule>>(v29, (uint64_t)v11, v23);
      if (v18)
      {
        v15 = v21;
        v24 = __OFSUB__(v18--, 1);
        if (v24)
          goto LABEL_27;
      }
      else
      {
        v32 = v21[3];
        if ((uint64_t)((v32 >> 1) + 0x4000000000000000) < 0)
        {
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
          return result;
        }
        v33 = v32 & 0xFFFFFFFFFFFFFFFELL;
        if (v33 <= 1)
          v34 = 1;
        else
          v34 = v33;
        __swift_instantiateConcreteTypeFromMangledName(v51);
        v35 = *(_QWORD *)(v59 + 72);
        v36 = v53;
        v15 = (_QWORD *)swift_allocObject();
        result = _swift_stdlib_malloc_size(v15);
        if (!v35)
          goto LABEL_34;
        v37 = result - v36;
        if (result - v36 == 0x8000000000000000 && v35 == -1)
          goto LABEL_35;
        v39 = v37 / v35;
        v15[2] = v34;
        v15[3] = 2 * (v37 / v35);
        v40 = (char *)v15 + v36;
        v41 = v21[3] >> 1;
        v42 = v41 * v35;
        if (v21[2])
        {
          if (v15 < v21 || v40 >= (char *)v21 + v53 + v42)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v15 != v21)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v21[2] = 0;
        }
        v16 = (uint64_t)&v40[v42];
        v44 = (v39 & 0x7FFFFFFFFFFFFFFFLL) - v41;
        swift_release();
        v22 = v49;
        v23 = v52;
        v24 = __OFSUB__(v44, 1);
        v18 = v44 - 1;
        if (v24)
        {
LABEL_27:
          __break(1u);
          break;
        }
      }
      ++v17;
      outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout>, _ClipEffect<Capsule>>((uint64_t)v11, v16, v23);
      v16 += *(_QWORD *)(v59 + 72);
      v20 += v54;
      v21 = v15;
      if (v55 == v17)
        goto LABEL_29;
    }
  }
  v18 = 0;
LABEL_29:
  result = swift_bridgeObjectRelease();
  v45 = v15[3];
  if (v45 >= 2)
  {
    v46 = v45 >> 1;
    v24 = __OFSUB__(v46, v18);
    v47 = v46 - v18;
    if (v24)
      goto LABEL_36;
    v15[2] = v47;
  }
  return (size_t)v15;
}

uint64_t objectdestroyTm_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  int *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t);
  char *v13;
  uint64_t v14;

  v1 = type metadata accessor for ShowPlayVoicemailListView();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (id *)(v0 + ((v2 + 16) & ~v2));

  v4 = (char *)v3 + *(int *)(v1 + 20);
  v5 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = (char *)v3 + *(int *)(v1 + 24);
  swift_bridgeObjectRelease();
  v7 = (int *)type metadata accessor for PlayVoicemailModel();
  v8 = &v6[v7[5]];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = &v6[v7[6]];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v12 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8);
  v12(v10, v11);
  v12(&v6[v7[7]], v11);
  v13 = &v6[v7[8]];
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in ShowPlayVoicemailListView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ShowPlayVoicemailListView() - 8) + 80);
  return closure #1 in closure #1 in closure #1 in ShowPlayVoicemailListView.body.getter(a1, a2, (id *)(v3 + ((v7 + 16) & ~v7)), a3);
}

uint64_t sub_243AF85E0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@unowned Int, @in_guaranteed SingleVoicemailModel) -> (@out ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>)(char *a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, char *);
  uint64_t v4;
  uint64_t v5;

  v3 = *(uint64_t (**)(uint64_t, char *))(v1 + 16);
  v4 = *(_QWORD *)a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: SingleVoicemailModel));
  return v3(v4, &a1[*(int *)(v5 + 48)]);
}

uint64_t ShowCallHistorySingleItemView.init(model:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;

  v12 = a1;
  v3 = type metadata accessor for Font.TextStyle();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Context();
  lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
  *a2 = EnvironmentObject.init()();
  a2[1] = v7;
  v8 = type metadata accessor for ShowCallHistorySingleItemView();
  ActionHandler.init()();
  v13 = 0x4041800000000000;
  v9 = *MEMORY[0x24BDF1870];
  v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  v10(v6, v9, v3);
  lazy protocol witness table accessor for type CGFloat and conformance CGFloat();
  ScaledMetric.init(wrappedValue:relativeTo:)();
  v13 = 0x4041800000000000;
  v10(v6, v9, v3);
  ScaledMetric.init(wrappedValue:relativeTo:)();
  return outlined init with take of SingleResultCallHistoryModel(v12, (uint64_t)a2 + *(int *)(v8 + 32), (uint64_t (*)(_QWORD))type metadata accessor for SingleCallRecordModel);
}

void one-time initialization function for missedCallType()
{
  static ShowCallHistorySingleItemView.missedCallType = 0x44455353494DLL;
  unk_2572DFBD0 = 0xE600000000000000;
}

void one-time initialization function for outgoingCallType()
{
  static ShowCallHistorySingleItemView.outgoingCallType = 0x474E494F4754554FLL;
  unk_2572DFBE0 = 0xE800000000000000;
}

uint64_t type metadata accessor for ShowCallHistorySingleItemView()
{
  uint64_t result;

  result = type metadata singleton initialization cache for ShowCallHistorySingleItemView;
  if (!type metadata singleton initialization cache for ShowCallHistorySingleItemView)
    return swift_getSingletonMetadata();
  return result;
}

double ShowCallHistorySingleItemView.circleWidth.getter()
{
  double v1;

  type metadata accessor for ShowCallHistorySingleItemView();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  ScaledMetric.wrappedValue.getter();
  return v1;
}

uint64_t property wrapper backing initializer of ShowCallHistorySingleItemView.circleWidth(double a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[2];

  v2 = type metadata accessor for Font.TextStyle();
  MEMORY[0x24BDAC7A8](v2);
  *(double *)&v6[1] = a1;
  (*(void (**)(char *, _QWORD))(v4 + 104))((char *)v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x24BDF1870]);
  lazy protocol witness table accessor for type CGFloat and conformance CGFloat();
  return ScaledMetric.init(wrappedValue:relativeTo:)();
}

double ShowCallHistorySingleItemView.circleHeight.getter()
{
  double v1;

  type metadata accessor for ShowCallHistorySingleItemView();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  ScaledMetric.wrappedValue.getter();
  return v1;
}

uint64_t ShowCallHistorySingleItemView.model.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ShowCallHistorySingleItemView();
  return outlined init with copy of SearchCallHistoryBinaryButtonModel(v1 + *(int *)(v3 + 32), a1, (uint64_t (*)(_QWORD))type metadata accessor for SingleCallRecordModel);
}

uint64_t ShowCallHistorySingleItemView.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = type metadata accessor for ShowCallHistorySingleItemView();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  MEMORY[0x24BDAC7A8](v1);
  v4 = type metadata accessor for SimpleItemRichView();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BEADE98];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShowCallHistorySingleItemView.getSimpleItemRichView()((uint64_t)v8);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v0, (uint64_t)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for ShowCallHistorySingleItemView);
  v9 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v10 = swift_allocObject();
  outlined init with take of SingleResultCallHistoryModel((uint64_t)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9, (uint64_t (*)(_QWORD))type metadata accessor for ShowCallHistorySingleItemView);
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type SimpleItemRichView and conformance SimpleItemRichView, v5, MEMORY[0x24BEADE78]);
  View.componentTapped(isNavigation:perform:)();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v4);
}

uint64_t ShowCallHistorySingleItemView.getSimpleItemRichView()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v26 = a1;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(Text, ModifiedContent<<<opaque return type of View.onTapGesture(count:perform:)>>.0, _PaddingLayout>)>>);
  MEMORY[0x24BDAC7A8](v25);
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ShowCallHistorySingleItemView();
  v5 = v1;
  v6 = ShowCallHistorySingleItemView.getAvatarView(contactIds:)(*(_QWORD *)(v1 + *(int *)(v4 + 32) + 80));
  v23 = v1;
  v24 = v6;
  v7 = ShowCallHistorySingleItemView.displayText.getter();
  v59 = MEMORY[0x24BDF4788];
  v60 = MEMORY[0x24BEAD940];
  v58 = v7;
  v57 = 0;
  v55 = 0u;
  v56 = 0u;
  v8 = static VerticalAlignment.center.getter();
  closure #1 in ShowCallHistorySingleItemView.callDetailView.getter(v5, (uint64_t)&v45);
  v10 = v45;
  v9 = v46;
  v11 = v47;
  v12 = v48;
  v13 = v49;
  v14 = v50;
  v22 = v51;
  v45 = v8;
  v46 = 0x4010000000000000;
  LOBYTE(v47) = 0;
  v48 = v10;
  v49 = v9;
  v50 = v11;
  v51 = v12;
  v52 = v13;
  v53 = v14;
  v54 = v22;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>?, Text)>>);
  lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>?, Text)>> and conformance HStack<A>, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>?, Text)>>, MEMORY[0x24BDF44A0]);
  v15 = View.eraseToAnyView()();
  outlined consume of ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>?(v10);
  outlined consume of Text.Storage(v12, v13, v14);
  swift_bridgeObjectRelease();
  v16 = MEMORY[0x24BEAD940];
  v49 = MEMORY[0x24BEAD940];
  v17 = MEMORY[0x24BDF4788];
  v48 = MEMORY[0x24BDF4788];
  v45 = v15;
  *(_QWORD *)v3 = static VerticalAlignment.center.getter();
  *((_QWORD *)v3 + 1) = 0x4000000000000000;
  v3[16] = 0;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, TupleView<(Text, ModifiedContent<<<opaque return type of View.onTapGesture(count:perform:)>>.0, _PaddingLayout>)>>);
  closure #1 in ShowCallHistorySingleItemView.dateAndInformationView.getter(v23, (uint64_t *)&v3[*(int *)(v18 + 44)]);
  lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type HStack<TupleView<(Text, ModifiedContent<<<opaque return type of View.onTapGesture(count:perform:)>>.0, _PaddingLayout>)>> and conformance HStack<A>, &demangling cache variable for type metadata for HStack<TupleView<(Text, ModifiedContent<<<opaque return type of View.onTapGesture(count:perform:)>>.0, _PaddingLayout>)>>, MEMORY[0x24BDF44A0]);
  v19 = View.eraseToAnyView()();
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v3, &demangling cache variable for type metadata for HStack<TupleView<(Text, ModifiedContent<<<opaque return type of View.onTapGesture(count:perform:)>>.0, _PaddingLayout>)>>);
  v43 = v17;
  v44 = v16;
  v41 = 0;
  v42 = v19;
  v39 = 0u;
  v40 = 0u;
  v38 = 0;
  v36 = 0u;
  v37 = 0u;
  v35 = 0;
  v33 = 0u;
  v34 = 0u;
  v32 = 0;
  v30 = 0u;
  v31 = 0u;
  if (v24)
  {
    *((_QWORD *)&v28 + 1) = v17;
    v29 = v16;
    *(_QWORD *)&v27 = v24;
  }
  else
  {
    v29 = 0;
    v27 = 0uLL;
    v28 = 0uLL;
  }
  return SimpleItemRichView.init(text1:text2:text3:text4:text5:text6:text7:text8:thumbnail:)();
}

uint64_t closure #1 in ShowCallHistorySingleItemView.body.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for InteractionType?);
  MEMORY[0x24BDAC7A8](v2);
  v43 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionProperty?);
  MEMORY[0x24BDAC7A8](v4);
  v42 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ShowCallHistorySingleItemView();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ActionProperty();
  v44 = *(_QWORD *)(v12 - 8);
  v45 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionElementConvertible>);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_243B32430;
  v16 = type metadata accessor for Command();
  v17 = MEMORY[0x24BEAD1E8];
  *(_QWORD *)(v15 + 56) = v16;
  *(_QWORD *)(v15 + 64) = v17;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v15 + 32));
  v46 = v9;
  type metadata accessor for SingleCallRecordModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  *boxed_opaque_existential_1 = CodableAceObject.wrappedValue.getter();
  *((_BYTE *)boxed_opaque_existential_1 + 8) = 0;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x24BEAD1C8], v16);
  v47 = v14;
  ActionProperty.init(_:)();
  if (one-time initialization token for phoneSnippetUI != -1)
    swift_once();
  v19 = type metadata accessor for Logger();
  __swift_project_value_buffer(v19, (uint64_t)static Logger.phoneSnippetUI);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(a1, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ShowCallHistorySingleItemView);
  v20 = Logger.logObject.getter();
  v21 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc();
    v41 = v8;
    v23 = (uint8_t *)v22;
    v24 = swift_slowAlloc();
    v40 = a1;
    v25 = v24;
    *(_DWORD *)v23 = 136315138;
    v49 = v24;
    v26 = &v11[*(int *)(v46 + 32)];
    v27 = (uint64_t)v11;
    v29 = *((_QWORD *)v26 + 2);
    v28 = *((_QWORD *)v26 + 3);
    swift_bridgeObjectRetain();
    v48 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, v28, &v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined destroy of ShowCallHistorySingleItemView(v27);
    _os_log_impl(&dword_243ABD000, v20, v21, "#ShowCallHistorySingleItemView tapped, performing open call record direct action for %s", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2495011B8](v25, -1, -1);
    v30 = v23;
    v8 = v41;
    MEMORY[0x2495011B8](v30, -1, -1);
  }
  else
  {
    outlined destroy of ShowCallHistorySingleItemView((uint64_t)v11);
  }

  ActionHandler.wrappedValue.getter();
  v31 = type metadata accessor for StandardActionHandler();
  v32 = *(_QWORD *)(v31 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v8, 1, v31) == 1)
  {
    (*(void (**)(char *, uint64_t))(v44 + 8))(v47, v45);
    return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v8, &demangling cache variable for type metadata for StandardActionHandler?);
  }
  else
  {
    v35 = v44;
    v34 = v45;
    v36 = (uint64_t)v42;
    v37 = v47;
    (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v42, v47, v45);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v35 + 56))(v36, 0, 1, v34);
    v38 = type metadata accessor for InteractionType();
    v39 = (uint64_t)v43;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v43, 1, 1, v38);
    StandardActionHandler.perform(_:interactionType:)();
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v39, &demangling cache variable for type metadata for InteractionType?);
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v36, &demangling cache variable for type metadata for ActionProperty?);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v34);
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v8, v31);
  }
}

uint64_t partial apply for closure #1 in ShowCallHistorySingleItemView.body.getter()
{
  return partial apply for closure #1 in ShowCallHistorySingleItemView.body.getter(closure #1 in ShowCallHistorySingleItemView.body.getter);
}

uint64_t associated type witness table accessor for View.Body : View in ShowCallHistorySingleItemView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t ShowCallHistorySingleItemView.getAvatarView(contactIds:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[2];

  v15[1] = a1;
  v1 = type metadata accessor for ImageElement.ImageStyle();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ImageElement();
  MEMORY[0x24BDAC7A8](v5);
  v6 = type metadata accessor for ImageElementView();
  v15[0] = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BEAAAD0], v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<_ProtoIdiom>);
  v9 = type metadata accessor for _ProtoIdiom();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_243B32430;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v10 + 104))(v12 + v11, *MEMORY[0x24BEAA998], v9);
  specialized Set.init(_nonEmptyArrayLiteral:)(v12);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  static ImageElement.contactImageAvatar(contactIds:imageStyle:idioms:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  ImageElementView.init(_:)();
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type ImageElementView and conformance ImageElementView, (uint64_t (*)(uint64_t))MEMORY[0x24BEADD10], MEMORY[0x24BEADD00]);
  v13 = View.eraseToAnyView()();
  (*(void (**)(char *, uint64_t))(v15[0] + 8))(v8, v6);
  return v13;
}

uint64_t ShowCallHistorySingleItemView.displayText.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;

  v1 = v0 + *(int *)(type metadata accessor for ShowCallHistorySingleItemView() + 32);
  lazy protocol witness table accessor for type String and conformance String();
  swift_bridgeObjectRetain();
  v2 = Text.init<A>(_:)();
  v4 = v3;
  v6 = v5;
  v8 = *(_QWORD *)(v1 + 64);
  v7 = *(_QWORD *)(v1 + 72);
  v9 = one-time initialization token for missedCallType;
  swift_bridgeObjectRetain();
  if (v9 == -1)
  {
    if (!v7)
      goto LABEL_11;
  }
  else
  {
    swift_once();
    if (!v7)
      goto LABEL_11;
  }
  if (v8 == static ShowCallHistorySingleItemView.missedCallType && v7 == unk_2572DFBD0)
  {
    swift_bridgeObjectRelease();
    static Color.red.getter();
    goto LABEL_12;
  }
  v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0)
  {
LABEL_11:
    static Color.primary.getter();
    goto LABEL_12;
  }
  static Color.red.getter();
LABEL_12:
  v12 = Text.foregroundStyle<A>(_:)();
  v14 = v13;
  v16 = v15 & 1;
  outlined consume of Text.Storage(v2, v4, v6 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Text, _PaddingLayout>);
  lazy protocol witness table accessor for type ModifiedContent<Text, _PaddingLayout> and conformance <> ModifiedContent<A, B>();
  v17 = View.eraseToAnyView()();
  outlined consume of Text.Storage(v12, v14, v16);
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t closure #1 in ShowCallHistorySingleItemView.dateAndInformationView.getter@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  char v37;
  char v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  char v80;
  char v81;
  uint64_t v82;
  char v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  uint64_t v87;
  uint64_t v88;

  v2 = a1;
  v67 = a1;
  v76 = a2;
  v3 = type metadata accessor for ShowCallHistorySingleItemView();
  v69 = *(_QWORD *)(v3 - 8);
  v70 = *(_QWORD *)(v69 + 64);
  MEMORY[0x24BDAC7A8](v3);
  v68 = (uint64_t)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.onTapGesture(count:perform:)>>.0);
  v74 = *(_QWORD *)(v75 - 8);
  MEMORY[0x24BDAC7A8](v75);
  v71 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.onTapGesture(count:perform:)>>.0, _PaddingLayout>);
  v6 = MEMORY[0x24BDAC7A8](v73);
  v8 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v72 = (uint64_t)&v66 - v9;
  v10 = v2 + *(int *)(v3 + 32);
  v11 = *(_QWORD *)(v10 + 56);
  v77 = *(_QWORD *)(v10 + 48);
  v78 = v11;
  lazy protocol witness table accessor for type String and conformance String();
  swift_bridgeObjectRetain();
  v12 = Text.init<A>(_:)();
  v14 = v13;
  v16 = v15 & 1;
  static Font.subheadline.getter();
  v17 = Text.font(_:)();
  v19 = v18;
  LOBYTE(v2) = v20;
  swift_release();
  outlined consume of Text.Storage(v12, v14, v16);
  swift_bridgeObjectRelease();
  static Font.Weight.regular.getter();
  v21 = Text.fontWeight(_:)();
  v23 = v22;
  LOBYTE(v14) = v24 & 1;
  outlined consume of Text.Storage(v17, v19, v2 & 1);
  swift_bridgeObjectRelease();
  v77 = static Color.secondary.getter();
  v25 = Text.foregroundStyle<A>(_:)();
  v27 = v26;
  v29 = v28;
  v31 = v30 & 1;
  outlined consume of Text.Storage(v21, v23, v14);
  swift_release();
  swift_bridgeObjectRelease();
  v32 = static Alignment.center.getter();
  v34 = v33;
  v35 = v67;
  closure #1 in closure #1 in ShowCallHistorySingleItemView.dateAndInformationView.getter((uint64_t)&v77);
  v36 = v77;
  v37 = BYTE4(v77);
  v38 = BYTE5(v77);
  v39 = v78;
  v40 = v79;
  v41 = v82;
  v42 = v83;
  v43 = v86;
  v45 = v84;
  v44 = v85;
  v77 = v32;
  v78 = v34;
  v79 = v36;
  v80 = v37;
  v81 = v38;
  v82 = v39;
  v83 = v40;
  *(_QWORD *)&v84 = v41;
  BYTE8(v84) = v42;
  v85 = v45;
  v86 = v44;
  v87 = v43;
  v88 = 0x3FF0000000000000;
  v46 = v68;
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v35, v68, (uint64_t (*)(_QWORD))type metadata accessor for ShowCallHistorySingleItemView);
  v47 = (*(unsigned __int8 *)(v69 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
  v48 = swift_allocObject();
  outlined init with take of SingleResultCallHistoryModel(v46, v48 + v47, (uint64_t (*)(_QWORD))type metadata accessor for ShowCallHistorySingleItemView);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ZStack<TupleView<(ModifiedContent<_ShapeView<Circle, HierarchicalShapeStyle>, _FrameLayout>, ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>)>>, _TraitWritingModifier<ZIndexTraitKey>>);
  lazy protocol witness table accessor for type ModifiedContent<ZStack<TupleView<(ModifiedContent<_ShapeView<Circle, HierarchicalShapeStyle>, _FrameLayout>, ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>)>>, _TraitWritingModifier<ZIndexTraitKey>> and conformance <> ModifiedContent<A, B>();
  v49 = v71;
  View.onTapGesture(count:perform:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  LOBYTE(v47) = static Edge.Set.leading.getter();
  EdgeInsets.init(_all:)();
  v51 = v50;
  v53 = v52;
  v55 = v54;
  v57 = v56;
  v58 = v74;
  v59 = v75;
  (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v8, v49, v75);
  v60 = &v8[*(int *)(v73 + 36)];
  *v60 = v47;
  *((_QWORD *)v60 + 1) = v51;
  *((_QWORD *)v60 + 2) = v53;
  *((_QWORD *)v60 + 3) = v55;
  *((_QWORD *)v60 + 4) = v57;
  v60[40] = 0;
  (*(void (**)(char *, uint64_t))(v58 + 8))(v49, v59);
  v61 = v72;
  outlined init with take of ModifiedContent<<<opaque return type of View.onTapGesture(count:perform:)>>.0, _PaddingLayout>((uint64_t)v8, v72);
  outlined init with copy of ModifiedContent<<<opaque return type of View.onTapGesture(count:perform:)>>.0, _PaddingLayout>(v61, (uint64_t)v8);
  v62 = v76;
  *v76 = v25;
  v62[1] = v27;
  *((_BYTE *)v62 + 16) = v31;
  v62[3] = v29;
  v63 = v62;
  v64 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Text, ModifiedContent<<<opaque return type of View.onTapGesture(count:perform:)>>.0, _PaddingLayout>));
  outlined init with copy of ModifiedContent<<<opaque return type of View.onTapGesture(count:perform:)>>.0, _PaddingLayout>((uint64_t)v8, (uint64_t)v63 + *(int *)(v64 + 48));
  outlined copy of Text.Storage(v25, v27, v31);
  swift_bridgeObjectRetain();
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v61, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.onTapGesture(count:perform:)>>.0, _PaddingLayout>);
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v8, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.onTapGesture(count:perform:)>>.0, _PaddingLayout>);
  outlined consume of Text.Storage(v25, v27, v31);
  return swift_bridgeObjectRelease();
}

uint64_t closure #1 in closure #1 in ShowCallHistorySingleItemView.dateAndInformationView.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  int v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  v5 = static HierarchicalShapeStyle.quaternary.getter();
  type metadata accessor for ShowCallHistorySingleItemView();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  ScaledMetric.wrappedValue.getter();
  ScaledMetric.wrappedValue.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  v2 = Image.init(systemName:)();
  v3 = static Color.blue.getter();
  result = swift_getKeyPath();
  *(_DWORD *)a1 = v5;
  *(_WORD *)(a1 + 4) = 256;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  *(_BYTE *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = v10;
  *(_QWORD *)(a1 + 48) = v11;
  *(_QWORD *)(a1 + 56) = v2;
  *(_QWORD *)(a1 + 64) = result;
  *(_QWORD *)(a1 + 72) = v3;
  return result;
}

uint64_t closure #2 in closure #1 in ShowCallHistorySingleItemView.dateAndInformationView.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for InteractionType?);
  MEMORY[0x24BDAC7A8](v2);
  v43 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionProperty?);
  MEMORY[0x24BDAC7A8](v4);
  v42 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ShowCallHistorySingleItemView();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ActionProperty();
  v44 = *(_QWORD *)(v12 - 8);
  v45 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionElementConvertible>);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_243B32430;
  v16 = type metadata accessor for Command();
  v17 = MEMORY[0x24BEAD1E8];
  *(_QWORD *)(v15 + 56) = v16;
  *(_QWORD *)(v15 + 64) = v17;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v15 + 32));
  v46 = v9;
  type metadata accessor for SingleCallRecordModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  *boxed_opaque_existential_1 = CodableAceObject.wrappedValue.getter();
  *((_BYTE *)boxed_opaque_existential_1 + 8) = 0;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x24BEAD1C8], v16);
  v47 = v14;
  ActionProperty.init(_:)();
  if (one-time initialization token for phoneSnippetUI != -1)
    swift_once();
  v19 = type metadata accessor for Logger();
  __swift_project_value_buffer(v19, (uint64_t)static Logger.phoneSnippetUI);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(a1, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ShowCallHistorySingleItemView);
  v20 = Logger.logObject.getter();
  v21 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc();
    v41 = v8;
    v23 = (uint8_t *)v22;
    v24 = swift_slowAlloc();
    v40 = a1;
    v25 = v24;
    *(_DWORD *)v23 = 136315138;
    v49 = v24;
    v26 = &v11[*(int *)(v46 + 32)];
    v27 = (uint64_t)v11;
    v29 = *((_QWORD *)v26 + 2);
    v28 = *((_QWORD *)v26 + 3);
    swift_bridgeObjectRetain();
    v48 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, v28, &v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined destroy of ShowCallHistorySingleItemView(v27);
    _os_log_impl(&dword_243ABD000, v20, v21, "#ShowCallHistorySingleItemView tapped, performing call direct action for %s", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2495011B8](v25, -1, -1);
    v30 = v23;
    v8 = v41;
    MEMORY[0x2495011B8](v30, -1, -1);
  }
  else
  {
    outlined destroy of ShowCallHistorySingleItemView((uint64_t)v11);
  }

  ActionHandler.wrappedValue.getter();
  v31 = type metadata accessor for StandardActionHandler();
  v32 = *(_QWORD *)(v31 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v8, 1, v31) == 1)
  {
    (*(void (**)(char *, uint64_t))(v44 + 8))(v47, v45);
    return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v8, &demangling cache variable for type metadata for StandardActionHandler?);
  }
  else
  {
    v35 = v44;
    v34 = v45;
    v36 = (uint64_t)v42;
    v37 = v47;
    (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v42, v47, v45);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v35 + 56))(v36, 0, 1, v34);
    v38 = type metadata accessor for InteractionType();
    v39 = (uint64_t)v43;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v43, 1, 1, v38);
    StandardActionHandler.perform(_:interactionType:)();
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v39, &demangling cache variable for type metadata for InteractionType?);
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v36, &demangling cache variable for type metadata for ActionProperty?);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v34);
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v8, v31);
  }
}

uint64_t closure #1 in ShowCallHistorySingleItemView.callDetailView.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t KeyPath;
  uint64_t v23;
  uint64_t v24;

  v3 = a1 + *(int *)(type metadata accessor for ShowCallHistorySingleItemView() + 32);
  v5 = *(_QWORD *)(v3 + 64);
  v4 = *(_QWORD *)(v3 + 72);
  v6 = one-time initialization token for outgoingCallType;
  swift_bridgeObjectRetain();
  if (v6 != -1)
  {
    swift_once();
    if (!v4)
      goto LABEL_8;
LABEL_3:
    if (v5 == static ShowCallHistorySingleItemView.outgoingCallType && v4 == unk_2572DFBE0)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v8 & 1) == 0)
        goto LABEL_8;
    }
    v24 = Image.init(systemName:)();
    v23 = static Color.gray.getter();
    KeyPath = swift_getKeyPath();
    goto LABEL_11;
  }
  if (v4)
    goto LABEL_3;
LABEL_8:
  v23 = 0;
  v24 = 0;
  KeyPath = 0;
LABEL_11:
  lazy protocol witness table accessor for type String and conformance String();
  swift_bridgeObjectRetain();
  v9 = Text.init<A>(_:)();
  v11 = v10;
  v13 = v12 & 1;
  static Color.gray.getter();
  v14 = Text.foregroundStyle<A>(_:)();
  v16 = v15;
  v18 = v17;
  v20 = v19 & 1;
  outlined consume of Text.Storage(v9, v11, v13);
  swift_release();
  swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v24;
  *(_QWORD *)(a2 + 8) = KeyPath;
  *(_QWORD *)(a2 + 16) = v23;
  *(_QWORD *)(a2 + 24) = v14;
  *(_QWORD *)(a2 + 32) = v16;
  *(_BYTE *)(a2 + 40) = v20;
  *(_QWORD *)(a2 + 48) = v18;
  outlined copy of ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>?(v24);
  outlined copy of Text.Storage(v14, v16, v20);
  swift_bridgeObjectRetain();
  outlined consume of Text.Storage(v14, v16, v20);
  swift_bridgeObjectRelease();
  return outlined consume of ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>?(v24);
}

uint64_t protocol witness for View.body.getter in conformance ShowCallHistorySingleItemView(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = *(_QWORD *)(a1 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v4 = type metadata accessor for SimpleItemRichView();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BEADE98];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShowCallHistorySingleItemView.getSimpleItemRichView()((uint64_t)v8);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v1, (uint64_t)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for ShowCallHistorySingleItemView);
  v9 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v10 = swift_allocObject();
  outlined init with take of SingleResultCallHistoryModel((uint64_t)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9, (uint64_t (*)(_QWORD))type metadata accessor for ShowCallHistorySingleItemView);
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type SimpleItemRichView and conformance SimpleItemRichView, v5, MEMORY[0x24BEADE78]);
  View.componentTapped(isNavigation:perform:)();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v4);
}

char *initializeBufferWithCopyOfBuffer for ShowCallHistorySingleItemView(char *a1, char **a2, int *a3)
{
  int v3;
  char *v4;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v33;
  char *v34;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v7 = a1;
    *((_QWORD *)a1 + 1) = a2[1];
    v8 = a3[5];
    v9 = &a1[v8];
    v10 = (uint64_t)a2 + v8;
    v11 = type metadata accessor for ActionHandler();
    v12 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v13 = v4;
    v12(v9, v10, v11);
    v14 = a3[6];
    v15 = &v7[v14];
    v16 = (uint64_t)a2 + v14;
    v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
    v18 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
    v18(v15, v16, v17);
    v18(&v7[a3[7]], (uint64_t)a2 + a3[7], v17);
    v19 = a3[8];
    v20 = &v7[v19];
    v21 = (uint64_t)a2 + v19;
    v22 = *(uint64_t *)((char *)a2 + v19);
    v23 = *(_QWORD *)(v21 + 8);
    *(_QWORD *)v20 = v22;
    *((_QWORD *)v20 + 1) = v23;
    v24 = *(_QWORD *)(v21 + 24);
    *((_QWORD *)v20 + 2) = *(_QWORD *)(v21 + 16);
    *((_QWORD *)v20 + 3) = v24;
    v25 = *(_QWORD *)(v21 + 40);
    *((_QWORD *)v20 + 4) = *(_QWORD *)(v21 + 32);
    *((_QWORD *)v20 + 5) = v25;
    v26 = *(_QWORD *)(v21 + 56);
    *((_QWORD *)v20 + 6) = *(_QWORD *)(v21 + 48);
    *((_QWORD *)v20 + 7) = v26;
    v27 = *(_QWORD *)(v21 + 72);
    *((_QWORD *)v20 + 8) = *(_QWORD *)(v21 + 64);
    *((_QWORD *)v20 + 9) = v27;
    *((_QWORD *)v20 + 10) = *(_QWORD *)(v21 + 80);
    v20[88] = *(_BYTE *)(v21 + 88);
    v28 = type metadata accessor for SingleCallRecordModel();
    v29 = *(int *)(v28 + 44);
    v33 = v21 + v29;
    v34 = &v20[v29];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    v31 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
    v31(v34, v33, v30);
    v31(&v20[*(int *)(v28 + 48)], v21 + *(int *)(v28 + 48), v30);
  }
  return v7;
}

uint64_t destroy for ShowCallHistorySingleItemView(id *a1, int *a2)
{
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t);
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v14)(char *, uint64_t);

  v4 = (char *)a1 + a2[5];
  v5 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = (char *)a1 + a2[6];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  v8 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v8(v6, v7);
  v8((char *)a1 + a2[7], v7);
  v9 = (char *)a1 + a2[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = type metadata accessor for SingleCallRecordModel();
  v11 = &v9[*(int *)(v10 + 44)];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v14 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
  v14(v11, v12);
  return ((uint64_t (*)(char *, uint64_t))v14)(&v9[*(int *)(v10 + 48)], v12);
}

char *initializeWithCopy for ShowCallHistorySingleItemView(char *a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  id v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v33;
  char *v34;

  v7 = *(void **)a2;
  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = a2 + v8;
  v11 = type metadata accessor for ActionHandler();
  v12 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  v13 = v7;
  v12(v9, v10, v11);
  v14 = a3[6];
  v15 = &a1[v14];
  v16 = a2 + v14;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
  v18(v15, v16, v17);
  v18(&a1[a3[7]], a2 + a3[7], v17);
  v19 = a3[8];
  v20 = &a1[v19];
  v21 = a2 + v19;
  v22 = *(_QWORD *)(a2 + v19 + 8);
  *(_QWORD *)v20 = *(_QWORD *)(a2 + v19);
  *((_QWORD *)v20 + 1) = v22;
  v23 = *(_QWORD *)(a2 + v19 + 16);
  v24 = *(_QWORD *)(v21 + 24);
  *((_QWORD *)v20 + 2) = v23;
  *((_QWORD *)v20 + 3) = v24;
  v25 = *(_QWORD *)(v21 + 40);
  *((_QWORD *)v20 + 4) = *(_QWORD *)(v21 + 32);
  *((_QWORD *)v20 + 5) = v25;
  v26 = *(_QWORD *)(v21 + 56);
  *((_QWORD *)v20 + 6) = *(_QWORD *)(v21 + 48);
  *((_QWORD *)v20 + 7) = v26;
  v27 = *(_QWORD *)(v21 + 72);
  *((_QWORD *)v20 + 8) = *(_QWORD *)(v21 + 64);
  *((_QWORD *)v20 + 9) = v27;
  *((_QWORD *)v20 + 10) = *(_QWORD *)(v21 + 80);
  v20[88] = *(_BYTE *)(v21 + 88);
  v28 = type metadata accessor for SingleCallRecordModel();
  v29 = *(int *)(v28 + 44);
  v33 = v21 + v29;
  v34 = &v20[v29];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v31 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
  v31(v34, v33, v30);
  v31(&v20[*(int *)(v28 + 48)], v21 + *(int *)(v28 + 48), v30);
  return a1;
}

uint64_t assignWithCopy for ShowCallHistorySingleItemView(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);

  v6 = *(void **)a1;
  v7 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v7;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v9 = a3[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v13 = a3[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 24);
  v17(v14, v15, v16);
  v17(a1 + a3[7], a2 + a3[7], v16);
  v18 = a3[8];
  v19 = a1 + v18;
  v20 = a2 + v18;
  *(_QWORD *)v19 = *(_QWORD *)(a2 + v18);
  *(_QWORD *)(v19 + 8) = *(_QWORD *)(a2 + v18 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v19 + 16) = *(_QWORD *)(v20 + 16);
  *(_QWORD *)(v19 + 24) = *(_QWORD *)(v20 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v19 + 32) = *(_QWORD *)(v20 + 32);
  *(_QWORD *)(v19 + 40) = *(_QWORD *)(v20 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v19 + 48) = *(_QWORD *)(v20 + 48);
  *(_QWORD *)(v19 + 56) = *(_QWORD *)(v20 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v19 + 64) = *(_QWORD *)(v20 + 64);
  *(_QWORD *)(v19 + 72) = *(_QWORD *)(v20 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v19 + 80) = *(_QWORD *)(v20 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v19 + 88) = *(_BYTE *)(v20 + 88);
  v21 = type metadata accessor for SingleCallRecordModel();
  v22 = *(int *)(v21 + 44);
  v23 = v19 + v22;
  v24 = v20 + v22;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 24);
  v26(v23, v24, v25);
  v26(v19 + *(int *)(v21 + 48), v20 + *(int *)(v21 + 48), v25);
  return a1;
}

char *initializeWithTake for ShowCallHistorySingleItemView(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32);
  v14(v11, v12, v13);
  v14(&a1[a3[7]], &a2[a3[7]], v13);
  v15 = a3[8];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = *(_OWORD *)&a2[v15 + 16];
  *(_OWORD *)v16 = *(_OWORD *)&a2[v15];
  *((_OWORD *)v16 + 1) = v18;
  v19 = *(_OWORD *)&a2[v15 + 48];
  *((_OWORD *)v16 + 2) = *(_OWORD *)&a2[v15 + 32];
  *((_OWORD *)v16 + 3) = v19;
  *((_OWORD *)v16 + 4) = *(_OWORD *)&a2[v15 + 64];
  *((_QWORD *)v16 + 10) = *(_QWORD *)&a2[v15 + 80];
  v16[88] = a2[v15 + 88];
  v20 = type metadata accessor for SingleCallRecordModel();
  v21 = *(int *)(v20 + 44);
  v22 = &v16[v21];
  v23 = &v17[v21];
  v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32);
  v25(v22, v23, v24);
  v25(&v16[*(int *)(v20 + 48)], &v17[*(int *)(v20 + 48)], v24);
  return a1;
}

uint64_t assignWithTake for ShowCallHistorySingleItemView(uint64_t a1, char *a2, int *a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(uint64_t, char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void (*v29)(uint64_t, char *, uint64_t);

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = &a2[v7];
  v10 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = &a2[v11];
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  v15 = *(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40);
  v15(v12, v13, v14);
  v15(a1 + a3[7], &a2[a3[7]], v14);
  v16 = a3[8];
  v17 = a1 + v16;
  v18 = &a2[v16];
  v19 = *(_QWORD *)&a2[v16 + 8];
  *(_QWORD *)v17 = *(_QWORD *)&a2[v16];
  *(_QWORD *)(v17 + 8) = v19;
  swift_bridgeObjectRelease();
  v20 = *((_QWORD *)v18 + 3);
  *(_QWORD *)(v17 + 16) = *((_QWORD *)v18 + 2);
  *(_QWORD *)(v17 + 24) = v20;
  swift_bridgeObjectRelease();
  v21 = *((_QWORD *)v18 + 5);
  *(_QWORD *)(v17 + 32) = *((_QWORD *)v18 + 4);
  *(_QWORD *)(v17 + 40) = v21;
  swift_bridgeObjectRelease();
  v22 = *((_QWORD *)v18 + 7);
  *(_QWORD *)(v17 + 48) = *((_QWORD *)v18 + 6);
  *(_QWORD *)(v17 + 56) = v22;
  swift_bridgeObjectRelease();
  v23 = *((_QWORD *)v18 + 9);
  *(_QWORD *)(v17 + 64) = *((_QWORD *)v18 + 8);
  *(_QWORD *)(v17 + 72) = v23;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v17 + 80) = *((_QWORD *)v18 + 10);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v17 + 88) = v18[88];
  v24 = type metadata accessor for SingleCallRecordModel();
  v25 = *(int *)(v24 + 44);
  v26 = v17 + v25;
  v27 = &v18[v25];
  v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v29 = *(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 40);
  v29(v26, v27, v28);
  v29(v17 + *(int *)(v24 + 48), &v18[*(int *)(v24 + 48)], v28);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShowCallHistorySingleItemView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_243AFAF90(char *a1, uint64_t a2, int *a3)
{
  uint64_t v4;
  int v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = type metadata accessor for ActionHandler();
    v10 = *(_QWORD *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v9;
      v12 = a3[5];
    }
    else
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
      v10 = *(_QWORD *)(v13 - 8);
      if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
      {
        v11 = v13;
        v12 = a3[6];
      }
      else
      {
        v11 = type metadata accessor for SingleCallRecordModel();
        v10 = *(_QWORD *)(v11 - 8);
        v12 = a3[8];
      }
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(&a1[v12], a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for ShowCallHistorySingleItemView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_243AFB070(char *result, uint64_t a2, int a3, int *a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)result = a2;
  }
  else
  {
    v8 = type metadata accessor for ActionHandler();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[5];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[6];
      }
      else
      {
        v10 = type metadata accessor for SingleCallRecordModel();
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[8];
      }
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void type metadata completion function for ShowCallHistorySingleItemView()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  type metadata accessor for ActionHandler();
  if (v0 <= 0x3F)
  {
    type metadata accessor for ScaledMetric<CGFloat>();
    if (v1 <= 0x3F)
    {
      type metadata accessor for SingleCallRecordModel();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void type metadata accessor for ScaledMetric<CGFloat>()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for ScaledMetric<CGFloat>)
  {
    lazy protocol witness table accessor for type CGFloat and conformance CGFloat();
    v0 = type metadata accessor for ScaledMetric();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for ScaledMetric<CGFloat>);
  }
}

uint64_t sub_243AFB238()
{
  type metadata accessor for SimpleItemRichView();
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type SimpleItemRichView and conformance SimpleItemRichView, (uint64_t (*)(uint64_t))MEMORY[0x24BEADE98], MEMORY[0x24BEADE78]);
  return swift_getOpaqueTypeConformance2();
}

uint64_t outlined destroy of ShowCallHistorySingleItemView(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ShowCallHistorySingleItemView();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t outlined consume of ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>?(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t objectdestroyTm_7()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  id *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t);
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t);

  v1 = (int *)type metadata accessor for ShowCallHistorySingleItemView();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = (id *)(v0 + ((v2 + 16) & ~v2));

  v4 = (char *)v3 + v1[5];
  v5 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = (char *)v3 + v1[6];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  v8 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v8(v6, v7);
  v8((char *)v3 + v1[7], v7);
  v9 = (char *)v3 + v1[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = type metadata accessor for SingleCallRecordModel();
  v11 = &v9[*(int *)(v10 + 44)];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v13 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
  v13(v11, v12);
  v13(&v9[*(int *)(v10 + 48)], v12);
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in closure #1 in ShowCallHistorySingleItemView.dateAndInformationView.getter()
{
  return partial apply for closure #1 in ShowCallHistorySingleItemView.body.getter(closure #2 in closure #1 in ShowCallHistorySingleItemView.dateAndInformationView.getter);
}

uint64_t partial apply for closure #1 in ShowCallHistorySingleItemView.body.getter(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ShowCallHistorySingleItemView() - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ZStack<TupleView<(ModifiedContent<_ShapeView<Circle, HierarchicalShapeStyle>, _FrameLayout>, ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>)>>, _TraitWritingModifier<ZIndexTraitKey>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ZStack<TupleView<(ModifiedContent<_ShapeView<Circle, HierarchicalShapeStyle>, _FrameLayout>, ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>)>>, _TraitWritingModifier<ZIndexTraitKey>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ZStack<TupleView<(ModifiedContent<_ShapeView<Circle, HierarchicalShapeStyle>, _FrameLayout>, ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>)>>, _TraitWritingModifier<ZIndexTraitKey>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ZStack<TupleView<(ModifiedContent<_ShapeView<Circle, HierarchicalShapeStyle>, _FrameLayout>, ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>)>>, _TraitWritingModifier<ZIndexTraitKey>>);
    v2[0] = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type ZStack<TupleView<(ModifiedContent<_ShapeView<Circle, HierarchicalShapeStyle>, _FrameLayout>, ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>)>> and conformance ZStack<A>, &demangling cache variable for type metadata for ZStack<TupleView<(ModifiedContent<_ShapeView<Circle, HierarchicalShapeStyle>, _FrameLayout>, ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>)>>, MEMORY[0x24BDF4758]);
    v2[1] = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type _TraitWritingModifier<ZIndexTraitKey> and conformance _TraitWritingModifier<A>, &demangling cache variable for type metadata for _TraitWritingModifier<ZIndexTraitKey>, MEMORY[0x24BDEFB40]);
    result = MEMORY[0x249501140](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ZStack<TupleView<(ModifiedContent<_ShapeView<Circle, HierarchicalShapeStyle>, _FrameLayout>, ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>)>>, _TraitWritingModifier<ZIndexTraitKey>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t outlined init with take of ModifiedContent<<<opaque return type of View.onTapGesture(count:perform:)>>.0, _PaddingLayout>(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.onTapGesture(count:perform:)>>.0, _PaddingLayout>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with copy of ModifiedContent<<<opaque return type of View.onTapGesture(count:perform:)>>.0, _PaddingLayout>(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.onTapGesture(count:perform:)>>.0, _PaddingLayout>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined copy of ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>?(uint64_t result)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Text, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<Text, _PaddingLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Text, _PaddingLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Text, _PaddingLayout>);
    v2[0] = MEMORY[0x24BDF1F78];
    v2[1] = MEMORY[0x24BDECC58];
    result = MEMORY[0x249501140](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Text, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t PhoneCallNLConstants.canonicalName.getter(unsigned __int8 a1)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  Swift::String v5;

  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  v2 = PhoneCallNLConstants.rawValue.getter(a1);
  v4 = v3;
  swift_bridgeObjectRetain();
  specialized Collection.prefix(_:)(1);
  swift_bridgeObjectRelease();
  v5 = Substring.uppercased()();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  specialized Collection.dropFirst(_:)(1uLL, v2, v4);
  swift_bridgeObjectRelease();
  lazy protocol witness table accessor for type Substring and conformance Substring();
  swift_bridgeObjectRetain();
  String.append<A>(contentsOf:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  return 0xD000000000000012;
}

uint64_t PhoneCallNLConstants.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_243AFB82C + 4 * byte_243B347D0[a1]))(0xD000000000000012, 0x8000000243B36F90);
}

uint64_t sub_243AFB82C()
{
  return 0x6E69616D6F64;
}

uint64_t sub_243AFB840()
{
  return 0x6C6143656E6F6870;
}

Swift::String __swiftcall PhoneCallNLConstants.boundValue(_:)(Swift::String a1)
{
  unsigned __int8 v1;
  void *v2;
  Swift::String v3;
  Swift::String v4;
  uint64_t v5;
  void *v6;
  Swift::String result;
  unint64_t v8;
  void *v9;

  v8 = PhoneCallNLConstants.canonicalName.getter(v1);
  v9 = v2;
  v3._countAndFlagsBits = 0x2E65756C61562ELL;
  v3._object = (void *)0xE700000000000000;
  String.append(_:)(v3);
  v4 = String.uppercased()();
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  v5 = v8;
  v6 = v9;
  result._object = v6;
  result._countAndFlagsBits = v5;
  return result;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallNLConstants(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallNLConstants(a1, a2, a3, a4, (uint64_t (*)(uint64_t))PhoneCallNLConstants.rawValue.getter);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance PhoneCallNLConstants(uint64_t a1, uint64_t a2)
{
  return protocol witness for Hashable.hashValue.getter in conformance PhoneCallNLConstants(a1, a2, (void (*)(uint64_t))PhoneCallNLConstants.rawValue.getter);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance PhoneCallNLConstants(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return protocol witness for Hashable.hash(into:) in conformance PhoneCallNLConstants(a1, a2, a3, (void (*)(_QWORD))PhoneCallNLConstants.rawValue.getter);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallNLConstants(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallNLConstants(a1, a2, a3, (void (*)(uint64_t))PhoneCallNLConstants.rawValue.getter);
}

unint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallNLConstants@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = specialized PhoneCallNLConstants.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallNLConstants@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = PhoneCallNLConstants.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t PhoneCallConfirmationSemantics.associatedSemantic.getter()
{
  return 6;
}

uint64_t PhoneCallConfirmationSemantics.canonicalName.getter()
{
  uint64_t v0;
  void *v1;
  void *v2;
  Swift::String v3;
  uint64_t countAndFlagsBits;

  String.uppercased()();
  swift_bridgeObjectRelease();
  lazy protocol witness table accessor for type String and conformance String();
  v0 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
  v2 = v1;
  swift_bridgeObjectRelease();
  v3._countAndFlagsBits = v0;
  v3._object = v2;
  countAndFlagsBits = PhoneCallNLConstants.boundValue(_:)(v3)._countAndFlagsBits;
  swift_bridgeObjectRelease();
  return countAndFlagsBits;
}

uint64_t PhoneCallConfirmationSemantics.rawValue.getter(char a1)
{
  return *(_QWORD *)&aYes_1[8 * a1];
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallConfirmationSemantics(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallNLConstants(a1, a2, a3, a4, (uint64_t (*)(uint64_t))PhoneCallConfirmationSemantics.rawValue.getter);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance PhoneCallConfirmationSemantics(uint64_t a1, uint64_t a2)
{
  return protocol witness for Hashable.hashValue.getter in conformance PhoneCallNLConstants(a1, a2, (void (*)(uint64_t))PhoneCallConfirmationSemantics.rawValue.getter);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance PhoneCallConfirmationSemantics(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return protocol witness for Hashable.hash(into:) in conformance PhoneCallNLConstants(a1, a2, a3, (void (*)(_QWORD))PhoneCallConfirmationSemantics.rawValue.getter);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallConfirmationSemantics(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallNLConstants(a1, a2, a3, (void (*)(uint64_t))PhoneCallConfirmationSemantics.rawValue.getter);
}

unint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallConfirmationSemantics@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = specialized PhoneCallConfirmationSemantics.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallConfirmationSemantics@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = PhoneCallConfirmationSemantics.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t VoicemailVerbSemantics.associatedSemantic.getter()
{
  return 14;
}

uint64_t VoicemailVerbSemantics.canonicalName.getter()
{
  uint64_t v0;
  void *v1;
  void *v2;
  Swift::String v3;
  uint64_t countAndFlagsBits;

  String.uppercased()();
  swift_bridgeObjectRelease();
  lazy protocol witness table accessor for type String and conformance String();
  v0 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
  v2 = v1;
  swift_bridgeObjectRelease();
  v3._countAndFlagsBits = v0;
  v3._object = v2;
  countAndFlagsBits = PhoneCallNLConstants.boundValue(_:)(v3)._countAndFlagsBits;
  swift_bridgeObjectRelease();
  return countAndFlagsBits;
}

uint64_t VoicemailVerbSemantics.rawValue.getter(char a1)
{
  return *(_QWORD *)&aPlay_1[8 * a1];
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance VoicemailVerbSemantics(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallNLConstants(a1, a2, a3, a4, (uint64_t (*)(uint64_t))VoicemailVerbSemantics.rawValue.getter);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance VoicemailVerbSemantics(uint64_t a1, uint64_t a2)
{
  return protocol witness for Hashable.hashValue.getter in conformance PhoneCallNLConstants(a1, a2, (void (*)(uint64_t))VoicemailVerbSemantics.rawValue.getter);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance VoicemailVerbSemantics(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return protocol witness for Hashable.hash(into:) in conformance PhoneCallNLConstants(a1, a2, a3, (void (*)(_QWORD))VoicemailVerbSemantics.rawValue.getter);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance VoicemailVerbSemantics(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallNLConstants(a1, a2, a3, (void (*)(uint64_t))VoicemailVerbSemantics.rawValue.getter);
}

unint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance VoicemailVerbSemantics@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = specialized VoicemailVerbSemantics.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance VoicemailVerbSemantics@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = VoicemailVerbSemantics.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t PhoneCallVerbSemantics.associatedSemantic.getter()
{
  return 15;
}

uint64_t PhoneCallVerbSemantics.canonicalName.getter(char a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  Swift::String v4;
  uint64_t countAndFlagsBits;

  PhoneCallVerbSemantics.rawValue.getter(a1);
  String.uppercased()();
  swift_bridgeObjectRelease();
  lazy protocol witness table accessor for type String and conformance String();
  v1 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
  v3 = v2;
  swift_bridgeObjectRelease();
  v4._countAndFlagsBits = v1;
  v4._object = v3;
  countAndFlagsBits = PhoneCallNLConstants.boundValue(_:)(v4)._countAndFlagsBits;
  swift_bridgeObjectRelease();
  return countAndFlagsBits;
}

uint64_t PhoneCallVerbSemantics.rawValue.getter(char a1)
{
  return *(_QWORD *)&aCall_1[8 * a1];
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallVerbSemantics(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallNLConstants(a1, a2, a3, a4, (uint64_t (*)(uint64_t))PhoneCallVerbSemantics.rawValue.getter);
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallNLConstants(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;

  v6 = *a2;
  v7 = a5(*a1);
  v9 = v8;
  if (v7 == a5(v6) && v9 == v10)
    v12 = 1;
  else
    v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12 & 1;
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance PhoneCallVerbSemantics(uint64_t a1, uint64_t a2)
{
  return protocol witness for Hashable.hashValue.getter in conformance PhoneCallNLConstants(a1, a2, (void (*)(uint64_t))PhoneCallVerbSemantics.rawValue.getter);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance PhoneCallNLConstants(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  unsigned __int8 *v3;
  uint64_t v5;

  v5 = *v3;
  Hasher.init(_seed:)();
  a3(v5);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance PhoneCallVerbSemantics(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return protocol witness for Hashable.hash(into:) in conformance PhoneCallNLConstants(a1, a2, a3, (void (*)(_QWORD))PhoneCallVerbSemantics.rawValue.getter);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance PhoneCallNLConstants(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD))
{
  unsigned __int8 *v4;

  a4(*v4);
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallVerbSemantics(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallNLConstants(a1, a2, a3, (void (*)(uint64_t))PhoneCallVerbSemantics.rawValue.getter);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallNLConstants(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  unsigned __int8 *v4;
  uint64_t v6;

  v6 = *v4;
  Hasher.init(_seed:)();
  a4(v6);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

unint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallVerbSemantics@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = specialized PhoneCallVerbSemantics.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallVerbSemantics@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = PhoneCallVerbSemantics.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

PhoneSnippetUI::PhoneCallHandleType_optional __swiftcall PhoneCallHandleType.init(rawValue:)(Swift::String rawValue)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;
  PhoneSnippetUI::PhoneCallHandleType_optional v4;

  object = rawValue._object;
  v2._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of PhoneCallHandleType.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 == 1)
    v4.value = PhoneSnippetUI_PhoneCallHandleType_email;
  else
    v4.value = PhoneSnippetUI_PhoneCallHandleType_unknownDefault;
  if (v3)
    return v4;
  else
    return 0;
}

uint64_t PhoneCallHandleType.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6C69616D65;
  else
    return 0x656E6F6870;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallHandleType(char *a1, char *a2)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = PhoneCallHandleType.rawValue.getter(*a1);
  v5 = v4;
  if (v3 == PhoneCallHandleType.rawValue.getter(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance PhoneCallHandleType()
{
  char *v0;
  char v1;

  v1 = *v0;
  Hasher.init(_seed:)();
  PhoneCallHandleType.rawValue.getter(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance PhoneCallHandleType()
{
  char *v0;

  PhoneCallHandleType.rawValue.getter(*v0);
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallHandleType()
{
  char *v0;
  char v1;

  v1 = *v0;
  Hasher.init(_seed:)();
  PhoneCallHandleType.rawValue.getter(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallHandleType@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  Swift::Int v3;
  uint64_t result;
  char v5;

  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of PhoneCallHandleType.init(rawValue:), *a1);
  result = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *a2 = v5;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallHandleType@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = PhoneCallHandleType.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t specialized Collection.prefix(_:)(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    String.index(_:offsetBy:limitedBy:)();
    return String.subscript.getter();
  }
  return result;
}

unint64_t specialized Collection.dropFirst(_:)(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0)
      v3 = HIBYTE(a3) & 0xF;
    else
      v3 = a2 & 0xFFFFFFFFFFFFLL;
    v4 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v4 = 11;
    v5 = v4 | (v3 << 16);
    result = String.index(_:offsetBy:limitedBy:)();
    if ((v6 & 1) != 0)
      result = v5;
    if (4 * v3 >= result >> 14)
      return String.subscript.getter();
  }
  __break(1u);
  return result;
}

unint64_t lazy protocol witness table accessor for type Substring and conformance Substring()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Substring and conformance Substring;
  if (!lazy protocol witness table cache variable for type Substring and conformance Substring)
  {
    result = MEMORY[0x249501140](MEMORY[0x24BEE1E20], MEMORY[0x24BEE1E08]);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Substring and conformance Substring);
  }
  return result;
}

unint64_t specialized PhoneCallNLConstants.init(rawValue:)(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of PhoneCallNLConstants.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 0x10)
    return 16;
  else
    return v3;
}

unint64_t specialized PhoneCallConfirmationSemantics.init(rawValue:)(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of PhoneCallConfirmationSemantics.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 4)
    return 4;
  else
    return v3;
}

unint64_t specialized VoicemailVerbSemantics.init(rawValue:)(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of VoicemailVerbSemantics.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 5)
    return 5;
  else
    return v3;
}

unint64_t specialized PhoneCallVerbSemantics.init(rawValue:)(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of PhoneCallVerbSemantics.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 0xE)
    return 14;
  else
    return v3;
}

unint64_t lazy protocol witness table accessor for type PhoneCallNLConstants and conformance PhoneCallNLConstants()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneCallNLConstants and conformance PhoneCallNLConstants;
  if (!lazy protocol witness table cache variable for type PhoneCallNLConstants and conformance PhoneCallNLConstants)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneCallNLConstants, &type metadata for PhoneCallNLConstants);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallNLConstants and conformance PhoneCallNLConstants);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneCallConfirmationSemantics and conformance PhoneCallConfirmationSemantics()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneCallConfirmationSemantics and conformance PhoneCallConfirmationSemantics;
  if (!lazy protocol witness table cache variable for type PhoneCallConfirmationSemantics and conformance PhoneCallConfirmationSemantics)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneCallConfirmationSemantics, &type metadata for PhoneCallConfirmationSemantics);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallConfirmationSemantics and conformance PhoneCallConfirmationSemantics);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type VoicemailVerbSemantics and conformance VoicemailVerbSemantics()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type VoicemailVerbSemantics and conformance VoicemailVerbSemantics;
  if (!lazy protocol witness table cache variable for type VoicemailVerbSemantics and conformance VoicemailVerbSemantics)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for VoicemailVerbSemantics, &type metadata for VoicemailVerbSemantics);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VoicemailVerbSemantics and conformance VoicemailVerbSemantics);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneCallVerbSemantics and conformance PhoneCallVerbSemantics()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneCallVerbSemantics and conformance PhoneCallVerbSemantics;
  if (!lazy protocol witness table cache variable for type PhoneCallVerbSemantics and conformance PhoneCallVerbSemantics)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneCallVerbSemantics, &type metadata for PhoneCallVerbSemantics);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallVerbSemantics and conformance PhoneCallVerbSemantics);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneCallHandleType and conformance PhoneCallHandleType()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneCallHandleType and conformance PhoneCallHandleType;
  if (!lazy protocol witness table cache variable for type PhoneCallHandleType and conformance PhoneCallHandleType)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneCallHandleType, &type metadata for PhoneCallHandleType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallHandleType and conformance PhoneCallHandleType);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PhoneCallNLConstants(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF1)
    goto LABEL_17;
  if (a2 + 15 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 15) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 15;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 15;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 15;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x10;
  v8 = v6 - 16;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PhoneCallNLConstants(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 15 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 15) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF1)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF0)
    return ((uint64_t (*)(void))((char *)&loc_243AFC84C + 4 * byte_243B347E5[v4]))();
  *a1 = a2 + 15;
  return ((uint64_t (*)(void))((char *)sub_243AFC880 + 4 * byte_243B347E0[v4]))();
}

uint64_t sub_243AFC880(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_243AFC888(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x243AFC890);
  return result;
}

uint64_t sub_243AFC89C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x243AFC8A4);
  *(_BYTE *)result = a2 + 15;
  return result;
}

uint64_t sub_243AFC8A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_243AFC8B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PhoneCallNLConstants()
{
  return &type metadata for PhoneCallNLConstants;
}

uint64_t getEnumTagSinglePayload for PhoneCallConfirmationSemantics(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PhoneCallConfirmationSemantics(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_243AFC9A8 + 4 * byte_243B347EF[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_243AFC9DC + 4 * byte_243B347EA[v4]))();
}

uint64_t sub_243AFC9DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_243AFC9E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x243AFC9ECLL);
  return result;
}

uint64_t sub_243AFC9F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x243AFCA00);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_243AFCA04(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_243AFCA0C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PhoneCallConfirmationSemantics()
{
  return &type metadata for PhoneCallConfirmationSemantics;
}

uint64_t storeEnumTagSinglePayload for VoicemailVerbSemantics(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_243AFCA74 + 4 * byte_243B347F9[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_243AFCAA8 + 4 * byte_243B347F4[v4]))();
}

uint64_t sub_243AFCAA8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_243AFCAB0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x243AFCAB8);
  return result;
}

uint64_t sub_243AFCAC4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x243AFCACCLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_243AFCAD0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_243AFCAD8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VoicemailVerbSemantics()
{
  return &type metadata for VoicemailVerbSemantics;
}

uint64_t getEnumTagSinglePayload for PhoneCallVerbSemantics(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF3)
    goto LABEL_17;
  if (a2 + 13 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 13) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 13;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 13;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 13;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xE;
  v8 = v6 - 14;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PhoneCallVerbSemantics(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 13 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 13) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF2)
    return ((uint64_t (*)(void))((char *)&loc_243AFCBD0 + 4 * byte_243B34803[v4]))();
  *a1 = a2 + 13;
  return ((uint64_t (*)(void))((char *)sub_243AFCC04 + 4 * byte_243B347FE[v4]))();
}

uint64_t sub_243AFCC04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_243AFCC0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x243AFCC14);
  return result;
}

uint64_t sub_243AFCC20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x243AFCC28);
  *(_BYTE *)result = a2 + 13;
  return result;
}

uint64_t sub_243AFCC2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_243AFCC34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PhoneCallVerbSemantics()
{
  return &type metadata for PhoneCallVerbSemantics;
}

uint64_t storeEnumTagSinglePayload for PhoneCallHandleType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_243AFCC9C + 4 * byte_243B3480D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_243AFCCD0 + 4 * byte_243B34808[v4]))();
}

uint64_t sub_243AFCCD0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_243AFCCD8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x243AFCCE0);
  return result;
}

uint64_t sub_243AFCCEC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x243AFCCF4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_243AFCCF8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_243AFCD00(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PhoneCallHandleType()
{
  return &type metadata for PhoneCallHandleType;
}

uint64_t ShowPlayVoicemailSingleItemView.init(model:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  type metadata accessor for Context();
  lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
  *a2 = EnvironmentObject.init()();
  a2[1] = v4;
  v5 = type metadata accessor for ShowPlayVoicemailSingleItemView();
  ActionHandler.init()();
  return outlined init with take of SingleResultCallHistoryModel(a1, (uint64_t)a2 + *(int *)(v5 + 24), (uint64_t (*)(_QWORD))type metadata accessor for SingleVoicemailModel);
}

uint64_t type metadata accessor for ShowPlayVoicemailSingleItemView()
{
  uint64_t result;

  result = type metadata singleton initialization cache for ShowPlayVoicemailSingleItemView;
  if (!type metadata singleton initialization cache for ShowPlayVoicemailSingleItemView)
    return swift_getSingletonMetadata();
  return result;
}

void one-time initialization function for iconHeight()
{
  static ShowPlayVoicemailSingleItemView.iconHeight = 0x402E000000000000;
}

void one-time initialization function for iconWidth()
{
  static ShowPlayVoicemailSingleItemView.iconWidth = 0x402E000000000000;
}

uint64_t ShowPlayVoicemailSingleItemView.model.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ShowPlayVoicemailSingleItemView();
  return outlined init with copy of SearchCallHistoryBinaryButtonModel(v1 + *(int *)(v3 + 24), a1, (uint64_t (*)(_QWORD))type metadata accessor for SingleVoicemailModel);
}

uint64_t ShowPlayVoicemailSingleItemView.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = type metadata accessor for ShowPlayVoicemailSingleItemView();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  MEMORY[0x24BDAC7A8](v1);
  v4 = type metadata accessor for SimpleItemRichView();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BEADE98];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShowPlayVoicemailSingleItemView.getSimpleItemRichView()((uint64_t)v8);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v0, (uint64_t)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for ShowPlayVoicemailSingleItemView);
  v9 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v10 = swift_allocObject();
  outlined init with take of SingleResultCallHistoryModel((uint64_t)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9, (uint64_t (*)(_QWORD))type metadata accessor for ShowPlayVoicemailSingleItemView);
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type SimpleItemRichView and conformance SimpleItemRichView, v5, MEMORY[0x24BEADE78]);
  View.componentTapped(isNavigation:perform:)();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v4);
}

uint64_t ShowPlayVoicemailSingleItemView.getSimpleItemRichView()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v30 = a1;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(VStack<TupleView<(Text, Text)>>, <<opaque return type of View.componentTapped(isNavigation:perform:)>>.0)>>);
  MEMORY[0x24BDAC7A8](v29);
  v3 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (_QWORD *)(v1 + *(int *)(type metadata accessor for ShowPlayVoicemailSingleItemView() + 24));
  v5 = v4[3];
  v56 = v4[2];
  v57 = v5;
  lazy protocol witness table accessor for type String and conformance String();
  swift_bridgeObjectRetain();
  v6 = Text.init<A>(_:)();
  v8 = v7;
  v10 = v9 & 1;
  LODWORD(v56) = static HierarchicalShapeStyle.primary.getter();
  v11 = Text.foregroundStyle<A>(_:)();
  v13 = v12;
  v15 = v14;
  v28 = v16;
  outlined consume of Text.Storage(v6, v8, v10);
  swift_bridgeObjectRelease();
  v58 = MEMORY[0x24BDF1FA0];
  v59 = MEMORY[0x24BEAD6B8];
  v17 = swift_allocObject();
  v56 = v17;
  *(_QWORD *)(v17 + 16) = v11;
  *(_QWORD *)(v17 + 24) = v13;
  *(_BYTE *)(v17 + 32) = v15 & 1;
  *(_QWORD *)(v17 + 40) = v28;
  v55 = 0;
  v53 = 0u;
  v54 = 0u;
  v19 = v4[4];
  v18 = v4[5];
  v20 = v4;
  v51 = MEMORY[0x24BEE0D00];
  v52 = MEMORY[0x24BEAE5C0];
  v49 = v19;
  v50 = v18;
  swift_bridgeObjectRetain();
  *(_QWORD *)v3 = static VerticalAlignment.center.getter();
  *((_QWORD *)v3 + 1) = 0x4000000000000000;
  v3[16] = 0;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, TupleView<(VStack<TupleView<(Text, Text)>>, <<opaque return type of View.componentTapped(isNavigation:perform:)>>.0)>>);
  closure #1 in ShowPlayVoicemailSingleItemView.getDateAndInformationView.getter((uint64_t)&v3[*(int *)(v21 + 44)]);
  lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type HStack<TupleView<(VStack<TupleView<(Text, Text)>>, <<opaque return type of View.componentTapped(isNavigation:perform:)>>.0)>> and conformance HStack<A>, &demangling cache variable for type metadata for HStack<TupleView<(VStack<TupleView<(Text, Text)>>, <<opaque return type of View.componentTapped(isNavigation:perform:)>>.0)>>, MEMORY[0x24BDF44A0]);
  v22 = View.eraseToAnyView()();
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v3, &demangling cache variable for type metadata for HStack<TupleView<(VStack<TupleView<(Text, Text)>>, <<opaque return type of View.componentTapped(isNavigation:perform:)>>.0)>>);
  v23 = MEMORY[0x24BDF4788];
  v24 = MEMORY[0x24BEAD940];
  v47 = MEMORY[0x24BDF4788];
  v48 = MEMORY[0x24BEAD940];
  v46 = v22;
  v45 = 0;
  v43 = 0u;
  v44 = 0u;
  v42 = 0;
  v40 = 0u;
  v41 = 0u;
  v39 = 0;
  v37 = 0u;
  v38 = 0u;
  v36 = 0;
  v34 = 0u;
  v35 = 0u;
  if (*((_BYTE *)v20 + 80) == 1)
    v25 = ShowPlayVoicemailSingleItemView.readStatusIcon.getter();
  else
    v25 = ShowPlayVoicemailSingleItemView.emptyImageView.getter();
  v32 = v23;
  v33 = v24;
  v31 = v25;
  return SimpleItemRichView.init(text1:text2:text3:text4:text5:text6:text7:text8:thumbnail:)();
}

uint64_t closure #1 in ShowPlayVoicemailSingleItemView.body.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for InteractionType?);
  MEMORY[0x24BDAC7A8](v2);
  v43 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionProperty?);
  MEMORY[0x24BDAC7A8](v4);
  v42 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ShowPlayVoicemailSingleItemView();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ActionProperty();
  v44 = *(_QWORD *)(v12 - 8);
  v45 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionElementConvertible>);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_243B32430;
  v16 = type metadata accessor for Command();
  v17 = MEMORY[0x24BEAD1E8];
  *(_QWORD *)(v15 + 56) = v16;
  *(_QWORD *)(v15 + 64) = v17;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v15 + 32));
  v46 = v9;
  type metadata accessor for SingleVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  *boxed_opaque_existential_1 = CodableAceObject.wrappedValue.getter();
  *((_BYTE *)boxed_opaque_existential_1 + 8) = 0;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x24BEAD1C8], v16);
  v47 = v14;
  ActionProperty.init(_:)();
  if (one-time initialization token for phoneSnippetUI != -1)
    swift_once();
  v19 = type metadata accessor for Logger();
  __swift_project_value_buffer(v19, (uint64_t)static Logger.phoneSnippetUI);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(a1, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ShowPlayVoicemailSingleItemView);
  v20 = Logger.logObject.getter();
  v21 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc();
    v41 = v8;
    v23 = (uint8_t *)v22;
    v24 = swift_slowAlloc();
    v40 = a1;
    v25 = v24;
    *(_DWORD *)v23 = 136315138;
    v49 = v24;
    v26 = &v11[*(int *)(v46 + 24)];
    v27 = (uint64_t)v11;
    v29 = *((_QWORD *)v26 + 2);
    v28 = *((_QWORD *)v26 + 3);
    swift_bridgeObjectRetain();
    v48 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, v28, &v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined destroy of ShowPlayVoicemailSingleItemView(v27);
    _os_log_impl(&dword_243ABD000, v20, v21, "#ShowPlayVoicemailSingleItemView tapped, performing direct action for %s", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2495011B8](v25, -1, -1);
    v30 = v23;
    v8 = v41;
    MEMORY[0x2495011B8](v30, -1, -1);
  }
  else
  {
    outlined destroy of ShowPlayVoicemailSingleItemView((uint64_t)v11);
  }

  ActionHandler.wrappedValue.getter();
  v31 = type metadata accessor for StandardActionHandler();
  v32 = *(_QWORD *)(v31 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v8, 1, v31) == 1)
  {
    (*(void (**)(char *, uint64_t))(v44 + 8))(v47, v45);
    return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v8, &demangling cache variable for type metadata for StandardActionHandler?);
  }
  else
  {
    v35 = v44;
    v34 = v45;
    v36 = (uint64_t)v42;
    v37 = v47;
    (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v42, v47, v45);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v35 + 56))(v36, 0, 1, v34);
    v38 = type metadata accessor for InteractionType();
    v39 = (uint64_t)v43;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v43, 1, 1, v38);
    StandardActionHandler.perform(_:interactionType:)();
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v39, &demangling cache variable for type metadata for InteractionType?);
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v36, &demangling cache variable for type metadata for ActionProperty?);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v34);
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v8, v31);
  }
}

uint64_t associated type witness table accessor for View.Body : View in ShowPlayVoicemailSingleItemView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t ShowPlayVoicemailSingleItemView.readStatusIcon.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  _QWORD v9[5];
  char v10;
  uint64_t v11;
  char v12;
  __int128 v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  __int128 v18;

  v0 = type metadata accessor for Image.ResizingMode();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  Image.init(systemName:)();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BDF3FD8], v0);
  v4 = Image.resizable(capInsets:resizingMode:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v5 = static Color.blue.getter();
  KeyPath = swift_getKeyPath();
  if (one-time initialization token for iconWidth != -1)
    swift_once();
  if (one-time initialization token for iconHeight != -1)
    swift_once();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  v9[1] = v4;
  v9[2] = KeyPath;
  v9[3] = v5;
  v9[4] = v14;
  v10 = v15;
  v11 = v16;
  v12 = v17;
  v13 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout> and conformance <> ModifiedContent<A, B>();
  v7 = View.eraseToAnyView()();
  swift_release();
  swift_release();
  swift_release();
  return v7;
}

uint64_t ShowPlayVoicemailSingleItemView.emptyImageView.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[3];
  char v8;
  uint64_t v9;
  char v10;
  __int128 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  __int128 v16;

  v0 = type metadata accessor for Image.ResizingMode();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  Image.init(systemName:)();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BDF3FD8], v0);
  v4 = Image.resizable(capInsets:resizingMode:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (one-time initialization token for iconWidth != -1)
    swift_once();
  if (one-time initialization token for iconHeight != -1)
    swift_once();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  v7[1] = v4;
  v7[2] = v12;
  v8 = v13;
  v9 = v14;
  v10 = v15;
  v11 = v16;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Image, _FrameLayout>);
  lazy protocol witness table accessor for type ModifiedContent<Image, _FrameLayout> and conformance <> ModifiedContent<A, B>();
  v5 = View.eraseToAnyView()();
  swift_release();
  return v5;
}

uint64_t closure #1 in ShowPlayVoicemailSingleItemView.getDateAndInformationView.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void *v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[2];
  unsigned __int8 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 v45;
  uint64_t v46;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.componentTapped(isNavigation:perform:)>>.0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v25 - v10;
  v39 = static HorizontalAlignment.trailing.getter();
  closure #1 in closure #1 in ShowPlayVoicemailSingleItemView.getDateAndInformationView.getter((uint64_t)v40);
  v33 = v40[1];
  v34 = v40[0];
  v32 = v41;
  v31 = v42;
  v36 = v44;
  v37 = v43;
  v35 = v45;
  v38 = v46;
  type metadata accessor for ShowPlayVoicemailSingleItemView();
  type metadata accessor for SingleVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v12 = (void *)CodableAceObject.wrappedValue.getter();
  ActionHandler.wrappedValue.getter();
  static ContactInformationImage.getImage(directInvocation:actionHandler:)(v12, (uint64_t)v4, (uint64_t)v9);

  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v4, &demangling cache variable for type metadata for StandardActionHandler?);
  v29 = v6;
  v30 = v11;
  v13 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v26 = v5;
  v13(v11, v9, v5);
  v27 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v28 = v9;
  v27(v9, v11, v5);
  v14 = v38;
  *(_QWORD *)a1 = v39;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  v16 = v33;
  v15 = v34;
  *(_QWORD *)(a1 + 24) = v34;
  *(_QWORD *)(a1 + 32) = v16;
  LOBYTE(v5) = v32;
  *(_BYTE *)(a1 + 40) = v32;
  v18 = v36;
  v17 = v37;
  *(_QWORD *)(a1 + 48) = v31;
  *(_QWORD *)(a1 + 56) = v17;
  *(_QWORD *)(a1 + 64) = v18;
  v19 = v35;
  *(_BYTE *)(a1 + 72) = v35;
  *(_QWORD *)(a1 + 80) = v14;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (VStack<TupleView<(Text, Text)>>, <<opaque return type of View.componentTapped(isNavigation:perform:)>>.0));
  v21 = v9;
  v22 = v26;
  v27((char *)(a1 + *(int *)(v20 + 48)), v21, v26);
  outlined copy of Text.Storage(v15, v16, v5);
  swift_bridgeObjectRetain();
  outlined copy of Text.Storage(v17, v18, v19);
  v23 = *(void (**)(char *, uint64_t))(v29 + 8);
  swift_bridgeObjectRetain();
  v23(v30, v22);
  v23(v28, v22);
  outlined consume of Text.Storage(v15, v16, v5);
  swift_bridgeObjectRelease();
  outlined consume of Text.Storage(v17, v18, v19);
  return swift_bridgeObjectRelease();
}

uint64_t closure #1 in closure #1 in ShowPlayVoicemailSingleItemView.getDateAndInformationView.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  type metadata accessor for ShowPlayVoicemailSingleItemView();
  lazy protocol witness table accessor for type String and conformance String();
  swift_bridgeObjectRetain();
  v2 = Text.init<A>(_:)();
  v20 = v3;
  v21 = v2;
  v22 = v4;
  v19 = v5 & 1;
  swift_bridgeObjectRetain();
  v6 = Text.init<A>(_:)();
  v8 = v7;
  v10 = v9 & 1;
  static Color.gray.getter();
  v11 = Text.foregroundStyle<A>(_:)();
  v13 = v12;
  v15 = v14;
  v17 = v16 & 1;
  outlined consume of Text.Storage(v6, v8, v10);
  swift_release();
  swift_bridgeObjectRelease();
  *(_QWORD *)a1 = v21;
  *(_QWORD *)(a1 + 8) = v20;
  *(_BYTE *)(a1 + 16) = v19;
  *(_QWORD *)(a1 + 24) = v22;
  *(_QWORD *)(a1 + 32) = v11;
  *(_QWORD *)(a1 + 40) = v13;
  *(_BYTE *)(a1 + 48) = v17;
  *(_QWORD *)(a1 + 56) = v15;
  outlined copy of Text.Storage(v21, v20, v19);
  swift_bridgeObjectRetain();
  outlined copy of Text.Storage(v11, v13, v17);
  swift_bridgeObjectRetain();
  outlined consume of Text.Storage(v11, v13, v17);
  swift_bridgeObjectRelease();
  outlined consume of Text.Storage(v21, v20, v19);
  return swift_bridgeObjectRelease();
}

uint64_t protocol witness for View.body.getter in conformance ShowPlayVoicemailSingleItemView(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = *(_QWORD *)(a1 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v4 = type metadata accessor for SimpleItemRichView();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BEADE98];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShowPlayVoicemailSingleItemView.getSimpleItemRichView()((uint64_t)v8);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v1, (uint64_t)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for ShowPlayVoicemailSingleItemView);
  v9 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v10 = swift_allocObject();
  outlined init with take of SingleResultCallHistoryModel((uint64_t)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9, (uint64_t (*)(_QWORD))type metadata accessor for ShowPlayVoicemailSingleItemView);
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type SimpleItemRichView and conformance SimpleItemRichView, v5, MEMORY[0x24BEADE78]);
  View.componentTapped(isNavigation:perform:)();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v4);
}

char *initializeBufferWithCopyOfBuffer for ShowPlayVoicemailSingleItemView(char *a1, char **a2, uint64_t a3)
{
  int v3;
  char *v4;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  char *v29;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v7 = a1;
    *((_QWORD *)a1 + 1) = a2[1];
    v8 = *(int *)(a3 + 20);
    v9 = &a1[v8];
    v10 = (uint64_t)a2 + v8;
    v11 = type metadata accessor for ActionHandler();
    v12 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v13 = v4;
    v12(v9, v10, v11);
    v14 = *(int *)(a3 + 24);
    v15 = &v7[v14];
    v16 = (uint64_t)a2 + v14;
    v17 = *(uint64_t *)((char *)a2 + v14);
    v18 = *(_QWORD *)(v16 + 8);
    *(_QWORD *)v15 = v17;
    *((_QWORD *)v15 + 1) = v18;
    v19 = *(_QWORD *)(v16 + 24);
    *((_QWORD *)v15 + 2) = *(_QWORD *)(v16 + 16);
    *((_QWORD *)v15 + 3) = v19;
    v20 = *(_QWORD *)(v16 + 40);
    *((_QWORD *)v15 + 4) = *(_QWORD *)(v16 + 32);
    *((_QWORD *)v15 + 5) = v20;
    v21 = *(_QWORD *)(v16 + 56);
    *((_QWORD *)v15 + 6) = *(_QWORD *)(v16 + 48);
    *((_QWORD *)v15 + 7) = v21;
    v22 = *(_QWORD *)(v16 + 72);
    *((_QWORD *)v15 + 8) = *(_QWORD *)(v16 + 64);
    *((_QWORD *)v15 + 9) = v22;
    v15[80] = *(_BYTE *)(v16 + 80);
    v23 = type metadata accessor for SingleVoicemailModel();
    v24 = *(int *)(v23 + 40);
    v29 = &v15[v24];
    v25 = v16 + v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    v27 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
    v27(v29, v25, v26);
    v27(&v15[*(int *)(v23 + 44)], v16 + *(int *)(v23 + 44), v26);
  }
  return v7;
}

uint64_t destroy for ShowPlayVoicemailSingleItemView(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (*v11)(char *, uint64_t);

  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = (char *)a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = type metadata accessor for SingleVoicemailModel();
  v8 = &v6[*(int *)(v7 + 40)];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v11 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
  v11(v8, v9);
  return ((uint64_t (*)(char *, uint64_t))v11)(&v6[*(int *)(v7 + 44)], v9);
}

_QWORD *initializeWithCopy for ShowPlayVoicemailSingleItemView(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  id v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  char *v29;

  v7 = *(void **)a2;
  v6 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v6;
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for ActionHandler();
  v12 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  v13 = v7;
  v12(v9, v10, v11);
  v14 = *(int *)(a3 + 24);
  v15 = (char *)a1 + v14;
  v16 = a2 + v14;
  v17 = *(_QWORD *)(a2 + v14 + 8);
  *(_QWORD *)v15 = *(_QWORD *)(a2 + v14);
  *((_QWORD *)v15 + 1) = v17;
  v18 = *(_QWORD *)(a2 + v14 + 16);
  v19 = *(_QWORD *)(v16 + 24);
  *((_QWORD *)v15 + 2) = v18;
  *((_QWORD *)v15 + 3) = v19;
  v20 = *(_QWORD *)(v16 + 40);
  *((_QWORD *)v15 + 4) = *(_QWORD *)(v16 + 32);
  *((_QWORD *)v15 + 5) = v20;
  v21 = *(_QWORD *)(v16 + 56);
  *((_QWORD *)v15 + 6) = *(_QWORD *)(v16 + 48);
  *((_QWORD *)v15 + 7) = v21;
  v22 = *(_QWORD *)(v16 + 72);
  *((_QWORD *)v15 + 8) = *(_QWORD *)(v16 + 64);
  *((_QWORD *)v15 + 9) = v22;
  v15[80] = *(_BYTE *)(v16 + 80);
  v23 = type metadata accessor for SingleVoicemailModel();
  v24 = *(int *)(v23 + 40);
  v29 = &v15[v24];
  v25 = v16 + v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v27 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
  v27(v29, v25, v26);
  v27(&v15[*(int *)(v23 + 44)], v16 + *(int *)(v23 + 44), v26);
  return a1;
}

uint64_t assignWithCopy for ShowPlayVoicemailSingleItemView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);

  v6 = *(void **)a1;
  v7 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v7;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v9 = *(int *)(a3 + 20);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v13 = *(int *)(a3 + 24);
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_QWORD *)v14 = *(_QWORD *)(a2 + v13);
  *(_QWORD *)(v14 + 8) = *(_QWORD *)(a2 + v13 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v14 + 16) = *(_QWORD *)(v15 + 16);
  *(_QWORD *)(v14 + 24) = *(_QWORD *)(v15 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v14 + 32) = *(_QWORD *)(v15 + 32);
  *(_QWORD *)(v14 + 40) = *(_QWORD *)(v15 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v14 + 48) = *(_QWORD *)(v15 + 48);
  *(_QWORD *)(v14 + 56) = *(_QWORD *)(v15 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v14 + 64) = *(_QWORD *)(v15 + 64);
  *(_QWORD *)(v14 + 72) = *(_QWORD *)(v15 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v14 + 80) = *(_BYTE *)(v15 + 80);
  v16 = type metadata accessor for SingleVoicemailModel();
  v17 = *(int *)(v16 + 40);
  v18 = v14 + v17;
  v19 = v15 + v17;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 24);
  v21(v18, v19, v20);
  v21(v14 + *(int *)(v16 + 44), v15 + *(int *)(v16 + 44), v20);
  return a1;
}

_OWORD *initializeWithTake for ShowPlayVoicemailSingleItemView(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = *(_OWORD *)((char *)a2 + v10 + 16);
  *(_OWORD *)v11 = *(_OWORD *)((char *)a2 + v10);
  *((_OWORD *)v11 + 1) = v13;
  v14 = *(_OWORD *)((char *)a2 + v10 + 48);
  *((_OWORD *)v11 + 2) = *(_OWORD *)((char *)a2 + v10 + 32);
  *((_OWORD *)v11 + 3) = v14;
  *((_OWORD *)v11 + 4) = *(_OWORD *)((char *)a2 + v10 + 64);
  v11[80] = *((_BYTE *)a2 + v10 + 80);
  v15 = type metadata accessor for SingleVoicemailModel();
  v16 = *(int *)(v15 + 40);
  v17 = &v11[v16];
  v18 = &v12[v16];
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32);
  v20(v17, v18, v19);
  v20(&v11[*(int *)(v15 + 44)], &v12[*(int *)(v15 + 44)], v19);
  return a1;
}

uint64_t assignWithTake for ShowPlayVoicemailSingleItemView(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(uint64_t, char *, uint64_t);

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  *(_QWORD *)(a1 + 8) = a2[1];
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = *(_QWORD *)((char *)a2 + v11 + 8);
  *(_QWORD *)v12 = *(_QWORD *)((char *)a2 + v11);
  *(_QWORD *)(v12 + 8) = v14;
  swift_bridgeObjectRelease();
  v15 = *((_QWORD *)v13 + 3);
  *(_QWORD *)(v12 + 16) = *((_QWORD *)v13 + 2);
  *(_QWORD *)(v12 + 24) = v15;
  swift_bridgeObjectRelease();
  v16 = *((_QWORD *)v13 + 5);
  *(_QWORD *)(v12 + 32) = *((_QWORD *)v13 + 4);
  *(_QWORD *)(v12 + 40) = v16;
  swift_bridgeObjectRelease();
  v17 = *((_QWORD *)v13 + 7);
  *(_QWORD *)(v12 + 48) = *((_QWORD *)v13 + 6);
  *(_QWORD *)(v12 + 56) = v17;
  swift_bridgeObjectRelease();
  v18 = *((_QWORD *)v13 + 9);
  *(_QWORD *)(v12 + 64) = *((_QWORD *)v13 + 8);
  *(_QWORD *)(v12 + 72) = v18;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 80) = v13[80];
  v19 = type metadata accessor for SingleVoicemailModel();
  v20 = *(int *)(v19 + 40);
  v21 = v12 + v20;
  v22 = &v13[v20];
  v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v24 = *(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 40);
  v24(v21, v22, v23);
  v24(v12 + *(int *)(v19 + 44), &v13[*(int *)(v19 + 44)], v23);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShowPlayVoicemailSingleItemView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_243AFE7C8(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = type metadata accessor for ActionHandler();
    v10 = *(_QWORD *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v9;
      v12 = *(int *)(a3 + 20);
    }
    else
    {
      v11 = type metadata accessor for SingleVoicemailModel();
      v10 = *(_QWORD *)(v11 - 8);
      v12 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(&a1[v12], a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for ShowPlayVoicemailSingleItemView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_243AFE880(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)result = a2;
  }
  else
  {
    v8 = type metadata accessor for ActionHandler();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = type metadata accessor for SingleVoicemailModel();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

uint64_t type metadata completion function for ShowPlayVoicemailSingleItemView()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for ActionHandler();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for SingleVoicemailModel();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t objectdestroyTm_8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);

  v1 = type metadata accessor for ShowPlayVoicemailSingleItemView();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (id *)(v0 + ((v2 + 16) & ~v2));

  v4 = (char *)v3 + *(int *)(v1 + 20);
  v5 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = (char *)v3 + *(int *)(v1 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = type metadata accessor for SingleVoicemailModel();
  v8 = &v6[*(int *)(v7 + 40)];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v10 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
  v10(v8, v9);
  v10(&v6[*(int *)(v7 + 44)], v9);
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ShowPlayVoicemailSingleItemView.body.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ShowPlayVoicemailSingleItemView() - 8) + 80);
  return closure #1 in ShowPlayVoicemailSingleItemView.body.getter(v0 + ((v1 + 16) & ~v1));
}

uint64_t outlined destroy of ShowPlayVoicemailSingleItemView(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ShowPlayVoicemailSingleItemView();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = specialized _StringGuts._deconstructUTF8<A>(scratch:)(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      outlined init with copy of Any((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      outlined init with copy of Any((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t specialized _StringGuts._deconstructUTF8<A>(scratch:)(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            UnsafeMutableRawBufferPointer.subscript.setter();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = _StringGuts._allocateForDeconstruct()(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = _StringObject.sharedUTF8.getter();
  if (!v8)
  {
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
LABEL_17:
    result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t _StringGuts._allocateForDeconstruct()(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = specialized _copyCollectionToContiguousArray<A>(_:)(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t specialized _copyCollectionToContiguousArray<A>(_:)(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = specialized _ContiguousArrayBuffer.init(_uninitializedCount:minimumCapacity:)(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = _StringGuts.copyUTF8(into:)();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
LABEL_10:
      v2 = String.UTF8View._foreignCount()();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
LABEL_14:
    result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *specialized _ContiguousArrayBuffer.init(_uninitializedCount:minimumCapacity:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UInt8>);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UInt8>);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_243AFF164()
{
  uint64_t v0;

  outlined consume of Text.Storage(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>();
    v2[1] = MEMORY[0x24BDEBED8];
    result = MEMORY[0x249501140](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>);
    v2 = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color?>, MEMORY[0x24BDF1020]);
    v3[0] = MEMORY[0x24BDF40F0];
    v3[1] = v2;
    result = MEMORY[0x249501140](MEMORY[0x24BDED300], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Image, _FrameLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<Image, _FrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Image, _FrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Image, _FrameLayout>);
    v2[0] = MEMORY[0x24BDF40F0];
    v2[1] = MEMORY[0x24BDEBED8];
    result = MEMORY[0x249501140](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Image, _FrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

void UpdateResponseCommand<>.submitUpdate(to:aceServiceInvoker:)(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t updated;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  Class isa;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v26 = a4;
  v28 = a5;
  v25 = a3;
  v7 = type metadata accessor for UUID();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE819C0]), sel_init);
  UUID.init()();
  v12 = UUID.uuidString.getter();
  v14 = v13;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v15 = (void *)MEMORY[0x249500990](v12, v14);
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_setAceId_, v15);

  v16 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
  v17 = (void *)MEMORY[0x249500990](v16);
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_setViewId_, v17);

  v18 = v27;
  updated = dispatch thunk of UpdateResponseCommand.serializeData()();
  if (!v18)
  {
    v21 = updated;
    v22 = v20;
    isa = Data._bridgeToObjectiveC()().super.isa;
    outlined consume of Data._Representation(v21, v22);
    objc_msgSend(v11, sel_setStateData_, isa);

    __swift_project_boxed_opaque_existential_1(v25, v25[3]);
    AceServiceInvokerAsync.submitAndForget(_:)();
  }

}

void *EmergencyCountdownConfiguration.countdownUpdateFrequency.unsafeMutableAddressor()
{
  return &static EmergencyCountdownConfiguration.countdownUpdateFrequency;
}

__n128 specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  uint64_t v13;
  void *v23;
  uint64_t v24;
  _OWORD *v25;
  __n128 result;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __n128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;

  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();

  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  v24 = type metadata accessor for ButtonStyleConfiguration.Label();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(a9, v13, v24);
  v25 = (_OWORD *)(a9
                 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>)
                          + 36));
  v25[4] = v31;
  v25[5] = v32;
  v25[6] = v33;
  *v25 = v27;
  v25[1] = v28;
  result = v30;
  v25[2] = v29;
  v25[3] = v30;
  return result;
}

uint64_t specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19)
{
  uint64_t v20;
  char v21;
  uint64_t v22;
  void *v31;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;

  v20 = a19;
  v21 = a18;
  v22 = a17;
  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    v31 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();

    v21 = a18;
    v20 = a19;
    v22 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  *(_QWORD *)a9 = a16;
  *(_QWORD *)(a9 + 8) = v22;
  *(_BYTE *)(a9 + 16) = v21 & 1;
  *(_QWORD *)(a9 + 24) = v20;
  *(_OWORD *)(a9 + 96) = v37;
  *(_OWORD *)(a9 + 112) = v38;
  *(_OWORD *)(a9 + 128) = v39;
  *(_OWORD *)(a9 + 32) = v33;
  *(_OWORD *)(a9 + 48) = v34;
  *(_OWORD *)(a9 + 64) = v35;
  *(_OWORD *)(a9 + 80) = v36;
  outlined copy of Text.Storage(a16, v22, v21 & 1);
  return swift_bridgeObjectRetain();
}

uint64_t specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  _OWORD *v13;
  void *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;

  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();

  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  v24 = v13[7];
  a9[6] = v13[6];
  a9[7] = v24;
  *(_OWORD *)((char *)a9 + 121) = *(_OWORD *)((char *)v13 + 121);
  v25 = v13[3];
  a9[2] = v13[2];
  a9[3] = v25;
  v26 = v13[5];
  a9[4] = v13[4];
  a9[5] = v26;
  v27 = v13[1];
  *a9 = *v13;
  a9[1] = v27;
  a9[13] = v33;
  a9[14] = v34;
  a9[15] = v35;
  a9[9] = v29;
  a9[10] = v30;
  a9[11] = v31;
  a9[12] = v32;
  return outlined retain of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>((uint64_t)v13);
}

uint64_t specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  uint64_t v13;
  void *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;

  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();

  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  v24 = *(_OWORD *)(v13 + 80);
  *(_OWORD *)(a9 + 64) = *(_OWORD *)(v13 + 64);
  *(_OWORD *)(a9 + 80) = v24;
  *(_BYTE *)(a9 + 96) = *(_BYTE *)(v13 + 96);
  v25 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v13;
  *(_OWORD *)(a9 + 16) = v25;
  v26 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(a9 + 48) = v26;
  *(_OWORD *)(a9 + 104) = v28;
  *(_OWORD *)(a9 + 120) = v29;
  *(_OWORD *)(a9 + 136) = v30;
  *(_OWORD *)(a9 + 200) = v34;
  *(_OWORD *)(a9 + 184) = v33;
  *(_OWORD *)(a9 + 168) = v32;
  *(_OWORD *)(a9 + 152) = v31;
  return outlined retain of ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>(v13);
}

uint64_t *Color.emergencyRed.unsafeMutableAddressor()
{
  if (one-time initialization token for emergencyRed != -1)
    swift_once();
  return &static Color.emergencyRed;
}

uint64_t *NSNotificationName.counterPosition.unsafeMutableAddressor()
{
  if (one-time initialization token for counterPosition != -1)
    swift_once();
  return &static NSNotificationName.counterPosition;
}

uint64_t *EmergencyCountdownConfiguration.animationStepKey.unsafeMutableAddressor()
{
  if (one-time initialization token for animationStepKey != -1)
    swift_once();
  return &static EmergencyCountdownConfiguration.animationStepKey;
}

void *EmergencyCountdownConfiguration.countdownNumberOfSteps.unsafeMutableAddressor()
{
  return &static EmergencyCountdownConfiguration.countdownNumberOfSteps;
}

uint64_t static EmergencyCountdownConfiguration.countdownNumberOfSteps.getter()
{
  return 3;
}

uint64_t static EmergencyCountdownConfiguration.countdownUpdateFrequency.getter()
{
  return 2;
}

void one-time initialization function for animationStepKey()
{
  strcpy((char *)&static EmergencyCountdownConfiguration.animationStepKey, "animationStep");
  *(_WORD *)&algn_2572EAFF8[6] = -4864;
}

uint64_t static EmergencyCountdownConfiguration.animationStepKey.getter()
{
  uint64_t v0;

  if (one-time initialization token for animationStepKey != -1)
    swift_once();
  v0 = static EmergencyCountdownConfiguration.animationStepKey;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t one-time initialization function for counterPosition()
{
  uint64_t result;

  result = MEMORY[0x249500990](0x507265746E756F63, 0xEF6E6F697469736FLL);
  static NSNotificationName.counterPosition = result;
  return result;
}

id static NSNotificationName.counterPosition.getter()
{
  if (one-time initialization token for counterPosition != -1)
    swift_once();
  return (id)static NSNotificationName.counterPosition;
}

uint64_t one-time initialization function for shared()
{
  uint64_t result;

  type metadata accessor for EmergencyCountdownViewModel(0);
  swift_allocObject();
  result = EmergencyCountdownViewModel.().init()();
  static EmergencyCountdownViewModel.shared = result;
  return result;
}

uint64_t *EmergencyCountdownViewModel.shared.unsafeMutableAddressor()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  return &static EmergencyCountdownViewModel.shared;
}

uint64_t static EmergencyCountdownViewModel.shared.getter()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  swift_beginAccess();
  return swift_retain();
}

uint64_t static EmergencyCountdownViewModel.shared.setter(uint64_t a1)
{
  if (one-time initialization token for shared != -1)
    swift_once();
  swift_beginAccess();
  static EmergencyCountdownViewModel.shared = a1;
  return swift_release();
}

uint64_t (*static EmergencyCountdownViewModel.shared.modify())()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  swift_beginAccess();
  return static EmergencyCountdownViewModel.shared.modify;
}

uint64_t EmergencyCountdownViewModel.().init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  void (*v45)(uint64_t, char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, char *, uint64_t);
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>);
  v58 = *(_QWORD *)(v2 - 8);
  v59 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v57 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>);
  v54 = *(_QWORD *)(v4 - 8);
  v55 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Publishers.Autoconnect<NSTimer.TimerPublisher>>);
  v52 = *(_QWORD *)(v7 - 8);
  v53 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v51 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGFloat>);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Int>);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel_model;
  v21 = type metadata accessor for EmergencyCountdownModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
  v22 = v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__counter;
  v60 = 3;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v22, v19, v16);
  v23 = v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__animationStep;
  v60 = 0;
  Published.init(initialValue:)();
  v56 = *(void (**)(uint64_t, char *, uint64_t))(v13 + 32);
  v24 = v15;
  v56(v23, v15, v12);
  v25 = v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__timer;
  type metadata accessor for SABaseClientBoundCommand(0, (unint64_t *)&lazy cache variable for type metadata for NSTimer);
  v26 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
  v27 = type metadata accessor for NSRunLoop.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v11, 1, 1, v27);
  v28 = static NSTimer.publish(every:tolerance:on:in:options:)();

  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v11, &demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  v60 = v28;
  type metadata accessor for NSTimer.TimerPublisher();
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher, (uint64_t (*)(uint64_t))MEMORY[0x24BDD01C8], MEMORY[0x24BDD01B0]);
  v29 = ConnectablePublisher.autoconnect()();
  swift_release();
  v60 = v29;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.Autoconnect<NSTimer.TimerPublisher>);
  v30 = v51;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v52 + 32))(v25, v30, v53);
  v31 = v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__sashTitle;
  v60 = 0;
  v61 = 0xE000000000000000;
  Published.init(initialValue:)();
  v32 = v55;
  v33 = *(void (**)(uint64_t, char *, uint64_t))(v54 + 32);
  v33(v31, v6, v55);
  v34 = v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__cancelButtonText;
  v60 = 0;
  v61 = 0xE000000000000000;
  Published.init(initialValue:)();
  v33(v34, v6, v32);
  v35 = v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__cancelledText;
  v60 = 0;
  v61 = 0xE000000000000000;
  Published.init(initialValue:)();
  v33(v35, v6, v32);
  v36 = v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__callButtonText;
  v60 = 0;
  v61 = 0xE000000000000000;
  Published.init(initialValue:)();
  v33(v36, v6, v32);
  v37 = v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__dialog;
  v60 = 0;
  v61 = 0xE000000000000000;
  Published.init(initialValue:)();
  v33(v37, v6, v32);
  v38 = v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__localeIdentifier;
  v60 = 0;
  v61 = 0xE000000000000000;
  Published.init(initialValue:)();
  v33(v38, v6, v32);
  v39 = v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__callingLabel;
  v60 = 0;
  v61 = 0xE000000000000000;
  Published.init(initialValue:)();
  v33(v39, v6, v32);
  v40 = v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__emergencyServicesLabel;
  v60 = 0;
  v61 = 0xE000000000000000;
  Published.init(initialValue:)();
  v33(v40, v6, v32);
  v41 = v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__sos;
  v60 = 0;
  v61 = 0xE000000000000000;
  Published.init(initialValue:)();
  v33(v41, v6, v32);
  v42 = v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__isCounterOnLastStep;
  LOBYTE(v60) = 0;
  v43 = v57;
  Published.init(initialValue:)();
  v44 = v59;
  v45 = *(void (**)(uint64_t, char *, uint64_t))(v58 + 32);
  v45(v42, v43, v59);
  v46 = v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__timerCancelledByUser;
  LOBYTE(v60) = 0;
  Published.init(initialValue:)();
  v45(v46, v43, v44);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel_sliderIsAtMax) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel_startLocation) = 0;
  v47 = v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__currentTranslation;
  v60 = 0;
  Published.init(initialValue:)();
  v56(v47, v24, v12);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel_currentOffset) = 0;
  v48 = OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel_notificationCenter;
  *(_QWORD *)(v1 + v48) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16D0]), sel_init);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel____lazy_storage___numberFormatter) = 0;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel_initialized) = 0;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel_timerCancelled) = 0;
  return v1;
}

uint64_t property wrapper backing initializer of EmergencyCountdownViewModel.counter()
{
  return Published.init(initialValue:)();
}

uint64_t property wrapper backing initializer of EmergencyCountdownViewModel.animationStep()
{
  return Published.init(initialValue:)();
}

uint64_t property wrapper backing initializer of EmergencyCountdownViewModel.timer()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.Autoconnect<NSTimer.TimerPublisher>);
  return Published.init(initialValue:)();
}

uint64_t property wrapper backing initializer of EmergencyCountdownViewModel.callingLabel()
{
  return Published.init(initialValue:)();
}

uint64_t property wrapper backing initializer of EmergencyCountdownViewModel.isCounterOnLastStep()
{
  return Published.init(initialValue:)();
}

uint64_t key path getter for EmergencyCountdownViewModel.counter : EmergencyCountdownViewModel@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 296))();
  *a2 = result;
  return result;
}

uint64_t key path setter for EmergencyCountdownViewModel.counter : EmergencyCountdownViewModel(_QWORD *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 304))(*a1);
}

uint64_t EmergencyCountdownViewModel.counter.getter()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t EmergencyCountdownViewModel.counter.setter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return static Published.subscript.setter();
}

uint64_t (*EmergencyCountdownViewModel.counter.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return EmergencyCountdownViewModel.counter.modify;
}

uint64_t key path setter for EmergencyCountdownViewModel.$counter : EmergencyCountdownViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Int>.Publisher);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 328))(v6);
}

uint64_t EmergencyCountdownViewModel.$counter.getter()
{
  return EmergencyCountdownViewModel.$counter.getter((uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__counter, &demangling cache variable for type metadata for Published<Int>);
}

uint64_t EmergencyCountdownViewModel.$counter.setter(uint64_t a1)
{
  return EmergencyCountdownViewModel.$counter.setter(a1, &demangling cache variable for type metadata for Published<Int>.Publisher, (uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__counter, &demangling cache variable for type metadata for Published<Int>);
}

uint64_t (*EmergencyCountdownViewModel.$counter.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Int>.Publisher);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__counter;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Int>);
  Published.projectedValue.getter();
  swift_endAccess();
  return EmergencyCountdownViewModel.$counter.modify;
}

void key path getter for EmergencyCountdownViewModel.animationStep : EmergencyCountdownViewModel(uint64_t a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))(**(_QWORD **)a1 + 344))();
}

uint64_t key path setter for EmergencyCountdownViewModel.animationStep : EmergencyCountdownViewModel(double *a1, uint64_t a2)
{
  return (*(uint64_t (**)(double))(**(_QWORD **)a2 + 352))(*a1);
}

double EmergencyCountdownViewModel.animationStep.getter()
{
  return EmergencyCountdownViewModel.animationStep.getter();
}

{
  double v1;

  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t EmergencyCountdownViewModel.animationStep.setter()
{
  return EmergencyCountdownViewModel.animationStep.setter();
}

{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return static Published.subscript.setter();
}

uint64_t (*EmergencyCountdownViewModel.animationStep.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return EmergencyCountdownViewModel.counter.modify;
}

uint64_t key path setter for EmergencyCountdownViewModel.$animationStep : EmergencyCountdownViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGFloat>.Publisher);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 376))(v6);
}

uint64_t EmergencyCountdownViewModel.$animationStep.getter()
{
  return EmergencyCountdownViewModel.$counter.getter((uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__animationStep, &demangling cache variable for type metadata for Published<CGFloat>);
}

uint64_t EmergencyCountdownViewModel.$animationStep.setter(uint64_t a1)
{
  return EmergencyCountdownViewModel.$counter.setter(a1, &demangling cache variable for type metadata for Published<CGFloat>.Publisher, (uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__animationStep, &demangling cache variable for type metadata for Published<CGFloat>);
}

uint64_t (*EmergencyCountdownViewModel.$animationStep.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGFloat>.Publisher);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__animationStep;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGFloat>);
  Published.projectedValue.getter();
  swift_endAccess();
  return EmergencyCountdownViewModel.$counter.modify;
}

uint64_t key path getter for EmergencyCountdownViewModel.timer : EmergencyCountdownViewModel@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 392))();
  *a2 = result;
  return result;
}

uint64_t key path setter for EmergencyCountdownViewModel.timer : EmergencyCountdownViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 400);
  v3 = swift_retain();
  return v2(v3);
}

uint64_t EmergencyCountdownViewModel.timer.getter()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t EmergencyCountdownViewModel.timer.setter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return static Published.subscript.setter();
}

uint64_t (*EmergencyCountdownViewModel.timer.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return EmergencyCountdownViewModel.counter.modify;
}

uint64_t key path setter for EmergencyCountdownViewModel.$timer : EmergencyCountdownViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Publishers.Autoconnect<NSTimer.TimerPublisher>>.Publisher);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 424))(v6);
}

uint64_t EmergencyCountdownViewModel.$timer.getter()
{
  return EmergencyCountdownViewModel.$counter.getter((uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__timer, &demangling cache variable for type metadata for Published<Publishers.Autoconnect<NSTimer.TimerPublisher>>);
}

uint64_t EmergencyCountdownViewModel.$timer.setter(uint64_t a1)
{
  return EmergencyCountdownViewModel.$counter.setter(a1, &demangling cache variable for type metadata for Published<Publishers.Autoconnect<NSTimer.TimerPublisher>>.Publisher, (uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__timer, &demangling cache variable for type metadata for Published<Publishers.Autoconnect<NSTimer.TimerPublisher>>);
}

uint64_t (*EmergencyCountdownViewModel.$timer.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Publishers.Autoconnect<NSTimer.TimerPublisher>>.Publisher);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__timer;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Publishers.Autoconnect<NSTimer.TimerPublisher>>);
  Published.projectedValue.getter();
  swift_endAccess();
  return EmergencyCountdownViewModel.$counter.modify;
}

uint64_t key path getter for EmergencyCountdownViewModel.sashTitle : EmergencyCountdownViewModel@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 440))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t key path setter for EmergencyCountdownViewModel.sashTitle : EmergencyCountdownViewModel(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 448);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t EmergencyCountdownViewModel.sashTitle.getter()
{
  return EmergencyCountdownViewModel.sashTitle.getter();
}

{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t EmergencyCountdownViewModel.sashTitle.setter()
{
  return EmergencyCountdownViewModel.sashTitle.setter();
}

{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return static Published.subscript.setter();
}

uint64_t (*EmergencyCountdownViewModel.sashTitle.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return EmergencyCountdownViewModel.counter.modify;
}

uint64_t key path setter for EmergencyCountdownViewModel.$sashTitle : EmergencyCountdownViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>.Publisher);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 472))(v6);
}

uint64_t EmergencyCountdownViewModel.$sashTitle.getter()
{
  return EmergencyCountdownViewModel.$counter.getter((uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__sashTitle, &demangling cache variable for type metadata for Published<String>);
}

uint64_t EmergencyCountdownViewModel.$sashTitle.setter(uint64_t a1)
{
  return EmergencyCountdownViewModel.$counter.setter(a1, &demangling cache variable for type metadata for Published<String>.Publisher, (uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__sashTitle, &demangling cache variable for type metadata for Published<String>);
}

uint64_t (*EmergencyCountdownViewModel.$sashTitle.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>.Publisher);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__sashTitle;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>);
  Published.projectedValue.getter();
  swift_endAccess();
  return EmergencyCountdownViewModel.$counter.modify;
}

uint64_t key path getter for EmergencyCountdownViewModel.cancelButtonText : EmergencyCountdownViewModel@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 488))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t key path setter for EmergencyCountdownViewModel.cancelButtonText : EmergencyCountdownViewModel(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 496);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t EmergencyCountdownViewModel.cancelButtonText.getter()
{
  return EmergencyCountdownViewModel.sashTitle.getter();
}

uint64_t EmergencyCountdownViewModel.cancelButtonText.setter()
{
  return EmergencyCountdownViewModel.sashTitle.setter();
}

uint64_t (*EmergencyCountdownViewModel.cancelButtonText.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return EmergencyCountdownViewModel.counter.modify;
}

uint64_t key path setter for EmergencyCountdownViewModel.$cancelButtonText : EmergencyCountdownViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>.Publisher);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 520))(v6);
}

uint64_t EmergencyCountdownViewModel.$cancelButtonText.getter()
{
  return EmergencyCountdownViewModel.$counter.getter((uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__cancelButtonText, &demangling cache variable for type metadata for Published<String>);
}

uint64_t EmergencyCountdownViewModel.$cancelButtonText.setter(uint64_t a1)
{
  return EmergencyCountdownViewModel.$counter.setter(a1, &demangling cache variable for type metadata for Published<String>.Publisher, (uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__cancelButtonText, &demangling cache variable for type metadata for Published<String>);
}

uint64_t (*EmergencyCountdownViewModel.$cancelButtonText.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>.Publisher);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__cancelButtonText;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>);
  Published.projectedValue.getter();
  swift_endAccess();
  return EmergencyCountdownViewModel.$counter.modify;
}

uint64_t key path getter for EmergencyCountdownViewModel.cancelledText : EmergencyCountdownViewModel@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 536))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t key path setter for EmergencyCountdownViewModel.cancelledText : EmergencyCountdownViewModel(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 544);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t EmergencyCountdownViewModel.cancelledText.getter()
{
  return EmergencyCountdownViewModel.sashTitle.getter();
}

uint64_t EmergencyCountdownViewModel.cancelledText.setter()
{
  return EmergencyCountdownViewModel.sashTitle.setter();
}

uint64_t (*EmergencyCountdownViewModel.cancelledText.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return EmergencyCountdownViewModel.counter.modify;
}

uint64_t key path setter for EmergencyCountdownViewModel.$cancelledText : EmergencyCountdownViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>.Publisher);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 568))(v6);
}

uint64_t EmergencyCountdownViewModel.$cancelledText.getter()
{
  return EmergencyCountdownViewModel.$counter.getter((uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__cancelledText, &demangling cache variable for type metadata for Published<String>);
}

uint64_t EmergencyCountdownViewModel.$cancelledText.setter(uint64_t a1)
{
  return EmergencyCountdownViewModel.$counter.setter(a1, &demangling cache variable for type metadata for Published<String>.Publisher, (uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__cancelledText, &demangling cache variable for type metadata for Published<String>);
}

uint64_t (*EmergencyCountdownViewModel.$cancelledText.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>.Publisher);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__cancelledText;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>);
  Published.projectedValue.getter();
  swift_endAccess();
  return EmergencyCountdownViewModel.$counter.modify;
}

uint64_t key path getter for EmergencyCountdownViewModel.callButtonText : EmergencyCountdownViewModel@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 584))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t key path setter for EmergencyCountdownViewModel.callButtonText : EmergencyCountdownViewModel(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 592);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t EmergencyCountdownViewModel.callButtonText.getter()
{
  return EmergencyCountdownViewModel.sashTitle.getter();
}

uint64_t EmergencyCountdownViewModel.callButtonText.setter()
{
  return EmergencyCountdownViewModel.sashTitle.setter();
}

uint64_t (*EmergencyCountdownViewModel.callButtonText.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return EmergencyCountdownViewModel.counter.modify;
}

uint64_t key path setter for EmergencyCountdownViewModel.$callButtonText : EmergencyCountdownViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>.Publisher);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 616))(v6);
}

uint64_t EmergencyCountdownViewModel.$callButtonText.getter()
{
  return EmergencyCountdownViewModel.$counter.getter((uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__callButtonText, &demangling cache variable for type metadata for Published<String>);
}

uint64_t EmergencyCountdownViewModel.$callButtonText.setter(uint64_t a1)
{
  return EmergencyCountdownViewModel.$counter.setter(a1, &demangling cache variable for type metadata for Published<String>.Publisher, (uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__callButtonText, &demangling cache variable for type metadata for Published<String>);
}

uint64_t (*EmergencyCountdownViewModel.$callButtonText.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>.Publisher);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__callButtonText;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>);
  Published.projectedValue.getter();
  swift_endAccess();
  return EmergencyCountdownViewModel.$counter.modify;
}

uint64_t key path getter for EmergencyCountdownViewModel.dialog : EmergencyCountdownViewModel@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 632))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t key path setter for EmergencyCountdownViewModel.dialog : EmergencyCountdownViewModel(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 640);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t EmergencyCountdownViewModel.dialog.getter()
{
  return EmergencyCountdownViewModel.sashTitle.getter();
}

uint64_t EmergencyCountdownViewModel.dialog.setter()
{
  return EmergencyCountdownViewModel.sashTitle.setter();
}

uint64_t (*EmergencyCountdownViewModel.dialog.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return EmergencyCountdownViewModel.counter.modify;
}

uint64_t key path setter for EmergencyCountdownViewModel.$dialog : EmergencyCountdownViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>.Publisher);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 664))(v6);
}

uint64_t EmergencyCountdownViewModel.$dialog.getter()
{
  return EmergencyCountdownViewModel.$counter.getter((uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__dialog, &demangling cache variable for type metadata for Published<String>);
}

uint64_t EmergencyCountdownViewModel.$dialog.setter(uint64_t a1)
{
  return EmergencyCountdownViewModel.$counter.setter(a1, &demangling cache variable for type metadata for Published<String>.Publisher, (uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__dialog, &demangling cache variable for type metadata for Published<String>);
}

uint64_t (*EmergencyCountdownViewModel.$dialog.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>.Publisher);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__dialog;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>);
  Published.projectedValue.getter();
  swift_endAccess();
  return EmergencyCountdownViewModel.$counter.modify;
}

uint64_t key path getter for EmergencyCountdownViewModel.localeIdentifier : EmergencyCountdownViewModel@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 680))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t key path setter for EmergencyCountdownViewModel.localeIdentifier : EmergencyCountdownViewModel(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 688);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t EmergencyCountdownViewModel.localeIdentifier.getter()
{
  return EmergencyCountdownViewModel.sashTitle.getter();
}

uint64_t EmergencyCountdownViewModel.localeIdentifier.setter()
{
  return EmergencyCountdownViewModel.sashTitle.setter();
}

uint64_t (*EmergencyCountdownViewModel.localeIdentifier.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return EmergencyCountdownViewModel.counter.modify;
}

uint64_t key path setter for EmergencyCountdownViewModel.$localeIdentifier : EmergencyCountdownViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>.Publisher);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 712))(v6);
}

uint64_t EmergencyCountdownViewModel.$localeIdentifier.getter()
{
  return EmergencyCountdownViewModel.$counter.getter((uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__localeIdentifier, &demangling cache variable for type metadata for Published<String>);
}

uint64_t EmergencyCountdownViewModel.$localeIdentifier.setter(uint64_t a1)
{
  return EmergencyCountdownViewModel.$counter.setter(a1, &demangling cache variable for type metadata for Published<String>.Publisher, (uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__localeIdentifier, &demangling cache variable for type metadata for Published<String>);
}

uint64_t (*EmergencyCountdownViewModel.$localeIdentifier.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>.Publisher);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__localeIdentifier;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>);
  Published.projectedValue.getter();
  swift_endAccess();
  return EmergencyCountdownViewModel.$counter.modify;
}

uint64_t key path getter for EmergencyCountdownViewModel.callingLabel : EmergencyCountdownViewModel@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 728))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t key path setter for EmergencyCountdownViewModel.callingLabel : EmergencyCountdownViewModel(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 736);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t EmergencyCountdownViewModel.callingLabel.getter()
{
  return EmergencyCountdownViewModel.sashTitle.getter();
}

uint64_t EmergencyCountdownViewModel.callingLabel.setter()
{
  return EmergencyCountdownViewModel.sashTitle.setter();
}

uint64_t (*EmergencyCountdownViewModel.callingLabel.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return EmergencyCountdownViewModel.counter.modify;
}

uint64_t key path setter for EmergencyCountdownViewModel.$callingLabel : EmergencyCountdownViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>.Publisher);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 760))(v6);
}

uint64_t EmergencyCountdownViewModel.$callingLabel.getter()
{
  return EmergencyCountdownViewModel.$counter.getter((uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__callingLabel, &demangling cache variable for type metadata for Published<String>);
}

uint64_t EmergencyCountdownViewModel.$callingLabel.setter(uint64_t a1)
{
  return EmergencyCountdownViewModel.$counter.setter(a1, &demangling cache variable for type metadata for Published<String>.Publisher, (uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__callingLabel, &demangling cache variable for type metadata for Published<String>);
}

uint64_t (*EmergencyCountdownViewModel.$callingLabel.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>.Publisher);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__callingLabel;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>);
  Published.projectedValue.getter();
  swift_endAccess();
  return EmergencyCountdownViewModel.$counter.modify;
}

uint64_t key path getter for EmergencyCountdownViewModel.emergencyServicesLabel : EmergencyCountdownViewModel@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 776))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t key path setter for EmergencyCountdownViewModel.emergencyServicesLabel : EmergencyCountdownViewModel(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 784);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t EmergencyCountdownViewModel.emergencyServicesLabel.getter()
{
  return EmergencyCountdownViewModel.sashTitle.getter();
}

uint64_t EmergencyCountdownViewModel.emergencyServicesLabel.setter()
{
  return EmergencyCountdownViewModel.sashTitle.setter();
}

uint64_t (*EmergencyCountdownViewModel.emergencyServicesLabel.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return EmergencyCountdownViewModel.counter.modify;
}

uint64_t key path setter for EmergencyCountdownViewModel.$emergencyServicesLabel : EmergencyCountdownViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>.Publisher);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 808))(v6);
}

uint64_t EmergencyCountdownViewModel.$emergencyServicesLabel.getter()
{
  return EmergencyCountdownViewModel.$counter.getter((uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__emergencyServicesLabel, &demangling cache variable for type metadata for Published<String>);
}

uint64_t EmergencyCountdownViewModel.$emergencyServicesLabel.setter(uint64_t a1)
{
  return EmergencyCountdownViewModel.$counter.setter(a1, &demangling cache variable for type metadata for Published<String>.Publisher, (uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__emergencyServicesLabel, &demangling cache variable for type metadata for Published<String>);
}

uint64_t (*EmergencyCountdownViewModel.$emergencyServicesLabel.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>.Publisher);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__emergencyServicesLabel;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>);
  Published.projectedValue.getter();
  swift_endAccess();
  return EmergencyCountdownViewModel.$counter.modify;
}

uint64_t key path getter for EmergencyCountdownViewModel.sos : EmergencyCountdownViewModel@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 824))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t key path setter for EmergencyCountdownViewModel.sos : EmergencyCountdownViewModel(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 832);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t EmergencyCountdownViewModel.sos.getter()
{
  return EmergencyCountdownViewModel.sashTitle.getter();
}

uint64_t EmergencyCountdownViewModel.sos.setter()
{
  return EmergencyCountdownViewModel.sashTitle.setter();
}

uint64_t (*EmergencyCountdownViewModel.sos.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return EmergencyCountdownViewModel.counter.modify;
}

uint64_t key path setter for EmergencyCountdownViewModel.$sos : EmergencyCountdownViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>.Publisher);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 856))(v6);
}

uint64_t EmergencyCountdownViewModel.$sos.getter()
{
  return EmergencyCountdownViewModel.$counter.getter((uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__sos, &demangling cache variable for type metadata for Published<String>);
}

uint64_t EmergencyCountdownViewModel.$sos.setter(uint64_t a1)
{
  return EmergencyCountdownViewModel.$counter.setter(a1, &demangling cache variable for type metadata for Published<String>.Publisher, (uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__sos, &demangling cache variable for type metadata for Published<String>);
}

uint64_t (*EmergencyCountdownViewModel.$sos.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>.Publisher);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__sos;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>);
  Published.projectedValue.getter();
  swift_endAccess();
  return EmergencyCountdownViewModel.$counter.modify;
}

uint64_t key path getter for EmergencyCountdownViewModel.isCounterOnLastStep : EmergencyCountdownViewModel@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 872))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for EmergencyCountdownViewModel.isCounterOnLastStep : EmergencyCountdownViewModel(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 880))(*a1);
}

uint64_t EmergencyCountdownViewModel.isCounterOnLastStep.getter()
{
  return EmergencyCountdownViewModel.isCounterOnLastStep.getter();
}

{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t EmergencyCountdownViewModel.isCounterOnLastStep.setter()
{
  return EmergencyCountdownViewModel.isCounterOnLastStep.setter();
}

{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return static Published.subscript.setter();
}

uint64_t (*EmergencyCountdownViewModel.isCounterOnLastStep.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return EmergencyCountdownViewModel.counter.modify;
}

uint64_t key path setter for EmergencyCountdownViewModel.$isCounterOnLastStep : EmergencyCountdownViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 904))(v6);
}

uint64_t EmergencyCountdownViewModel.$isCounterOnLastStep.getter()
{
  return EmergencyCountdownViewModel.$counter.getter((uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__isCounterOnLastStep, &demangling cache variable for type metadata for Published<Bool>);
}

uint64_t EmergencyCountdownViewModel.$isCounterOnLastStep.setter(uint64_t a1)
{
  return EmergencyCountdownViewModel.$counter.setter(a1, &demangling cache variable for type metadata for Published<Bool>.Publisher, (uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__isCounterOnLastStep, &demangling cache variable for type metadata for Published<Bool>);
}

uint64_t (*EmergencyCountdownViewModel.$isCounterOnLastStep.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__isCounterOnLastStep;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>);
  Published.projectedValue.getter();
  swift_endAccess();
  return EmergencyCountdownViewModel.$counter.modify;
}

uint64_t key path getter for EmergencyCountdownViewModel.timerCancelledByUser : EmergencyCountdownViewModel@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 920))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for EmergencyCountdownViewModel.timerCancelledByUser : EmergencyCountdownViewModel(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 928))(*a1);
}

uint64_t EmergencyCountdownViewModel.timerCancelledByUser.getter()
{
  return EmergencyCountdownViewModel.isCounterOnLastStep.getter();
}

uint64_t EmergencyCountdownViewModel.timerCancelledByUser.setter()
{
  return EmergencyCountdownViewModel.isCounterOnLastStep.setter();
}

uint64_t (*EmergencyCountdownViewModel.timerCancelledByUser.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return EmergencyCountdownViewModel.counter.modify;
}

uint64_t key path setter for EmergencyCountdownViewModel.$timerCancelledByUser : EmergencyCountdownViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 952))(v6);
}

uint64_t EmergencyCountdownViewModel.$timerCancelledByUser.getter()
{
  return EmergencyCountdownViewModel.$counter.getter((uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__timerCancelledByUser, &demangling cache variable for type metadata for Published<Bool>);
}

uint64_t EmergencyCountdownViewModel.$timerCancelledByUser.setter(uint64_t a1)
{
  return EmergencyCountdownViewModel.$counter.setter(a1, &demangling cache variable for type metadata for Published<Bool>.Publisher, (uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__timerCancelledByUser, &demangling cache variable for type metadata for Published<Bool>);
}

uint64_t (*EmergencyCountdownViewModel.$timerCancelledByUser.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__timerCancelledByUser;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>);
  Published.projectedValue.getter();
  swift_endAccess();
  return EmergencyCountdownViewModel.$counter.modify;
}

uint64_t EmergencyCountdownViewModel.sliderIsAtMax.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel_sliderIsAtMax);
  swift_beginAccess();
  return *v1;
}

uint64_t EmergencyCountdownViewModel.sliderIsAtMax.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel_sliderIsAtMax);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*EmergencyCountdownViewModel.sliderIsAtMax.modify())()
{
  swift_beginAccess();
  return static EmergencyCountdownViewModel.shared.modify;
}

double EmergencyCountdownViewModel.startLocation.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel_startLocation;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t EmergencyCountdownViewModel.startLocation.setter(double a1)
{
  uint64_t v1;
  double *v3;
  uint64_t result;

  v3 = (double *)(v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel_startLocation);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*EmergencyCountdownViewModel.startLocation.modify())()
{
  swift_beginAccess();
  return static EmergencyCountdownViewModel.shared.modify;
}

void key path getter for EmergencyCountdownViewModel.currentTranslation : EmergencyCountdownViewModel(uint64_t a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))(**(_QWORD **)a1 + 1016))();
}

uint64_t key path setter for EmergencyCountdownViewModel.currentTranslation : EmergencyCountdownViewModel(double *a1, uint64_t a2)
{
  return (*(uint64_t (**)(double))(**(_QWORD **)a2 + 1024))(*a1);
}

double EmergencyCountdownViewModel.currentTranslation.getter()
{
  return EmergencyCountdownViewModel.animationStep.getter();
}

uint64_t EmergencyCountdownViewModel.currentTranslation.setter()
{
  return EmergencyCountdownViewModel.animationStep.setter();
}

uint64_t (*EmergencyCountdownViewModel.currentTranslation.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return EmergencyCountdownViewModel.counter.modify;
}

void EmergencyCountdownViewModel.counter.modify(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 48))(*a1, 0);
  swift_release();
  swift_release();
  free(v1);
}

uint64_t key path setter for EmergencyCountdownViewModel.$currentTranslation : EmergencyCountdownViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGFloat>.Publisher);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 1048))(v6);
}

uint64_t EmergencyCountdownViewModel.$currentTranslation.getter()
{
  return EmergencyCountdownViewModel.$counter.getter((uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__currentTranslation, &demangling cache variable for type metadata for Published<CGFloat>);
}

uint64_t EmergencyCountdownViewModel.$counter.getter(uint64_t a1, uint64_t *a2)
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(a2);
  Published.projectedValue.getter();
  return swift_endAccess();
}

uint64_t EmergencyCountdownViewModel.$currentTranslation.setter(uint64_t a1)
{
  return EmergencyCountdownViewModel.$counter.setter(a1, &demangling cache variable for type metadata for Published<CGFloat>.Publisher, (uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__currentTranslation, &demangling cache variable for type metadata for Published<CGFloat>);
}

uint64_t EmergencyCountdownViewModel.$counter.setter(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v10 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(a4);
  Published.projectedValue.setter();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
}

uint64_t (*EmergencyCountdownViewModel.$currentTranslation.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGFloat>.Publisher);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__currentTranslation;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGFloat>);
  Published.projectedValue.getter();
  swift_endAccess();
  return EmergencyCountdownViewModel.$counter.modify;
}

void EmergencyCountdownViewModel.$counter.modify(uint64_t a1, char a2)
{
  _QWORD *v3;
  void (*v4)(_QWORD, _QWORD, _QWORD);
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void *, uint64_t);

  v3 = *(_QWORD **)a1;
  v4 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)a1 + 88) + 16);
  v4(*(_QWORD *)(*(_QWORD *)a1 + 104), v3[14], v3[10]);
  v5 = (void *)v3[13];
  v6 = (void *)v3[14];
  v8 = v3[11];
  v7 = (void *)v3[12];
  v9 = v3[10];
  if ((a2 & 1) != 0)
  {
    v4(v3[12], v3[13], v3[10]);
    swift_beginAccess();
    Published.projectedValue.setter();
    swift_endAccess();
    v10 = *(void (**)(void *, uint64_t))(v8 + 8);
    v10(v5, v9);
  }
  else
  {
    swift_beginAccess();
    Published.projectedValue.setter();
    swift_endAccess();
    v10 = *(void (**)(void *, uint64_t))(v8 + 8);
  }
  v10(v6, v9);
  free(v6);
  free(v5);
  free(v7);
  free(v3);
}

double EmergencyCountdownViewModel.currentOffset.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel_currentOffset;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t EmergencyCountdownViewModel.currentOffset.setter(double a1)
{
  uint64_t v1;
  double *v3;
  uint64_t result;

  v3 = (double *)(v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel_currentOffset);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*EmergencyCountdownViewModel.currentOffset.modify())()
{
  swift_beginAccess();
  return static SingleResultVoicemailModel.resultViewID.modify;
}

id EmergencyCountdownViewModel.notificationCenter.getter()
{
  uint64_t v0;
  id *v1;

  v1 = (id *)(v0 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel_notificationCenter);
  swift_beginAccess();
  return *v1;
}

void EmergencyCountdownViewModel.notificationCenter.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel_notificationCenter);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*EmergencyCountdownViewModel.notificationCenter.modify())()
{
  swift_beginAccess();
  return static EmergencyCountdownViewModel.shared.modify;
}

id EmergencyCountdownViewModel.numberFormatter.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  Class isa;
  void *v11;
  id v12;
  uint64_t v14;

  v1 = v0;
  v2 = type metadata accessor for Locale();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel____lazy_storage___numberFormatter;
  v7 = *(void **)(v0 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel____lazy_storage___numberFormatter);
  if (v7)
  {
    v8 = *(id *)(v0 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel____lazy_storage___numberFormatter);
  }
  else
  {
    v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16F0]), sel_init);
    (*(void (**)(void))(*(_QWORD *)v0 + 680))();
    Locale.init(identifier:)();
    isa = Locale._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    objc_msgSend(v9, sel_setLocale_, isa);

    objc_msgSend(v9, sel_setNumberStyle_, 0);
    v11 = *(void **)(v1 + v6);
    *(_QWORD *)(v1 + v6) = v9;
    v8 = v9;

    v7 = 0;
  }
  v12 = v7;
  return v8;
}

void EmergencyCountdownViewModel.numberFormatter.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel____lazy_storage___numberFormatter);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel____lazy_storage___numberFormatter) = a1;

}

void (*EmergencyCountdownViewModel.numberFormatter.modify(id *a1))(uint64_t *a1)
{
  void *v1;

  a1[1] = v1;
  *a1 = EmergencyCountdownViewModel.numberFormatter.getter();
  return EmergencyCountdownViewModel.numberFormatter.modify;
}

void EmergencyCountdownViewModel.numberFormatter.modify(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v2 = *a1;
  v1 = a1[1];
  v3 = *(void **)(v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel____lazy_storage___numberFormatter);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel____lazy_storage___numberFormatter) = v2;

}

uint64_t EmergencyCountdownViewModel.timerCancelled.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel_timerCancelled);
  swift_beginAccess();
  return *v1;
}

uint64_t EmergencyCountdownViewModel.timerCancelled.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel_timerCancelled);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*EmergencyCountdownViewModel.timerCancelled.modify())()
{
  swift_beginAccess();
  return static EmergencyCountdownViewModel.shared.modify;
}

uint64_t EmergencyCountdownViewModel.isSmartEnabled.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[8];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EmergencyCountdownModel?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = &v8[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = v0 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel_model;
  swift_beginAccess();
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v4, (uint64_t)v3, &demangling cache variable for type metadata for EmergencyCountdownModel?);
  v5 = type metadata accessor for EmergencyCountdownModel();
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5))
  {
    v6 = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    Loggable.wrappedValue.getter();
    v6 = v8[7];
  }
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v3, &demangling cache variable for type metadata for EmergencyCountdownModel?);
  return v6;
}

uint64_t EmergencyCountdownViewModel.configure(with:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  Class isa;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = v1;
  v4 = type metadata accessor for Locale();
  v27 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EmergencyCountdownModel?);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v27 - v14;
  outlined init with copy of SearchCallHistoryBinaryButtonModel(a1, (uint64_t)&v27 - v14, (uint64_t (*)(_QWORD))type metadata accessor for EmergencyCountdownModel);
  v16 = type metadata accessor for EmergencyCountdownModel();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 0, 1, v16);
  outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout>, _ClipEffect<Capsule>>((uint64_t)v15, (uint64_t)v13, &demangling cache variable for type metadata for EmergencyCountdownModel?);
  v17 = v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel_model;
  swift_beginAccess();
  outlined assign with take of EmergencyCountdownModel?((uint64_t)v13, v17);
  swift_endAccess();
  (*(void (**)(uint64_t))(*(_QWORD *)v2 + 304))(3);
  type metadata accessor for SABaseClientBoundCommand(0, (unint64_t *)&lazy cache variable for type metadata for NSTimer);
  v18 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
  v19 = type metadata accessor for NSRunLoop.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v9, 1, 1, v19);
  v20 = static NSTimer.publish(every:tolerance:on:in:options:)();

  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v9, &demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  v28 = v20;
  type metadata accessor for NSTimer.TimerPublisher();
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher, (uint64_t (*)(uint64_t))MEMORY[0x24BDD01C8], MEMORY[0x24BDD01B0]);
  v21 = ConnectablePublisher.autoconnect()();
  swift_release();
  (*(void (**)(uint64_t))(*(_QWORD *)v2 + 400))(v21);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v2 + 448))(v28, v29);
  Loggable.wrappedValue.getter();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v2 + 496))(v28, v29);
  Loggable.wrappedValue.getter();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v2 + 544))(v28, v29);
  Loggable.wrappedValue.getter();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v2 + 592))(v28, v29);
  Loggable.wrappedValue.getter();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v2 + 640))(v28, v29);
  (*(void (**)(_QWORD))(*(_QWORD *)v2 + 1168))(0);
  (*(void (**)(_QWORD))(*(_QWORD *)v2 + 928))(0);
  Loggable.wrappedValue.getter();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v2 + 688))(v28, v29);
  Loggable.wrappedValue.getter();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v2 + 736))(v28, v29);
  Loggable.wrappedValue.getter();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v2 + 784))(v28, v29);
  Loggable.wrappedValue.getter();
  v22 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v2 + 832))(v28, v29);
  v23 = (*(uint64_t (**)(uint64_t, double))(*(_QWORD *)v2 + 352))(v22, 0.0);
  v24 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 1112))(v23);
  (*(void (**)(void))(*(_QWORD *)v2 + 680))();
  Locale.init(identifier:)();
  isa = Locale._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v27 + 8))(v6, v4);
  objc_msgSend(v24, sel_setLocale_, isa);

  (*(void (**)(id))(*(_QWORD *)v2 + 1096))(objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16D0]), sel_init));
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)v2 + 880))(0);
}

Swift::Void __swiftcall EmergencyCountdownViewModel.resetCounter()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  v1 = v0;
  if (one-time initialization token for phoneSnippetUI != -1)
    swift_once();
  v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)static Logger.phoneSnippetUI);
  v3 = Logger.logObject.getter();
  v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_243ABD000, v3, v4, "#EmergencyCountdownView resetting counter", v5, 2u);
    MEMORY[0x2495011B8](v5, -1, -1);
  }

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 304))(3);
  (*(void (**)(double))(*(_QWORD *)v1 + 352))(0.0);
}

uint64_t EmergencyCountdownViewModel.snippetHasAnimatedCounter(context:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  int v7;
  _BYTE v9[8];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EmergencyCountdownModel?);
  MEMORY[0x24BDAC7A8](v1);
  v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = v0 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel_model;
  swift_beginAccess();
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v4, (uint64_t)v3, &demangling cache variable for type metadata for EmergencyCountdownModel?);
  v5 = type metadata accessor for EmergencyCountdownModel();
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5))
  {
    outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v3, &demangling cache variable for type metadata for EmergencyCountdownModel?);
    v6 = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    Loggable.wrappedValue.getter();
    v7 = v9[7];
    outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v3, &demangling cache variable for type metadata for EmergencyCountdownModel?);
    if (v7 == 1 && (dispatch thunk of Context.currentIdiom.getter(), (VRXIdiom.isCarPlay.getter() & 1) == 0))
      v6 = dispatch thunk of Context.isInAmbient.getter() ^ 1;
    else
      v6 = 0;
  }
  return v6 & 1;
}

void EmergencyCountdownViewModel.updateAnimationStep(currentStep:)(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  a1.n128_f64[0] = a1.n128_f64[0] + 1.0;
  if (a1.n128_f64[0] > 3.0)
    a1.n128_f64[0] = 3.0;
  (*(void (**)(__n128))(*(_QWORD *)v1 + 352))(a1);
  if (one-time initialization token for phoneSnippetUI != -1)
    swift_once();
  v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)static Logger.phoneSnippetUI);
  swift_retain();
  v3 = Logger.logObject.getter();
  v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v5 = 134217984;
    (*(void (**)(void))(*(_QWORD *)v1 + 344))();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl(&dword_243ABD000, v3, v4, "#EmergencyCountdownView updated animation step to %f", v5, 0xCu);
    MEMORY[0x2495011B8](v5, -1, -1);

  }
  else
  {

    swift_release();
  }
}

uint64_t EmergencyCountdownViewModel.updateCounter(actionHandler:currentAnimationStep:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint8_t *v30;
  uint8_t *v31;
  uint64_t v32;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  void *v41;
  char *v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  _QWORD aBlock[6];

  v4 = v3;
  v51 = a1;
  v7 = type metadata accessor for DispatchWorkItemFlags();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v53 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  v49 = *(_QWORD *)(v14 - 8);
  v15 = *(_QWORD *)(v49 + 64);
  MEMORY[0x24BDAC7A8](v14);
  v50 = (uint64_t)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for DispatchTime();
  v48 = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = MEMORY[0x24BDAC7A8](v17);
  v52 = (char *)&v45 - v20;
  if ((a3 & 1) != 0)
  {
LABEL_9:
    v22 = (*(uint64_t (**)(void))(*(_QWORD *)v4 + 296))();
    a2 = v22 - 1;
    if (!__OFSUB__(v22, 1))
      goto LABEL_10;
LABEL_23:
    __break(1u);
LABEL_24:
    swift_once();
    goto LABEL_12;
  }
  if ((~a2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (*(double *)&a2 <= -9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (*(double *)&a2 >= 9.22337204e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v21 = 3 - (uint64_t)*(double *)&a2;
  if (__OFSUB__(3, (uint64_t)*(double *)&a2))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  a2 = 2 - (uint64_t)*(double *)&a2;
  if (__OFSUB__(v21, 1))
  {
    __break(1u);
    goto LABEL_9;
  }
LABEL_10:
  if (*(double *)&a2 != 0.0)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 304))(a2);
  v47 = v12;
  if (one-time initialization token for phoneSnippetUI != -1)
    goto LABEL_24;
LABEL_12:
  v23 = type metadata accessor for Logger();
  v46 = __swift_project_value_buffer(v23, (uint64_t)static Logger.phoneSnippetUI);
  v24 = Logger.logObject.getter();
  v25 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc();
    v45 = v11;
    v27 = v10;
    v28 = v8;
    v29 = v7;
    v30 = v26;
    *(_WORD *)v26 = 0;
    _os_log_impl(&dword_243ABD000, v24, v25, "#EmergencyCountdownView setting isCounterOnLastStep = true", v26, 2u);
    v31 = v30;
    v7 = v29;
    v8 = v28;
    v10 = v27;
    v11 = v45;
    MEMORY[0x2495011B8](v31, -1, -1);
  }

  v32 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 880))(1);
  if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 1160))(v32) & 1) != 0)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 304))(a2);
  v45 = v7;
  v34 = Logger.logObject.getter();
  v35 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v34, v35))
  {
    v36 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v36 = 0;
    _os_log_impl(&dword_243ABD000, v34, v35, "#EmergencyCountdownView counter reached 0 -- executing confirm action", v36, 2u);
    MEMORY[0x2495011B8](v36, -1, -1);
  }

  type metadata accessor for SABaseClientBoundCommand(0, &lazy cache variable for type metadata for OS_dispatch_queue);
  v46 = static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  v37 = v52;
  MEMORY[0x249500690](v19, 0.25);
  v48 = *(_QWORD *)(v48 + 8);
  ((void (*)(char *, uint64_t))v48)(v19, v54);
  v38 = v50;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v51, v50, &demangling cache variable for type metadata for StandardActionHandler?);
  v39 = (*(unsigned __int8 *)(v49 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  v40 = swift_allocObject();
  *(_QWORD *)(v40 + 16) = v4;
  outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout>, _ClipEffect<Capsule>>(v38, v40 + v39, &demangling cache variable for type metadata for StandardActionHandler?);
  aBlock[4] = partial apply for closure #1 in EmergencyCountdownViewModel.updateCounter(actionHandler:currentAnimationStep:);
  aBlock[5] = v40;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor;
  v41 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v42 = v53;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], &demangling cache variable for type metadata for [DispatchWorkItemFlags], MEMORY[0x24BEE12C8]);
  v43 = v45;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  v44 = (void *)v46;
  MEMORY[0x249500AA4](v37, v42, v10, v41);
  _Block_release(v41);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v43);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v42, v11);
  return ((uint64_t (*)(char *, uint64_t))v48)(v37, v54);
}

uint64_t thunk for @escaping @callee_guaranteed () -> ()(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

void EmergencyCountdownViewModel.triggerCounterUpdate(actionHandler:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  void *v9;
  uint64_t v10;
  uint64_t inited;
  uint64_t v12;
  double v13;
  Class isa;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;

  v3 = v2;
  if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 1208))(a2) & 1) != 0)
  {
    if (one-time initialization token for phoneSnippetUI != -1)
      swift_once();
    v5 = type metadata accessor for Logger();
    __swift_project_value_buffer(v5, (uint64_t)static Logger.phoneSnippetUI);
    v6 = Logger.logObject.getter();
    v7 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_243ABD000, v6, v7, "#EmergencyCountdownView sending notification to update counter position", v8, 2u);
      MEMORY[0x2495011B8](v8, -1, -1);
    }

    v9 = (void *)(*(uint64_t (**)(void))(*(_QWORD *)v3 + 1088))();
    if (one-time initialization token for counterPosition != -1)
      swift_once();
    v10 = static NSNotificationName.counterPosition;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(AnyHashable, Any)>);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_243B32430;
    if (one-time initialization token for animationStepKey != -1)
      swift_once();
    swift_bridgeObjectRetain();
    v12 = AnyHashable.init<A>(_:)();
    v13 = (*(double (**)(uint64_t))(*(_QWORD *)v3 + 344))(v12);
    *(_QWORD *)(inited + 96) = MEMORY[0x24BEE50B0];
    *(double *)(inited + 72) = v13;
    specialized Dictionary.init(dictionaryLiteral:)(inited);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_postNotificationName_object_userInfo_, v10, 0, isa);

  }
  else
  {
    if (one-time initialization token for phoneSnippetUI != -1)
      swift_once();
    v15 = type metadata accessor for Logger();
    __swift_project_value_buffer(v15, (uint64_t)static Logger.phoneSnippetUI);
    v16 = Logger.logObject.getter();
    v17 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_243ABD000, v16, v17, "#EmergencyCountdownView updating counter without animation", v18, 2u);
      MEMORY[0x2495011B8](v18, -1, -1);
    }

    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)v3 + 1224))(a1, 0, 1);
  }
}

unint64_t specialized Dictionary.init(dictionaryLiteral:)(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<AnyHashable, Any>);
  v2 = static _DictionaryStorage.allocate(capacity:)();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    outlined init with copy of SearchCallHistoryBinaryButtonModel?(v6, (uint64_t)v15, &demangling cache variable for type metadata for (AnyHashable, Any));
    result = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v15);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v9 = v3[6] + 40 * result;
    v10 = v15[0];
    v11 = v15[1];
    *(_QWORD *)(v9 + 32) = v16;
    *(_OWORD *)v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    result = (unint64_t)outlined init with take of Any(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t (*EmergencyCountdownViewModel.updateCounterAfterAnimation(actionHandler:)(uint64_t a1))(_QWORD *, _QWORD)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t (*result)(_QWORD *, _QWORD);
  _QWORD *v14;
  _QWORD v15[4];

  v2 = v1;
  if (one-time initialization token for phoneSnippetUI != -1)
    swift_once();
  v4 = type metadata accessor for Logger();
  __swift_project_value_buffer(v4, (uint64_t)static Logger.phoneSnippetUI);
  swift_retain();
  v5 = Logger.logObject.getter();
  v6 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v7 = 134217984;
    v15[0] = (*(uint64_t (**)(void))(*(_QWORD *)v1 + 296))();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl(&dword_243ABD000, v5, v6, "#EmergencyCountdownView counter = %ld", v7, 0xCu);
    MEMORY[0x2495011B8](v7, -1, -1);

  }
  else
  {

    v8 = swift_release();
  }
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 296))(v8);
  if (v9 == 1 || ((*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 1160))(v9) & 1) != 0)
  {
    v10 = Logger.logObject.getter();
    v11 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_243ABD000, v10, v11, "#EmergencyCountdownView counter reached 0 -- executing confirm action after animation", v12, 2u);
      MEMORY[0x2495011B8](v12, -1, -1);
    }

    return (uint64_t (*)(_QWORD *, _QWORD))(*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 1264))(a1);
  }
  else
  {
    result = (uint64_t (*)(_QWORD *, _QWORD))(*(uint64_t (**)(_QWORD *))(*(_QWORD *)v1 + 312))(v15);
    if (__OFSUB__(*v14, 1))
    {
      __break(1u);
    }
    else
    {
      --*v14;
      return (uint64_t (*)(_QWORD *, _QWORD))result(v15, 0);
    }
  }
  return result;
}

uint64_t EmergencyCountdownViewModel.localizedCounter.getter()
{
  uint64_t v0;
  void *v1;
  uint64_t (*v2)(void);
  id v3;
  id v4;
  uint64_t v5;

  v1 = (void *)(*(uint64_t (**)(void))(*(_QWORD *)v0 + 1112))();
  v2 = *(uint64_t (**)(void))(*(_QWORD *)v0 + 296);
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, v2());
  v4 = objc_msgSend(v1, sel_stringFromNumber_, v3);

  if (v4)
  {
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();

    return v5;
  }
  else
  {
    v2();
    return dispatch thunk of CustomStringConvertible.description.getter();
  }
}

Swift::Void __swiftcall EmergencyCountdownViewModel.onSiriDismissed()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  v1 = v0;
  if (((*(uint64_t (**)(void))(*(_QWORD *)v0 + 1160))() & 1) == 0)
  {
    if (one-time initialization token for phoneSnippetUI != -1)
      swift_once();
    v2 = type metadata accessor for Logger();
    __swift_project_value_buffer(v2, (uint64_t)static Logger.phoneSnippetUI);
    v3 = Logger.logObject.getter();
    v4 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_243ABD000, v3, v4, "#EmergencyCountdownView Cancelling Timer because Siri was dismissed", v5, 2u);
      MEMORY[0x2495011B8](v5, -1, -1);
    }

    (*(void (**)(void))(*(_QWORD *)v1 + 1280))();
  }
}

void EmergencyCountdownViewModel.callAction(actionHandler:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(char *, uint64_t, uint64_t);
  int v34;
  uint64_t v35;
  unsigned int *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int *v42;
  uint64_t *boxed_opaque_existential_1;
  void (*v44)(uint64_t *, _QWORD, uint64_t);
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(char *, uint64_t, uint64_t);
  char *v59;
  char *v60;
  char *v61;
  uint64_t v62;

  v62 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for InteractionType?);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionProperty?);
  MEMORY[0x24BDAC7A8](v5);
  v61 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v58 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EmergencyCountdownModel?);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for EmergencyCountdownModel();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel_model;
  swift_beginAccess();
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v20, (uint64_t)v15, &demangling cache variable for type metadata for EmergencyCountdownModel?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v15, &demangling cache variable for type metadata for EmergencyCountdownModel?);
    if (one-time initialization token for phoneSnippetUI != -1)
      swift_once();
    v21 = type metadata accessor for Logger();
    __swift_project_value_buffer(v21, (uint64_t)static Logger.phoneSnippetUI);
    v22 = Logger.logObject.getter();
    v23 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_243ABD000, v22, v23, "#EmergencyCountdownViewModel model was not set. Cannot keep executing", v24, 2u);
      MEMORY[0x2495011B8](v24, -1, -1);
    }

  }
  else
  {
    v59 = v19;
    v25 = outlined init with take of SingleResultCallHistoryModel((uint64_t)v15, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for EmergencyCountdownModel);
    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 1280))(v25);
    if (one-time initialization token for phoneSnippetUI != -1)
      swift_once();
    v60 = v4;
    v26 = type metadata accessor for Logger();
    __swift_project_value_buffer(v26, (uint64_t)static Logger.phoneSnippetUI);
    v27 = Logger.logObject.getter();
    v28 = static os_log_type_t.debug.getter();
    v29 = (uint64_t)v10;
    if (os_log_type_enabled(v27, v28))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v30 = 0;
      _os_log_impl(&dword_243ABD000, v27, v28, "#EmergencyCountdownViewModel performing call action and dismissing Siri", v30, 2u);
      MEMORY[0x2495011B8](v30, -1, -1);
    }

    outlined init with copy of SearchCallHistoryBinaryButtonModel?(v62, (uint64_t)v12, &demangling cache variable for type metadata for StandardActionHandler?);
    v31 = type metadata accessor for StandardActionHandler();
    v32 = *(_QWORD *)(v31 - 8);
    v33 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 48);
    v34 = v33(v12, 1, v31);
    v35 = MEMORY[0x24BEAD1E8];
    v36 = (unsigned int *)MEMORY[0x24BEAD188];
    if (v34 == 1)
    {
      outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v12, &demangling cache variable for type metadata for StandardActionHandler?);
      v37 = (uint64_t)v59;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionElementConvertible>);
      v38 = swift_allocObject();
      *(_OWORD *)(v38 + 16) = xmmword_243B32430;
      v39 = type metadata accessor for Command();
      v58 = v33;
      v40 = v32;
      v41 = v39;
      *(_QWORD *)(v38 + 56) = v39;
      *(_QWORD *)(v38 + 64) = v35;
      v42 = v36;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v38 + 32));
      v37 = (uint64_t)v59;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
      *boxed_opaque_existential_1 = CodableAceObject.wrappedValue.getter();
      *((_BYTE *)boxed_opaque_existential_1 + 8) = 0;
      v44 = *(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v41 - 8) + 104);
      v45 = v41;
      v32 = v40;
      v44(boxed_opaque_existential_1, *v42, v45);
      v46 = v61;
      ActionProperty.init(_:)();
      v47 = type metadata accessor for ActionProperty();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v46, 0, 1, v47);
      v48 = type metadata accessor for InteractionType();
      v49 = (uint64_t)v60;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v60, 1, 1, v48);
      StandardActionHandler.perform(_:interactionType:)();
      outlined destroy of SearchCallHistoryBinaryButtonModel?(v49, &demangling cache variable for type metadata for InteractionType?);
      v50 = (uint64_t)v46;
      v33 = v58;
      outlined destroy of SearchCallHistoryBinaryButtonModel?(v50, &demangling cache variable for type metadata for ActionProperty?);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v31);
    }
    outlined init with copy of SearchCallHistoryBinaryButtonModel?(v62, v29, &demangling cache variable for type metadata for StandardActionHandler?);
    if (v33((char *)v29, 1, v31) == 1)
    {
      outlined destroy of SingleResultCallHistoryModel(v37, (uint64_t (*)(_QWORD))type metadata accessor for EmergencyCountdownModel);
      outlined destroy of SearchCallHistoryBinaryButtonModel?(v29, &demangling cache variable for type metadata for StandardActionHandler?);
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionElementConvertible>);
      v51 = swift_allocObject();
      *(_OWORD *)(v51 + 16) = xmmword_243B32430;
      v52 = type metadata accessor for Command();
      *(_QWORD *)(v51 + 56) = v52;
      *(_QWORD *)(v51 + 64) = MEMORY[0x24BEAD1E8];
      v53 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v51 + 32));
      *v53 = (uint64_t)objc_msgSend(objc_allocWithZone(MEMORY[0x24BE81890]), sel_init);
      *((_BYTE *)v53 + 8) = 0;
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v52 - 8) + 104))(v53, *MEMORY[0x24BEAD188], v52);
      v54 = (uint64_t)v61;
      ActionProperty.init(_:)();
      v55 = type metadata accessor for ActionProperty();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v54, 0, 1, v55);
      v56 = type metadata accessor for InteractionType();
      v57 = (uint64_t)v60;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v60, 1, 1, v56);
      StandardActionHandler.perform(_:interactionType:)();
      outlined destroy of SearchCallHistoryBinaryButtonModel?(v57, &demangling cache variable for type metadata for InteractionType?);
      outlined destroy of SearchCallHistoryBinaryButtonModel?(v54, &demangling cache variable for type metadata for ActionProperty?);
      outlined destroy of SingleResultCallHistoryModel(v37, (uint64_t (*)(_QWORD))type metadata accessor for EmergencyCountdownModel);
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v29, v31);
    }
  }
}

void EmergencyCountdownViewModel.cancelAction(actionHandler:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v36 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for InteractionType?);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionProperty?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EmergencyCountdownModel?);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for EmergencyCountdownModel();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel_model;
  swift_beginAccess();
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v18, (uint64_t)v13, &demangling cache variable for type metadata for EmergencyCountdownModel?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v13, &demangling cache variable for type metadata for EmergencyCountdownModel?);
    if (one-time initialization token for phoneSnippetUI != -1)
      swift_once();
    v19 = type metadata accessor for Logger();
    __swift_project_value_buffer(v19, (uint64_t)static Logger.phoneSnippetUI);
    v20 = Logger.logObject.getter();
    v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v22 = 0;
      _os_log_impl(&dword_243ABD000, v20, v21, "#EmergencyCountdownViewModel model was not set. Cannot keep executing", v22, 2u);
      MEMORY[0x2495011B8](v22, -1, -1);
    }

  }
  else
  {
    v23 = outlined init with take of SingleResultCallHistoryModel((uint64_t)v13, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for EmergencyCountdownModel);
    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 1280))(v23);
    if (one-time initialization token for phoneSnippetUI != -1)
      swift_once();
    v24 = type metadata accessor for Logger();
    __swift_project_value_buffer(v24, (uint64_t)static Logger.phoneSnippetUI);
    v25 = Logger.logObject.getter();
    v26 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v27 = 0;
      _os_log_impl(&dword_243ABD000, v25, v26, "#EmergencyCountdownViewModel performing cancel action (Direct invocation)", v27, 2u);
      MEMORY[0x2495011B8](v27, -1, -1);
    }

    outlined init with copy of SearchCallHistoryBinaryButtonModel?(v36, (uint64_t)v10, &demangling cache variable for type metadata for StandardActionHandler?);
    v28 = type metadata accessor for StandardActionHandler();
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v10, 1, v28) == 1)
    {
      outlined destroy of SingleResultCallHistoryModel((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for EmergencyCountdownModel);
      outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v10, &demangling cache variable for type metadata for StandardActionHandler?);
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionElementConvertible>);
      v30 = swift_allocObject();
      *(_OWORD *)(v30 + 16) = xmmword_243B32430;
      v36 = v29;
      v31 = type metadata accessor for Command();
      v32 = MEMORY[0x24BEAD1E8];
      *(_QWORD *)(v30 + 56) = v31;
      *(_QWORD *)(v30 + 64) = v32;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v30 + 32));
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
      *boxed_opaque_existential_1 = CodableAceObject.wrappedValue.getter();
      *((_BYTE *)boxed_opaque_existential_1 + 8) = 0;
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x24BEAD1C8], v31);
      ActionProperty.init(_:)();
      v34 = type metadata accessor for ActionProperty();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v7, 0, 1, v34);
      v35 = type metadata accessor for InteractionType();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v4, 1, 1, v35);
      StandardActionHandler.perform(_:interactionType:)();
      outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v4, &demangling cache variable for type metadata for InteractionType?);
      outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v7, &demangling cache variable for type metadata for ActionProperty?);
      outlined destroy of SingleResultCallHistoryModel((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for EmergencyCountdownModel);
      (*(void (**)(char *, uint64_t))(v36 + 8))(v10, v28);
    }
  }
}

Swift::Void __swiftcall EmergencyCountdownViewModel.cancelTimer()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD v6[4];

  v1 = v0;
  if (one-time initialization token for phoneSnippetUI != -1)
    swift_once();
  v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)static Logger.phoneSnippetUI);
  v3 = Logger.logObject.getter();
  v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_243ABD000, v3, v4, "#EmergencyCountdownViewModel Cancelling Timer", v5, 2u);
    MEMORY[0x2495011B8](v5, -1, -1);
  }

  (*(void (**)(void))(*(_QWORD *)v1 + 392))();
  Publishers.Autoconnect.upstream.getter();
  swift_release();
  NSTimer.TimerPublisher.connect()();
  swift_release();
  __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  dispatch thunk of Cancellable.cancel()();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 1168))(1);
}

Swift::Void __swiftcall EmergencyCountdownViewModel.restartTimer()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[2];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for phoneSnippetUI != -1)
    swift_once();
  v5 = type metadata accessor for Logger();
  __swift_project_value_buffer(v5, (uint64_t)static Logger.phoneSnippetUI);
  v6 = Logger.logObject.getter();
  v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_243ABD000, v6, v7, "#EmergencyCountdownViewModel restarting timer", v8, 2u);
    MEMORY[0x2495011B8](v8, -1, -1);
  }

  (*(void (**)(_QWORD))(*(_QWORD *)v1 + 1168))(0);
  type metadata accessor for SABaseClientBoundCommand(0, (unint64_t *)&lazy cache variable for type metadata for NSTimer);
  v9 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
  v10 = type metadata accessor for NSRunLoop.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v4, 1, 1, v10);
  v11 = static NSTimer.publish(every:tolerance:on:in:options:)();

  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v4, &demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  v13[1] = v11;
  type metadata accessor for NSTimer.TimerPublisher();
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher, (uint64_t (*)(uint64_t))MEMORY[0x24BDD01C8], MEMORY[0x24BDD01B0]);
  v12 = ConnectablePublisher.autoconnect()();
  swift_release();
  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 400))(v12);
}

uint64_t EmergencyCountdownViewModel.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);

  outlined destroy of SearchCallHistoryBinaryButtonModel?(v0 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel_model, &demangling cache variable for type metadata for EmergencyCountdownModel?);
  v1 = v0 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__counter;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Int>);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__animationStep;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGFloat>);
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(v3, v4);
  v6 = v0 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__timer;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Publishers.Autoconnect<NSTimer.TimerPublisher>>);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = v0 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__sashTitle;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>);
  v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
  v10(v8, v9);
  v10(v0 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__cancelButtonText, v9);
  v10(v0 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__cancelledText, v9);
  v10(v0 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__callButtonText, v9);
  v10(v0 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__dialog, v9);
  v10(v0 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__localeIdentifier, v9);
  v10(v0 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__callingLabel, v9);
  v10(v0 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__emergencyServicesLabel, v9);
  v10(v0 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__sos, v9);
  v11 = v0 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__isCounterOnLastStep;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>);
  v13 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
  v13(v11, v12);
  v13(v0 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__timerCancelledByUser, v12);
  v5(v0 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__currentTranslation, v4);

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel____lazy_storage___numberFormatter));
  return v0;
}

uint64_t EmergencyCountdownViewModel.__deallocating_deinit()
{
  EmergencyCountdownViewModel.deinit();
  return swift_deallocClassInstance();
}

uint64_t protocol witness for ObservableObject.objectWillChange.getter in conformance EmergencyCountdownViewModel@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for EmergencyCountdownViewModel(0);
  result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t EmergencyCountdownView.init(model:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;

  type metadata accessor for Context();
  lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
  *a2 = EnvironmentObject.init()();
  a2[1] = v4;
  v5 = type metadata accessor for EmergencyCountdownView(0);
  ActionHandler.init()();
  v6 = *(int *)(v5 + 24);
  if (one-time initialization token for shared != -1)
    swift_once();
  v7 = (uint64_t *)((char *)a2 + v6);
  swift_beginAccess();
  type metadata accessor for EmergencyCountdownViewModel(0);
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type EmergencyCountdownViewModel and conformance EmergencyCountdownViewModel, type metadata accessor for EmergencyCountdownViewModel, (uint64_t)&protocol conformance descriptor for EmergencyCountdownViewModel);
  swift_retain();
  *v7 = ObservedObject.init(wrappedValue:)();
  v7[1] = v8;
  return outlined init with take of SingleResultCallHistoryModel(a1, (uint64_t)a2 + *(int *)(v5 + 28), (uint64_t (*)(_QWORD))type metadata accessor for EmergencyCountdownModel);
}

uint64_t EmergencyCountdownView.body.getter@<X0>(uint64_t a1@<X8>)
{
  id *v1;
  id *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (**v22)();
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (**v27)(uint64_t);
  id v28;
  uint64_t updated;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (**v33)(uint64_t);
  id v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (**v41)(uint64_t);
  uint64_t result;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v2 = v1;
  v54 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[AnyHashable : Any]>.Publisher);
  v52 = *(_QWORD *)(v3 - 8);
  v53 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v51 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = type metadata accessor for EmergencyCountdownView(0);
  v5 = *(_QWORD *)(v47 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v47);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Group<_ConditionalContent<_ConditionalContent<<<opaque return type of View.privacySensitive(_:)>>.0, <<opaque return type of View.privacySensitive(_:)>>.0>, <<opaque return type of View.privacySensitive(_:)>>.0>>);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Group<_ConditionalContent<_ConditionalContent<<<opaque return type of View.privacySensitive(_:)>>.0, <<opaque return type of View.privacySensitive(_:)>>.0>, <<opaque return type of View.privacySensitive(_:)>>.0>>, _AppearanceActionModifier>);
  MEMORY[0x24BDAC7A8](v46);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SubscriptionView<Publishers.Autoconnect<NSTimer.TimerPublisher>, ModifiedContent<Group<_ConditionalContent<_ConditionalContent<<<opaque return type of View.privacySensitive(_:)>>.0, <<opaque return type of View.privacySensitive(_:)>>.0>, <<opaque return type of View.privacySensitive(_:)>>.0>>, _AppearanceActionModifier>>);
  MEMORY[0x24BDAC7A8](v44);
  v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SubscriptionView<AnyPublisher<Context.Event, Never>, SubscriptionView<Publishers.Autoconnect<NSTimer.TimerPublisher>, ModifiedContent<Group<_ConditionalContent<_ConditionalContent<<<opaque return type of View.privacySensitive(_:)>>.0, <<opaque return type of View.privacySensitive(_:)>>.0>, <<opaque return type of View.privacySensitive(_:)>>.0>>, _AppearanceActionModifier>>>);
  MEMORY[0x24BDAC7A8](v48);
  v45 = (uint64_t)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SubscriptionView<Published<[AnyHashable : Any]>.Publisher, SubscriptionView<AnyPublisher<Context.Event, Never>, SubscriptionView<Publishers.Autoconnect<NSTimer.TimerPublisher>, ModifiedContent<Group<_ConditionalContent<_ConditionalContent<<<opaque return type of View.privacySensitive(_:)>>.0, <<opaque return type of View.privacySensitive(_:)>>.0>, <<opaque return type of View.privacySensitive(_:)>>.0>>, _AppearanceActionModifier>>>>);
  MEMORY[0x24BDAC7A8](v49);
  v50 = (uint64_t)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  closure #1 in EmergencyCountdownView.body.getter(v2, (uint64_t)v10);
  outlined init with copy of SearchCallHistoryBinaryButtonModel((uint64_t)v2, (uint64_t)v7, type metadata accessor for EmergencyCountdownView);
  v17 = *(unsigned __int8 *)(v5 + 80);
  v18 = (v17 + 16) & ~v17;
  v19 = v18 + v6;
  v20 = v17 | 7;
  v21 = swift_allocObject();
  outlined init with take of SingleResultCallHistoryModel((uint64_t)v7, v21 + v18, type metadata accessor for EmergencyCountdownView);
  outlined init with copy of SearchCallHistoryBinaryButtonModel?((uint64_t)v10, (uint64_t)v12, &demangling cache variable for type metadata for Group<_ConditionalContent<_ConditionalContent<<<opaque return type of View.privacySensitive(_:)>>.0, <<opaque return type of View.privacySensitive(_:)>>.0>, <<opaque return type of View.privacySensitive(_:)>>.0>>);
  v22 = (uint64_t (**)())&v12[*(int *)(v46 + 36)];
  *v22 = partial apply for closure #2 in EmergencyCountdownView.body.getter;
  v22[1] = (uint64_t (*)())v21;
  v22[2] = 0;
  v22[3] = 0;
  v23 = outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v10, &demangling cache variable for type metadata for Group<_ConditionalContent<_ConditionalContent<<<opaque return type of View.privacySensitive(_:)>>.0, <<opaque return type of View.privacySensitive(_:)>>.0>, <<opaque return type of View.privacySensitive(_:)>>.0>>);
  v24 = (*(uint64_t (**)(uint64_t))(**(_QWORD **)((char *)v2 + *(int *)(v47 + 24) + 8) + 392))(v23);
  outlined init with copy of SearchCallHistoryBinaryButtonModel((uint64_t)v2, (uint64_t)v7, type metadata accessor for EmergencyCountdownView);
  v46 = v19;
  v47 = v20;
  v25 = swift_allocObject();
  outlined init with take of SingleResultCallHistoryModel((uint64_t)v7, v25 + v18, type metadata accessor for EmergencyCountdownView);
  outlined init with copy of SearchCallHistoryBinaryButtonModel?((uint64_t)v12, (uint64_t)v14, &demangling cache variable for type metadata for ModifiedContent<Group<_ConditionalContent<_ConditionalContent<<<opaque return type of View.privacySensitive(_:)>>.0, <<opaque return type of View.privacySensitive(_:)>>.0>, <<opaque return type of View.privacySensitive(_:)>>.0>>, _AppearanceActionModifier>);
  v26 = v44;
  *(_QWORD *)&v14[*(int *)(v44 + 52)] = v24;
  v27 = (uint64_t (**)(uint64_t))&v14[*(int *)(v26 + 56)];
  *v27 = partial apply for closure #3 in EmergencyCountdownView.body.getter;
  v27[1] = (uint64_t (*)(uint64_t))v25;
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v12, &demangling cache variable for type metadata for ModifiedContent<Group<_ConditionalContent<_ConditionalContent<<<opaque return type of View.privacySensitive(_:)>>.0, <<opaque return type of View.privacySensitive(_:)>>.0>, <<opaque return type of View.privacySensitive(_:)>>.0>>, _AppearanceActionModifier>);
  if (!*v2)
    goto LABEL_4;
  v28 = *v2;
  updated = dispatch thunk of Context.siriEventUpdatePublisher.getter();

  outlined init with copy of SearchCallHistoryBinaryButtonModel((uint64_t)v2, (uint64_t)v7, type metadata accessor for EmergencyCountdownView);
  v30 = swift_allocObject();
  outlined init with take of SingleResultCallHistoryModel((uint64_t)v7, v30 + v18, type metadata accessor for EmergencyCountdownView);
  v31 = v45;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?((uint64_t)v14, v45, &demangling cache variable for type metadata for SubscriptionView<Publishers.Autoconnect<NSTimer.TimerPublisher>, ModifiedContent<Group<_ConditionalContent<_ConditionalContent<<<opaque return type of View.privacySensitive(_:)>>.0, <<opaque return type of View.privacySensitive(_:)>>.0>, <<opaque return type of View.privacySensitive(_:)>>.0>>, _AppearanceActionModifier>>);
  v32 = v48;
  *(_QWORD *)(v31 + *(int *)(v48 + 52)) = updated;
  v33 = (uint64_t (**)(uint64_t))(v31 + *(int *)(v32 + 56));
  *v33 = partial apply for closure #4 in EmergencyCountdownView.body.getter;
  v33[1] = (uint64_t (*)(uint64_t))v30;
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v14, &demangling cache variable for type metadata for SubscriptionView<Publishers.Autoconnect<NSTimer.TimerPublisher>, ModifiedContent<Group<_ConditionalContent<_ConditionalContent<<<opaque return type of View.privacySensitive(_:)>>.0, <<opaque return type of View.privacySensitive(_:)>>.0>, <<opaque return type of View.privacySensitive(_:)>>.0>>, _AppearanceActionModifier>>);
  if (*v2)
  {
    v34 = *v2;
    v35 = v51;
    dispatch thunk of Context.$sharedState.getter();

    outlined init with copy of SearchCallHistoryBinaryButtonModel((uint64_t)v2, (uint64_t)v7, type metadata accessor for EmergencyCountdownView);
    v36 = swift_allocObject();
    outlined init with take of SingleResultCallHistoryModel((uint64_t)v7, v36 + v18, type metadata accessor for EmergencyCountdownView);
    v37 = v50;
    outlined init with copy of SearchCallHistoryBinaryButtonModel?(v31, v50, &demangling cache variable for type metadata for SubscriptionView<AnyPublisher<Context.Event, Never>, SubscriptionView<Publishers.Autoconnect<NSTimer.TimerPublisher>, ModifiedContent<Group<_ConditionalContent<_ConditionalContent<<<opaque return type of View.privacySensitive(_:)>>.0, <<opaque return type of View.privacySensitive(_:)>>.0>, <<opaque return type of View.privacySensitive(_:)>>.0>>, _AppearanceActionModifier>>>);
    v38 = v49;
    v40 = v52;
    v39 = v53;
    (*(void (**)(uint64_t, char *, uint64_t))(v52 + 16))(v37 + *(int *)(v49 + 52), v35, v53);
    v41 = (uint64_t (**)(uint64_t))(v37 + *(int *)(v38 + 56));
    *v41 = partial apply for closure #5 in EmergencyCountdownView.body.getter;
    v41[1] = (uint64_t (*)(uint64_t))v36;
    (*(void (**)(char *, uint64_t))(v40 + 8))(v35, v39);
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v31, &demangling cache variable for type metadata for SubscriptionView<AnyPublisher<Context.Event, Never>, SubscriptionView<Publishers.Autoconnect<NSTimer.TimerPublisher>, ModifiedContent<Group<_ConditionalContent<_ConditionalContent<<<opaque return type of View.privacySensitive(_:)>>.0, <<opaque return type of View.privacySensitive(_:)>>.0>, <<opaque return type of View.privacySensitive(_:)>>.0>>, _AppearanceActionModifier>>>);
    return outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout>, _ClipEffect<Capsule>>(v37, v54, &demangling cache variable for type metadata for SubscriptionView<Published<[AnyHashable : Any]>.Publisher, SubscriptionView<AnyPublisher<Context.Event, Never>, SubscriptionView<Publishers.Autoconnect<NSTimer.TimerPublisher>, ModifiedContent<Group<_ConditionalContent<_ConditionalContent<<<opaque return type of View.privacySensitive(_:)>>.0, <<opaque return type of View.privacySensitive(_:)>>.0>, <<opaque return type of View.privacySensitive(_:)>>.0>>, _AppearanceActionModifier>>>>);
  }
  else
  {
LABEL_4:
    type metadata accessor for Context();
    lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
    result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t closure #1 in EmergencyCountdownView.body.getter@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  char v37;
  id v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;

  v82 = a2;
  v80 = type metadata accessor for StandardEmergencyCountdown(0);
  MEMORY[0x24BDAC7A8](v80);
  v4 = (uint64_t *)((char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v81 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.privacySensitive(_:)>>.0);
  v69 = *(_QWORD *)(v81 - 8);
  v5 = MEMORY[0x24BDAC7A8](v81);
  v67 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v68 = (char *)&v62 - v7;
  v74 = type metadata accessor for SmartEmergencyCountdown(0);
  MEMORY[0x24BDAC7A8](v74);
  v64 = (uint64_t *)((char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v76 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.privacySensitive(_:)>>.0);
  v66 = *(_QWORD *)(v76 - 8);
  v9 = MEMORY[0x24BDAC7A8](v76);
  v63 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v65 = (char *)&v62 - v11;
  v12 = type metadata accessor for EmergencyCountdownView(0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (id *)((char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v77 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<_ConditionalContent<<<opaque return type of View.privacySensitive(_:)>>.0, <<opaque return type of View.privacySensitive(_:)>>.0>, <<opaque return type of View.privacySensitive(_:)>>.0>.Storage);
  MEMORY[0x24BDAC7A8](v77);
  v79 = (uint64_t)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.privacySensitive(_:)>>.0, <<opaque return type of View.privacySensitive(_:)>>.0>.Storage);
  MEMORY[0x24BDAC7A8](v71);
  v72 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.privacySensitive(_:)>>.0, <<opaque return type of View.privacySensitive(_:)>>.0>);
  MEMORY[0x24BDAC7A8](v78);
  v75 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (int *)type metadata accessor for CarPlayEmergencyCountdown(0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (uint64_t *)((char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v73 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.privacySensitive(_:)>>.0);
  v70 = *(_QWORD *)(v73 - 8);
  v21 = MEMORY[0x24BDAC7A8](v73);
  v23 = (char *)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v62 - v24;
  if (*a1)
  {
    v26 = *a1;
    dispatch thunk of Context.currentIdiom.getter();

    if ((VRXIdiom.isCarPlay.getter() & 1) != 0)
    {
      type metadata accessor for Context();
      lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
      swift_retain();
      *v20 = EnvironmentObject.init()();
      v20[1] = v27;
      type metadata accessor for EmergencyCountdownViewModel(0);
      lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type EmergencyCountdownViewModel and conformance EmergencyCountdownViewModel, type metadata accessor for EmergencyCountdownViewModel, (uint64_t)&protocol conformance descriptor for EmergencyCountdownViewModel);
      v20[2] = ObservedObject.init(wrappedValue:)();
      v20[3] = v28;
      ActionHandler.init()();
      *(uint64_t *)((char *)v20 + v18[7]) = 0x4024000000000000;
      *(uint64_t *)((char *)v20 + v18[8]) = 0x4052000000000000;
      *(uint64_t *)((char *)v20 + v18[9]) = 0x4058000000000000;
      v29 = lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type CarPlayEmergencyCountdown and conformance CarPlayEmergencyCountdown, type metadata accessor for CarPlayEmergencyCountdown, (uint64_t)&protocol conformance descriptor for CarPlayEmergencyCountdown);
      View.privacySensitive(_:)();
      outlined destroy of SingleResultCallHistoryModel((uint64_t)v20, type metadata accessor for CarPlayEmergencyCountdown);
      v30 = v70;
      v31 = v23;
      v32 = v73;
      (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v25, v31, v73);
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v72, v25, v32);
      swift_storeEnumTagMultiPayload();
      v83 = (uint64_t)v18;
      v84 = v29;
      swift_getOpaqueTypeConformance2();
      v33 = lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type SmartEmergencyCountdown and conformance SmartEmergencyCountdown, type metadata accessor for SmartEmergencyCountdown, (uint64_t)&protocol conformance descriptor for SmartEmergencyCountdown);
      v83 = v74;
      v84 = v33;
      swift_getOpaqueTypeConformance2();
      v34 = (uint64_t)v75;
      _ConditionalContent<>.init(storage:)();
      outlined init with copy of SearchCallHistoryBinaryButtonModel?(v34, v79, &demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.privacySensitive(_:)>>.0, <<opaque return type of View.privacySensitive(_:)>>.0>);
      swift_storeEnumTagMultiPayload();
      lazy protocol witness table accessor for type _ConditionalContent<<<opaque return type of View.privacySensitive(_:)>>.0, <<opaque return type of View.privacySensitive(_:)>>.0> and conformance <> _ConditionalContent<A, B>();
      v35 = lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type StandardEmergencyCountdown and conformance StandardEmergencyCountdown, type metadata accessor for StandardEmergencyCountdown, (uint64_t)&protocol conformance descriptor for StandardEmergencyCountdown);
      v83 = v80;
      v84 = v35;
      swift_getOpaqueTypeConformance2();
      _ConditionalContent<>.init(storage:)();
      outlined destroy of SearchCallHistoryBinaryButtonModel?(v34, &demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.privacySensitive(_:)>>.0, <<opaque return type of View.privacySensitive(_:)>>.0>);
      return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v25, v32);
    }
    v37 = (*(uint64_t (**)(void))(**(_QWORD **)((char *)a1 + *(int *)(v12 + 24) + 8) + 1184))();
    outlined init with copy of SearchCallHistoryBinaryButtonModel((uint64_t)a1, (uint64_t)v14, type metadata accessor for EmergencyCountdownView);
    if ((v37 & 1) == 0)
    {
      outlined destroy of SingleResultCallHistoryModel((uint64_t)v14, type metadata accessor for EmergencyCountdownView);
LABEL_9:
      type metadata accessor for EmergencyCountdownViewModel(0);
      lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type EmergencyCountdownViewModel and conformance EmergencyCountdownViewModel, type metadata accessor for EmergencyCountdownViewModel, (uint64_t)&protocol conformance descriptor for EmergencyCountdownViewModel);
      swift_retain();
      *v4 = ObservedObject.init(wrappedValue:)();
      v4[1] = v54;
      type metadata accessor for Context();
      lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
      v4[2] = EnvironmentObject.init()();
      v4[3] = v55;
      v56 = v80;
      ActionHandler.init()();
      v57 = lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type StandardEmergencyCountdown and conformance StandardEmergencyCountdown, type metadata accessor for StandardEmergencyCountdown, (uint64_t)&protocol conformance descriptor for StandardEmergencyCountdown);
      v58 = v67;
      View.privacySensitive(_:)();
      outlined destroy of SingleResultCallHistoryModel((uint64_t)v4, type metadata accessor for StandardEmergencyCountdown);
      v60 = v68;
      v59 = v69;
      v61 = v81;
      (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v68, v58, v81);
      (*(void (**)(uint64_t, char *, uint64_t))(v59 + 16))(v79, v60, v61);
      swift_storeEnumTagMultiPayload();
      lazy protocol witness table accessor for type _ConditionalContent<<<opaque return type of View.privacySensitive(_:)>>.0, <<opaque return type of View.privacySensitive(_:)>>.0> and conformance <> _ConditionalContent<A, B>();
      v83 = v56;
      v84 = v57;
      swift_getOpaqueTypeConformance2();
      _ConditionalContent<>.init(storage:)();
      return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v60, v61);
    }
    if (*v14)
    {
      v38 = *v14;
      v39 = dispatch thunk of Context.isInAmbient.getter();

      outlined destroy of SingleResultCallHistoryModel((uint64_t)v14, type metadata accessor for EmergencyCountdownView);
      if ((v39 & 1) == 0)
      {
        type metadata accessor for Context();
        lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
        swift_retain();
        v40 = EnvironmentObject.init()();
        v41 = (uint64_t)v64;
        *v64 = v40;
        *(_QWORD *)(v41 + 8) = v42;
        v43 = v74;
        ActionHandler.init()();
        v44 = (uint64_t *)(v41 + *(int *)(v43 + 24));
        type metadata accessor for EmergencyCountdownViewModel(0);
        lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type EmergencyCountdownViewModel and conformance EmergencyCountdownViewModel, type metadata accessor for EmergencyCountdownViewModel, (uint64_t)&protocol conformance descriptor for EmergencyCountdownViewModel);
        *v44 = ObservedObject.init(wrappedValue:)();
        v44[1] = v45;
        v46 = lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type SmartEmergencyCountdown and conformance SmartEmergencyCountdown, type metadata accessor for SmartEmergencyCountdown, (uint64_t)&protocol conformance descriptor for SmartEmergencyCountdown);
        v47 = v63;
        View.privacySensitive(_:)();
        outlined destroy of SingleResultCallHistoryModel(v41, type metadata accessor for SmartEmergencyCountdown);
        v49 = v65;
        v48 = v66;
        v50 = v76;
        (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v65, v47, v76);
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v72, v49, v50);
        swift_storeEnumTagMultiPayload();
        v51 = lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type CarPlayEmergencyCountdown and conformance CarPlayEmergencyCountdown, type metadata accessor for CarPlayEmergencyCountdown, (uint64_t)&protocol conformance descriptor for CarPlayEmergencyCountdown);
        v83 = (uint64_t)v18;
        v84 = v51;
        swift_getOpaqueTypeConformance2();
        v83 = v43;
        v84 = v46;
        swift_getOpaqueTypeConformance2();
        v52 = (uint64_t)v75;
        _ConditionalContent<>.init(storage:)();
        outlined init with copy of SearchCallHistoryBinaryButtonModel?(v52, v79, &demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.privacySensitive(_:)>>.0, <<opaque return type of View.privacySensitive(_:)>>.0>);
        swift_storeEnumTagMultiPayload();
        lazy protocol witness table accessor for type _ConditionalContent<<<opaque return type of View.privacySensitive(_:)>>.0, <<opaque return type of View.privacySensitive(_:)>>.0> and conformance <> _ConditionalContent<A, B>();
        v53 = lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type StandardEmergencyCountdown and conformance StandardEmergencyCountdown, type metadata accessor for StandardEmergencyCountdown, (uint64_t)&protocol conformance descriptor for StandardEmergencyCountdown);
        v83 = v80;
        v84 = v53;
        swift_getOpaqueTypeConformance2();
        _ConditionalContent<>.init(storage:)();
        outlined destroy of SearchCallHistoryBinaryButtonModel?(v52, &demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.privacySensitive(_:)>>.0, <<opaque return type of View.privacySensitive(_:)>>.0>);
        return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v49, v50);
      }
      goto LABEL_9;
    }
  }
  type metadata accessor for Context();
  lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
  result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

uint64_t CarPlayEmergencyCountdown.init(viewModel:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t result;

  type metadata accessor for Context();
  lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
  *a1 = EnvironmentObject.init()();
  a1[1] = v2;
  type metadata accessor for EmergencyCountdownViewModel(0);
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type EmergencyCountdownViewModel and conformance EmergencyCountdownViewModel, type metadata accessor for EmergencyCountdownViewModel, (uint64_t)&protocol conformance descriptor for EmergencyCountdownViewModel);
  a1[2] = ObservedObject.init(wrappedValue:)();
  a1[3] = v3;
  v4 = (int *)type metadata accessor for CarPlayEmergencyCountdown(0);
  result = ActionHandler.init()();
  *(uint64_t *)((char *)a1 + v4[7]) = 0x4024000000000000;
  *(uint64_t *)((char *)a1 + v4[8]) = 0x4052000000000000;
  *(uint64_t *)((char *)a1 + v4[9]) = 0x4058000000000000;
  return result;
}

uint64_t SmartEmergencyCountdown.init(model:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t result;
  uint64_t v6;

  type metadata accessor for Context();
  lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
  *a1 = EnvironmentObject.init()();
  a1[1] = v2;
  v3 = type metadata accessor for SmartEmergencyCountdown(0);
  ActionHandler.init()();
  v4 = (uint64_t *)((char *)a1 + *(int *)(v3 + 24));
  type metadata accessor for EmergencyCountdownViewModel(0);
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type EmergencyCountdownViewModel and conformance EmergencyCountdownViewModel, type metadata accessor for EmergencyCountdownViewModel, (uint64_t)&protocol conformance descriptor for EmergencyCountdownViewModel);
  result = ObservedObject.init(wrappedValue:)();
  *v4 = result;
  v4[1] = v6;
  return result;
}

uint64_t StandardEmergencyCountdown.init(viewModel:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  type metadata accessor for EmergencyCountdownViewModel(0);
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type EmergencyCountdownViewModel and conformance EmergencyCountdownViewModel, type metadata accessor for EmergencyCountdownViewModel, (uint64_t)&protocol conformance descriptor for EmergencyCountdownViewModel);
  *a1 = ObservedObject.init(wrappedValue:)();
  a1[1] = v2;
  type metadata accessor for Context();
  lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
  a1[2] = EnvironmentObject.init()();
  a1[3] = v3;
  type metadata accessor for StandardEmergencyCountdown(0);
  return ActionHandler.init()();
}

uint64_t closure #3 in EmergencyCountdownView.body.getter(uint64_t a1, id *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  void (*v11)(char *, id);
  id v12;
  uint64_t result;
  uint64_t v14;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for phoneSnippetUI != -1)
    swift_once();
  v6 = type metadata accessor for Logger();
  __swift_project_value_buffer(v6, (uint64_t)static Logger.phoneSnippetUI);
  v7 = Logger.logObject.getter();
  v8 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_243ABD000, v7, v8, "#EmergencyCountdownView triggering timer update", v9, 2u);
    MEMORY[0x2495011B8](v9, -1, -1);
  }

  v10 = *(uint64_t *)((char *)a2 + *(int *)(type metadata accessor for EmergencyCountdownView(0) + 24) + 8);
  ActionHandler.wrappedValue.getter();
  if (*a2)
  {
    v11 = *(void (**)(char *, id))(*(_QWORD *)v10 + 1232);
    v12 = *a2;
    v11(v5, v12);

    return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v5, &demangling cache variable for type metadata for StandardActionHandler?);
  }
  else
  {
    type metadata accessor for Context();
    lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
    result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t closure #4 in EmergencyCountdownView.body.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for Context.Event();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  if ((*(unsigned int (**)(_QWORD *, uint64_t))(v5 + 88))(v7, v4) != *MEMORY[0x24BEAE4E8])
    return (*(uint64_t (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v5 + 96))(v7, v4);
  if (*v7 == 3)
  {
    v9 = type metadata accessor for EmergencyCountdownView(0);
    return (*(uint64_t (**)(void))(**(_QWORD **)(a2 + *(int *)(v9 + 24) + 8) + 1256))();
  }
  return result;
}

uint64_t closure #5 in EmergencyCountdownView.body.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;

  lazy protocol witness table accessor for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction();
  lazy protocol witness table accessor for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction();
  lazy protocol witness table accessor for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction();
  swift_bridgeObjectRetain();
  UpdateResponseCommand<>.init(_:)();
  v3 = a2 + *(int *)(type metadata accessor for EmergencyCountdownView(0) + 24);
  (*(void (**)(uint64_t))(**(_QWORD **)(v3 + 8) + 928))(1);
  if (one-time initialization token for phoneSnippetUI != -1)
    swift_once();
  v4 = type metadata accessor for Logger();
  __swift_project_value_buffer(v4, (uint64_t)static Logger.phoneSnippetUI);
  v5 = Logger.logObject.getter();
  v6 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_243ABD000, v5, v6, "#EmergencyCountdownView received action to cancel timer", v7, 2u);
    MEMORY[0x2495011B8](v7, -1, -1);
  }

  return (*(uint64_t (**)(void))(**(_QWORD **)(v3 + 8) + 1280))();
}

uint64_t CarPlayEmergencyCountdown.viewModel.getter()
{
  return swift_retain();
}

uint64_t CarPlayEmergencyCountdown.viewModel.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_release();
  *(_QWORD *)(v1 + 24) = a1;
  return result;
}

uint64_t (*CarPlayEmergencyCountdown.viewModel.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t CarPlayEmergencyCountdown.$viewModel.getter()
{
  type metadata accessor for EmergencyCountdownViewModel(0);
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type EmergencyCountdownViewModel and conformance EmergencyCountdownViewModel, type metadata accessor for EmergencyCountdownViewModel, (uint64_t)&protocol conformance descriptor for EmergencyCountdownViewModel);
  return ObservedObject.projectedValue.getter();
}

uint64_t CarPlayEmergencyCountdown.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t (**v12)();
  uint64_t v14;

  v3 = type metadata accessor for CarPlayEmergencyCountdown(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(EmergencyCountdownSash, ButtonContainerView)>>);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v8 = static HorizontalAlignment.center.getter();
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 0;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(EmergencyCountdownSash, ButtonContainerView)>>);
  closure #1 in CarPlayEmergencyCountdown.body.getter(v1, &v8[*(int *)(v9 + 44)]);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v1, (uint64_t)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CarPlayEmergencyCountdown);
  v10 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v11 = swift_allocObject();
  outlined init with take of SingleResultCallHistoryModel((uint64_t)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10, type metadata accessor for CarPlayEmergencyCountdown);
  outlined init with copy of SearchCallHistoryBinaryButtonModel?((uint64_t)v8, a1, &demangling cache variable for type metadata for VStack<TupleView<(EmergencyCountdownSash, ButtonContainerView)>>);
  v12 = (uint64_t (**)())(a1
                       + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(EmergencyCountdownSash, ButtonContainerView)>>, _AppearanceActionModifier>)
                                + 36));
  *v12 = partial apply for closure #2 in CarPlayEmergencyCountdown.body.getter;
  v12[1] = (uint64_t (*)())v11;
  v12[2] = 0;
  v12[3] = 0;
  return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v8, &demangling cache variable for type metadata for VStack<TupleView<(EmergencyCountdownSash, ButtonContainerView)>>);
}

void closure #1 in CarPlayEmergencyCountdown.body.getter(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v18;
  void (*v19)(_BYTE *, uint64_t);
  id v20;
  _BYTE v21[16];
  uint64_t v22;

  v4 = type metadata accessor for ButtonContainerView();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v6);
  v10 = &v21[-v9];
  type metadata accessor for Context();
  lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
  swift_retain();
  v11 = (void *)EnvironmentObject.init()();
  v13 = v12;
  type metadata accessor for EmergencyCountdownViewModel(0);
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type EmergencyCountdownViewModel and conformance EmergencyCountdownViewModel, type metadata accessor for EmergencyCountdownViewModel, (uint64_t)&protocol conformance descriptor for EmergencyCountdownViewModel);
  v14 = ObservedObject.init(wrappedValue:)();
  v16 = v15;
  v22 = a1;
  ButtonContainerView.init(buttons:)();
  v17 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 16);
  v17(v8, v10, v4);
  *a2 = v11;
  a2[1] = v13;
  a2[2] = v14;
  a2[3] = v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (EmergencyCountdownSash, ButtonContainerView));
  v17((_BYTE *)a2 + *(int *)(v18 + 48), v8, v4);
  v19 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
  v20 = v11;
  swift_retain();
  v19(v10, v4);
  v19(v8, v4);
  swift_release();

}

uint64_t EmergencyCountdownSash.init(model:)()
{
  uint64_t v0;

  type metadata accessor for Context();
  lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
  v0 = EnvironmentObject.init()();
  type metadata accessor for EmergencyCountdownViewModel(0);
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type EmergencyCountdownViewModel and conformance EmergencyCountdownViewModel, type metadata accessor for EmergencyCountdownViewModel, (uint64_t)&protocol conformance descriptor for EmergencyCountdownViewModel);
  ObservedObject.init(wrappedValue:)();
  return v0;
}

uint64_t closure #1 in closure #1 in CarPlayEmergencyCountdown.body.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t OpaqueTypeConformance2;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v32;
  void (*v33)(uint64_t *, char *, uint64_t);
  char *v34;
  _OWORD *v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t *v42;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  _OWORD v73[2];
  _OWORD v74[10];
  _OWORD v75[2];
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  _OWORD v86[3];

  v2 = type metadata accessor for StandardSiriButtonStyle();
  v3 = *(_QWORD *)(v2 - 8);
  v56 = v2;
  v57 = v3;
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CarPlayEmergencyCountdown(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<Label<<<opaque return type of View.privacySensitive(_:)>>.0, RFImageView>>);
  v54 = *(_QWORD *)(v10 - 8);
  v11 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.buttonStyle<A>(_:)>>.0);
  v15 = *(_QWORD *)(v14 - 8);
  v58 = v14;
  v59 = v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v60 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v55 = (char *)&v47 - v18;
  outlined init with copy of SearchCallHistoryBinaryButtonModel(a1, (uint64_t)v9, type metadata accessor for CarPlayEmergencyCountdown);
  v19 = *(unsigned __int8 *)(v7 + 80);
  v52 = ((v19 + 16) & ~v19) + v8;
  v53 = (v19 + 16) & ~v19;
  v20 = v53;
  v51 = v19 | 7;
  v21 = swift_allocObject();
  outlined init with take of SingleResultCallHistoryModel((uint64_t)v9, v21 + v20, type metadata accessor for CarPlayEmergencyCountdown);
  v62 = a1;
  v50 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Label<<<opaque return type of View.privacySensitive(_:)>>.0, RFImageView>);
  v49 = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type Label<<<opaque return type of View.privacySensitive(_:)>>.0, RFImageView> and conformance Label<A, B>, &demangling cache variable for type metadata for Label<<<opaque return type of View.privacySensitive(_:)>>.0, RFImageView>, MEMORY[0x24BDF41A0]);
  Button.init(action:label:)();
  static ButtonStyle<>.standardSiriButton(bold:hideIcon:isPressed:)();
  v48 = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type Button<Label<<<opaque return type of View.privacySensitive(_:)>>.0, RFImageView>> and conformance Button<A>, &demangling cache variable for type metadata for Button<Label<<<opaque return type of View.privacySensitive(_:)>>.0, RFImageView>>, MEMORY[0x24BDF43B8]);
  v47 = lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type StandardSiriButtonStyle and conformance StandardSiriButtonStyle, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE1F0], MEMORY[0x24BEAE1E0]);
  v22 = v11;
  v23 = v56;
  View.buttonStyle<A>(_:)();
  v57 = *(_QWORD *)(v57 + 8);
  ((void (*)(char *, uint64_t))v57)(v5, v23);
  v24 = *(void (**)(char *, uint64_t))(v54 + 8);
  v24(v13, v22);
  CarPlayEmergencyCountdown.countdownLabel.getter((uint64_t)&v63);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(a1, (uint64_t)v9, type metadata accessor for CarPlayEmergencyCountdown);
  v25 = swift_allocObject();
  outlined init with take of SingleResultCallHistoryModel((uint64_t)v9, v25 + v53, type metadata accessor for CarPlayEmergencyCountdown);
  v61 = a1;
  Button.init(action:label:)();
  static ButtonStyle<>.standardSiriButton(bold:hideIcon:isPressed:)();
  v27 = v47;
  v26 = v48;
  View.buttonStyle<A>(_:)();
  ((void (*)(char *, uint64_t))v57)(v5, v23);
  v24(v13, v22);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<View>);
  v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_243B34E50;
  v29 = v58;
  *(_QWORD *)(v28 + 56) = v58;
  *(_QWORD *)&v76 = v22;
  *((_QWORD *)&v76 + 1) = v23;
  *(_QWORD *)&v77 = v26;
  *((_QWORD *)&v77 + 1) = v27;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  *(_QWORD *)(v28 + 64) = OpaqueTypeConformance2;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v28 + 32));
  v32 = v59;
  v33 = *(void (**)(uint64_t *, char *, uint64_t))(v59 + 16);
  v34 = v55;
  v33(boxed_opaque_existential_1, v55, v29);
  v74[8] = v71;
  v74[9] = v72;
  v75[0] = v73[0];
  *(_OWORD *)((char *)v75 + 9) = *(_OWORD *)((char *)v73 + 9);
  v74[4] = v67;
  v74[5] = v68;
  v74[6] = v69;
  v74[7] = v70;
  v74[0] = v63;
  v74[1] = v64;
  v74[2] = v65;
  v74[3] = v66;
  *(_QWORD *)(v28 + 96) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _PaddingLayout>);
  *(_QWORD *)(v28 + 104) = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _PaddingLayout>, (uint64_t (*)(void))lazy protocol witness table accessor for type ModifiedContent<Text, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>);
  v35 = (_OWORD *)swift_allocObject();
  *(_QWORD *)(v28 + 72) = v35;
  v36 = v72;
  v35[9] = v71;
  v35[10] = v36;
  v35[11] = v73[0];
  *(_OWORD *)((char *)v35 + 185) = *(_OWORD *)((char *)v73 + 9);
  v37 = v68;
  v35[5] = v67;
  v35[6] = v37;
  v38 = v70;
  v35[7] = v69;
  v35[8] = v38;
  v39 = v64;
  v35[1] = v63;
  v35[2] = v39;
  v40 = v66;
  v35[3] = v65;
  v35[4] = v40;
  v41 = v29;
  *(_QWORD *)(v28 + 136) = v29;
  *(_QWORD *)(v28 + 144) = OpaqueTypeConformance2;
  v42 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v28 + 112));
  v43 = v60;
  v33(v42, v60, v41);
  outlined retain of ModifiedContent<Text, _FlexFrameLayout>((uint64_t)v74);
  v44 = MEMORY[0x249500720](v28);
  swift_bridgeObjectRelease();
  v45 = *(void (**)(char *, uint64_t))(v32 + 8);
  v45(v43, v41);
  v84 = v71;
  v85 = v72;
  v86[0] = v73[0];
  *(_OWORD *)((char *)v86 + 9) = *(_OWORD *)((char *)v73 + 9);
  v80 = v67;
  v81 = v68;
  v82 = v69;
  v83 = v70;
  v76 = v63;
  v77 = v64;
  v78 = v65;
  v79 = v66;
  outlined release of ModifiedContent<Text, _FlexFrameLayout>((uint64_t)&v76);
  v45(v34, v41);
  return v44;
}

uint64_t CarPlayEmergencyCountdown.countdownLabel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  char v44;
  char v45;
  char v46;
  char v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Font.Design?);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(v1 + 24) + 1248);
  v8 = swift_retain();
  v9 = v7(v8);
  v11 = v10;
  swift_release();
  v49 = v9;
  v50 = v11;
  lazy protocol witness table accessor for type String and conformance String();
  v12 = Text.init<A>(_:)();
  v14 = v13;
  LOBYTE(v9) = v15 & 1;
  v16 = type metadata accessor for CarPlayEmergencyCountdown(0);
  static Font.Weight.semibold.getter();
  v17 = type metadata accessor for Font.Design();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v6, 1, 1, v17);
  static Font.system(size:weight:design:)();
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v6, &demangling cache variable for type metadata for Font.Design?);
  v38 = Text.font(_:)();
  v37 = v18;
  v36 = v19;
  v39 = v20;
  swift_release();
  outlined consume of Text.Storage(v12, v14, v9);
  swift_bridgeObjectRelease();
  v40 = v16;
  v41 = v2;
  static Alignment.center.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  v21 = v49;
  v22 = v51;
  v23 = v53;
  v24 = v55;
  v25 = v57;
  v26 = v59;
  v28 = v61;
  v27 = v62;
  v48 = v36 & 1;
  v47 = v50;
  v46 = v52;
  v45 = v54;
  v44 = v56;
  v43 = v58;
  v42 = v60;
  LOBYTE(v9) = static Edge.Set.vertical.getter();
  result = EdgeInsets.init(_all:)();
  v30 = v37;
  *(_QWORD *)a1 = v38;
  *(_QWORD *)(a1 + 8) = v30;
  *(_BYTE *)(a1 + 16) = v48;
  *(_QWORD *)(a1 + 24) = v39;
  *(_QWORD *)(a1 + 32) = v21;
  *(_BYTE *)(a1 + 40) = v47;
  *(_QWORD *)(a1 + 48) = v22;
  *(_BYTE *)(a1 + 56) = v46;
  *(_QWORD *)(a1 + 64) = v23;
  *(_BYTE *)(a1 + 72) = v45;
  *(_QWORD *)(a1 + 80) = v24;
  *(_BYTE *)(a1 + 88) = v44;
  *(_QWORD *)(a1 + 96) = v25;
  *(_BYTE *)(a1 + 104) = v43;
  *(_QWORD *)(a1 + 112) = v26;
  *(_BYTE *)(a1 + 120) = v42;
  *(_QWORD *)(a1 + 128) = v28;
  *(_QWORD *)(a1 + 136) = v27;
  *(_BYTE *)(a1 + 144) = v9;
  *(_QWORD *)(a1 + 152) = v31;
  *(_QWORD *)(a1 + 160) = v32;
  *(_QWORD *)(a1 + 168) = v33;
  *(_QWORD *)(a1 + 176) = v34;
  *(_BYTE *)(a1 + 184) = 0;
  return result;
}

uint64_t closure #1 in CarPlayEmergencyCountdown.cancelButton.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(a1 + 24);
  type metadata accessor for CarPlayEmergencyCountdown(0);
  swift_retain();
  ActionHandler.wrappedValue.getter();
  (*(void (**)(char *))(*(_QWORD *)v5 + 1272))(v4);
  swift_release();
  return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v4, &demangling cache variable for type metadata for StandardActionHandler?);
}

uint64_t closure #1 in closure #2 in CarPlayEmergencyCountdown.cancelButton.getter(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;

  v1 = *(void (**)(uint64_t))(**(_QWORD **)(a1 + 24) + 488);
  v2 = swift_retain();
  v1(v2);
  swift_release();
  lazy protocol witness table accessor for type String and conformance String();
  v3 = Text.init<A>(_:)();
  v5 = v4;
  v7 = v6 & 1;
  View.privacySensitive(_:)();
  outlined consume of Text.Storage(v3, v5, v7);
  return swift_bridgeObjectRelease();
}

uint64_t closure #2 in closure #2 in CarPlayEmergencyCountdown.cancelButton.getter()
{
  return closure #2 in closure #2 in CarPlayEmergencyCountdown.cancelButton.getter();
}

{
  uint64_t v0;

  v0 = type metadata accessor for RFImage();
  MEMORY[0x24BDAC7A8](v0);
  static RFImage.symbol(_:dark:)();
  return RFImageView.init(_:)();
}

uint64_t closure #1 in CarPlayEmergencyCountdown.callButton.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(a1 + 24);
  type metadata accessor for CarPlayEmergencyCountdown(0);
  swift_retain();
  ActionHandler.wrappedValue.getter();
  (*(void (**)(char *))(*(_QWORD *)v5 + 1264))(v4);
  swift_release();
  return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v4, &demangling cache variable for type metadata for StandardActionHandler?);
}

uint64_t closure #2 in CarPlayEmergencyCountdown.cancelButton.getter()
{
  uint64_t (*v0)(uint64_t);

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.privacySensitive(_:)>>.0);
  type metadata accessor for RFImageView();
  v0 = (uint64_t (*)(uint64_t))MEMORY[0x24BEADA40];
  swift_getOpaqueTypeConformance2();
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type RFImageView and conformance RFImageView, v0, MEMORY[0x24BEADA18]);
  return Label.init(title:icon:)();
}

uint64_t closure #1 in closure #2 in CarPlayEmergencyCountdown.callButton.getter(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;

  v1 = *(void (**)(uint64_t))(**(_QWORD **)(a1 + 24) + 584);
  v2 = swift_retain();
  v1(v2);
  swift_release();
  lazy protocol witness table accessor for type String and conformance String();
  v3 = Text.init<A>(_:)();
  v5 = v4;
  v7 = v6 & 1;
  View.privacySensitive(_:)();
  outlined consume of Text.Storage(v3, v5, v7);
  return swift_bridgeObjectRelease();
}

uint64_t closure #2 in closure #2 in CarPlayEmergencyCountdown.callButton.getter()
{
  return closure #2 in closure #2 in CarPlayEmergencyCountdown.cancelButton.getter();
}

uint64_t protocol witness for View.body.getter in conformance CarPlayEmergencyCountdown@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t (**v13)();
  uint64_t v15;

  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(EmergencyCountdownSash, ButtonContainerView)>>);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v9 = static HorizontalAlignment.center.getter();
  *((_QWORD *)v9 + 1) = 0;
  v9[16] = 0;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(EmergencyCountdownSash, ButtonContainerView)>>);
  closure #1 in CarPlayEmergencyCountdown.body.getter(v2, &v9[*(int *)(v10 + 44)]);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v2, (uint64_t)v6, type metadata accessor for CarPlayEmergencyCountdown);
  v11 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v12 = swift_allocObject();
  outlined init with take of SingleResultCallHistoryModel((uint64_t)v6, v12 + v11, type metadata accessor for CarPlayEmergencyCountdown);
  outlined init with copy of SearchCallHistoryBinaryButtonModel?((uint64_t)v9, a2, &demangling cache variable for type metadata for VStack<TupleView<(EmergencyCountdownSash, ButtonContainerView)>>);
  v13 = (uint64_t (**)())(a2
                       + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(EmergencyCountdownSash, ButtonContainerView)>>, _AppearanceActionModifier>)
                                + 36));
  *v13 = partial apply for closure #2 in CarPlayEmergencyCountdown.body.getter;
  v13[1] = (uint64_t (*)())v12;
  v13[2] = 0;
  v13[3] = 0;
  return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v9, &demangling cache variable for type metadata for VStack<TupleView<(EmergencyCountdownSash, ButtonContainerView)>>);
}

uint64_t StandardEmergencyCountdown.viewModel.getter()
{
  return swift_retain();
}

uint64_t StandardEmergencyCountdown.viewModel.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_release();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*StandardEmergencyCountdown.viewModel.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t StandardEmergencyCountdown.$viewModel.getter()
{
  type metadata accessor for EmergencyCountdownViewModel(0);
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type EmergencyCountdownViewModel and conformance EmergencyCountdownViewModel, type metadata accessor for EmergencyCountdownViewModel, (uint64_t)&protocol conformance descriptor for EmergencyCountdownViewModel);
  return ObservedObject.projectedValue.getter();
}

uint64_t StandardEmergencyCountdown.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void *v22;
  id v23;
  char v24;
  uint64_t v25;
  void (**v26)();
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (**v37)();
  uint64_t v38;
  uint64_t result;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v49 = a1;
  v2 = type metadata accessor for StandardEmergencyCountdown(0);
  v41 = *(_QWORD *)(v2 - 8);
  v3 = *(_QWORD *)(v41 + 64);
  MEMORY[0x24BDAC7A8](v2);
  v42 = (uint64_t)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>);
  v43 = *(_QWORD *)(v4 - 8);
  v44 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier>);
  v7 = MEMORY[0x24BDAC7A8](v48);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v45 = (uint64_t)&v40 - v10;
  v47 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>)>>, _AppearanceActionModifier>, ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier>>.Storage);
  MEMORY[0x24BDAC7A8](v47);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>)>>);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>)>>, _AppearanceActionModifier>);
  v16 = MEMORY[0x24BDAC7A8](v46);
  v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v40 - v19;
  v21 = v1;
  v22 = *(void **)(v1 + 16);
  if (v22)
  {
    v23 = v22;
    v24 = dispatch thunk of Context.isInAmbient.getter();

    if ((v24 & 1) != 0)
    {
      *(_QWORD *)v15 = static VerticalAlignment.top.getter();
      *((_QWORD *)v15 + 1) = 0;
      v15[16] = 0;
      v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>)>>);
      closure #1 in StandardEmergencyCountdown.body.getter(v21, &v15[*(int *)(v25 + 44)]);
      outlined init with copy of SearchCallHistoryBinaryButtonModel?((uint64_t)v15, (uint64_t)v18, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>)>>);
      v26 = (void (**)())&v18[*(int *)(v46 + 36)];
      *v26 = closure #2 in StandardEmergencyCountdown.body.getter;
      v26[1] = 0;
      v26[2] = 0;
      v26[3] = 0;
      outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v15, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>)>>);
      outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout>, _ClipEffect<Capsule>>((uint64_t)v18, (uint64_t)v20, &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>)>>, _AppearanceActionModifier>);
      outlined init with copy of SearchCallHistoryBinaryButtonModel?((uint64_t)v20, (uint64_t)v12, &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>)>>, _AppearanceActionModifier>);
      swift_storeEnumTagMultiPayload();
      lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>();
      lazy protocol witness table accessor for type ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>();
      _ConditionalContent<>.init(storage:)();
      v27 = (uint64_t)v20;
      v28 = &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>)>>, _AppearanceActionModifier>;
    }
    else
    {
      v29 = v21;
      v30 = v42;
      outlined init with copy of SearchCallHistoryBinaryButtonModel(v29, v42, type metadata accessor for StandardEmergencyCountdown);
      v31 = (*(unsigned __int8 *)(v41 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
      v32 = swift_allocObject();
      outlined init with take of SingleResultCallHistoryModel(v30, v32 + v31, type metadata accessor for StandardEmergencyCountdown);
      v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>);
      v34 = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>, MEMORY[0x24BDF5420]);
      MEMORY[0x24950072C](partial apply for closure #3 in StandardEmergencyCountdown.body.getter, v32, v33, v34);
      v36 = v43;
      v35 = v44;
      (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v9, v6, v44);
      v37 = (void (**)())&v9[*(int *)(v48 + 36)];
      *v37 = closure #4 in StandardEmergencyCountdown.body.getter;
      v37[1] = 0;
      v37[2] = 0;
      v37[3] = 0;
      (*(void (**)(char *, uint64_t))(v36 + 8))(v6, v35);
      v38 = v45;
      outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout>, _ClipEffect<Capsule>>((uint64_t)v9, v45, &demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier>);
      outlined init with copy of SearchCallHistoryBinaryButtonModel?(v38, (uint64_t)v12, &demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier>);
      swift_storeEnumTagMultiPayload();
      lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>();
      lazy protocol witness table accessor for type ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>();
      _ConditionalContent<>.init(storage:)();
      v27 = v38;
      v28 = &demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier>;
    }
    return outlined destroy of SearchCallHistoryBinaryButtonModel?(v27, v28);
  }
  else
  {
    type metadata accessor for Context();
    lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
    result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t closure #1 in StandardEmergencyCountdown.body.getter@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  _OWORD v27[2];
  _OWORD v28[7];
  _OWORD v29[2];
  _OWORD v30[7];
  _OWORD v31[2];
  _OWORD v32[7];
  _OWORD v33[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v20 - v8;
  StandardEmergencyCountdown.countdownLabel.getter((uint64_t)v28);
  *(_QWORD *)v9 = static HorizontalAlignment.center.getter();
  *((_QWORD *)v9 + 1) = 0;
  v9[16] = 0;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>);
  closure #1 in closure #1 in StandardEmergencyCountdown.body.getter(a1, (uint64_t)&v9[*(int *)(v10 + 44)]);
  v26 = v28[6];
  v27[0] = v29[0];
  *(_OWORD *)((char *)v27 + 9) = *(_OWORD *)((char *)v29 + 9);
  v22 = v28[2];
  v23 = v28[3];
  v24 = v28[4];
  v25 = v28[5];
  v20 = v28[0];
  v21 = v28[1];
  outlined init with copy of SearchCallHistoryBinaryButtonModel?((uint64_t)v9, (uint64_t)v7, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>);
  v11 = v27[0];
  v30[6] = v26;
  v31[0] = v27[0];
  *(_OWORD *)((char *)v31 + 9) = *(_OWORD *)((char *)v27 + 9);
  v12 = v22;
  v13 = v23;
  v30[2] = v22;
  v30[3] = v23;
  v15 = v24;
  v14 = v25;
  v30[4] = v24;
  v30[5] = v25;
  v17 = v20;
  v16 = v21;
  v30[0] = v20;
  v30[1] = v21;
  a2[6] = v26;
  a2[7] = v11;
  *(_OWORD *)((char *)a2 + 121) = *(_OWORD *)((char *)v27 + 9);
  a2[2] = v12;
  a2[3] = v13;
  a2[4] = v15;
  a2[5] = v14;
  *a2 = v17;
  a2[1] = v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>));
  outlined init with copy of SearchCallHistoryBinaryButtonModel?((uint64_t)v7, (uint64_t)a2 + *(int *)(v18 + 48), &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>);
  outlined retain of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>((uint64_t)v30);
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v9, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>);
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v7, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>);
  v32[6] = v26;
  v33[0] = v27[0];
  *(_OWORD *)((char *)v33 + 9) = *(_OWORD *)((char *)v27 + 9);
  v32[2] = v22;
  v32[3] = v23;
  v32[4] = v24;
  v32[5] = v25;
  v32[0] = v20;
  v32[1] = v21;
  return outlined release of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>((uint64_t)v32);
}

uint64_t StandardEmergencyCountdown.countdownLabel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  void *v34;
  id v35;
  id v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t result;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Font.Design?);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(v1 + 8) + 1248);
  v7 = swift_retain();
  v8 = v6(v7);
  v10 = v9;
  swift_release();
  v52 = v8;
  v53 = v10;
  lazy protocol witness table accessor for type String and conformance String();
  v11 = Text.init<A>(_:)();
  v51 = v1;
  v14 = *(void **)(v1 + 16);
  if (!v14)
    goto LABEL_6;
  v15 = v11;
  v16 = v12;
  v17 = v13 & 1;
  v18 = v14;
  dispatch thunk of Context.isInAmbient.getter();

  v19 = type metadata accessor for Font.Design();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v5, 1, 1, v19);
  static Font.system(size:weight:design:)();
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v5, &demangling cache variable for type metadata for Font.Design?);
  v20 = Text.font(_:)();
  v22 = v21;
  v24 = v23;
  swift_release();
  LOBYTE(v18) = v24 & 1;
  outlined consume of Text.Storage(v15, v16, v17);
  swift_bridgeObjectRelease();
  v52 = static Color.white.getter();
  v25 = Text.foregroundStyle<A>(_:)();
  v27 = v26;
  LOBYTE(v16) = v28 & 1;
  outlined consume of Text.Storage(v20, v22, (char)v18);
  swift_release();
  swift_bridgeObjectRelease();
  static Font.Weight.semibold.getter();
  v29 = Text.fontWeight(_:)();
  v48 = v30;
  v49 = v29;
  v32 = v31;
  v50 = v33;
  outlined consume of Text.Storage(v25, v27, v16);
  swift_bridgeObjectRelease();
  v34 = *(void **)(v51 + 16);
  if (v34)
  {
    v35 = v34;
    dispatch thunk of Context.isInAmbient.getter();

    v36 = v35;
    dispatch thunk of Context.isInAmbient.getter();

    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    v37 = v52;
    v38 = v53;
    v39 = v54;
    v40 = v55;
    v41 = v56;
    v42 = v57;
    if (one-time initialization token for emergencyRed != -1)
      swift_once();
    v43 = static Color.emergencyRed;
    swift_retain();
    v44 = static Edge.Set.all.getter();
    result = static Edge.Set.all.getter();
    v46 = v48;
    *(_QWORD *)a1 = v49;
    *(_QWORD *)(a1 + 8) = v46;
    *(_BYTE *)(a1 + 16) = v32 & 1;
    *(_QWORD *)(a1 + 24) = v50;
    *(_QWORD *)(a1 + 32) = v37;
    *(_BYTE *)(a1 + 40) = v38;
    *(_QWORD *)(a1 + 48) = v39;
    *(_BYTE *)(a1 + 56) = v40;
    *(_QWORD *)(a1 + 64) = v41;
    *(_QWORD *)(a1 + 72) = v42;
    *(_QWORD *)(a1 + 80) = v43;
    *(_BYTE *)(a1 + 88) = v44;
    *(_WORD *)(a1 + 89) = 256;
    *(_BYTE *)(a1 + 96) = result;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_BYTE *)(a1 + 136) = 1;
  }
  else
  {
LABEL_6:
    type metadata accessor for Context();
    lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
    result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t closure #1 in closure #1 in StandardEmergencyCountdown.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t OpaqueTypeConformance2;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v59[2];
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t KeyPath;
  char *v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  v60 = a1;
  v4 = type metadata accessor for StandardEmergencyCountdown(0);
  v63 = *(_QWORD *)(v4 - 8);
  v64 = *(_QWORD *)(v63 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v62 = (uint64_t)v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<<<opaque return type of View.if<A>(_:transform:)>>.0>);
  v73 = *(_QWORD *)(v72 - 8);
  MEMORY[0x24BDAC7A8](v72);
  v67 = (char *)v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for BinaryButtonView();
  v78 = *(_QWORD *)(v7 - 8);
  v79 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v75 = (char *)v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>);
  v9 = MEMORY[0x24BDAC7A8](v77);
  v74 = (char *)v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v76 = (uint64_t)v59 - v11;
  v12 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(a1 + 8) + 632);
  v13 = swift_retain();
  v14 = v12(v13);
  v16 = v15;
  swift_release();
  v85 = v14;
  v86 = v16;
  lazy protocol witness table accessor for type String and conformance String();
  v17 = Text.init<A>(_:)();
  v19 = v18;
  v21 = v20 & 1;
  static Font.largeTitle.getter();
  v22 = Text.font(_:)();
  v24 = v23;
  v26 = v25;
  swift_release();
  outlined consume of Text.Storage(v17, v19, v21);
  swift_bridgeObjectRelease();
  static Font.Weight.semibold.getter();
  v70 = Text.fontWeight(_:)();
  v69 = v27;
  v71 = v28;
  v68 = v29 & 1;
  outlined consume of Text.Storage(v22, v24, v26 & 1);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v65 = swift_getKeyPath();
  v30 = v60;
  v31 = v62;
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v60, v62, type metadata accessor for StandardEmergencyCountdown);
  v32 = *(unsigned __int8 *)(v63 + 80);
  v64 += (v32 + 16) & ~v32;
  v33 = (v32 + 16) & ~v32;
  v61 = v33;
  v63 = v32 | 7;
  v34 = swift_allocObject();
  outlined init with take of SingleResultCallHistoryModel(v31, v34 + v33, type metadata accessor for StandardEmergencyCountdown);
  v81 = v30;
  v59[1] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.if<A>(_:transform:)>>.0);
  v35 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Label<Text, Image>);
  v36 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for <<opaque return type of View.labelStyle<A>(_:)>>.0);
  v37 = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type Label<Text, Image> and conformance Label<A, B>, &demangling cache variable for type metadata for Label<Text, Image>, MEMORY[0x24BDF41A0]);
  v38 = type metadata accessor for TitleOnlyLabelStyle();
  v39 = lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type TitleOnlyLabelStyle and conformance TitleOnlyLabelStyle, (uint64_t (*)(uint64_t))MEMORY[0x24BDEF128], MEMORY[0x24BDEF100]);
  v85 = v35;
  v86 = v38;
  v87 = v37;
  v88 = v39;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v85 = v35;
  v86 = v36;
  v87 = v37;
  v88 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  v41 = v67;
  Button.init(action:label:)();
  lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type Button<<<opaque return type of View.if<A>(_:transform:)>>.0> and conformance Button<A>, &demangling cache variable for type metadata for Button<<<opaque return type of View.if<A>(_:transform:)>>.0>, MEMORY[0x24BDF43B8]);
  v42 = v72;
  v43 = View.eraseToAnyView()();
  v44 = *(void (**)(char *, uint64_t))(v73 + 8);
  v44(v41, v42);
  v88 = MEMORY[0x24BDF4788];
  v89 = MEMORY[0x24BEAD940];
  v85 = v43;
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v30, v31, type metadata accessor for StandardEmergencyCountdown);
  v45 = swift_allocObject();
  outlined init with take of SingleResultCallHistoryModel(v31, v45 + v61, type metadata accessor for StandardEmergencyCountdown);
  v80 = v30;
  Button.init(action:label:)();
  v46 = View.eraseToAnyView()();
  v44(v41, v42);
  v84 = MEMORY[0x24BEAD940];
  v83 = MEMORY[0x24BDF4788];
  v82 = v46;
  v47 = v75;
  BinaryButtonView.init(primaryButton:secondaryButton:)();
  v48 = swift_getKeyPath();
  v50 = v78;
  v49 = v79;
  v51 = (uint64_t)v74;
  (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v74, v47, v79);
  v52 = (uint64_t *)(v51 + *(int *)(v77 + 36));
  *v52 = v48;
  v52[1] = 2;
  (*(void (**)(char *, uint64_t))(v50 + 8))(v47, v49);
  v53 = v76;
  outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout>, _ClipEffect<Capsule>>(v51, v76, &demangling cache variable for type metadata for ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>);
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v53, v51, &demangling cache variable for type metadata for ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>);
  v54 = v70;
  v55 = v69;
  *(_QWORD *)a2 = v70;
  *(_QWORD *)(a2 + 8) = v55;
  LOBYTE(v36) = v68;
  *(_BYTE *)(a2 + 16) = v68;
  v56 = KeyPath;
  *(_QWORD *)(a2 + 24) = v71;
  *(_QWORD *)(a2 + 32) = v56;
  *(_QWORD *)(a2 + 40) = 1;
  *(_BYTE *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 56) = v65;
  *(_BYTE *)(a2 + 64) = 1;
  v57 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>));
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v51, a2 + *(int *)(v57 + 48), &demangling cache variable for type metadata for ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>);
  outlined copy of Text.Storage(v54, v55, v36);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v53, &demangling cache variable for type metadata for ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v51, &demangling cache variable for type metadata for ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>);
  outlined consume of Text.Storage(v54, v55, v36);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

void closure #2 in StandardEmergencyCountdown.body.getter()
{
  closure #2 in StandardEmergencyCountdown.body.getter("#StandardEmergencyCountdown displaying ambient layout");
}

void closure #3 in StandardEmergencyCountdown.body.getter(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t OpaqueTypeConformance2;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  char *v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  id v65;
  void (*v66)(char *, uint64_t);
  void (*v67)(char *, uint64_t);
  _QWORD v68[3];
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  char *v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  _OWORD v106[7];
  _OWORD v107[2];
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  _OWORD v131[9];
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;

  v4 = type metadata accessor for StandardEmergencyCountdown(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v73 = (uint64_t)v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<<<opaque return type of View.if<A>(_:transform:)>>.0>);
  v8 = *(_QWORD *)(v7 - 8);
  v74 = v7;
  v75 = v8;
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = type metadata accessor for BinaryButtonView();
  v86 = *(_QWORD *)(v80 - 8);
  v11 = MEMORY[0x24BDAC7A8](v80);
  v77 = (char *)v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v83 = (char *)v68 - v13;
  v76 = type metadata accessor for Divider();
  v87 = *(_QWORD *)(v76 - 8);
  v14 = MEMORY[0x24BDAC7A8](v76);
  v85 = (char *)v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v84 = (char *)v68 - v16;
  type metadata accessor for Context();
  lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
  swift_retain();
  v17 = EnvironmentObject.init()();
  v81 = v18;
  v82 = (void *)v17;
  type metadata accessor for EmergencyCountdownViewModel(0);
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type EmergencyCountdownViewModel and conformance EmergencyCountdownViewModel, type metadata accessor for EmergencyCountdownViewModel, (uint64_t)&protocol conformance descriptor for EmergencyCountdownViewModel);
  v19 = ObservedObject.init(wrappedValue:)();
  v78 = v20;
  v79 = v19;
  StandardEmergencyCountdown.countdownLabel.getter((uint64_t)&v124);
  v106[6] = v130;
  v107[0] = v131[0];
  *(_OWORD *)((char *)v107 + 9) = *(_OWORD *)((char *)v131 + 9);
  v106[2] = v126;
  v106[3] = v127;
  v106[4] = v128;
  v106[5] = v129;
  v106[0] = v124;
  v106[1] = v125;
  static Alignment.center.getter();
  specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, &v132, 0.0, 1, 0.0, 1);
  outlined release of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>((uint64_t)v106);
  v120 = v144;
  v121 = v145;
  v122 = v146;
  v123 = v147;
  v116 = v140;
  v117 = v141;
  v118 = v142;
  v119 = v143;
  v112 = v136;
  v113 = v137;
  v114 = v138;
  v115 = v139;
  v108 = v132;
  v109 = v133;
  v110 = v134;
  v111 = v135;
  Divider.init()();
  v69 = a1;
  v21 = v73;
  outlined init with copy of SearchCallHistoryBinaryButtonModel(a1, v73, type metadata accessor for StandardEmergencyCountdown);
  v22 = *(unsigned __int8 *)(v5 + 80);
  v23 = ((v22 + 16) & ~v22) + v6;
  v24 = (v22 + 16) & ~v22;
  v70 = v24;
  v71 = v22 | 7;
  v72 = v23;
  v25 = swift_allocObject();
  outlined init with take of SingleResultCallHistoryModel(v21, v25 + v24, type metadata accessor for StandardEmergencyCountdown);
  v89 = a1;
  v68[2] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.if<A>(_:transform:)>>.0);
  v26 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Label<Text, Image>);
  v27 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for <<opaque return type of View.labelStyle<A>(_:)>>.0);
  v28 = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type Label<Text, Image> and conformance Label<A, B>, &demangling cache variable for type metadata for Label<Text, Image>, MEMORY[0x24BDF41A0]);
  v29 = type metadata accessor for TitleOnlyLabelStyle();
  v30 = lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type TitleOnlyLabelStyle and conformance TitleOnlyLabelStyle, (uint64_t (*)(uint64_t))MEMORY[0x24BDEF128], MEMORY[0x24BDEF100]);
  *(_QWORD *)&v132 = v26;
  *((_QWORD *)&v132 + 1) = v29;
  *(_QWORD *)&v133 = v28;
  *((_QWORD *)&v133 + 1) = v30;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  *(_QWORD *)&v132 = v26;
  *((_QWORD *)&v132 + 1) = v27;
  *(_QWORD *)&v133 = v28;
  *((_QWORD *)&v133 + 1) = OpaqueTypeConformance2;
  v68[1] = swift_getOpaqueTypeConformance2();
  v32 = v10;
  Button.init(action:label:)();
  lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type Button<<<opaque return type of View.if<A>(_:transform:)>>.0> and conformance Button<A>, &demangling cache variable for type metadata for Button<<<opaque return type of View.if<A>(_:transform:)>>.0>, MEMORY[0x24BDF43B8]);
  v33 = v74;
  v34 = View.eraseToAnyView()();
  v35 = *(void (**)(char *, uint64_t))(v75 + 8);
  v35(v10, v33);
  *(_QWORD *)&v134 = MEMORY[0x24BEAD940];
  *((_QWORD *)&v133 + 1) = MEMORY[0x24BDF4788];
  *(_QWORD *)&v132 = v34;
  v36 = v69;
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v69, v21, type metadata accessor for StandardEmergencyCountdown);
  v37 = swift_allocObject();
  outlined init with take of SingleResultCallHistoryModel(v21, v37 + v70, type metadata accessor for StandardEmergencyCountdown);
  v88 = v36;
  Button.init(action:label:)();
  v38 = View.eraseToAnyView()();
  v35(v32, v33);
  *(_QWORD *)&v126 = MEMORY[0x24BEAD940];
  *((_QWORD *)&v125 + 1) = MEMORY[0x24BDF4788];
  *(_QWORD *)&v124 = v38;
  v39 = v83;
  BinaryButtonView.init(primaryButton:secondaryButton:)();
  v102 = v120;
  v103 = v121;
  v104 = v122;
  v105 = v123;
  v98 = v116;
  v99 = v117;
  v100 = v118;
  v101 = v119;
  v94 = v112;
  v95 = v113;
  v96 = v114;
  v97 = v115;
  v90 = v108;
  v91 = v109;
  v92 = v110;
  v93 = v111;
  v75 = *(_QWORD *)(v87 + 16);
  v40 = v85;
  v41 = v76;
  ((void (*)(char *, char *, uint64_t))v75)(v85, v84, v76);
  v42 = *(void (**)(char *, char *, uint64_t))(v86 + 16);
  v43 = v77;
  v44 = v80;
  v42(v77, v39, v80);
  v45 = v103;
  v131[5] = v102;
  v131[6] = v103;
  v46 = v104;
  v47 = v105;
  v131[7] = v104;
  v131[8] = v105;
  v48 = v98;
  v49 = v99;
  v131[1] = v98;
  v131[2] = v99;
  v50 = v100;
  v51 = v101;
  v131[3] = v100;
  v131[4] = v101;
  v52 = v94;
  v53 = v95;
  v128 = v94;
  v129 = v95;
  v54 = v96;
  v55 = v97;
  v130 = v96;
  v131[0] = v97;
  v56 = v90;
  v57 = v91;
  v124 = v90;
  v125 = v91;
  v58 = v92;
  v59 = v93;
  v126 = v92;
  v127 = v93;
  *(_OWORD *)(a2 + 224) = v102;
  *(_OWORD *)(a2 + 240) = v45;
  *(_OWORD *)(a2 + 256) = v46;
  *(_OWORD *)(a2 + 272) = v47;
  *(_OWORD *)(a2 + 160) = v48;
  *(_OWORD *)(a2 + 176) = v49;
  *(_OWORD *)(a2 + 192) = v50;
  *(_OWORD *)(a2 + 208) = v51;
  *(_OWORD *)(a2 + 96) = v52;
  *(_OWORD *)(a2 + 112) = v53;
  *(_OWORD *)(a2 + 128) = v54;
  *(_OWORD *)(a2 + 144) = v55;
  *(_OWORD *)(a2 + 32) = v56;
  *(_OWORD *)(a2 + 48) = v57;
  v60 = v81;
  v61 = v82;
  *(_QWORD *)a2 = v82;
  *(_QWORD *)(a2 + 8) = v60;
  v62 = v78;
  *(_QWORD *)(a2 + 16) = v79;
  *(_QWORD *)(a2 + 24) = v62;
  *(_OWORD *)(a2 + 64) = v58;
  *(_OWORD *)(a2 + 80) = v59;
  v63 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView));
  ((void (*)(uint64_t, char *, uint64_t))v75)(a2 + *(int *)(v63 + 64), v40, v41);
  v42((char *)(a2 + *(int *)(v63 + 80)), v43, v44);
  v64 = v61;
  swift_retain();
  outlined retain of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>((uint64_t)&v124);
  v65 = v64;
  swift_retain();
  outlined retain of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>((uint64_t)&v108);
  v66 = *(void (**)(char *, uint64_t))(v86 + 8);
  v66(v83, v44);
  v67 = *(void (**)(char *, uint64_t))(v87 + 8);
  v67(v84, v41);
  outlined release of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>((uint64_t)&v108);
  swift_release();

  v66(v43, v44);
  v67(v85, v41);
  v144 = v102;
  v145 = v103;
  v146 = v104;
  v147 = v105;
  v140 = v98;
  v141 = v99;
  v142 = v100;
  v143 = v101;
  v136 = v94;
  v137 = v95;
  v138 = v96;
  v139 = v97;
  v132 = v90;
  v133 = v91;
  v134 = v92;
  v135 = v93;
  outlined release of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>((uint64_t)&v132);
  swift_release();

}

void closure #4 in StandardEmergencyCountdown.body.getter()
{
  closure #2 in StandardEmergencyCountdown.body.getter("#StandardEmergencyCountdown displaying standard layout");
}

void closure #2 in StandardEmergencyCountdown.body.getter(const char *a1)
{
  uint64_t v2;
  os_log_type_t v3;
  uint8_t *v4;
  NSObject *oslog;

  if (one-time initialization token for phoneSnippetUI != -1)
    swift_once();
  v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)static Logger.phoneSnippetUI);
  oslog = Logger.logObject.getter();
  v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(oslog, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_243ABD000, oslog, v3, a1, v4, 2u);
    MEMORY[0x2495011B8](v4, -1, -1);
  }

}

uint64_t closure #1 in StandardEmergencyCountdown.cancelButton.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(a1 + 8);
  type metadata accessor for StandardEmergencyCountdown(0);
  swift_retain();
  ActionHandler.wrappedValue.getter();
  (*(void (**)(char *))(*(_QWORD *)v5 + 1272))(v4);
  swift_release();
  return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v4, &demangling cache variable for type metadata for StandardActionHandler?);
}

uint64_t closure #2 in StandardEmergencyCountdown.cancelButton.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v23 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Label<Text, Image>);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.if<A>(_:transform:)>>.0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(a1 + 8) + 488);
  v12 = swift_retain();
  v13 = v11(v12);
  v15 = v14;
  swift_release();
  v24 = v13;
  v25 = v15;
  lazy protocol witness table accessor for type String and conformance String();
  Label<>.init<A>(_:systemImage:)();
  v16 = *(void **)(a1 + 16);
  if (v16)
  {
    v17 = v16;
    dispatch thunk of Context.isInAmbient.getter();

    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.labelStyle<A>(_:)>>.0);
    v18 = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type Label<Text, Image> and conformance Label<A, B>, &demangling cache variable for type metadata for Label<Text, Image>, MEMORY[0x24BDF41A0]);
    v19 = type metadata accessor for TitleOnlyLabelStyle();
    v20 = lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type TitleOnlyLabelStyle and conformance TitleOnlyLabelStyle, (uint64_t (*)(uint64_t))MEMORY[0x24BDEF128], MEMORY[0x24BDEF100]);
    v24 = v3;
    v25 = v19;
    v26 = v18;
    v27 = v20;
    swift_getOpaqueTypeConformance2();
    View.if<A>(_:transform:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(v23, v10, v7);
  }
  else
  {
    type metadata accessor for Context();
    lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
    result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t closure #1 in StandardEmergencyCountdown.callButton.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(a1 + 8);
  type metadata accessor for StandardEmergencyCountdown(0);
  swift_retain();
  ActionHandler.wrappedValue.getter();
  (*(void (**)(char *))(*(_QWORD *)v5 + 1264))(v4);
  swift_release();
  return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v4, &demangling cache variable for type metadata for StandardActionHandler?);
}

uint64_t closure #2 in StandardEmergencyCountdown.callButton.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v23 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Label<Text, Image>);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.if<A>(_:transform:)>>.0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(a1 + 8) + 584);
  v12 = swift_retain();
  v13 = v11(v12);
  v15 = v14;
  swift_release();
  v24 = v13;
  v25 = v15;
  lazy protocol witness table accessor for type String and conformance String();
  Label<>.init<A>(_:systemImage:)();
  v16 = *(void **)(a1 + 16);
  if (v16)
  {
    v17 = v16;
    dispatch thunk of Context.isInAmbient.getter();

    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.labelStyle<A>(_:)>>.0);
    v18 = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type Label<Text, Image> and conformance Label<A, B>, &demangling cache variable for type metadata for Label<Text, Image>, MEMORY[0x24BDF41A0]);
    v19 = type metadata accessor for TitleOnlyLabelStyle();
    v20 = lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type TitleOnlyLabelStyle and conformance TitleOnlyLabelStyle, (uint64_t (*)(uint64_t))MEMORY[0x24BDEF128], MEMORY[0x24BDEF100]);
    v24 = v3;
    v25 = v19;
    v26 = v18;
    v27 = v20;
    swift_getOpaqueTypeConformance2();
    View.if<A>(_:transform:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(v23, v10, v7);
  }
  else
  {
    type metadata accessor for Context();
    lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
    result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t closure #1 in closure #2 in StandardEmergencyCountdown.cancelButton.getter()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v0 = type metadata accessor for TitleOnlyLabelStyle();
  v1 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEF128];
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  TitleOnlyLabelStyle.init()();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Label<Text, Image>);
  lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type Label<Text, Image> and conformance Label<A, B>, &demangling cache variable for type metadata for Label<Text, Image>, MEMORY[0x24BDF41A0]);
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type TitleOnlyLabelStyle and conformance TitleOnlyLabelStyle, v1, MEMORY[0x24BDEF100]);
  View.labelStyle<A>(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v0);
}

uint64_t EmergencyCountdownSash.body.getter@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  id v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t KeyPath;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  char v51;
  char *v52;
  uint64_t result;
  uint64_t v54;
  int v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE v60[265];
  char v61;
  _BYTE v62[7];
  _BYTE v63[7];
  char v64;
  _BYTE v65[7];
  _BYTE v66[7];
  _OWORD v67[18];
  _OWORD v68[10];

  v54 = a2;
  v59 = a4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.privacySensitive(_:)>>.0);
  v57 = *(_QWORD *)(v6 - 8);
  v58 = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v56 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v67[0] = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a3 + 440))(v7);
  *((_QWORD *)&v67[0] + 1) = v9;
  lazy protocol witness table accessor for type String and conformance String();
  v10 = Text.init<A>(_:)();
  v12 = v11;
  v14 = v13 & 1;
  static Color.white.getter();
  v15 = Text.foregroundColor(_:)();
  v17 = v16;
  v55 = v18;
  swift_release();
  outlined consume of Text.Storage(v10, v12, v14);
  swift_bridgeObjectRelease();
  if (a1)
  {
    v19 = a1;
    dispatch thunk of Context.currentIdiom.getter();

    if ((VRXIdiom.isCarPlay.getter() & 1) != 0)
      static Font.Weight.bold.getter();
    else
      static Font.Weight.semibold.getter();
    v20 = v55 & 1;
    v21 = Text.fontWeight(_:)();
    v23 = v22;
    v25 = v24;
    v27 = v26 & 1;
    outlined consume of Text.Storage(v15, v17, v20);
    swift_bridgeObjectRelease();
    v28 = static Alignment.leading.getter();
    specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v68, 0.0, 1, 0.0, 1, v28, v29, v21, v23, v27, v25);
    outlined consume of Text.Storage(v21, v23, v27);
    swift_bridgeObjectRelease();
    KeyPath = swift_getKeyPath();
    v31 = static Edge.Set.horizontal.getter();
    EdgeInsets.init(_all:)();
    v33 = v32;
    v35 = v34;
    v37 = v36;
    v39 = v38;
    v61 = 0;
    v40 = static Edge.Set.vertical.getter();
    EdgeInsets.init(_all:)();
    v42 = v41;
    v44 = v43;
    v46 = v45;
    v48 = v47;
    v49 = v61;
    v64 = 0;
    if (one-time initialization token for emergencyRed != -1)
      swift_once();
    v50 = static Color.emergencyRed;
    swift_retain();
    v51 = static Edge.Set.all.getter();
    v67[6] = v68[6];
    v67[7] = v68[7];
    v67[8] = v68[8];
    v67[2] = v68[2];
    v67[3] = v68[3];
    v67[4] = v68[4];
    v67[5] = v68[5];
    v67[0] = v68[0];
    v67[1] = v68[1];
    *(_QWORD *)&v67[9] = KeyPath;
    BYTE8(v67[9]) = 0;
    *(_DWORD *)((char *)&v67[9] + 9) = *(_DWORD *)v63;
    HIDWORD(v67[9]) = *(_DWORD *)&v63[3];
    LOBYTE(v67[10]) = v31;
    *(_DWORD *)((char *)&v67[10] + 1) = *(_DWORD *)v62;
    DWORD1(v67[10]) = *(_DWORD *)&v62[3];
    *((_QWORD *)&v67[10] + 1) = v33;
    *(_QWORD *)&v67[11] = v35;
    *((_QWORD *)&v67[11] + 1) = v37;
    *(_QWORD *)&v67[12] = v39;
    BYTE8(v67[12]) = v49;
    *(_DWORD *)((char *)&v67[12] + 9) = *(_DWORD *)v66;
    HIDWORD(v67[12]) = *(_DWORD *)&v66[3];
    LOBYTE(v67[13]) = v40;
    DWORD1(v67[13]) = *(_DWORD *)&v65[3];
    *(_DWORD *)((char *)&v67[13] + 1) = *(_DWORD *)v65;
    *((_QWORD *)&v67[13] + 1) = v42;
    *(_QWORD *)&v67[14] = v44;
    *((_QWORD *)&v67[14] + 1) = v46;
    *(_QWORD *)&v67[15] = v48;
    BYTE8(v67[15]) = v64;
    *(_QWORD *)&v67[16] = v50;
    BYTE8(v67[16]) = v51;
    memcpy(v60, v67, sizeof(v60));
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>();
    v52 = v56;
    View.privacySensitive(_:)();
    outlined release of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>>((uint64_t)v67);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v57 + 32))(v59, v52, v58);
  }
  else
  {
    type metadata accessor for Context();
    lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
    result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t protocol witness for View.body.getter in conformance EmergencyCountdownSash@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return EmergencyCountdownSash.body.getter(*(void **)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 24), a1);
}

uint64_t property wrapper backing initializer of EmergencyCountdownView.viewModel()
{
  type metadata accessor for EmergencyCountdownViewModel(0);
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type EmergencyCountdownViewModel and conformance EmergencyCountdownViewModel, type metadata accessor for EmergencyCountdownViewModel, (uint64_t)&protocol conformance descriptor for EmergencyCountdownViewModel);
  return ObservedObject.init(wrappedValue:)();
}

uint64_t SmartEmergencyCountdown.body.getter@<X0>(uint64_t a1@<X8>)
{
  id *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t KeyPath;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t result;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;

  v44 = a1;
  v2 = type metadata accessor for ColorScheme();
  v42 = *(_QWORD *)(v2 - 8);
  v43 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SmartEmergencyCountdown(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>);
  v36 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.if<A>(_:transform:)>>.0);
  v40 = *(_QWORD *)(v12 - 8);
  v41 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.if<A>(_:transform:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>>);
  MEMORY[0x24BDAC7A8](v39);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.hideConversationAreaKeyline(_:)>>.0);
  v37 = *(_QWORD *)(v17 - 8);
  v38 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v35 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of SearchCallHistoryBinaryButtonModel((uint64_t)v1, (uint64_t)v8, type metadata accessor for SmartEmergencyCountdown);
  v19 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v20 = swift_allocObject();
  outlined init with take of SingleResultCallHistoryModel((uint64_t)v8, v20 + v19, type metadata accessor for SmartEmergencyCountdown);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>);
  v22 = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>, MEMORY[0x24BDF5420]);
  MEMORY[0x24950072C](partial apply for closure #1 in SmartEmergencyCountdown.body.getter, v20, v21, v22);
  if (*v1)
  {
    v23 = *v1;
    dispatch thunk of Context.currentIdiom.getter();

    VRXIdiom.isWatchOS.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.setHostBackground(_:)>>.0);
    lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>> and conformance ComponentStack<A>, &demangling cache variable for type metadata for ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, MEMORY[0x24BEADBF8]);
    v24 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, _PaddingLayout>);
    v25 = lazy protocol witness table accessor for type ModifiedContent<ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>();
    v45 = v24;
    v46 = v25;
    swift_getOpaqueTypeConformance2();
    View.if<A>(_:transform:)();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
    KeyPath = swift_getKeyPath();
    v28 = v42;
    v27 = v43;
    (*(void (**)(char *, _QWORD, uint64_t))(v42 + 104))(v4, *MEMORY[0x24BDEB3F8], v43);
    v29 = (uint64_t *)&v16[*(int *)(v39 + 36)];
    v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<ColorScheme>);
    (*(void (**)(char *, char *, uint64_t))(v28 + 16))((char *)v29 + *(int *)(v30 + 28), v4, v27);
    *v29 = KeyPath;
    v32 = v40;
    v31 = v41;
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v16, v14, v41);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v4, v27);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v14, v31);
    lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.if<A>(_:transform:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>> and conformance <> ModifiedContent<A, B>();
    v33 = v35;
    View.hideConversationAreaKeyline(_:)();
    outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v16, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.if<A>(_:transform:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>>);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v37 + 32))(v44, v33, v38);
  }
  else
  {
    type metadata accessor for Context();
    lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
    result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t closure #1 in SmartEmergencyCountdown.body.getter@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t KeyPath;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  _OWORD v96[17];
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  uint64_t v110;
  char v111;
  _BYTE v112[7];
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  uint64_t v118;
  uint64_t v119;
  char v120;
  __int128 v121;
  char v122;
  uint64_t v123;
  unsigned __int128 v124;
  char v125;
  uint64_t v126;
  uint64_t v127;
  char v128;
  char v129;
  _BYTE v130[7];
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  uint64_t v144;

  v2 = a1;
  v87 = a1;
  v95 = a2;
  v82 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.buttonStyle<A>(_:)>>.0);
  v80 = *(_QWORD *)(v82 - 8);
  MEMORY[0x24BDAC7A8](v82);
  v81 = (uint64_t)&v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = type metadata accessor for BinaryButtonView();
  v84 = *(_QWORD *)(v94 - 8);
  MEMORY[0x24BDAC7A8](v94);
  v83 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>.Storage);
  MEMORY[0x24BDAC7A8](v89);
  v91 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SeparatorStyle();
  v77 = *(_QWORD *)(v6 - 8);
  v78 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v75 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = type metadata accessor for StatusIndicatorView.IndicatorType();
  v69 = *(_QWORD *)(v71 - 8);
  MEMORY[0x24BDAC7A8](v71);
  v70 = (char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = type metadata accessor for StatusIndicatorView();
  v74 = *(_QWORD *)(v88 - 8);
  MEMORY[0x24BDAC7A8](v88);
  v73 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.separators(_:isOverride:)>>.0);
  v79 = *(_QWORD *)(v90 - 8);
  v10 = MEMORY[0x24BDAC7A8](v90);
  v72 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v76 = (char *)&v68 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v93 = (uint64_t)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v92 = (char *)&v68 - v16;
  v17 = static HorizontalAlignment.center.getter();
  closure #1 in closure #1 in SmartEmergencyCountdown.body.getter(v2, (uint64_t)&v97);
  v18 = v97;
  v85 = *((_QWORD *)&v97 + 1);
  v86 = v97;
  v19 = v98;
  v20 = *((_QWORD *)&v98 + 1);
  v25 = *((_QWORD *)&v99 + 1);
  v21 = v99;
  LOBYTE(v2) = v100;
  v22 = *((_QWORD *)&v100 + 1);
  KeyPath = swift_getKeyPath();
  v118 = v17;
  v119 = 0;
  v120 = 1;
  v121 = v18;
  v122 = v19;
  v123 = v20;
  v124 = __PAIR128__(v25, v21);
  v125 = v2;
  v126 = v22;
  v127 = KeyPath;
  v128 = 1;
  static Alignment.center.getter();
  specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v131, 0.0, 1, 0.0, 1);
  outlined consume of Text.Storage(v86, v85, v19);
  swift_bridgeObjectRelease();
  outlined consume of Text.Storage(v21, v25, v2);
  v24 = v87;
  swift_release();
  swift_bridgeObjectRelease();
  LODWORD(v25) = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v33 = v32;
  v129 = 0;
  v34 = *(_QWORD *)(v24 + *(int *)(type metadata accessor for SmartEmergencyCountdown(0) + 24) + 8);
  if (((*(uint64_t (**)(void))(*(_QWORD *)v34 + 920))() & 1) != 0)
  {
    v35 = (*(uint64_t (**)(void))(*(_QWORD *)v34 + 536))();
    *((_QWORD *)&v98 + 1) = MEMORY[0x24BEE0D00];
    *(_QWORD *)&v99 = MEMORY[0x24BEAE5C0];
    *(_QWORD *)&v97 = v35;
    *((_QWORD *)&v97 + 1) = v36;
    (*(void (**)(char *, _QWORD, uint64_t))(v69 + 104))(v70, *MEMORY[0x24BEADF90], v71);
    v37 = v73;
    StatusIndicatorView.init(message:type:showIndicator:)();
    v39 = v77;
    v38 = v78;
    v40 = v75;
    (*(void (**)(char *, _QWORD, uint64_t))(v77 + 104))(v75, *MEMORY[0x24BEAB508], v78);
    v41 = lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type StatusIndicatorView and conformance StatusIndicatorView, (uint64_t (*)(uint64_t))MEMORY[0x24BEADFC8], MEMORY[0x24BEADF60]);
    LODWORD(v87) = v25;
    v25 = (uint64_t)v72;
    v42 = v88;
    View.separators(_:isOverride:)();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v38);
    (*(void (**)(char *, uint64_t))(v74 + 8))(v37, v42);
    v43 = v79;
    v44 = v76;
    v45 = v25;
    LOBYTE(v25) = v87;
    v46 = v90;
    (*(void (**)(char *, uint64_t, uint64_t))(v79 + 32))(v76, v45, v90);
    (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v91, v44, v46);
    swift_storeEnumTagMultiPayload();
    *(_QWORD *)&v97 = v42;
    *((_QWORD *)&v97 + 1) = v41;
    swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type BinaryButtonView and conformance BinaryButtonView, (uint64_t (*)(uint64_t))MEMORY[0x24BEADCE8], MEMORY[0x24BEADCC8]);
    v47 = (uint64_t)v92;
    _ConditionalContent<>.init(storage:)();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v46);
  }
  else
  {
    v48 = v81;
    SmartEmergencyCountdown.smartCallButton.getter((uint64_t)partial apply for closure #1 in SmartEmergencyCountdown.smartCallButton.getter, (uint64_t)partial apply for closure #2 in SmartEmergencyCountdown.smartCallButton.getter, 1, v81);
    v49 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Button<Text>);
    v50 = type metadata accessor for CountdownButtonStyle();
    v51 = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>((unint64_t *)&lazy protocol witness table cache variable for type Button<Text> and conformance Button<A>, &demangling cache variable for type metadata for Button<Text>, MEMORY[0x24BDF43B8]);
    v52 = lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type CountdownButtonStyle and conformance CountdownButtonStyle, (uint64_t (*)(uint64_t))type metadata accessor for CountdownButtonStyle, (uint64_t)&protocol conformance descriptor for CountdownButtonStyle);
    *(_QWORD *)&v97 = v49;
    *((_QWORD *)&v97 + 1) = v50;
    *(_QWORD *)&v98 = v51;
    *((_QWORD *)&v98 + 1) = v52;
    swift_getOpaqueTypeConformance2();
    v53 = v82;
    v54 = View.eraseToAnyView()();
    v55 = *(void (**)(uint64_t, uint64_t))(v80 + 8);
    v55(v48, v53);
    v56 = MEMORY[0x24BDF4788];
    v57 = MEMORY[0x24BEAD940];
    *(_QWORD *)&v99 = MEMORY[0x24BEAD940];
    *((_QWORD *)&v98 + 1) = MEMORY[0x24BDF4788];
    *(_QWORD *)&v97 = v54;
    SmartEmergencyCountdown.smartCallButton.getter((uint64_t)partial apply for closure #1 in SmartEmergencyCountdown.smartCancelButton.getter, (uint64_t)partial apply for closure #2 in SmartEmergencyCountdown.smartCancelButton.getter, 0, v48);
    v58 = View.eraseToAnyView()();
    v55(v48, v53);
    *((_QWORD *)&v96[1] + 1) = v56;
    *(_QWORD *)&v96[2] = v57;
    *(_QWORD *)&v96[0] = v58;
    v59 = v83;
    BinaryButtonView.init(primaryButton:secondaryButton:)();
    v60 = v84;
    v61 = v94;
    (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v91, v59, v94);
    swift_storeEnumTagMultiPayload();
    v62 = lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type StatusIndicatorView and conformance StatusIndicatorView, (uint64_t (*)(uint64_t))MEMORY[0x24BEADFC8], MEMORY[0x24BEADF60]);
    *(_QWORD *)&v97 = v88;
    *((_QWORD *)&v97 + 1) = v62;
    swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type BinaryButtonView and conformance BinaryButtonView, (uint64_t (*)(uint64_t))MEMORY[0x24BEADCE8], MEMORY[0x24BEADCC8]);
    v47 = (uint64_t)v92;
    _ConditionalContent<>.init(storage:)();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v59, v61);
  }
  v63 = v129;
  v64 = v93;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v47, v93, &demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>);
  v96[10] = v141;
  v96[11] = v142;
  v96[12] = v143;
  *(_QWORD *)&v96[13] = v144;
  v96[6] = v137;
  v96[7] = v138;
  v96[8] = v139;
  v96[9] = v140;
  v96[2] = v133;
  v96[3] = v134;
  v96[4] = v135;
  v96[5] = v136;
  v96[0] = v131;
  v96[1] = v132;
  BYTE8(v96[13]) = v25;
  *(_DWORD *)((char *)&v96[13] + 9) = *(_DWORD *)v130;
  HIDWORD(v96[13]) = *(_DWORD *)&v130[3];
  *(_QWORD *)&v96[14] = v27;
  *((_QWORD *)&v96[14] + 1) = v29;
  *(_QWORD *)&v96[15] = v31;
  *((_QWORD *)&v96[15] + 1) = v33;
  LOBYTE(v96[16]) = v63;
  v65 = v95;
  memcpy(v95, v96, 0x101uLL);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>));
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v64, (uint64_t)v65 + *(int *)(v66 + 48), &demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>);
  outlined retain of ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>((uint64_t)v96);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v47, &demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v64, &demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>);
  v107 = v141;
  v108 = v142;
  v109 = v143;
  v110 = v144;
  v103 = v137;
  v104 = v138;
  v105 = v139;
  v106 = v140;
  v99 = v133;
  v100 = v134;
  v101 = v135;
  v102 = v136;
  v97 = v131;
  v98 = v132;
  v111 = v25;
  *(_DWORD *)v112 = *(_DWORD *)v130;
  *(_DWORD *)&v112[3] = *(_DWORD *)&v130[3];
  v113 = v27;
  v114 = v29;
  v115 = v31;
  v116 = v33;
  v117 = v63;
  return outlined release of ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>((uint64_t)&v97);
}

uint64_t closure #1 in closure #1 in SmartEmergencyCountdown.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v2 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for SmartEmergencyCountdown(0) + 24) + 8);
  (*(void (**)(void))(*(_QWORD *)v2 + 728))();
  lazy protocol witness table accessor for type String and conformance String();
  v3 = Text.init<A>(_:)();
  v5 = v4;
  v7 = v6 & 1;
  static Font.headline.getter();
  v8 = Text.font(_:)();
  v10 = v9;
  v12 = v11;
  swift_release();
  outlined consume of Text.Storage(v3, v5, v7);
  swift_bridgeObjectRelease();
  static Font.Weight.regular.getter();
  v13 = Text.fontWeight(_:)();
  v15 = v14;
  LOBYTE(v5) = v16 & 1;
  outlined consume of Text.Storage(v8, v10, v12 & 1);
  swift_bridgeObjectRelease();
  static Color.secondary.getter();
  v17 = Text.foregroundStyle<A>(_:)();
  v46 = v18;
  v47 = v17;
  v45 = v19;
  v48 = v20;
  outlined consume of Text.Storage(v13, v15, v5);
  swift_release();
  v21 = swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(_QWORD *)v2 + 776))(v21);
  v22 = Text.init<A>(_:)();
  v24 = v23;
  v26 = v25 & 1;
  static Font.title3.getter();
  v27 = Text.font(_:)();
  v29 = v28;
  LOBYTE(v13) = v30;
  swift_release();
  LOBYTE(v10) = v13 & 1;
  outlined consume of Text.Storage(v22, v24, v26);
  swift_bridgeObjectRelease();
  static Font.Weight.semibold.getter();
  v31 = Text.fontWeight(_:)();
  v33 = v32;
  v35 = v34;
  outlined consume of Text.Storage(v27, v29, v10);
  v36 = swift_bridgeObjectRelease();
  if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 1160))(v36) & 1) != 0)
    static Color.secondary.getter();
  else
    static Color.primary.getter();
  v37 = Text.foregroundStyle<A>(_:)();
  v39 = v38;
  v41 = v40;
  v43 = v42 & 1;
  outlined consume of Text.Storage(v31, v33, v35 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v47;
  *(_QWORD *)(a2 + 8) = v46;
  *(_BYTE *)(a2 + 16) = v45 & 1;
  *(_QWORD *)(a2 + 24) = v48;
  *(_QWORD *)(a2 + 32) = v37;
  *(_QWORD *)(a2 + 40) = v39;
  *(_BYTE *)(a2 + 48) = v43;
  *(_QWORD *)(a2 + 56) = v41;
  outlined copy of Text.Storage(v47, v46, v45 & 1);
  swift_bridgeObjectRetain();
  outlined copy of Text.Storage(v37, v39, v43);
  swift_bridgeObjectRetain();
  outlined consume of Text.Storage(v37, v39, v43);
  swift_bridgeObjectRelease();
  outlined consume of Text.Storage(v47, v46, v45 & 1);
  return swift_bridgeObjectRelease();
}

uint64_t SmartEmergencyCountdown.smartCallButton.getter@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, int a3@<W3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[2];
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;

  v27 = a3;
  v26[0] = a1;
  v26[1] = a2;
  v30 = a4;
  v5 = (int *)type metadata accessor for CountdownButtonStyle();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (_QWORD *)((char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for SmartEmergencyCountdown(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<Text>);
  v12 = *(_QWORD *)(v11 - 8);
  v28 = v11;
  v29 = v12;
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v4, (uint64_t)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SmartEmergencyCountdown);
  v15 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v16 = swift_allocObject();
  outlined init with take of SingleResultCallHistoryModel((uint64_t)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15, type metadata accessor for SmartEmergencyCountdown);
  v31 = v4;
  Button.init(action:label:)();
  swift_retain();
  ActionHandler.wrappedValue.getter();
  type metadata accessor for EmergencyCountdownViewModel(0);
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type EmergencyCountdownViewModel and conformance EmergencyCountdownViewModel, type metadata accessor for EmergencyCountdownViewModel, (uint64_t)&protocol conformance descriptor for EmergencyCountdownViewModel);
  *v7 = ObservedObject.init(wrappedValue:)();
  v7[1] = v17;
  *((_BYTE *)v7 + v5[6]) = v27;
  v18 = v5[7];
  *(uint64_t *)((char *)v7 + v18) = static Animation.easeInOut(duration:)();
  v19 = v5[8];
  *(uint64_t *)((char *)v7 + v19) = static Animation.easeInOut(duration:)();
  *(uint64_t *)((char *)v7 + v5[9]) = 0x4020000000000000;
  v20 = (char *)v7 + v5[10];
  v32 = 0;
  State.init(wrappedValue:)();
  v21 = v34;
  *v20 = v33;
  *((_QWORD *)v20 + 1) = v21;
  v22 = (char *)v7 + v5[11];
  v32 = 0;
  State.init(wrappedValue:)();
  v23 = v34;
  *v22 = v33;
  *((_QWORD *)v22 + 1) = v23;
  lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>((unint64_t *)&lazy protocol witness table cache variable for type Button<Text> and conformance Button<A>, &demangling cache variable for type metadata for Button<Text>, MEMORY[0x24BDF43B8]);
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type CountdownButtonStyle and conformance CountdownButtonStyle, (uint64_t (*)(uint64_t))type metadata accessor for CountdownButtonStyle, (uint64_t)&protocol conformance descriptor for CountdownButtonStyle);
  v24 = v28;
  View.buttonStyle<A>(_:)();
  outlined destroy of SingleResultCallHistoryModel((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for CountdownButtonStyle);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v14, v24);
}

uint64_t closure #2 in SmartEmergencyCountdown.body.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HostBackground?);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (uint64_t *)((char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, _PaddingLayout>);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = static Edge.Set.top.getter();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, a1, v9);
  v10 = &v7[*(int *)(v5 + 36)];
  *v10 = v8;
  *(_OWORD *)(v10 + 8) = 0u;
  *(_OWORD *)(v10 + 24) = 0u;
  v10[40] = 1;
  *v4 = static Color.black.getter();
  v11 = *MEMORY[0x24BEADC20];
  v12 = type metadata accessor for HostBackground();
  v13 = *(_QWORD *)(v12 - 8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v13 + 104))(v4, v11, v12);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v4, 0, 1, v12);
  v14 = lazy protocol witness table accessor for type ModifiedContent<ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>();
  MEMORY[0x2495003FC](v4, v5, v14);
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v4, &demangling cache variable for type metadata for HostBackground?);
  return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v7, &demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, _PaddingLayout>);
}

uint64_t key path getter for EnvironmentValues.colorScheme : EnvironmentValues()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t key path setter for EnvironmentValues.colorScheme : EnvironmentValues(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = type metadata accessor for ColorScheme();
  MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return EnvironmentValues.colorScheme.setter();
}

uint64_t closure #1 in SmartEmergencyCountdown.smartCancelButton.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for SmartEmergencyCountdown(0) + 24) + 8);
  (*(void (**)(uint64_t))(*(_QWORD *)v5 + 928))(1);
  ActionHandler.wrappedValue.getter();
  (*(void (**)(char *))(*(_QWORD *)v5 + 1272))(v4);
  return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v4, &demangling cache variable for type metadata for StandardActionHandler?);
}

uint64_t closure #2 in SmartEmergencyCountdown.smartCancelButton.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;

  v4 = type metadata accessor for SmartEmergencyCountdown(0);
  (*(void (**)(void))(**(_QWORD **)(a1 + *(int *)(v4 + 24) + 8) + 488))();
  lazy protocol witness table accessor for type String and conformance String();
  v5 = Text.init<A>(_:)();
  v7 = v6;
  v9 = v8 & 1;
  static Font.headline.getter();
  v10 = Text.font(_:)();
  v12 = v11;
  v14 = v13;
  swift_release();
  outlined consume of Text.Storage(v5, v7, v9);
  swift_bridgeObjectRelease();
  static Font.Weight.medium.getter();
  v15 = Text.fontWeight(_:)();
  v17 = v16;
  v19 = v18;
  v21 = v20;
  outlined consume of Text.Storage(v10, v12, v14 & 1);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v15;
  *(_QWORD *)(a2 + 8) = v17;
  *(_BYTE *)(a2 + 16) = v19 & 1;
  *(_QWORD *)(a2 + 24) = v21;
  return result;
}

uint64_t closure #1 in SmartEmergencyCountdown.smartCallButton.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for SmartEmergencyCountdown(0) + 24) + 8);
  ActionHandler.wrappedValue.getter();
  (*(void (**)(char *))(*(_QWORD *)v5 + 1264))(v4);
  return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v4, &demangling cache variable for type metadata for StandardActionHandler?);
}

uint64_t closure #2 in SmartEmergencyCountdown.smartCallButton.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;

  v4 = type metadata accessor for SmartEmergencyCountdown(0);
  (*(void (**)(void))(**(_QWORD **)(a1 + *(int *)(v4 + 24) + 8) + 584))();
  lazy protocol witness table accessor for type String and conformance String();
  v5 = Text.init<A>(_:)();
  v7 = v6;
  v9 = v8 & 1;
  static Font.headline.getter();
  v10 = Text.font(_:)();
  v12 = v11;
  v14 = v13;
  swift_release();
  outlined consume of Text.Storage(v5, v7, v9);
  swift_bridgeObjectRelease();
  static Font.Weight.medium.getter();
  v15 = Text.fontWeight(_:)();
  v17 = v16;
  v19 = v18;
  v21 = v20;
  outlined consume of Text.Storage(v10, v12, v14 & 1);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v15;
  *(_QWORD *)(a2 + 8) = v17;
  *(_BYTE *)(a2 + 16) = v19 & 1;
  *(_QWORD *)(a2 + 24) = v21;
  return result;
}

void one-time initialization function for sampleModel()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;

  v0 = type metadata accessor for Locale();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for EmergencyCountdownModel();
  __swift_allocate_value_buffer(v4, static EmergencyCountdownView_Previews.sampleModel);
  v5 = __swift_project_value_buffer(v4, (uint64_t)static EmergencyCountdownView_Previews.sampleModel);
  type metadata accessor for SABaseClientBoundCommand(0, &lazy cache variable for type metadata for SAIntentGroupLaunchAppWithIntent);
  type metadata accessor for App();
  App.__allocating_init(appIdentifier:)();
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDA1C0]), sel_init);
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDA1D0]), sel_initWithCode_userActivity_, 2, 0);
  v8 = (void *)static SAIntentGroupLaunchAppWithIntent.launchAppWithIntent(app:intent:intentResponse:)();
  swift_release();

  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE813A0]), sel_init);
  static Locale.current.getter();
  Locale.identifier.getter();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  EmergencyCountdownModel.init(sashTitle:cancelButtonText:cancelledText:callButtonText:callingLabel:emergencyServicesLabel:sos:dialog:callAction:cancelAction:localeIdentifier:isSmartEnabled:)(v5, 0x2E676E696C6C6143, 0xEA00000000002E2ELL, 0xD000000000000012, 0x8000000243B37440, 5459795, 0xE300000000000000, 0xD00000000000001DLL, 0x8000000243B37A90, v8, v9);
}

uint64_t EmergencyCountdownView_Previews.sampleModel.unsafeMutableAddressor()
{
  uint64_t v0;

  if (one-time initialization token for sampleModel != -1)
    swift_once();
  v0 = type metadata accessor for EmergencyCountdownModel();
  return __swift_project_value_buffer(v0, (uint64_t)static EmergencyCountdownView_Previews.sampleModel);
}

uint64_t static EmergencyCountdownView_Previews.sampleModel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (one-time initialization token for sampleModel != -1)
    swift_once();
  v2 = type metadata accessor for EmergencyCountdownModel();
  v3 = __swift_project_value_buffer(v2, (uint64_t)static EmergencyCountdownView_Previews.sampleModel);
  return outlined init with copy of SearchCallHistoryBinaryButtonModel(v3, a1, (uint64_t (*)(_QWORD))type metadata accessor for EmergencyCountdownModel);
}

uint64_t static EmergencyCountdownView_Previews.previews.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v5;

  v0 = type metadata accessor for EmergencyCountdownModel();
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for sampleModel != -1)
    swift_once();
  v3 = __swift_project_value_buffer(v0, (uint64_t)static EmergencyCountdownView_Previews.sampleModel);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v3, (uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for EmergencyCountdownModel);
  type metadata accessor for EmergencyCountdownView(0);
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type EmergencyCountdownModel and conformance EmergencyCountdownModel, (uint64_t (*)(uint64_t))type metadata accessor for EmergencyCountdownModel, (uint64_t)&protocol conformance descriptor for EmergencyCountdownModel);
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type EmergencyCountdownView and conformance EmergencyCountdownView, type metadata accessor for EmergencyCountdownView, (uint64_t)&protocol conformance descriptor for EmergencyCountdownView);
  return SnippetPreview.init(snippetModel:content:)();
}

uint64_t implicit closure #1 in static EmergencyCountdownView_Previews.previews.getter@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t result;
  uint64_t v9;

  v4 = type metadata accessor for EmergencyCountdownView(0);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(a1, (uint64_t)a2 + *(int *)(v4 + 28), (uint64_t (*)(_QWORD))type metadata accessor for EmergencyCountdownModel);
  type metadata accessor for Context();
  lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
  *a2 = EnvironmentObject.init()();
  a2[1] = v5;
  ActionHandler.init()();
  v6 = *(int *)(v4 + 24);
  if (one-time initialization token for shared != -1)
    swift_once();
  v7 = (uint64_t *)((char *)a2 + v6);
  swift_beginAccess();
  type metadata accessor for EmergencyCountdownViewModel(0);
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type EmergencyCountdownViewModel and conformance EmergencyCountdownViewModel, type metadata accessor for EmergencyCountdownViewModel, (uint64_t)&protocol conformance descriptor for EmergencyCountdownViewModel);
  swift_retain();
  result = ObservedObject.init(wrappedValue:)();
  *v7 = result;
  v7[1] = v9;
  return result;
}

uint64_t protocol witness for static PreviewProvider.previews.getter in conformance EmergencyCountdownView_Previews()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v5;

  v0 = type metadata accessor for EmergencyCountdownModel();
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for sampleModel != -1)
    swift_once();
  v3 = __swift_project_value_buffer(v0, (uint64_t)static EmergencyCountdownView_Previews.sampleModel);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v3, (uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for EmergencyCountdownModel);
  type metadata accessor for EmergencyCountdownView(0);
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type EmergencyCountdownModel and conformance EmergencyCountdownModel, (uint64_t (*)(uint64_t))type metadata accessor for EmergencyCountdownModel, (uint64_t)&protocol conformance descriptor for EmergencyCountdownModel);
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type EmergencyCountdownView and conformance EmergencyCountdownView, type metadata accessor for EmergencyCountdownView, (uint64_t)&protocol conformance descriptor for EmergencyCountdownView);
  return SnippetPreview.init(snippetModel:content:)();
}

uint64_t protocol witness for static _PreviewProvider._previews.getter in conformance EmergencyCountdownView_Previews()
{
  lazy protocol witness table accessor for type EmergencyCountdownView_Previews and conformance EmergencyCountdownView_Previews();
  return static PreviewProvider._previews.getter();
}

uint64_t protocol witness for static _PreviewProvider._platform.getter in conformance EmergencyCountdownView_Previews()
{
  lazy protocol witness table accessor for type EmergencyCountdownView_Previews and conformance EmergencyCountdownView_Previews();
  return static PreviewProvider._platform.getter();
}

uint64_t one-time initialization function for emergencyRed()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  uint64_t v5;
  double v6;
  void *v7;
  uint64_t v8;
  double v9;
  void *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v0 = type metadata accessor for Color.RGBColorSpace();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (void *)static ColorFactory.emergencyRed.getter();
  v5 = (uint64_t)objc_msgSend(v4, sel_redValue);

  v6 = (double)(v5 / 255);
  v7 = (void *)static ColorFactory.emergencyRed.getter();
  v8 = (uint64_t)objc_msgSend(v7, sel_greenValue);

  v9 = (double)(v8 / 255);
  v10 = (void *)static ColorFactory.emergencyRed.getter();
  v11 = (uint64_t)objc_msgSend(v10, sel_blueValue);

  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BDF3C20], v0);
  result = MEMORY[0x24950051C](v3, v6, v9, (double)(v11 / 255), 1.0);
  static Color.emergencyRed = result;
  return result;
}

uint64_t sub_243B0D474@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 296))();
  *a2 = result;
  return result;
}

uint64_t sub_243B0D4A4(_QWORD *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 304))(*a1);
}

void sub_243B0D4D0(uint64_t a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))(**(_QWORD **)a1 + 344))();
}

uint64_t sub_243B0D500(double *a1, uint64_t a2)
{
  return (*(uint64_t (**)(double))(**(_QWORD **)a2 + 352))(*a1);
}

uint64_t sub_243B0D52C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 392))();
  *a2 = result;
  return result;
}

uint64_t sub_243B0D55C(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 400);
  v3 = swift_retain();
  return v2(v3);
}

uint64_t sub_243B0D58C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 440))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_243B0D5BC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 448);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t sub_243B0D600@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 488))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_243B0D630(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 496);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t sub_243B0D674@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 536))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_243B0D6A4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 544);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t sub_243B0D6E8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 584))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_243B0D718(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 592);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t sub_243B0D75C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 632))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_243B0D78C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 640);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t sub_243B0D7D0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 680))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_243B0D800(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 688);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t sub_243B0D844@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 728))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_243B0D874(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 736);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t sub_243B0D8B8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 776))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_243B0D8E8(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 784);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t sub_243B0D92C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 824))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_243B0D95C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 832);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t sub_243B0D9A0@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 872))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_243B0D9D4(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 880))(*a1);
}

uint64_t sub_243B0DA00@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 920))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_243B0DA34(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 928))(*a1);
}

void sub_243B0DA60(uint64_t a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))(**(_QWORD **)a1 + 1016))();
}

uint64_t sub_243B0DA90(double *a1, uint64_t a2)
{
  return (*(uint64_t (**)(double))(**(_QWORD **)a2 + 1024))(*a1);
}

uint64_t outlined assign with take of EmergencyCountdownModel?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EmergencyCountdownModel?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t static Color.emergencyRed.getter()
{
  if (one-time initialization token for emergencyRed != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_243B0DB44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?)
                                      - 8)
                          + 80);
  v2 = (v1 + 24) & ~v1;
  swift_release();
  v3 = type metadata accessor for StandardActionHandler();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in EmergencyCountdownViewModel.updateCounter(actionHandler:currentAnimationStep:)()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?)
                                      - 8)
                          + 80);
  return (*(uint64_t (**)(uint64_t))(**(_QWORD **)(v0 + 16) + 1264))(v0 + ((v1 + 24) & ~v1));
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t type metadata accessor for EmergencyCountdownViewModel(uint64_t a1)
{
  return type metadata accessor for EmergencyCountdownViewModel(a1, (uint64_t *)&type metadata singleton initialization cache for EmergencyCountdownViewModel);
}

uint64_t type metadata accessor for EmergencyCountdownView(uint64_t a1)
{
  return type metadata accessor for EmergencyCountdownViewModel(a1, (uint64_t *)&type metadata singleton initialization cache for EmergencyCountdownView);
}

uint64_t partial apply for closure #2 in EmergencyCountdownView.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = type metadata accessor for EmergencyCountdownView(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return (*(uint64_t (**)(uint64_t))(**(_QWORD **)(v0 + ((v2 + 16) & ~v2) + *(int *)(v1 + 24) + 8) + 1192))(v0 + ((v2 + 16) & ~v2) + *(int *)(v1 + 28));
}

uint64_t objectdestroy_88Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t);
  int *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;

  v1 = type metadata accessor for EmergencyCountdownView(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (id *)(v0 + ((v2 + 16) & ~v2));

  v4 = (char *)v3 + *(int *)(v1 + 20);
  v5 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_release();
  v6 = (char *)v3 + *(int *)(v1 + 28);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v8 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v8(v6, v7);
  v9 = (int *)type metadata accessor for EmergencyCountdownModel();
  v8(&v6[v9[5]], v7);
  v8(&v6[v9[6]], v7);
  v8(&v6[v9[7]], v7);
  v8(&v6[v9[8]], v7);
  v8(&v6[v9[9]], v7);
  v8(&v6[v9[10]], v7);
  v8(&v6[v9[11]], v7);
  v8(&v6[v9[12]], v7);
  v10 = &v6[v9[13]];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v12 = &v6[v9[14]];
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  v14 = &v6[v9[15]];
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #3 in EmergencyCountdownView.body.getter(uint64_t a1)
{
  return partial apply for closure #3 in EmergencyCountdownView.body.getter(a1, (uint64_t (*)(uint64_t, uint64_t))closure #3 in EmergencyCountdownView.body.getter);
}

uint64_t partial apply for closure #4 in EmergencyCountdownView.body.getter(uint64_t a1)
{
  return partial apply for closure #3 in EmergencyCountdownView.body.getter(a1, closure #4 in EmergencyCountdownView.body.getter);
}

uint64_t partial apply for closure #3 in EmergencyCountdownView.body.getter(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for EmergencyCountdownView(0) - 8) + 80);
  return a2(a1, v2 + ((v4 + 16) & ~v4));
}

uint64_t partial apply for closure #5 in EmergencyCountdownView.body.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for EmergencyCountdownView(0) - 8) + 80);
  return closure #5 in EmergencyCountdownView.body.getter(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t type metadata accessor for CarPlayEmergencyCountdown(uint64_t a1)
{
  return type metadata accessor for EmergencyCountdownViewModel(a1, (uint64_t *)&type metadata singleton initialization cache for CarPlayEmergencyCountdown);
}

uint64_t type metadata accessor for SmartEmergencyCountdown(uint64_t a1)
{
  return type metadata accessor for EmergencyCountdownViewModel(a1, (uint64_t *)&type metadata singleton initialization cache for SmartEmergencyCountdown);
}

uint64_t type metadata accessor for StandardEmergencyCountdown(uint64_t a1)
{
  return type metadata accessor for EmergencyCountdownViewModel(a1, (uint64_t *)&type metadata singleton initialization cache for StandardEmergencyCountdown);
}

uint64_t type metadata accessor for EmergencyCountdownViewModel(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t partial apply for closure #2 in CarPlayEmergencyCountdown.body.getter()
{
  return partial apply for closure #2 in CarPlayEmergencyCountdown.body.getter(type metadata accessor for CarPlayEmergencyCountdown, (uint64_t (*)(uint64_t))closure #2 in ForeignEmergencyCallDisambiguationView.body.getter);
}

uint64_t partial apply for closure #3 in StandardEmergencyCountdown.body.getter()
{
  return partial apply for closure #3 in StandardEmergencyCountdown.body.getter(type metadata accessor for StandardEmergencyCountdown, (uint64_t (*)(uint64_t))closure #3 in StandardEmergencyCountdown.body.getter);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>)>>, _AppearanceActionModifier>);
    v2[0] = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>)>> and conformance HStack<A>, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>)>>, MEMORY[0x24BDF44A0]);
    v2[1] = MEMORY[0x24BDF0908];
    result = MEMORY[0x249501140](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier>);
    v2[0] = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>> and conformance ComponentStack<A>, &demangling cache variable for type metadata for ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, MEMORY[0x24BEADBF8]);
    v2[1] = MEMORY[0x24BDF0908];
    result = MEMORY[0x249501140](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t specialized __RawDictionaryStorage.find<A>(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return specialized __RawDictionaryStorage.find<A>(_:hashValue:)(a1, v4);
}

unint64_t specialized __RawDictionaryStorage.find<A>(_:hashValue:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      outlined init with copy of AnyHashable(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x249500B88](v9, a1);
      outlined destroy of AnyHashable((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t key path getter for EnvironmentValues.multilineTextAlignment : EnvironmentValues, serialized@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_243B0E218@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t key path setter for EnvironmentValues.multilineTextAlignment : EnvironmentValues, serialized()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

uint64_t sub_243B0E264()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>, _PaddingLayout>, lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
    v2[1] = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type _BackgroundStyleModifier<Color> and conformance _BackgroundStyleModifier<A>, &demangling cache variable for type metadata for _BackgroundStyleModifier<Color>, MEMORY[0x24BDF06D8]);
    result = MEMORY[0x249501140](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = a3();
    v7[1] = MEMORY[0x24BDECC58];
    result = MEMORY[0x249501140](MEMORY[0x24BDED300], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  return lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>, (uint64_t (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>> and conformance <> ModifiedContent<A, B>);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<Text, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>();
    v2[1] = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<TextAlignment>, MEMORY[0x24BDF1020]);
    result = MEMORY[0x249501140](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Text, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<Text, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Text, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Text, _FlexFrameLayout>);
    v2[0] = MEMORY[0x24BDF1F78];
    v2[1] = MEMORY[0x24BDEDBC0];
    result = MEMORY[0x249501140](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Text, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t outlined release of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>>(uint64_t a1)
{
  outlined consume of Text.Storage(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t partial apply for closure #1 in SmartEmergencyCountdown.body.getter()
{
  return partial apply for closure #3 in StandardEmergencyCountdown.body.getter(type metadata accessor for SmartEmergencyCountdown, (uint64_t (*)(uint64_t))closure #1 in SmartEmergencyCountdown.body.getter);
}

uint64_t partial apply for closure #3 in StandardEmergencyCountdown.body.getter(uint64_t (*a1)(_QWORD), uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(a1(0) - 8) + 80);
  return a2(v2 + ((v3 + 16) & ~v3));
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, _PaddingLayout>);
    v2[0] = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>> and conformance ComponentStack<A>, &demangling cache variable for type metadata for ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, MEMORY[0x24BEADBF8]);
    v2[1] = MEMORY[0x24BDECC58];
    result = MEMORY[0x249501140](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t sub_243B0E5DC()
{
  return EnvironmentValues.colorScheme.getter();
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.if<A>(_:transform:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[6];

  result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.if<A>(_:transform:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.if<A>(_:transform:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.if<A>(_:transform:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>>);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>);
    v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for <<opaque return type of View.setHostBackground(_:)>>.0);
    v4 = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>> and conformance ComponentStack<A>, &demangling cache variable for type metadata for ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, MEMORY[0x24BEADBF8]);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, _PaddingLayout>);
    lazy protocol witness table accessor for type ModifiedContent<ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>();
    v5[2] = v2;
    v5[3] = v3;
    v5[4] = v4;
    v5[5] = swift_getOpaqueTypeConformance2();
    v5[0] = swift_getOpaqueTypeConformance2();
    v5[1] = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<ColorScheme> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<ColorScheme>, MEMORY[0x24BDF1020]);
    result = MEMORY[0x249501140](MEMORY[0x24BDED300], v1, v5);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.if<A>(_:transform:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t associated type witness table accessor for ObservableObject.ObjectWillChangePublisher : Publisher in EmergencyCountdownViewModel()
{
  return MEMORY[0x24BDB9D70];
}

uint64_t associated type witness table accessor for View.Body : View in EmergencyCountdownView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for View.Body : View in CarPlayEmergencyCountdown()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for View.Body : View in StandardEmergencyCountdown()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for View.Body : View in EmergencyCountdownSash()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for View.Body : View in SmartEmergencyCountdown()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t lazy protocol witness table accessor for type EmergencyCountdownView_Previews and conformance EmergencyCountdownView_Previews()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type EmergencyCountdownView_Previews and conformance EmergencyCountdownView_Previews;
  if (!lazy protocol witness table cache variable for type EmergencyCountdownView_Previews and conformance EmergencyCountdownView_Previews)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for EmergencyCountdownView_Previews, &type metadata for EmergencyCountdownView_Previews);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EmergencyCountdownView_Previews and conformance EmergencyCountdownView_Previews);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type EmergencyCountdownView_Previews and conformance EmergencyCountdownView_Previews;
  if (!lazy protocol witness table cache variable for type EmergencyCountdownView_Previews and conformance EmergencyCountdownView_Previews)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for EmergencyCountdownView_Previews, &type metadata for EmergencyCountdownView_Previews);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EmergencyCountdownView_Previews and conformance EmergencyCountdownView_Previews);
  }
  return result;
}

uint64_t associated type witness table accessor for PreviewProvider.Previews : View in EmergencyCountdownView_Previews()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_243B0E7CC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(_QWORD **)a1 + 320))();
}

uint64_t sub_243B0E7F8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(_QWORD **)a1 + 368))();
}

uint64_t sub_243B0E824(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(_QWORD **)a1 + 416))();
}

uint64_t sub_243B0E850(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(_QWORD **)a1 + 464))();
}

uint64_t sub_243B0E87C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(_QWORD **)a1 + 512))();
}

uint64_t sub_243B0E8A8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(_QWORD **)a1 + 560))();
}

uint64_t sub_243B0E8D4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(_QWORD **)a1 + 608))();
}

uint64_t sub_243B0E900(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(_QWORD **)a1 + 656))();
}

uint64_t sub_243B0E92C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(_QWORD **)a1 + 704))();
}

uint64_t sub_243B0E958(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(_QWORD **)a1 + 752))();
}

uint64_t sub_243B0E984(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(_QWORD **)a1 + 800))();
}

uint64_t sub_243B0E9B0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(_QWORD **)a1 + 848))();
}

uint64_t sub_243B0E9DC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(_QWORD **)a1 + 896))();
}

uint64_t sub_243B0EA08(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(_QWORD **)a1 + 944))();
}

uint64_t sub_243B0EA34@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 968))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_243B0EA68(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 976))(*a1);
}

void sub_243B0EA94(uint64_t a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))(**(_QWORD **)a1 + 992))();
}

uint64_t sub_243B0EAC4(double *a1, uint64_t a2)
{
  return (*(uint64_t (**)(double))(**(_QWORD **)a2 + 1000))(*a1);
}

uint64_t sub_243B0EAF0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(_QWORD **)a1 + 1040))();
}

void sub_243B0EB1C(uint64_t a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))(**(_QWORD **)a1 + 1064))();
}

uint64_t sub_243B0EB4C(double *a1, uint64_t a2)
{
  return (*(uint64_t (**)(double))(**(_QWORD **)a2 + 1072))(*a1);
}

uint64_t sub_243B0EB78@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 1088))();
  *a2 = result;
  return result;
}

uint64_t sub_243B0EBA8(id *a1, uint64_t a2)
{
  return (*(uint64_t (**)(id))(**(_QWORD **)a2 + 1096))(*a1);
}

uint64_t sub_243B0EBD8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 1112))();
  *a2 = result;
  return result;
}

uint64_t sub_243B0EC08(id *a1, uint64_t a2)
{
  return (*(uint64_t (**)(id))(**(_QWORD **)a2 + 1120))(*a1);
}

uint64_t sub_243B0EC38@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 1160))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_243B0EC6C(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 1168))(*a1);
}

uint64_t sub_243B0EC98@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 24);
  return swift_retain();
}

uint64_t sub_243B0ECA4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 24) = v3;
  return result;
}

uint64_t sub_243B0ECE4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 8);
  return swift_retain();
}

uint64_t sub_243B0ECF0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 8) = v3;
  return result;
}

ValueMetadata *type metadata accessor for EmergencyCountdownConfiguration()
{
  return &type metadata for EmergencyCountdownConfiguration;
}

uint64_t ObjC metadata update function for EmergencyCountdownViewModel()
{
  return type metadata accessor for EmergencyCountdownViewModel(0);
}

void type metadata completion function for EmergencyCountdownViewModel()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  type metadata accessor for EmergencyCountdownModel?();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Published<Int>(319, &lazy cache variable for type metadata for Published<Int>);
    if (v1 <= 0x3F)
    {
      type metadata accessor for Published<Int>(319, &lazy cache variable for type metadata for Published<CGFloat>);
      if (v2 <= 0x3F)
      {
        type metadata accessor for Published<Publishers.Autoconnect<NSTimer.TimerPublisher>>();
        if (v3 <= 0x3F)
        {
          type metadata accessor for Published<Int>(319, &lazy cache variable for type metadata for Published<String>);
          if (v4 <= 0x3F)
          {
            type metadata accessor for Published<Int>(319, &lazy cache variable for type metadata for Published<Bool>);
            if (v5 <= 0x3F)
              swift_updateClassMetadata2();
          }
        }
      }
    }
  }
}

void type metadata accessor for EmergencyCountdownModel?()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for EmergencyCountdownModel?)
  {
    type metadata accessor for EmergencyCountdownModel();
    v0 = type metadata accessor for Optional();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for EmergencyCountdownModel?);
  }
}

void type metadata accessor for Published<Publishers.Autoconnect<NSTimer.TimerPublisher>>()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for Published<Publishers.Autoconnect<NSTimer.TimerPublisher>>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Publishers.Autoconnect<NSTimer.TimerPublisher>);
    v0 = type metadata accessor for Published();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Published<Publishers.Autoconnect<NSTimer.TimerPublisher>>);
  }
}

void type metadata accessor for Published<Int>(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = type metadata accessor for Published();
    if (!v4)
      atomic_store(v3, a2);
  }
}

char *initializeBufferWithCopyOfBuffer for EmergencyCountdownView(char *a1, char **a2, int *a3)
{
  int v3;
  char *v4;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  int *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  _QWORD *v38;
  uint64_t v39;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v7 = a1;
    *((_QWORD *)a1 + 1) = a2[1];
    v8 = a3[5];
    v9 = &a1[v8];
    v10 = (uint64_t)a2 + v8;
    v11 = type metadata accessor for ActionHandler();
    v12 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v13 = v4;
    v12(v9, v10, v11);
    v14 = a3[6];
    v15 = a3[7];
    v16 = &v7[v14];
    v17 = (char **)((char *)a2 + v14);
    v18 = v17[1];
    *(_QWORD *)v16 = *v17;
    *((_QWORD *)v16 + 1) = v18;
    v19 = &v7[v15];
    v20 = (uint64_t)a2 + v15;
    swift_retain();
    v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    v22 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
    v22(v19, v20, v21);
    v23 = (int *)type metadata accessor for EmergencyCountdownModel();
    v22(&v19[v23[5]], v20 + v23[5], v21);
    v22(&v19[v23[6]], v20 + v23[6], v21);
    v22(&v19[v23[7]], v20 + v23[7], v21);
    v22(&v19[v23[8]], v20 + v23[8], v21);
    v22(&v19[v23[9]], v20 + v23[9], v21);
    v22(&v19[v23[10]], v20 + v23[10], v21);
    v22(&v19[v23[11]], v20 + v23[11], v21);
    v22(&v19[v23[12]], v20 + v23[12], v21);
    v24 = v23[13];
    v25 = &v19[v24];
    v26 = v20 + v24;
    v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = v23[14];
    v29 = &v19[v28];
    v30 = v20 + v28;
    v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = v23[15];
    v33 = &v19[v32];
    v34 = v20 + v32;
    v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = v23[16];
    v37 = &v19[v36];
    v38 = (_QWORD *)(v20 + v36);
    v39 = v38[1];
    *(_QWORD *)v37 = *v38;
    *((_QWORD *)v37 + 1) = v39;
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t destroy for EmergencyCountdownView(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t);
  int *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;

  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_release();
  v6 = (char *)a1 + *(int *)(a2 + 28);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v8 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v8(v6, v7);
  v9 = (int *)type metadata accessor for EmergencyCountdownModel();
  v8(&v6[v9[5]], v7);
  v8(&v6[v9[6]], v7);
  v8(&v6[v9[7]], v7);
  v8(&v6[v9[8]], v7);
  v8(&v6[v9[9]], v7);
  v8(&v6[v9[10]], v7);
  v8(&v6[v9[11]], v7);
  v8(&v6[v9[12]], v7);
  v10 = &v6[v9[13]];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v12 = &v6[v9[14]];
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  v14 = &v6[v9[15]];
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for EmergencyCountdownView(_QWORD *a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  id v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  int *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  _QWORD *v38;
  uint64_t v39;

  v7 = *(void **)a2;
  v6 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v6;
  v8 = a3[5];
  v9 = (char *)a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for ActionHandler();
  v12 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  v13 = v7;
  v12(v9, v10, v11);
  v14 = a3[6];
  v15 = a3[7];
  v16 = (_QWORD *)((char *)a1 + v14);
  v17 = (_QWORD *)(a2 + v14);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = (char *)a1 + v15;
  v20 = a2 + v15;
  swift_retain();
  v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v22 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
  v22(v19, v20, v21);
  v23 = (int *)type metadata accessor for EmergencyCountdownModel();
  v22(&v19[v23[5]], v20 + v23[5], v21);
  v22(&v19[v23[6]], v20 + v23[6], v21);
  v22(&v19[v23[7]], v20 + v23[7], v21);
  v22(&v19[v23[8]], v20 + v23[8], v21);
  v22(&v19[v23[9]], v20 + v23[9], v21);
  v22(&v19[v23[10]], v20 + v23[10], v21);
  v22(&v19[v23[11]], v20 + v23[11], v21);
  v22(&v19[v23[12]], v20 + v23[12], v21);
  v24 = v23[13];
  v25 = &v19[v24];
  v26 = v20 + v24;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
  v28 = v23[14];
  v29 = &v19[v28];
  v30 = v20 + v28;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
  v32 = v23[15];
  v33 = &v19[v32];
  v34 = v20 + v32;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
  v36 = v23[16];
  v37 = &v19[v36];
  v38 = (_QWORD *)(v20 + v36);
  v39 = v38[1];
  *(_QWORD *)v37 = *v38;
  *((_QWORD *)v37 + 1) = v39;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EmergencyCountdownView(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;

  v6 = *(void **)a1;
  v7 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v7;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v9 = a3[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v13 = a3[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_retain();
  swift_release();
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 24);
  v20(v17, v18, v19);
  v21 = (int *)type metadata accessor for EmergencyCountdownModel();
  v20(v17 + v21[5], v18 + v21[5], v19);
  v20(v17 + v21[6], v18 + v21[6], v19);
  v20(v17 + v21[7], v18 + v21[7], v19);
  v20(v17 + v21[8], v18 + v21[8], v19);
  v20(v17 + v21[9], v18 + v21[9], v19);
  v20(v17 + v21[10], v18 + v21[10], v19);
  v20(v17 + v21[11], v18 + v21[11], v19);
  v20(v17 + v21[12], v18 + v21[12], v19);
  v22 = v21[13];
  v23 = v17 + v22;
  v24 = v18 + v22;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v23, v24, v25);
  v26 = v21[14];
  v27 = v17 + v26;
  v28 = v18 + v26;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 24))(v27, v28, v29);
  v30 = v21[15];
  v31 = v17 + v30;
  v32 = v18 + v30;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 24))(v31, v32, v33);
  v34 = v21[16];
  v35 = (_QWORD *)(v17 + v34);
  v36 = (_QWORD *)(v18 + v34);
  *v35 = *v36;
  v35[1] = v36[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for EmergencyCountdownView(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32);
  v14(v11, v12, v13);
  v15 = (int *)type metadata accessor for EmergencyCountdownModel();
  v14(&v11[v15[5]], &v12[v15[5]], v13);
  v14(&v11[v15[6]], &v12[v15[6]], v13);
  v14(&v11[v15[7]], &v12[v15[7]], v13);
  v14(&v11[v15[8]], &v12[v15[8]], v13);
  v14(&v11[v15[9]], &v12[v15[9]], v13);
  v14(&v11[v15[10]], &v12[v15[10]], v13);
  v14(&v11[v15[11]], &v12[v15[11]], v13);
  v14(&v11[v15[12]], &v12[v15[12]], v13);
  v16 = v15[13];
  v17 = &v11[v16];
  v18 = &v12[v16];
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  v20 = v15[14];
  v21 = &v11[v20];
  v22 = &v12[v20];
  v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
  v24 = v15[15];
  v25 = &v11[v24];
  v26 = &v12[v24];
  v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
  *(_OWORD *)&v11[v15[16]] = *(_OWORD *)&v12[v15[16]];
  return a1;
}

uint64_t assignWithTake for EmergencyCountdownView(uint64_t a1, _QWORD *a2, int *a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(uint64_t, char *, uint64_t);
  int *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  *(_QWORD *)(a1 + 8) = a2[1];
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_release();
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v20 = *(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 40);
  v20(v17, v18, v19);
  v21 = (int *)type metadata accessor for EmergencyCountdownModel();
  v20(v17 + v21[5], &v18[v21[5]], v19);
  v20(v17 + v21[6], &v18[v21[6]], v19);
  v20(v17 + v21[7], &v18[v21[7]], v19);
  v20(v17 + v21[8], &v18[v21[8]], v19);
  v20(v17 + v21[9], &v18[v21[9]], v19);
  v20(v17 + v21[10], &v18[v21[10]], v19);
  v20(v17 + v21[11], &v18[v21[11]], v19);
  v20(v17 + v21[12], &v18[v21[12]], v19);
  v22 = v21[13];
  v23 = v17 + v22;
  v24 = &v18[v22];
  v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 40))(v23, v24, v25);
  v26 = v21[14];
  v27 = v17 + v26;
  v28 = &v18[v26];
  v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 40))(v27, v28, v29);
  v30 = v21[15];
  v31 = v17 + v30;
  v32 = &v18[v30];
  v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 40))(v31, v32, v33);
  v34 = v21[16];
  v35 = (_QWORD *)(v17 + v34);
  v36 = &v18[v34];
  v38 = *(_QWORD *)v36;
  v37 = *((_QWORD *)v36 + 1);
  *v35 = v38;
  v35[1] = v37;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EmergencyCountdownView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_243B0FC1C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v6 = type metadata accessor for ActionHandler();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = type metadata accessor for EmergencyCountdownModel();
    v7 = *(_QWORD *)(v8 - 8);
    v9 = a3[7];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = *(_QWORD *)(a1 + a3[6] + 8);
  if (v10 >= 0xFFFFFFFF)
    LODWORD(v10) = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for EmergencyCountdownView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_243B0FCD0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = type metadata accessor for ActionHandler();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = a4[5];
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[6] + 8) = (a2 - 1);
      return result;
    }
    v10 = type metadata accessor for EmergencyCountdownModel();
    v9 = *(_QWORD *)(v10 - 8);
    v11 = a4[7];
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
}

uint64_t type metadata completion function for EmergencyCountdownView()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for ActionHandler();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for EmergencyCountdownModel();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for CarPlayEmergencyCountdown(char *a1, char **a2, int *a3)
{
  int v3;
  char *v4;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  char *v13;
  uint64_t v14;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v7 = a1;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *((_QWORD *)a1 + 3) = a2[3];
    v8 = a3[6];
    v9 = &a1[v8];
    v10 = (uint64_t)a2 + v8;
    v11 = type metadata accessor for ActionHandler();
    v12 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v13 = v4;
    swift_retain();
    v12(v9, v10, v11);
    v14 = a3[8];
    *(_QWORD *)&v7[a3[7]] = *(char **)((char *)a2 + a3[7]);
    *(_QWORD *)&v7[v14] = *(char **)((char *)a2 + v14);
    *(_QWORD *)&v7[a3[9]] = *(char **)((char *)a2 + a3[9]);
  }
  return v7;
}

uint64_t destroy for CarPlayEmergencyCountdown(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  swift_release();
  v4 = (char *)a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for ActionHandler();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for CarPlayEmergencyCountdown(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  id v12;
  uint64_t v13;

  v6 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for ActionHandler();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v12 = v6;
  swift_retain();
  v11(v8, v9, v10);
  v13 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithCopy for CarPlayEmergencyCountdown(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(void **)a1;
  v7 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v7;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  v9 = a3[6];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  return a1;
}

_OWORD *initializeWithTake for CarPlayEmergencyCountdown(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  *(_QWORD *)((char *)a1 + v11) = *(_QWORD *)((char *)a2 + v11);
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  return a1;
}

uint64_t assignWithTake for CarPlayEmergencyCountdown(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t getEnumTagSinglePayload for CarPlayEmergencyCountdown()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_243B10204(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for ActionHandler();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for CarPlayEmergencyCountdown()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_243B1028C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for ActionHandler();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata completion function for CarPlayEmergencyCountdown()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ActionHandler();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for StandardEmergencyCountdown(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  id v13;
  uint64_t v14;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v14 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v7 = (void *)a2[2];
    v6 = a2[3];
    a1[2] = (uint64_t)v7;
    a1[3] = v6;
    v8 = *(int *)(a3 + 24);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for ActionHandler();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_retain();
    v13 = v7;
    v12(v9, v10, v11);
  }
  return v3;
}

uint64_t destroy for StandardEmergencyCountdown(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();

  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for ActionHandler();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for StandardEmergencyCountdown(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  id v12;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v6 = (void *)a2[2];
  v5 = a2[3];
  a1[2] = v6;
  a1[3] = v5;
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for ActionHandler();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_retain();
  v12 = v6;
  v11(v8, v9, v10);
  return a1;
}

_QWORD *assignWithCopy for StandardEmergencyCountdown(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  v6 = (void *)a1[2];
  v7 = (void *)a2[2];
  a1[2] = v7;
  v8 = v7;

  a1[3] = a2[3];
  v9 = *(int *)(a3 + 24);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

_OWORD *initializeWithTake for StandardEmergencyCountdown(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

_QWORD *assignWithTake for StandardEmergencyCountdown(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  v7 = (void *)a1[2];
  a1[2] = a2[2];

  a1[3] = a2[3];
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for StandardEmergencyCountdown()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_243B10694(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for ActionHandler();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for StandardEmergencyCountdown()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_243B1071C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for ActionHandler();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata completion function for StandardEmergencyCountdown()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ActionHandler();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for EmergencyCountdownSash(id *a1)
{

  return swift_release();
}

uint64_t initializeWithCopy for EmergencyCountdownSash(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v4 = v3;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for EmergencyCountdownSash(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for EmergencyCountdownSash(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for EmergencyCountdownSash(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EmergencyCountdownSash(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for EmergencyCountdownSash()
{
  return &type metadata for EmergencyCountdownSash;
}

char *initializeBufferWithCopyOfBuffer for SmartEmergencyCountdown(char *a1, char **a2, uint64_t a3)
{
  int v3;
  char *v4;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  char *v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  uint64_t v17;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
  }
  else
  {
    v7 = a1;
    *((_QWORD *)a1 + 1) = a2[1];
    v8 = *(int *)(a3 + 20);
    v9 = &a1[v8];
    v10 = (uint64_t)a2 + v8;
    v11 = type metadata accessor for ActionHandler();
    v12 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v13 = v4;
    v12(v9, v10, v11);
    v14 = *(int *)(a3 + 24);
    v15 = &v7[v14];
    v16 = (char **)((char *)a2 + v14);
    v17 = v16[1];
    *(_QWORD *)v15 = *v16;
    *((_QWORD *)v15 + 1) = v17;
  }
  swift_retain();
  return v7;
}

uint64_t destroy for SmartEmergencyCountdown(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_release();
}

_QWORD *initializeWithCopy for SmartEmergencyCountdown(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  id v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  v7 = *(void **)a2;
  v6 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v6;
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for ActionHandler();
  v12 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  v13 = v7;
  v12(v9, v10, v11);
  v14 = *(int *)(a3 + 24);
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for SmartEmergencyCountdown(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;

  v6 = *(void **)a1;
  v7 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v7;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v9 = *(int *)(a3 + 20);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v13 = *(int *)(a3 + 24);
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *initializeWithTake for SmartEmergencyCountdown(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for SmartEmergencyCountdown(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  *(_QWORD *)(a1 + 8) = a2[1];
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SmartEmergencyCountdown()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_243B10D4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for ActionHandler();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for SmartEmergencyCountdown()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_243B10DDC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for ActionHandler();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t type metadata completion function for SmartEmergencyCountdown()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ActionHandler();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for EmergencyCountdownView_Previews()
{
  return &type metadata for EmergencyCountdownView_Previews;
}

uint64_t sub_243B10EE8()
{
  return lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type SubscriptionView<Published<[AnyHashable : Any]>.Publisher, SubscriptionView<AnyPublisher<Context.Event, Never>, SubscriptionView<Publishers.Autoconnect<NSTimer.TimerPublisher>, ModifiedContent<Group<_ConditionalContent<_ConditionalContent<<<opaque return type of View.privacySensitive(_:)>>.0, <<opaque return type of View.privacySensitive(_:)>>.0>, <<opaque return type of View.privacySensitive(_:)>>.0>>, _AppearanceActionModifier>>>> and conformance SubscriptionView<A, B>, &demangling cache variable for type metadata for SubscriptionView<Published<[AnyHashable : Any]>.Publisher, SubscriptionView<AnyPublisher<Context.Event, Never>, SubscriptionView<Publishers.Autoconnect<NSTimer.TimerPublisher>, ModifiedContent<Group<_ConditionalContent<_ConditionalContent<<<opaque return type of View.privacySensitive(_:)>>.0, <<opaque return type of View.privacySensitive(_:)>>.0>, <<opaque return type of View.privacySensitive(_:)>>.0>>, _AppearanceActionModifier>>>>, MEMORY[0x24BDEDA60]);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<VStack<TupleView<(EmergencyCountdownSash, ButtonContainerView)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(EmergencyCountdownSash, ButtonContainerView)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(EmergencyCountdownSash, ButtonContainerView)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(EmergencyCountdownSash, ButtonContainerView)>>, _AppearanceActionModifier>);
    v2[0] = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type VStack<TupleView<(EmergencyCountdownSash, ButtonContainerView)>> and conformance VStack<A>, &demangling cache variable for type metadata for VStack<TupleView<(EmergencyCountdownSash, ButtonContainerView)>>, MEMORY[0x24BDF46F8]);
    v2[1] = MEMORY[0x24BDF0908];
    result = MEMORY[0x249501140](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(EmergencyCountdownSash, ButtonContainerView)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>)>>, _AppearanceActionModifier>, ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier>> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>)>>, _AppearanceActionModifier>, ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier>> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>)>>, _AppearanceActionModifier>, ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier>> and conformance <> _ConditionalContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>)>>, _AppearanceActionModifier>, ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier>>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>();
    v2[1] = lazy protocol witness table accessor for type ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>();
    result = MEMORY[0x249501140](MEMORY[0x24BDEF3D8], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>)>>, _AppearanceActionModifier>, ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier>> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

uint64_t sub_243B1100C(uint64_t a1)
{
  return get_witness_table_qd__7SwiftUI4ViewHD2_AaBPAAE16privacySensitiveyQrSbFQOyAA15ModifiedContentVyAFyAFyAFyAFyAA4TextVAA16_FlexFrameLayoutVGAA30_EnvironmentKeyWritingModifierVyAA0H9AlignmentOGGAA08_PaddingK0VGASGAA016_BackgroundStyleO0VyAA5ColorVGG_Qo_HOTm(a1, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>);
}

uint64_t sub_243B11028(uint64_t a1)
{
  return get_witness_table_qd__7SwiftUI4ViewHD2_AaBPAAE16privacySensitiveyQrSbFQOyAA15ModifiedContentVyAFyAFyAFyAFyAA4TextVAA16_FlexFrameLayoutVGAA30_EnvironmentKeyWritingModifierVyAA0H9AlignmentOGGAA08_PaddingK0VGASGAA016_BackgroundStyleO0VyAA5ColorVGG_Qo_HOTm(a1, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.if<A>(_:transform:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.if<A>(_:transform:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>> and conformance <> ModifiedContent<A, B>);
}

uint64_t get_witness_table_qd__7SwiftUI4ViewHD2_AaBPAAE16privacySensitiveyQrSbFQOyAA15ModifiedContentVyAFyAFyAFyAFyAA4TextVAA16_FlexFrameLayoutVGAA30_EnvironmentKeyWritingModifierVyAA0H9AlignmentOGGAA08_PaddingK0VGASGAA016_BackgroundStyleO0VyAA5ColorVGG_Qo_HOTm(uint64_t a1, uint64_t *a2, void (*a3)(void))
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
  a3();
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_243B11098()
{
  return lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type SnippetPreview<EmergencyCountdownModel, EmergencyCountdownView> and conformance SnippetPreview<A, B>, &demangling cache variable for type metadata for SnippetPreview<EmergencyCountdownModel, EmergencyCountdownView>, MEMORY[0x24BEAD9E8]);
}

uint64_t objectdestroy_100Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id *v3;
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for CarPlayEmergencyCountdown(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (id *)(v0 + ((v2 + 16) & ~v2));

  swift_release();
  v4 = (char *)v3 + *(int *)(v1 + 24);
  v5 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in CarPlayEmergencyCountdown.body.getter(uint64_t (*a1)(_QWORD), uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(a1(0) - 8) + 80);
  return a2(v2 + ((v3 + 16) & ~v3));
}

uint64_t outlined release of ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_BYTE *)(a1 + 72);
  outlined consume of Text.Storage(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRelease();
  outlined consume of Text.Storage(v2, v3, v4);
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t objectdestroy_110Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id *v3;
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for SmartEmergencyCountdown(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (id *)(v0 + ((v2 + 16) & ~v2));

  v4 = (char *)v3 + *(int *)(v1 + 20);
  v5 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in SmartEmergencyCountdown.smartCancelButton.getter()
{
  return partial apply for closure #2 in CarPlayEmergencyCountdown.body.getter(type metadata accessor for SmartEmergencyCountdown, closure #1 in SmartEmergencyCountdown.smartCancelButton.getter);
}

uint64_t partial apply for closure #2 in SmartEmergencyCountdown.smartCancelButton.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return closure #2 in SmartEmergencyCountdown.smartCancelButton.getter(*(_QWORD *)(v1 + 16), a1);
}

uint64_t partial apply for closure #1 in SmartEmergencyCountdown.smartCallButton.getter()
{
  return partial apply for closure #2 in CarPlayEmergencyCountdown.body.getter(type metadata accessor for SmartEmergencyCountdown, closure #1 in SmartEmergencyCountdown.smartCallButton.getter);
}

uint64_t partial apply for closure #2 in SmartEmergencyCountdown.smartCallButton.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return closure #2 in SmartEmergencyCountdown.smartCallButton.getter(*(_QWORD *)(v1 + 16), a1);
}

uint64_t outlined retain of ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_BYTE *)(a1 + 72);
  outlined copy of Text.Storage(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRetain();
  outlined copy of Text.Storage(v2, v3, v4);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_243B113BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = EnvironmentValues.lineLimit.getter();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_243B113EC()
{
  return EnvironmentValues.lineLimit.setter();
}

uint64_t objectdestroy_103Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for StandardEmergencyCountdown(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_release();

  v4 = v3 + *(int *)(v1 + 24);
  v5 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in StandardEmergencyCountdown.callButton.getter()
{
  return partial apply for closure #2 in CarPlayEmergencyCountdown.body.getter(type metadata accessor for StandardEmergencyCountdown, closure #1 in StandardEmergencyCountdown.callButton.getter);
}

uint64_t partial apply for closure #2 in StandardEmergencyCountdown.callButton.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return closure #2 in StandardEmergencyCountdown.callButton.getter(*(_QWORD *)(v1 + 16), a1);
}

uint64_t partial apply for closure #1 in StandardEmergencyCountdown.cancelButton.getter()
{
  return partial apply for closure #2 in CarPlayEmergencyCountdown.body.getter(type metadata accessor for StandardEmergencyCountdown, closure #1 in StandardEmergencyCountdown.cancelButton.getter);
}

uint64_t partial apply for closure #2 in StandardEmergencyCountdown.cancelButton.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return closure #2 in StandardEmergencyCountdown.cancelButton.getter(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_243B114EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.visualResponseLocation.getter();
  *a1 = result;
  return result;
}

uint64_t sub_243B11514()
{
  return EnvironmentValues.visualResponseLocation.setter();
}

uint64_t outlined retain of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>(uint64_t a1)
{
  outlined copy of Text.Storage(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t outlined release of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>(uint64_t a1)
{
  outlined consume of Text.Storage(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t partial apply for closure #1 in closure #1 in CarPlayEmergencyCountdown.body.getter()
{
  uint64_t v0;

  return closure #1 in closure #1 in CarPlayEmergencyCountdown.body.getter(*(_QWORD *)(v0 + 16));
}

uint64_t partial apply for closure #1 in CarPlayEmergencyCountdown.cancelButton.getter()
{
  return partial apply for closure #2 in CarPlayEmergencyCountdown.body.getter(type metadata accessor for CarPlayEmergencyCountdown, closure #1 in CarPlayEmergencyCountdown.cancelButton.getter);
}

uint64_t partial apply for closure #2 in CarPlayEmergencyCountdown.cancelButton.getter()
{
  return closure #2 in CarPlayEmergencyCountdown.cancelButton.getter();
}

uint64_t partial apply for closure #1 in CarPlayEmergencyCountdown.callButton.getter()
{
  return partial apply for closure #2 in CarPlayEmergencyCountdown.body.getter(type metadata accessor for CarPlayEmergencyCountdown, closure #1 in CarPlayEmergencyCountdown.callButton.getter);
}

uint64_t partial apply for closure #2 in CarPlayEmergencyCountdown.callButton.getter()
{
  return closure #2 in CarPlayEmergencyCountdown.cancelButton.getter();
}

uint64_t sub_243B11668()
{
  uint64_t v0;

  outlined consume of Text.Storage(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #2 in CarPlayEmergencyCountdown.callButton.getter()
{
  uint64_t v0;

  return closure #1 in closure #2 in CarPlayEmergencyCountdown.callButton.getter(*(_QWORD *)(v0 + 16));
}

uint64_t partial apply for closure #1 in closure #2 in CarPlayEmergencyCountdown.cancelButton.getter()
{
  uint64_t v0;

  return closure #1 in closure #2 in CarPlayEmergencyCountdown.cancelButton.getter(*(_QWORD *)(v0 + 16));
}

unint64_t lazy protocol witness table accessor for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction;
  if (!lazy protocol witness table cache variable for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for EmergencyCountdownUpdateAction, &type metadata for EmergencyCountdownUpdateAction);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction;
  if (!lazy protocol witness table cache variable for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for EmergencyCountdownUpdateAction, &type metadata for EmergencyCountdownUpdateAction);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction;
  if (!lazy protocol witness table cache variable for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for EmergencyCountdownUpdateAction, &type metadata for EmergencyCountdownUpdateAction);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction;
  if (!lazy protocol witness table cache variable for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for EmergencyCountdownUpdateAction, &type metadata for EmergencyCountdownUpdateAction);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction;
  if (!lazy protocol witness table cache variable for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for EmergencyCountdownUpdateAction, &type metadata for EmergencyCountdownUpdateAction);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<<<opaque return type of View.privacySensitive(_:)>>.0, <<opaque return type of View.privacySensitive(_:)>>.0> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t OpaqueTypeConformance2;
  _QWORD v3[4];

  result = lazy protocol witness table cache variable for type _ConditionalContent<<<opaque return type of View.privacySensitive(_:)>>.0, <<opaque return type of View.privacySensitive(_:)>>.0> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<<<opaque return type of View.privacySensitive(_:)>>.0, <<opaque return type of View.privacySensitive(_:)>>.0> and conformance <> _ConditionalContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.privacySensitive(_:)>>.0, <<opaque return type of View.privacySensitive(_:)>>.0>);
    type metadata accessor for CarPlayEmergencyCountdown(255);
    lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type CarPlayEmergencyCountdown and conformance CarPlayEmergencyCountdown, type metadata accessor for CarPlayEmergencyCountdown, (uint64_t)&protocol conformance descriptor for CarPlayEmergencyCountdown);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v3[2] = type metadata accessor for SmartEmergencyCountdown(255);
    v3[3] = lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type SmartEmergencyCountdown and conformance SmartEmergencyCountdown, type metadata accessor for SmartEmergencyCountdown, (uint64_t)&protocol conformance descriptor for SmartEmergencyCountdown);
    v3[0] = OpaqueTypeConformance2;
    v3[1] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x249501140](MEMORY[0x24BDEF3D8], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<<<opaque return type of View.privacySensitive(_:)>>.0, <<opaque return type of View.privacySensitive(_:)>>.0> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

uint64_t outlined init with copy of AnyHashable(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t ListHeaderView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v42 = a3;
  v41 = type metadata accessor for PrimaryHeaderStandardView();
  v40 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = a1;
  v50 = a2;
  lazy protocol witness table accessor for type String and conformance String();
  swift_bridgeObjectRetain();
  v7 = Text.init<A>(_:)();
  v9 = v8;
  v11 = v10 & 1;
  static Font.title3.getter();
  v12 = Text.font(_:)();
  v14 = v13;
  v16 = v15;
  swift_release();
  outlined consume of Text.Storage(v7, v9, v11);
  swift_bridgeObjectRelease();
  static Font.Weight.semibold.getter();
  v17 = Text.fontWeight(_:)();
  v19 = v18;
  v21 = v20;
  v23 = v22;
  outlined consume of Text.Storage(v12, v14, v16 & 1);
  swift_bridgeObjectRelease();
  v51 = MEMORY[0x24BDF1FA0];
  v52 = MEMORY[0x24BEAD6B8];
  v24 = swift_allocObject();
  v49 = v24;
  *(_QWORD *)(v24 + 16) = v17;
  *(_QWORD *)(v24 + 24) = v19;
  *(_BYTE *)(v24 + 32) = v21 & 1;
  *(_QWORD *)(v24 + 40) = v23;
  v48 = 0;
  v46 = 0u;
  v47 = 0u;
  v45 = 0;
  v44 = 0u;
  v43 = 0u;
  PrimaryHeaderStandardView.init(text1:text2:text3:addTint:)();
  v25 = static Edge.Set.leading.getter();
  EdgeInsets.init(_all:)();
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v33 = v32;
  v34 = v40;
  v35 = v42;
  v36 = v41;
  (*(void (**)(uint64_t, char *, uint64_t))(v40 + 16))(v42, v6, v41);
  v37 = v35
      + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<PrimaryHeaderStandardView, _PaddingLayout>)
               + 36);
  *(_BYTE *)v37 = v25;
  *(_QWORD *)(v37 + 8) = v27;
  *(_QWORD *)(v37 + 16) = v29;
  *(_QWORD *)(v37 + 24) = v31;
  *(_QWORD *)(v37 + 32) = v33;
  *(_BYTE *)(v37 + 40) = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v6, v36);
}

uint64_t sub_243B11B3C()
{
  uint64_t v0;

  outlined consume of Text.Storage(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t associated type witness table accessor for View.Body : View in ListHeaderView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t protocol witness for View.body.getter in conformance ListHeaderView@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return ListHeaderView.body.getter(*v1, v1[1], a1);
}

_QWORD *initializeBufferWithCopyOfBuffer for ListHeaderView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for ListHeaderView()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for ListHeaderView(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

_QWORD *assignWithTake for ListHeaderView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ListHeaderView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ListHeaderView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ListHeaderView()
{
  return &type metadata for ListHeaderView;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<PrimaryHeaderStandardView, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<PrimaryHeaderStandardView, _PaddingLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<PrimaryHeaderStandardView, _PaddingLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<PrimaryHeaderStandardView, _PaddingLayout>);
    v2[0] = lazy protocol witness table accessor for type PrimaryHeaderStandardView and conformance PrimaryHeaderStandardView();
    v2[1] = MEMORY[0x24BDECC58];
    result = MEMORY[0x249501140](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<PrimaryHeaderStandardView, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PrimaryHeaderStandardView and conformance PrimaryHeaderStandardView()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type PrimaryHeaderStandardView and conformance PrimaryHeaderStandardView;
  if (!lazy protocol witness table cache variable for type PrimaryHeaderStandardView and conformance PrimaryHeaderStandardView)
  {
    v1 = type metadata accessor for PrimaryHeaderStandardView();
    result = MEMORY[0x249501140](MEMORY[0x24BEAE2D0], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PrimaryHeaderStandardView and conformance PrimaryHeaderStandardView);
  }
  return result;
}

uint64_t specialized == infix<A>(_:_:)(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  unint64_t v3;
  unint64_t v4;
  int v5;
  unint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x747465536E65706FLL;
    else
      v3 = 0xD000000000000011;
    if (v2 == 1)
      v4 = 0xEC00000073676E69;
    else
      v4 = 0x8000000243B36F60;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x747465536E65706FLL;
      else
        v6 = 0xD000000000000011;
      if (v5 == 1)
        v7 = 0xEC00000073676E69;
      else
        v7 = 0x8000000243B36F60;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v3 = 0x6C6143724F646461;
    v4 = 0xEF74706D6F72506CLL;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xEF74706D6F72506CLL;
  if (v3 != 0x6C6143724F646461)
  {
LABEL_21:
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t specialized == infix<A>(_:_:)(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6F56746165706572;
  else
    v3 = 0xD000000000000015;
  if (v2)
    v4 = 0x8000000243B36E90;
  else
    v4 = 0xEF6C69616D656369;
  if ((a2 & 1) != 0)
    v5 = 0x6F56746165706572;
  else
    v5 = 0xD000000000000015;
  if ((a2 & 1) != 0)
    v6 = 0xEF6C69616D656369;
  else
    v6 = 0x8000000243B36E90;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

Swift::Int specialized RawRepresentable<>.hashValue.getter()
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  Hasher.init(_seed:)();
  String.hash(into:)();
  return Hasher._finalize()();
}

uint64_t specialized RawRepresentable<>.hash(into:)()
{
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

{
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

{
  return String.hash(into:)();
}

Swift::Int specialized RawRepresentable<>._rawHashValue(seed:)()
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  Hasher.init(_seed:)();
  String.hash(into:)();
  return Hasher._finalize()();
}

uint64_t EmergencyCountdownModel.isSmartEnabled.getter()
{
  unsigned __int8 v1;

  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t type metadata accessor for EmergencyCountdownModel()
{
  uint64_t result;

  result = type metadata singleton initialization cache for EmergencyCountdownModel;
  if (!type metadata singleton initialization cache for EmergencyCountdownModel)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t EmergencyCountdownModel.sashTitle.getter()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t EmergencyCountdownModel.cancelButtonText.getter()
{
  uint64_t v1;

  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t EmergencyCountdownModel.cancelledText.getter()
{
  uint64_t v1;

  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t EmergencyCountdownModel.callButtonText.getter()
{
  uint64_t v1;

  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t EmergencyCountdownModel.dialog.getter()
{
  uint64_t v1;

  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t EmergencyCountdownModel.localeIdentifier.getter()
{
  uint64_t v1;

  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t EmergencyCountdownModel.callingLabel.getter()
{
  uint64_t v1;

  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t EmergencyCountdownModel.emergencyServicesLabel.getter()
{
  uint64_t v1;

  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t EmergencyCountdownModel.sos.getter()
{
  uint64_t v1;

  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t EmergencyCountdownModel.callAction.getter()
{
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
  return CodableAceObject.wrappedValue.getter();
}

uint64_t EmergencyCountdownModel.cancelAction.getter()
{
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  return CodableAceObject.wrappedValue.getter();
}

void EmergencyCountdownModel.init(sashTitle:cancelButtonText:cancelledText:callButtonText:callingLabel:emergencyServicesLabel:sos:dialog:callAction:cancelAction:localeIdentifier:isSmartEnabled:)(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11)
{
  _QWORD *v11;
  id v12;
  id v13;

  v11 = (_QWORD *)(a1 + *(int *)(type metadata accessor for EmergencyCountdownModel() + 64));
  *v11 = 0xD000000000000017;
  v11[1] = 0x8000000243B37260;
  Loggable.init(wrappedValue:)();
  Loggable.init(wrappedValue:)();
  Loggable.init(wrappedValue:)();
  Loggable.init(wrappedValue:)();
  Loggable.init(wrappedValue:)();
  Loggable.init(wrappedValue:)();
  Loggable.init(wrappedValue:)();
  Loggable.init(wrappedValue:)();
  type metadata accessor for SABaseClientBoundCommand(0, &lazy cache variable for type metadata for SAIntentGroupLaunchAppWithIntent);
  v12 = a10;
  CodableAceObject.init(wrappedValue:)();
  type metadata accessor for SABaseClientBoundCommand(0, (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupRunSiriKitExecutor);
  v13 = a11;
  CodableAceObject.init(wrappedValue:)();
  Loggable.init(wrappedValue:)();
  Loggable.init(wrappedValue:)();

}

uint64_t EmergencyCountdownModel.sashTitle.setter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  return Loggable.wrappedValue.setter();
}

uint64_t (*EmergencyCountdownModel.sashTitle.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t key path getter for EmergencyCountdownModel.cancelButtonText : EmergencyCountdownModel@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  result = Loggable.wrappedValue.getter();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t key path setter for EmergencyCountdownModel.cancelButtonText : EmergencyCountdownModel()
{
  type metadata accessor for EmergencyCountdownModel();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  return Loggable.wrappedValue.setter();
}

uint64_t EmergencyCountdownModel.cancelButtonText.setter()
{
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  return Loggable.wrappedValue.setter();
}

uint64_t (*EmergencyCountdownModel.cancelButtonText.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t key path getter for EmergencyCountdownModel.cancelledText : EmergencyCountdownModel@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  result = Loggable.wrappedValue.getter();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t key path setter for EmergencyCountdownModel.cancelledText : EmergencyCountdownModel()
{
  type metadata accessor for EmergencyCountdownModel();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  return Loggable.wrappedValue.setter();
}

uint64_t EmergencyCountdownModel.cancelledText.setter()
{
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  return Loggable.wrappedValue.setter();
}

uint64_t (*EmergencyCountdownModel.cancelledText.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t key path getter for EmergencyCountdownModel.callButtonText : EmergencyCountdownModel@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  result = Loggable.wrappedValue.getter();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t key path setter for EmergencyCountdownModel.callButtonText : EmergencyCountdownModel()
{
  type metadata accessor for EmergencyCountdownModel();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  return Loggable.wrappedValue.setter();
}

uint64_t EmergencyCountdownModel.callButtonText.setter()
{
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  return Loggable.wrappedValue.setter();
}

uint64_t (*EmergencyCountdownModel.callButtonText.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t property wrapper backing initializer of EmergencyCountdownModel.callingLabel()
{
  return Loggable.init(wrappedValue:)();
}

uint64_t key path getter for EmergencyCountdownModel.callingLabel : EmergencyCountdownModel@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  result = Loggable.wrappedValue.getter();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t key path setter for EmergencyCountdownModel.callingLabel : EmergencyCountdownModel()
{
  type metadata accessor for EmergencyCountdownModel();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  return Loggable.wrappedValue.setter();
}

uint64_t EmergencyCountdownModel.callingLabel.setter()
{
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  return Loggable.wrappedValue.setter();
}

uint64_t (*EmergencyCountdownModel.callingLabel.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t key path getter for EmergencyCountdownModel.emergencyServicesLabel : EmergencyCountdownModel@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  result = Loggable.wrappedValue.getter();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t key path setter for EmergencyCountdownModel.emergencyServicesLabel : EmergencyCountdownModel()
{
  type metadata accessor for EmergencyCountdownModel();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  return Loggable.wrappedValue.setter();
}

uint64_t EmergencyCountdownModel.emergencyServicesLabel.setter()
{
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  return Loggable.wrappedValue.setter();
}

uint64_t (*EmergencyCountdownModel.emergencyServicesLabel.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t key path getter for EmergencyCountdownModel.sos : EmergencyCountdownModel@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  result = Loggable.wrappedValue.getter();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t key path setter for EmergencyCountdownModel.sos : EmergencyCountdownModel()
{
  type metadata accessor for EmergencyCountdownModel();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  return Loggable.wrappedValue.setter();
}

uint64_t EmergencyCountdownModel.sos.setter()
{
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  return Loggable.wrappedValue.setter();
}

uint64_t (*EmergencyCountdownModel.sos.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t key path getter for EmergencyCountdownModel.dialog : EmergencyCountdownModel@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  result = Loggable.wrappedValue.getter();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t key path setter for EmergencyCountdownModel.dialog : EmergencyCountdownModel()
{
  type metadata accessor for EmergencyCountdownModel();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  return Loggable.wrappedValue.setter();
}

uint64_t EmergencyCountdownModel.dialog.setter()
{
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  return Loggable.wrappedValue.setter();
}

uint64_t (*EmergencyCountdownModel.dialog.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t key path getter for EmergencyCountdownModel.localeIdentifier : EmergencyCountdownModel@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  result = Loggable.wrappedValue.getter();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t key path setter for EmergencyCountdownModel.localeIdentifier : EmergencyCountdownModel()
{
  type metadata accessor for EmergencyCountdownModel();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  return Loggable.wrappedValue.setter();
}

uint64_t EmergencyCountdownModel.localeIdentifier.setter()
{
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  return Loggable.wrappedValue.setter();
}

uint64_t (*EmergencyCountdownModel.localeIdentifier.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t property wrapper backing initializer of EmergencyCountdownModel.isSmartEnabled()
{
  return Loggable.init(wrappedValue:)();
}

uint64_t key path getter for EmergencyCountdownModel.isSmartEnabled : EmergencyCountdownModel@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  result = Loggable.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t key path setter for EmergencyCountdownModel.isSmartEnabled : EmergencyCountdownModel()
{
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  return Loggable.wrappedValue.setter();
}

uint64_t EmergencyCountdownModel.isSmartEnabled.setter()
{
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  return Loggable.wrappedValue.setter();
}

uint64_t (*EmergencyCountdownModel.isSmartEnabled.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t property wrapper backing initializer of EmergencyCountdownModel.callAction()
{
  type metadata accessor for SABaseClientBoundCommand(0, &lazy cache variable for type metadata for SAIntentGroupLaunchAppWithIntent);
  return CodableAceObject.init(wrappedValue:)();
}

uint64_t key path setter for EmergencyCountdownModel.callAction : EmergencyCountdownModel(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  type metadata accessor for EmergencyCountdownModel();
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
  return CodableAceObject.wrappedValue.setter();
}

uint64_t EmergencyCountdownModel.callAction.setter()
{
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
  return CodableAceObject.wrappedValue.setter();
}

uint64_t (*EmergencyCountdownModel.callAction.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
  v2[4] = CodableAceObject.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t property wrapper backing initializer of EmergencyCountdownModel.cancelAction()
{
  type metadata accessor for SABaseClientBoundCommand(0, (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupRunSiriKitExecutor);
  return CodableAceObject.init(wrappedValue:)();
}

uint64_t key path setter for EmergencyCountdownModel.cancelAction : EmergencyCountdownModel(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  type metadata accessor for EmergencyCountdownModel();
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  return CodableAceObject.wrappedValue.setter();
}

uint64_t EmergencyCountdownModel.cancelAction.setter()
{
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  return CodableAceObject.wrappedValue.setter();
}

uint64_t (*EmergencyCountdownModel.cancelAction.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v2[4] = CodableAceObject.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t EmergencyCountdownModel.responseViewId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for EmergencyCountdownModel() + 64));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EmergencyCountdownModel.responseViewId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for EmergencyCountdownModel() + 64));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*EmergencyCountdownModel.responseViewId.modify())()
{
  type metadata accessor for EmergencyCountdownModel();
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

void *EmergencyCountdownModel.resultViewID.unsafeMutableAddressor()
{
  return &static EmergencyCountdownModel.resultViewID;
}

unint64_t static EmergencyCountdownModel.resultViewID.getter()
{
  return 0xD000000000000017;
}

uint64_t EmergencyCountdownModel.CodingKeys.stringValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_243B13A60 + 4 * byte_243B35780[a1]))(0xD000000000000010, 0x8000000243B37AE0);
}

uint64_t sub_243B13A60()
{
  return 0x6C74695468736173;
}

uint64_t sub_243B13A7C()
{
  return 0x656C6C65636E6163;
}

uint64_t sub_243B13AA0()
{
  return 0x747475426C6C6163;
}

uint64_t sub_243B13AC4()
{
  return 0x4C676E696C6C6163;
}

uint64_t sub_243B13AE4(uint64_t a1)
{
  return a1 + 6;
}

uint64_t sub_243B13B2C()
{
  return 0x457472616D537369;
}

uint64_t sub_243B13B50()
{
  return 0x697463416C6C6163;
}

uint64_t sub_243B13B6C()
{
  return 0x63416C65636E6163;
}

uint64_t sub_243B13B8C()
{
  return 0x65736E6F70736572;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance EmergencyCountdownModel.CodingKeys()
{
  unsigned __int8 *v0;

  return EmergencyCountdownModel.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance EmergencyCountdownModel.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = specialized EmergencyCountdownModel.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

void protocol witness for CodingKey.init(intValue:) in conformance EmergencyCountdownModel.CodingKeys(_BYTE *a1@<X8>)
{
  *a1 = 13;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance EmergencyCountdownModel.CodingKeys()
{
  lazy protocol witness table accessor for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance EmergencyCountdownModel.CodingKeys()
{
  lazy protocol witness table accessor for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys();
  return CodingKey.debugDescription.getter();
}

uint64_t EmergencyCountdownModel.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[32];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<EmergencyCountdownModel.CodingKeys>);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v8[31] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  lazy protocol witness table accessor for type Loggable<String> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<String> and conformance <A> Loggable<A>, MEMORY[0x24BEAD370]);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v1)
  {
    type metadata accessor for EmergencyCountdownModel();
    v8[30] = 1;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v8[29] = 2;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v8[28] = 3;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v8[27] = 4;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v8[26] = 5;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v8[25] = 6;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v8[24] = 7;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v8[15] = 8;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v8[14] = 9;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    lazy protocol witness table accessor for type Loggable<Bool> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<Bool> and conformance <A> Loggable<A>, MEMORY[0x24BEAD370]);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v8[13] = 10;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
    lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupLaunchAppWithIntent> and conformance CodableAceObject<A>, &demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>, MEMORY[0x24BEABA88]);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v8[12] = 11;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>, &demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>, MEMORY[0x24BEABA88]);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v8[11] = 12;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t lazy protocol witness table accessor for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for EmergencyCountdownModel.CodingKeys, &unk_25144BA08);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for EmergencyCountdownModel.CodingKeys, &unk_25144BA08);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for EmergencyCountdownModel.CodingKeys, &unk_25144BA08);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for EmergencyCountdownModel.CodingKeys, &unk_25144BA08);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys);
  }
  return result;
}

uint64_t EmergencyCountdownModel.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, char *, uint64_t);
  int *v38;
  uint64_t v39;
  void (*v40)(uint64_t, char *, uint64_t);
  char *v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  void (*v53)(uint64_t, char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t *v73;
  _QWORD *v74;
  char *v75;
  int *v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  char v80;
  char v81;
  char v82;
  char v83;
  char v84;
  char v85;
  char v86;
  char v87;
  char v88;
  char v89;
  char v90;
  char v91;

  v55 = a2;
  v60 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v58 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60);
  v56 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
  v59 = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62);
  v57 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  v61 = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64);
  v63 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v78 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v65 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v66 = (char *)&v53 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v67 = (char *)&v53 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v68 = (char *)&v53 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v69 = (char *)&v53 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v53 - v18;
  v20 = MEMORY[0x24BDAC7A8](v17);
  v22 = (char *)&v53 - v21;
  v23 = MEMORY[0x24BDAC7A8](v20);
  v25 = (char *)&v53 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v71 = (char *)&v53 - v26;
  v72 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<EmergencyCountdownModel.CodingKeys>);
  v27 = *(_QWORD *)(v72 - 8);
  MEMORY[0x24BDAC7A8](v72);
  v29 = (char *)&v53 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for EmergencyCountdownModel();
  v76 = (int *)MEMORY[0x24BDAC7A8](v30);
  v77 = (uint64_t)&v53 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = (uint64_t *)(v77 + v76[16]);
  *v32 = 0xD000000000000017;
  v32[1] = 0x8000000243B37260;
  v73 = v32;
  v74 = a1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys();
  v70 = v29;
  v33 = v75;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v33)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v74);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v75 = v19;
    v54 = v27;
    v91 = 0;
    v34 = lazy protocol witness table accessor for type Loggable<String> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<String> and conformance <A> Loggable<A>, MEMORY[0x24BEAD380]);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v35 = v6;
    v36 = v77;
    v37 = *(void (**)(uint64_t, char *, uint64_t))(v78 + 32);
    v37(v77, v71, v35);
    v90 = 1;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v38 = v76;
    v39 = v36 + v76[5];
    v53 = v37;
    v37(v39, v25, v35);
    v89 = 2;
    v71 = (char *)v34;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v40 = v53;
    v53(v36 + v38[6], v22, v35);
    v88 = 3;
    v41 = v75;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v40(v36 + v38[7], v41, v35);
    v87 = 4;
    v42 = v69;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v40(v36 + v38[8], v42, v35);
    v86 = 5;
    v43 = v68;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v40(v36 + v38[9], v43, v35);
    v85 = 6;
    v44 = v67;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v40(v36 + v38[10], v44, v35);
    v84 = 7;
    v45 = v66;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v40(v36 + v38[11], v45, v35);
    v83 = 8;
    v46 = v65;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v40(v36 + v38[12], v46, v35);
    v82 = 9;
    lazy protocol witness table accessor for type Loggable<Bool> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<Bool> and conformance <A> Loggable<A>, MEMORY[0x24BEAD380]);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(uint64_t, char *, uint64_t))(v61 + 32))(v77 + v76[13], v63, v64);
    v81 = 10;
    lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupLaunchAppWithIntent> and conformance CodableAceObject<A>, &demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>, MEMORY[0x24BEABA90]);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(uint64_t, char *, uint64_t))(v59 + 32))(v77 + v76[14], v57, v62);
    v80 = 11;
    lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>, &demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>, MEMORY[0x24BEABA90]);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(uint64_t, char *, uint64_t))(v58 + 32))(v77 + v76[15], v56, v60);
    v79 = 12;
    v47 = KeyedDecodingContainer.decode(_:forKey:)();
    v49 = v48;
    (*(void (**)(char *, uint64_t))(v54 + 8))(v70, v72);
    v50 = v73;
    swift_bridgeObjectRelease();
    *v50 = v47;
    v50[1] = v49;
    v51 = v77;
    outlined init with copy of EmergencyCountdownModel(v77, v55);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v74);
    return outlined destroy of EmergencyCountdownModel(v51);
  }
}

uint64_t outlined init with copy of EmergencyCountdownModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EmergencyCountdownModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of EmergencyCountdownModel(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for EmergencyCountdownModel();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t protocol witness for PhoneSnippetModel.responseViewId.getter in conformance EmergencyCountdownModel(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 64));
  swift_bridgeObjectRetain();
  return v2;
}

unint64_t protocol witness for static ResultViewIDProviding.resultViewID.getter in conformance EmergencyCountdownModel()
{
  return 0xD000000000000017;
}

uint64_t protocol witness for Decodable.init(from:) in conformance EmergencyCountdownModel@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return EmergencyCountdownModel.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance EmergencyCountdownModel(_QWORD *a1)
{
  return EmergencyCountdownModel.encode(to:)(a1);
}

BOOL EmergencyCountdownUpdateAction.init(rawValue:)(Swift::String string)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of EmergencyCountdownUpdateAction.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  return v3 != 0;
}

uint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance EmergencyCountdownUpdateAction@<X0>(Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  Swift::Int v3;
  uint64_t result;

  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of protocol witness for RawRepresentable.init(rawValue:) in conformance EmergencyCountdownUpdateAction, *a1);
  result = swift_bridgeObjectRelease();
  *a2 = v3 != 0;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance EmergencyCountdownUpdateAction@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = specialized EmergencyCountdownUpdateAction.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t protocol witness for Decodable.init(from:) in conformance EmergencyCountdownUpdateAction()
{
  lazy protocol witness table accessor for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction();
  return RawRepresentable<>.init(from:)();
}

uint64_t protocol witness for Encodable.encode(to:) in conformance EmergencyCountdownUpdateAction()
{
  lazy protocol witness table accessor for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction();
  return RawRepresentable<>.encode(to:)();
}

uint64_t protocol witness for UpdateResponseCommand.init(_:) in conformance EmergencyCountdownUpdateAction()
{
  lazy protocol witness table accessor for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction();
  lazy protocol witness table accessor for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction();
  return UpdateResponseCommand<>.init(_:)();
}

uint64_t protocol witness for UpdateResponseCommand.serializeData() in conformance EmergencyCountdownUpdateAction()
{
  lazy protocol witness table accessor for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction();
  lazy protocol witness table accessor for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction();
  return UpdateResponseCommand<>.serializeData()();
}

uint64_t specialized EmergencyCountdownModel.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6C74695468736173 && a2 == 0xE900000000000065;
  if (v3 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000243B37AE0
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C6C65636E6163 && a2 == 0xED00007478655464
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x747475426C6C6163 && a2 == 0xEE00747865546E6FLL
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4C676E696C6C6163 && a2 == 0xEC0000006C656261
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000243B37B00
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 7565171 && a2 == 0xE300000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x676F6C616964 && a2 == 0xE600000000000000
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000243B37B20
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x457472616D537369 && a2 == 0xEE0064656C62616ELL
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x697463416C6C6163 && a2 == 0xEA00000000006E6FLL
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x63416C65636E6163 && a2 == 0xEC0000006E6F6974
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x65736E6F70736572 && a2 == 0xEE00644977656956)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 12;
    else
      return 13;
  }
}

uint64_t specialized EmergencyCountdownUpdateAction.rawValue.getter()
{
  return 0x69546C65636E6163;
}

uint64_t instantiation function for generic protocol witness table for EmergencyCountdownModel(uint64_t a1)
{
  uint64_t result;

  result = lazy protocol witness table accessor for type EmergencyCountdownModel and conformance EmergencyCountdownModel(&lazy protocol witness table cache variable for type EmergencyCountdownModel and conformance EmergencyCountdownModel, (uint64_t)&protocol conformance descriptor for EmergencyCountdownModel);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t base witness table accessor for Decodable in EmergencyCountdownModel()
{
  return lazy protocol witness table accessor for type EmergencyCountdownModel and conformance EmergencyCountdownModel(&lazy protocol witness table cache variable for type EmergencyCountdownModel and conformance EmergencyCountdownModel, (uint64_t)&protocol conformance descriptor for EmergencyCountdownModel);
}

uint64_t base witness table accessor for Encodable in EmergencyCountdownModel()
{
  return lazy protocol witness table accessor for type EmergencyCountdownModel and conformance EmergencyCountdownModel(&lazy protocol witness table cache variable for type EmergencyCountdownModel and conformance EmergencyCountdownModel, (uint64_t)&protocol conformance descriptor for EmergencyCountdownModel);
}

uint64_t lazy protocol witness table accessor for type EmergencyCountdownModel and conformance EmergencyCountdownModel(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for EmergencyCountdownModel();
    result = MEMORY[0x249501140](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_243B156DC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  result = Loggable.wrappedValue.getter();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_243B1576C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
  result = CodableAceObject.wrappedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_243B157BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  result = CodableAceObject.wrappedValue.getter();
  *a1 = result;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for EmergencyCountdownModel(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + a3[5]), (uint64_t *)((char *)a2 + a3[5]), v7);
    v8((uint64_t *)((char *)a1 + a3[6]), (uint64_t *)((char *)a2 + a3[6]), v7);
    v8((uint64_t *)((char *)a1 + a3[7]), (uint64_t *)((char *)a2 + a3[7]), v7);
    v8((uint64_t *)((char *)a1 + a3[8]), (uint64_t *)((char *)a2 + a3[8]), v7);
    v8((uint64_t *)((char *)a1 + a3[9]), (uint64_t *)((char *)a2 + a3[9]), v7);
    v8((uint64_t *)((char *)a1 + a3[10]), (uint64_t *)((char *)a2 + a3[10]), v7);
    v8((uint64_t *)((char *)a1 + a3[11]), (uint64_t *)((char *)a2 + a3[11]), v7);
    v8((uint64_t *)((char *)a1 + a3[12]), (uint64_t *)((char *)a2 + a3[12]), v7);
    v9 = a3[13];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    v13 = a3[14];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    v17 = a3[15];
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    v21 = a3[16];
    v22 = (uint64_t *)((char *)a1 + v21);
    v23 = (uint64_t *)((char *)a2 + v21);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for EmergencyCountdownModel(uint64_t a1, int *a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + a2[5], v4);
  v5(a1 + a2[6], v4);
  v5(a1 + a2[7], v4);
  v5(a1 + a2[8], v4);
  v5(a1 + a2[9], v4);
  v5(a1 + a2[10], v4);
  v5(a1 + a2[11], v4);
  v5(a1 + a2[12], v4);
  v6 = a1 + a2[13];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = a1 + a2[14];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = a1 + a2[15];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EmergencyCountdownModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v7(a1 + a3[8], a2 + a3[8], v6);
  v7(a1 + a3[9], a2 + a3[9], v6);
  v7(a1 + a3[10], a2 + a3[10], v6);
  v7(a1 + a3[11], a2 + a3[11], v6);
  v7(a1 + a3[12], a2 + a3[12], v6);
  v8 = a3[13];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  v12 = a3[14];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  v16 = a3[15];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  v20 = a3[16];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EmergencyCountdownModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v7(a1 + a3[8], a2 + a3[8], v6);
  v7(a1 + a3[9], a2 + a3[9], v6);
  v7(a1 + a3[10], a2 + a3[10], v6);
  v7(a1 + a3[11], a2 + a3[11], v6);
  v7(a1 + a3[12], a2 + a3[12], v6);
  v8 = a3[13];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  v12 = a3[14];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  v16 = a3[15];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 24))(v17, v18, v19);
  v20 = a3[16];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  *v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for EmergencyCountdownModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v7(a1 + a3[8], a2 + a3[8], v6);
  v7(a1 + a3[9], a2 + a3[9], v6);
  v7(a1 + a3[10], a2 + a3[10], v6);
  v7(a1 + a3[11], a2 + a3[11], v6);
  v7(a1 + a3[12], a2 + a3[12], v6);
  v8 = a3[13];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = a3[14];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  v16 = a3[15];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  *(_OWORD *)(a1 + a3[16]) = *(_OWORD *)(a2 + a3[16]);
  return a1;
}

uint64_t assignWithTake for EmergencyCountdownModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v7(a1 + a3[8], a2 + a3[8], v6);
  v7(a1 + a3[9], a2 + a3[9], v6);
  v7(a1 + a3[10], a2 + a3[10], v6);
  v7(a1 + a3[11], a2 + a3[11], v6);
  v7(a1 + a3[12], a2 + a3[12], v6);
  v8 = a3[13];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = a3[14];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = a3[15];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, v18, v19);
  v20 = a3[16];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (uint64_t *)(a2 + v20);
  v24 = *v22;
  v23 = v22[1];
  *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EmergencyCountdownModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_243B161E8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v17;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[13];
LABEL_9:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[14];
    goto LABEL_9;
  }
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v12 = *(_QWORD *)(v15 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v15;
    v13 = a3[15];
    goto LABEL_9;
  }
  v17 = *(_QWORD *)(a1 + a3[16] + 8);
  if (v17 >= 0xFFFFFFFF)
    LODWORD(v17) = -1;
  return (v17 + 1);
}

uint64_t storeEnumTagSinglePayload for EmergencyCountdownModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_243B162F8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v15 = a4[13];
LABEL_9:
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
  v14 = *(_QWORD *)(v16 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v16;
    v15 = a4[14];
    goto LABEL_9;
  }
  result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v15 = a4[15];
    goto LABEL_9;
  }
  *(_QWORD *)(a1 + a4[16] + 8) = (a2 - 1);
  return result;
}

void type metadata completion function for EmergencyCountdownModel()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  _s10SnippetKit8LoggableVySSGMaTm_0(319, (unint64_t *)&lazy cache variable for type metadata for Loggable<String>);
  if (v0 <= 0x3F)
  {
    _s10SnippetKit8LoggableVySSGMaTm_0(319, &lazy cache variable for type metadata for Loggable<Bool>);
    if (v1 <= 0x3F)
    {
      type metadata accessor for CodableAceObject<SABaseCommand>(319, &lazy cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>, &lazy cache variable for type metadata for SAIntentGroupLaunchAppWithIntent);
      if (v2 <= 0x3F)
      {
        type metadata accessor for CodableAceObject<SABaseCommand>(319, (unint64_t *)&lazy cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>, (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupRunSiriKitExecutor);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t storeEnumTagSinglePayload for EmergencyCountdownUpdateAction(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_243B1655C + 4 * byte_243B3578D[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_243B1657C + 4 * byte_243B35792[v4]))();
}

_BYTE *sub_243B1655C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_243B1657C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_243B16584(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_243B1658C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_243B16594(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_243B1659C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for EmergencyCountdownUpdateAction()
{
  return &type metadata for EmergencyCountdownUpdateAction;
}

uint64_t getEnumTagSinglePayload for EmergencyCountdownModel.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF4)
    goto LABEL_17;
  if (a2 + 12 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 12) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 12;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 12;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 12;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xD;
  v8 = v6 - 13;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for EmergencyCountdownModel.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_243B16694 + 4 * byte_243B3579C[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_243B166C8 + 4 * byte_243B35797[v4]))();
}

uint64_t sub_243B166C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_243B166D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x243B166D8);
  return result;
}

uint64_t sub_243B166E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x243B166ECLL);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_243B166F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_243B166F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for EmergencyCountdownModel.CodingKeys()
{
  return &unk_25144BA08;
}

uint64_t DisambiguationItemWithDirectInvocationModel.label.getter()
{
  uint64_t v1;

  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t type metadata accessor for DisambiguationItemWithDirectInvocationModel(uint64_t a1)
{
  return type metadata accessor for EmergencyCountdownViewModel(a1, (uint64_t *)&type metadata singleton initialization cache for DisambiguationItemWithDirectInvocationModel);
}

uint64_t DisambiguationItemWithDirectInvocationModel.rskeCommand.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  Loggable.wrappedValue.getter();
  v4 = CodableAceObject.wrappedValue.getter();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t DisambiguationItemWithDirectInvocationModel.init(id:personHandle:spokenHandle:shouldPrintHandleBlue:label:rskeCommand:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X8>, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  id v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  MEMORY[0x24BDAC7A8](v16);
  v6 = type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  v7 = a3 + *(int *)(v6 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
  Loggable.init(wrappedValue:)();
  v8 = a3 + *(int *)(v6 + 32);
  Loggable.init(wrappedValue:)();
  v9 = type metadata accessor for UUID();
  v14 = *(_QWORD *)(v9 - 8);
  v18 = a1;
  v15 = v9;
  (*(void (**)(uint64_t, uint64_t))(v14 + 16))(a3, a1);
  swift_bridgeObjectRetain();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
  v11(v7, v10);
  Loggable.init(wrappedValue:)();
  Loggable.init(wrappedValue:)();
  v11(v8, v10);
  Loggable.init(wrappedValue:)();
  type metadata accessor for SAIntentGroupRunSiriKitExecutor();
  v12 = a4;
  CodableAceObject.init(wrappedValue:)();
  Loggable.init(wrappedValue:)();
  if (a2)
    swift_bridgeObjectRelease();
  Loggable.init(wrappedValue:)();

  return (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v18, v15);
}

uint64_t ForeignEmergencyCallDisambiguationModel.init(emergencyServicesItem:foreignEmergencyNumberItem:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  _QWORD *v7;

  v6 = type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
  v7 = (_QWORD *)(a3 + *(int *)(v6 + 24));
  *v7 = 0xD00000000000001ELL;
  v7[1] = 0x8000000243B37280;
  outlined init with take of DisambiguationItemWithDirectInvocationModel?(a1, a3);
  return outlined init with take of DisambiguationItemWithDirectInvocationModel?(a2, a3 + *(int *)(v6 + 20));
}

uint64_t DisambiguationItemWithDirectInvocationModel.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for UUID();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t DisambiguationItemWithDirectInvocationModel.personHandle.getter()
{
  uint64_t v1;

  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  Loggable.wrappedValue.getter();
  return v1;
}

double key path getter for DisambiguationItemWithDirectInvocationModel.personHandle : DisambiguationItemWithDirectInvocationModel@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  Loggable.wrappedValue.getter();
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t key path setter for DisambiguationItemWithDirectInvocationModel.personHandle : DisambiguationItemWithDirectInvocationModel()
{
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  return Loggable.wrappedValue.setter();
}

uint64_t DisambiguationItemWithDirectInvocationModel.personHandle.setter()
{
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  return Loggable.wrappedValue.setter();
}

uint64_t (*DisambiguationItemWithDirectInvocationModel.personHandle.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t DisambiguationItemWithDirectInvocationModel.spokenHandle.getter()
{
  uint64_t v1;

  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t key path getter for DisambiguationItemWithDirectInvocationModel.spokenHandle : DisambiguationItemWithDirectInvocationModel@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  result = Loggable.wrappedValue.getter();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t key path setter for DisambiguationItemWithDirectInvocationModel.spokenHandle : DisambiguationItemWithDirectInvocationModel()
{
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  return Loggable.wrappedValue.setter();
}

uint64_t DisambiguationItemWithDirectInvocationModel.spokenHandle.setter()
{
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  return Loggable.wrappedValue.setter();
}

uint64_t (*DisambiguationItemWithDirectInvocationModel.spokenHandle.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t property wrapper backing initializer of DisambiguationItemWithDirectInvocationModel.shouldPrintHandleBlue()
{
  return Loggable.init(wrappedValue:)();
}

uint64_t DisambiguationItemWithDirectInvocationModel.shouldPrintHandleBlue.getter()
{
  unsigned __int8 v1;

  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t key path getter for DisambiguationItemWithDirectInvocationModel.shouldPrintHandleBlue : DisambiguationItemWithDirectInvocationModel@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  result = Loggable.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t key path setter for DisambiguationItemWithDirectInvocationModel.shouldPrintHandleBlue : DisambiguationItemWithDirectInvocationModel()
{
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  return Loggable.wrappedValue.setter();
}

uint64_t DisambiguationItemWithDirectInvocationModel.shouldPrintHandleBlue.setter()
{
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  return Loggable.wrappedValue.setter();
}

uint64_t (*DisambiguationItemWithDirectInvocationModel.shouldPrintHandleBlue.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t property wrapper backing initializer of DisambiguationItemWithDirectInvocationModel.personHandle()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
  return Loggable.init(wrappedValue:)();
}

double key path getter for DisambiguationItemWithDirectInvocationModel.label : DisambiguationItemWithDirectInvocationModel@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  Loggable.wrappedValue.getter();
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t key path setter for DisambiguationItemWithDirectInvocationModel.label : DisambiguationItemWithDirectInvocationModel()
{
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  return Loggable.wrappedValue.setter();
}

uint64_t DisambiguationItemWithDirectInvocationModel.label.setter()
{
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  return Loggable.wrappedValue.setter();
}

uint64_t (*DisambiguationItemWithDirectInvocationModel.label.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

void property wrapper backing initializer of DisambiguationItemWithDirectInvocationModel.rskeCommand(void *a1)
{
  uint64_t v2;
  id v3;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  MEMORY[0x24BDAC7A8](v2);
  type metadata accessor for SAIntentGroupRunSiriKitExecutor();
  v3 = a1;
  CodableAceObject.init(wrappedValue:)();
  Loggable.init(wrappedValue:)();

}

uint64_t type metadata accessor for ForeignEmergencyCallDisambiguationModel(uint64_t a1)
{
  return type metadata accessor for EmergencyCountdownViewModel(a1, (uint64_t *)&type metadata singleton initialization cache for ForeignEmergencyCallDisambiguationModel);
}

uint64_t outlined init with take of DisambiguationItemWithDirectInvocationModel?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t key path getter for DisambiguationItemWithDirectInvocationModel.rskeCommand : DisambiguationItemWithDirectInvocationModel@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  Loggable.wrappedValue.getter();
  v6 = CodableAceObject.wrappedValue.getter();
  result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *a1 = v6;
  return result;
}

uint64_t key path setter for DisambiguationItemWithDirectInvocationModel.rskeCommand : DisambiguationItemWithDirectInvocationModel(void **a1)
{
  void *v1;
  id v2;
  uint64_t (*v3)(uint64_t *, _QWORD);
  uint64_t v5;

  v1 = *a1;
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  v3 = (uint64_t (*)(uint64_t *, _QWORD))Loggable.wrappedValue.modify();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  CodableAceObject.wrappedValue.setter();
  return v3(&v5, 0);
}

void DisambiguationItemWithDirectInvocationModel.rskeCommand.setter(void *a1)
{
  id v2;
  void (*v3)(uint64_t *, _QWORD);
  uint64_t v4;

  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  v2 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  v3 = (void (*)(uint64_t *, _QWORD))Loggable.wrappedValue.modify();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  CodableAceObject.wrappedValue.setter();
  v3(&v4, 0);

}

void (*DisambiguationItemWithDirectInvocationModel.rskeCommand.modify(_QWORD *a1))(uint64_t a1)
{
  _QWORD *v2;

  v2 = malloc(0x50uLL);
  *a1 = v2;
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  v2[8] = Loggable.wrappedValue.modify();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v2[9] = CodableAceObject.wrappedValue.modify();
  return DisambiguationItemWithDirectInvocationModel.rskeCommand.modify;
}

void DisambiguationItemWithDirectInvocationModel.rskeCommand.modify(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 64);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 72))(*(_QWORD *)a1 + 32, 0);
  v2(v1, 0);
  free(v1);
}

uint64_t DisambiguationItemWithDirectInvocationModel.hash(into:)()
{
  type metadata accessor for UUID();
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  return dispatch thunk of Hashable.hash(into:)();
}

uint64_t DisambiguationItemWithDirectInvocationModel.CodingKeys.stringValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_243B17784 + 4 * byte_243B35AF0[a1]))(0xD000000000000015, 0x8000000243B37B40);
}

uint64_t sub_243B17784()
{
  return 25705;
}

uint64_t sub_243B17790()
{
  return 0x61486E6F73726570;
}

uint64_t sub_243B177C0()
{
  return 0x6C6562616CLL;
}

uint64_t sub_243B177D4()
{
  return 0x6D6D6F43656B7372;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance DisambiguationItemWithDirectInvocationModel.CodingKeys()
{
  unsigned __int8 *v0;

  return DisambiguationItemWithDirectInvocationModel.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance DisambiguationItemWithDirectInvocationModel.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = specialized DisambiguationItemWithDirectInvocationModel.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance DisambiguationItemWithDirectInvocationModel.CodingKeys()
{
  lazy protocol witness table accessor for type DisambiguationItemWithDirectInvocationModel.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.CodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance DisambiguationItemWithDirectInvocationModel.CodingKeys()
{
  lazy protocol witness table accessor for type DisambiguationItemWithDirectInvocationModel.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.CodingKeys();
  return CodingKey.debugDescription.getter();
}

uint64_t DisambiguationItemWithDirectInvocationModel.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<DisambiguationItemWithDirectInvocationModel.CodingKeys>);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type DisambiguationItemWithDirectInvocationModel.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v15 = 0;
  type metadata accessor for UUID();
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v1)
  {
    type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
    v14 = 1;
    v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
    lazy protocol witness table accessor for type Loggable<String?> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<String?> and conformance <A> Loggable<A>, MEMORY[0x24BEAD370]);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v9[1] = v7;
    v13 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    lazy protocol witness table accessor for type Loggable<String> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<String> and conformance <A> Loggable<A>, MEMORY[0x24BEAD370]);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v12 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    lazy protocol witness table accessor for type Loggable<Bool> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<Bool> and conformance <A> Loggable<A>, MEMORY[0x24BEAD370]);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v11 = 4;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v10 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
    lazy protocol witness table accessor for type Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>> and conformance <A> Loggable<A>, MEMORY[0x24BEAD370]);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t lazy protocol witness table accessor for type DisambiguationItemWithDirectInvocationModel.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.CodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for DisambiguationItemWithDirectInvocationModel.CodingKeys, &unk_25144BD58);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for DisambiguationItemWithDirectInvocationModel.CodingKeys, &unk_25144BD58);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for DisambiguationItemWithDirectInvocationModel.CodingKeys, &unk_25144BD58);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for DisambiguationItemWithDirectInvocationModel.CodingKeys, &unk_25144BD58);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.CodingKeys);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type String? and conformance <A> A?(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for String?);
    v8 = a2;
    result = MEMORY[0x249501140](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>> and conformance <A> Loggable<A>(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  _QWORD v6[2];

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
    v6[0] = lazy protocol witness table accessor for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>(&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>, MEMORY[0x24BEABA90]);
    v6[1] = lazy protocol witness table accessor for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>(&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>, MEMORY[0x24BEABA88]);
    result = MEMORY[0x249501140](a2, v5, v6);
    atomic_store(result, a1);
  }
  return result;
}

Swift::Int DisambiguationItemWithDirectInvocationModel.hashValue.getter()
{
  Hasher.init(_seed:)();
  type metadata accessor for UUID();
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  dispatch thunk of Hashable.hash(into:)();
  return Hasher._finalize()();
}

uint64_t DisambiguationItemWithDirectInvocationModel.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  char *v27;
  void (*v28)(char *, char *, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  int *v38;
  char *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;

  v42 = a2;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  v41 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v43 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  v50 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v46 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v48 = *(_QWORD *)(v5 - 8);
  v49 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v47 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  v59 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v45 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v53 = (char *)&v38 - v10;
  v57 = type metadata accessor for UUID();
  v51 = *(_QWORD *)(v57 - 8);
  MEMORY[0x24BDAC7A8](v57);
  v54 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<DisambiguationItemWithDirectInvocationModel.CodingKeys>);
  v52 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = &v17[*(int *)(v15 + 20)];
  v61 = 0;
  v62 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
  Loggable.init(wrappedValue:)();
  v19 = &v17[*(int *)(v14 + 32)];
  v61 = 0;
  v62 = 0;
  v63 = v19;
  Loggable.init(wrappedValue:)();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type DisambiguationItemWithDirectInvocationModel.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.CodingKeys();
  v58 = v13;
  v20 = v60;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  v21 = v59;
  if (v20)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    v26 = *(void (**)(char *, uint64_t))(v21 + 8);
    v26(v18, v7);
    return ((uint64_t (*)(char *, uint64_t))v26)(v63, v7);
  }
  else
  {
    v22 = v53;
    v60 = v18;
    v38 = (int *)v14;
    v39 = v17;
    v23 = v56;
    v40 = a1;
    LOBYTE(v61) = 0;
    lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    v24 = v54;
    v25 = v57;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v39, v24, v25);
    LOBYTE(v61) = 1;
    lazy protocol witness table accessor for type Loggable<String?> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<String?> and conformance <A> Loggable<A>, MEMORY[0x24BEAD380]);
    v27 = v22;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v28 = *(void (**)(char *, char *, uint64_t))(v21 + 40);
    v28(v60, v27, v7);
    LOBYTE(v61) = 2;
    lazy protocol witness table accessor for type Loggable<String> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<String> and conformance <A> Loggable<A>, MEMORY[0x24BEAD380]);
    v29 = v47;
    v30 = v49;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v31 = v23;
    v54 = (char *)v28;
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(&v39[v38[6]], v29, v30);
    LOBYTE(v61) = 3;
    lazy protocol witness table accessor for type Loggable<Bool> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<Bool> and conformance <A> Loggable<A>, MEMORY[0x24BEAD380]);
    v32 = v46;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, char *, uint64_t))(v50 + 32))(&v39[v38[7]], v32, v31);
    LOBYTE(v61) = 4;
    v33 = v45;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    ((void (*)(char *, char *, uint64_t))v54)(v63, v33, v7);
    LOBYTE(v61) = 5;
    lazy protocol witness table accessor for type Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>> and conformance <A> Loggable<A>, MEMORY[0x24BEAD380]);
    v34 = v43;
    v35 = v44;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v58, v55);
    v36 = (uint64_t)v39;
    (*(void (**)(char *, char *, uint64_t))(v41 + 32))(&v39[v38[9]], v34, v35);
    outlined init with copy of SearchCallHistoryBinaryButtonModel(v36, v42, type metadata accessor for DisambiguationItemWithDirectInvocationModel);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
    return outlined destroy of SingleResultCallHistoryModel(v36, type metadata accessor for DisambiguationItemWithDirectInvocationModel);
  }
}

uint64_t protocol witness for Identifiable.id.getter in conformance DisambiguationItemWithDirectInvocationModel@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for UUID();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance DisambiguationItemWithDirectInvocationModel()
{
  Hasher.init(_seed:)();
  type metadata accessor for UUID();
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  dispatch thunk of Hashable.hash(into:)();
  return Hasher._finalize()();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance DisambiguationItemWithDirectInvocationModel()
{
  type metadata accessor for UUID();
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  return dispatch thunk of Hashable.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance DisambiguationItemWithDirectInvocationModel()
{
  Hasher.init(_seed:)();
  type metadata accessor for UUID();
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  dispatch thunk of Hashable.hash(into:)();
  return Hasher._finalize()();
}

uint64_t lazy protocol witness table accessor for type Loggable<String?> and conformance <A> Loggable<A>(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  _QWORD v6[2];

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Loggable<String?>);
    v6[0] = lazy protocol witness table accessor for type String? and conformance <A> A?(&lazy protocol witness table cache variable for type String? and conformance <A> A?, MEMORY[0x24BEE0D38], MEMORY[0x24BEE4AC0]);
    v6[1] = lazy protocol witness table accessor for type String? and conformance <A> A?(&lazy protocol witness table cache variable for type String? and conformance <A> A?, MEMORY[0x24BEE0D08], MEMORY[0x24BEE4AA8]);
    result = MEMORY[0x249501140](a2, v5, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t protocol witness for Decodable.init(from:) in conformance DisambiguationItemWithDirectInvocationModel@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DisambiguationItemWithDirectInvocationModel.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance DisambiguationItemWithDirectInvocationModel(_QWORD *a1)
{
  return DisambiguationItemWithDirectInvocationModel.encode(to:)(a1);
}

uint64_t ForeignEmergencyCallDisambiguationModel.emergencyServicesItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return outlined init with copy of DisambiguationItemWithDirectInvocationModel?(v1, a1);
}

uint64_t outlined init with copy of DisambiguationItemWithDirectInvocationModel?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t ForeignEmergencyCallDisambiguationModel.foreignEmergencyNumberItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for ForeignEmergencyCallDisambiguationModel(0) + 20);
  return outlined init with copy of DisambiguationItemWithDirectInvocationModel?(v3, a1);
}

uint64_t ForeignEmergencyCallDisambiguationModel.responseViewId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ForeignEmergencyCallDisambiguationModel(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ForeignEmergencyCallDisambiguationModel.responseViewId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for ForeignEmergencyCallDisambiguationModel(0) + 24));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ForeignEmergencyCallDisambiguationModel.responseViewId.modify())()
{
  type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t ForeignEmergencyCallDisambiguationModel.CodingKeys.stringValue.getter(char a1)
{
  uint64_t result;

  result = 0xD000000000000015;
  if (a1)
  {
    if (a1 == 1)
      return 0xD00000000000001ALL;
    else
      return 0x65736E6F70736572;
  }
  return result;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance ForeignEmergencyCallDisambiguationModel.CodingKeys()
{
  char *v0;

  return ForeignEmergencyCallDisambiguationModel.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance ForeignEmergencyCallDisambiguationModel.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = specialized ForeignEmergencyCallDisambiguationModel.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

void protocol witness for CodingKey.init(intValue:) in conformance ForeignEmergencyCallDisambiguationModel.CodingKeys(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance ForeignEmergencyCallDisambiguationModel.CodingKeys()
{
  lazy protocol witness table accessor for type ForeignEmergencyCallDisambiguationModel.CodingKeys and conformance ForeignEmergencyCallDisambiguationModel.CodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ForeignEmergencyCallDisambiguationModel.CodingKeys()
{
  lazy protocol witness table accessor for type ForeignEmergencyCallDisambiguationModel.CodingKeys and conformance ForeignEmergencyCallDisambiguationModel.CodingKeys();
  return CodingKey.debugDescription.getter();
}

uint64_t ForeignEmergencyCallDisambiguationModel.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  char v9;
  char v10;
  char v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<ForeignEmergencyCallDisambiguationModel.CodingKeys>);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type ForeignEmergencyCallDisambiguationModel.CodingKeys and conformance ForeignEmergencyCallDisambiguationModel.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v11 = 0;
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel and conformance DisambiguationItemWithDirectInvocationModel, type metadata accessor for DisambiguationItemWithDirectInvocationModel, (uint64_t)&protocol conformance descriptor for DisambiguationItemWithDirectInvocationModel);
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  if (!v1)
  {
    type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
    v10 = 1;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    v9 = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t lazy protocol witness table accessor for type ForeignEmergencyCallDisambiguationModel.CodingKeys and conformance ForeignEmergencyCallDisambiguationModel.CodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel.CodingKeys and conformance ForeignEmergencyCallDisambiguationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel.CodingKeys and conformance ForeignEmergencyCallDisambiguationModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for ForeignEmergencyCallDisambiguationModel.CodingKeys, &unk_25144BCC8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel.CodingKeys and conformance ForeignEmergencyCallDisambiguationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel.CodingKeys and conformance ForeignEmergencyCallDisambiguationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel.CodingKeys and conformance ForeignEmergencyCallDisambiguationModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for ForeignEmergencyCallDisambiguationModel.CodingKeys, &unk_25144BCC8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel.CodingKeys and conformance ForeignEmergencyCallDisambiguationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel.CodingKeys and conformance ForeignEmergencyCallDisambiguationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel.CodingKeys and conformance ForeignEmergencyCallDisambiguationModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for ForeignEmergencyCallDisambiguationModel.CodingKeys, &unk_25144BCC8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel.CodingKeys and conformance ForeignEmergencyCallDisambiguationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel.CodingKeys and conformance ForeignEmergencyCallDisambiguationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel.CodingKeys and conformance ForeignEmergencyCallDisambiguationModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for ForeignEmergencyCallDisambiguationModel.CodingKeys, &unk_25144BCC8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel.CodingKeys and conformance ForeignEmergencyCallDisambiguationModel.CodingKeys);
  }
  return result;
}

uint64_t ForeignEmergencyCallDisambiguationModel.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  _QWORD *v32;
  char *v33;
  char v34;
  char v35;
  char v36;

  v29 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v30 = (char *)&v26 - v8;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<ForeignEmergencyCallDisambiguationModel.CodingKeys>);
  v9 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = &v15[*(int *)(v13 + 24)];
  *(_QWORD *)v16 = 0xD00000000000001ELL;
  *((_QWORD *)v16 + 1) = 0x8000000243B37280;
  v32 = a1;
  v33 = v16;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type ForeignEmergencyCallDisambiguationModel.CodingKeys and conformance ForeignEmergencyCallDisambiguationModel.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v27 = v12;
    v28 = v9;
    type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
    v36 = 0;
    lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel and conformance DisambiguationItemWithDirectInvocationModel, type metadata accessor for DisambiguationItemWithDirectInvocationModel, (uint64_t)&protocol conformance descriptor for DisambiguationItemWithDirectInvocationModel);
    v17 = (uint64_t)v30;
    v18 = v31;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    v30 = v15;
    outlined init with take of DisambiguationItemWithDirectInvocationModel?(v17, (uint64_t)v15);
    v35 = 1;
    v19 = (uint64_t)v7;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    v20 = (uint64_t)v30;
    outlined init with take of DisambiguationItemWithDirectInvocationModel?(v19, (uint64_t)&v30[*(int *)(v27 + 20)]);
    v34 = 2;
    v21 = KeyedDecodingContainer.decode(_:forKey:)();
    v23 = v22;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v18);
    v24 = (uint64_t *)v33;
    swift_bridgeObjectRelease();
    *v24 = v21;
    v24[1] = v23;
    outlined init with copy of SearchCallHistoryBinaryButtonModel(v20, v29, type metadata accessor for ForeignEmergencyCallDisambiguationModel);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
    return outlined destroy of SingleResultCallHistoryModel(v20, type metadata accessor for ForeignEmergencyCallDisambiguationModel);
  }
}

uint64_t outlined destroy of DisambiguationItemWithDirectInvocationModel?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t protocol witness for PhoneSnippetModel.responseViewId.getter in conformance ForeignEmergencyCallDisambiguationModel(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 24));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t protocol witness for Decodable.init(from:) in conformance ForeignEmergencyCallDisambiguationModel@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ForeignEmergencyCallDisambiguationModel.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance ForeignEmergencyCallDisambiguationModel(_QWORD *a1)
{
  return ForeignEmergencyCallDisambiguationModel.encode(to:)(a1);
}

uint64_t LocalEmergencyCallDisambiguationModel.appBundleId.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LocalEmergencyCallDisambiguationModel.items.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t LocalEmergencyCallDisambiguationModel.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for LocalEmergencyCallDisambiguationModel(0) + 24);
  v4 = type metadata accessor for UUID();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for LocalEmergencyCallDisambiguationModel(uint64_t a1)
{
  return type metadata accessor for EmergencyCountdownViewModel(a1, (uint64_t *)&type metadata singleton initialization cache for LocalEmergencyCallDisambiguationModel);
}

uint64_t property wrapper backing initializer of LocalEmergencyCallDisambiguationModel.prompt()
{
  return Loggable.init(wrappedValue:)();
}

uint64_t LocalEmergencyCallDisambiguationModel.prompt.getter()
{
  uint64_t v1;

  type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t key path getter for LocalEmergencyCallDisambiguationModel.prompt : LocalEmergencyCallDisambiguationModel@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  result = Loggable.wrappedValue.getter();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t key path setter for LocalEmergencyCallDisambiguationModel.prompt : LocalEmergencyCallDisambiguationModel()
{
  type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  return Loggable.wrappedValue.setter();
}

uint64_t LocalEmergencyCallDisambiguationModel.prompt.setter()
{
  type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  return Loggable.wrappedValue.setter();
}

uint64_t (*LocalEmergencyCallDisambiguationModel.prompt.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t LocalEmergencyCallDisambiguationModel.isSmartEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for LocalEmergencyCallDisambiguationModel(0) + 32));
}

uint64_t LocalEmergencyCallDisambiguationModel.responseViewId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for LocalEmergencyCallDisambiguationModel(0) + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LocalEmergencyCallDisambiguationModel.responseViewId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for LocalEmergencyCallDisambiguationModel(0) + 36));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*LocalEmergencyCallDisambiguationModel.responseViewId.modify())()
{
  type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t LocalEmergencyCallDisambiguationModel.init(appBundleId:prompt:items:isSmartEnabled:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, char a4@<W5>, _QWORD *a5@<X8>)
{
  uint64_t v10;
  _QWORD *v11;
  uint64_t result;

  v10 = type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
  v11 = (_QWORD *)((char *)a5 + *(int *)(v10 + 36));
  *v11 = 0xD00000000000001CLL;
  v11[1] = 0x8000000243B372A0;
  *a5 = a1;
  a5[1] = a2;
  a5[2] = a3;
  UUID.init()();
  result = Loggable.init(wrappedValue:)();
  *((_BYTE *)a5 + *(int *)(v10 + 32)) = a4;
  return result;
}

uint64_t LocalEmergencyCallDisambiguationModel.CodingKeys.stringValue.getter(char a1)
{
  return *(_QWORD *)&aAppbundlitems[8 * a1];
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance LocalEmergencyCallDisambiguationModel.CodingKeys()
{
  char *v0;

  return LocalEmergencyCallDisambiguationModel.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance LocalEmergencyCallDisambiguationModel.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = specialized LocalEmergencyCallDisambiguationModel.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance LocalEmergencyCallDisambiguationModel.CodingKeys()
{
  lazy protocol witness table accessor for type LocalEmergencyCallDisambiguationModel.CodingKeys and conformance LocalEmergencyCallDisambiguationModel.CodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance LocalEmergencyCallDisambiguationModel.CodingKeys()
{
  lazy protocol witness table accessor for type LocalEmergencyCallDisambiguationModel.CodingKeys and conformance LocalEmergencyCallDisambiguationModel.CodingKeys();
  return CodingKey.debugDescription.getter();
}

uint64_t LocalEmergencyCallDisambiguationModel.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  uint64_t v11;
  char v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<LocalEmergencyCallDisambiguationModel.CodingKeys>);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type LocalEmergencyCallDisambiguationModel.CodingKeys and conformance LocalEmergencyCallDisambiguationModel.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v12 = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v2)
  {
    v11 = *(_QWORD *)(v3 + 16);
    v10[15] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DisambiguationItemWithDirectInvocationModel]);
    lazy protocol witness table accessor for type [DisambiguationItemWithDirectInvocationModel] and conformance <A> [A](&lazy protocol witness table cache variable for type [DisambiguationItemWithDirectInvocationModel] and conformance <A> [A], &lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel and conformance DisambiguationItemWithDirectInvocationModel, (uint64_t)&protocol conformance descriptor for DisambiguationItemWithDirectInvocationModel, MEMORY[0x24BEE12A0]);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
    v10[14] = 2;
    type metadata accessor for UUID();
    lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v10[13] = 3;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    lazy protocol witness table accessor for type Loggable<String> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<String> and conformance <A> Loggable<A>, MEMORY[0x24BEAD370]);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v10[12] = 4;
    KeyedEncodingContainer.encode(_:forKey:)();
    v10[11] = 5;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t lazy protocol witness table accessor for type LocalEmergencyCallDisambiguationModel.CodingKeys and conformance LocalEmergencyCallDisambiguationModel.CodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationModel.CodingKeys and conformance LocalEmergencyCallDisambiguationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationModel.CodingKeys and conformance LocalEmergencyCallDisambiguationModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for LocalEmergencyCallDisambiguationModel.CodingKeys, &unk_25144BC38);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationModel.CodingKeys and conformance LocalEmergencyCallDisambiguationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationModel.CodingKeys and conformance LocalEmergencyCallDisambiguationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationModel.CodingKeys and conformance LocalEmergencyCallDisambiguationModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for LocalEmergencyCallDisambiguationModel.CodingKeys, &unk_25144BC38);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationModel.CodingKeys and conformance LocalEmergencyCallDisambiguationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationModel.CodingKeys and conformance LocalEmergencyCallDisambiguationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationModel.CodingKeys and conformance LocalEmergencyCallDisambiguationModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for LocalEmergencyCallDisambiguationModel.CodingKeys, &unk_25144BC38);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationModel.CodingKeys and conformance LocalEmergencyCallDisambiguationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationModel.CodingKeys and conformance LocalEmergencyCallDisambiguationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationModel.CodingKeys and conformance LocalEmergencyCallDisambiguationModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for LocalEmergencyCallDisambiguationModel.CodingKeys, &unk_25144BC38);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationModel.CodingKeys and conformance LocalEmergencyCallDisambiguationModel.CodingKeys);
  }
  return result;
}

uint64_t LocalEmergencyCallDisambiguationModel.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  char v43;
  char v44;
  char v45;
  char v46;

  v30 = a2;
  v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v32 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v31 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for UUID();
  v4 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<LocalEmergencyCallDisambiguationModel.CodingKeys>);
  v7 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (uint64_t *)((char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = (uint64_t *)((char *)v13 + *(int *)(v11 + 36));
  *v14 = 0xD00000000000001CLL;
  v14[1] = 0x8000000243B372A0;
  v37 = a1;
  v38 = v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type LocalEmergencyCallDisambiguationModel.CodingKeys and conformance LocalEmergencyCallDisambiguationModel.CodingKeys();
  v35 = v9;
  v15 = v39;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v15)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v16 = v6;
    v17 = v7;
    v39 = v4;
    v18 = v33;
    v19 = v34;
    v46 = 0;
    *v13 = KeyedDecodingContainer.decode(_:forKey:)();
    v13[1] = v20;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DisambiguationItemWithDirectInvocationModel]);
    v45 = 1;
    lazy protocol witness table accessor for type [DisambiguationItemWithDirectInvocationModel] and conformance <A> [A](&lazy protocol witness table cache variable for type [DisambiguationItemWithDirectInvocationModel] and conformance <A> [A], &lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel and conformance DisambiguationItemWithDirectInvocationModel, (uint64_t)&protocol conformance descriptor for DisambiguationItemWithDirectInvocationModel, MEMORY[0x24BEE12D0]);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v13[2] = v40;
    v44 = 2;
    lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v29 = v10;
    (*(void (**)(char *, char *, uint64_t))(v39 + 32))((char *)v13 + *(int *)(v10 + 24), v16, v18);
    v43 = 3;
    lazy protocol witness table accessor for type Loggable<String> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<String> and conformance <A> Loggable<A>, MEMORY[0x24BEAD380]);
    v21 = v31;
    v22 = v19;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v23 = v29;
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))((char *)v13 + *(int *)(v29 + 28), v21, v22);
    v42 = 4;
    *((_BYTE *)v13 + *(int *)(v23 + 32)) = KeyedDecodingContainer.decode(_:forKey:)() & 1;
    v41 = 5;
    v24 = KeyedDecodingContainer.decode(_:forKey:)();
    v26 = v25;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v35, v36);
    v27 = v38;
    swift_bridgeObjectRelease();
    *v27 = v24;
    v27[1] = v26;
    outlined init with copy of SearchCallHistoryBinaryButtonModel((uint64_t)v13, v30, type metadata accessor for LocalEmergencyCallDisambiguationModel);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
    return outlined destroy of SingleResultCallHistoryModel((uint64_t)v13, type metadata accessor for LocalEmergencyCallDisambiguationModel);
  }
}

uint64_t lazy protocol witness table accessor for type [DisambiguationItemWithDirectInvocationModel] and conformance <A> [A](unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [DisambiguationItemWithDirectInvocationModel]);
    v10 = lazy protocol witness table accessor for type Context and conformance Context(a2, type metadata accessor for DisambiguationItemWithDirectInvocationModel, a3);
    result = MEMORY[0x249501140](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t base witness table accessor for Decodable in DisambiguationItemWithDirectInvocationModel()
{
  return lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel and conformance DisambiguationItemWithDirectInvocationModel, type metadata accessor for DisambiguationItemWithDirectInvocationModel, (uint64_t)&protocol conformance descriptor for DisambiguationItemWithDirectInvocationModel);
}

uint64_t base witness table accessor for Encodable in DisambiguationItemWithDirectInvocationModel()
{
  return lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel and conformance DisambiguationItemWithDirectInvocationModel, type metadata accessor for DisambiguationItemWithDirectInvocationModel, (uint64_t)&protocol conformance descriptor for DisambiguationItemWithDirectInvocationModel);
}

uint64_t base witness table accessor for Equatable in DisambiguationItemWithDirectInvocationModel()
{
  return lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel and conformance DisambiguationItemWithDirectInvocationModel, type metadata accessor for DisambiguationItemWithDirectInvocationModel, (uint64_t)&protocol conformance descriptor for DisambiguationItemWithDirectInvocationModel);
}

uint64_t instantiation function for generic protocol witness table for ForeignEmergencyCallDisambiguationModel(uint64_t a1)
{
  uint64_t result;

  result = lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel and conformance ForeignEmergencyCallDisambiguationModel, type metadata accessor for ForeignEmergencyCallDisambiguationModel, (uint64_t)&protocol conformance descriptor for ForeignEmergencyCallDisambiguationModel);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t base witness table accessor for Decodable in ForeignEmergencyCallDisambiguationModel()
{
  return lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel and conformance ForeignEmergencyCallDisambiguationModel, type metadata accessor for ForeignEmergencyCallDisambiguationModel, (uint64_t)&protocol conformance descriptor for ForeignEmergencyCallDisambiguationModel);
}

uint64_t base witness table accessor for Encodable in ForeignEmergencyCallDisambiguationModel()
{
  return lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel and conformance ForeignEmergencyCallDisambiguationModel, type metadata accessor for ForeignEmergencyCallDisambiguationModel, (uint64_t)&protocol conformance descriptor for ForeignEmergencyCallDisambiguationModel);
}

uint64_t protocol witness for PhoneSnippetModel.responseViewId.getter in conformance LocalEmergencyCallDisambiguationModel(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 36));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t instantiation function for generic protocol witness table for LocalEmergencyCallDisambiguationModel(uint64_t a1)
{
  uint64_t result;

  result = lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationModel and conformance LocalEmergencyCallDisambiguationModel, type metadata accessor for LocalEmergencyCallDisambiguationModel, (uint64_t)&protocol conformance descriptor for LocalEmergencyCallDisambiguationModel);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t protocol witness for Identifiable.id.getter in conformance LocalEmergencyCallDisambiguationModel@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 24);
  v5 = type metadata accessor for UUID();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t base witness table accessor for Decodable in LocalEmergencyCallDisambiguationModel()
{
  return lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationModel and conformance LocalEmergencyCallDisambiguationModel, type metadata accessor for LocalEmergencyCallDisambiguationModel, (uint64_t)&protocol conformance descriptor for LocalEmergencyCallDisambiguationModel);
}

uint64_t base witness table accessor for Encodable in LocalEmergencyCallDisambiguationModel()
{
  return lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationModel and conformance LocalEmergencyCallDisambiguationModel, type metadata accessor for LocalEmergencyCallDisambiguationModel, (uint64_t)&protocol conformance descriptor for LocalEmergencyCallDisambiguationModel);
}

uint64_t protocol witness for Decodable.init(from:) in conformance LocalEmergencyCallDisambiguationModel@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return LocalEmergencyCallDisambiguationModel.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance LocalEmergencyCallDisambiguationModel(_QWORD *a1)
{
  return LocalEmergencyCallDisambiguationModel.encode(to:)(a1);
}

char *initializeBufferWithCopyOfBuffer for DisambiguationItemWithDirectInvocationModel(char *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = (char *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = &a1[v8];
    v10 = (char *)a2 + v8;
    v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = &a1[v13];
    v15 = (char *)a2 + v13;
    v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    v17 = a3[7];
    v18 = &a1[v17];
    v19 = (char *)a2 + v17;
    v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    v12(&a1[a3[8]], (char *)a2 + a3[8], v11);
    v21 = a3[9];
    v22 = &a1[v21];
    v23 = (char *)a2 + v21;
    v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
  }
  return a1;
}

uint64_t destroy for DisambiguationItemWithDirectInvocationModel(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  v8 = a1 + a2[6];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = a1 + a2[7];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v7(a1 + a2[8], v6);
  v12 = a1 + a2[9];
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
}

uint64_t initializeWithCopy for DisambiguationItemWithDirectInvocationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  v11(a1 + a3[8], a2 + a3[8], v10);
  v20 = a3[9];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  return a1;
}

uint64_t assignWithCopy for DisambiguationItemWithDirectInvocationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 24))(v17, v18, v19);
  v11(a1 + a3[8], a2 + a3[8], v10);
  v20 = a3[9];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 24))(v21, v22, v23);
  return a1;
}

uint64_t initializeWithTake for DisambiguationItemWithDirectInvocationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  v11(a1 + a3[8], a2 + a3[8], v10);
  v20 = a3[9];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
  return a1;
}

uint64_t assignWithTake for DisambiguationItemWithDirectInvocationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, v18, v19);
  v11(a1 + a3[8], a2 + a3[8], v10);
  v20 = a3[9];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 40))(v21, v22, v23);
  return a1;
}

uint64_t getEnumTagSinglePayload for DisambiguationItemWithDirectInvocationModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_243B1A488(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = type metadata accessor for UUID();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
          v12 = *(_QWORD *)(v8 - 8);
          v13 = a3[9];
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for DisambiguationItemWithDirectInvocationModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_243B1A584(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v8 = type metadata accessor for UUID();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
          v14 = *(_QWORD *)(v10 - 8);
          v15 = a4[9];
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void type metadata completion function for DisambiguationItemWithDirectInvocationModel()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  type metadata accessor for UUID();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Loggable<String?>(319, &lazy cache variable for type metadata for Loggable<String?>, &demangling cache variable for type metadata for String?);
    if (v1 <= 0x3F)
    {
      _s10SnippetKit8LoggableVySSGMaTm_0(319, (unint64_t *)&lazy cache variable for type metadata for Loggable<String>);
      if (v2 <= 0x3F)
      {
        _s10SnippetKit8LoggableVySSGMaTm_0(319, &lazy cache variable for type metadata for Loggable<Bool>);
        if (v3 <= 0x3F)
        {
          type metadata accessor for Loggable<String?>(319, &lazy cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>, &demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
          if (v4 <= 0x3F)
            swift_initStructMetadata();
        }
      }
    }
  }
}

void type metadata accessor for Loggable<String?>(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    v4 = type metadata accessor for Loggable();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ForeignEmergencyCallDisambiguationModel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int *v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t *, uint64_t, int *);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v57;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = (int *)type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
    v8 = *((_QWORD *)v7 - 1);
    v9 = *(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      v12 = type metadata accessor for UUID();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
      v13 = v7[5];
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
      v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
      v17(v14, v15, v16);
      v18 = v7[6];
      v19 = (char *)a1 + v18;
      v20 = (char *)a2 + v18;
      v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
      v22 = v7[7];
      v23 = (char *)a1 + v22;
      v24 = (char *)a2 + v22;
      v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
      v17((char *)a1 + v7[8], (char *)a2 + v7[8], v16);
      v26 = v7[9];
      v27 = (char *)a1 + v26;
      v28 = (char *)a2 + v26;
      v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v8 + 56))(a1, 0, 1, v7);
    }
    v30 = *(int *)(a3 + 20);
    v31 = (char *)a1 + v30;
    v32 = (char *)a2 + v30;
    if (v9((uint64_t *)((char *)a2 + v30), 1, v7))
    {
      v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      v34 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v31, v32, v34);
      v35 = v7[5];
      v36 = &v31[v35];
      v37 = &v32[v35];
      v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
      v57 = v8;
      v39 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16);
      v39(v36, v37, v38);
      v40 = v7[6];
      v41 = &v31[v40];
      v42 = &v32[v40];
      v43 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
      v44 = v7[7];
      v45 = &v31[v44];
      v46 = &v32[v44];
      v47 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
      v39(&v31[v7[8]], &v32[v7[8]], v38);
      v48 = v7[9];
      v49 = &v31[v48];
      v50 = &v32[v48];
      v51 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v57 + 56))(v31, 0, 1, v7);
    }
    v52 = *(int *)(a3 + 24);
    v53 = (uint64_t *)((char *)a1 + v52);
    v54 = (uint64_t *)((char *)a2 + v52);
    v55 = v54[1];
    *v53 = *v54;
    v53[1] = v55;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ForeignEmergencyCallDisambiguationModel(uint64_t a1, uint64_t a2)
{
  int *v4;
  unsigned int (*v5)(uint64_t, uint64_t, int *);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = (int *)type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  v5 = *(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v4 - 1) + 48);
  if (!v5(a1, 1, v4))
  {
    v6 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
    v7 = a1 + v4[5];
    v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
    v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
    v9(v7, v8);
    v10 = a1 + v4[6];
    v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
    v12 = a1 + v4[7];
    v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
    v9(a1 + v4[8], v8);
    v14 = a1 + v4[9];
    v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  }
  v16 = a1 + *(int *)(a2 + 20);
  if (!v5(v16, 1, v4))
  {
    v17 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
    v18 = v16 + v4[5];
    v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
    v20 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8);
    v20(v18, v19);
    v21 = v16 + v4[6];
    v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
    v23 = v16 + v4[7];
    v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
    v20(v16 + v4[8], v19);
    v25 = v16 + v4[9];
    v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
  }
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for ForeignEmergencyCallDisambiguationModel(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, int *);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v55;

  v6 = (int *)type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(unsigned int (**)(char *, uint64_t, int *))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    v10 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
    v11 = v6[5];
    v12 = &a1[v11];
    v13 = &a2[v11];
    v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
    v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    v15(v12, v13, v14);
    v16 = v6[6];
    v17 = &a1[v16];
    v18 = &a2[v16];
    v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = v6[7];
    v21 = &a1[v20];
    v22 = &a2[v20];
    v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v15(&a1[v6[8]], &a2[v6[8]], v14);
    v24 = v6[9];
    v25 = &a1[v24];
    v26 = &a2[v24];
    v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  v28 = *(int *)(a3 + 20);
  v29 = &a1[v28];
  v30 = &a2[v28];
  if (v8(&a2[v28], 1, v6))
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    v32 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v29, v30, v32);
    v33 = v6[5];
    v34 = &v29[v33];
    v35 = &v30[v33];
    v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
    v55 = a3;
    v37 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16);
    v37(v34, v35, v36);
    v38 = v6[6];
    v39 = &v29[v38];
    v40 = &v30[v38];
    v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v39, v40, v41);
    v42 = v6[7];
    v43 = &v29[v42];
    v44 = &v30[v42];
    v45 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v43, v44, v45);
    v37(&v29[v6[8]], &v30[v6[8]], v36);
    a3 = v55;
    v46 = v6[9];
    v47 = &v29[v46];
    v48 = &v30[v46];
    v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v47, v48, v49);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56))(v29, 0, 1, v6);
  }
  v50 = *(int *)(a3 + 24);
  v51 = &a1[v50];
  v52 = &a2[v50];
  v53 = *((_QWORD *)v52 + 1);
  *(_QWORD *)v51 = *(_QWORD *)v52;
  *((_QWORD *)v51 + 1) = v53;
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for ForeignEmergencyCallDisambiguationModel(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, int *);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t);
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  void (*v82)(char *, char *, uint64_t);
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;

  v6 = (int *)type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(char *, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      v11 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      v12 = v6[5];
      v13 = &a1[v12];
      v14 = &a2[v12];
      v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
      v16(v13, v14, v15);
      v17 = v6[6];
      v18 = &a1[v17];
      v19 = &a2[v17];
      v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
      v21 = v6[7];
      v22 = &a1[v21];
      v23 = &a2[v21];
      v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
      v16(&a1[v6[8]], &a2[v6[8]], v15);
      v25 = v6[9];
      v26 = &a1[v25];
      v27 = &a2[v25];
      v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    outlined destroy of SingleResultCallHistoryModel((uint64_t)a1, type metadata accessor for DisambiguationItemWithDirectInvocationModel);
LABEL_6:
    v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_7;
  }
  v59 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 24))(a1, a2, v59);
  v60 = v6[5];
  v61 = &a1[v60];
  v62 = &a2[v60];
  v63 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  v64 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 24);
  v64(v61, v62, v63);
  v65 = v6[6];
  v66 = &a1[v65];
  v67 = &a2[v65];
  v68 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 24))(v66, v67, v68);
  v69 = v6[7];
  v70 = &a1[v69];
  v71 = &a2[v69];
  v72 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 24))(v70, v71, v72);
  v64(&a1[v6[8]], &a2[v6[8]], v63);
  v73 = v6[9];
  v74 = &a1[v73];
  v75 = &a2[v73];
  v76 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 24))(v74, v75, v76);
LABEL_7:
  v30 = *(int *)(a3 + 20);
  v31 = &a1[v30];
  v32 = &a2[v30];
  v33 = v8(&a1[v30], 1, v6);
  v34 = v8(v32, 1, v6);
  if (!v33)
  {
    if (!v34)
    {
      v77 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 24))(v31, v32, v77);
      v78 = v6[5];
      v79 = &v31[v78];
      v80 = &v32[v78];
      v81 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
      v82 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 24);
      v82(v79, v80, v81);
      v83 = v6[6];
      v84 = &v31[v83];
      v85 = &v32[v83];
      v86 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 24))(v84, v85, v86);
      v87 = v6[7];
      v88 = &v31[v87];
      v89 = &v32[v87];
      v90 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v90 - 8) + 24))(v88, v89, v90);
      v82(&v31[v6[8]], &v32[v6[8]], v81);
      v91 = v6[9];
      v92 = &v31[v91];
      v93 = &v32[v91];
      v94 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 24))(v92, v93, v94);
      goto LABEL_13;
    }
    outlined destroy of SingleResultCallHistoryModel((uint64_t)v31, type metadata accessor for DisambiguationItemWithDirectInvocationModel);
    goto LABEL_12;
  }
  if (v34)
  {
LABEL_12:
    v54 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    goto LABEL_13;
  }
  v35 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v31, v32, v35);
  v36 = v6[5];
  v37 = &v31[v36];
  v38 = &v32[v36];
  v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  v95 = v7;
  v40 = a3;
  v41 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16);
  v41(v37, v38, v39);
  v42 = v6[6];
  v43 = &v31[v42];
  v44 = &v32[v42];
  v45 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v43, v44, v45);
  v46 = v6[7];
  v47 = &v31[v46];
  v48 = &v32[v46];
  v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v47, v48, v49);
  v41(&v31[v6[8]], &v32[v6[8]], v39);
  a3 = v40;
  v50 = v6[9];
  v51 = &v31[v50];
  v52 = &v32[v50];
  v53 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v51, v52, v53);
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v95 + 56))(v31, 0, 1, v6);
LABEL_13:
  v55 = *(int *)(a3 + 24);
  v56 = &a1[v55];
  v57 = &a2[v55];
  *(_QWORD *)v56 = *(_QWORD *)v57;
  *((_QWORD *)v56 + 1) = *((_QWORD *)v57 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for ForeignEmergencyCallDisambiguationModel(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, int *);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v51;

  v6 = (int *)type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(unsigned int (**)(char *, uint64_t, int *))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    v10 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
    v11 = v6[5];
    v12 = &a1[v11];
    v13 = &a2[v11];
    v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
    v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32);
    v15(v12, v13, v14);
    v16 = v6[6];
    v17 = &a1[v16];
    v18 = &a2[v16];
    v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
    v20 = v6[7];
    v21 = &a1[v20];
    v22 = &a2[v20];
    v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
    v15(&a1[v6[8]], &a2[v6[8]], v14);
    v24 = v6[9];
    v25 = &a1[v24];
    v26 = &a2[v24];
    v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  v28 = *(int *)(a3 + 20);
  v29 = &a1[v28];
  v30 = &a2[v28];
  if (v8(&a2[v28], 1, v6))
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    v32 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v29, v30, v32);
    v33 = v6[5];
    v34 = &v29[v33];
    v35 = &v30[v33];
    v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
    v51 = a3;
    v37 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32);
    v37(v34, v35, v36);
    v38 = v6[6];
    v39 = &v29[v38];
    v40 = &v30[v38];
    v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v39, v40, v41);
    v42 = v6[7];
    v43 = &v29[v42];
    v44 = &v30[v42];
    v45 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v43, v44, v45);
    v37(&v29[v6[8]], &v30[v6[8]], v36);
    a3 = v51;
    v46 = v6[9];
    v47 = &v29[v46];
    v48 = &v30[v46];
    v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v47, v48, v49);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56))(v29, 0, 1, v6);
  }
  *(_OWORD *)&a1[*(int *)(a3 + 24)] = *(_OWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

char *assignWithTake for ForeignEmergencyCallDisambiguationModel(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, int *);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t);
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  void (*v84)(char *, char *, uint64_t);
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;

  v6 = (int *)type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(char *, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      v11 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
      v12 = v6[5];
      v13 = &a1[v12];
      v14 = &a2[v12];
      v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
      v16(v13, v14, v15);
      v17 = v6[6];
      v18 = &a1[v17];
      v19 = &a2[v17];
      v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
      v21 = v6[7];
      v22 = &a1[v21];
      v23 = &a2[v21];
      v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
      v16(&a1[v6[8]], &a2[v6[8]], v15);
      v25 = v6[9];
      v26 = &a1[v25];
      v27 = &a2[v25];
      v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    outlined destroy of SingleResultCallHistoryModel((uint64_t)a1, type metadata accessor for DisambiguationItemWithDirectInvocationModel);
LABEL_6:
    v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_7;
  }
  v61 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 40))(a1, a2, v61);
  v62 = v6[5];
  v63 = &a1[v62];
  v64 = &a2[v62];
  v65 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  v66 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 40);
  v66(v63, v64, v65);
  v67 = v6[6];
  v68 = &a1[v67];
  v69 = &a2[v67];
  v70 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 40))(v68, v69, v70);
  v71 = v6[7];
  v72 = &a1[v71];
  v73 = &a2[v71];
  v74 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 40))(v72, v73, v74);
  v66(&a1[v6[8]], &a2[v6[8]], v65);
  v75 = v6[9];
  v76 = &a1[v75];
  v77 = &a2[v75];
  v78 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 40))(v76, v77, v78);
LABEL_7:
  v30 = *(int *)(a3 + 20);
  v31 = &a1[v30];
  v32 = &a2[v30];
  v33 = v8(&a1[v30], 1, v6);
  v34 = v8(v32, 1, v6);
  if (!v33)
  {
    if (!v34)
    {
      v79 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 40))(v31, v32, v79);
      v80 = v6[5];
      v81 = &v31[v80];
      v82 = &v32[v80];
      v83 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
      v84 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 40);
      v84(v81, v82, v83);
      v85 = v6[6];
      v86 = &v31[v85];
      v87 = &v32[v85];
      v88 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 40))(v86, v87, v88);
      v89 = v6[7];
      v90 = &v31[v89];
      v91 = &v32[v89];
      v92 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 40))(v90, v91, v92);
      v84(&v31[v6[8]], &v32[v6[8]], v83);
      v93 = v6[9];
      v94 = &v31[v93];
      v95 = &v32[v93];
      v96 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 40))(v94, v95, v96);
      goto LABEL_13;
    }
    outlined destroy of SingleResultCallHistoryModel((uint64_t)v31, type metadata accessor for DisambiguationItemWithDirectInvocationModel);
    goto LABEL_12;
  }
  if (v34)
  {
LABEL_12:
    v54 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    goto LABEL_13;
  }
  v35 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v31, v32, v35);
  v36 = v6[5];
  v37 = &v31[v36];
  v38 = &v32[v36];
  v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  v97 = v7;
  v40 = a3;
  v41 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32);
  v41(v37, v38, v39);
  v42 = v6[6];
  v43 = &v31[v42];
  v44 = &v32[v42];
  v45 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v43, v44, v45);
  v46 = v6[7];
  v47 = &v31[v46];
  v48 = &v32[v46];
  v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v47, v48, v49);
  v41(&v31[v6[8]], &v32[v6[8]], v39);
  a3 = v40;
  v50 = v6[9];
  v51 = &v31[v50];
  v52 = &v32[v50];
  v53 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v51, v52, v53);
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v97 + 56))(v31, 0, 1, v6);
LABEL_13:
  v55 = *(int *)(a3 + 24);
  v56 = &a1[v55];
  v57 = &a2[v55];
  v59 = *(_QWORD *)v57;
  v58 = *((_QWORD *)v57 + 1);
  *(_QWORD *)v56 = v59;
  *((_QWORD *)v56 + 1) = v58;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ForeignEmergencyCallDisambiguationModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_243B1BE9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for ForeignEmergencyCallDisambiguationModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_243B1BF2C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

void type metadata completion function for ForeignEmergencyCallDisambiguationModel()
{
  unint64_t v0;

  type metadata accessor for DisambiguationItemWithDirectInvocationModel?();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void type metadata accessor for DisambiguationItemWithDirectInvocationModel?()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?)
  {
    type metadata accessor for DisambiguationItemWithDirectInvocationModel(255);
    v0 = type metadata accessor for Optional();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for LocalEmergencyCallDisambiguationModel(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    a1[2] = a2[2];
    v8 = a3[6];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for UUID();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[7];
    v14 = (char *)v4 + v13;
    v15 = (char *)a2 + v13;
    v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    v17 = a3[9];
    *((_BYTE *)v4 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    v18 = (_QWORD *)((char *)v4 + v17);
    v19 = (_QWORD *)((char *)a2 + v17);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for LocalEmergencyCallDisambiguationModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 28);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for LocalEmergencyCallDisambiguationModel(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for UUID();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[7];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  v16 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for LocalEmergencyCallDisambiguationModel(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[7];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v14 = a3[9];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for LocalEmergencyCallDisambiguationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
  return a1;
}

_QWORD *assignWithTake for LocalEmergencyCallDisambiguationModel(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[7];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  v19 = *v17;
  v18 = v17[1];
  *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LocalEmergencyCallDisambiguationModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_243B1C5A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for UUID();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 24);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for LocalEmergencyCallDisambiguationModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_243B1C650(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for UUID();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void type metadata completion function for LocalEmergencyCallDisambiguationModel()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for UUID();
  if (v0 <= 0x3F)
  {
    _s10SnippetKit8LoggableVySSGMaTm_0(319, (unint64_t *)&lazy cache variable for type metadata for Loggable<String>);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void *type metadata accessor for LocalEmergencyCallDisambiguationModel.CodingKeys()
{
  return &unk_25144BC38;
}

uint64_t storeEnumTagSinglePayload for ForeignEmergencyCallDisambiguationModel.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_243B1C80C + 4 * byte_243B35AFB[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_243B1C840 + 4 * byte_243B35AF6[v4]))();
}

uint64_t sub_243B1C840(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_243B1C848(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x243B1C850);
  return result;
}

uint64_t sub_243B1C85C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x243B1C864);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_243B1C868(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_243B1C870(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for ForeignEmergencyCallDisambiguationModel.CodingKeys()
{
  return &unk_25144BCC8;
}

uint64_t storeEnumTagSinglePayload for LocalEmergencyCallDisambiguationModel.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_243B1C8D8 + 4 * byte_243B35B05[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_243B1C90C + 4 * byte_243B35B00[v4]))();
}

uint64_t sub_243B1C90C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_243B1C914(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x243B1C91CLL);
  return result;
}

uint64_t sub_243B1C928(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x243B1C930);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_243B1C934(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_243B1C93C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for DisambiguationItemWithDirectInvocationModel.CodingKeys()
{
  return &unk_25144BD58;
}

uint64_t specialized DisambiguationItemWithDirectInvocationModel.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v3 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x61486E6F73726570 && a2 == 0xEC000000656C646ELL
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x61486E656B6F7073 && a2 == 0xEC000000656C646ELL
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000243B37B40
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6C6562616CLL && a2 == 0xE500000000000000
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6D6D6F43656B7372 && a2 == 0xEB00000000646E61)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t specialized ForeignEmergencyCallDisambiguationModel.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000015 && a2 == 0x8000000243B37B60
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000243B37B80
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65736E6F70736572 && a2 == 0xEE00644977656956)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t specialized LocalEmergencyCallDisambiguationModel.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6C646E7542707061 && a2 == 0xEB00000000644965;
  if (v3 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736D657469 && a2 == 0xE500000000000000
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 25705 && a2 == 0xE200000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74706D6F7270 && a2 == 0xE600000000000000
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x457472616D537369 && a2 == 0xEE0064656C62616ELL
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x65736E6F70736572 && a2 == 0xEE00644977656956)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

void View.disambiguationListItem(isFirstElement:)(char a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  _QWORD v8[2];
  char v9;

  type metadata accessor for Context();
  lazy protocol witness table accessor for type Context and conformance Context();
  v6 = (void *)EnvironmentObject.init()();
  v8[0] = v6;
  v8[1] = v7;
  v9 = a1;
  MEMORY[0x2495004A4](v8, a2, &type metadata for CarPlayDisambiguationListItem, a3);

}

uint64_t CarPlayDisambiguationListItem.isFirstElement.getter(uint64_t a1, uint64_t a2, char a3)
{
  return a3 & 1;
}

void one-time initialization function for listPadding()
{
  static CarPlayDisambiguationListItem.listPadding = 0x4000000000000000;
}

uint64_t CarPlayDisambiguationListItem.body(content:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, int a3@<W3>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  id v16;
  unint64_t v17;
  uint64_t result;
  void (*v19)(_BYTE *, uint64_t, uint64_t);
  unint64_t v20;
  _BYTE v21[12];
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;

  v22 = a3;
  v23 = a1;
  v24 = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ViewModifier_Content<CarPlayDisambiguationListItem>);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.componentSpacing(top:bottom:)>>.0, _ViewModifier_Content<CarPlayDisambiguationListItem>>.Storage);
  MEMORY[0x24BDAC7A8](v9);
  v11 = &v21[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.componentSpacing(top:bottom:)>>.0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = &v21[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a2)
  {
    v16 = a2;
    dispatch thunk of Context.currentIdiom.getter();

    if ((VRXIdiom.isCarPlay.getter() & 1) == 0 || (v22 & 1) != 0)
    {
      v19 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 16);
      v19(v8, v23, v5);
      v19(v11, (uint64_t)v8, v5);
      swift_storeEnumTagMultiPayload();
      v20 = lazy protocol witness table accessor for type _ViewModifier_Content<CarPlayDisambiguationListItem> and conformance _ViewModifier_Content<A>();
      v25 = v5;
      v26 = v20;
      swift_getOpaqueTypeConformance2();
      _ConditionalContent<>.init(storage:)();
      return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
    }
    else
    {
      if (one-time initialization token for listPadding != -1)
        swift_once();
      v17 = lazy protocol witness table accessor for type _ViewModifier_Content<CarPlayDisambiguationListItem> and conformance _ViewModifier_Content<A>();
      View.componentSpacing(top:bottom:)();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v13 + 16))(v11, v15, v12);
      swift_storeEnumTagMultiPayload();
      v25 = v5;
      v26 = v17;
      swift_getOpaqueTypeConformance2();
      _ConditionalContent<>.init(storage:)();
      return (*(uint64_t (**)(_BYTE *, uint64_t))(v13 + 8))(v15, v12);
    }
  }
  else
  {
    type metadata accessor for Context();
    lazy protocol witness table accessor for type Context and conformance Context();
    result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t CarPlayDisambiguationListItem.init(isFirstElement:)()
{
  type metadata accessor for Context();
  lazy protocol witness table accessor for type Context and conformance Context();
  return EnvironmentObject.init()();
}

unint64_t lazy protocol witness table accessor for type Context and conformance Context()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type Context and conformance Context;
  if (!lazy protocol witness table cache variable for type Context and conformance Context)
  {
    v1 = type metadata accessor for Context();
    result = MEMORY[0x249501140](MEMORY[0x24BEAE528], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context);
  }
  return result;
}

uint64_t protocol witness for static ViewModifier._viewListCount(inputs:body:) in conformance CarPlayDisambiguationListItem()
{
  return static ViewModifier._viewListCount(inputs:body:)();
}

uint64_t protocol witness for ViewModifier.body(content:) in conformance CarPlayDisambiguationListItem@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return CarPlayDisambiguationListItem.body(content:)(a1, *(void **)v2, *(unsigned __int8 *)(v2 + 16), a2);
}

unint64_t lazy protocol witness table accessor for type _ViewModifier_Content<CarPlayDisambiguationListItem> and conformance _ViewModifier_Content<A>()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type _ViewModifier_Content<CarPlayDisambiguationListItem> and conformance _ViewModifier_Content<A>;
  if (!lazy protocol witness table cache variable for type _ViewModifier_Content<CarPlayDisambiguationListItem> and conformance _ViewModifier_Content<A>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ViewModifier_Content<CarPlayDisambiguationListItem>);
    result = MEMORY[0x249501140](MEMORY[0x24BDEFB70], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ViewModifier_Content<CarPlayDisambiguationListItem> and conformance _ViewModifier_Content<A>);
  }
  return result;
}

uint64_t associated type witness table accessor for ViewModifier.Body : View in CarPlayDisambiguationListItem()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeBufferWithCopyOfBuffer for CarPlayDisambiguationListItem(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = v3;
  return a1;
}

void destroy for CarPlayDisambiguationListItem(id *a1)
{

}

uint64_t assignWithCopy for CarPlayDisambiguationListItem(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for CarPlayDisambiguationListItem(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for CarPlayDisambiguationListItem(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 17))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CarPlayDisambiguationListItem(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for CarPlayDisambiguationListItem()
{
  return &type metadata for CarPlayDisambiguationListItem;
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<<<opaque return type of View.componentSpacing(top:bottom:)>>.0, _ViewModifier_Content<CarPlayDisambiguationListItem>> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[3];
  unint64_t v3;

  result = lazy protocol witness table cache variable for type _ConditionalContent<<<opaque return type of View.componentSpacing(top:bottom:)>>.0, _ViewModifier_Content<CarPlayDisambiguationListItem>> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<<<opaque return type of View.componentSpacing(top:bottom:)>>.0, _ViewModifier_Content<CarPlayDisambiguationListItem>> and conformance <> _ConditionalContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.componentSpacing(top:bottom:)>>.0, _ViewModifier_Content<CarPlayDisambiguationListItem>>);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ViewModifier_Content<CarPlayDisambiguationListItem>);
    v3 = lazy protocol witness table accessor for type _ViewModifier_Content<CarPlayDisambiguationListItem> and conformance _ViewModifier_Content<A>();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = v3;
    result = MEMORY[0x249501140](MEMORY[0x24BDEF3D8], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<<<opaque return type of View.componentSpacing(top:bottom:)>>.0, _ViewModifier_Content<CarPlayDisambiguationListItem>> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

uint64_t sub_243B1D8AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  v2 = type metadata accessor for ModifiedContent();
  v4[0] = v1;
  v4[1] = lazy protocol witness table accessor for type CarPlayDisambiguationListItem and conformance CarPlayDisambiguationListItem();
  return MEMORY[0x249501140](MEMORY[0x24BDED300], v2, v4);
}

uint64_t one-time initialization function for cancelUtterance(uint64_t a1)
{
  return one-time initialization function for cancelUtterance(a1, 28526, 0xE200000000000000, &static PhoneStartRequestUtterances.cancelUtterance, &qword_2572EB060);
}

uint64_t *PhoneStartRequestUtterances.cancelUtterance.unsafeMutableAddressor()
{
  if (one-time initialization token for cancelUtterance != -1)
    swift_once();
  return &static PhoneStartRequestUtterances.cancelUtterance;
}

uint64_t static PhoneStartRequestUtterances.cancelUtterance.getter()
{
  return static PhoneStartRequestUtterances.cancelUtterance.getter(&one-time initialization token for cancelUtterance, &static PhoneStartRequestUtterances.cancelUtterance);
}

uint64_t one-time initialization function for confirmUtterance(uint64_t a1)
{
  return one-time initialization function for cancelUtterance(a1, 7562617, 0xE300000000000000, &static PhoneStartRequestUtterances.confirmUtterance, &qword_2572EB070);
}

uint64_t one-time initialization function for cancelUtterance(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  type metadata accessor for MachineUtteranceBuilder();
  swift_allocObject();
  MachineUtteranceBuilder.init()();
  dispatch thunk of MachineUtteranceBuilder.addMapping(node:value:)();
  swift_release();
  v7 = dispatch thunk of MachineUtteranceBuilder.build()();
  v9 = v8;
  result = swift_release();
  *a4 = v7;
  *a5 = v9;
  return result;
}

uint64_t *PhoneStartRequestUtterances.confirmUtterance.unsafeMutableAddressor()
{
  if (one-time initialization token for confirmUtterance != -1)
    swift_once();
  return &static PhoneStartRequestUtterances.confirmUtterance;
}

uint64_t static PhoneStartRequestUtterances.confirmUtterance.getter()
{
  return static PhoneStartRequestUtterances.cancelUtterance.getter(&one-time initialization token for confirmUtterance, &static PhoneStartRequestUtterances.confirmUtterance);
}

uint64_t static PhoneStartRequestUtterances.cancelUtterance.getter(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;

  if (*a1 != -1)
    swift_once();
  v3 = *a2;
  swift_bridgeObjectRetain();
  return v3;
}

ValueMetadata *type metadata accessor for PhoneStartRequestUtterances()
{
  return &type metadata for PhoneStartRequestUtterances;
}

uint64_t AppDescription.rskeCommand.getter()
{
  type metadata accessor for AppDescription();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  return CodableAceObject.wrappedValue.getter();
}

uint64_t type metadata accessor for AppDescription()
{
  uint64_t result;

  result = type metadata singleton initialization cache for AppDescription;
  if (!type metadata singleton initialization cache for AppDescription)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t AppDescription.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for UUID();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t AppDescription.appName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AppDescription() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppDescription.appBundleId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AppDescription() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppDescription.isFirstParty.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for AppDescription() + 28));
}

uint64_t property wrapper backing initializer of AppDescription.rskeCommand()
{
  type metadata accessor for SAIntentGroupRunSiriKitExecutor();
  return CodableAceObject.init(wrappedValue:)();
}

uint64_t key path setter for AppDescription.rskeCommand : AppDescription(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  type metadata accessor for AppDescription();
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  return CodableAceObject.wrappedValue.setter();
}

uint64_t AppDescription.rskeCommand.setter()
{
  type metadata accessor for AppDescription();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  return CodableAceObject.wrappedValue.setter();
}

void (*AppDescription.rskeCommand.modify(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for AppDescription();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v2[4] = CodableAceObject.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t AppDescription.init(id:appName:appBundleId:isFirstParty:rskeCommand:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  int *v16;
  _QWORD *v17;
  _QWORD *v18;

  v14 = type metadata accessor for UUID();
  v15 = *(_QWORD *)(v14 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(a7, a1, v14);
  v16 = (int *)type metadata accessor for AppDescription();
  v17 = (_QWORD *)(a7 + v16[5]);
  *v17 = a2;
  v17[1] = a3;
  v18 = (_QWORD *)(a7 + v16[6]);
  *v18 = a4;
  v18[1] = a5;
  *(_BYTE *)(a7 + v16[7]) = a6;
  type metadata accessor for SAIntentGroupRunSiriKitExecutor();
  CodableAceObject.init(wrappedValue:)();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(a1, v14);
}

uint64_t static AppDescription.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *(int *)(type metadata accessor for AppDescription() + 24);
  v5 = *(_QWORD *)(a1 + v4);
  v6 = *(_QWORD *)(a1 + v4 + 8);
  v7 = (_QWORD *)(a2 + v4);
  if (v5 == *v7 && v6 == v7[1])
    return 1;
  else
    return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t AppDescription.hash(into:)()
{
  type metadata accessor for AppDescription();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

uint64_t AppDescription.CodingKeys.stringValue.getter(char a1)
{
  return qword_243B366D8[a1];
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance AppDescription.CodingKeys()
{
  char *v0;

  return AppDescription.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance AppDescription.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = specialized AppDescription.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance AppDescription.CodingKeys()
{
  lazy protocol witness table accessor for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance AppDescription.CodingKeys()
{
  lazy protocol witness table accessor for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys();
  return CodingKey.debugDescription.getter();
}

uint64_t AppDescription.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<AppDescription.CodingKeys>);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v8[15] = 0;
  type metadata accessor for UUID();
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v1)
  {
    type metadata accessor for AppDescription();
    v8[14] = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    v8[13] = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    v8[12] = 3;
    KeyedEncodingContainer.encode(_:forKey:)();
    v8[11] = 4;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    lazy protocol witness table accessor for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>(&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>, MEMORY[0x24BEABA88]);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t lazy protocol witness table accessor for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys;
  if (!lazy protocol witness table cache variable for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for AppDescription.CodingKeys, &unk_25144C0F8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys;
  if (!lazy protocol witness table cache variable for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for AppDescription.CodingKeys, &unk_25144C0F8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys;
  if (!lazy protocol witness table cache variable for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for AppDescription.CodingKeys, &unk_25144C0F8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys;
  if (!lazy protocol witness table cache variable for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for AppDescription.CodingKeys, &unk_25144C0F8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys);
  }
  return result;
}

Swift::Int AppDescription.hashValue.getter()
{
  Hasher.init(_seed:)();
  type metadata accessor for AppDescription();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t AppDescription.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;

  v24 = a2;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v23 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v26 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for UUID();
  v4 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v28 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<AppDescription.CodingKeys>);
  v6 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for AppDescription();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys();
  v29 = v8;
  v12 = v31;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v13 = (uint64_t)v11;
  v36 = 0;
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v14 = v27;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v13, v28, v14);
  v35 = 1;
  v15 = KeyedDecodingContainer.decode(_:forKey:)();
  v16 = (uint64_t *)(v13 + v9[5]);
  *v16 = v15;
  v16[1] = v17;
  v34 = 2;
  v18 = KeyedDecodingContainer.decode(_:forKey:)();
  v19 = (uint64_t *)(v13 + v9[6]);
  *v19 = v18;
  v19[1] = v20;
  v33 = 3;
  *(_BYTE *)(v13 + v9[7]) = KeyedDecodingContainer.decode(_:forKey:)() & 1;
  v32 = 4;
  lazy protocol witness table accessor for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>(&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>, MEMORY[0x24BEABA90]);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v29, v30);
  (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(v13 + v9[8], v26, v25);
  outlined init with copy of AppDescription(v13, v24);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return outlined destroy of AppDescription(v13);
}

uint64_t protocol witness for Decodable.init(from:) in conformance AppDescription@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AppDescription.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance AppDescription(_QWORD *a1)
{
  return AppDescription.encode(to:)(a1);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance AppDescription()
{
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance AppDescription()
{
  swift_bridgeObjectRetain();
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance AppDescription()
{
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t outlined init with copy of AppDescription(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AppDescription();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of AppDescription(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AppDescription();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance AppDescription(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  v3 = *(int *)(a3 + 24);
  if (*(_QWORD *)(a1 + v3) == *(_QWORD *)(a2 + v3) && *(_QWORD *)(a1 + v3 + 8) == *(_QWORD *)(a2 + v3 + 8))
    return 1;
  else
    return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t AppDisambiguationModel.prompt.getter(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  return a2;
}

unint64_t AppDisambiguationModel.responseViewId.getter()
{
  return 0xD000000000000011;
}

uint64_t AppDisambiguationModel.CodingKeys.stringValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x74706D6F7270;
  else
    return 0x7263736544707061;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance AppDisambiguationModel.CodingKeys()
{
  char *v0;

  return AppDisambiguationModel.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance AppDisambiguationModel.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = specialized AppDisambiguationModel.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance AppDisambiguationModel.CodingKeys()
{
  lazy protocol witness table accessor for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance AppDisambiguationModel.CodingKeys()
{
  lazy protocol witness table accessor for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys();
  return CodingKey.debugDescription.getter();
}

uint64_t AppDisambiguationModel.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;

  v12 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<AppDisambiguationModel.CodingKeys>);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v15 = a2;
  v14 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [AppDescription]);
  lazy protocol witness table accessor for type [AppDescription] and conformance <A> [A](&lazy protocol witness table cache variable for type [AppDescription] and conformance <A> [A], &lazy protocol witness table cache variable for type AppDescription and conformance AppDescription, (uint64_t)&protocol conformance descriptor for AppDescription, MEMORY[0x24BEE12A0]);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v4)
  {
    v13 = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

unint64_t lazy protocol witness table accessor for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for AppDisambiguationModel.CodingKeys, &unk_25144C068);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for AppDisambiguationModel.CodingKeys, &unk_25144C068);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for AppDisambiguationModel.CodingKeys, &unk_25144C068);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for AppDisambiguationModel.CodingKeys, &unk_25144C068);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys);
  }
  return result;
}

uint64_t AppDisambiguationModel.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  result = specialized AppDisambiguationModel.init(from:)(a1);
  if (v1)
    return v3;
  return result;
}

unint64_t protocol witness for PhoneSnippetModel.responseViewId.getter in conformance AppDisambiguationModel()
{
  return 0xD000000000000011;
}

uint64_t protocol witness for Decodable.init(from:) in conformance AppDisambiguationModel@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = specialized AppDisambiguationModel.init(from:)(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t protocol witness for Encodable.encode(to:) in conformance AppDisambiguationModel(_QWORD *a1)
{
  uint64_t *v1;

  return AppDisambiguationModel.encode(to:)(a1, *v1, v1[1], v1[2]);
}

uint64_t specialized AppDescription.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v3 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D614E707061 && a2 == 0xE700000000000000
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C646E7542707061 && a2 == 0xEB00000000644965
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x5074737269467369 && a2 == 0xEC00000079747261
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6D6D6F43656B7372 && a2 == 0xEB00000000646E61)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t specialized AppDisambiguationModel.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x7263736544707061 && a2 == 0xEF736E6F69747069;
  if (v3 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74706D6F7270 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t specialized AppDisambiguationModel.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v9[8];
  uint64_t v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<AppDisambiguationModel.CodingKeys>);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  lazy protocol witness table accessor for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [AppDescription]);
    v9[7] = 0;
    lazy protocol witness table accessor for type [AppDescription] and conformance <A> [A](&lazy protocol witness table cache variable for type [AppDescription] and conformance <A> [A], &lazy protocol witness table cache variable for type AppDescription and conformance AppDescription, (uint64_t)&protocol conformance descriptor for AppDescription, MEMORY[0x24BEE12D0]);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v7 = v10;
    v9[6] = 1;
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t base witness table accessor for Equatable in AppDescription()
{
  return lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type AppDescription and conformance AppDescription, (uint64_t (*)(uint64_t))type metadata accessor for AppDescription, (uint64_t)&protocol conformance descriptor for AppDescription);
}

unint64_t instantiation function for generic protocol witness table for AppDisambiguationModel(uint64_t a1)
{
  unint64_t result;

  result = lazy protocol witness table accessor for type AppDisambiguationModel and conformance AppDisambiguationModel();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_243B1F0B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for AppDescription();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  result = CodableAceObject.wrappedValue.getter();
  *a1 = result;
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for AppDescription(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UUID();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (_QWORD *)((char *)a1 + v8);
    v11 = (_QWORD *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (_QWORD *)((char *)a1 + v9);
    v14 = (_QWORD *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for AppDescription(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 32);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for AppDescription(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v16 = a1 + v15;
  v17 = a2 + v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for AppDescription(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v13 = a3[8];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v14, v15, v16);
  return a1;
}

uint64_t initializeWithTake for AppDescription(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  return a1;
}

uint64_t assignWithTake for AppDescription(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v18, v19, v20);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppDescription()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_243B1F56C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = type metadata accessor for UUID();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    v10 = a1 + *(int *)(a3 + 32);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for AppDescription()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_243B1F628(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = type metadata accessor for UUID();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
      return result;
    }
    v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    v12 = a1 + *(int *)(a4 + 32);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void type metadata completion function for AppDescription()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for UUID();
  if (v0 <= 0x3F)
  {
    type metadata accessor for CodableAceObject<SAIntentGroupRunSiriKitExecutor>();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t destroy for AppDisambiguationModel()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeBufferWithCopyOfBuffer for AppDisambiguationModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for AppDisambiguationModel(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

_QWORD *assignWithTake for AppDisambiguationModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AppDisambiguationModel(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AppDisambiguationModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AppDisambiguationModel()
{
  return &type metadata for AppDisambiguationModel;
}

uint64_t storeEnumTagSinglePayload for AppDisambiguationModel.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_243B1F974 + 4 * byte_243B362A5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_243B1F9A8 + 4 * asc_243B362A0[v4]))();
}

uint64_t sub_243B1F9A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_243B1F9B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x243B1F9B8);
  return result;
}

uint64_t sub_243B1F9C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x243B1F9CCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_243B1F9D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_243B1F9D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for AppDisambiguationModel.CodingKeys()
{
  return &unk_25144C068;
}

uint64_t storeEnumTagSinglePayload for AppDescription.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_243B1FA40 + 4 * byte_243B362AF[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_243B1FA74 + 4 * byte_243B362AA[v4]))();
}

uint64_t sub_243B1FA74(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_243B1FA7C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x243B1FA84);
  return result;
}

uint64_t sub_243B1FA90(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x243B1FA98);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_243B1FA9C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_243B1FAA4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for AppDescription.CodingKeys()
{
  return &unk_25144C0F8;
}

uint64_t lazy protocol witness table accessor for type [AppDescription] and conformance <A> [A](unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [AppDescription]);
    v10 = lazy protocol witness table accessor for type Context and conformance Context(a2, (uint64_t (*)(uint64_t))type metadata accessor for AppDescription, a3);
    result = MEMORY[0x249501140](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t PhoneContactHeader.appBundleId.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PhoneContactHeader.contactId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PhoneContactHeader.displayName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PhoneContactHeader.handle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PhoneContactHeader.isFirstPartyApp.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 64);
}

uint64_t PhoneContactHeader.description.getter()
{
  uint64_t v0;
  Swift::String v1;
  uint64_t v2;
  void *v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  void *v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t v10;
  void *v11;
  Swift::String v12;
  Swift::String v13;
  uint64_t v14;
  void *v15;
  Swift::String v16;
  Swift::String v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  Swift::String v21;

  _StringGuts.grow(_:)(95);
  v1._countAndFlagsBits = 0xD00000000000001FLL;
  v1._object = (void *)0x8000000243B37BC0;
  String.append(_:)(v1);
  v2 = *(_QWORD *)v0;
  v3 = *(void **)(v0 + 8);
  swift_bridgeObjectRetain();
  v4._countAndFlagsBits = v2;
  v4._object = v3;
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  v5._countAndFlagsBits = 0x6361746E6F63202CLL;
  v5._object = (void *)0xEC0000003D644974;
  String.append(_:)(v5);
  v6 = *(_QWORD *)(v0 + 16);
  v7 = *(void **)(v0 + 24);
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = v6;
  v8._object = v7;
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  v9._countAndFlagsBits = 0x616C70736964202CLL;
  v9._object = (void *)0xEE003D656D614E79;
  String.append(_:)(v9);
  v10 = *(_QWORD *)(v0 + 32);
  v11 = *(void **)(v0 + 40);
  swift_bridgeObjectRetain();
  v12._countAndFlagsBits = v10;
  v12._object = v11;
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  v13._countAndFlagsBits = 0x656C646E6168202CLL;
  v13._object = (void *)0xE90000000000003DLL;
  String.append(_:)(v13);
  v14 = *(_QWORD *)(v0 + 48);
  v15 = *(void **)(v0 + 56);
  swift_bridgeObjectRetain();
  v16._countAndFlagsBits = v14;
  v16._object = v15;
  String.append(_:)(v16);
  swift_bridgeObjectRelease();
  v17._object = (void *)0x8000000243B37BE0;
  v17._countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v17);
  if ((*(_BYTE *)(v0 + 64) & 1) != 0)
    v18 = 1702195828;
  else
    v18 = 0x65736C6166;
  if ((*(_BYTE *)(v0 + 64) & 1) != 0)
    v19 = 0xE400000000000000;
  else
    v19 = 0xE500000000000000;
  v20 = v19;
  String.append(_:)(*(Swift::String *)&v18);
  swift_bridgeObjectRelease();
  v21._countAndFlagsBits = 41;
  v21._object = (void *)0xE100000000000000;
  String.append(_:)(v21);
  return 0;
}

uint64_t PhoneContactHeader.CodingKeys.stringValue.getter(char a1)
{
  return *(_QWORD *)&aAppbundlcontac[8 * a1];
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance PhoneContactHeader.CodingKeys()
{
  char *v0;

  return PhoneContactHeader.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance PhoneContactHeader.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = specialized PhoneContactHeader.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneContactHeader.CodingKeys()
{
  lazy protocol witness table accessor for type PhoneContactHeader.CodingKeys and conformance PhoneContactHeader.CodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhoneContactHeader.CodingKeys()
{
  lazy protocol witness table accessor for type PhoneContactHeader.CodingKeys and conformance PhoneContactHeader.CodingKeys();
  return CodingKey.debugDescription.getter();
}

uint64_t PhoneContactHeader.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhoneContactHeader.CodingKeys>);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type PhoneContactHeader.CodingKeys and conformance PhoneContactHeader.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v8[15] = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1)
  {
    v8[14] = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    v8[13] = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    v8[12] = 3;
    KeyedEncodingContainer.encode(_:forKey:)();
    v8[11] = 4;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t lazy protocol witness table accessor for type PhoneContactHeader.CodingKeys and conformance PhoneContactHeader.CodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneContactHeader.CodingKeys and conformance PhoneContactHeader.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneContactHeader.CodingKeys and conformance PhoneContactHeader.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneContactHeader.CodingKeys, &unk_25144C338);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneContactHeader.CodingKeys and conformance PhoneContactHeader.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneContactHeader.CodingKeys and conformance PhoneContactHeader.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneContactHeader.CodingKeys and conformance PhoneContactHeader.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneContactHeader.CodingKeys, &unk_25144C338);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneContactHeader.CodingKeys and conformance PhoneContactHeader.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneContactHeader.CodingKeys and conformance PhoneContactHeader.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneContactHeader.CodingKeys and conformance PhoneContactHeader.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneContactHeader.CodingKeys, &unk_25144C338);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneContactHeader.CodingKeys and conformance PhoneContactHeader.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PhoneContactHeader.CodingKeys and conformance PhoneContactHeader.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneContactHeader.CodingKeys and conformance PhoneContactHeader.CodingKeys)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for PhoneContactHeader.CodingKeys, &unk_25144C338);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneContactHeader.CodingKeys and conformance PhoneContactHeader.CodingKeys);
  }
  return result;
}

void __swiftcall PhoneContactHeader.init(appBundleId:contactId:displayName:handle:isFirstPartyApp:)(PhoneSnippetUI::PhoneContactHeader *__return_ptr retstr, Swift::String appBundleId, Swift::String contactId, Swift::String displayName, Swift::String handle, Swift::Bool isFirstPartyApp)
{
  retstr->appBundleId = appBundleId;
  retstr->contactId = contactId;
  retstr->displayName = displayName;
  retstr->handle = handle;
  retstr->isFirstPartyApp = isFirstPartyApp;
}

__n128 PhoneContactHeader.init(from:)@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  _OWORD v6[4];
  char v7;

  specialized PhoneContactHeader.init(from:)(a1, (uint64_t)v6);
  if (!v2)
  {
    v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_BYTE *)(a2 + 64) = v7;
    result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

__n128 protocol witness for Decodable.init(from:) in conformance PhoneContactHeader@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  _OWORD v6[4];
  char v7;

  specialized PhoneContactHeader.init(from:)(a1, (uint64_t)v6);
  if (!v2)
  {
    v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_BYTE *)(a2 + 64) = v7;
    result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t protocol witness for Encodable.encode(to:) in conformance PhoneContactHeader(_QWORD *a1)
{
  return PhoneContactHeader.encode(to:)(a1);
}

uint64_t specialized PhoneContactHeader.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6C646E7542707061 && a2 == 0xEB00000000644965;
  if (v3 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x49746361746E6F63 && a2 == 0xE900000000000064
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4E79616C70736964 && a2 == 0xEB00000000656D61
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656C646E6168 && a2 == 0xE600000000000000
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x5074737269467369 && a2 == 0xEF70704179747261)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t specialized PhoneContactHeader.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhoneContactHeader.CodingKeys>);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type PhoneContactHeader.CodingKeys and conformance PhoneContactHeader.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v35 = 0;
  v9 = KeyedDecodingContainer.decode(_:forKey:)();
  v11 = v10;
  v29 = v9;
  v34 = 1;
  swift_bridgeObjectRetain();
  v12 = KeyedDecodingContainer.decode(_:forKey:)();
  v30 = v13;
  v26 = v12;
  v33 = 2;
  swift_bridgeObjectRetain();
  v28 = 0;
  v25 = KeyedDecodingContainer.decode(_:forKey:)();
  v32 = 3;
  v15 = v14;
  swift_bridgeObjectRetain();
  v16 = KeyedDecodingContainer.decode(_:forKey:)();
  v27 = v15;
  v23 = v16;
  v24 = v17;
  v31 = 4;
  swift_bridgeObjectRetain();
  v18 = KeyedDecodingContainer.decode(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v19 = v24;
  swift_bridgeObjectRelease();
  v20 = v27;
  swift_bridgeObjectRelease();
  v21 = v30;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v29;
  *(_QWORD *)(a2 + 8) = v11;
  *(_QWORD *)(a2 + 16) = v26;
  *(_QWORD *)(a2 + 24) = v21;
  *(_QWORD *)(a2 + 32) = v25;
  *(_QWORD *)(a2 + 40) = v20;
  *(_QWORD *)(a2 + 48) = v23;
  *(_QWORD *)(a2 + 56) = v19;
  *(_BYTE *)(a2 + 64) = v18 & 1;
  return result;
}

uint64_t destroy for PhoneContactHeader()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PhoneContactHeader(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PhoneContactHeader(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for PhoneContactHeader(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for PhoneContactHeader(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 65))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PhoneContactHeader(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 65) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PhoneContactHeader()
{
  return &type metadata for PhoneContactHeader;
}

uint64_t storeEnumTagSinglePayload for PhoneContactHeader.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_243B20B44 + 4 * byte_243B36735[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_243B20B78 + 4 * byte_243B36730[v4]))();
}

uint64_t sub_243B20B78(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_243B20B80(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x243B20B88);
  return result;
}

uint64_t sub_243B20B94(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x243B20B9CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_243B20BA0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_243B20BA8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for PhoneContactHeader.CodingKeys()
{
  return &unk_25144C338;
}

Swift::String __swiftcall String.firstLetterCapitalized()()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  void *v3;
  Swift::String result;

  v2 = String.firstLetterCapitalized()(v0, v1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE1D60]);
  result._object = v3;
  result._countAndFlagsBits = v2;
  return result;
}

Swift::String __swiftcall String.firstLetterLowercased()()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  void *v3;
  Swift::String result;

  v2 = String.firstLetterCapitalized()(v0, v1, MEMORY[0x24BEE1D50]);
  result._object = v3;
  result._countAndFlagsBits = v2;
  return result;
}

uint64_t String.firstLetterCapitalized()(uint64_t a1, unint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  swift_bridgeObjectRetain();
  v6 = specialized Collection.prefix(_:)(1);
  v8 = v7;
  v10 = v9;
  v12 = v11;
  swift_bridgeObjectRelease();
  v13 = a3(v6, v8, v10, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  specialized Collection.dropFirst(_:)(1uLL, a1, a2);
  swift_bridgeObjectRelease();
  lazy protocol witness table accessor for type Substring and conformance Substring();
  swift_bridgeObjectRetain();
  String.append<A>(contentsOf:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t String.remove(characters:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  _QWORD v6[4];

  v6[2] = a1;
  swift_bridgeObjectRetain();
  return specialized RangeReplaceableCollection.filter(_:)((uint64_t (*)(_QWORD *))partial apply for closure #1 in String.remove(characters:), (uint64_t)v6, a2, a3);
}

uint64_t specialized RangeReplaceableCollection.filter(_:)(uint64_t (*a1)(_QWORD *), uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v15;
  _QWORD v16[2];
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;

  v19 = a2;
  v17 = 0;
  v18 = 0xE000000000000000;
  if ((a4 & 0x2000000000000000) != 0)
    v6 = HIBYTE(a4) & 0xF;
  else
    v6 = a3 & 0xFFFFFFFFFFFFLL;
  if (v6)
  {
    v9 = 0;
    v15 = a4 & 0xFFFFFFFFFFFFFFLL;
    do
    {
      if ((a4 & 0x1000000000000000) != 0)
      {
        v10 = _StringGuts.foreignErrorCorrectedScalar(startingAt:)();
      }
      else
      {
        if ((a4 & 0x2000000000000000) != 0)
        {
          v16[0] = a3;
          v16[1] = v15;
        }
        else if ((a3 & 0x1000000000000000) == 0)
        {
          _StringObject.sharedUTF8.getter();
        }
        v10 = _decodeScalar(_:startingAt:)();
      }
      v12 = v11;
      LODWORD(v16[0]) = v10;
      v13 = a1(v16);
      if (v4)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      if ((v13 & 1) != 0)
        String.UnicodeScalarView.append(_:)();
      v9 += v12;
    }
    while (v9 < v6);
    swift_bridgeObjectRelease();
    return v17;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t String.lowercasedWithFirstUppercased.getter()
{
  Swift::String v0;
  uint64_t countAndFlagsBits;

  v0 = String.lowercased()();
  swift_bridgeObjectRetain();
  specialized Collection.prefix(_:)(1);
  swift_bridgeObjectRelease();
  countAndFlagsBits = Substring.uppercased()()._countAndFlagsBits;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  specialized Collection.dropFirst(_:)(1uLL, v0._countAndFlagsBits, (unint64_t)v0._object);
  swift_bridgeObjectRelease();
  lazy protocol witness table accessor for type Substring and conformance Substring();
  swift_bridgeObjectRetain();
  String.append<A>(contentsOf:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return countAndFlagsBits;
}

BOOL String.isPhoneNumber.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  Swift::String v11;
  void *v12;
  id v13;
  void (*v14)(char *, uint64_t);
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  _QWORD v22[2];

  v4 = type metadata accessor for CharacterSet();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v22 - v9;
  static CharacterSet.decimalDigits.getter();
  v11._countAndFlagsBits = 757671979;
  v11._object = (void *)0xE400000000000000;
  CharacterSet.insert(charactersIn:)(v11);
  v12 = (void *)objc_opt_self();
  v13 = objc_msgSend(v12, sel_controlCharacterSet);
  static CharacterSet._unconditionallyBridgeFromObjectiveC(_:)();

  CharacterSet.formUnion(_:)();
  v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v8, v4);
  v15 = objc_msgSend(v12, sel_whitespaceAndNewlineCharacterSet);
  static CharacterSet._unconditionallyBridgeFromObjectiveC(_:)();

  CharacterSet.formUnion(_:)();
  v14(v8, v4);
  v22[0] = a1;
  v22[1] = a2;
  lazy protocol witness table accessor for type String and conformance String();
  v22[0] = StringProtocol.components(separatedBy:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
  lazy protocol witness table accessor for type [String] and conformance [A]();
  v16 = BidirectionalCollection<>.joined(separator:)();
  v18 = v17;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v19 = HIBYTE(v18) & 0xF;
  if ((v18 & 0x2000000000000000) == 0)
    v19 = v16 & 0xFFFFFFFFFFFFLL;
  v20 = v19 == 0;
  v14(v10, v4);
  return v20;
}

BOOL partial apply for closure #1 in String.remove(characters:)()
{
  return (CharacterSet.contains(_:)() & 1) == 0;
}

unint64_t lazy protocol witness table accessor for type [String] and conformance [A]()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type [String] and conformance [A];
  if (!lazy protocol witness table cache variable for type [String] and conformance [A])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [String]);
    result = MEMORY[0x249501140](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [String] and conformance [A]);
  }
  return result;
}

uint64_t ContactConfirmationView.contactHeader.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ContactConfirmationView();
  return outlined init with copy of SearchCallHistoryBinaryButtonModel?(v1 + *(int *)(v3 + 24), a1, &demangling cache variable for type metadata for PhoneContactHeader?);
}

uint64_t type metadata accessor for ContactConfirmationView()
{
  uint64_t result;

  result = type metadata singleton initialization cache for ContactConfirmationView;
  if (!type metadata singleton initialization cache for ContactConfirmationView)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t ContactConfirmationView.yesNoConfirmationModel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ContactConfirmationView();
  return outlined init with copy of SearchCallHistoryBinaryButtonModel(v1 + *(int *)(v3 + 28), a1, (uint64_t (*)(_QWORD))type metadata accessor for YesNoConfirmationModel);
}

uint64_t ContactConfirmationView.appId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ContactConfirmationView() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ContactConfirmationView.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ContactConfirmationView() + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ContactConfirmationView.init(confirmationModel:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  _QWORD *v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t result;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  type metadata accessor for Context();
  lazy protocol witness table accessor for type Context and conformance Context();
  *a2 = EnvironmentObject.init()();
  a2[1] = v4;
  v5 = (int *)type metadata accessor for ContactConfirmationView();
  ActionHandler.init()();
  v6 = *(_QWORD *)(a1 + 24);
  v7 = (uint64_t *)((char *)a2 + v5[8]);
  *v7 = *(_QWORD *)(a1 + 16);
  v7[1] = v6;
  v8 = (int *)type metadata accessor for ContactConfirmationModel();
  v9 = a1 + v8[7];
  v10 = *(_QWORD *)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v12 = *(_QWORD *)(v9 + 16);
  v13 = *(_QWORD *)(v9 + 24);
  v14 = *(_QWORD *)(v9 + 40);
  v15 = *(_QWORD *)(v9 + 48);
  v24 = *(_QWORD *)(v9 + 32);
  v23 = *(_QWORD *)(v9 + 56);
  v16 = *(_BYTE *)(v9 + 64);
  v17 = (char *)a2 + v5[6];
  *(_QWORD *)v17 = v10;
  *((_QWORD *)v17 + 1) = v11;
  *((_QWORD *)v17 + 2) = v12;
  *((_QWORD *)v17 + 3) = v13;
  *((_QWORD *)v17 + 4) = v24;
  *((_QWORD *)v17 + 5) = v14;
  *((_QWORD *)v17 + 6) = v15;
  *((_QWORD *)v17 + 7) = v23;
  v17[64] = v16;
  outlined init with copy of SearchCallHistoryBinaryButtonModel(a1 + v8[6], (uint64_t)a2 + v5[7], (uint64_t (*)(_QWORD))type metadata accessor for YesNoConfirmationModel);
  v18 = (uint64_t *)(a1 + v8[8]);
  v19 = v18[1];
  v22 = *v18;
  swift_bridgeObjectRetain();
  outlined copy of PhoneContactHeader?(v10, v11);
  swift_bridgeObjectRetain();
  result = outlined destroy of SingleResultCallHistoryModel(a1, (uint64_t (*)(_QWORD))type metadata accessor for ContactConfirmationModel);
  v21 = (uint64_t *)((char *)a2 + v5[9]);
  *v21 = v22;
  v21[1] = v19;
  return result;
}

uint64_t outlined copy of PhoneContactHeader?(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t ContactConfirmationView.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v1 = type metadata accessor for ContactConfirmationView();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  MEMORY[0x24BDAC7A8](v1);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v0, (uint64_t)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v5 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v6 = swift_allocObject();
  outlined init with take of ContactConfirmationView((uint64_t)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v6 + v5);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(SashStandardView?, SummaryItemTextView?, (<<opaque return type of View.separators(_:isOverride:)>>.0)?, YesNoConfirmationView)>);
  v8 = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type TupleView<(SashStandardView?, SummaryItemTextView?, (<<opaque return type of View.separators(_:isOverride:)>>.0)?, YesNoConfirmationView)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(SashStandardView?, SummaryItemTextView?, (<<opaque return type of View.separators(_:isOverride:)>>.0)?, YesNoConfirmationView)>, MEMORY[0x24BDF5420]);
  return MEMORY[0x24950072C](partial apply for closure #1 in ContactConfirmationView.body.getter, v6, v7, v8);
}

uint64_t closure #1 in ContactConfirmationView.body.getter@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int *v36;
  uint64_t *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int *v81;
  uint64_t result;
  char *v83;
  int *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  void **v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  __int128 v103;
  __int128 v104;
  uint64_t v105;
  __int128 v106;
  __int128 v107;
  uint64_t v108;
  __int128 v109;
  __int128 v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  __int128 v116;
  __int128 v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  int *v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  char v125;

  v97 = a2;
  v92 = type metadata accessor for YesNoConfirmationView();
  v3 = MEMORY[0x24BDAC7A8](v92);
  v98 = (uint64_t)&v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v96 = (char *)&v83 - v5;
  v6 = type metadata accessor for SeparatorStyle();
  v87 = *(_QWORD *)(v6 - 8);
  v88 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v86 = (char *)&v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.separators(_:isOverride:)>>.0);
  v90 = *(_QWORD *)(v8 - 8);
  v91 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v89 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (<<opaque return type of View.separators(_:isOverride:)>>.0)?);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v95 = (uint64_t)&v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v93 = (char *)&v83 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SummaryItemTextView?);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v94 = (uint64_t)&v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v101 = (uint64_t)&v83 - v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Color?);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v83 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v85 = (char *)&v83 - v22;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VisualProperty?);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v83 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for SashStandard.Title();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v29 = (char **)((char *)&v83 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  v30 = type metadata accessor for SashStandard();
  MEMORY[0x24BDAC7A8](v30);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SashStandardView?);
  v32 = MEMORY[0x24BDAC7A8](v31);
  v100 = (uint64_t)&v83 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v32);
  v102 = (uint64_t)&v83 - v34;
  v35 = type metadata accessor for ContactConfirmationView();
  v36 = (int *)v35;
  v37 = (uint64_t *)((char *)a1 + *(int *)(v35 + 32));
  v38 = v37[1];
  v99 = a1;
  if (v38)
  {
    v83 = v21;
    v84 = (int *)v35;
    v39 = *a1;
    if (!*a1)
    {
      type metadata accessor for Context();
      lazy protocol witness table accessor for type Context and conformance Context();
      swift_bridgeObjectRetain();
      result = EnvironmentObject.error()();
      __break(1u);
      return result;
    }
    v40 = *v37;
    swift_bridgeObjectRetain();
    v41 = v39;
    dispatch thunk of Context.currentIdiom.getter();

    if ((VRXIdiom.isCarPlay.getter() & 1) == 0)
    {
      *v29 = v40;
      v29[1] = v38;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v27 + 104))(v29, *MEMORY[0x24BEAB118], v26);
      v43 = type metadata accessor for VisualProperty();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v25, 1, 1, v43);
      v44 = type metadata accessor for Color();
      v45 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56);
      v45(v85, 1, 1, v44);
      v45(v83, 1, 1, v44);
      v118 = 0;
      v116 = 0u;
      v117 = 0u;
      SashStandard.init(title:thumbnail:titleColor:backgroundColor:action:componentName:showOnWatch:)();
      v46 = v102;
      SashStandardView.init(model:)();
      v47 = type metadata accessor for SashStandardView();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v46, 0, 1, v47);
      a1 = v99;
      v36 = v84;
      goto LABEL_7;
    }
    swift_bridgeObjectRelease();
    a1 = v99;
    v36 = v84;
  }
  v42 = type metadata accessor for SashStandardView();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v102, 1, 1, v42);
LABEL_7:
  v48 = (uint64_t *)((char *)a1 + v36[9]);
  v49 = v48[1];
  if (v49)
  {
    v50 = *v48;
    v118 = 0;
    v116 = 0u;
    v117 = 0u;
    v114 = MEMORY[0x24BEE0D00];
    v115 = MEMORY[0x24BEAE5C0];
    v112 = v50;
    v113 = v49;
    v111 = 0;
    v109 = 0u;
    v110 = 0u;
    v108 = 0;
    v106 = 0u;
    v107 = 0u;
    v105 = 0;
    v103 = 0u;
    v104 = 0u;
    swift_bridgeObjectRetain();
    v51 = v101;
    SummaryItemTextView.init(text1:text2:text3:text4:text5:)();
    v52 = type metadata accessor for SummaryItemTextView();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v51, 0, 1, v52);
  }
  else
  {
    v53 = type metadata accessor for SummaryItemTextView();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v101, 1, 1, v53);
  }
  v54 = (char *)a1 + v36[6];
  v55 = *((_QWORD *)v54 + 1);
  if (v55)
  {
    v56 = v54[64];
    v57 = (char *)*((_QWORD *)v54 + 6);
    v58 = *((_QWORD *)v54 + 7);
    v59 = *((_QWORD *)v54 + 5);
    v84 = (int *)*((_QWORD *)v54 + 4);
    v85 = v57;
    v61 = *((_QWORD *)v54 + 2);
    v60 = *((_QWORD *)v54 + 3);
    v62 = *(_QWORD *)v54;
    LODWORD(v83) = v56 & 1;
    type metadata accessor for Context();
    lazy protocol witness table accessor for type Context and conformance Context();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    *(_QWORD *)&v116 = EnvironmentObject.init()();
    *((_QWORD *)&v116 + 1) = v63;
    *(_QWORD *)&v117 = 0x4024000000000000;
    *((_QWORD *)&v117 + 1) = v62;
    v118 = v55;
    v119 = v61;
    v120 = v60;
    v121 = v84;
    v64 = v86;
    v122 = v59;
    v123 = v85;
    v124 = v58;
    v125 = (char)v83;
    v66 = v87;
    v65 = v88;
    (*(void (**)(char *, _QWORD, uint64_t))(v87 + 104))(v86, *MEMORY[0x24BEAB518], v88);
    lazy protocol witness table accessor for type ContactHeaderView and conformance ContactHeaderView();
    v67 = v89;
    View.separators(_:isOverride:)();
    (*(void (**)(char *, uint64_t))(v66 + 8))(v64, v65);
    v68 = (void *)v116;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    a1 = v99;
    v70 = v90;
    v69 = v91;
    v71 = (uint64_t)v93;
    (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v93, v67, v91);
    v72 = 0;
  }
  else
  {
    v72 = 1;
    v71 = (uint64_t)v93;
    v70 = v90;
    v69 = v91;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v70 + 56))(v71, v72, 1, v69);
  v73 = (uint64_t)v96;
  outlined init with copy of SearchCallHistoryBinaryButtonModel((uint64_t)a1 + v36[7], (uint64_t)&v96[*(int *)(v92 + 20)], (uint64_t (*)(_QWORD))type metadata accessor for YesNoConfirmationModel);
  ActionHandler.init()();
  v74 = v100;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v102, v100, &demangling cache variable for type metadata for SashStandardView?);
  v75 = v101;
  v76 = v94;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v101, v94, &demangling cache variable for type metadata for SummaryItemTextView?);
  v77 = v95;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v71, v95, &demangling cache variable for type metadata for (<<opaque return type of View.separators(_:isOverride:)>>.0)?);
  v78 = v98;
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v73, v98, (uint64_t (*)(_QWORD))type metadata accessor for YesNoConfirmationView);
  v79 = v74;
  v80 = v97;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v79, v97, &demangling cache variable for type metadata for SashStandardView?);
  v81 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SashStandardView?, SummaryItemTextView?, (<<opaque return type of View.separators(_:isOverride:)>>.0)?, YesNoConfirmationView));
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v76, v80 + v81[12], &demangling cache variable for type metadata for SummaryItemTextView?);
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v77, v80 + v81[16], &demangling cache variable for type metadata for (<<opaque return type of View.separators(_:isOverride:)>>.0)?);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v78, v80 + v81[20], (uint64_t (*)(_QWORD))type metadata accessor for YesNoConfirmationView);
  outlined destroy of SingleResultCallHistoryModel(v73, (uint64_t (*)(_QWORD))type metadata accessor for YesNoConfirmationView);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v71, &demangling cache variable for type metadata for (<<opaque return type of View.separators(_:isOverride:)>>.0)?);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v75, &demangling cache variable for type metadata for SummaryItemTextView?);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v102, &demangling cache variable for type metadata for SashStandardView?);
  outlined destroy of SingleResultCallHistoryModel(v78, (uint64_t (*)(_QWORD))type metadata accessor for YesNoConfirmationView);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v77, &demangling cache variable for type metadata for (<<opaque return type of View.separators(_:isOverride:)>>.0)?);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v76, &demangling cache variable for type metadata for SummaryItemTextView?);
  return outlined destroy of SearchCallHistoryBinaryButtonModel?(v100, &demangling cache variable for type metadata for SashStandardView?);
}

uint64_t outlined init with take of ContactConfirmationView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ContactConfirmationView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t associated type witness table accessor for View.Body : View in ContactConfirmationView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t protocol witness for View.body.getter in conformance ContactConfirmationView(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  MEMORY[0x24BDAC7A8](a1);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v1, (uint64_t)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for ContactConfirmationView);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  outlined init with take of ContactConfirmationView((uint64_t)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v5 + v4);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(SashStandardView?, SummaryItemTextView?, (<<opaque return type of View.separators(_:isOverride:)>>.0)?, YesNoConfirmationView)>);
  v7 = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type TupleView<(SashStandardView?, SummaryItemTextView?, (<<opaque return type of View.separators(_:isOverride:)>>.0)?, YesNoConfirmationView)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(SashStandardView?, SummaryItemTextView?, (<<opaque return type of View.separators(_:isOverride:)>>.0)?, YesNoConfirmationView)>, MEMORY[0x24BDF5420]);
  return MEMORY[0x24950072C](partial apply for closure #1 in ContactConfirmationView.body.getter, v5, v6, v7);
}

char *initializeBufferWithCopyOfBuffer for ContactConfirmationView(char *a1, char **a2, int *a3)
{
  int v3;
  char *v4;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  char *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  _QWORD *v40;
  uint64_t v41;
  char *v42;
  _QWORD *v43;
  uint64_t v44;
  void (*v46)(char *, uint64_t, uint64_t);
  int *v47;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v7 = a1;
    *((_QWORD *)a1 + 1) = a2[1];
    v8 = a3[5];
    v9 = &a1[v8];
    v10 = (uint64_t)a2 + v8;
    v11 = type metadata accessor for ActionHandler();
    v12 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v13 = v4;
    v12(v9, v10, v11);
    v14 = a3[6];
    v15 = &v7[v14];
    v16 = (uint64_t)a2 + v14;
    v17 = *(_QWORD *)(v16 + 8);
    if (v17)
    {
      *(_QWORD *)v15 = *(_QWORD *)v16;
      *((_QWORD *)v15 + 1) = v17;
      v18 = *(_QWORD *)(v16 + 24);
      *((_QWORD *)v15 + 2) = *(_QWORD *)(v16 + 16);
      *((_QWORD *)v15 + 3) = v18;
      v19 = *(_QWORD *)(v16 + 40);
      *((_QWORD *)v15 + 4) = *(_QWORD *)(v16 + 32);
      *((_QWORD *)v15 + 5) = v19;
      v20 = *(_QWORD *)(v16 + 56);
      *((_QWORD *)v15 + 6) = *(_QWORD *)(v16 + 48);
      *((_QWORD *)v15 + 7) = v20;
      v15[64] = *(_BYTE *)(v16 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v21 = *(_OWORD *)(v16 + 48);
      *((_OWORD *)v15 + 2) = *(_OWORD *)(v16 + 32);
      *((_OWORD *)v15 + 3) = v21;
      v15[64] = *(_BYTE *)(v16 + 64);
      v22 = *(_OWORD *)(v16 + 16);
      *(_OWORD *)v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v22;
    }
    v23 = a3[7];
    v24 = &v7[v23];
    v25 = (uint64_t)a2 + v23;
    v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    v46 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
    v46(v24, v25, v26);
    v27 = (int *)type metadata accessor for YesNoConfirmationModel();
    v28 = v27[5];
    v29 = &v24[v28];
    v30 = v25 + v28;
    v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    v47 = a3;
    v32 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
    v32(v29, v30, v31);
    v46(&v24[v27[6]], v25 + v27[6], v26);
    v32(&v24[v27[7]], v25 + v27[7], v31);
    v33 = v27[8];
    v34 = &v24[v33];
    v35 = (_QWORD *)(v25 + v33);
    v36 = v35[1];
    *(_QWORD *)v34 = *v35;
    *((_QWORD *)v34 + 1) = v36;
    v37 = v47[8];
    v38 = v47[9];
    v39 = &v7[v37];
    v40 = (char **)((char *)a2 + v37);
    v41 = v40[1];
    *(_QWORD *)v39 = *v40;
    *((_QWORD *)v39 + 1) = v41;
    v42 = &v7[v38];
    v43 = (char **)((char *)a2 + v38);
    v44 = v43[1];
    *(_QWORD *)v42 = *v43;
    *((_QWORD *)v42 + 1) = v44;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t destroy for ContactConfirmationView(id *a1, int *a2)
{
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t);
  int *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t);

  v4 = (char *)a1 + a2[5];
  v5 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  if (*(id *)((char *)a1 + a2[6] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v6 = (char *)a1 + a2[7];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v8 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v8(v6, v7);
  v9 = (int *)type metadata accessor for YesNoConfirmationModel();
  v10 = &v6[v9[5]];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v12 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8);
  v12(v10, v11);
  v8(&v6[v9[6]], v7);
  v12(&v6[v9[7]], v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ContactConfirmationView(_QWORD *a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  id v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  int *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  char *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v47;
  int *v48;

  v7 = *(void **)a2;
  v6 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v6;
  v8 = a3[5];
  v9 = (char *)a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for ActionHandler();
  v12 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  v13 = v7;
  v12(v9, v10, v11);
  v14 = a3[6];
  v15 = (char *)a1 + v14;
  v16 = a2 + v14;
  v17 = *(_QWORD *)(v16 + 8);
  if (v17)
  {
    *(_QWORD *)v15 = *(_QWORD *)v16;
    *((_QWORD *)v15 + 1) = v17;
    v18 = *(_QWORD *)(v16 + 24);
    *((_QWORD *)v15 + 2) = *(_QWORD *)(v16 + 16);
    *((_QWORD *)v15 + 3) = v18;
    v19 = *(_QWORD *)(v16 + 40);
    *((_QWORD *)v15 + 4) = *(_QWORD *)(v16 + 32);
    *((_QWORD *)v15 + 5) = v19;
    v20 = *(_QWORD *)(v16 + 56);
    *((_QWORD *)v15 + 6) = *(_QWORD *)(v16 + 48);
    *((_QWORD *)v15 + 7) = v20;
    v15[64] = *(_BYTE *)(v16 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v21 = *(_OWORD *)(v16 + 48);
    *((_OWORD *)v15 + 2) = *(_OWORD *)(v16 + 32);
    *((_OWORD *)v15 + 3) = v21;
    v15[64] = *(_BYTE *)(v16 + 64);
    v22 = *(_OWORD *)(v16 + 16);
    *(_OWORD *)v15 = *(_OWORD *)v16;
    *((_OWORD *)v15 + 1) = v22;
  }
  v23 = a3[7];
  v24 = (char *)a1 + v23;
  v25 = a2 + v23;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v48 = a3;
  v27 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
  v27(v24, v25, v26);
  v28 = (int *)type metadata accessor for YesNoConfirmationModel();
  v29 = v28[5];
  v30 = &v24[v29];
  v31 = v25 + v29;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v47 = a2;
  v33 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 16);
  v33(v30, v31, v32);
  v27(&v24[v28[6]], v25 + v28[6], v26);
  v33(&v24[v28[7]], v25 + v28[7], v32);
  v34 = v28[8];
  v35 = &v24[v34];
  v36 = (_QWORD *)(v25 + v34);
  v37 = v36[1];
  *(_QWORD *)v35 = *v36;
  *((_QWORD *)v35 + 1) = v37;
  v38 = v48[8];
  v39 = v48[9];
  v40 = (_QWORD *)((char *)a1 + v38);
  v41 = (_QWORD *)(v47 + v38);
  v42 = v41[1];
  *v40 = *v41;
  v40[1] = v42;
  v43 = (_QWORD *)((char *)a1 + v39);
  v44 = (_QWORD *)(v47 + v39);
  v45 = v44[1];
  *v43 = *v44;
  v43[1] = v45;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ContactConfirmationView(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v45;
  int *v46;

  v6 = *(void **)a1;
  v7 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v7;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v9 = a3[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v13 = a3[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = *(_QWORD *)(a1 + v13 + 8);
  v17 = *(_QWORD *)(a2 + v13 + 8);
  if (v16)
  {
    if (v17)
    {
      *(_QWORD *)v14 = *(_QWORD *)v15;
      *(_QWORD *)(v14 + 8) = *(_QWORD *)(v15 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v14 + 16) = *(_QWORD *)(v15 + 16);
      *(_QWORD *)(v14 + 24) = *(_QWORD *)(v15 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v14 + 32) = *(_QWORD *)(v15 + 32);
      *(_QWORD *)(v14 + 40) = *(_QWORD *)(v15 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v14 + 48) = *(_QWORD *)(v15 + 48);
      *(_QWORD *)(v14 + 56) = *(_QWORD *)(v15 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v14 + 64) = *(_BYTE *)(v15 + 64);
    }
    else
    {
      outlined destroy of PhoneContactHeader(v14);
      *(_OWORD *)v14 = *(_OWORD *)v15;
      v19 = *(_OWORD *)(v15 + 32);
      v18 = *(_OWORD *)(v15 + 48);
      v20 = *(_OWORD *)(v15 + 16);
      *(_BYTE *)(v14 + 64) = *(_BYTE *)(v15 + 64);
      *(_OWORD *)(v14 + 32) = v19;
      *(_OWORD *)(v14 + 48) = v18;
      *(_OWORD *)(v14 + 16) = v20;
    }
  }
  else if (v17)
  {
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *(_QWORD *)(v14 + 8) = *(_QWORD *)(v15 + 8);
    *(_QWORD *)(v14 + 16) = *(_QWORD *)(v15 + 16);
    *(_QWORD *)(v14 + 24) = *(_QWORD *)(v15 + 24);
    *(_QWORD *)(v14 + 32) = *(_QWORD *)(v15 + 32);
    *(_QWORD *)(v14 + 40) = *(_QWORD *)(v15 + 40);
    *(_QWORD *)(v14 + 48) = *(_QWORD *)(v15 + 48);
    *(_QWORD *)(v14 + 56) = *(_QWORD *)(v15 + 56);
    *(_BYTE *)(v14 + 64) = *(_BYTE *)(v15 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v14 = *(_OWORD *)v15;
    v21 = *(_OWORD *)(v15 + 16);
    v22 = *(_OWORD *)(v15 + 32);
    v23 = *(_OWORD *)(v15 + 48);
    *(_BYTE *)(v14 + 64) = *(_BYTE *)(v15 + 64);
    *(_OWORD *)(v14 + 32) = v22;
    *(_OWORD *)(v14 + 48) = v23;
    *(_OWORD *)(v14 + 16) = v21;
  }
  v24 = a3[7];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v46 = a3;
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 24);
  v28(v25, v26, v27);
  v29 = (int *)type metadata accessor for YesNoConfirmationModel();
  v30 = v29[5];
  v31 = v25 + v30;
  v32 = v26 + v30;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v45 = a2;
  v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 24);
  v34(v31, v32, v33);
  v28(v25 + v29[6], v26 + v29[6], v27);
  v34(v25 + v29[7], v26 + v29[7], v33);
  v35 = v29[8];
  v36 = (_QWORD *)(v25 + v35);
  v37 = (_QWORD *)(v26 + v35);
  *v36 = *v37;
  v36[1] = v37[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v38 = v46[8];
  v39 = (_QWORD *)(a1 + v38);
  v40 = (_QWORD *)(v45 + v38);
  *v39 = *v40;
  v39[1] = v40[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v41 = v46[9];
  v42 = (_QWORD *)(a1 + v41);
  v43 = (_QWORD *)(v45 + v41);
  *v42 = *v43;
  v42[1] = v43[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for ContactConfirmationView(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  __int128 v14;
  __int128 v15;
  char *v16;
  char *v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  void (*v27)(char *, char *, uint64_t);
  int *v28;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v28 = a3;
  v10 = a3[6];
  v11 = a3[7];
  v12 = (char *)a1 + v10;
  v13 = (char *)a2 + v10;
  v12[64] = v13[64];
  v14 = *((_OWORD *)v13 + 3);
  *((_OWORD *)v12 + 2) = *((_OWORD *)v13 + 2);
  *((_OWORD *)v12 + 3) = v14;
  v15 = *((_OWORD *)v13 + 1);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v15;
  v16 = (char *)a1 + v11;
  v17 = (char *)a2 + v11;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32);
  v27(v16, v17, v18);
  v19 = (int *)type metadata accessor for YesNoConfirmationModel();
  v20 = v19[5];
  v21 = &v16[v20];
  v22 = &v17[v20];
  v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32);
  v24(v21, v22, v23);
  v27(&v16[v19[6]], &v17[v19[6]], v18);
  v24(&v16[v19[7]], &v17[v19[7]], v23);
  *(_OWORD *)&v16[v19[8]] = *(_OWORD *)&v17[v19[8]];
  v25 = v28[9];
  *(_OWORD *)((char *)a1 + v28[8]) = *(_OWORD *)((char *)a2 + v28[8]);
  *(_OWORD *)((char *)a1 + v25) = *(_OWORD *)((char *)a2 + v25);
  return a1;
}

uint64_t assignWithTake for ContactConfirmationView(uint64_t a1, _QWORD *a2, int *a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(uint64_t, char *, uint64_t);
  int *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(uint64_t, char *, uint64_t);
  uint64_t v31;
  _QWORD *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v47;
  int *v48;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  *(_QWORD *)(a1 + 8) = a2[1];
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = (char *)a2 + v11;
  if (!*(_QWORD *)(a1 + v11 + 8))
    goto LABEL_5;
  v14 = *((_QWORD *)v13 + 1);
  if (!v14)
  {
    outlined destroy of PhoneContactHeader(v12);
LABEL_5:
    v18 = *((_OWORD *)v13 + 3);
    *(_OWORD *)(v12 + 32) = *((_OWORD *)v13 + 2);
    *(_OWORD *)(v12 + 48) = v18;
    *(_BYTE *)(v12 + 64) = v13[64];
    v19 = *((_OWORD *)v13 + 1);
    *(_OWORD *)v12 = *(_OWORD *)v13;
    *(_OWORD *)(v12 + 16) = v19;
    goto LABEL_6;
  }
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_QWORD *)(v12 + 8) = v14;
  swift_bridgeObjectRelease();
  v15 = *((_QWORD *)v13 + 3);
  *(_QWORD *)(v12 + 16) = *((_QWORD *)v13 + 2);
  *(_QWORD *)(v12 + 24) = v15;
  swift_bridgeObjectRelease();
  v16 = *((_QWORD *)v13 + 5);
  *(_QWORD *)(v12 + 32) = *((_QWORD *)v13 + 4);
  *(_QWORD *)(v12 + 40) = v16;
  swift_bridgeObjectRelease();
  v17 = *((_QWORD *)v13 + 7);
  *(_QWORD *)(v12 + 48) = *((_QWORD *)v13 + 6);
  *(_QWORD *)(v12 + 56) = v17;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 64) = v13[64];
LABEL_6:
  v20 = a3[7];
  v21 = a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v48 = a3;
  v24 = *(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 40);
  v24(v21, v22, v23);
  v25 = (int *)type metadata accessor for YesNoConfirmationModel();
  v26 = v25[5];
  v27 = v21 + v26;
  v28 = &v22[v26];
  v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v47 = a2;
  v30 = *(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 40);
  v30(v27, v28, v29);
  v24(v21 + v25[6], &v22[v25[6]], v23);
  v30(v21 + v25[7], &v22[v25[7]], v29);
  v31 = v25[8];
  v32 = (_QWORD *)(v21 + v31);
  v33 = &v22[v31];
  v35 = *(_QWORD *)v33;
  v34 = *((_QWORD *)v33 + 1);
  *v32 = v35;
  v32[1] = v34;
  swift_bridgeObjectRelease();
  v36 = v48[8];
  v37 = (_QWORD *)(a1 + v36);
  v38 = (_QWORD *)((char *)v47 + v36);
  v40 = *v38;
  v39 = v38[1];
  *v37 = v40;
  v37[1] = v39;
  swift_bridgeObjectRelease();
  v41 = v48[9];
  v42 = (_QWORD *)(a1 + v41);
  v43 = (_QWORD *)((char *)v47 + v41);
  v45 = *v43;
  v44 = v43[1];
  *v42 = v45;
  v42[1] = v44;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ContactConfirmationView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_243B22C98(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = type metadata accessor for ActionHandler();
    v10 = *(_QWORD *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v9;
      v12 = *(int *)(a3 + 20);
    }
    else
    {
      v11 = type metadata accessor for YesNoConfirmationModel();
      v10 = *(_QWORD *)(v11 - 8);
      v12 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(&a1[v12], a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for ContactConfirmationView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_243B22D50(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)result = a2;
  }
  else
  {
    v8 = type metadata accessor for ActionHandler();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = type metadata accessor for YesNoConfirmationModel();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

uint64_t type metadata completion function for ContactConfirmationView()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for ActionHandler();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for YesNoConfirmationModel();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_243B22E88()
{
  return lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type ComponentStack<TupleView<(SashStandardView?, SummaryItemTextView?, (<<opaque return type of View.separators(_:isOverride:)>>.0)?, YesNoConfirmationView)>> and conformance ComponentStack<A>, &demangling cache variable for type metadata for ComponentStack<TupleView<(SashStandardView?, SummaryItemTextView?, (<<opaque return type of View.separators(_:isOverride:)>>.0)?, YesNoConfirmationView)>>, MEMORY[0x24BEADBF8]);
}

uint64_t objectdestroyTm_9()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  id *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t);
  int *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t);

  v1 = (int *)type metadata accessor for ContactConfirmationView();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = (id *)(v0 + ((v2 + 16) & ~v2));

  v4 = (char *)v3 + v1[5];
  v5 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  if (*(id *)((char *)v3 + v1[6] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v6 = (char *)v3 + v1[7];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v8 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v8(v6, v7);
  v9 = (int *)type metadata accessor for YesNoConfirmationModel();
  v10 = &v6[v9[5]];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v12 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8);
  v12(v10, v11);
  v8(&v6[v9[6]], v7);
  v12(&v6[v9[7]], v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ContactConfirmationView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ContactConfirmationView() - 8) + 80);
  return closure #1 in ContactConfirmationView.body.getter((void **)(v1 + ((v3 + 16) & ~v3)), a1);
}

uint64_t AppDisambiguationViewSMART.model.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AppDisambiguationViewSMART() + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for AppDisambiguationViewSMART()
{
  uint64_t result;

  result = type metadata singleton initialization cache for AppDisambiguationViewSMART;
  if (!type metadata singleton initialization cache for AppDisambiguationViewSMART)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t AppDisambiguationViewSMART.init(model:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _QWORD *v11;

  type metadata accessor for Context();
  lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
  *a4 = EnvironmentObject.init()();
  a4[1] = v8;
  v9 = type metadata accessor for AppDisambiguationViewSMART();
  result = ActionHandler.init()();
  v11 = (uint64_t *)((char *)a4 + *(int *)(v9 + 24));
  *v11 = a1;
  v11[1] = a2;
  v11[2] = a3;
  return result;
}

uint64_t AppDisambiguationViewSMART.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _OWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = v1;
  v4 = type metadata accessor for AppDisambiguationViewSMART();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v7 = type metadata accessor for DisambiguationTitle();
  MEMORY[0x24BDAC7A8](v7);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationView<ForEachWithIndex<[AppDescription], ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>>>);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v2 + *(int *)(v4 + 24);
  v14 = *(_QWORD *)(v12 + 8);
  v13 = *(_QWORD *)(v12 + 16);
  v24 = MEMORY[0x24BEE0D00];
  v25 = MEMORY[0x24BEAE5C0];
  if (v13)
    v15 = v14;
  else
    v15 = 0;
  v16 = 0xE000000000000000;
  if (v13)
    v16 = v13;
  v22 = v15;
  v23 = v16;
  v21 = 0;
  memset(v20, 0, sizeof(v20));
  swift_bridgeObjectRetain();
  DisambiguationTitle.init(text1:thumbnail:)();
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v2, (uint64_t)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for AppDisambiguationViewSMART);
  v17 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v18 = swift_allocObject();
  outlined init with take of AppDisambiguationViewSMART((uint64_t)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ForEachWithIndex<[AppDescription], ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>>);
  lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type ForEachWithIndex<[AppDescription], ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>> and conformance ForEachWithIndex<A, B>, &demangling cache variable for type metadata for ForEachWithIndex<[AppDescription], ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>>, (uint64_t)&protocol conformance descriptor for ForEachWithIndex<A, B>);
  DisambiguationView.init(title:content:)();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a1, v11, v8);
}

uint64_t closure #1 in AppDisambiguationViewSMART.body.getter@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v4 = type metadata accessor for AppDisambiguationViewSMART();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_QWORD *)(a1 + *(int *)(MEMORY[0x24BDAC7A8](v4) + 24));
  outlined init with copy of SearchCallHistoryBinaryButtonModel(a1, (uint64_t)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  v9 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v10 = swift_allocObject();
  outlined init with take of AppDisambiguationViewSMART((uint64_t)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9);
  *a2 = v7;
  a2[1] = partial apply for closure #1 in closure #1 in AppDisambiguationViewSMART.body.getter;
  a2[2] = v10;
  return swift_bridgeObjectRetain();
}

uint64_t outlined init with take of AppDisambiguationViewSMART(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AppDisambiguationViewSMART();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t partial apply for closure #1 in AppDisambiguationViewSMART.body.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AppDisambiguationViewSMART() - 8) + 80);
  return closure #1 in AppDisambiguationViewSMART.body.getter(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t associated type witness table accessor for View.Body : View in AppDisambiguationViewSMART()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t closure #1 in closure #1 in AppDisambiguationViewSMART.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, id *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  char v22;
  unsigned int *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v37 = a1;
  v38 = a4;
  v35 = type metadata accessor for SeparatorStyle();
  v6 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for AppDescriptionView();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t *)((char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.separators(_:isOverride:)>>.0);
  v34 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>);
  MEMORY[0x24BDAC7A8](v33);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(a2, (uint64_t)v11 + v9[6], (uint64_t (*)(_QWORD))type metadata accessor for AppDescription);
  v16 = (char *)v11 + v9[7];
  v17 = *MEMORY[0x24BEAAC20];
  v18 = type metadata accessor for ImageElement.ImageStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v16, v17, v18);
  type metadata accessor for Context();
  lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
  *v11 = EnvironmentObject.init()();
  v11[1] = v19;
  ActionHandler.init()();
  v20 = (char *)v11 + v9[8];
  *(_QWORD *)v20 = 0;
  v20[8] = 1;
  if (*a3)
  {
    v21 = *a3;
    dispatch thunk of Context.currentIdiom.getter();
    v22 = VRXIdiom.isCarPlay.getter();
    v23 = (unsigned int *)MEMORY[0x24BEAB508];
    if ((v22 & 1) == 0)
      v23 = (unsigned int *)MEMORY[0x24BEAB4F0];
    v24 = v35;
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *v23, v35);

    lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type AppDescriptionView and conformance AppDescriptionView, (uint64_t (*)(uint64_t))type metadata accessor for AppDescriptionView, (uint64_t)&protocol conformance descriptor for AppDescriptionView);
    View.separators(_:isOverride:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v24);
    outlined destroy of AppDescriptionView((uint64_t)v11);
    v25 = v37 == 0;
    v26 = EnvironmentObject.init()();
    v28 = v27;
    v29 = v34;
    v30 = v36;
    (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v15, v13, v36);
    v31 = &v15[*(int *)(v33 + 36)];
    *(_QWORD *)v31 = v26;
    *((_QWORD *)v31 + 1) = v28;
    v31[16] = v25;
    (*(void (**)(char *, uint64_t))(v29 + 8))(v13, v30);
    return outlined init with take of ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>((uint64_t)v15, v38);
  }
  else
  {
    result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AppDisambiguationViewSMART()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_243B23800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for ActionHandler();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for AppDisambiguationViewSMART()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_243B2388C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for ActionHandler();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t type metadata completion function for AppDisambiguationViewSMART()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ActionHandler();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_243B23984()
{
  return lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type DisambiguationView<ForEachWithIndex<[AppDescription], ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>>> and conformance DisambiguationView<A>, &demangling cache variable for type metadata for DisambiguationView<ForEachWithIndex<[AppDescription], ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>>>, MEMORY[0x24BEADE48]);
}

uint64_t objectdestroyTm_10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id *v3;
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for AppDisambiguationViewSMART();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (id *)(v0 + ((v2 + 16) & ~v2));

  v4 = (char *)v3 + *(int *)(v1 + 20);
  v5 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in AppDisambiguationViewSMART.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AppDisambiguationViewSMART() - 8) + 80);
  return closure #1 in closure #1 in AppDisambiguationViewSMART.body.getter(a1, a2, (id *)(v3 + ((v7 + 16) & ~v7)), a3);
}

uint64_t ListBottomView.init(text:action:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _QWORD *v11;

  type metadata accessor for Context();
  lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
  *a4 = EnvironmentObject.init()();
  a4[1] = v8;
  v9 = type metadata accessor for ListBottomView();
  result = ActionHandler.init()();
  v11 = (uint64_t *)((char *)a4 + *(int *)(v9 + 24));
  *v11 = a1;
  v11[1] = a2;
  *(uint64_t *)((char *)a4 + *(int *)(v9 + 28)) = a3;
  return result;
}

uint64_t type metadata accessor for ListBottomView()
{
  uint64_t result;

  result = type metadata singleton initialization cache for ListBottomView;
  if (!type metadata singleton initialization cache for ListBottomView)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t key path getter for EnvironmentValues.imageElementImageStyle : EnvironmentValues()
{
  return EnvironmentValues.imageElementImageStyle.getter();
}

uint64_t key path setter for EnvironmentValues.imageElementImageStyle : EnvironmentValues(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ImageElement.ImageStyle?);
  MEMORY[0x24BDAC7A8](v2);
  outlined init with copy of ImageElement.ImageStyle?(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  return EnvironmentValues.imageElementImageStyle.setter();
}

uint64_t ListBottomView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  v50 = a1;
  v2 = type metadata accessor for ListBottomView();
  v3 = *(_QWORD *)(*(_QWORD *)(v2 - 8) + 64);
  v48 = *(_QWORD *)(v2 - 8);
  v49 = v3;
  MEMORY[0x24BDAC7A8](v2);
  v47 = (uint64_t)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = type metadata accessor for Material();
  v44 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v42 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = type metadata accessor for SimpleItemRichView();
  v43 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v40 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<SimpleItemRichView, _BackgroundStyleModifier<Material>>);
  MEMORY[0x24BDAC7A8](v41);
  v39 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t *)(v1 + *(int *)(v2 + 24));
  v9 = v8[1];
  v75 = *v8;
  v76 = v9;
  lazy protocol witness table accessor for type String and conformance String();
  swift_bridgeObjectRetain();
  v10 = Text.init<A>(_:)();
  v12 = v11;
  v14 = v13 & 1;
  LODWORD(v75) = static HierarchicalShapeStyle.secondary.getter();
  v15 = Text.foregroundStyle<A>(_:)();
  v17 = v16;
  v19 = v18;
  v21 = v20;
  outlined consume of Text.Storage(v10, v12, v14);
  swift_bridgeObjectRelease();
  v77 = MEMORY[0x24BDF1FA0];
  v78 = MEMORY[0x24BEAD6B8];
  v22 = swift_allocObject();
  v75 = v22;
  *(_QWORD *)(v22 + 16) = v15;
  *(_QWORD *)(v22 + 24) = v17;
  *(_BYTE *)(v22 + 32) = v19 & 1;
  *(_QWORD *)(v22 + 40) = v21;
  v74 = 0;
  v72 = 0u;
  v73 = 0u;
  v71 = 0;
  v69 = 0u;
  v70 = 0u;
  v68 = 0;
  v66 = 0u;
  v67 = 0u;
  v65 = 0;
  v63 = 0u;
  v64 = 0u;
  v62 = 0;
  v60 = 0u;
  v61 = 0u;
  v59 = 0;
  v57 = 0u;
  v58 = 0u;
  v56 = 0;
  v54 = 0u;
  v55 = 0u;
  v23 = v1;
  v24 = ListBottomView.appIconView.getter();
  v52 = MEMORY[0x24BDF4788];
  v53 = MEMORY[0x24BEAD940];
  v51 = v24;
  v25 = v40;
  SimpleItemRichView.init(text1:text2:text3:text4:text5:text6:text7:text8:thumbnail:)();
  v26 = v42;
  static Material.thick.getter();
  v27 = static Edge.Set.all.getter();
  v28 = (uint64_t)v39;
  v29 = &v39[*(int *)(v41 + 36)];
  v30 = v44;
  v31 = v46;
  (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v29, v26, v46);
  v29[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _BackgroundStyleModifier<Material>)
             + 36)] = v27;
  v32 = v43;
  v33 = v45;
  (*(void (**)(uint64_t, char *, uint64_t))(v43 + 16))(v28, v25, v45);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v26, v31);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v25, v33);
  v34 = v47;
  outlined init with copy of ListBottomView(v23, v47);
  v35 = (*(unsigned __int8 *)(v48 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
  v36 = swift_allocObject();
  outlined init with take of ListBottomView(v34, v36 + v35);
  lazy protocol witness table accessor for type ModifiedContent<SimpleItemRichView, _BackgroundStyleModifier<Material>> and conformance <> ModifiedContent<A, B>();
  View.componentTapped(isNavigation:perform:)();
  swift_release();
  return outlined destroy of SearchCallHistoryBinaryButtonModel?(v28, &demangling cache variable for type metadata for ModifiedContent<SimpleItemRichView, _BackgroundStyleModifier<Material>>);
}

uint64_t sub_243B23FEC()
{
  uint64_t v0;

  outlined consume of Text.Storage(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t ListBottomView.appIconView.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t KeyPath;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ImageElement.ImageStyle?);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v26 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for ImageElement.ImageStyle();
  v27 = *(_QWORD *)(v3 - 8);
  v4 = v27;
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ImageElement();
  MEMORY[0x24BDAC7A8](v7);
  v8 = type metadata accessor for ImageElementView();
  v30 = *(_QWORD *)(v8 - 8);
  v31 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>);
  MEMORY[0x24BDAC7A8](v29);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *MEMORY[0x24BEAABB0];
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  v28(v6, v13, v3);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<_ProtoIdiom>);
  v14 = type metadata accessor for _ProtoIdiom();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_243B32430;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v15 + 104))(v17 + v16, *MEMORY[0x24BEAA998], v14);
  specialized Set.init(_nonEmptyArrayLiteral:)(v17);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  static ImageElement.appIcon(_:imageStyle:idioms:)();
  swift_bridgeObjectRelease();
  v18 = v27;
  (*(void (**)(char *, uint64_t))(v27 + 8))(v6, v3);
  ImageElementView.init(_:)();
  KeyPath = swift_getKeyPath();
  v28(v2, *MEMORY[0x24BEAAC18], v3);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v2, 0, 1, v3);
  v20 = (uint64_t *)&v12[*(int *)(v29 + 36)];
  v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>);
  outlined init with copy of ImageElement.ImageStyle?((uint64_t)v2, (uint64_t)v20 + *(int *)(v21 + 28));
  *v20 = KeyPath;
  v23 = v30;
  v22 = v31;
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v12, v10, v31);
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v2, &demangling cache variable for type metadata for ImageElement.ImageStyle?);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v22);
  lazy protocol witness table accessor for type ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>> and conformance <> ModifiedContent<A, B>();
  v24 = View.eraseToAnyView()();
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v12, &demangling cache variable for type metadata for ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>);
  return v24;
}

uint64_t closure #1 in ListBottomView.body.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *boxed_opaque_existential_1;
  void *v17;
  id v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for InteractionType?);
  MEMORY[0x24BDAC7A8](v2);
  v30 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionProperty?);
  MEMORY[0x24BDAC7A8](v4);
  v29 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ActionProperty();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionElementConvertible>);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_243B32430;
  v14 = type metadata accessor for Command();
  v15 = MEMORY[0x24BEAD1E8];
  *(_QWORD *)(v13 + 56) = v14;
  *(_QWORD *)(v13 + 64) = v15;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v13 + 32));
  v17 = *(void **)(a1 + *(int *)(type metadata accessor for ListBottomView() + 28));
  *boxed_opaque_existential_1 = (uint64_t)v17;
  *((_BYTE *)boxed_opaque_existential_1 + 8) = 0;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x24BEAD188], v14);
  v18 = v17;
  ActionProperty.init(_:)();
  if (one-time initialization token for phoneSnippetUI != -1)
    swift_once();
  v19 = type metadata accessor for Logger();
  __swift_project_value_buffer(v19, (uint64_t)static Logger.phoneSnippetUI);
  v20 = Logger.logObject.getter();
  v21 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v22 = 0;
    _os_log_impl(&dword_243ABD000, v20, v21, "#Show call history ListBottomView performing direct action", v22, 2u);
    MEMORY[0x2495011B8](v22, -1, -1);
  }

  ActionHandler.wrappedValue.getter();
  v23 = type metadata accessor for StandardActionHandler();
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v8, 1, v23) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v8, &demangling cache variable for type metadata for StandardActionHandler?);
  }
  else
  {
    v26 = (uint64_t)v29;
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v29, v12, v9);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(v26, 0, 1, v9);
    v27 = type metadata accessor for InteractionType();
    v28 = (uint64_t)v30;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v30, 1, 1, v27);
    StandardActionHandler.perform(_:interactionType:)();
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v28, &demangling cache variable for type metadata for InteractionType?);
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v26, &demangling cache variable for type metadata for ActionProperty?);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v8, v23);
  }
}

uint64_t outlined init with copy of ListBottomView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ListBottomView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_243B24728()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id *v3;
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for ListBottomView();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (id *)(v0 + ((v2 + 16) & ~v2));

  v4 = (char *)v3 + *(int *)(v1 + 20);
  v5 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t outlined init with take of ListBottomView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ListBottomView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t partial apply for closure #1 in ListBottomView.body.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ListBottomView() - 8) + 80);
  return closure #1 in ListBottomView.body.getter(v0 + ((v1 + 16) & ~v1));
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<SimpleItemRichView, _BackgroundStyleModifier<Material>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<SimpleItemRichView, _BackgroundStyleModifier<Material>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<SimpleItemRichView, _BackgroundStyleModifier<Material>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<SimpleItemRichView, _BackgroundStyleModifier<Material>>);
    v2[0] = lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type SimpleItemRichView and conformance SimpleItemRichView, (uint64_t (*)(uint64_t))MEMORY[0x24BEADE98], MEMORY[0x24BEADE78]);
    v2[1] = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type _BackgroundStyleModifier<Material> and conformance _BackgroundStyleModifier<A>, &demangling cache variable for type metadata for _BackgroundStyleModifier<Material>, MEMORY[0x24BDF06D8]);
    result = MEMORY[0x249501140](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<SimpleItemRichView, _BackgroundStyleModifier<Material>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in ListBottomView()
{
  return swift_getOpaqueTypeConformance2();
}

char *initializeBufferWithCopyOfBuffer for ListBottomView(char *a1, char **a2, int *a3)
{
  int v3;
  char *v4;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  uint64_t v18;
  void *v19;
  id v20;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v7 = a1;
    *((_QWORD *)a1 + 1) = a2[1];
    v8 = a3[5];
    v9 = &a1[v8];
    v10 = (uint64_t)a2 + v8;
    v11 = type metadata accessor for ActionHandler();
    v12 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v13 = v4;
    v12(v9, v10, v11);
    v14 = a3[6];
    v15 = a3[7];
    v16 = &v7[v14];
    v17 = (char **)((char *)a2 + v14);
    v18 = v17[1];
    *(_QWORD *)v16 = *v17;
    *((_QWORD *)v16 + 1) = v18;
    v19 = *(char **)((char *)a2 + v15);
    *(_QWORD *)&v7[v15] = v19;
    swift_bridgeObjectRetain();
    v20 = v19;
  }
  return v7;
}

void destroy for ListBottomView(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();

}

_QWORD *initializeWithCopy for ListBottomView(_QWORD *a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  id v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  void *v19;
  id v20;

  v7 = *(void **)a2;
  v6 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v6;
  v8 = a3[5];
  v9 = (char *)a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for ActionHandler();
  v12 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  v13 = v7;
  v12(v9, v10, v11);
  v14 = a3[6];
  v15 = a3[7];
  v16 = (_QWORD *)((char *)a1 + v14);
  v17 = (_QWORD *)(a2 + v14);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = *(void **)(a2 + v15);
  *(_QWORD *)((char *)a1 + v15) = v19;
  swift_bridgeObjectRetain();
  v20 = v19;
  return a1;
}

uint64_t assignWithCopy for ListBottomView(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;

  v6 = *(void **)a1;
  v7 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v7;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v9 = a3[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v13 = a3[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = a3[7];
  v17 = *(void **)(a2 + v16);
  v18 = *(void **)(a1 + v16);
  *(_QWORD *)(a1 + v16) = v17;
  v19 = v17;

  return a1;
}

_OWORD *initializeWithTake for ListBottomView(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v10) = *(_QWORD *)((char *)a2 + v10);
  return a1;
}

uint64_t assignWithTake for ListBottomView(uint64_t a1, _QWORD *a2, int *a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  *(_QWORD *)(a1 + 8) = a2[1];
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  v16 = a3[7];
  v17 = *(void **)(a1 + v16);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)((char *)a2 + v16);

  return a1;
}

uint64_t getEnumTagSinglePayload for ListBottomView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_243B24CC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for ActionHandler();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for ListBottomView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_243B24D58(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for ActionHandler();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t type metadata completion function for ListBottomView()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ActionHandler();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_243B24E64()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<SimpleItemRichView, _BackgroundStyleModifier<Material>>);
  lazy protocol witness table accessor for type ModifiedContent<SimpleItemRichView, _BackgroundStyleModifier<Material>> and conformance <> ModifiedContent<A, B>();
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_243B24EB0()
{
  return EnvironmentValues.imageElementImageStyle.getter();
}

uint64_t *PhoneCallAppNameConstants.siriAppBundleId.unsafeMutableAddressor()
{
  if (one-time initialization token for siriAppBundleId != -1)
    swift_once();
  return &static PhoneCallAppNameConstants.siriAppBundleId;
}

void *PhoneCallAppNameConstants.mobilePhoneBundleId.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.mobilePhoneBundleId;
}

void *PhoneCallAppNameConstants.inCallServiceBundleId.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.inCallServiceBundleId;
}

unint64_t static PhoneCallAppNameConstants.inCallServiceBundleId.getter()
{
  return 0xD000000000000017;
}

void *PhoneCallAppNameConstants.carouselBundleId.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.carouselBundleId;
}

unint64_t static PhoneCallAppNameConstants.carouselBundleId.getter()
{
  return 0xD000000000000012;
}

unint64_t static PhoneCallAppNameConstants.mobilePhoneBundleId.getter()
{
  return 0xD000000000000015;
}

void *PhoneCallAppNameConstants.macFaceTimeVocBundleId.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.macFaceTimeVocBundleId;
}

unint64_t static PhoneCallAppNameConstants.macFaceTimeVocBundleId.getter()
{
  return 0xD000000000000012;
}

void one-time initialization function for macFaceTimeBundleId()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = (id)TUPreferredFaceTimeBundleIdentifier();
  v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v3 = v2;

  static PhoneCallAppNameConstants.macFaceTimeBundleId = v1;
  unk_2572EB080 = v3;
}

uint64_t *PhoneCallAppNameConstants.macFaceTimeBundleId.unsafeMutableAddressor()
{
  if (one-time initialization token for macFaceTimeBundleId != -1)
    swift_once();
  return &static PhoneCallAppNameConstants.macFaceTimeBundleId;
}

uint64_t static PhoneCallAppNameConstants.macFaceTimeBundleId.getter()
{
  return static PhoneStartRequestUtterances.cancelUtterance.getter(&one-time initialization token for macFaceTimeBundleId, &static PhoneCallAppNameConstants.macFaceTimeBundleId);
}

void *PhoneCallAppNameConstants.faceTimeBundleId.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.faceTimeBundleId;
}

unint64_t static PhoneCallAppNameConstants.faceTimeBundleId.getter()
{
  return 0xD000000000000012;
}

void *PhoneCallAppNameConstants.nanophoneBundleId.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.nanophoneBundleId;
}

unint64_t static PhoneCallAppNameConstants.nanophoneBundleId.getter()
{
  return 0xD000000000000013;
}

void *PhoneCallAppNameConstants.walkieTalkieBundleId.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.walkieTalkieBundleId;
}

unint64_t static PhoneCallAppNameConstants.walkieTalkieBundleId.getter()
{
  return 0xD000000000000010;
}

void *PhoneCallAppNameConstants.walkieTalkieInternalBundleId.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.walkieTalkieInternalBundleId;
}

unint64_t static PhoneCallAppNameConstants.walkieTalkieInternalBundleId.getter()
{
  return 0xD000000000000027;
}

void *PhoneCallAppNameConstants.walkieTalkieExtensionBundleId.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.walkieTalkieExtensionBundleId;
}

unint64_t static PhoneCallAppNameConstants.walkieTalkieExtensionBundleId.getter()
{
  return 0xD00000000000001ELL;
}

void *PhoneCallAppNameConstants.messagesBundleId.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.messagesBundleId;
}

unint64_t static PhoneCallAppNameConstants.messagesBundleId.getter()
{
  return 0xD000000000000013;
}

void *PhoneCallAppNameConstants.emergencyBundleId.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.emergencyBundleId;
}

unint64_t static PhoneCallAppNameConstants.emergencyBundleId.getter()
{
  return 0xD000000000000022;
}

void *PhoneCallAppNameConstants.mapBundleId.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.mapBundleId;
}

unint64_t static PhoneCallAppNameConstants.mapBundleId.getter()
{
  return 0xD000000000000016;
}

void *PhoneCallAppNameConstants.faceTimeSettingsRoot.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.faceTimeSettingsRoot;
}

unint64_t static PhoneCallAppNameConstants.faceTimeSettingsRoot.getter()
{
  return 0xD000000000000013;
}

void *PhoneCallAppNameConstants.phoneSettingsRoot.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.phoneSettingsRoot;
}

unint64_t static PhoneCallAppNameConstants.phoneSettingsRoot.getter()
{
  return 0xD000000000000010;
}

void one-time initialization function for settingsRoot()
{
  static PhoneCallAppNameConstants.settingsRoot = 0x3A7366657270;
  unk_2572EB090 = 0xE600000000000000;
}

uint64_t *PhoneCallAppNameConstants.settingsRoot.unsafeMutableAddressor()
{
  if (one-time initialization token for settingsRoot != -1)
    swift_once();
  return &static PhoneCallAppNameConstants.settingsRoot;
}

uint64_t static PhoneCallAppNameConstants.settingsRoot.getter()
{
  return static PhoneStartRequestUtterances.cancelUtterance.getter(&one-time initialization token for settingsRoot, &static PhoneCallAppNameConstants.settingsRoot);
}

uint64_t one-time initialization function for inCallServiceLaunchId()
{
  uint64_t result;

  _StringGuts.grow(_:)(21);
  result = swift_bridgeObjectRelease();
  static PhoneCallAppNameConstants.inCallServiceLaunchId = 0xD00000000000002ALL;
  unk_2572EB0A0 = 0x8000000243B37ED0;
  return result;
}

uint64_t *PhoneCallAppNameConstants.inCallServiceLaunchId.unsafeMutableAddressor()
{
  if (one-time initialization token for inCallServiceLaunchId != -1)
    swift_once();
  return &static PhoneCallAppNameConstants.inCallServiceLaunchId;
}

uint64_t static PhoneCallAppNameConstants.inCallServiceLaunchId.getter()
{
  return static PhoneStartRequestUtterances.cancelUtterance.getter(&one-time initialization token for inCallServiceLaunchId, &static PhoneCallAppNameConstants.inCallServiceLaunchId);
}

void *PhoneCallAppNameConstants.systemExtensionBundleId.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.systemExtensionBundleId;
}

unint64_t static PhoneCallAppNameConstants.systemExtensionBundleId.getter()
{
  return 0xD00000000000002FLL;
}

void *PhoneCallAppNameConstants.systemUIExtensionBundleId.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.systemUIExtensionBundleId;
}

unint64_t static PhoneCallAppNameConstants.systemUIExtensionBundleId.getter()
{
  return 0xD000000000000021;
}

void *PhoneCallAppNameConstants.internalWatchAppSuffix.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.internalWatchAppSuffix;
}

unint64_t static PhoneCallAppNameConstants.internalWatchAppSuffix.getter()
{
  return 0xD000000000000017;
}

void *PhoneCallAppNameConstants.contactsBundleId.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.contactsBundleId;
}

unint64_t static PhoneCallAppNameConstants.contactsBundleId.getter()
{
  return 0xD00000000000001BLL;
}

void one-time initialization function for siriAppBundleId()
{
  strcpy((char *)&static PhoneCallAppNameConstants.siriAppBundleId, "com.apple.siri");
  unk_2572EB0B7 = -18;
}

uint64_t static PhoneCallAppNameConstants.siriAppBundleId.getter()
{
  return static PhoneStartRequestUtterances.cancelUtterance.getter(&one-time initialization token for siriAppBundleId, &static PhoneCallAppNameConstants.siriAppBundleId);
}

void *PhoneCallAppNameConstants.mobilePhoneContactsTabURI.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.mobilePhoneContactsTabURI;
}

unint64_t static PhoneCallAppNameConstants.mobilePhoneContactsTabURI.getter()
{
  return 0xD000000000000017;
}

void *PhoneCallAppNameConstants.openCallRecordURI.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.openCallRecordURI;
}

unint64_t static PhoneCallAppNameConstants.openCallRecordURI.getter()
{
  return 0xD000000000000020;
}

unint64_t static PhoneCallAppNameConstants.sanitizeFirstPartyAppId(_:)(uint64_t a1, void *a2)
{
  uint64_t v2;

  v2 = a1;
  if ((specialized static PhoneCallAppNameConstants.isFaceTimeCaseInsensitive(appId:)(a1, a2) & 1) != 0)
    return 0xD000000000000012;
  swift_bridgeObjectRetain();
  return v2;
}

unint64_t static PhoneCallAppNameConstants.getFaceTimeBundleIdForCurrentPlatform()()
{
  return 0xD000000000000012;
}

uint64_t static PhoneCallAppNameConstants.isFaceTime(appId:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t inited;
  uint64_t v5;
  Swift::Int v6;

  v2 = a2;
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_243B36BA0;
    *(_QWORD *)(inited + 32) = 0xD000000000000012;
    *(_QWORD *)(inited + 40) = 0x8000000243B37C80;
    if (one-time initialization token for macFaceTimeBundleId != -1)
      swift_once();
    v5 = unk_2572EB080;
    *(_QWORD *)(inited + 48) = static PhoneCallAppNameConstants.macFaceTimeBundleId;
    *(_QWORD *)(inited + 56) = v5;
    swift_bridgeObjectRetain();
    v6 = specialized Set.init(_nonEmptyArrayLiteral:)(inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    LOBYTE(v2) = specialized Set.contains(_:)(a1, v2, v6);
    swift_bridgeObjectRelease();
  }
  return v2 & 1;
}

uint64_t specialized Set.contains(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Swift::Int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    Hasher.init(_seed:)();
    String.hash(into:)();
    v6 = Hasher._finalize()();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t static PhoneCallAppNameConstants.isPhone(appId:)(uint64_t a1, uint64_t a2)
{
  if (!a2)
    return 0;
  if (a1 == 0xD000000000000017 && a2 == 0x8000000243B37C20
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
    || a1 == 0xD000000000000012 && a2 == 0x8000000243B37C40
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
    || a1 == 0xD000000000000013 && a2 == 0x8000000243B37CA0
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
    || a1 == 0xD000000000000015 && a2 == 0x8000000243B37C00)
  {
    return 1;
  }
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t static PhoneCallAppNameConstants.isMessagePhoneAppCaseInsensitive(appId:)(uint64_t a1, uint64_t a2)
{
  Swift::String v2;
  Swift::String v3;
  char v5;

  if (!a2)
  {
    String.lowercased()();
    goto LABEL_9;
  }
  v2 = String.lowercased()();
  v3 = String.lowercased()();
  if (!v2._object)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v2._countAndFlagsBits == v3._countAndFlagsBits && v2._object == v3._object)
  {
    swift_bridgeObjectRelease_n();
    return 1;
  }
  else
  {
    v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v5 & 1;
  }
}

uint64_t static PhoneCallAppNameConstants.isPhoneOrFaceTime(appId:isInsensitive:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t inited;
  uint64_t v7;
  Swift::Int v8;

  v3 = a2;
  if ((a3 & 1) != 0)
  {
    if ((specialized static PhoneCallAppNameConstants.isPhoneCaseInsensitive(appId:)(a1, a2) & 1) == 0)
      return specialized static PhoneCallAppNameConstants.isFaceTimeCaseInsensitive(appId:)(a1, (void *)v3);
LABEL_17:
    LOBYTE(v3) = 1;
    return v3 & 1;
  }
  if (a2)
  {
    if ((a1 != 0xD000000000000017 || a2 != 0x8000000243B37C20)
      && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0
      && (a1 != 0xD000000000000012 || v3 != 0x8000000243B37C40)
      && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0
      && (a1 != 0xD000000000000013 || v3 != 0x8000000243B37CA0)
      && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0
      && (a1 != 0xD000000000000015 || v3 != 0x8000000243B37C00)
      && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_243B36BA0;
      *(_QWORD *)(inited + 32) = 0xD000000000000012;
      *(_QWORD *)(inited + 40) = 0x8000000243B37C80;
      if (one-time initialization token for macFaceTimeBundleId != -1)
        swift_once();
      v7 = unk_2572EB080;
      *(_QWORD *)(inited + 48) = static PhoneCallAppNameConstants.macFaceTimeBundleId;
      *(_QWORD *)(inited + 56) = v7;
      swift_bridgeObjectRetain();
      v8 = specialized Set.init(_nonEmptyArrayLiteral:)(inited);
      swift_setDeallocating();
      swift_arrayDestroy();
      LOBYTE(v3) = specialized Set.contains(_:)(a1, v3, v8);
      swift_bridgeObjectRelease();
      return v3 & 1;
    }
    goto LABEL_17;
  }
  return v3 & 1;
}

uint64_t specialized static PhoneCallAppNameConstants.isFaceTimeCaseInsensitive(appId:)(uint64_t countAndFlagsBits, void *a2)
{
  void *object;
  Swift::String v4;
  Swift::String v5;
  char v7;
  Swift::String v8;
  Swift::String v9;
  char v11;

  object = a2;
  if (a2)
  {
    v4 = String.lowercased()();
    v5 = String.lowercased()();
    if (v4._object)
    {
      if (v4._countAndFlagsBits == v5._countAndFlagsBits && v4._object == v5._object)
      {
        swift_bridgeObjectRelease_n();
        return 1;
      }
      v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        return 1;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v8 = String.lowercased()();
    countAndFlagsBits = v8._countAndFlagsBits;
    object = v8._object;
  }
  else
  {
    String.lowercased()();
    swift_bridgeObjectRelease();
  }
  if (one-time initialization token for macFaceTimeBundleId != -1)
    swift_once();
  v9 = String.lowercased()();
  if (!object)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if (countAndFlagsBits != v9._countAndFlagsBits || object != v9._object)
  {
    v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v11 & 1;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 1;
}

Swift::Int specialized Set.init(_nonEmptyArrayLiteral:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  Swift::Int result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<String>);
    v3 = static _SetStorage.allocate(capacity:)();
    v4 = 0;
    v5 = v3 + 56;
    v25 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v25 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      Hasher.init(_seed:)();
      swift_bridgeObjectRetain();
      String.hash(into:)();
      result = Hasher._finalize()();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = *(_QWORD *)(v3 + 48);
        v16 = (_QWORD *)(v15 + 16 * v11);
        v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        v18 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v18;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v19 = (_QWORD *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            result = _stringCompareWithSmolCheck(_:_:expecting:)();
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v21 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
      *v21 = v8;
      v21[1] = v7;
      v22 = *(_QWORD *)(v3 + 16);
      v23 = __OFADD__(v22, 1);
      v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x24BEE4B08];
}

uint64_t specialized static PhoneCallAppNameConstants.isPhoneCaseInsensitive(appId:)(uint64_t a1, uint64_t a2)
{
  Swift::String v2;
  Swift::String v3;
  char v5;
  Swift::String v7;
  Swift::String v8;
  char v9;
  Swift::String v10;
  Swift::String v11;
  char v12;
  Swift::String v13;
  Swift::String v14;
  char v15;

  if (!a2)
  {
    String.lowercased()();
    swift_bridgeObjectRelease();
    String.lowercased()();
    swift_bridgeObjectRelease();
    String.lowercased()();
    swift_bridgeObjectRelease();
    String.lowercased()();
    goto LABEL_10;
  }
  v2 = String.lowercased()();
  v3 = String.lowercased()();
  if (v2._object)
  {
    if (v2._countAndFlagsBits == v3._countAndFlagsBits && v2._object == v3._object)
      goto LABEL_21;
    v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v7 = String.lowercased()();
  v8 = String.lowercased()();
  if (v7._object)
  {
    if (v7._countAndFlagsBits == v8._countAndFlagsBits && v7._object == v8._object)
      goto LABEL_21;
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v9 & 1) != 0)
      return 1;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v10 = String.lowercased()();
  v11 = String.lowercased()();
  if (v10._object)
  {
    if (v10._countAndFlagsBits == v11._countAndFlagsBits && v10._object == v11._object)
      goto LABEL_21;
    v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v12 & 1) != 0)
      return 1;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v13 = String.lowercased()();
  v14 = String.lowercased()();
  if (!v13._object)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v13._countAndFlagsBits == v14._countAndFlagsBits && v13._object == v14._object)
  {
LABEL_21:
    swift_bridgeObjectRelease_n();
    return 1;
  }
  v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v15 & 1;
}

ValueMetadata *type metadata accessor for PhoneCallAppNameConstants()
{
  return &type metadata for PhoneCallAppNameConstants;
}

uint64_t static SeparatorStyle.commonListSeparatorStyle(context:)@<X0>(uint64_t a1@<X8>)
{
  char v2;
  uint64_t v3;
  unsigned int *v4;

  dispatch thunk of Context.currentIdiom.getter();
  v2 = VRXIdiom.isCarPlay.getter();
  v3 = type metadata accessor for SeparatorStyle();
  v4 = (unsigned int *)MEMORY[0x24BEAB508];
  if ((v2 & 1) == 0)
    v4 = (unsigned int *)MEMORY[0x24BEAB4F0];
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, *v4, v3);
}

uint64_t static ContactInformationImage.getImage(directInvocation:actionHandler:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  _OWORD v43[2];
  char v44;
  _BYTE v45[7];
  _BYTE v46[7];
  char v47;
  _BYTE v48[7];
  char v49;
  _OWORD v50[6];
  _OWORD v51[2];
  uint64_t v52;
  char v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;

  v34 = a2;
  v35 = a1;
  v36 = a3;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  v4 = *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64);
  v32 = *(_QWORD *)(v3 - 8);
  v33 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v31 = (uint64_t)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Image.ResizingMode();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  Image.init(systemName:)();
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BDF3FD8], v6);
  v30 = Image.resizable(capInsets:resizingMode:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v10 = static Color.blue.getter();
  KeyPath = swift_getKeyPath();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  v12 = v52;
  v13 = v53;
  v14 = v54;
  v15 = v55;
  v16 = v56;
  v17 = v57;
  v18 = static Edge.Set.leading.getter();
  EdgeInsets.init(_all:)();
  v49 = v13;
  v47 = v15;
  v44 = 0;
  *(_QWORD *)&v37 = v30;
  *((_QWORD *)&v37 + 1) = KeyPath;
  *(_QWORD *)&v38 = v10;
  *((_QWORD *)&v38 + 1) = 0x3FE70A3D70A3D70ALL;
  *(_QWORD *)&v39 = v12;
  BYTE8(v39) = v13;
  *(_DWORD *)((char *)&v39 + 9) = *(_DWORD *)v48;
  HIDWORD(v39) = *(_DWORD *)&v48[3];
  *(_QWORD *)&v40 = v14;
  BYTE8(v40) = v15;
  *(_DWORD *)((char *)&v40 + 9) = *(_DWORD *)v46;
  HIDWORD(v40) = *(_DWORD *)&v46[3];
  *(_QWORD *)&v41 = v16;
  *((_QWORD *)&v41 + 1) = v17;
  LOBYTE(v42) = v18;
  DWORD1(v42) = *(_DWORD *)&v45[3];
  *(_DWORD *)((char *)&v42 + 1) = *(_DWORD *)v45;
  *((_QWORD *)&v42 + 1) = v19;
  *(_QWORD *)&v43[0] = v20;
  *((_QWORD *)&v43[0] + 1) = v21;
  *(_QWORD *)&v43[1] = v22;
  BYTE8(v43[1]) = 0;
  v23 = v31;
  outlined init with copy of StandardActionHandler?(v34, v31);
  v24 = (*(unsigned __int8 *)(v32 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  v25 = swift_allocObject();
  v26 = v35;
  *(_QWORD *)(v25 + 16) = v35;
  outlined init with take of StandardActionHandler?(v23, v25 + v24);
  v27 = v26;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>, _FrameLayout>, _PaddingLayout>);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>, _FrameLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>, _FrameLayout>, _PaddingLayout>, lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>, MEMORY[0x24BDECC58]);
  View.componentTapped(isNavigation:perform:)();
  swift_release();
  v50[4] = v41;
  v50[5] = v42;
  v51[0] = v43[0];
  *(_OWORD *)((char *)v51 + 9) = *(_OWORD *)((char *)v43 + 9);
  v50[0] = v37;
  v50[1] = v38;
  v50[2] = v39;
  v50[3] = v40;
  return outlined release of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>, _FrameLayout>, _PaddingLayout>((uint64_t)v50);
}

uint64_t closure #1 in static ContactInformationImage.getImage(directInvocation:actionHandler:)(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *boxed_opaque_existential_1;
  id v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for InteractionType?);
  MEMORY[0x24BDAC7A8](v4);
  v31 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionProperty?);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ActionProperty();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionElementConvertible>);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_243B32430;
  v17 = type metadata accessor for Command();
  v18 = MEMORY[0x24BEAD1E8];
  *(_QWORD *)(v16 + 56) = v17;
  *(_QWORD *)(v16 + 64) = v18;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v16 + 32));
  *boxed_opaque_existential_1 = (uint64_t)a1;
  *((_BYTE *)boxed_opaque_existential_1 + 8) = 0;
  (*(void (**)(void))(*(_QWORD *)(v17 - 8) + 104))();
  v20 = a1;
  ActionProperty.init(_:)();
  if (one-time initialization token for phoneSnippetUI != -1)
    swift_once();
  v21 = type metadata accessor for Logger();
  __swift_project_value_buffer(v21, (uint64_t)static Logger.phoneSnippetUI);
  v22 = Logger.logObject.getter();
  v23 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v24 = 0;
    _os_log_impl(&dword_243ABD000, v22, v23, "#ContactInformationImage tapped, performing direct action", v24, 2u);
    MEMORY[0x2495011B8](v24, -1, -1);
  }

  outlined init with copy of StandardActionHandler?(a2, (uint64_t)v11);
  v25 = type metadata accessor for StandardActionHandler();
  v26 = *(_QWORD *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v11, 1, v25) == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v11, &demangling cache variable for type metadata for StandardActionHandler?);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v8, v15, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
    v28 = type metadata accessor for InteractionType();
    v29 = (uint64_t)v31;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v31, 1, 1, v28);
    StandardActionHandler.perform(_:interactionType:)();
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v29, &demangling cache variable for type metadata for InteractionType?);
    outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v8, &demangling cache variable for type metadata for ActionProperty?);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v11, v25);
  }
}

uint64_t key path getter for EnvironmentValues.foregroundColor : EnvironmentValues, serialized@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_243B268BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t key path setter for EnvironmentValues.foregroundColor : EnvironmentValues, serialized()
{
  swift_retain();
  return EnvironmentValues.foregroundColor.setter();
}

uint64_t sub_243B2690C()
{
  swift_retain();
  return EnvironmentValues.foregroundColor.setter();
}

uint64_t sub_243B26934()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?)
                                      - 8)
                          + 80);
  v2 = (v1 + 24) & ~v1;

  v3 = type metadata accessor for StandardActionHandler();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  return swift_deallocObject();
}

uint64_t outlined init with take of StandardActionHandler?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t partial apply for closure #1 in static ContactInformationImage.getImage(directInvocation:actionHandler:)()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?)
                                      - 8)
                          + 80);
  return closure #1 in static ContactInformationImage.getImage(directInvocation:actionHandler:)(*(void **)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>()
{
  return lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>, _FrameLayout>, lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect> and conformance <> ModifiedContent<A, B>, MEMORY[0x24BDEBED8]);
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect> and conformance <> ModifiedContent<A, B>()
{
  return lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>, (uint64_t (*)(void))lazy protocol witness table accessor for type ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>, MEMORY[0x24BDECC30]);
}

uint64_t outlined release of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>, _FrameLayout>, _PaddingLayout>(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for ContactInformationImage()
{
  return &type metadata for ContactInformationImage;
}

uint64_t sub_243B26AEC()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>, _FrameLayout>, _PaddingLayout>);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>, _FrameLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>, _FrameLayout>, _PaddingLayout>, lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>, MEMORY[0x24BDECC58]);
  return swift_getOpaqueTypeConformance2();
}

uint64_t LocalEmergencyCallDisambiguationView.init(model:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  type metadata accessor for Context();
  lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
  *a2 = EnvironmentObject.init()();
  a2[1] = v4;
  v5 = type metadata accessor for LocalEmergencyCallDisambiguationView();
  ActionHandler.init()();
  return outlined init with take of SingleResultCallHistoryModel(a1, (uint64_t)a2 + *(int *)(v5 + 24), type metadata accessor for LocalEmergencyCallDisambiguationModel);
}

uint64_t type metadata accessor for LocalEmergencyCallDisambiguationView()
{
  uint64_t result;

  result = type metadata singleton initialization cache for LocalEmergencyCallDisambiguationView;
  if (!type metadata singleton initialization cache for LocalEmergencyCallDisambiguationView)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t LocalEmergencyCallDisambiguationView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v19;
  uint64_t v20;

  v2 = v1;
  v20 = a1;
  v3 = type metadata accessor for LocalEmergencyCallDisambiguationView();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ComponentStack<_ConditionalContent<ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>>, TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>>>);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v2, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for LocalEmergencyCallDisambiguationView);
  v11 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v12 = swift_allocObject();
  outlined init with take of SingleResultCallHistoryModel((uint64_t)v6, v12 + v11, (uint64_t (*)(_QWORD))type metadata accessor for LocalEmergencyCallDisambiguationView);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>>, TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>>);
  v14 = lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>>, TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>> and conformance <> _ConditionalContent<A, B>();
  MEMORY[0x24950072C](partial apply for closure #1 in LocalEmergencyCallDisambiguationView.body.getter, v12, v13, v14);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v2, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for LocalEmergencyCallDisambiguationView);
  v15 = swift_allocObject();
  outlined init with take of SingleResultCallHistoryModel((uint64_t)v6, v15 + v11, (uint64_t (*)(_QWORD))type metadata accessor for LocalEmergencyCallDisambiguationView);
  v16 = v20;
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(v20, v10, v7);
  v17 = (_QWORD *)(v16
                 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ComponentStack<_ConditionalContent<ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>>, TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>>>, _AppearanceActionModifier>)
                          + 36));
  *v17 = partial apply for closure #2 in LocalEmergencyCallDisambiguationView.body.getter;
  v17[1] = v15;
  v17[2] = 0;
  v17[3] = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t closure #1 in LocalEmergencyCallDisambiguationView.body.getter@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t KeyPath;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  void *v48;
  _QWORD *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t result;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  _QWORD *v74;
  char *v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void **v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  __int128 v93;
  __int128 v94;
  uint64_t v95;
  __int128 v96;
  __int128 v97;
  uint64_t v98;

  v90 = a2;
  v89 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>);
  MEMORY[0x24BDAC7A8](v89);
  v87 = (uint64_t)&v71 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Color?);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v77 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v76 = (char *)&v71 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VisualProperty?);
  MEMORY[0x24BDAC7A8](v8);
  v75 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = type metadata accessor for SashStandard.Title();
  v71 = *(_QWORD *)(v72 - 8);
  MEMORY[0x24BDAC7A8](v72);
  v74 = (uint64_t *)((char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = type metadata accessor for SashStandard();
  MEMORY[0x24BDAC7A8](v11);
  v73 = (char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SashStandardView?);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v85 = (uint64_t)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v86 = (char *)&v71 - v16;
  v92 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>>, TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>>.Storage);
  MEMORY[0x24BDAC7A8](v92);
  v88 = (uint64_t)&v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for ColorScheme();
  v83 = *(_QWORD *)(v18 - 8);
  v84 = v18;
  MEMORY[0x24BDAC7A8](v18);
  v82 = (char *)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for LocalEmergencyCallDisambiguationView();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  MEMORY[0x24BDAC7A8](v20);
  v23 = type metadata accessor for DisambiguationTitle();
  MEMORY[0x24BDAC7A8](v23);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationView<ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>>);
  v78 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v71 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.privacySensitive(_:)>>.0);
  v79 = *(_QWORD *)(v80 - 8);
  MEMORY[0x24BDAC7A8](v80);
  v28 = (char *)&v71 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>>);
  v29 = MEMORY[0x24BDAC7A8](v91);
  v31 = (char *)&v71 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v29);
  v81 = (void **)((char *)&v71 - v32);
  v33 = (void **)((char *)a1 + *(int *)(v20 + 24));
  if (*((_BYTE *)v33 + *(int *)(type metadata accessor for LocalEmergencyCallDisambiguationModel(0) + 32)) == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    Loggable.wrappedValue.getter();
    *((_QWORD *)&v97 + 1) = MEMORY[0x24BEE0D00];
    v98 = MEMORY[0x24BEAE5C0];
    v95 = 0;
    v93 = 0u;
    v94 = 0u;
    DisambiguationTitle.init(text1:thumbnail:)();
    outlined init with copy of SearchCallHistoryBinaryButtonModel((uint64_t)a1, (uint64_t)&v71 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for LocalEmergencyCallDisambiguationView);
    v34 = (*(unsigned __int8 *)(v21 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
    v35 = swift_allocObject();
    outlined init with take of SingleResultCallHistoryModel((uint64_t)&v71 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), v35 + v34, (uint64_t (*)(_QWORD))type metadata accessor for LocalEmergencyCallDisambiguationView);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>);
    lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0> and conformance ForEachWithIndex<A, B>, &demangling cache variable for type metadata for ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>, (uint64_t)&protocol conformance descriptor for ForEachWithIndex<A, B>);
    DisambiguationView.init(title:content:)();
    lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type DisambiguationView<ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>> and conformance DisambiguationView<A>, &demangling cache variable for type metadata for DisambiguationView<ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>>, MEMORY[0x24BEADE48]);
    View.privacySensitive(_:)();
    (*(void (**)(char *, uint64_t))(v78 + 8))(v26, v24);
    KeyPath = swift_getKeyPath();
    v38 = v83;
    v37 = v84;
    v39 = v82;
    (*(void (**)(char *, _QWORD, uint64_t))(v83 + 104))(v82, *MEMORY[0x24BDEB3F8], v84);
    v40 = (uint64_t *)&v31[*(int *)(v91 + 36)];
    v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<ColorScheme>);
    (*(void (**)(char *, char *, uint64_t))(v38 + 16))((char *)v40 + *(int *)(v41 + 28), v39, v37);
    *v40 = KeyPath;
    v42 = v79;
    v43 = v80;
    (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v31, v28, v80);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v37);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v28, v43);
    v44 = (uint64_t)v81;
    outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout>, _ClipEffect<Capsule>>((uint64_t)v31, (uint64_t)v81, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>>);
    outlined init with copy of SearchCallHistoryBinaryButtonModel?(v44, v88, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>, MEMORY[0x24BDF5420]);
    _ConditionalContent<>.init(storage:)();
    v45 = v44;
    v46 = &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>>;
    return outlined destroy of SearchCallHistoryBinaryButtonModel?(v45, v46);
  }
  v83 = v21;
  v84 = v22;
  v82 = (char *)&v71 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = v88;
  v48 = *a1;
  if (*a1)
  {
    v49 = v33;
    v81 = a1;
    v50 = v48;
    dispatch thunk of Context.currentIdiom.getter();

    if ((VRXIdiom.isCarPlay.getter() & 1) != 0)
    {
      v51 = type metadata accessor for SashStandardView();
      v52 = (uint64_t)v86;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v86, 1, 1, v51);
      v53 = (uint64_t)v82;
      v54 = v83;
      v55 = v49;
    }
    else
    {
      v55 = v49;
      v56 = v49[1];
      v57 = v74;
      *v74 = *v49;
      v57[1] = v56;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v71 + 104))(v57, *MEMORY[0x24BEAB118], v72);
      v58 = type metadata accessor for VisualProperty();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v75, 1, 1, v58);
      v59 = type metadata accessor for Color();
      v60 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56);
      v60(v76, 1, 1, v59);
      v60(v77, 1, 1, v59);
      v98 = 0;
      v96 = 0u;
      v97 = 0u;
      swift_bridgeObjectRetain();
      SashStandard.init(title:thumbnail:titleColor:backgroundColor:action:componentName:showOnWatch:)();
      v52 = (uint64_t)v86;
      SashStandardView.init(model:)();
      v61 = type metadata accessor for SashStandardView();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v52, 0, 1, v61);
      v53 = (uint64_t)v82;
      v54 = v83;
    }
    v62 = v55[2];
    outlined init with copy of SearchCallHistoryBinaryButtonModel((uint64_t)v81, v53, (uint64_t (*)(_QWORD))type metadata accessor for LocalEmergencyCallDisambiguationView);
    v63 = (*(unsigned __int8 *)(v54 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
    v64 = swift_allocObject();
    v65 = v53;
    v66 = v64;
    outlined init with take of SingleResultCallHistoryModel(v65, v64 + v63, (uint64_t (*)(_QWORD))type metadata accessor for LocalEmergencyCallDisambiguationView);
    v67 = v85;
    outlined init with copy of SearchCallHistoryBinaryButtonModel?(v52, v85, &demangling cache variable for type metadata for SashStandardView?);
    v68 = v87;
    outlined init with copy of SearchCallHistoryBinaryButtonModel?(v67, v87, &demangling cache variable for type metadata for SashStandardView?);
    v69 = (_QWORD *)(v68
                   + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>))
                            + 48));
    *v69 = v62;
    v69[1] = partial apply for closure #1 in LocalEmergencyCallDisambiguationView.listView.getter;
    v69[2] = v66;
    swift_bridgeObjectRetain_n();
    swift_retain();
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v67, &demangling cache variable for type metadata for SashStandardView?);
    outlined init with copy of SearchCallHistoryBinaryButtonModel?(v68, v47, &demangling cache variable for type metadata for TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>, MEMORY[0x24BDF5420]);
    _ConditionalContent<>.init(storage:)();
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v68, &demangling cache variable for type metadata for TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>);
    swift_release();
    swift_bridgeObjectRelease();
    v45 = v52;
    v46 = &demangling cache variable for type metadata for SashStandardView?;
    return outlined destroy of SearchCallHistoryBinaryButtonModel?(v45, v46);
  }
  type metadata accessor for Context();
  lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
  result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>>, TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>>, TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>>, TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>> and conformance <> _ConditionalContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>>, TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>> and conformance <> ModifiedContent<A, B>();
    v2[1] = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>, MEMORY[0x24BDF5420]);
    result = MEMORY[0x249501140](MEMORY[0x24BDEF3D8], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>>, TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>>);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for DisambiguationView<ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>>);
    v2[3] = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type DisambiguationView<ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>> and conformance DisambiguationView<A>, &demangling cache variable for type metadata for DisambiguationView<ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>>, MEMORY[0x24BEADE48]);
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<ColorScheme> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<ColorScheme>, MEMORY[0x24BDF1020]);
    result = MEMORY[0x249501140](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t closure #1 in closure #1 in LocalEmergencyCallDisambiguationView.body.getter@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v4 = type metadata accessor for LocalEmergencyCallDisambiguationView();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_QWORD *)(a1 + *(int *)(MEMORY[0x24BDAC7A8](v4) + 24) + 16);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(a1, (uint64_t)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for LocalEmergencyCallDisambiguationView);
  v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v9 = swift_allocObject();
  outlined init with take of SingleResultCallHistoryModel((uint64_t)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8, (uint64_t (*)(_QWORD))type metadata accessor for LocalEmergencyCallDisambiguationView);
  *a2 = v7;
  a2[1] = partial apply for closure #1 in closure #1 in closure #1 in LocalEmergencyCallDisambiguationView.body.getter;
  a2[2] = v9;
  return swift_bridgeObjectRetain();
}

uint64_t closure #1 in closure #1 in closure #1 in LocalEmergencyCallDisambiguationView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char *v54;
  char v55;
  unsigned int *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  __int128 v88;
  uint64_t v89;
  __int128 v90;
  __int128 v91;
  uint64_t v92;
  __int128 v93;
  __int128 v94;
  uint64_t v95;
  __int128 v96;
  __int128 v97;
  uint64_t v98;
  __int128 v99;
  __int128 v100;
  uint64_t v101;
  __int128 v102;
  __int128 v103;
  uint64_t v104;
  __int128 v105;
  __int128 v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;

  v78 = a3;
  v71 = a1;
  v86 = a4;
  v5 = type metadata accessor for SeparatorStyle();
  v84 = *(_QWORD *)(v5 - 8);
  v85 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v83 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for LocalEmergencyCallDisambiguationView();
  v8 = *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64);
  v76 = *(_QWORD *)(v7 - 8);
  v77 = v8;
  MEMORY[0x24BDAC7A8](v7);
  v74 = (uint64_t)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  v11 = *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64);
  v72 = *(_QWORD *)(v10 - 8);
  v73 = v11;
  MEMORY[0x24BDAC7A8](v10);
  v69 = (uint64_t)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for SimpleItemRichView();
  v67 = *(_QWORD *)(v13 - 8);
  v68 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v64 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<SimpleItemRichView, CarPlayDisambiguationListItem>);
  MEMORY[0x24BDAC7A8](v66);
  v65 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.componentTapped(isNavigation:perform:)>>.0);
  v82 = *(_QWORD *)(v80 - 8);
  MEMORY[0x24BDAC7A8](v80);
  v70 = (char *)&v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.separators(_:isOverride:)>>.0);
  v79 = *(_QWORD *)(v81 - 8);
  MEMORY[0x24BDAC7A8](v81);
  v75 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  Loggable.wrappedValue.getter();
  v18 = v112;
  v19 = v113;
  if (!v113)
  {
    v18 = 0;
    v19 = 0xE000000000000000;
  }
  v112 = v18;
  v113 = v19;
  lazy protocol witness table accessor for type String and conformance String();
  v20 = Text.init<A>(_:)();
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v114 = MEMORY[0x24BDF1FA0];
  v115 = MEMORY[0x24BEAD6B8];
  v27 = swift_allocObject();
  v112 = v27;
  *(_QWORD *)(v27 + 16) = v20;
  *(_QWORD *)(v27 + 24) = v22;
  *(_BYTE *)(v27 + 32) = v24 & 1;
  *(_QWORD *)(v27 + 40) = v26;
  Loggable.wrappedValue.getter();
  v28 = v108;
  v29 = v109;
  if (!v109)
  {
    v28 = 0;
    v29 = 0xE000000000000000;
  }
  v108 = v28;
  v109 = v29;
  v30 = Text.init<A>(_:)();
  v32 = v31;
  v34 = v33;
  v36 = v35;
  v110 = MEMORY[0x24BDF1FA0];
  v111 = MEMORY[0x24BEAD6B8];
  v37 = swift_allocObject();
  v107 = 0;
  v108 = v37;
  *(_QWORD *)(v37 + 16) = v30;
  *(_QWORD *)(v37 + 24) = v32;
  *(_BYTE *)(v37 + 32) = v34 & 1;
  *(_QWORD *)(v37 + 40) = v36;
  v105 = 0u;
  v106 = 0u;
  v104 = 0;
  v102 = 0u;
  v103 = 0u;
  v101 = 0;
  v99 = 0u;
  v100 = 0u;
  v98 = 0;
  v96 = 0u;
  v97 = 0u;
  v95 = 0;
  v93 = 0u;
  v94 = 0u;
  v92 = 0;
  v90 = 0u;
  v91 = 0u;
  v89 = 0;
  v87 = 0u;
  v88 = 0u;
  v38 = v64;
  SimpleItemRichView.init(text1:text2:text3:text4:text5:text6:text7:text8:thumbnail:)();
  v39 = v71 == 0;
  type metadata accessor for Context();
  lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
  v40 = EnvironmentObject.init()();
  v42 = v41;
  v44 = v67;
  v43 = v68;
  v45 = (uint64_t)v65;
  (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v65, v38, v68);
  v46 = v66;
  v47 = v45 + *(int *)(v66 + 36);
  *(_QWORD *)v47 = v40;
  *(_QWORD *)(v47 + 8) = v42;
  *(_BYTE *)(v47 + 16) = v39;
  (*(void (**)(char *, uint64_t))(v44 + 8))(v38, v43);
  v48 = v69;
  outlined init with copy of SearchCallHistoryBinaryButtonModel(a2, v69, type metadata accessor for DisambiguationItemWithDirectInvocationModel);
  v49 = v74;
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v78, v74, (uint64_t (*)(_QWORD))type metadata accessor for LocalEmergencyCallDisambiguationView);
  v50 = (*(unsigned __int8 *)(v72 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80);
  v51 = (v73 + *(unsigned __int8 *)(v76 + 80) + v50) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80);
  v52 = swift_allocObject();
  outlined init with take of SingleResultCallHistoryModel(v48, v52 + v50, type metadata accessor for DisambiguationItemWithDirectInvocationModel);
  outlined init with take of SingleResultCallHistoryModel(v49, v52 + v51, (uint64_t (*)(_QWORD))type metadata accessor for LocalEmergencyCallDisambiguationView);
  v53 = lazy protocol witness table accessor for type ModifiedContent<SimpleItemRichView, CarPlayDisambiguationListItem> and conformance <> ModifiedContent<A, B>();
  v54 = v70;
  View.componentTapped(isNavigation:perform:)();
  swift_release();
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v45, &demangling cache variable for type metadata for ModifiedContent<SimpleItemRichView, CarPlayDisambiguationListItem>);
  v55 = LocalEmergencyCallDisambiguationView.shouldShowSeparators.getter();
  v56 = (unsigned int *)MEMORY[0x24BEAB4F0];
  v57 = v83;
  v58 = v84;
  if ((v55 & 1) == 0)
    v56 = (unsigned int *)MEMORY[0x24BEAB508];
  v59 = v85;
  (*(void (**)(char *, _QWORD, uint64_t))(v84 + 104))(v83, *v56, v85);
  v112 = v46;
  v113 = v53;
  swift_getOpaqueTypeConformance2();
  v60 = v75;
  v61 = v80;
  View.separators(_:isOverride:)();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v57, v59);
  (*(void (**)(char *, uint64_t))(v82 + 8))(v54, v61);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v79 + 32))(v86, v60, v81);
}

uint64_t LocalEmergencyCallDisambiguationView.shouldShowSeparators.getter()
{
  id *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id *v4;
  id v5;
  char v6;
  id v7;
  uint64_t result;
  uint64_t v9;

  v1 = (uint64_t)v0;
  v2 = type metadata accessor for LocalEmergencyCallDisambiguationView();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (id *)((char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*v0)
  {
    v5 = *v0;
    dispatch thunk of Context.currentIdiom.getter();

    LOBYTE(v5) = VRXIdiom.isCarPlay.getter();
    outlined init with copy of SearchCallHistoryBinaryButtonModel(v1, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for LocalEmergencyCallDisambiguationView);
    if ((v5 & 1) != 0)
    {
      v6 = 0;
LABEL_6:
      outlined destroy of LocalEmergencyCallDisambiguationView((uint64_t)v4);
      return v6 & 1;
    }
    if (*v4)
    {
      v7 = *v4;
      dispatch thunk of Context.currentIdiom.getter();

      v6 = VRXIdiom.isWatchOS.getter() ^ 1;
      goto LABEL_6;
    }
  }
  type metadata accessor for Context();
  lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
  result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

void closure #2 in LocalEmergencyCallDisambiguationView.body.getter(id *a1)
{
  id v1;
  id v2;

  if (*a1)
  {
    v1 = *a1;
    dispatch thunk of Context.hideBackgroundBehindSiri()();

    type metadata accessor for LocalEmergencyCallDisambiguationView();
    v2 = v1;
    dispatch thunk of Context.informHostListItemCount(_:)();

  }
  else
  {
    type metadata accessor for Context();
    lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
    EnvironmentObject.error()();
    __break(1u);
  }
}

uint64_t closure #1 in LocalEmergencyCallDisambiguationView.listView.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void **a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char *v34;
  char v35;
  unsigned int *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;

  v58 = a4;
  v7 = type metadata accessor for SeparatorStyle();
  v56 = *(_QWORD *)(v7 - 8);
  v57 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v55 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for LocalEmergencyCallDisambiguationView();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64);
  v49 = *(_QWORD *)(v9 - 8);
  v50 = v10;
  MEMORY[0x24BDAC7A8](v9);
  v47 = (uint64_t)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  v13 = *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64);
  v45 = *(_QWORD *)(v12 - 8);
  v46 = v13;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Group<_ConditionalContent<SimpleItemStandardView, SimpleItemRichView>>);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Group<_ConditionalContent<SimpleItemStandardView, SimpleItemRichView>>, CarPlayDisambiguationListItem>);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.componentTapped(isNavigation:perform:)>>.0);
  v54 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  v44 = (char *)&v43 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.separators(_:isOverride:)>>.0);
  v51 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53);
  v48 = (char *)&v43 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  closure #1 in closure #1 in LocalEmergencyCallDisambiguationView.listView.getter(a3, a2, (uint64_t)v18);
  v24 = a1 == 0;
  type metadata accessor for Context();
  lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
  v25 = EnvironmentObject.init()();
  v27 = v26;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?((uint64_t)v18, (uint64_t)v21, &demangling cache variable for type metadata for Group<_ConditionalContent<SimpleItemStandardView, SimpleItemRichView>>);
  v28 = &v21[*(int *)(v19 + 36)];
  *(_QWORD *)v28 = v25;
  *((_QWORD *)v28 + 1) = v27;
  v28[16] = v24;
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v18, &demangling cache variable for type metadata for Group<_ConditionalContent<SimpleItemStandardView, SimpleItemRichView>>);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(a2, (uint64_t)v15, type metadata accessor for DisambiguationItemWithDirectInvocationModel);
  v29 = v47;
  outlined init with copy of SearchCallHistoryBinaryButtonModel((uint64_t)a3, v47, (uint64_t (*)(_QWORD))type metadata accessor for LocalEmergencyCallDisambiguationView);
  v30 = (*(unsigned __int8 *)(v45 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
  v31 = (v46 + *(unsigned __int8 *)(v49 + 80) + v30) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  v32 = swift_allocObject();
  outlined init with take of SingleResultCallHistoryModel((uint64_t)v15, v32 + v30, type metadata accessor for DisambiguationItemWithDirectInvocationModel);
  outlined init with take of SingleResultCallHistoryModel(v29, v32 + v31, (uint64_t (*)(_QWORD))type metadata accessor for LocalEmergencyCallDisambiguationView);
  v33 = lazy protocol witness table accessor for type ModifiedContent<Group<_ConditionalContent<SimpleItemStandardView, SimpleItemRichView>>, CarPlayDisambiguationListItem> and conformance <> ModifiedContent<A, B>();
  v34 = v44;
  View.componentTapped(isNavigation:perform:)();
  swift_release();
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v21, &demangling cache variable for type metadata for ModifiedContent<Group<_ConditionalContent<SimpleItemStandardView, SimpleItemRichView>>, CarPlayDisambiguationListItem>);
  v35 = LocalEmergencyCallDisambiguationView.shouldShowSeparators.getter();
  v36 = (unsigned int *)MEMORY[0x24BEAB4F0];
  v37 = v55;
  v38 = v56;
  if ((v35 & 1) == 0)
    v36 = (unsigned int *)MEMORY[0x24BEAB508];
  v39 = v57;
  (*(void (**)(char *, _QWORD, uint64_t))(v56 + 104))(v55, *v36, v57);
  v59 = v19;
  v60 = v33;
  swift_getOpaqueTypeConformance2();
  v40 = v48;
  v41 = v52;
  View.separators(_:isOverride:)();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v37, v39);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v34, v41);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v51 + 32))(v58, v40, v53);
}

uint64_t closure #1 in closure #1 in LocalEmergencyCallDisambiguationView.listView.getter@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t result;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  __int128 v98;
  __int128 v99;
  uint64_t v100;
  __int128 v101;
  __int128 v102;
  uint64_t v103;
  __int128 v104;
  __int128 v105;
  uint64_t v106;
  __int128 v107;
  __int128 v108;
  uint64_t v109;
  __int128 v110;
  __int128 v111;
  uint64_t v112;
  __int128 v113;
  __int128 v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  __int128 v120;
  __int128 v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;

  v6 = type metadata accessor for SimpleItemRichView();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v91 = (char *)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v85 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<SimpleItemStandardView, SimpleItemRichView>.Storage);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for SimpleItemStandardView();
  v90 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v88 = (char *)&v85 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v89 = (char *)&v85 - v18;
  v19 = *a1;
  if (*a1)
  {
    v93 = v12;
    v20 = v19;
    dispatch thunk of Context.currentIdiom.getter();

    v21 = VRXIdiom.isCarPlay.getter();
    v96 = a3;
    v97 = v6;
    v94 = v14;
    v95 = v15;
    v92 = a2;
    if ((v21 & 1) != 0)
    {
      v22 = type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
      v87 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
      Loggable.wrappedValue.getter();
      v23 = v123;
      v24 = v124;
      if (!v124)
      {
        v23 = 0;
        v24 = 0xE000000000000000;
      }
      v123 = v23;
      v124 = v24;
      v86 = lazy protocol witness table accessor for type String and conformance String();
      v25 = Text.init<A>(_:)();
      v27 = v26;
      v29 = v28;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      Loggable.wrappedValue.getter();
      v91 = (char *)v22;
      if (v123 == 1)
        static Color.blue.getter();
      else
        static Color.primary.getter();
      v38 = Text.foregroundColor(_:)();
      v40 = v39;
      v42 = v41;
      v44 = v43;
      swift_release();
      outlined consume of Text.Storage(v25, v27, v29 & 1);
      swift_bridgeObjectRelease();
      v45 = MEMORY[0x24BDF1FA0];
      v46 = MEMORY[0x24BEAD6B8];
      v125 = MEMORY[0x24BDF1FA0];
      v126 = MEMORY[0x24BEAD6B8];
      v47 = swift_allocObject();
      v123 = v47;
      *(_QWORD *)(v47 + 16) = v38;
      *(_QWORD *)(v47 + 24) = v40;
      *(_BYTE *)(v47 + 32) = v42 & 1;
      *(_QWORD *)(v47 + 40) = v44;
      v122 = 0;
      v120 = 0u;
      v121 = 0u;
      Loggable.wrappedValue.getter();
      v48 = v116;
      v49 = v117;
      if (!v117)
      {
        v48 = 0;
        v49 = 0xE000000000000000;
      }
      v116 = v48;
      v117 = v49;
      v50 = Text.init<A>(_:)();
      v52 = v51;
      v54 = v53;
      v56 = v55;
      v118 = v45;
      v119 = v46;
      v57 = swift_allocObject();
      v116 = v57;
      *(_QWORD *)(v57 + 16) = v50;
      *(_QWORD *)(v57 + 24) = v52;
      *(_BYTE *)(v57 + 32) = v54 & 1;
      *(_QWORD *)(v57 + 40) = v56;
      v115 = 0;
      v113 = 0u;
      v114 = 0u;
      v112 = 0;
      v110 = 0u;
      v111 = 0u;
      v109 = 0;
      v107 = 0u;
      v108 = 0u;
      v58 = v88;
      SimpleItemStandardView.init(text1:text2:text3:text4:text5:text6:)();
      v60 = v89;
      v59 = v90;
      v61 = v95;
      (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v89, v58, v95);
      (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v94, v60, v61);
      swift_storeEnumTagMultiPayload();
      lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type SimpleItemStandardView and conformance SimpleItemStandardView, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE188], MEMORY[0x24BEAE170]);
      lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type SimpleItemRichView and conformance SimpleItemRichView, (uint64_t (*)(uint64_t))MEMORY[0x24BEADE98], MEMORY[0x24BEADE78]);
    }
    else
    {
      v89 = v11;
      v90 = v7;
      v30 = type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
      v87 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
      Loggable.wrappedValue.getter();
      v31 = v123;
      v32 = v124;
      if (!v124)
      {
        v31 = 0;
        v32 = 0xE000000000000000;
      }
      v123 = v31;
      v124 = v32;
      v86 = lazy protocol witness table accessor for type String and conformance String();
      v33 = Text.init<A>(_:)();
      v35 = v34;
      v37 = v36;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      Loggable.wrappedValue.getter();
      v88 = (char *)v30;
      if (v123 == 1)
        static Color.blue.getter();
      else
        static Color.primary.getter();
      v62 = v37 & 1;
      v63 = Text.foregroundColor(_:)();
      v65 = v64;
      v67 = v66;
      v69 = v68;
      swift_release();
      outlined consume of Text.Storage(v33, v35, v62);
      swift_bridgeObjectRelease();
      v70 = MEMORY[0x24BDF1FA0];
      v71 = MEMORY[0x24BEAD6B8];
      v125 = MEMORY[0x24BDF1FA0];
      v126 = MEMORY[0x24BEAD6B8];
      v72 = swift_allocObject();
      v123 = v72;
      *(_QWORD *)(v72 + 16) = v63;
      *(_QWORD *)(v72 + 24) = v65;
      *(_BYTE *)(v72 + 32) = v67 & 1;
      *(_QWORD *)(v72 + 40) = v69;
      v122 = 0;
      v120 = 0u;
      v121 = 0u;
      Loggable.wrappedValue.getter();
      v73 = v116;
      v74 = v117;
      if (!v117)
      {
        v73 = 0;
        v74 = 0xE000000000000000;
      }
      v116 = v73;
      v117 = v74;
      v75 = Text.init<A>(_:)();
      v77 = v76;
      v79 = v78;
      v81 = v80;
      v118 = v70;
      v119 = v71;
      v82 = swift_allocObject();
      v116 = v82;
      *(_QWORD *)(v82 + 16) = v75;
      *(_QWORD *)(v82 + 24) = v77;
      *(_BYTE *)(v82 + 32) = v79 & 1;
      *(_QWORD *)(v82 + 40) = v81;
      v115 = 0;
      v113 = 0u;
      v114 = 0u;
      v112 = 0;
      v110 = 0u;
      v111 = 0u;
      v109 = 0;
      v107 = 0u;
      v108 = 0u;
      v106 = 0;
      v104 = 0u;
      v105 = 0u;
      v103 = 0;
      v101 = 0u;
      v102 = 0u;
      v100 = 0;
      v98 = 0u;
      v99 = 0u;
      v83 = v91;
      SimpleItemRichView.init(text1:text2:text3:text4:text5:text6:text7:text8:thumbnail:)();
      v60 = v89;
      v59 = v90;
      v61 = v97;
      (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v89, v83, v97);
      (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v94, v60, v61);
      swift_storeEnumTagMultiPayload();
      lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type SimpleItemStandardView and conformance SimpleItemStandardView, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE188], MEMORY[0x24BEAE170]);
      lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type SimpleItemRichView and conformance SimpleItemRichView, (uint64_t (*)(uint64_t))MEMORY[0x24BEADE98], MEMORY[0x24BEADE78]);
    }
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v60, v61);
  }
  else
  {
    type metadata accessor for Context();
    lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
    result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t closure #1 in closure #1 in closure #1 in closure #1 in LocalEmergencyCallDisambiguationView.body.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;

  v30 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for InteractionType?);
  MEMORY[0x24BDAC7A8](v2);
  v29 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionProperty?);
  MEMORY[0x24BDAC7A8](v4);
  v28 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for ActionProperty();
  v13 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionElementConvertible>);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_243B32430;
  v17 = type metadata accessor for Command();
  v18 = MEMORY[0x24BEAD1E8];
  *(_QWORD *)(v16 + 56) = v17;
  *(_QWORD *)(v16 + 64) = v18;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v16 + 32));
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  Loggable.wrappedValue.getter();
  v20 = CodableAceObject.wrappedValue.getter();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  *boxed_opaque_existential_1 = v20;
  *((_BYTE *)boxed_opaque_existential_1 + 8) = 0;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x24BEAD1C8], v17);
  ActionProperty.init(_:)();
  type metadata accessor for LocalEmergencyCallDisambiguationView();
  ActionHandler.wrappedValue.getter();
  v21 = type metadata accessor for StandardActionHandler();
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v8, 1, v21) == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v31);
    return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v8, &demangling cache variable for type metadata for StandardActionHandler?);
  }
  else
  {
    v24 = (uint64_t)v28;
    v25 = v31;
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v28, v15, v31);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(v24, 0, 1, v25);
    v26 = type metadata accessor for InteractionType();
    v27 = (uint64_t)v29;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v29, 1, 1, v26);
    StandardActionHandler.perform(_:interactionType:)();
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v27, &demangling cache variable for type metadata for InteractionType?);
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v24, &demangling cache variable for type metadata for ActionProperty?);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v25);
    return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v8, v21);
  }
}

uint64_t protocol witness for View.body.getter in conformance LocalEmergencyCallDisambiguationView@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v19;
  uint64_t v20;

  v3 = v2;
  v20 = a2;
  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ComponentStack<_ConditionalContent<ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>>, TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>>>);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v3, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for LocalEmergencyCallDisambiguationView);
  v11 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v12 = swift_allocObject();
  outlined init with take of SingleResultCallHistoryModel((uint64_t)v6, v12 + v11, (uint64_t (*)(_QWORD))type metadata accessor for LocalEmergencyCallDisambiguationView);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>>, TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>>);
  v14 = lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>>, TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>> and conformance <> _ConditionalContent<A, B>();
  MEMORY[0x24950072C](partial apply for closure #1 in LocalEmergencyCallDisambiguationView.body.getter, v12, v13, v14);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v3, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for LocalEmergencyCallDisambiguationView);
  v15 = swift_allocObject();
  outlined init with take of SingleResultCallHistoryModel((uint64_t)v6, v15 + v11, (uint64_t (*)(_QWORD))type metadata accessor for LocalEmergencyCallDisambiguationView);
  v16 = v20;
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(v20, v10, v7);
  v17 = (_QWORD *)(v16
                 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ComponentStack<_ConditionalContent<ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>>, TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>>>, _AppearanceActionModifier>)
                          + 36));
  *v17 = partial apply for closure #2 in LocalEmergencyCallDisambiguationView.body.getter;
  v17[1] = v15;
  v17[2] = 0;
  v17[3] = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t LocalEmergencyCallDisambiguationView_Previews.emergencyServicesItem.unsafeMutableAddressor()
{
  return ForeignEmergencyCallDisambiguationView_Previews.emergencyServicesItem.unsafeMutableAddressor(&one-time initialization token for emergencyServicesItem, type metadata accessor for DisambiguationItemWithDirectInvocationModel, (uint64_t)static LocalEmergencyCallDisambiguationView_Previews.emergencyServicesItem);
}

uint64_t static LocalEmergencyCallDisambiguationView_Previews.emergencyServicesItem.getter@<X0>(uint64_t a1@<X8>)
{
  return static ForeignEmergencyCallDisambiguationView_Previews.emergencyServicesItem.getter(&one-time initialization token for emergencyServicesItem, type metadata accessor for DisambiguationItemWithDirectInvocationModel, (uint64_t)static LocalEmergencyCallDisambiguationView_Previews.emergencyServicesItem, a1);
}

uint64_t LocalEmergencyCallDisambiguationView_Previews.foreignEmergencyNumberItem.unsafeMutableAddressor()
{
  return ForeignEmergencyCallDisambiguationView_Previews.emergencyServicesItem.unsafeMutableAddressor(&one-time initialization token for foreignEmergencyNumberItem, type metadata accessor for DisambiguationItemWithDirectInvocationModel, (uint64_t)static LocalEmergencyCallDisambiguationView_Previews.foreignEmergencyNumberItem);
}

uint64_t static LocalEmergencyCallDisambiguationView_Previews.foreignEmergencyNumberItem.getter@<X0>(uint64_t a1@<X8>)
{
  return static ForeignEmergencyCallDisambiguationView_Previews.emergencyServicesItem.getter(&one-time initialization token for foreignEmergencyNumberItem, type metadata accessor for DisambiguationItemWithDirectInvocationModel, (uint64_t)static LocalEmergencyCallDisambiguationView_Previews.foreignEmergencyNumberItem, a1);
}

uint64_t LocalEmergencyCallDisambiguationView_Previews.sampleModel.unsafeMutableAddressor()
{
  return ForeignEmergencyCallDisambiguationView_Previews.emergencyServicesItem.unsafeMutableAddressor(&one-time initialization token for sampleModel, type metadata accessor for ForeignEmergencyCallDisambiguationModel, (uint64_t)static LocalEmergencyCallDisambiguationView_Previews.sampleModel);
}

uint64_t static LocalEmergencyCallDisambiguationView_Previews.sampleModel.getter@<X0>(uint64_t a1@<X8>)
{
  return static ForeignEmergencyCallDisambiguationView_Previews.emergencyServicesItem.getter(&one-time initialization token for sampleModel, type metadata accessor for ForeignEmergencyCallDisambiguationModel, (uint64_t)static LocalEmergencyCallDisambiguationView_Previews.sampleModel, a1);
}

uint64_t static LocalEmergencyCallDisambiguationView_Previews.previews.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v5;

  v0 = type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for sampleModel != -1)
    swift_once();
  v3 = __swift_project_value_buffer(v0, (uint64_t)static LocalEmergencyCallDisambiguationView_Previews.sampleModel);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v3, (uint64_t)v2, type metadata accessor for ForeignEmergencyCallDisambiguationModel);
  type metadata accessor for ForeignEmergencyCallDisambiguationView();
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel and conformance ForeignEmergencyCallDisambiguationModel, type metadata accessor for ForeignEmergencyCallDisambiguationModel, (uint64_t)&protocol conformance descriptor for ForeignEmergencyCallDisambiguationModel);
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationView and conformance ForeignEmergencyCallDisambiguationView, (uint64_t (*)(uint64_t))type metadata accessor for ForeignEmergencyCallDisambiguationView, (uint64_t)&protocol conformance descriptor for ForeignEmergencyCallDisambiguationView);
  return SnippetPreview.init(snippetModel:content:)();
}

uint64_t associated type witness table accessor for View.Body : View in LocalEmergencyCallDisambiguationView()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t lazy protocol witness table accessor for type LocalEmergencyCallDisambiguationView_Previews and conformance LocalEmergencyCallDisambiguationView_Previews()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationView_Previews and conformance LocalEmergencyCallDisambiguationView_Previews;
  if (!lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationView_Previews and conformance LocalEmergencyCallDisambiguationView_Previews)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for LocalEmergencyCallDisambiguationView_Previews, &type metadata for LocalEmergencyCallDisambiguationView_Previews);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationView_Previews and conformance LocalEmergencyCallDisambiguationView_Previews);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationView_Previews and conformance LocalEmergencyCallDisambiguationView_Previews;
  if (!lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationView_Previews and conformance LocalEmergencyCallDisambiguationView_Previews)
  {
    result = MEMORY[0x249501140](&protocol conformance descriptor for LocalEmergencyCallDisambiguationView_Previews, &type metadata for LocalEmergencyCallDisambiguationView_Previews);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationView_Previews and conformance LocalEmergencyCallDisambiguationView_Previews);
  }
  return result;
}

uint64_t associated type witness table accessor for PreviewProvider.Previews : View in LocalEmergencyCallDisambiguationView_Previews()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t protocol witness for static PreviewProvider.previews.getter in conformance LocalEmergencyCallDisambiguationView_Previews()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v5;

  v0 = type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for sampleModel != -1)
    swift_once();
  v3 = __swift_project_value_buffer(v0, (uint64_t)static LocalEmergencyCallDisambiguationView_Previews.sampleModel);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v3, (uint64_t)v2, type metadata accessor for ForeignEmergencyCallDisambiguationModel);
  type metadata accessor for ForeignEmergencyCallDisambiguationView();
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel and conformance ForeignEmergencyCallDisambiguationModel, type metadata accessor for ForeignEmergencyCallDisambiguationModel, (uint64_t)&protocol conformance descriptor for ForeignEmergencyCallDisambiguationModel);
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationView and conformance ForeignEmergencyCallDisambiguationView, (uint64_t (*)(uint64_t))type metadata accessor for ForeignEmergencyCallDisambiguationView, (uint64_t)&protocol conformance descriptor for ForeignEmergencyCallDisambiguationView);
  return SnippetPreview.init(snippetModel:content:)();
}

uint64_t protocol witness for static _PreviewProvider._previews.getter in conformance LocalEmergencyCallDisambiguationView_Previews()
{
  lazy protocol witness table accessor for type LocalEmergencyCallDisambiguationView_Previews and conformance LocalEmergencyCallDisambiguationView_Previews();
  return static PreviewProvider._previews.getter();
}

uint64_t protocol witness for static _PreviewProvider._platform.getter in conformance LocalEmergencyCallDisambiguationView_Previews()
{
  lazy protocol witness table accessor for type LocalEmergencyCallDisambiguationView_Previews and conformance LocalEmergencyCallDisambiguationView_Previews();
  return static PreviewProvider._platform.getter();
}

char *initializeBufferWithCopyOfBuffer for LocalEmergencyCallDisambiguationView(char *a1, char **a2, uint64_t a3)
{
  int v3;
  char *v4;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  _QWORD *v31;
  uint64_t v32;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v7 = a1;
    *((_QWORD *)a1 + 1) = a2[1];
    v8 = *(int *)(a3 + 20);
    v9 = &a1[v8];
    v10 = (uint64_t)a2 + v8;
    v11 = type metadata accessor for ActionHandler();
    v12 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v13 = v4;
    v12(v9, v10, v11);
    v14 = *(int *)(a3 + 24);
    v15 = &v7[v14];
    v16 = (uint64_t)a2 + v14;
    v17 = *(uint64_t *)((char *)a2 + v14);
    v18 = *(_QWORD *)(v16 + 8);
    *(_QWORD *)v15 = v17;
    *((_QWORD *)v15 + 1) = v18;
    *((_QWORD *)v15 + 2) = *(_QWORD *)(v16 + 16);
    v19 = (int *)type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
    v20 = v19[6];
    v21 = &v15[v20];
    v22 = v16 + v20;
    v23 = type metadata accessor for UUID();
    v24 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v24(v21, v22, v23);
    v25 = v19[7];
    v26 = &v15[v25];
    v27 = v16 + v25;
    v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
    v15[v19[8]] = *(_BYTE *)(v16 + v19[8]);
    v29 = v19[9];
    v30 = &v15[v29];
    v31 = (_QWORD *)(v16 + v29);
    v32 = v31[1];
    *(_QWORD *)v30 = *v31;
    *((_QWORD *)v30 + 1) = v32;
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t destroy for LocalEmergencyCallDisambiguationView(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;

  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = (char *)a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
  v8 = &v6[*(int *)(v7 + 24)];
  v9 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = &v6[*(int *)(v7 + 28)];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for LocalEmergencyCallDisambiguationView(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  id v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;

  v7 = *(void **)a2;
  v6 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v6;
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for ActionHandler();
  v12 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  v13 = v7;
  v12(v9, v10, v11);
  v14 = *(int *)(a3 + 24);
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = a2 + v14;
  v17 = *(_QWORD *)(a2 + v14 + 8);
  *v15 = *(_QWORD *)(a2 + v14);
  v15[1] = v17;
  v15[2] = *(_QWORD *)(a2 + v14 + 16);
  v18 = (int *)type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
  v19 = v18[6];
  v20 = (char *)v15 + v19;
  v21 = v16 + v19;
  v22 = type metadata accessor for UUID();
  v23 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v23(v20, v21, v22);
  v24 = v18[7];
  v25 = (char *)v15 + v24;
  v26 = v16 + v24;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
  *((_BYTE *)v15 + v18[8]) = *(_BYTE *)(v16 + v18[8]);
  v28 = v18[9];
  v29 = (_QWORD *)((char *)v15 + v28);
  v30 = (_QWORD *)(v16 + v28);
  v31 = v30[1];
  *v29 = *v30;
  v29[1] = v31;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LocalEmergencyCallDisambiguationView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;

  v6 = *(void **)a1;
  v7 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v7;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v9 = *(int *)(a3 + 20);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v13 = *(int *)(a3 + 24);
  v14 = (_QWORD *)(a1 + v13);
  v15 = a2 + v13;
  *v14 = *(_QWORD *)(a2 + v13);
  v14[1] = *(_QWORD *)(a2 + v13 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14[2] = *(_QWORD *)(v15 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = (int *)type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
  v17 = v16[6];
  v18 = (char *)v14 + v17;
  v19 = v15 + v17;
  v20 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 24))(v18, v19, v20);
  v21 = v16[7];
  v22 = (char *)v14 + v21;
  v23 = v15 + v21;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 24))(v22, v23, v24);
  *((_BYTE *)v14 + v16[8]) = *(_BYTE *)(v15 + v16[8]);
  v25 = v16[9];
  v26 = (_QWORD *)((char *)v14 + v25);
  v27 = (_QWORD *)(v15 + v25);
  *v26 = *v27;
  v26[1] = v27[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for LocalEmergencyCallDisambiguationView(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  *(_OWORD *)v11 = *(_OWORD *)((char *)a2 + v10);
  *((_QWORD *)v11 + 2) = *(_QWORD *)((char *)a2 + v10 + 16);
  v13 = (int *)type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
  v14 = v13[6];
  v15 = &v11[v14];
  v16 = &v12[v14];
  v17 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  v18 = v13[7];
  v19 = &v11[v18];
  v20 = &v12[v18];
  v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
  v11[v13[8]] = v12[v13[8]];
  *(_OWORD *)&v11[v13[9]] = *(_OWORD *)&v12[v13[9]];
  return a1;
}

uint64_t assignWithTake for LocalEmergencyCallDisambiguationView(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  char *v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  *(_QWORD *)(a1 + 8) = a2[1];
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (char *)a2 + v11;
  v14 = *(_QWORD *)((char *)a2 + v11 + 8);
  *v12 = *(_QWORD *)((char *)a2 + v11);
  v12[1] = v14;
  swift_bridgeObjectRelease();
  v12[2] = *((_QWORD *)v13 + 2);
  swift_bridgeObjectRelease();
  v15 = (int *)type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
  v16 = v15[6];
  v17 = (char *)v12 + v16;
  v18 = &v13[v16];
  v19 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, v18, v19);
  v20 = v15[7];
  v21 = (char *)v12 + v20;
  v22 = &v13[v20];
  v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 40))(v21, v22, v23);
  *((_BYTE *)v12 + v15[8]) = v13[v15[8]];
  v24 = v15[9];
  v25 = (_QWORD *)((char *)v12 + v24);
  v26 = &v13[v24];
  v28 = *(_QWORD *)v26;
  v27 = *((_QWORD *)v26 + 1);
  *v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LocalEmergencyCallDisambiguationView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_243B2A040(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = type metadata accessor for ActionHandler();
    v10 = *(_QWORD *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v9;
      v12 = *(int *)(a3 + 20);
    }
    else
    {
      v11 = type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
      v10 = *(_QWORD *)(v11 - 8);
      v12 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(&a1[v12], a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for LocalEmergencyCallDisambiguationView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_243B2A0F8(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)result = a2;
  }
  else
  {
    v8 = type metadata accessor for ActionHandler();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

uint64_t type metadata completion function for LocalEmergencyCallDisambiguationView()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for ActionHandler();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for LocalEmergencyCallDisambiguationModel(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalEmergencyCallDisambiguationView_Previews()
{
  return &type metadata for LocalEmergencyCallDisambiguationView_Previews;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ComponentStack<_ConditionalContent<ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>>, TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ComponentStack<_ConditionalContent<ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>>, TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ComponentStack<_ConditionalContent<ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>>, TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ComponentStack<_ConditionalContent<ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>>, TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>>>, _AppearanceActionModifier>);
    v2[0] = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type ComponentStack<_ConditionalContent<ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>>, TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>>> and conformance ComponentStack<A>, &demangling cache variable for type metadata for ComponentStack<_ConditionalContent<ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>>, TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>>>, MEMORY[0x24BEADBF8]);
    v2[1] = MEMORY[0x24BDF0908];
    result = MEMORY[0x249501140](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ComponentStack<_ConditionalContent<ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>>, TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t partial apply for closure #1 in LocalEmergencyCallDisambiguationView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for LocalEmergencyCallDisambiguationView() - 8) + 80);
  return closure #1 in LocalEmergencyCallDisambiguationView.body.getter((void **)(v1 + ((v3 + 16) & ~v3)), a1);
}

void partial apply for closure #2 in LocalEmergencyCallDisambiguationView.body.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for LocalEmergencyCallDisambiguationView() - 8) + 80);
  closure #2 in LocalEmergencyCallDisambiguationView.body.getter((id *)(v0 + ((v1 + 16) & ~v1)));
}

uint64_t partial apply for closure #1 in LocalEmergencyCallDisambiguationView.listView.getter(uint64_t a1, uint64_t a2)
{
  return partial apply for closure #1 in LocalEmergencyCallDisambiguationView.listView.getter(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))closure #1 in LocalEmergencyCallDisambiguationView.listView.getter);
}

uint64_t partial apply for closure #1 in closure #1 in LocalEmergencyCallDisambiguationView.body.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for LocalEmergencyCallDisambiguationView() - 8) + 80);
  return closure #1 in closure #1 in LocalEmergencyCallDisambiguationView.body.getter(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t objectdestroyTm_11()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;

  v1 = type metadata accessor for LocalEmergencyCallDisambiguationView();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (id *)(v0 + ((v2 + 16) & ~v2));

  v4 = (char *)v3 + *(int *)(v1 + 20);
  v5 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = (char *)v3 + *(int *)(v1 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
  v8 = &v6[*(int *)(v7 + 24)];
  v9 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = &v6[*(int *)(v7 + 28)];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in LocalEmergencyCallDisambiguationView.body.getter(uint64_t a1, uint64_t a2)
{
  return partial apply for closure #1 in LocalEmergencyCallDisambiguationView.listView.getter(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))closure #1 in closure #1 in closure #1 in LocalEmergencyCallDisambiguationView.body.getter);
}

uint64_t partial apply for closure #1 in LocalEmergencyCallDisambiguationView.listView.getter(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v6;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for LocalEmergencyCallDisambiguationView() - 8) + 80);
  return a3(a1, a2, v3 + ((v6 + 16) & ~v6));
}

uint64_t sub_243B2A548()
{
  uint64_t v0;

  outlined consume of Text.Storage(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<SimpleItemRichView, CarPlayDisambiguationListItem> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<SimpleItemRichView, CarPlayDisambiguationListItem> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<SimpleItemRichView, CarPlayDisambiguationListItem> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<SimpleItemRichView, CarPlayDisambiguationListItem>);
    v2[0] = lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type SimpleItemRichView and conformance SimpleItemRichView, (uint64_t (*)(uint64_t))MEMORY[0x24BEADE98], MEMORY[0x24BEADE78]);
    v2[1] = lazy protocol witness table accessor for type CarPlayDisambiguationListItem and conformance CarPlayDisambiguationListItem();
    result = MEMORY[0x249501140](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<SimpleItemRichView, CarPlayDisambiguationListItem> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t outlined destroy of LocalEmergencyCallDisambiguationView(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for LocalEmergencyCallDisambiguationView();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t objectdestroy_28Tm()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void (*v11)(unint64_t, uint64_t);
  unint64_t v12;
  uint64_t v13;
  void (*v14)(unint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v24;
  void (*v25)(unint64_t, uint64_t);

  v1 = (int *)type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = type metadata accessor for LocalEmergencyCallDisambiguationView();
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  v24 = (v3 + v4 + v6) & ~v6;
  v7 = v0 + v3;
  v8 = type metadata accessor for UUID();
  v25 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
  v25(v0 + v3, v8);
  v9 = v0 + v3 + v1[5];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  v11 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
  v11(v9, v10);
  v12 = v0 + v3 + v1[6];
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v14 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8);
  v14(v12, v13);
  v15 = v7 + v1[7];
  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v11(v7 + v1[8], v10);
  v17 = v7 + v1[9];
  v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);

  v19 = v0 + v24 + *(int *)(v5 + 20);
  v20 = type metadata accessor for ActionHandler();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = v0 + v24 + *(int *)(v5 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v22 = type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
  v25(v21 + *(int *)(v22 + 24), v8);
  v14(v21 + *(int *)(v22 + 28), v13);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in closure #1 in LocalEmergencyCallDisambiguationView.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for DisambiguationItemWithDirectInvocationModel(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for LocalEmergencyCallDisambiguationView() - 8) + 80);
  return closure #1 in closure #1 in closure #1 in closure #1 in LocalEmergencyCallDisambiguationView.body.getter(v0 + v2, v0 + ((v2 + v3 + v4) & ~v4));
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Group<_ConditionalContent<SimpleItemStandardView, SimpleItemRichView>>, CarPlayDisambiguationListItem> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<Group<_ConditionalContent<SimpleItemStandardView, SimpleItemRichView>>, CarPlayDisambiguationListItem> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Group<_ConditionalContent<SimpleItemStandardView, SimpleItemRichView>>, CarPlayDisambiguationListItem> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Group<_ConditionalContent<SimpleItemStandardView, SimpleItemRichView>>, CarPlayDisambiguationListItem>);
    v2[0] = lazy protocol witness table accessor for type Group<_ConditionalContent<SimpleItemStandardView, SimpleItemRichView>> and conformance <A> Group<A>();
    v2[1] = lazy protocol witness table accessor for type CarPlayDisambiguationListItem and conformance CarPlayDisambiguationListItem();
    result = MEMORY[0x249501140](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Group<_ConditionalContent<SimpleItemStandardView, SimpleItemRichView>>, CarPlayDisambiguationListItem> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Group<_ConditionalContent<SimpleItemStandardView, SimpleItemRichView>> and conformance <A> Group<A>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = lazy protocol witness table cache variable for type Group<_ConditionalContent<SimpleItemStandardView, SimpleItemRichView>> and conformance <A> Group<A>;
  if (!lazy protocol witness table cache variable for type Group<_ConditionalContent<SimpleItemStandardView, SimpleItemRichView>> and conformance <A> Group<A>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Group<_ConditionalContent<SimpleItemStandardView, SimpleItemRichView>>);
    v2 = lazy protocol witness table accessor for type _ConditionalContent<SimpleItemStandardView, SimpleItemRichView> and conformance <> _ConditionalContent<A, B>();
    result = MEMORY[0x249501140](MEMORY[0x24BDF3F48], v1, &v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Group<_ConditionalContent<SimpleItemStandardView, SimpleItemRichView>> and conformance <A> Group<A>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<SimpleItemStandardView, SimpleItemRichView> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type _ConditionalContent<SimpleItemStandardView, SimpleItemRichView> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<SimpleItemStandardView, SimpleItemRichView> and conformance <> _ConditionalContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<SimpleItemStandardView, SimpleItemRichView>);
    v2[0] = lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type SimpleItemStandardView and conformance SimpleItemStandardView, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE188], MEMORY[0x24BEAE170]);
    v2[1] = lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type SimpleItemRichView and conformance SimpleItemRichView, (uint64_t (*)(uint64_t))MEMORY[0x24BEADE98], MEMORY[0x24BEADE78]);
    result = MEMORY[0x249501140](MEMORY[0x24BDEF3D8], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<SimpleItemStandardView, SimpleItemRichView> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

double SingleResultVoicemailView.circleWidth.getter()
{
  double v1;

  type metadata accessor for SingleResultVoicemailView();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  ScaledMetric.wrappedValue.getter();
  return v1;
}

uint64_t type metadata accessor for SingleResultVoicemailView()
{
  uint64_t result;

  result = type metadata singleton initialization cache for SingleResultVoicemailView;
  if (!type metadata singleton initialization cache for SingleResultVoicemailView)
    return swift_getSingletonMetadata();
  return result;
}

double SingleResultVoicemailView.circleHeight.getter()
{
  double v1;

  type metadata accessor for SingleResultVoicemailView();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  ScaledMetric.wrappedValue.getter();
  return v1;
}

uint64_t SingleResultVoicemailView.singleVoicemailModel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for SingleResultVoicemailView();
  return outlined init with copy of SearchCallHistoryBinaryButtonModel(v1 + *(int *)(v3 + 32), a1, (uint64_t (*)(_QWORD))type metadata accessor for SingleResultVoicemailModel);
}

uint64_t property wrapper backing initializer of SingleResultVoicemailView.progress()
{
  uint64_t v1;

  State.init(wrappedValue:)();
  return v1;
}

double SingleResultVoicemailView.progress.getter()
{
  double v1;

  type metadata accessor for SingleResultVoicemailView();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<CGFloat>);
  State.wrappedValue.getter();
  return v1;
}

double key path getter for SingleResultVoicemailView.progress : SingleResultVoicemailView@<D0>(double *a1@<X8>)
{
  double result;
  double v3;

  type metadata accessor for SingleResultVoicemailView();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<CGFloat>);
  State.wrappedValue.getter();
  result = v3;
  *a1 = v3;
  return result;
}

uint64_t key path setter for SingleResultVoicemailView.progress : SingleResultVoicemailView()
{
  type metadata accessor for SingleResultVoicemailView();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<CGFloat>);
  return State.wrappedValue.setter();
}

uint64_t SingleResultVoicemailView.progress.setter()
{
  type metadata accessor for SingleResultVoicemailView();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<CGFloat>);
  return State.wrappedValue.setter();
}

void (*SingleResultVoicemailView.progress.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SingleResultVoicemailView() + 36));
  v5 = *v4;
  v3[4] = *v4;
  v6 = v4[1];
  v3[5] = v6;
  *v3 = v5;
  v3[1] = v6;
  swift_retain();
  v3[6] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<CGFloat>);
  State.wrappedValue.getter();
  return SingleResultVoicemailView.progress.modify;
}

void SingleResultVoicemailView.progress.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD **)a1;
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  *v1 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v1[1] = v3;
  v1[3] = v2;
  State.wrappedValue.setter();
  swift_release();
  free(v1);
}

double SingleResultVoicemailView.$progress.getter()
{
  double v1;

  type metadata accessor for SingleResultVoicemailView();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<CGFloat>);
  State.projectedValue.getter();
  return v1;
}

uint64_t property wrapper backing initializer of SingleResultVoicemailView.shouldStartTimer()
{
  unsigned __int8 v1;

  State.init(wrappedValue:)();
  return v1;
}

uint64_t SingleResultVoicemailView.shouldStartTimer.getter()
{
  unsigned __int8 v1;

  type metadata accessor for SingleResultVoicemailView();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.wrappedValue.getter();
  return v1;
}

uint64_t key path getter for SingleResultVoicemailView.shouldStartTimer : SingleResultVoicemailView@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  type metadata accessor for SingleResultVoicemailView();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  result = State.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t key path setter for SingleResultVoicemailView.shouldStartTimer : SingleResultVoicemailView()
{
  type metadata accessor for SingleResultVoicemailView();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  return State.wrappedValue.setter();
}

uint64_t SingleResultVoicemailView.shouldStartTimer.setter()
{
  type metadata accessor for SingleResultVoicemailView();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  return State.wrappedValue.setter();
}

void (*SingleResultVoicemailView.shouldStartTimer.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _BYTE *v3;
  char *v4;
  char v5;
  uint64_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = (char *)(v1 + *(int *)(type metadata accessor for SingleResultVoicemailView() + 40));
  v5 = *v4;
  v3[34] = *v4;
  v6 = *((_QWORD *)v4 + 1);
  *v3 = v5;
  *((_QWORD *)v3 + 1) = v6;
  *((_QWORD *)v3 + 2) = v6;
  swift_retain();
  *((_QWORD *)v3 + 3) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.wrappedValue.getter();
  return SingleResultVoicemailView.shouldStartTimer.modify;
}

void SingleResultVoicemailView.shouldStartTimer.modify(uint64_t a1)
{
  _QWORD *v1;
  char v2;
  uint64_t v3;

  v1 = *(_QWORD **)a1;
  v2 = *(_BYTE *)(*(_QWORD *)a1 + 32);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  *(_BYTE *)v1 = *(_BYTE *)(*(_QWORD *)a1 + 34);
  v1[1] = v3;
  *((_BYTE *)v1 + 33) = v2;
  State.wrappedValue.setter();
  swift_release();
  free(v1);
}

uint64_t SingleResultVoicemailView.$shouldStartTimer.getter()
{
  uint64_t v1;

  type metadata accessor for SingleResultVoicemailView();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.projectedValue.getter();
  return v1;
}

uint64_t SingleResultVoicemailView.init(singleVoicemailModel:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  uint64_t *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v26 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  MEMORY[0x24BDAC7A8](v3);
  v27 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Font.TextStyle();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Context();
  lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
  *a2 = EnvironmentObject.init()();
  a2[1] = v9;
  v10 = (int *)type metadata accessor for SingleResultVoicemailView();
  ActionHandler.init()();
  v29 = 0x4041800000000000;
  v11 = *MEMORY[0x24BDF1870];
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
  v12(v8, v11, v5);
  lazy protocol witness table accessor for type CGFloat and conformance CGFloat();
  ScaledMetric.init(wrappedValue:relativeTo:)();
  v29 = 0x4041800000000000;
  v12(v8, v11, v5);
  ScaledMetric.init(wrappedValue:relativeTo:)();
  v13 = (uint64_t *)((char *)a2 + v10[9]);
  v28 = 0;
  State.init(wrappedValue:)();
  v14 = v30;
  *v13 = v29;
  v13[1] = v14;
  v15 = (char *)a2 + v10[10];
  LOBYTE(v28) = 0;
  State.init(wrappedValue:)();
  v16 = v30;
  *v15 = v29;
  *((_QWORD *)v15 + 1) = v16;
  v17 = v26;
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v26, (uint64_t)a2 + v10[8], (uint64_t (*)(_QWORD))type metadata accessor for SingleResultVoicemailModel);
  type metadata accessor for NSTimer();
  v18 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
  v19 = type metadata accessor for NSRunLoop.SchedulerOptions();
  v20 = (uint64_t)v27;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v27, 1, 1, v19);
  v21 = static NSTimer.publish(every:tolerance:on:in:options:)();

  outlined destroy of SearchCallHistoryBinaryButtonModel?(v20, &demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  v29 = v21;
  type metadata accessor for NSTimer.TimerPublisher();
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher, (uint64_t (*)(uint64_t))MEMORY[0x24BDD01C8], MEMORY[0x24BDD01B0]);
  v22 = ConnectablePublisher.autoconnect()();
  swift_release();
  *(uint64_t *)((char *)a2 + v10[11]) = v22;
  v23 = ceil(*(double *)(v17 + 80));
  result = outlined destroy of SingleResultCallHistoryModel(v17, (uint64_t (*)(_QWORD))type metadata accessor for SingleResultVoicemailModel);
  *(double *)((char *)a2 + v10[12]) = v23;
  return result;
}

unint64_t type metadata accessor for NSTimer()
{
  unint64_t result;

  result = lazy cache variable for type metadata for NSTimer;
  if (!lazy cache variable for type metadata for NSTimer)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for NSTimer);
  }
  return result;
}

uint64_t SingleResultVoicemailView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (**v30)();
  uint64_t v31;
  id v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (**v40)();
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t result;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id *v58;

  v2 = v1;
  v57 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[AnyHashable : Any]>.Publisher);
  v55 = *(_QWORD *)(v3 - 8);
  v56 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v54 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = type metadata accessor for SingleResultVoicemailView();
  v5 = *(_QWORD *)(v49 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v49);
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ComponentStack<TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<SimpleItemStandardView, _PaddingLayout>)>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>, _PaddingLayout>?, SearchCallHistoryBinaryButtonView)>>);
  v46 = *(_QWORD *)(v8 - 8);
  v47 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<SimpleItemStandardView, _PaddingLayout>)>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>, _PaddingLayout>?, SearchCallHistoryBinaryButtonView)>>, _BackgroundStyleModifier<BackgroundStyle>>);
  MEMORY[0x24BDAC7A8](v45);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SubscriptionView<Publishers.Autoconnect<NSTimer.TimerPublisher>, ModifiedContent<ComponentStack<TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<SimpleItemStandardView, _PaddingLayout>)>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>, _PaddingLayout>?, SearchCallHistoryBinaryButtonView)>>, _BackgroundStyleModifier<BackgroundStyle>>>);
  MEMORY[0x24BDAC7A8](v48);
  v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SubscriptionView<Published<[AnyHashable : Any]>.Publisher, SubscriptionView<Publishers.Autoconnect<NSTimer.TimerPublisher>, ModifiedContent<ComponentStack<TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<SimpleItemStandardView, _PaddingLayout>)>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>, _PaddingLayout>?, SearchCallHistoryBinaryButtonView)>>, _BackgroundStyleModifier<BackgroundStyle>>>>);
  MEMORY[0x24BDAC7A8](v51);
  v50 = (uint64_t)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<SubscriptionView<Published<[AnyHashable : Any]>.Publisher, SubscriptionView<Publishers.Autoconnect<NSTimer.TimerPublisher>, ModifiedContent<ComponentStack<TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<SimpleItemStandardView, _PaddingLayout>)>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>, _PaddingLayout>?, SearchCallHistoryBinaryButtonView)>>, _BackgroundStyleModifier<BackgroundStyle>>>>, _AppearanceActionModifier>);
  MEMORY[0x24BDAC7A8](v52);
  v53 = (uint64_t)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v2, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for SingleResultVoicemailView);
  v17 = *(unsigned __int8 *)(v5 + 80);
  v18 = (v17 + 16) & ~v17;
  v19 = v17 | 7;
  v20 = swift_allocObject();
  outlined init with take of SingleResultVoicemailView((uint64_t)v7, v20 + v18);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<SimpleItemStandardView, _PaddingLayout>)>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>, _PaddingLayout>?, SearchCallHistoryBinaryButtonView)>);
  v22 = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<SimpleItemStandardView, _PaddingLayout>)>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>, _PaddingLayout>?, SearchCallHistoryBinaryButtonView)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<SimpleItemStandardView, _PaddingLayout>)>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>, _PaddingLayout>?, SearchCallHistoryBinaryButtonView)>, MEMORY[0x24BDF5420]);
  MEMORY[0x24950072C](partial apply for closure #1 in SingleResultVoicemailView.body.getter, v20, v21, v22);
  LOBYTE(v20) = static Edge.Set.all.getter();
  v24 = v46;
  v23 = v47;
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v12, v10, v47);
  v12[*(int *)(v45 + 36)] = v20;
  (*(void (**)(char *, uint64_t))(v24 + 8))(v10, v23);
  v25 = *(uint64_t *)((char *)v58 + *(int *)(v49 + 44));
  v26 = v58;
  outlined init with copy of SearchCallHistoryBinaryButtonModel((uint64_t)v58, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for SingleResultVoicemailView);
  v49 = v19;
  v27 = swift_allocObject();
  outlined init with take of SingleResultVoicemailView((uint64_t)v7, v27 + v18);
  outlined init with copy of SearchCallHistoryBinaryButtonModel?((uint64_t)v12, (uint64_t)v14, &demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<SimpleItemStandardView, _PaddingLayout>)>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>, _PaddingLayout>?, SearchCallHistoryBinaryButtonView)>>, _BackgroundStyleModifier<BackgroundStyle>>);
  v28 = v48;
  *(_QWORD *)&v14[*(int *)(v48 + 52)] = v25;
  v29 = (uint64_t)v14;
  v30 = (uint64_t (**)())&v14[*(int *)(v28 + 56)];
  *v30 = partial apply for implicit closure #2 in implicit closure #1 in SingleResultVoicemailView.body.getter;
  v30[1] = (uint64_t (*)())v27;
  swift_retain();
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v12, &demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<SimpleItemStandardView, _PaddingLayout>)>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>, _PaddingLayout>?, SearchCallHistoryBinaryButtonView)>>, _BackgroundStyleModifier<BackgroundStyle>>);
  v31 = (uint64_t)v26;
  if (*v26)
  {
    v32 = *v26;
    v33 = v54;
    dispatch thunk of Context.$sharedState.getter();

    outlined init with copy of SearchCallHistoryBinaryButtonModel(v31, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for SingleResultVoicemailView);
    v34 = swift_allocObject();
    outlined init with take of SingleResultVoicemailView((uint64_t)v7, v34 + v18);
    v35 = v50;
    outlined init with copy of SearchCallHistoryBinaryButtonModel?((uint64_t)v14, v50, &demangling cache variable for type metadata for SubscriptionView<Publishers.Autoconnect<NSTimer.TimerPublisher>, ModifiedContent<ComponentStack<TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<SimpleItemStandardView, _PaddingLayout>)>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>, _PaddingLayout>?, SearchCallHistoryBinaryButtonView)>>, _BackgroundStyleModifier<BackgroundStyle>>>);
    v48 = v18;
    v36 = v35;
    v37 = v51;
    v39 = v55;
    v38 = v56;
    (*(void (**)(uint64_t, char *, uint64_t))(v55 + 16))(v36 + *(int *)(v51 + 52), v33, v56);
    v40 = (void (**)())(v36 + *(int *)(v37 + 56));
    *v40 = partial apply for closure #2 in SingleResultVoicemailView.body.getter;
    v40[1] = (void (*)())v34;
    (*(void (**)(char *, uint64_t))(v39 + 8))(v33, v38);
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v29, &demangling cache variable for type metadata for SubscriptionView<Publishers.Autoconnect<NSTimer.TimerPublisher>, ModifiedContent<ComponentStack<TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<SimpleItemStandardView, _PaddingLayout>)>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>, _PaddingLayout>?, SearchCallHistoryBinaryButtonView)>>, _BackgroundStyleModifier<BackgroundStyle>>>);
    outlined init with copy of SearchCallHistoryBinaryButtonModel((uint64_t)v58, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for SingleResultVoicemailView);
    v41 = swift_allocObject();
    outlined init with take of SingleResultVoicemailView((uint64_t)v7, v41 + v48);
    v42 = v53;
    outlined init with copy of SearchCallHistoryBinaryButtonModel?(v36, v53, &demangling cache variable for type metadata for SubscriptionView<Published<[AnyHashable : Any]>.Publisher, SubscriptionView<Publishers.Autoconnect<NSTimer.TimerPublisher>, ModifiedContent<ComponentStack<TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<SimpleItemStandardView, _PaddingLayout>)>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>, _PaddingLayout>?, SearchCallHistoryBinaryButtonView)>>, _BackgroundStyleModifier<BackgroundStyle>>>>);
    v43 = (_QWORD *)(v42 + *(int *)(v52 + 36));
    *v43 = 0;
    v43[1] = 0;
    v43[2] = partial apply for closure #3 in SingleResultVoicemailView.body.getter;
    v43[3] = v41;
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v36, &demangling cache variable for type metadata for SubscriptionView<Published<[AnyHashable : Any]>.Publisher, SubscriptionView<Publishers.Autoconnect<NSTimer.TimerPublisher>, ModifiedContent<ComponentStack<TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<SimpleItemStandardView, _PaddingLayout>)>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>, _PaddingLayout>?, SearchCallHistoryBinaryButtonView)>>, _BackgroundStyleModifier<BackgroundStyle>>>>);
    return outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout>, _ClipEffect<Capsule>>(v42, v57, &demangling cache variable for type metadata for ModifiedContent<SubscriptionView<Published<[AnyHashable : Any]>.Publisher, SubscriptionView<Publishers.Autoconnect<NSTimer.TimerPublisher>, ModifiedContent<ComponentStack<TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<SimpleItemStandardView, _PaddingLayout>)>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>, _PaddingLayout>?, SearchCallHistoryBinaryButtonView)>>, _BackgroundStyleModifier<BackgroundStyle>>>>, _AppearanceActionModifier>);
  }
  else
  {
    type metadata accessor for Context();
    lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE578], MEMORY[0x24BEAE528]);
    result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t closure #1 in SingleResultVoicemailView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  char v49;
  char v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  int *v161;
  uint64_t v163;
  uint64_t *v164;
  unint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  char *v171;
  char *v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  _QWORD *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  __int128 v201;
  __int128 v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  __int128 v212;
  __int128 v213;
  uint64_t v214;
  __int128 v215;
  __int128 v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  __int128 v220;
  __int128 v221;
  char v222;
  __int128 v223;
  __int128 v224;
  __int128 v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;

  v193 = a2;
  v189 = type metadata accessor for SearchCallHistoryBinaryButtonView();
  v3 = MEMORY[0x24BDAC7A8](v189);
  v194 = (uint64_t)&v163 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v192 = (char *)&v163 - v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>);
  MEMORY[0x24BDAC7A8](v6);
  v164 = (uint64_t *)((char *)&v163 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>, _PaddingLayout>);
  v9 = *(_QWORD *)(v8 - 8);
  v187 = v8;
  v188 = v9;
  MEMORY[0x24BDAC7A8](v8);
  v163 = (uint64_t)&v163 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>, _PaddingLayout>?);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v191 = (uint64_t)&v163 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v186 = (uint64_t)&v163 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<SimpleItemStandardView, _PaddingLayout>)>>);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v190 = (uint64_t)&v163 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v184 = (uint64_t *)((char *)&v163 - v19);
  MEMORY[0x24BDAC7A8](v18);
  v185 = (uint64_t)&v163 - v20;
  v21 = type metadata accessor for SeparatorStyle();
  v182 = *(_QWORD *)(v21 - 8);
  v183 = v21;
  MEMORY[0x24BDAC7A8](v21);
  v181 = (char *)&v163 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for ImageElement.ImageStyle();
  v167 = *(_QWORD *)(v23 - 8);
  v168 = v23;
  MEMORY[0x24BDAC7A8](v23);
  v166 = (char *)&v163 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for ImageElement();
  MEMORY[0x24BDAC7A8](v25);
  v171 = (char *)&v163 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for ImageElementView();
  v28 = *(_QWORD *)(v27 - 8);
  v174 = v27;
  v175 = v28;
  MEMORY[0x24BDAC7A8](v27);
  v172 = (char *)&v163 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for SingleResultVoicemailView();
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(_QWORD *)(v31 + 64);
  MEMORY[0x24BDAC7A8](v30);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.onTapGesture(count:perform:)>>.0);
  v165 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v35 = (char *)&v163 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v176 = type metadata accessor for SummaryItemButtonView();
  v178 = *(_QWORD *)(v176 - 8);
  MEMORY[0x24BDAC7A8](v176);
  v170 = (char *)&v163 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.separators(_:isOverride:)>>.0);
  v179 = *(_QWORD *)(v37 - 8);
  v180 = v37;
  MEMORY[0x24BDAC7A8](v37);
  v173 = (char *)&v163 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v177 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>);
  v39 = MEMORY[0x24BDAC7A8](v177);
  v196 = (uint64_t)&v163 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v39);
  v197 = (uint64_t)&v163 - v41;
  v42 = (_QWORD *)(a1 + *(int *)(v30 + 32));
  v44 = v42[2];
  v43 = v42[3];
  v229 = MEMORY[0x24BEE0D00];
  v230 = MEMORY[0x24BEAE5C0];
  v227 = v44;
  v228 = v43;
  swift_bridgeObjectRetain();
  v45 = static Alignment.center.getter();
  v47 = v46;
  v169 = a1;
  closure #1 in SingleResultVoicemailView.getRepeatView()((uint64_t)&v218);
  v48 = v218;
  v49 = BYTE4(v218);
  v50 = BYTE5(v218);
  v51 = v219;
  v52 = v221;
  v53 = *((_QWORD *)&v221 + 1);
  v54 = v222;
  v55 = v225;
  v56 = v220;
  v57 = v223;
  v58 = v224;
  v218 = v45;
  v219 = v47;
  LODWORD(v220) = v48;
  BYTE4(v220) = v49;
  BYTE5(v220) = v50;
  *((_QWORD *)&v220 + 1) = v51;
  v221 = v56;
  v222 = v52;
  *(_QWORD *)&v223 = v53;
  BYTE8(v223) = v54;
  v224 = v57;
  v225 = v58;
  v226 = v55;
  outlined init with copy of SearchCallHistoryBinaryButtonModel(a1, (uint64_t)&v163 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for SingleResultVoicemailView);
  v59 = (*(unsigned __int8 *)(v31 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  v60 = swift_allocObject();
  outlined init with take of SingleResultVoicemailView((uint64_t)&v163 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0), v60 + v59);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ZStack<TupleView<(ModifiedContent<ModifiedContent<_ShapeView<Circle, HierarchicalShapeStyle>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>)>>);
  v62 = lazy protocol witness table accessor for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>(&lazy protocol witness table cache variable for type ZStack<TupleView<(ModifiedContent<ModifiedContent<_ShapeView<Circle, HierarchicalShapeStyle>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>)>> and conformance ZStack<A>, &demangling cache variable for type metadata for ZStack<TupleView<(ModifiedContent<ModifiedContent<_ShapeView<Circle, HierarchicalShapeStyle>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>)>>, MEMORY[0x24BDF4758]);
  View.onTapGesture(count:perform:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v218 = v61;
  v219 = v62;
  swift_getOpaqueTypeConformance2();
  v63 = View.eraseToAnyView()();
  (*(void (**)(char *, uint64_t))(v165 + 8))(v35, v33);
  *(_QWORD *)&v221 = MEMORY[0x24BEAD940];
  *((_QWORD *)&v220 + 1) = MEMORY[0x24BDF4788];
  v218 = v63;
  v217 = 0;
  v215 = 0u;
  v216 = 0u;
  v214 = 0;
  v212 = 0u;
  v213 = 0u;
  v195 = v42;
  v64 = v42[5];
  v208 = v42[4];
  v209 = v64;
  v165 = lazy protocol witness table accessor for type String and conformance String();
  swift_bridgeObjectRetain();
  v65 = Text.init<A>(_:)();
  v67 = v66;
  LOBYTE(v62) = v68 & 1;
  v208 = static Color.secondary.getter();
  v69 = Text.foregroundStyle<A>(_:)();
  v71 = v70;
  LOBYTE(v63) = v72 & 1;
  outlined consume of Text.Storage(v65, v67, v62);
  swift_release();
  swift_bridgeObjectRelease();
  static Font.subheadline.getter();
  v73 = Text.font(_:)();
  v75 = v74;
  LOBYTE(v62) = v76;
  v78 = v77;
  swift_release();
  outlined consume of Text.Storage(v69, v71, v63);
  swift_bridgeObjectRelease();
  v210 = MEMORY[0x24BDF1FA0];
  v211 = MEMORY[0x24BEAD6B8];
  v79 = swift_allocObject();
  v208 = v79;
  *(_QWORD *)(v79 + 16) = v73;
  *(_QWORD *)(v79 + 24) = v75;
  *(_BYTE *)(v79 + 32) = v62 & 1;
  *(_QWORD *)(v79 + 40) = v78;
  v80 = v195[7];
  v204 = v195[6];
  v205 = v80;
  swift_bridgeObjectRetain();
  v81 = Text.init<A>(_:)();
  v83 = v82;
  LOBYTE(v73) = v84 & 1;
  v204 = static Color.secondary.getter();
  v85 = Text.foregroundStyle<A>(_:)();
  v87 = v86;
  LOBYTE(v63) = v88 & 1;
  outlined consume of Text.Storage(v81, v83, v73);
  swift_release();
  swift_bridgeObjectRelease();
  static Font.subheadline.getter();
  v89 = Text.font(_:)();
  v91 = v90;
  LOBYTE(v73) = v92;
  v94 = v93;
  swift_release();
  v95 = v87;
  v96 = v195;
  outlined consume of Text.Storage(v85, v95, v63);
  swift_bridgeObjectRelease();
  v206 = MEMORY[0x24BDF1FA0];
  v207 = MEMORY[0x24BEAD6B8];
  v97 = swift_allocObject();
  v204 = v97;
  *(_QWORD *)(v97 + 16) = v89;
  *(_QWORD *)(v97 + 24) = v91;
  *(_BYTE *)(v97 + 32) = v73 & 1;
  *(_QWORD *)(v97 + 40) = v94;
  v203 = 0;
  v201 = 0u;
  v202 = 0u;
  v99 = v166;
  v98 = v167;
  v100 = v168;
  (*(void (**)(char *, _QWORD, uint64_t))(v167 + 104))(v166, *MEMORY[0x24BEAAAD8], v168);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<_ProtoIdiom>);
  v101 = type metadata accessor for _ProtoIdiom();
  v102 = *(_QWORD *)(v101 - 8);
  v103 = (*(unsigned __int8 *)(v102 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v102 + 80);
  v104 = swift_allocObject();
  *(_OWORD *)(v104 + 16) = xmmword_243B32430;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v102 + 104))(v104 + v103, *MEMORY[0x24BEAA998], v101);
  specialized Set.init(_nonEmptyArrayLiteral:)(v104);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  static ImageElement.contactImageAvatar(contactIds:imageStyle:idioms:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v98 + 8))(v99, v100);
  v105 = v172;
  ImageElementView.init(_:)();
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type ImageElementView and conformance ImageElementView, (uint64_t (*)(uint64_t))MEMORY[0x24BEADD10], MEMORY[0x24BEADD00]);
  v106 = v174;
  v107 = View.eraseToAnyView()();
  (*(void (**)(char *, uint64_t))(v175 + 8))(v105, v106);
  v200 = MEMORY[0x24BEAD940];
  v199 = MEMORY[0x24BDF4788];
  v198 = v107;
  v108 = v170;
  SummaryItemButtonView.init(text1:button1:button2:button3:text2:text3:text4:thumbnail:)();
  v110 = v181;
  v109 = v182;
  v111 = v183;
  (*(void (**)(char *, _QWORD, uint64_t))(v182 + 104))(v181, *MEMORY[0x24BEAB518], v183);
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type SummaryItemButtonView and conformance SummaryItemButtonView, (uint64_t (*)(uint64_t))MEMORY[0x24BEAE0D8], MEMORY[0x24BEAE0B8]);
  v112 = v173;
  v113 = v176;
  View.separators(_:isOverride:)();
  (*(void (**)(char *, uint64_t))(v109 + 8))(v110, v111);
  (*(void (**)(char *, uint64_t))(v178 + 8))(v108, v113);
  LOBYTE(v107) = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  v115 = v114;
  v117 = v116;
  v119 = v118;
  v121 = v120;
  v123 = v179;
  v122 = v180;
  v124 = v196;
  v125 = v112;
  v126 = 1;
  (*(void (**)(uint64_t, char *, uint64_t))(v179 + 16))(v196, v125, v180);
  v127 = v124 + *(int *)(v177 + 36);
  *(_BYTE *)v127 = v107;
  v128 = v169;
  *(_QWORD *)(v127 + 8) = v115;
  *(_QWORD *)(v127 + 16) = v117;
  *(_QWORD *)(v127 + 24) = v119;
  *(_QWORD *)(v127 + 32) = v121;
  *(_BYTE *)(v127 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v123 + 8))(v125, v122);
  v129 = v124;
  v130 = v197;
  outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout>, _ClipEffect<Capsule>>(v124, v197, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>);
  v131 = static HorizontalAlignment.center.getter();
  v132 = (uint64_t)v184;
  *v184 = v131;
  *(_QWORD *)(v132 + 8) = 0;
  *(_BYTE *)(v132 + 16) = 1;
  v133 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<SimpleItemStandardView, _PaddingLayout>)>>);
  closure #1 in closure #1 in SingleResultVoicemailView.body.getter(v128, v132 + *(int *)(v133 + 44));
  v134 = v185;
  outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout>, _ClipEffect<Capsule>>(v132, v185, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<SimpleItemStandardView, _PaddingLayout>)>>);
  v135 = v96[13];
  v136 = v96[12] & 0xFFFFFFFFFFFFLL;
  if ((v135 & 0x2000000000000000) != 0)
    v136 = HIBYTE(v135) & 0xF;
  if (v136)
  {
    v137 = static HorizontalAlignment.leading.getter();
    v138 = (uint64_t)v164;
    *v164 = v137;
    *(_QWORD *)(v138 + 8) = 0;
    *(_BYTE *)(v138 + 16) = 1;
    v139 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>);
    closure #2 in closure #1 in SingleResultVoicemailView.body.getter(v128, v138 + *(int *)(v139 + 44));
    v140 = static Edge.Set.vertical.getter();
    EdgeInsets.init(_all:)();
    v142 = v141;
    v144 = v143;
    v146 = v145;
    v148 = v147;
    v149 = v163;
    outlined init with copy of SearchCallHistoryBinaryButtonModel?(v138, v163, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>);
    v150 = v187;
    v151 = v149 + *(int *)(v187 + 36);
    *(_BYTE *)v151 = v140;
    *(_QWORD *)(v151 + 8) = v142;
    *(_QWORD *)(v151 + 16) = v144;
    *(_QWORD *)(v151 + 24) = v146;
    *(_QWORD *)(v151 + 32) = v148;
    *(_BYTE *)(v151 + 40) = 0;
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v138, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>);
    v152 = v186;
    outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout>, _ClipEffect<Capsule>>(v149, v186, &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>, _PaddingLayout>);
    v126 = 0;
    v153 = v150;
  }
  else
  {
    v152 = v186;
    v153 = v187;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v188 + 56))(v152, v126, 1, v153);
  v154 = (uint64_t)v96 + *(int *)(type metadata accessor for SingleResultVoicemailModel() + 60);
  v155 = (uint64_t)v192;
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v154, (uint64_t)&v192[*(int *)(v189 + 20)], (uint64_t (*)(_QWORD))type metadata accessor for SearchCallHistoryBinaryButtonModel);
  ActionHandler.init()();
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v130, v129, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>);
  v156 = v190;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v134, v190, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<SimpleItemStandardView, _PaddingLayout>)>>);
  v157 = v191;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v152, v191, &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>, _PaddingLayout>?);
  v158 = v194;
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v155, v194, (uint64_t (*)(_QWORD))type metadata accessor for SearchCallHistoryBinaryButtonView);
  v159 = v129;
  v160 = v193;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v159, v193, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>);
  v161 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<SimpleItemStandardView, _PaddingLayout>)>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>, _PaddingLayout>?, SearchCallHistoryBinaryButtonView));
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v156, v160 + v161[12], &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<SimpleItemStandardView, _PaddingLayout>)>>);
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v157, v160 + v161[16], &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>, _PaddingLayout>?);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v158, v160 + v161[20], (uint64_t (*)(_QWORD))type metadata accessor for SearchCallHistoryBinaryButtonView);
  outlined destroy of SingleResultCallHistoryModel(v155, (uint64_t (*)(_QWORD))type metadata accessor for SearchCallHistoryBinaryButtonView);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v152, &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>, _PaddingLayout>?);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v134, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<SimpleItemStandardView, _PaddingLayout>)>>);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v197, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>);
  outlined destroy of SingleResultCallHistoryModel(v158, (uint64_t (*)(_QWORD))type metadata accessor for SearchCallHistoryBinaryButtonView);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v157, &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>, _PaddingLayout>?);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v156, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<SimpleItemStandardView, _PaddingLayout>)>>);
  return outlined destroy of SearchCallHistoryBinaryButtonModel?(v196, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>);
}

uint64_t outlined init with take of SingleResultVoicemailView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SingleResultVoicemailView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t partial apply for closure #1 in SingleResultVoicemailView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SingleResultVoicemailView() - 8) + 80);
  return closure #1 in SingleResultVoicemailView.body.getter(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t closure #1 in closure #1 in SingleResultVoicemailView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t KeyPath;
  uint64_t *v48;
  double v49;
  id v50;
  id v51;
  void *v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  Swift::String v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  __int128 v118;
  __int128 v119;
  uint64_t v120;
  __int128 v121;
  __int128 v122;
  uint64_t v123;
  __int128 v124;
  __int128 v125;
  uint64_t v126;
  __int128 v127;
  __int128 v128;
  uint64_t v129;
  double v130;
  char v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;

  v117 = a2;
  v115 = type metadata accessor for SimpleItemStandardView();
  v113 = *(_QWORD *)(v115 - 8);
  MEMORY[0x24BDAC7A8](v115);
  v112 = (char *)&v102 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<SimpleItemStandardView, _PaddingLayout>);
  v4 = MEMORY[0x24BDAC7A8](v111);
  v116 = (uint64_t)&v102 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v110 = (char *)&v102 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v114 = (uint64_t)&v102 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ProgressView<EmptyView, EmptyView>);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v102 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>);
  MEMORY[0x24BDAC7A8](v103);
  v14 = (char *)&v102 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>);
  MEMORY[0x24BDAC7A8](v106);
  v16 = (char *)&v102 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = (char *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>);
  v17 = MEMORY[0x24BDAC7A8](v109);
  v102 = (char *)&v102 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v102 - v19;
  v21 = type metadata accessor for SingleResultVoicemailView();
  v22 = (uint64_t *)(a1 + *(int *)(v21 + 36));
  v23 = *v22;
  v105 = v22[1];
  v134 = v23;
  v135 = v105;
  v104 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<CGFloat>);
  State.wrappedValue.getter();
  v131 = 0;
  v107 = v21;
  v108 = a1;
  v134 = *(_QWORD *)(a1 + *(int *)(v21 + 48));
  lazy protocol witness table accessor for type Double and conformance Double();
  ProgressView.init<A>(value:total:)();
  v24 = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  v26 = v25;
  v28 = v27;
  v30 = v29;
  v32 = v31;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v14, v12, v9);
  v33 = &v14[*(int *)(v103 + 36)];
  *v33 = v24;
  *((_QWORD *)v33 + 1) = v26;
  *((_QWORD *)v33 + 2) = v28;
  *((_QWORD *)v33 + 3) = v30;
  *((_QWORD *)v33 + 4) = v32;
  v33[40] = 0;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v34 = static Edge.Set.vertical.getter();
  EdgeInsets.init(_all:)();
  v36 = v35;
  v38 = v37;
  v40 = v39;
  v42 = v41;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?((uint64_t)v14, (uint64_t)v16, &demangling cache variable for type metadata for ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>);
  v43 = &v16[*(int *)(v106 + 36)];
  *v43 = v34;
  *((_QWORD *)v43 + 1) = v36;
  *((_QWORD *)v43 + 2) = v38;
  *((_QWORD *)v43 + 3) = v40;
  *((_QWORD *)v43 + 4) = v42;
  v43[40] = 0;
  v44 = (uint64_t)v14;
  v45 = (uint64_t)v102;
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v44, &demangling cache variable for type metadata for ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>);
  v46 = static Color.gray.getter();
  KeyPath = swift_getKeyPath();
  outlined init with copy of SearchCallHistoryBinaryButtonModel?((uint64_t)v16, v45, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>);
  v48 = (uint64_t *)(v45 + *((int *)v109 + 9));
  *v48 = KeyPath;
  v48[1] = v46;
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v16, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>);
  v109 = v20;
  outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout>, _ClipEffect<Capsule>>(v45, (uint64_t)v20, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>);
  v134 = v23;
  v135 = v105;
  State.wrappedValue.getter();
  v49 = v130;
  v50 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD14F8]), sel_init);
  objc_msgSend(v50, sel_setUnitsStyle_, 0);
  objc_msgSend(v50, sel_setAllowedUnits_, 192);
  objc_msgSend(v50, sel_setZeroFormattingBehavior_, 0x10000);
  v51 = objc_msgSend(v50, sel_stringFromTimeInterval_, v49);
  if (v51)
  {
    v52 = v51;
    v53 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v55 = v54;

    v56._countAndFlagsBits = 48;
    v56._object = (void *)0xE100000000000000;
    if (String.hasPrefix(_:)(v56))
    {
      v57 = specialized Collection.dropFirst(_:)(1uLL, v53, v55);
      v59 = v58;
      v61 = v60;
      v63 = v62;
      swift_bridgeObjectRelease();
      MEMORY[0x2495009CC](v57, v59, v61, v63);
      swift_bridgeObjectRelease();
    }
  }

  v64 = SingleResultVoicemailView.getVoicemailTimeText(input:)();
  v66 = v65;
  v68 = v67;
  v70 = v69;
  swift_bridgeObjectRelease();
  v71 = MEMORY[0x24BDF1FA0];
  v72 = MEMORY[0x24BEAD6B8];
  v136 = MEMORY[0x24BDF1FA0];
  v137 = MEMORY[0x24BEAD6B8];
  v73 = swift_allocObject();
  v134 = v73;
  *(_QWORD *)(v73 + 16) = v64;
  *(_QWORD *)(v73 + 24) = v66;
  *(_BYTE *)(v73 + 32) = v68 & 1;
  *(_QWORD *)(v73 + 40) = v70;
  v74 = SingleResultVoicemailView.getVoicemailTimeText(input:)();
  v76 = v75;
  v78 = v77;
  v80 = v79;
  v132 = v71;
  v133 = v72;
  v81 = swift_allocObject();
  v129 = 0;
  v130 = *(double *)&v81;
  *(_QWORD *)(v81 + 16) = v74;
  *(_QWORD *)(v81 + 24) = v76;
  *(_BYTE *)(v81 + 32) = v78 & 1;
  *(_QWORD *)(v81 + 40) = v80;
  v127 = 0u;
  v128 = 0u;
  v126 = 0;
  v124 = 0u;
  v125 = 0u;
  v123 = 0;
  v121 = 0u;
  v122 = 0u;
  v120 = 0;
  v118 = 0u;
  v119 = 0u;
  v82 = v112;
  SimpleItemStandardView.init(text1:text2:text3:text4:text5:text6:)();
  LOBYTE(v74) = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  v84 = v83;
  v86 = v85;
  v88 = v87;
  v90 = v89;
  v91 = v113;
  v92 = v110;
  v93 = v115;
  (*(void (**)(char *, char *, uint64_t))(v113 + 16))(v110, v82, v115);
  v94 = &v92[*(int *)(v111 + 36)];
  *v94 = v74;
  *((_QWORD *)v94 + 1) = v84;
  *((_QWORD *)v94 + 2) = v86;
  *((_QWORD *)v94 + 3) = v88;
  *((_QWORD *)v94 + 4) = v90;
  v94[40] = 0;
  (*(void (**)(char *, uint64_t))(v91 + 8))(v82, v93);
  v95 = (uint64_t)v92;
  v96 = v114;
  outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout>, _ClipEffect<Capsule>>(v95, v114, &demangling cache variable for type metadata for ModifiedContent<SimpleItemStandardView, _PaddingLayout>);
  v97 = (uint64_t)v109;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?((uint64_t)v109, v45, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>);
  v98 = v116;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v96, v116, &demangling cache variable for type metadata for ModifiedContent<SimpleItemStandardView, _PaddingLayout>);
  v99 = v117;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v45, v117, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>);
  v100 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<SimpleItemStandardView, _PaddingLayout>));
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v98, v99 + *(int *)(v100 + 48), &demangling cache variable for type metadata for ModifiedContent<SimpleItemStandardView, _PaddingLayout>);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v96, &demangling cache variable for type metadata for ModifiedContent<SimpleItemStandardView, _PaddingLayout>);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v97, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v98, &demangling cache variable for type metadata for ModifiedContent<SimpleItemStandardView, _PaddingLayout>);
  return outlined destroy of SearchCallHistoryBinaryButtonModel?(v45, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>);
}

uint64_t SingleResultVoicemailView.getVoicemailTimeText(input:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;

  lazy protocol witness table accessor for type String and conformance String();
  swift_bridgeObjectRetain();
  v0 = Text.init<A>(_:)();
  v2 = v1;
  v4 = v3 & 1;
  static Color.secondary.getter();
  v5 = Text.foregroundStyle<A>(_:)();
  v7 = v6;
  v9 = v8 & 1;
  outlined consume of Text.Storage(v0, v2, v4);
  swift_release();
  swift_bridgeObjectRelease();
  static Font.footnote.getter();
  v10 = Text.font(_:)();
  v12 = v11;
  v14 = v13;
  swift_release();
  LOBYTE(v0) = v14 & 1;
  outlined consume of Text.Storage(v5, v7, v9);
  swift_bridgeObjectRelease();
  static Font.Weight.semibold.getter();
  v15 = Text.fontWeight(_:)();
  outlined consume of Text.Storage(v10, v12, v0);
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t closure #2 in closure #1 in SingleResultVoicemailView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v57 = a2;
  v3 = type metadata accessor for LongItemTextView();
  v55 = *(_QWORD *)(v3 - 8);
  v56 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v52 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<LongItemTextView, _PaddingLayout>);
  v5 = MEMORY[0x24BDAC7A8](v54);
  v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v53 = (uint64_t)&v49 - v8;
  v9 = type metadata accessor for PlainTextView();
  v51 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.bold(_:)>>.0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>);
  v16 = MEMORY[0x24BDAC7A8](v49);
  v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v50 = (uint64_t)&v49 - v19;
  v20 = a1 + *(int *)(type metadata accessor for SingleResultVoicemailView() + 32);
  swift_bridgeObjectRetain();
  PlainTextView.init(_:)();
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type PlainTextView and conformance PlainTextView, (uint64_t (*)(uint64_t))MEMORY[0x24BEADB58], MEMORY[0x24BEADB50]);
  View.bold(_:)();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v11, v9);
  LOBYTE(v11) = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v28 = v27;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v18, v15, v12);
  v29 = &v18[*(int *)(v49 + 36)];
  *v29 = (char)v11;
  *((_QWORD *)v29 + 1) = v22;
  *((_QWORD *)v29 + 2) = v24;
  *((_QWORD *)v29 + 3) = v26;
  *((_QWORD *)v29 + 4) = v28;
  v29[40] = 0;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v30 = v50;
  outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout>, _ClipEffect<Capsule>>((uint64_t)v18, v50, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>);
  v32 = *(_QWORD *)(v20 + 96);
  v31 = *(_QWORD *)(v20 + 104);
  v60 = MEMORY[0x24BEE0D00];
  v61 = MEMORY[0x24BEAE5C0];
  v58 = v32;
  v59 = v31;
  swift_bridgeObjectRetain();
  v33 = v52;
  LongItemTextView.init(text1:)();
  LOBYTE(v11) = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  v35 = v34;
  v37 = v36;
  v39 = v38;
  v41 = v40;
  v43 = v55;
  v42 = v56;
  (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v7, v33, v56);
  v44 = &v7[*(int *)(v54 + 36)];
  *v44 = (char)v11;
  *((_QWORD *)v44 + 1) = v35;
  *((_QWORD *)v44 + 2) = v37;
  *((_QWORD *)v44 + 3) = v39;
  *((_QWORD *)v44 + 4) = v41;
  v44[40] = 0;
  (*(void (**)(char *, uint64_t))(v43 + 8))(v33, v42);
  v45 = v53;
  outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout>, _ClipEffect<Capsule>>((uint64_t)v7, v53, &demangling cache variable for type metadata for ModifiedContent<LongItemTextView, _PaddingLayout>);
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v30, (uint64_t)v18, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>);
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v45, (uint64_t)v7, &demangling cache variable for type metadata for ModifiedContent<LongItemTextView, _PaddingLayout>);
  v46 = v57;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?((uint64_t)v18, v57, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>));
  outlined init with copy of SearchCallHistoryBinaryButtonModel?((uint64_t)v7, v46 + *(int *)(v47 + 48), &demangling cache variable for type metadata for ModifiedContent<LongItemTextView, _PaddingLayout>);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v45, &demangling cache variable for type metadata for ModifiedContent<LongItemTextView, _PaddingLayout>);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v30, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>);
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v7, &demangling cache variable for type metadata for ModifiedContent<LongItemTextView, _PaddingLayout>);
  return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v18, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>);
}

uint64_t partial apply for implicit closure #2 in implicit closure #1 in SingleResultVoicemailView.body.getter()
{
  type metadata accessor for SingleResultVoicemailView();
  return SingleResultVoicemailView.handleTimer(_:)();
}

uint64_t SingleResultVoicemailView.handleTimer(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  int v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  double v14;
  uint64_t result;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;

  v1 = v0;
  v2 = type metadata accessor for SingleResultVoicemailView();
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v0 + *(int *)(v3 + 40);
  v7 = *(_BYTE *)v6;
  v8 = *(_QWORD *)(v6 + 8);
  LOBYTE(v21) = v7;
  v22 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.wrappedValue.getter();
  v9 = LOBYTE(v20);
  outlined init with copy of SearchCallHistoryBinaryButtonModel(v1, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for SingleResultVoicemailView);
  if (v9 != 1)
    return outlined destroy of SingleResultCallHistoryModel((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for SingleResultVoicemailView);
  v10 = &v5[*(int *)(v2 + 36)];
  v11 = *(_QWORD *)v10;
  v12 = *((_QWORD *)v10 + 1);
  v21 = v11;
  v22 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<CGFloat>);
  State.wrappedValue.getter();
  v13 = v20;
  v14 = *(double *)&v5[*(int *)(v2 + 48)];
  result = outlined destroy of SingleResultCallHistoryModel((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for SingleResultVoicemailView);
  if (v13 < v14)
  {
    v16 = (uint64_t *)(v1 + *(int *)(v2 + 36));
    v18 = v16[1];
    v21 = *v16;
    v17 = v21;
    v22 = v18;
    swift_retain();
    State.wrappedValue.getter();
    v21 = v17;
    v22 = v18;
    v19 = v20 + 1.0;
    State.wrappedValue.setter();
    return swift_release();
  }
  return result;
}

void closure #2 in SingleResultVoicemailView.body.getter()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  const char *v4;
  uint64_t v5;
  char v6;

  lazy protocol witness table accessor for type VoicemailUpdateAction and conformance VoicemailUpdateAction();
  lazy protocol witness table accessor for type VoicemailUpdateAction and conformance VoicemailUpdateAction();
  lazy protocol witness table accessor for type VoicemailUpdateAction and conformance VoicemailUpdateAction();
  swift_bridgeObjectRetain();
  UpdateResponseCommand<>.init(_:)();
  type metadata accessor for SingleResultVoicemailView();
  if ((v6 & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
    State.wrappedValue.setter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<CGFloat>);
    State.wrappedValue.setter();
    if (one-time initialization token for phoneSnippetUI != -1)
      swift_once();
    v0 = type metadata accessor for Logger();
    __swift_project_value_buffer(v0, (uint64_t)static Logger.phoneSnippetUI);
    v1 = Logger.logObject.getter();
    v2 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v1, v2))
    {
      v3 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v3 = 0;
      v4 = "#SingleResultVoicemailView received repeat playing voicemail action.";
LABEL_10:
      _os_log_impl(&dword_243ABD000, v1, v2, v4, v3, 2u);
      MEMORY[0x2495011B8](v3, -1, -1);
    }
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
    State.wrappedValue.setter();
    if (one-time initialization token for phoneSnippetUI != -1)
      swift_once();
    v5 = type metadata accessor for Logger();
    __swift_project_value_buffer(v5, (uint64_t)static Logger.phoneSnippetUI);
    v1 = Logger.logObject.getter();
    v2 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v1, v2))
    {
      v3 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v3 = 0;
      v4 = "#SingleResultVoicemailView received start playing voicemail action.";
      goto LABEL_10;
    }
  }

}

void partial apply for closure #2 in SingleResultVoicemailView.body.getter()
{
  type metadata accessor for SingleResultVoicemailView();
  closure #2 in SingleResultVoicemailView.body.getter();
}

uint64_t closure #3 in SingleResultVoicemailView.body.getter()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  _QWORD v5[4];

  if (one-time initialization token for phoneSnippetUI != -1)
    swift_once();
  v0 = type metadata accessor for Logger();
  __swift_project_value_buffer(v0, (uint64_t)static Logger.phoneSnippetUI);
  v1 = Logger.logObject.getter();
  v2 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_243ABD000, v1, v2, "#SingleResultVoicemailView onDisappear, disconnect timer.", v3, 2u);
    MEMORY[0x2495011B8](v3, -1, -1);
  }

  type metadata accessor for SingleResultVoicemailView();
  Publishers.Autoconnect.upstream.getter();
  NSTimer.TimerPublisher.connect()();
  swift_release();
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  dispatch thunk of Cancellable.cancel()();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
}

uint64_t partial apply for closure #3 in SingleResultVoicemailView.body.getter()
{
  return partial apply for closure #3 in SingleResultVoicemailView.body.getter((uint64_t (*)(uint64_t))closure #3 in SingleResultVoicemailView.body.getter);
}

uint64_t associated type witness table accessor for View.Body : View in SingleResultVoicemailView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t closure #1 in SingleResultVoicemailView.getRepeatView()@<X0>(uint64_t a1@<X8>)
{
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;

  v8 = static HierarchicalShapeStyle.primary.getter();
  v7 = static Color.blue.getter();
  KeyPath = swift_getKeyPath();
  type metadata accessor for SingleResultVoicemailView();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  ScaledMetric.wrappedValue.getter();
  ScaledMetric.wrappedValue.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  v3 = Image.init(systemName:)();
  v4 = static Color.white.getter();
  v5 = swift_getKeyPath();
  *(_DWORD *)a1 = v8;
  *(_WORD *)(a1 + 4) = 256;
  *(_QWORD *)(a1 + 8) = KeyPath;
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v9;
  *(_BYTE *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v11;
  *(_BYTE *)(a1 + 48) = v12;
  *(_QWORD *)(a1 + 56) = v13;
  *(_QWORD *)(a1 + 64) = v14;
  *(_QWORD *)(a1 + 72) = v3;
  *(_QWORD *)(a1 + 80) = v5;
  *(_QWORD *)(a1 + 88) = v4;
  swift_retain();
  return swift_release();
}

void closure #2 in SingleResultVoicemailView.getRepeatView()(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for InteractionType?);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionProperty?);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (char *)(a1 + *(int *)(type metadata accessor for SingleResultVoicemailView() + 40));
  v12 = *v11;
  v13 = *((_QWORD *)v11 + 1);
  v31 = v12;
  v32 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.wrappedValue.getter();
  if (v33 == 1)
  {
    if (one-time initialization token for phoneSnippetUI != -1)
      swift_once();
    v14 = type metadata accessor for Logger();
    __swift_project_value_buffer(v14, (uint64_t)static Logger.phoneSnippetUI);
    v15 = Logger.logObject.getter();
    v16 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_243ABD000, v15, v16, "SingleResultVoicemailView repeat is tapped", v17, 2u);
      MEMORY[0x2495011B8](v17, -1, -1);
    }

    ActionHandler.wrappedValue.getter();
    v18 = type metadata accessor for StandardActionHandler();
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v10, 1, v18) == 1)
    {
      outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v10, &demangling cache variable for type metadata for StandardActionHandler?);
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionElementConvertible>);
      v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = xmmword_243B32430;
      v30 = v19;
      v25 = type metadata accessor for Command();
      v26 = MEMORY[0x24BEAD1E8];
      *(_QWORD *)(v24 + 56) = v25;
      *(_QWORD *)(v24 + 64) = v26;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v24 + 32));
      type metadata accessor for SingleResultVoicemailModel();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
      *boxed_opaque_existential_1 = CodableAceObject.wrappedValue.getter();
      *((_BYTE *)boxed_opaque_existential_1 + 8) = 0;
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x24BEAD1C8], v25);
      ActionProperty.init(_:)();
      v28 = type metadata accessor for ActionProperty();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v7, 0, 1, v28);
      v29 = type metadata accessor for InteractionType();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v4, 1, 1, v29);
      StandardActionHandler.perform(_:interactionType:)();
      outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v4, &demangling cache variable for type metadata for InteractionType?);
      outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v7, &demangling cache variable for type metadata for ActionProperty?);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v18);
    }
  }
  else
  {
    if (one-time initialization token for phoneSnippetUI != -1)
      swift_once();
    v20 = type metadata accessor for Logger();
    __swift_project_value_buffer(v20, (uint64_t)static Logger.phoneSnippetUI);
    v21 = Logger.logObject.getter();
    v22 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v23 = 0;
      _os_log_impl(&dword_243ABD000, v21, v22, "SingleResultVoicemailView repeat is tapped before playing voicemail for the first time, ignore repeat request", v23, 2u);
      MEMORY[0x2495011B8](v23, -1, -1);
    }

  }
}

char *initializeBufferWithCopyOfBuffer for SingleResultVoicemailView(char *a1, char **a2, int *a3)
{
  int v3;
  char *v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  int *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  _QWORD *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v59;
  char *v60;
  int *v61;
  char **v62;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = &v4[(v3 + 16) & ~(unint64_t)v3];
  }
  else
  {
    v5 = a1;
    *((_QWORD *)a1 + 1) = a2[1];
    v6 = a3[5];
    v7 = &a1[v6];
    v8 = (uint64_t)a2 + v6;
    v11 = type metadata accessor for ActionHandler();
    v12 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v13 = v4;
    v12(v7, v8, v11);
    v61 = a3;
    v62 = a2;
    v14 = a3[6];
    v15 = &v5[v14];
    v16 = (uint64_t)a2 + v14;
    v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
    v18 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
    v18(v15, v16, v17);
    v18(&v5[a3[7]], (uint64_t)a2 + a3[7], v17);
    v19 = a3[8];
    v20 = &v5[v19];
    v21 = (char *)a2 + v19;
    v22 = *(uint64_t *)((char *)a2 + v19);
    v23 = *((_QWORD *)v21 + 1);
    *(_QWORD *)v20 = v22;
    *((_QWORD *)v20 + 1) = v23;
    v24 = *((_QWORD *)v21 + 3);
    *((_QWORD *)v20 + 2) = *((_QWORD *)v21 + 2);
    *((_QWORD *)v20 + 3) = v24;
    v25 = *((_QWORD *)v21 + 5);
    *((_QWORD *)v20 + 4) = *((_QWORD *)v21 + 4);
    *((_QWORD *)v20 + 5) = v25;
    v26 = *((_QWORD *)v21 + 7);
    *((_QWORD *)v20 + 6) = *((_QWORD *)v21 + 6);
    *((_QWORD *)v20 + 7) = v26;
    v27 = *((_QWORD *)v21 + 9);
    *((_QWORD *)v20 + 8) = *((_QWORD *)v21 + 8);
    *((_QWORD *)v20 + 9) = v27;
    v28 = *((_QWORD *)v21 + 11);
    *((_QWORD *)v20 + 10) = *((_QWORD *)v21 + 10);
    *((_QWORD *)v20 + 11) = v28;
    v29 = *((_QWORD *)v21 + 13);
    *((_QWORD *)v20 + 12) = *((_QWORD *)v21 + 12);
    *((_QWORD *)v20 + 13) = v29;
    v30 = *((_QWORD *)v21 + 15);
    *((_QWORD *)v20 + 14) = *((_QWORD *)v21 + 14);
    *((_QWORD *)v20 + 15) = v30;
    v31 = (int *)type metadata accessor for SingleResultVoicemailModel();
    v32 = v31[13];
    v59 = &v20[v32];
    v60 = &v21[v32];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    v34 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16);
    v34(v59, v60, v33);
    v34(&v20[v31[14]], &v21[v31[14]], v33);
    v35 = v31[15];
    v36 = &v20[v35];
    v37 = &v21[v35];
    v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    v39 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16);
    v39(v36, v37, v38);
    v40 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
    v41 = v40[5];
    v42 = &v36[v41];
    v43 = &v37[v41];
    v44 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
    v45 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16);
    v45(v42, v43, v44);
    v39(&v36[v40[6]], &v37[v40[6]], v38);
    v45(&v36[v40[7]], &v37[v40[7]], v44);
    v46 = v40[8];
    v47 = &v36[v46];
    v48 = &v37[v46];
    v49 = *((_QWORD *)v48 + 1);
    *(_QWORD *)v47 = *(_QWORD *)v48;
    *((_QWORD *)v47 + 1) = v49;
    v50 = v61[9];
    v51 = v61[10];
    v52 = &v5[v50];
    v53 = (char **)((char *)v62 + v50);
    v54 = v53[1];
    *(_QWORD *)v52 = *v53;
    *((_QWORD *)v52 + 1) = v54;
    v55 = &v5[v51];
    v56 = (uint64_t)v62 + v51;
    *v55 = *(_BYTE *)v56;
    *((_QWORD *)v55 + 1) = *(_QWORD *)(v56 + 8);
    v57 = v61[12];
    *(_QWORD *)&v5[v61[11]] = *(char **)((char *)v62 + v61[11]);
    *(_QWORD *)&v5[v57] = *(char **)((char *)v62 + v57);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v5;
}

uint64_t destroy for SingleResultVoicemailView(id *a1, int *a2)
{
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t);
  char *v9;
  int *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t);
  char *v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  int *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);

  v4 = (char *)a1 + a2[5];
  v5 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = (char *)a1 + a2[6];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  v8 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v8(v6, v7);
  v8((char *)a1 + a2[7], v7);
  v9 = (char *)a1 + a2[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = (int *)type metadata accessor for SingleResultVoicemailModel();
  v11 = &v9[v10[13]];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v13 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
  v13(v11, v12);
  v13(&v9[v10[14]], v12);
  v14 = &v9[v10[15]];
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v16 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v15 - 8) + 8);
  v16(v14, v15);
  v17 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  v18 = &v14[v17[5]];
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  v20 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v19 - 8) + 8);
  v20(v18, v19);
  v16(&v14[v17[6]], v15);
  v20(&v14[v17[7]], v19);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_release();
}

char *initializeWithCopy for SingleResultVoicemailView(char *a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  char *v7;
  uint64_t v9;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  id v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  int *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  _QWORD *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v59;
  char *v60;

  v4 = *(void **)a2;
  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v3;
  v5 = a3[5];
  v7 = &a1[v5];
  v9 = a2 + v5;
  v11 = type metadata accessor for ActionHandler();
  v12 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  v13 = v4;
  v12(v7, v9, v11);
  v14 = a3[6];
  v15 = &a1[v14];
  v16 = a2 + v14;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
  v18(v15, v16, v17);
  v18(&a1[a3[7]], a2 + a3[7], v17);
  v19 = a3[8];
  v20 = &a1[v19];
  v21 = (char *)(a2 + v19);
  v22 = *(_QWORD *)(a2 + v19 + 8);
  *(_QWORD *)v20 = *(_QWORD *)(a2 + v19);
  *((_QWORD *)v20 + 1) = v22;
  v23 = *(_QWORD *)(a2 + v19 + 24);
  *((_QWORD *)v20 + 2) = *(_QWORD *)(a2 + v19 + 16);
  *((_QWORD *)v20 + 3) = v23;
  v24 = *(_QWORD *)(a2 + v19 + 32);
  v25 = *((_QWORD *)v21 + 5);
  *((_QWORD *)v20 + 4) = v24;
  *((_QWORD *)v20 + 5) = v25;
  v26 = *((_QWORD *)v21 + 7);
  *((_QWORD *)v20 + 6) = *((_QWORD *)v21 + 6);
  *((_QWORD *)v20 + 7) = v26;
  v27 = *((_QWORD *)v21 + 9);
  *((_QWORD *)v20 + 8) = *((_QWORD *)v21 + 8);
  *((_QWORD *)v20 + 9) = v27;
  v28 = *((_QWORD *)v21 + 11);
  *((_QWORD *)v20 + 10) = *((_QWORD *)v21 + 10);
  *((_QWORD *)v20 + 11) = v28;
  v29 = *((_QWORD *)v21 + 13);
  *((_QWORD *)v20 + 12) = *((_QWORD *)v21 + 12);
  *((_QWORD *)v20 + 13) = v29;
  v30 = *((_QWORD *)v21 + 15);
  *((_QWORD *)v20 + 14) = *((_QWORD *)v21 + 14);
  *((_QWORD *)v20 + 15) = v30;
  v31 = (int *)type metadata accessor for SingleResultVoicemailModel();
  v32 = v31[13];
  v59 = &v21[v32];
  v60 = &v20[v32];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v34 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16);
  v34(v60, v59, v33);
  v34(&v20[v31[14]], &v21[v31[14]], v33);
  v35 = v31[15];
  v36 = &v20[v35];
  v37 = &v21[v35];
  v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v39 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16);
  v39(v36, v37, v38);
  v40 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  v41 = v40[5];
  v42 = &v36[v41];
  v43 = &v37[v41];
  v44 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  v45 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16);
  v45(v42, v43, v44);
  v39(&v36[v40[6]], &v37[v40[6]], v38);
  v45(&v36[v40[7]], &v37[v40[7]], v44);
  v46 = v40[8];
  v47 = &v36[v46];
  v48 = &v37[v46];
  v49 = *((_QWORD *)v48 + 1);
  *(_QWORD *)v47 = *(_QWORD *)v48;
  *((_QWORD *)v47 + 1) = v49;
  v50 = a3[9];
  v51 = a3[10];
  v52 = &a1[v50];
  v53 = (_QWORD *)(a2 + v50);
  v54 = v53[1];
  *(_QWORD *)v52 = *v53;
  *((_QWORD *)v52 + 1) = v54;
  v55 = &a1[v51];
  v56 = (char *)(a2 + v51);
  *v55 = *v56;
  *((_QWORD *)v55 + 1) = *((_QWORD *)v56 + 1);
  v57 = a3[12];
  *(_QWORD *)&a1[a3[11]] = *(_QWORD *)(a2 + a3[11]);
  *(_QWORD *)&a1[v57] = *(_QWORD *)(a2 + v57);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for SingleResultVoicemailView(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  int *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  int *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  int *v49;

  v6 = *(void **)a1;
  v7 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v7;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v9 = a3[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v48 = a2;
  v12 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v49 = a3;
  v13 = a3[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 24);
  v17(v14, v15, v16);
  v17(a1 + a3[7], a2 + a3[7], v16);
  v18 = a3[8];
  v19 = (char *)(a1 + v18);
  v20 = (char *)(a2 + v18);
  *(_QWORD *)v19 = *(_QWORD *)(a2 + v18);
  *((_QWORD *)v19 + 1) = *(_QWORD *)(a2 + v18 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v19 + 2) = *((_QWORD *)v20 + 2);
  *((_QWORD *)v19 + 3) = *((_QWORD *)v20 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v19 + 4) = *((_QWORD *)v20 + 4);
  *((_QWORD *)v19 + 5) = *((_QWORD *)v20 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v19 + 6) = *((_QWORD *)v20 + 6);
  *((_QWORD *)v19 + 7) = *((_QWORD *)v20 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v19 + 8) = *((_QWORD *)v20 + 8);
  *((_QWORD *)v19 + 9) = *((_QWORD *)v20 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v19 + 10) = *((_QWORD *)v20 + 10);
  *((_QWORD *)v19 + 11) = *((_QWORD *)v20 + 11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v19 + 12) = *((_QWORD *)v20 + 12);
  *((_QWORD *)v19 + 13) = *((_QWORD *)v20 + 13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v19 + 14) = *((_QWORD *)v20 + 14);
  *((_QWORD *)v19 + 15) = *((_QWORD *)v20 + 15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = (int *)type metadata accessor for SingleResultVoicemailModel();
  v22 = v21[13];
  v23 = &v19[v22];
  v24 = &v20[v22];
  v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 24);
  v26(v23, v24, v25);
  v26(&v19[v21[14]], &v20[v21[14]], v25);
  v27 = v21[15];
  v28 = &v19[v27];
  v29 = &v20[v27];
  v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v31 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 24);
  v31(v28, v29, v30);
  v32 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  v33 = v32[5];
  v34 = &v28[v33];
  v35 = &v29[v33];
  v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  v37 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 24);
  v37(v34, v35, v36);
  v31(&v28[v32[6]], &v29[v32[6]], v30);
  v37(&v28[v32[7]], &v29[v32[7]], v36);
  v38 = v32[8];
  v39 = &v28[v38];
  v40 = &v29[v38];
  *(_QWORD *)v39 = *(_QWORD *)v40;
  *((_QWORD *)v39 + 1) = *((_QWORD *)v40 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v41 = v49[9];
  v42 = (_QWORD *)(a1 + v41);
  v43 = (_QWORD *)(v48 + v41);
  *v42 = *v43;
  v42[1] = v43[1];
  swift_retain();
  swift_release();
  v44 = v49[10];
  v45 = a1 + v44;
  v46 = v48 + v44;
  *(_BYTE *)v45 = *(_BYTE *)v46;
  *(_QWORD *)(v45 + 8) = *(_QWORD *)(v46 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v49[11]) = *(_QWORD *)(v48 + v49[11]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v49[12]) = *(_QWORD *)(v48 + v49[12]);
  return a1;
}

char *initializeWithTake for SingleResultVoicemailView(char *a1, char *a2, int *a3)
{
  uint64_t v5;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  int *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  void (*v41)(char *, char *, uint64_t);

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v5 = a3[5];
  v7 = &a1[v5];
  v8 = &a2[v5];
  v9 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32);
  v14(v11, v12, v13);
  v14(&a1[a3[7]], &a2[a3[7]], v13);
  v15 = a3[8];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = *(_OWORD *)&a2[v15 + 16];
  *(_OWORD *)v16 = *(_OWORD *)&a2[v15];
  *((_OWORD *)v16 + 1) = v18;
  v19 = *(_OWORD *)&a2[v15 + 48];
  *((_OWORD *)v16 + 2) = *(_OWORD *)&a2[v15 + 32];
  *((_OWORD *)v16 + 3) = v19;
  v20 = *(_OWORD *)&a2[v15 + 80];
  *((_OWORD *)v16 + 4) = *(_OWORD *)&a2[v15 + 64];
  *((_OWORD *)v16 + 5) = v20;
  v21 = *(_OWORD *)&a2[v15 + 112];
  *((_OWORD *)v16 + 6) = *(_OWORD *)&a2[v15 + 96];
  *((_OWORD *)v16 + 7) = v21;
  v22 = (int *)type metadata accessor for SingleResultVoicemailModel();
  v23 = v22[13];
  v24 = &v16[v23];
  v25 = &v17[v23];
  v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32);
  v27(v24, v25, v26);
  v27(&v16[v22[14]], &v17[v22[14]], v26);
  v28 = v22[15];
  v29 = &v16[v28];
  v30 = &v17[v28];
  v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v41 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32);
  v41(v29, v30, v31);
  v32 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  v33 = v32[5];
  v34 = &v29[v33];
  v35 = &v30[v33];
  v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  v37 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32);
  v37(v34, v35, v36);
  v41(&v29[v32[6]], &v30[v32[6]], v31);
  v37(&v29[v32[7]], &v30[v32[7]], v36);
  *(_OWORD *)&v29[v32[8]] = *(_OWORD *)&v30[v32[8]];
  v38 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  *(_OWORD *)&a1[v38] = *(_OWORD *)&a2[v38];
  v39 = a3[12];
  *(_QWORD *)&a1[a3[11]] = *(_QWORD *)&a2[a3[11]];
  *(_QWORD *)&a1[v39] = *(_QWORD *)&a2[v39];
  return a1;
}

uint64_t assignWithTake for SingleResultVoicemailView(uint64_t a1, _QWORD *a2, int *a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(uint64_t, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  int *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  _QWORD *v55;
  int *v56;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  *(_QWORD *)(a1 + 8) = a2[1];
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = (char *)a2 + v7;
  v55 = a2;
  v10 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v56 = a3;
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  v15 = *(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40);
  v15(v12, v13, v14);
  v15(a1 + a3[7], (char *)a2 + a3[7], v14);
  v16 = a3[8];
  v17 = (char *)(a1 + v16);
  v18 = (char *)a2 + v16;
  v19 = *(_QWORD *)((char *)a2 + v16 + 8);
  *(_QWORD *)v17 = *(_QWORD *)((char *)a2 + v16);
  *((_QWORD *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  v20 = *((_QWORD *)v18 + 3);
  *((_QWORD *)v17 + 2) = *((_QWORD *)v18 + 2);
  *((_QWORD *)v17 + 3) = v20;
  swift_bridgeObjectRelease();
  v21 = *((_QWORD *)v18 + 5);
  *((_QWORD *)v17 + 4) = *((_QWORD *)v18 + 4);
  *((_QWORD *)v17 + 5) = v21;
  swift_bridgeObjectRelease();
  v22 = *((_QWORD *)v18 + 7);
  *((_QWORD *)v17 + 6) = *((_QWORD *)v18 + 6);
  *((_QWORD *)v17 + 7) = v22;
  swift_bridgeObjectRelease();
  v23 = *((_QWORD *)v18 + 9);
  *((_QWORD *)v17 + 8) = *((_QWORD *)v18 + 8);
  *((_QWORD *)v17 + 9) = v23;
  swift_bridgeObjectRelease();
  *((_QWORD *)v17 + 10) = *((_QWORD *)v18 + 10);
  *((_QWORD *)v17 + 11) = *((_QWORD *)v18 + 11);
  swift_bridgeObjectRelease();
  v24 = *((_QWORD *)v18 + 13);
  *((_QWORD *)v17 + 12) = *((_QWORD *)v18 + 12);
  *((_QWORD *)v17 + 13) = v24;
  swift_bridgeObjectRelease();
  v25 = *((_QWORD *)v18 + 15);
  *((_QWORD *)v17 + 14) = *((_QWORD *)v18 + 14);
  *((_QWORD *)v17 + 15) = v25;
  swift_bridgeObjectRelease();
  v26 = (int *)type metadata accessor for SingleResultVoicemailModel();
  v27 = v26[13];
  v28 = &v17[v27];
  v29 = &v18[v27];
  v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v31 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 40);
  v31(v28, v29, v30);
  v31(&v17[v26[14]], &v18[v26[14]], v30);
  v32 = v26[15];
  v33 = &v17[v32];
  v34 = &v18[v32];
  v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v36 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 40);
  v36(v33, v34, v35);
  v37 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  v38 = v37[5];
  v39 = &v33[v38];
  v40 = &v34[v38];
  v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  v42 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 40);
  v42(v39, v40, v41);
  v36(&v33[v37[6]], &v34[v37[6]], v35);
  v42(&v33[v37[7]], &v34[v37[7]], v41);
  v43 = v37[8];
  v44 = &v33[v43];
  v45 = &v34[v43];
  v47 = *(_QWORD *)v45;
  v46 = *((_QWORD *)v45 + 1);
  *(_QWORD *)v44 = v47;
  *((_QWORD *)v44 + 1) = v46;
  swift_bridgeObjectRelease();
  v48 = v56[9];
  v49 = (_QWORD *)(a1 + v48);
  v50 = (_QWORD *)((char *)v55 + v48);
  *v49 = *v50;
  v49[1] = v50[1];
  swift_release();
  v51 = v56[10];
  v52 = a1 + v51;
  v53 = (char *)v55 + v51;
  *(_BYTE *)v52 = *v53;
  *(_QWORD *)(v52 + 8) = *((_QWORD *)v53 + 1);
  swift_release();
  *(_QWORD *)(a1 + v56[11]) = *(_QWORD *)((char *)v55 + v56[11]);
  swift_release();
  *(_QWORD *)(a1 + v56[12]) = *(_QWORD *)((char *)v55 + v56[12]);
  return a1;
}

uint64_t getEnumTagSinglePayload for SingleResultVoicemailView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_243B2F114(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v13;

  v6 = type metadata accessor for ActionHandler();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  v7 = *(_QWORD *)(v10 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v10;
    v9 = a3[6];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v11 = type metadata accessor for SingleResultVoicemailModel();
  v7 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v9 = a3[8];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v13 = *(_QWORD *)(a1 + a3[11]);
  if (v13 >= 0xFFFFFFFF)
    LODWORD(v13) = -1;
  return (v13 + 1);
}

uint64_t storeEnumTagSinglePayload for SingleResultVoicemailView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_243B2F1EC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  v8 = type metadata accessor for ActionHandler();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = a4[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  v9 = *(_QWORD *)(v12 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v12;
    v11 = a4[6];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  result = type metadata accessor for SingleResultVoicemailModel();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = a4[8];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  *(_QWORD *)(a1 + a4[11]) = (a2 - 1);
  return result;
}

void type metadata completion function for SingleResultVoicemailView()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  type metadata accessor for ActionHandler();
  if (v0 <= 0x3F)
  {
    type metadata accessor for ScaledMetric<CGFloat>();
    if (v1 <= 0x3F)
    {
      type metadata accessor for SingleResultVoicemailModel();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t objectdestroyTm_12()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  id *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t);
  char *v9;
  int *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t);
  char *v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  int *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);

  v1 = (int *)type metadata accessor for SingleResultVoicemailView();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = (id *)(v0 + ((v2 + 16) & ~v2));

  v4 = (char *)v3 + v1[5];
  v5 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = (char *)v3 + v1[6];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  v8 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v8(v6, v7);
  v8((char *)v3 + v1[7], v7);
  v9 = (char *)v3 + v1[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = (int *)type metadata accessor for SingleResultVoicemailModel();
  v11 = &v9[v10[13]];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v13 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
  v13(v11, v12);
  v13(&v9[v10[14]], v12);
  v14 = &v9[v10[15]];
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v16 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v15 - 8) + 8);
  v16(v14, v15);
  v17 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  v18 = &v14[v17[5]];
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  v20 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v19 - 8) + 8);
  v20(v18, v19);
  v16(&v14[v17[6]], v15);
  v20(&v14[v17[7]], v19);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in SingleResultVoicemailView.getRepeatView()()
{
  return partial apply for closure #3 in SingleResultVoicemailView.body.getter((uint64_t (*)(uint64_t))closure #2 in SingleResultVoicemailView.getRepeatView());
}

uint64_t partial apply for closure #3 in SingleResultVoicemailView.body.getter(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SingleResultVoicemailView() - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

uint64_t sub_243B2F6CC()
{
  uint64_t v0;

  outlined consume of Text.Storage(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t specialized Set.init(_nonEmptyArrayLiteral:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t result;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;

  v2 = type metadata accessor for _ProtoIdiom();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v28 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<_ProtoIdiom>);
    v10 = static _SetStorage.allocate(capacity:)();
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v29 = v9;
    v30 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v32 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v33 = v10 + 56;
    v32(v8, v30, v2);
    while (1)
    {
      lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type _ProtoIdiom and conformance _ProtoIdiom, (uint64_t (*)(uint64_t))MEMORY[0x24BEAA9A0], MEMORY[0x24BEAA9B0]);
      v14 = dispatch thunk of Hashable._rawHashValue(seed:)();
      v15 = -1 << *(_BYTE *)(v10 + 32);
      v16 = v14 & ~v15;
      v17 = v16 >> 6;
      v18 = *(_QWORD *)(v33 + 8 * (v16 >> 6));
      v19 = 1 << v16;
      if (((1 << v16) & v18) != 0)
      {
        v31 = v11;
        v20 = ~v15;
        do
        {
          v32(v6, *(_QWORD *)(v10 + 48) + v16 * v13, v2);
          lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type _ProtoIdiom and conformance _ProtoIdiom, (uint64_t (*)(uint64_t))MEMORY[0x24BEAA9A0], MEMORY[0x24BEAA9B8]);
          v21 = dispatch thunk of static Equatable.== infix(_:_:)();
          v22 = v3;
          v23 = *(void (**)(char *, uint64_t))(v3 + 8);
          v23(v6, v2);
          if ((v21 & 1) != 0)
          {
            v23(v8, v2);
            v3 = v22;
            v9 = v29;
            v11 = v31;
            goto LABEL_4;
          }
          v16 = (v16 + 1) & v20;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v33 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          v3 = v22;
        }
        while ((v18 & (1 << v16)) != 0);
        v9 = v29;
        v11 = v31;
      }
      *(_QWORD *)(v33 + 8 * v17) = v19 | v18;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v16 * v13, v8, v2);
      v25 = *(_QWORD *)(v10 + 16);
      v26 = __OFADD__(v25, 1);
      v27 = v25 + 1;
      if (v26)
        break;
      *(_QWORD *)(v10 + 16) = v27;
LABEL_4:
      if (++v11 == v9)
        return v10;
      v32(v8, v30 + v13 * v11, v2);
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B08];
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Double and conformance Double()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Double and conformance Double;
  if (!lazy protocol witness table cache variable for type Double and conformance Double)
  {
    result = MEMORY[0x249501140](MEMORY[0x24BEE13D0], MEMORY[0x24BEE13C8]);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Double and conformance Double);
  }
  return result;
}

uint64_t sub_243B2F9AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.tintColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_243B2F9D4()
{
  swift_retain();
  return EnvironmentValues.tintColor.setter();
}

uint64_t dispatch thunk of JSONDecoder.decode<A>(_:from:)()
{
  return MEMORY[0x24BDCB220]();
}

uint64_t JSONDecoder.init()()
{
  return MEMORY[0x24BDCB260]();
}

uint64_t type metadata accessor for JSONDecoder()
{
  return MEMORY[0x24BDCB268]();
}

uint64_t dispatch thunk of JSONEncoder.encode<A>(_:)()
{
  return MEMORY[0x24BDCB3B8]();
}

uint64_t JSONEncoder.init()()
{
  return MEMORY[0x24BDCB400]();
}

uint64_t type metadata accessor for JSONEncoder()
{
  return MEMORY[0x24BDCB410]();
}

uint64_t static CharacterSet.decimalDigits.getter()
{
  return MEMORY[0x24BDCB648]();
}

uint64_t static CharacterSet._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x24BDCB6D0]();
}

Swift::Void __swiftcall CharacterSet.insert(charactersIn:)(Swift::String charactersIn)
{
  MEMORY[0x24BDCB6E8](charactersIn._countAndFlagsBits, charactersIn._object);
}

uint64_t CharacterSet.contains(_:)()
{
  return MEMORY[0x24BDCB710]();
}

uint64_t CharacterSet.formUnion(_:)()
{
  return MEMORY[0x24BDCB738]();
}

uint64_t type metadata accessor for CharacterSet()
{
  return MEMORY[0x24BDCB750]();
}

uint64_t Notification.userInfo.getter()
{
  return MEMORY[0x24BDCB918]();
}

void __swiftcall URL._bridgeToObjectiveC()(NSURL *__return_ptr retstr)
{
  MEMORY[0x24BDCD8D0](retstr);
}

uint64_t URL.init(string:)()
{
  return MEMORY[0x24BDCDA68]();
}

uint64_t type metadata accessor for URL()
{
  return MEMORY[0x24BDCDAC0]();
}

NSData __swiftcall Data._bridgeToObjectiveC()()
{
  return (NSData)MEMORY[0x24BDCDCA0]();
}

uint64_t UUID.uuidString.getter()
{
  return MEMORY[0x24BDCE9B0]();
}

uint64_t static UUID.== infix(_:_:)()
{
  return MEMORY[0x24BDCE9E0]();
}

uint64_t UUID.init()()
{
  return MEMORY[0x24BDCEA40]();
}

uint64_t type metadata accessor for UUID()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t Locale.init(identifier:)()
{
  return MEMORY[0x24BDCEB18]();
}

uint64_t Locale.identifier.getter()
{
  return MEMORY[0x24BDCEB20]();
}

NSLocale __swiftcall Locale._bridgeToObjectiveC()()
{
  return (NSLocale)MEMORY[0x24BDCEC90]();
}

uint64_t static Locale.current.getter()
{
  return MEMORY[0x24BDCED58]();
}

uint64_t type metadata accessor for Locale()
{
  return MEMORY[0x24BDCEEA8]();
}

uint64_t type metadata accessor for _ProtoIdiom()
{
  return MEMORY[0x24BEAA9A0]();
}

uint64_t static ImageElement.badgedImage(image:badge:)()
{
  return MEMORY[0x24BEAAA98]();
}

uint64_t static ImageElement.contactImageAvatar(contactIds:imageStyle:idioms:)()
{
  return MEMORY[0x24BEAAAA0]();
}

uint64_t type metadata accessor for ImageElement.ImageStyle()
{
  return MEMORY[0x24BEAAC48]();
}

uint64_t type metadata accessor for ImageElement.SourceType()
{
  return MEMORY[0x24BEAAD48]();
}

uint64_t ImageElement.AppIcon.init(_:imageStyle:)()
{
  return MEMORY[0x24BEAAFC8]();
}

uint64_t ImageElement.Contact.Avatar.init(contactIds:)()
{
  return MEMORY[0x24BEAAFF0]();
}

uint64_t type metadata accessor for ImageElement.Contact.Content()
{
  return MEMORY[0x24BEAB020]();
}

uint64_t ImageElement.Contact.init(_:imageStyle:)()
{
  return MEMORY[0x24BEAB048]();
}

uint64_t static ImageElement.appIcon(_:imageStyle:idioms:)()
{
  return MEMORY[0x24BEAB088]();
}

uint64_t type metadata accessor for ImageElement()
{
  return MEMORY[0x24BEAB090]();
}

uint64_t type metadata accessor for SashStandard.Title()
{
  return MEMORY[0x24BEAB130]();
}

uint64_t SashStandard.init(title:thumbnail:titleColor:backgroundColor:action:componentName:showOnWatch:)()
{
  return MEMORY[0x24BEAB150]();
}

uint64_t type metadata accessor for SashStandard()
{
  return MEMORY[0x24BEAB180]();
}

uint64_t type metadata accessor for ActionProperty()
{
  return MEMORY[0x24BEAB3D8]();
}

uint64_t ActionProperty.init(_:)()
{
  return MEMORY[0x24BEAB428]();
}

uint64_t type metadata accessor for SeparatorStyle()
{
  return MEMORY[0x24BEAB538]();
}

uint64_t type metadata accessor for VisualProperty()
{
  return MEMORY[0x24BEAB608]();
}

uint64_t CodableAceObject.init(wrappedValue:)()
{
  return MEMORY[0x24BEABA58]();
}

uint64_t CodableAceObject.wrappedValue.modify()
{
  return MEMORY[0x24BEABA60]();
}

uint64_t CodableAceObject.wrappedValue.getter()
{
  return MEMORY[0x24BEABA68]();
}

uint64_t CodableAceObject.wrappedValue.setter()
{
  return MEMORY[0x24BEABA70]();
}

uint64_t type metadata accessor for CodableAceObject()
{
  return MEMORY[0x24BEABA78]();
}

uint64_t dispatch thunk of UpdateResponseCommand.serializeData()()
{
  return MEMORY[0x24BEAC728]();
}

uint64_t UpdateResponseCommand<>.serializeData()()
{
  return MEMORY[0x24BEAC738]();
}

uint64_t UpdateResponseCommand<>.init(_:)()
{
  return MEMORY[0x24BEAC740]();
}

uint64_t type metadata accessor for Color()
{
  return MEMORY[0x24BEACF00]();
}

uint64_t type metadata accessor for Command()
{
  return MEMORY[0x24BEAD200]();
}

uint64_t static RFImage.symbol(_:dark:)()
{
  return MEMORY[0x24BEAD2C0]();
}

uint64_t type metadata accessor for RFImage()
{
  return MEMORY[0x24BEAD2E8]();
}

uint64_t Loggable.init(wrappedValue:)()
{
  return MEMORY[0x24BEAD338]();
}

uint64_t Loggable.wrappedValue.modify()
{
  return MEMORY[0x24BEAD340]();
}

uint64_t Loggable.wrappedValue.getter()
{
  return MEMORY[0x24BEAD348]();
}

uint64_t Loggable.wrappedValue.setter()
{
  return MEMORY[0x24BEAD350]();
}

uint64_t type metadata accessor for Loggable()
{
  return MEMORY[0x24BEAD360]();
}

uint64_t static ColorFactory.emergencyRed.getter()
{
  return MEMORY[0x24BE978A8]();
}

uint64_t AceServiceInvokerAsync.submitAndForget(_:)()
{
  return MEMORY[0x24BE98638]();
}

uint64_t dispatch thunk of MachineUtteranceBuilder.addMapping(node:value:)()
{
  return MEMORY[0x24BE98740]();
}

uint64_t dispatch thunk of MachineUtteranceBuilder.build()()
{
  return MEMORY[0x24BE98750]();
}

uint64_t MachineUtteranceBuilder.init()()
{
  return MEMORY[0x24BE98760]();
}

uint64_t type metadata accessor for MachineUtteranceBuilder()
{
  return MEMORY[0x24BE98768]();
}

uint64_t static DeviceIdiom.== infix(_:_:)()
{
  return MEMORY[0x24BEA8958]();
}

uint64_t type metadata accessor for DeviceIdiom()
{
  return MEMORY[0x24BEA89B0]();
}

uint64_t App.__allocating_init(appIdentifier:)()
{
  return MEMORY[0x24BE90B88]();
}

uint64_t type metadata accessor for App()
{
  return MEMORY[0x24BE90BB8]();
}

uint64_t os_log(_:dso:log:_:_:)()
{
  return MEMORY[0x24BEE76F0]();
}

uint64_t Logger.logObject.getter()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t Logger.init(subsystem:category:)()
{
  return MEMORY[0x24BEE78C0]();
}

uint64_t type metadata accessor for Logger()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t Publishers.Autoconnect.upstream.getter()
{
  return MEMORY[0x24BDB94F8]();
}

uint64_t dispatch thunk of Cancellable.cancel()()
{
  return MEMORY[0x24BDB9A50]();
}

uint64_t ObservableObject<>.objectWillChange.getter()
{
  return MEMORY[0x24BDB9C48]();
}

uint64_t ConnectablePublisher.autoconnect()()
{
  return MEMORY[0x24BDB9D18]();
}

uint64_t Published.init(initialValue:)()
{
  return MEMORY[0x24BDB9E98]();
}

uint64_t Published.projectedValue.getter()
{
  return MEMORY[0x24BDB9EA0]();
}

uint64_t Published.projectedValue.setter()
{
  return MEMORY[0x24BDB9EA8]();
}

uint64_t static Published.subscript.modify()
{
  return MEMORY[0x24BDB9EC0]();
}

uint64_t static Published.subscript.getter()
{
  return MEMORY[0x24BDB9EC8]();
}

uint64_t static Published.subscript.setter()
{
  return MEMORY[0x24BDB9ED0]();
}

uint64_t type metadata accessor for Published()
{
  return MEMORY[0x24BDB9EF0]();
}

uint64_t EdgeInsets.init(_all:)()
{
  return MEMORY[0x24BDEB038]();
}

uint64_t static ButtonStyle<>.standardSiriButton(bold:hideIcon:isPressed:)()
{
  return MEMORY[0x24BEAD598]();
}

uint64_t type metadata accessor for ColorScheme()
{
  return MEMORY[0x24BDEB420]();
}

uint64_t DragGesture.init<A>(minimumDistance:coordinateSpace:)()
{
  return MEMORY[0x24BDEB4B8]();
}

uint64_t DragGesture.Value.translation.getter()
{
  return MEMORY[0x24BDEB4C8]();
}

uint64_t DragGesture.Value.startLocation.getter()
{
  return MEMORY[0x24BDEB4E0]();
}

uint64_t type metadata accessor for DragGesture()
{
  return MEMORY[0x24BDEB538]();
}

uint64_t static GestureMask.all.getter()
{
  return MEMORY[0x24BDEB5C0]();
}

uint64_t ProgressView.init<A>(value:total:)()
{
  return MEMORY[0x24BDEBBB0]();
}

uint64_t ScaledMetric.init(wrappedValue:relativeTo:)()
{
  return MEMORY[0x24BDEBC18]();
}

uint64_t ScaledMetric.wrappedValue.getter()
{
  return MEMORY[0x24BDEBC30]();
}

uint64_t type metadata accessor for ScaledMetric()
{
  return MEMORY[0x24BDEBC48]();
}

uint64_t static ViewModifier._makeView(modifier:inputs:body:)()
{
  return MEMORY[0x24BDEBDE8]();
}

uint64_t static ViewModifier._makeViewList(modifier:inputs:body:)()
{
  return MEMORY[0x24BDEBDF8]();
}

uint64_t static ViewModifier._viewListCount(inputs:body:)()
{
  return MEMORY[0x24BDEBE08]();
}

uint64_t _FrameLayout.init(width:height:alignment:)()
{
  return MEMORY[0x24BDEBEC8]();
}

uint64_t AnyShapeStyle.init<A>(_:)()
{
  return MEMORY[0x24BDEBF90]();
}

uint64_t GeometryProxy.size.getter()
{
  return MEMORY[0x24BDEC128]();
}

uint64_t withAnimation<A>(_:completionCriteria:_:completion:)()
{
  return MEMORY[0x24BDEC598]();
}

uint64_t withAnimation<A>(_:_:)()
{
  return MEMORY[0x24BDEC5A8]();
}

uint64_t ObservedObject.init(wrappedValue:)()
{
  return MEMORY[0x24BDEC990]();
}

uint64_t ObservedObject.projectedValue.getter()
{
  return MEMORY[0x24BDEC9A8]();
}

uint64_t type metadata accessor for ModifiedContent()
{
  return MEMORY[0x24BDED2D8]();
}

uint64_t static PreviewProvider.platform.getter()
{
  return MEMORY[0x24BDED380]();
}

uint64_t static PreviewProvider._platform.getter()
{
  return MEMORY[0x24BDED390]();
}

uint64_t static PreviewProvider._previews.getter()
{
  return MEMORY[0x24BDED3A0]();
}

uint64_t _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)()
{
  return MEMORY[0x24BDEDBB0]();
}

uint64_t EnvironmentObject.error()()
{
  return MEMORY[0x24BDEDE48]();
}

uint64_t EnvironmentObject.init()()
{
  return MEMORY[0x24BDEDE68]();
}

uint64_t EnvironmentValues.imageElementImageStyle.getter()
{
  return MEMORY[0x24BEAD618]();
}

uint64_t EnvironmentValues.imageElementImageStyle.setter()
{
  return MEMORY[0x24BEAD628]();
}

uint64_t EnvironmentValues.visualResponseLocation.getter()
{
  return MEMORY[0x24BEAD638]();
}

uint64_t EnvironmentValues.visualResponseLocation.setter()
{
  return MEMORY[0x24BEAD648]();
}

uint64_t EnvironmentValues.colorScheme.getter()
{
  return MEMORY[0x24BDEDEF0]();
}

uint64_t EnvironmentValues.colorScheme.setter()
{
  return MEMORY[0x24BDEDF00]();
}

uint64_t EnvironmentValues.foregroundColor.getter()
{
  return MEMORY[0x24BDEE040]();
}

uint64_t EnvironmentValues.foregroundColor.setter()
{
  return MEMORY[0x24BDEE050]();
}

uint64_t EnvironmentValues.multilineTextAlignment.getter()
{
  return MEMORY[0x24BDEE280]();
}

uint64_t EnvironmentValues.multilineTextAlignment.setter()
{
  return MEMORY[0x24BDEE298]();
}

uint64_t EnvironmentValues.font.getter()
{
  return MEMORY[0x24BDEE388]();
}

uint64_t EnvironmentValues.font.setter()
{
  return MEMORY[0x24BDEE398]();
}

uint64_t EnvironmentValues.lineLimit.getter()
{
  return MEMORY[0x24BDEE498]();
}

uint64_t EnvironmentValues.lineLimit.setter()
{
  return MEMORY[0x24BDEE4A8]();
}

uint64_t EnvironmentValues.tintColor.getter()
{
  return MEMORY[0x24BDEE4C8]();
}

uint64_t EnvironmentValues.tintColor.setter()
{
  return MEMORY[0x24BDEE4D0]();
}

uint64_t static VerticalAlignment.top.getter()
{
  return MEMORY[0x24BDEE720]();
}

uint64_t static VerticalAlignment.center.getter()
{
  return MEMORY[0x24BDEE738]();
}

uint64_t type metadata accessor for RoundedCornerStyle()
{
  return MEMORY[0x24BDEEB80]();
}

uint64_t static HorizontalAlignment.center.getter()
{
  return MEMORY[0x24BDEEF68]();
}

uint64_t static HorizontalAlignment.leading.getter()
{
  return MEMORY[0x24BDEEF70]();
}

uint64_t static HorizontalAlignment.trailing.getter()
{
  return MEMORY[0x24BDEEF88]();
}

uint64_t TitleOnlyLabelStyle.init()()
{
  return MEMORY[0x24BDEF118]();
}

uint64_t type metadata accessor for TitleOnlyLabelStyle()
{
  return MEMORY[0x24BDEF128]();
}

uint64_t _ConditionalContent<>.init(storage:)()
{
  return MEMORY[0x24BDEF3A8]();
}

uint64_t type metadata accessor for LocalCoordinateSpace()
{
  return MEMORY[0x24BDEF538]();
}

uint64_t RectangleCornerRadii.init(topLeft:topRight:bottomRight:bottomLeft:)()
{
  return MEMORY[0x24BDEF5B0]();
}

uint64_t static HierarchicalShapeStyle.quaternary.getter()
{
  return MEMORY[0x24BDEFC90]();
}

uint64_t static HierarchicalShapeStyle.primary.getter()
{
  return MEMORY[0x24BDEFCA0]();
}

uint64_t static HierarchicalShapeStyle.secondary.getter()
{
  return MEMORY[0x24BDEFCC0]();
}

uint64_t type metadata accessor for UnevenRoundedRectangle()
{
  return MEMORY[0x24BDEFEC0]();
}

uint64_t static CoordinateSpaceProtocol<>.local.getter()
{
  return MEMORY[0x24BDF0130]();
}

uint64_t type metadata accessor for ButtonStyleConfiguration.Label()
{
  return MEMORY[0x24BDF0448]();
}

uint64_t ButtonStyleConfiguration.label.getter()
{
  return MEMORY[0x24BDF0460]();
}

uint64_t ButtonStyleConfiguration.isPressed.getter()
{
  return MEMORY[0x24BDF0470]();
}

uint64_t type metadata accessor for ButtonStyleConfiguration()
{
  return MEMORY[0x24BDF0488]();
}

uint64_t static AnimationCompletionCriteria.logicallyComplete.getter()
{
  return MEMORY[0x24BDF0BE0]();
}

uint64_t type metadata accessor for AnimationCompletionCriteria()
{
  return MEMORY[0x24BDF0BF0]();
}

uint64_t static Log.runtimeIssuesLog.getter()
{
  return MEMORY[0x24BDF1428]();
}

uint64_t static Edge.Set.horizontal.getter()
{
  return MEMORY[0x24BDF1498]();
}

uint64_t static Edge.Set.all.getter()
{
  return MEMORY[0x24BDF14B0]();
}

uint64_t static Edge.Set.top.getter()
{
  return MEMORY[0x24BDF14B8]();
}

uint64_t static Edge.Set.bottom.getter()
{
  return MEMORY[0x24BDF14D0]();
}

uint64_t static Edge.Set.leading.getter()
{
  return MEMORY[0x24BDF14D8]();
}

uint64_t static Edge.Set.trailing.getter()
{
  return MEMORY[0x24BDF1500]();
}

uint64_t static Edge.Set.vertical.getter()
{
  return MEMORY[0x24BDF1508]();
}

uint64_t static Font.largeTitle.getter()
{
  return MEMORY[0x24BDF1568]();
}

uint64_t static Font.subheadline.getter()
{
  return MEMORY[0x24BDF1578]();
}

uint64_t static Font.Width.standard.getter()
{
  return MEMORY[0x24BDF1618]();
}

uint64_t static Font.Width.condensed.getter()
{
  return MEMORY[0x24BDF1620]();
}

uint64_t type metadata accessor for Font.Width()
{
  return MEMORY[0x24BDF1628]();
}

uint64_t type metadata accessor for Font.Design()
{
  return MEMORY[0x24BDF1680]();
}

uint64_t static Font.Weight.bold.getter()
{
  return MEMORY[0x24BDF16A0]();
}

uint64_t static Font.Weight.heavy.getter()
{
  return MEMORY[0x24BDF16C8]();
}

uint64_t static Font.Weight.medium.getter()
{
  return MEMORY[0x24BDF16E0]();
}

uint64_t static Font.Weight.regular.getter()
{
  return MEMORY[0x24BDF16F0]();
}

uint64_t static Font.Weight.semibold.getter()
{
  return MEMORY[0x24BDF16F8]();
}

uint64_t static Font.system(size:weight:design:)()
{
  return MEMORY[0x24BDF1748]();
}

uint64_t static Font.title3.getter()
{
  return MEMORY[0x24BDF1788]();
}

uint64_t Font.weight(_:)()
{
  return MEMORY[0x24BDF17A0]();
}

uint64_t static Font.footnote.getter()
{
  return MEMORY[0x24BDF1830]();
}

uint64_t static Font.headline.getter()
{
  return MEMORY[0x24BDF1838]();
}

uint64_t type metadata accessor for Font.TextStyle()
{
  return MEMORY[0x24BDF1908]();
}

uint64_t Text.fontWeight(_:)()
{
  return MEMORY[0x24BDF1BF0]();
}

uint64_t Text.foregroundColor(_:)()
{
  return MEMORY[0x24BDF1D00]();
}

uint64_t Text.foregroundStyle<A>(_:)()
{
  return MEMORY[0x24BDF1D10]();
}

uint64_t Text.font(_:)()
{
  return MEMORY[0x24BDF1DD0]();
}

uint64_t Text.init<A>(_:)()
{
  return MEMORY[0x24BDF1FE8]();
}

uint64_t View.eraseToAnyView()()
{
  return MEMORY[0x24BEAD6D8]();
}

uint64_t View.buttonRole(_:foreground:background:)()
{
  return MEMORY[0x24BEAD6E8]();
}

uint64_t View.buttonRole(_:)()
{
  return MEMORY[0x24BEAD700]();
}

uint64_t View.separators(_:isOverride:)()
{
  return MEMORY[0x24BEAD760]();
}

uint64_t View.componentTapped(isNavigation:perform:)()
{
  return MEMORY[0x24BEAD7C8]();
}

uint64_t View.componentSpacing(top:bottom:)()
{
  return MEMORY[0x24BEAD810]();
}

uint64_t View.setHostBackground(_:)()
{
  return MEMORY[0x24BEAD848]();
}

uint64_t View.lastComponentBottomSpacing(_:)()
{
  return MEMORY[0x24BEAD890]();
}

uint64_t View.hideConversationAreaKeyline(_:)()
{
  return MEMORY[0x24BEAD8B0]();
}

uint64_t View.if<A>(_:transform:)()
{
  return MEMORY[0x24BEAD8C0]();
}

uint64_t static View._makeView(view:inputs:)()
{
  return MEMORY[0x24BDF2090]();
}

uint64_t static View._makeViewList(view:inputs:)()
{
  return MEMORY[0x24BDF2098]();
}

uint64_t View.fontWeight(_:)()
{
  return MEMORY[0x24BDF2140]();
}

uint64_t View.labelStyle<A>(_:)()
{
  return MEMORY[0x24BDF2178]();
}

uint64_t View.buttonStyle<A>(_:)()
{
  return MEMORY[0x24BDF22D0]();
}

uint64_t View.onTapGesture(count:perform:)()
{
  return MEMORY[0x24BDF2540]();
}

uint64_t static View._viewListCount(inputs:)()
{
  return MEMORY[0x24BDF26A0]();
}

uint64_t View.privacySensitive(_:)()
{
  return MEMORY[0x24BDF29D0]();
}

uint64_t View.bold(_:)()
{
  return MEMORY[0x24BDF3478]();
}

uint64_t View.gesture<A>(_:including:)()
{
  return MEMORY[0x24BDF3760]();
}

uint64_t View.modifier<A>(_:)()
{
  return MEMORY[0x24BDF38B8]();
}

uint64_t View.fontWidth(_:)()
{
  return MEMORY[0x24BDF39F0]();
}

uint64_t type metadata accessor for Color.RGBColorSpace()
{
  return MEMORY[0x24BDF3C38]();
}

uint64_t static Color.red.getter()
{
  return MEMORY[0x24BDF3C80]();
}

uint64_t static Color.blue.getter()
{
  return MEMORY[0x24BDF3C88]();
}

uint64_t static Color.gray.getter()
{
  return MEMORY[0x24BDF3CB0]();
}

uint64_t static Color.black.getter()
{
  return MEMORY[0x24BDF3CF8]();
}

uint64_t static Color.white.getter()
{
  return MEMORY[0x24BDF3D28]();
}

uint64_t static Color.primary.getter()
{
  return MEMORY[0x24BDF3D80]();
}

uint64_t static Color.secondary.getter()
{
  return MEMORY[0x24BDF3E00]();
}

uint64_t Color.init(_:red:green:blue:opacity:)()
{
  return MEMORY[0x24BDF3E68]();
}

uint64_t Image.init(systemName:)()
{
  return MEMORY[0x24BDF3F88]();
}

uint64_t type metadata accessor for Image.ResizingMode()
{
  return MEMORY[0x24BDF3FE0]();
}

uint64_t Image.resizable(capInsets:resizingMode:)()
{
  return MEMORY[0x24BDF40E0]();
}

uint64_t Label.init(title:icon:)()
{
  return MEMORY[0x24BDF4148]();
}

uint64_t Label<>.init<A>(_:systemImage:)()
{
  return MEMORY[0x24BDF4168]();
}

uint64_t State.init(wrappedValue:)()
{
  return MEMORY[0x24BDF4288]();
}

uint64_t State.wrappedValue.getter()
{
  return MEMORY[0x24BDF4298]();
}

uint64_t State.wrappedValue.setter()
{
  return MEMORY[0x24BDF42A0]();
}

uint64_t State.projectedValue.getter()
{
  return MEMORY[0x24BDF42B8]();
}

uint64_t Button.init(action:label:)()
{
  return MEMORY[0x24BDF4348]();
}

uint64_t Button<>.init<A>(_:action:)()
{
  return MEMORY[0x24BDF4388]();
}

uint64_t type metadata accessor for Capsule()
{
  return MEMORY[0x24BDF48E0]();
}

uint64_t Divider.init()()
{
  return MEMORY[0x24BDF4910]();
}

uint64_t type metadata accessor for Divider()
{
  return MEMORY[0x24BDF4920]();
}

uint64_t ForEach<>.init(_:id:content:)()
{
  return MEMORY[0x24BDF4998]();
}

uint64_t ForEach<>.init(_:content:)()
{
  return MEMORY[0x24BDF49B0]();
}

uint64_t type metadata accessor for ForEach()
{
  return MEMORY[0x24BDF49D0]();
}

uint64_t Gesture.onEnded(_:)()
{
  return MEMORY[0x24BDF4A30]();
}

uint64_t Gesture<>.onChanged(_:)()
{
  return MEMORY[0x24BDF4A38]();
}

uint64_t static Material.thick.getter()
{
  return MEMORY[0x24BDF4E18]();
}

uint64_t static Material.ultraThin.getter()
{
  return MEMORY[0x24BDF4E38]();
}

uint64_t type metadata accessor for Material()
{
  return MEMORY[0x24BDF4E50]();
}

uint64_t static Alignment.center.getter()
{
  return MEMORY[0x24BDF4F10]();
}

uint64_t static Alignment.leading.getter()
{
  return MEMORY[0x24BDF4F28]();
}

uint64_t static Animation.easeInOut(duration:)()
{
  return MEMORY[0x24BDF5008]();
}

uint64_t type metadata accessor for DispatchWorkItemFlags()
{
  return MEMORY[0x24BEE5458]();
}

uint64_t static DispatchQoS.unspecified.getter()
{
  return MEMORY[0x24BEE54C8]();
}

uint64_t type metadata accessor for DispatchQoS()
{
  return MEMORY[0x24BEE5500]();
}

uint64_t static DispatchTime.now()()
{
  return MEMORY[0x24BEE5570]();
}

uint64_t type metadata accessor for DispatchTime()
{
  return MEMORY[0x24BEE5590]();
}

uint64_t + infix(_:_:)()
{
  return MEMORY[0x24BEE5628]();
}

uint64_t type metadata accessor for ButtonItemButtonStyle.Role()
{
  return MEMORY[0x24BEAD988]();
}

uint64_t SnippetPreview.init(snippetModel:content:)()
{
  return MEMORY[0x24BEAD9D0]();
}

uint64_t type metadata accessor for RFImageView()
{
  return MEMORY[0x24BEADA40]();
}

uint64_t RFImageView.init(_:)()
{
  return MEMORY[0x24BEADA58]();
}

uint64_t ActionHandler.wrappedValue.modify()
{
  return MEMORY[0x24BEADAD0]();
}

uint64_t ActionHandler.wrappedValue.getter()
{
  return MEMORY[0x24BEADAE0]();
}

uint64_t ActionHandler.wrappedValue.setter()
{
  return MEMORY[0x24BEADAE8]();
}

uint64_t ActionHandler.init()()
{
  return MEMORY[0x24BEADAF0]();
}

uint64_t type metadata accessor for ActionHandler()
{
  return MEMORY[0x24BEADB00]();
}

uint64_t type metadata accessor for PlainTextView()
{
  return MEMORY[0x24BEADB58]();
}

uint64_t PlainTextView.init(_:)()
{
  return MEMORY[0x24BEADB68]();
}

uint64_t static AnyViewBuilder.buildBlock(_:)()
{
  return MEMORY[0x24BEADBC0]();
}

uint64_t ComponentStack.init(content:)()
{
  return MEMORY[0x24BEADBD8]();
}

uint64_t type metadata accessor for HostBackground()
{
  return MEMORY[0x24BEADC40]();
}

uint64_t type metadata accessor for InteractionType()
{
  return MEMORY[0x24BEADCA8]();
}

uint64_t BinaryButtonView.init(primaryButton:secondaryButton:)()
{
  return MEMORY[0x24BEADCD8]();
}

uint64_t type metadata accessor for BinaryButtonView()
{
  return MEMORY[0x24BEADCE8]();
}

uint64_t type metadata accessor for ImageElementView()
{
  return MEMORY[0x24BEADD10]();
}

uint64_t ImageElementView.init(_:)()
{
  return MEMORY[0x24BEADD30]();
}

uint64_t LongItemTextView.init(text1:)()
{
  return MEMORY[0x24BEADD48]();
}

uint64_t type metadata accessor for LongItemTextView()
{
  return MEMORY[0x24BEADD60]();
}

uint64_t SashStandardView.init(model:)()
{
  return MEMORY[0x24BEADD98]();
}

uint64_t type metadata accessor for SashStandardView()
{
  return MEMORY[0x24BEADDA8]();
}

uint64_t SashStandardView.init(_:titleColor:showOnWatch:)()
{
  return MEMORY[0x24BEADDC8]();
}

uint64_t DisambiguationView.init(title:content:)()
{
  return MEMORY[0x24BEADE20]();
}

uint64_t SimpleItemRichView.init(text1:text2:text3:text4:text5:text6:text7:text8:thumbnail:)()
{
  return MEMORY[0x24BEADE80]();
}

uint64_t type metadata accessor for SimpleItemRichView()
{
  return MEMORY[0x24BEADE98]();
}

uint64_t ButtonContainerView.init(buttons:)()
{
  return MEMORY[0x24BEADEE8]();
}

uint64_t type metadata accessor for ButtonContainerView()
{
  return MEMORY[0x24BEADF00]();
}

uint64_t DisambiguationTitle.init(text1:thumbnail:)()
{
  return MEMORY[0x24BEADF20]();
}

uint64_t type metadata accessor for DisambiguationTitle()
{
  return MEMORY[0x24BEADF30]();
}

uint64_t type metadata accessor for StatusIndicatorView.IndicatorType()
{
  return MEMORY[0x24BEADFA0]();
}

uint64_t StatusIndicatorView.init(message:type:showIndicator:)()
{
  return MEMORY[0x24BEADFB8]();
}

uint64_t type metadata accessor for StatusIndicatorView()
{
  return MEMORY[0x24BEADFC8]();
}

uint64_t SummaryItemTextView.init(text1:text2:text3:text4:text5:)()
{
  return MEMORY[0x24BEADFE8]();
}

uint64_t type metadata accessor for SummaryItemTextView()
{
  return MEMORY[0x24BEAE000]();
}

uint64_t StandardActionHandler.perform(_:interactionType:)()
{
  return MEMORY[0x24BEAE090]();
}

uint64_t type metadata accessor for StandardActionHandler()
{
  return MEMORY[0x24BEAE0A0]();
}

uint64_t SummaryItemButtonView.init(text1:button1:button2:button3:text2:text3:text4:thumbnail:)()
{
  return MEMORY[0x24BEAE0C8]();
}

uint64_t type metadata accessor for SummaryItemButtonView()
{
  return MEMORY[0x24BEAE0D8]();
}

uint64_t SimpleItemStandardView.init(text1:text2:text3:text4:text5:text6:)()
{
  return MEMORY[0x24BEAE180]();
}

uint64_t type metadata accessor for SimpleItemStandardView()
{
  return MEMORY[0x24BEAE188]();
}

uint64_t type metadata accessor for StandardSiriButtonStyle()
{
  return MEMORY[0x24BEAE1F0]();
}

uint64_t SummaryItemStandardView.init(text1:text2:text3:text4:thumbnail:)()
{
  return MEMORY[0x24BEAE218]();
}

uint64_t type metadata accessor for SummaryItemStandardView()
{
  return MEMORY[0x24BEAE230]();
}

uint64_t PrimaryHeaderStandardView.init(text1:text2:text3:addTint:)()
{
  return MEMORY[0x24BEAE2D8]();
}

uint64_t type metadata accessor for PrimaryHeaderStandardView()
{
  return MEMORY[0x24BEAE2E8]();
}

uint64_t type metadata accessor for ComponentStackBottomSpacing()
{
  return MEMORY[0x24BEAE378]();
}

uint64_t dispatch thunk of Context.isInAmbient.getter()
{
  return MEMORY[0x24BEAE440]();
}

uint64_t dispatch thunk of Context.$sharedState.getter()
{
  return MEMORY[0x24BEAE458]();
}

uint64_t dispatch thunk of Context.currentIdiom.getter()
{
  return MEMORY[0x24BEAE470]();
}

uint64_t dispatch thunk of Context.informHostListItemCount(_:)()
{
  return MEMORY[0x24BEAE4B8]();
}

uint64_t dispatch thunk of Context.hideBackgroundBehindSiri()()
{
  return MEMORY[0x24BEAE4C0]();
}

uint64_t dispatch thunk of Context.siriEventUpdatePublisher.getter()
{
  return MEMORY[0x24BEAE4C8]();
}

uint64_t type metadata accessor for Context.Event()
{
  return MEMORY[0x24BEAE500]();
}

uint64_t type metadata accessor for Context()
{
  return MEMORY[0x24BEAE578]();
}

NSDictionary __swiftcall Dictionary._bridgeToObjectiveC()()
{
  return (NSDictionary)MEMORY[0x24BDCF808]();
}

uint64_t static Dictionary._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x24BDCF830]();
}

uint64_t dispatch thunk of Hashable._rawHashValue(seed:)()
{
  return MEMORY[0x24BEE0610]();
}

uint64_t dispatch thunk of Hashable.hash(into:)()
{
  return MEMORY[0x24BEE0618]();
}

uint64_t BidirectionalCollection<>.joined(separator:)()
{
  return MEMORY[0x24BEE07D0]();
}

uint64_t type metadata accessor for ClosedRange()
{
  return MEMORY[0x24BEE08B8]();
}

uint64_t dispatch thunk of static Equatable.== infix(_:_:)()
{
  return MEMORY[0x24BEE0980]();
}

NSString __swiftcall String._bridgeToObjectiveC()()
{
  return (NSString)MEMORY[0x24BDCF9E0]();
}

uint64_t static String._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t String.init<A>(describing:)()
{
  return MEMORY[0x24BEE09F0]();
}

Swift::String __swiftcall String.lowercased()()
{
  uint64_t v0;
  void *v1;
  Swift::String result;

  v0 = MEMORY[0x24BEE0A08]();
  result._object = v1;
  result._countAndFlagsBits = v0;
  return result;
}

Swift::String __swiftcall String.uppercased()()
{
  uint64_t v0;
  void *v1;
  Swift::String result;

  v0 = MEMORY[0x24BEE0A20]();
  result._object = v1;
  result._countAndFlagsBits = v0;
  return result;
}

uint64_t static String._fromSubstring(_:)()
{
  return MEMORY[0x24BEE0A50]();
}

uint64_t String.UnicodeScalarView.append(_:)()
{
  return MEMORY[0x24BEE0AA0]();
}

uint64_t String.hash(into:)()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t String.index(_:offsetBy:limitedBy:)()
{
  return MEMORY[0x24BEE0B80]();
}

uint64_t String.append<A>(contentsOf:)()
{
  return MEMORY[0x24BEE0BB0]();
}

Swift::Void __swiftcall String.append(_:)(Swift::String a1)
{
  MEMORY[0x24BEE0BC0](a1._countAndFlagsBits, a1._object);
}

Swift::Int __swiftcall String.UTF8View._foreignCount()()
{
  return MEMORY[0x24BEE0C10]();
}

Swift::Bool __swiftcall String.hasPrefix(_:)(Swift::String a1)
{
  return MEMORY[0x24BEE0CC8](a1._countAndFlagsBits, a1._object);
}

uint64_t String.subscript.getter()
{
  return MEMORY[0x24BEE0DE0]();
}

uint64_t Sequence.enumerated()()
{
  return MEMORY[0x24BEE0E48]();
}

uint64_t RawRepresentable<>.encode(to:)()
{
  return MEMORY[0x24BEE1000]();
}

uint64_t RawRepresentable<>.init(from:)()
{
  return MEMORY[0x24BEE1080]();
}

uint64_t type metadata accessor for Array()
{
  return MEMORY[0x24BEE1250]();
}

uint64_t Array.init<A>(_:)()
{
  return MEMORY[0x24BEE1288]();
}

uint64_t static os_log_type_t.info.getter()
{
  return MEMORY[0x24BEE78F0]();
}

uint64_t static os_log_type_t.debug.getter()
{
  return MEMORY[0x24BEE7908]();
}

uint64_t static os_log_type_t.error.getter()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t static os_log_type_t.fault.getter()
{
  return MEMORY[0x24BEE7920]();
}

uint64_t OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)()
{
  return MEMORY[0x24BEE56B8]();
}

uint64_t static OS_dispatch_queue.main.getter()
{
  return MEMORY[0x24BEE5770]();
}

uint64_t type metadata accessor for NSNotificationCenter.Publisher()
{
  return MEMORY[0x24BDD0078]();
}

uint64_t NSNotificationCenter.publisher(for:object:)()
{
  return MEMORY[0x24BDD0098]();
}

uint64_t static SAIntentGroupLaunchAppWithIntent.launchAppWithIntent(app:intent:intentResponse:)()
{
  return MEMORY[0x24BE99130]();
}

uint64_t NSTimer.TimerPublisher.connect()()
{
  return MEMORY[0x24BDD01C0]();
}

uint64_t type metadata accessor for NSTimer.TimerPublisher()
{
  return MEMORY[0x24BDD01C8]();
}

uint64_t static NSTimer.publish(every:tolerance:on:in:options:)()
{
  return MEMORY[0x24BDD01D8]();
}

uint64_t VRXIdiom.isCarPlay.getter()
{
  return MEMORY[0x24BEAE628]();
}

uint64_t VRXIdiom.isWatchOS.getter()
{
  return MEMORY[0x24BEAE630]();
}

uint64_t type metadata accessor for NSRunLoop.SchedulerOptions()
{
  return MEMORY[0x24BDD03C0]();
}

uint64_t type metadata accessor for Optional()
{
  return MEMORY[0x24BEE1C68]();
}

Swift::String __swiftcall Substring.uppercased()()
{
  uint64_t v0;
  void *v1;
  Swift::String result;

  v0 = MEMORY[0x24BEE1D60]();
  result._object = v1;
  result._countAndFlagsBits = v0;
  return result;
}

uint64_t UnsafeMutableRawBufferPointer.copyMemory(from:)()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t UnsafeMutableRawBufferPointer.subscript.setter()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t StringProtocol.components(separatedBy:)()
{
  return MEMORY[0x24BDD04B8]();
}

uint64_t StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)()
{
  return MEMORY[0x24BDD0568]();
}

uint64_t dispatch thunk of SetAlgebra.init<A>(_:)()
{
  return MEMORY[0x24BEE22C0]();
}

Swift::Int __swiftcall AnyHashable._rawHashValue(seed:)(Swift::Int seed)
{
  return MEMORY[0x24BEE23A0](seed);
}

uint64_t static AnyHashable.== infix(_:_:)()
{
  return MEMORY[0x24BEE23A8]();
}

uint64_t AnyHashable.init<A>(_:)()
{
  return MEMORY[0x24BEE23E8]();
}

uint64_t static _SetStorage.allocate(capacity:)()
{
  return MEMORY[0x24BEE24D0]();
}

uint64_t _StringGuts.foreignErrorCorrectedScalar(startingAt:)()
{
  return MEMORY[0x24BEE2508]();
}

Swift::Void __swiftcall _StringGuts.grow(_:)(Swift::Int a1)
{
  MEMORY[0x24BEE2510](a1);
}

uint64_t _StringGuts.copyUTF8(into:)()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t DecodingError.Context.init(codingPath:debugDescription:underlyingError:)()
{
  return MEMORY[0x24BEE26E8]();
}

uint64_t type metadata accessor for DecodingError()
{
  return MEMORY[0x24BEE2710]();
}

uint64_t _StringObject.sharedUTF8.getter()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t _decodeScalar(_:startingAt:)()
{
  return MEMORY[0x24BEE2840]();
}

uint64_t __CocoaDictionary.makeIterator()()
{
  return MEMORY[0x24BEE2EA8]();
}

uint64_t __CocoaDictionary.count.getter()
{
  return MEMORY[0x24BEE2EE0]();
}

uint64_t __CocoaDictionary.Iterator.next()()
{
  return MEMORY[0x24BEE2F18]();
}

uint64_t _assertionFailure(_:_:file:line:flags:)()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t type metadata accessor for EnumeratedSequence()
{
  return MEMORY[0x24BEE2FB0]();
}

uint64_t static _DictionaryStorage.allocate(capacity:)()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t _fatalErrorMessage(_:_:file:line:flags:)()
{
  return MEMORY[0x24BEE30B0]();
}

Swift::Int __swiftcall _findStringSwitchCase(cases:string:)(Swift::OpaquePointer cases, Swift::String string)
{
  return MEMORY[0x24BEE3290](cases._rawValue, string._countAndFlagsBits, string._object);
}

uint64_t KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)()
{
  return MEMORY[0x24BEE32B8]();
}

uint64_t KeyedDecodingContainer.codingPath.getter()
{
  return MEMORY[0x24BEE32C0]();
}

uint64_t KeyedDecodingContainer.decodeIfPresent(_:forKey:)()
{
  return MEMORY[0x24BEE32D8]();
}

uint64_t KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)()
{
  return MEMORY[0x24BEE3308]();
}

uint64_t KeyedDecodingContainer.decode(_:forKey:)()
{
  return MEMORY[0x24BEE3350]();
}

{
  return MEMORY[0x24BEE3358]();
}

{
  return MEMORY[0x24BEE3360]();
}

uint64_t KeyedDecodingContainer.decode<A>(_:forKey:)()
{
  return MEMORY[0x24BEE3380]();
}

uint64_t KeyedDecodingContainer.allKeys.getter()
{
  return MEMORY[0x24BEE33C8]();
}

uint64_t KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)()
{
  return MEMORY[0x24BEE3408]();
}

uint64_t KeyedEncodingContainer.encodeIfPresent(_:forKey:)()
{
  return MEMORY[0x24BEE3428]();
}

uint64_t KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)()
{
  return MEMORY[0x24BEE3458]();
}

uint64_t KeyedEncodingContainer.encode(_:forKey:)()
{
  return MEMORY[0x24BEE34A0]();
}

{
  return MEMORY[0x24BEE34A8]();
}

{
  return MEMORY[0x24BEE34B0]();
}

uint64_t KeyedEncodingContainer.encode<A>(_:forKey:)()
{
  return MEMORY[0x24BEE34D0]();
}

uint64_t dispatch thunk of CustomStringConvertible.description.getter()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t _stringCompareWithSmolCheck(_:_:expecting:)()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)()
{
  return MEMORY[0x24BEE3DE0]();
}

uint64_t max<A>(_:_:)()
{
  return MEMORY[0x24BEE3DF8]();
}

uint64_t min<A>(_:_:)()
{
  return MEMORY[0x24BEE3E08]();
}

uint64_t Hasher.init(_seed:)()
{
  return MEMORY[0x24BEE42E0]();
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt a1)
{
  MEMORY[0x24BEE42F8](a1);
}

Swift::Int __swiftcall Hasher._finalize()()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t dispatch thunk of Decoder.container<A>(keyedBy:)()
{
  return MEMORY[0x24BEE4608]();
}

uint64_t dispatch thunk of Encoder.container<A>(keyedBy:)()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t CodingKey.description.getter()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t CodingKey.debugDescription.getter()
{
  return MEMORY[0x24BEE4A10]();
}

uint64_t TUPreferredFaceTimeBundleIdentifier()
{
  return MEMORY[0x24BEB4B68]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x24BEE4B58]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x24BEE4B80]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x24BEE4BE0]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_deletedMethodError()
{
  return MEMORY[0x24BEE4C28]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x24BEE4C60]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x24BEE4CD8]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x24BEE4CE8]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x24BEE4D08]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x24BEE4D88]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x24BEE4D98]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x24BEE4DC0]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x24BEE4DF8]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x24BEE4E30]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x24BEE4F30]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x24BEE4F58]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

