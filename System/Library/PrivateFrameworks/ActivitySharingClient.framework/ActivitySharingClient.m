uint64_t sub_235E8E3F8()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 216) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

void sub_235E8E4A0(void *a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  uint64_t v6;
  id v7;

  v5 = a1;
  if (a1)
  {
    sub_235E91928();
    sub_235E918D0();
    v5 = (void *)sub_235EE5E9C();
  }
  if (a2)
    v6 = sub_235EE5A94();
  else
    v6 = 0;
  v7 = (id)v6;
  (*(void (**)(uint64_t, void *))(a3 + 16))(a3, v5);

}

uint64_t sub_235E8E530()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);

  (*(void (**)(uint64_t, _QWORD, _QWORD))(v1 + 16))(v1, *(_QWORD *)(v0 + 16), 0);
  _Block_release(*(const void **)(v0 + 32));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235E8E57C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_235E8E458;
  return ((uint64_t (*)(uint64_t, void *, void *))((char *)&dword_25638C8E0 + dword_25638C8E0))(v2, v3, v4);
}

uint64_t sub_235E8E5E8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t type metadata accessor for ActivitySharingClient()
{
  return objc_opt_self();
}

uint64_t sub_235E8E650(uint64_t a1)
{
  return sub_235E94F54(a1, qword_25429CF70);
}

uint64_t sub_235E8E670()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);

  (*(void (**)(uint64_t, _QWORD, _QWORD))(v1 + 16))(v1, *(unsigned __int8 *)(v0 + 48), 0);
  _Block_release(*(const void **)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235E8E6BC(const void *a1, void *a2)
{
  _QWORD *v2;
  id v4;
  _QWORD *v5;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  v4 = a2;
  v5 = (_QWORD *)swift_task_alloc();
  v2[4] = v5;
  *v5 = v2;
  v5[1] = sub_235EB3034;
  v5[13] = v4;
  return swift_task_switch();
}

uint64_t sub_235E8E734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_235E8E458;
  return XPCClient.sendItem<A>(_:)(a1, a2, a3, a4);
}

uint64_t sub_235E8E814(const void *a1, void *a2)
{
  uint64_t v2;
  id v4;

  *(_QWORD *)(v2 + 24) = a2;
  *(_QWORD *)(v2 + 32) = _Block_copy(a1);
  v4 = a2;
  return swift_task_switch();
}

uint64_t sub_235E8E85C(const void *a1, void *a2)
{
  uint64_t v2;
  id v4;

  *(_QWORD *)(v2 + 16) = a2;
  *(_QWORD *)(v2 + 24) = _Block_copy(a1);
  v4 = a2;
  return swift_task_switch();
}

uint64_t sub_235E8E8A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 120);
  v1 = *(_QWORD *)(v0 + 128);
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 160) + 16))(v2, v1);
  swift_unknownObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_235E8E918()
{
  unint64_t result;

  result = qword_25429CDD8;
  if (!qword_25429CDD8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25429CDD8);
  }
  return result;
}

uint64_t sub_235E8E954()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = sub_235E90070();
  *(_QWORD *)(v0 + 176) = v1;
  *(_QWORD *)(v0 + 184) = 0;
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 144);
    *(_QWORD *)(v0 + 56) = v0 + 120;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_235E91F44;
    v3 = swift_continuation_init();
    *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
    v4 = (_QWORD *)(v0 + 80);
    v4[1] = 0x40000000;
    v4[2] = sub_235E8E3F4;
    v4[3] = &block_descriptor_9;
    v4[4] = v3;
    objc_msgSend((id)swift_unknownObjectRetain(), sel_transportRequest_completionHandler_, v2, v4);
    return swift_continuation_await();
  }
  else
  {
    (*(void (**)(_QWORD, unint64_t))(*(_QWORD *)(v0 + 160) + 16))(0, 0xF000000000000000);
    swift_unknownObjectRelease();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_235E8EAC4()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 16);
  if (v1)
  {
    v2 = (id)ASFriendsFromCodableFriendList();
    sub_235E8EC68(0, (unint64_t *)&qword_25429CCD0);
    sub_235E918D0();
    v3 = sub_235EE5EB4();

  }
  else
  {
    v3 = 0;
  }
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
}

uint64_t XPCClient.sendItem<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v5[20] = a4;
  v5[21] = v4;
  v5[18] = a2;
  v5[19] = a3;
  v5[17] = a1;
  v6 = sub_235EE5F14();
  v5[22] = v6;
  v5[23] = *(_QWORD *)(v6 - 8);
  v5[24] = swift_task_alloc();
  return swift_task_switch();
}

{
  uint64_t v4;
  _QWORD *v5;

  v5[20] = a4;
  v5[21] = v4;
  v5[18] = a2;
  v5[19] = a3;
  v5[17] = a1;
  return swift_task_switch();
}

uint64_t sub_235E8EC2C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_235E8EC68(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_235E8ECA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  if (qword_25429CF60 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 48);
  v2 = sub_235EE5CF8();
  __swift_project_value_buffer(v2, (uint64_t)qword_25429CF70);
  sub_235E9105C(0xD000000000000063, 0x8000000235EEBD20, 0xD000000000000014, 0x8000000235EEBDD0);
  *(_QWORD *)(v0 + 56) = *(_QWORD *)(v1 + OBJC_IVAR____TtC21ActivitySharingClient13ASXPCListener_transportDispatchService);
  *(_QWORD *)(v0 + 24) = 0;
  *(_QWORD *)(v0 + 16) = 0;
  *(_BYTE *)(v0 + 32) = -1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v3;
  *v3 = v0;
  v3[1] = sub_235EC4918;
  return sub_235EA6EF4(*(_QWORD *)(v0 + 40), 0, 0xF000000000000000, v0 + 16);
}

uint64_t objectdestroy_87Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_351Tm()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 32));
  return swift_deallocObject();
}

uint64_t objectdestroyTm()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t objectdestroyTm_0()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocObject();
}

uint64_t sub_235E8F108(uint64_t a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  id v6;
  _QWORD *v7;

  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  v6 = a3;
  v7 = (_QWORD *)swift_task_alloc();
  v3[4] = v7;
  *v7 = v3;
  v7[1] = sub_235E90850;
  v7[5] = a1;
  v7[6] = v6;
  return swift_task_switch();
}

uint64_t sub_235E8F36C(void *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t *i;
  unint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  _OWORD v17[2];
  uint64_t v18[4];

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 1;
  swift_bridgeObjectRetain();
  for (i = (unint64_t *)(a2 + 40); ; i += 2)
  {
    v7 = *(i - 1);
    v6 = *i;
    swift_bridgeObjectRetain();
    v8 = (void *)sub_235EE5D34();
    v9 = objc_msgSend(a1, sel_valueForEntitlement_, v8);

    if (v9)
    {
      sub_235EE5F68();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v17, 0, sizeof(v17));
    }
    sub_235E91888((uint64_t)v17, (uint64_t)v18);
    if (!v18[3])
      break;
    if ((swift_dynamicCast() & 1) == 0 || (v16 & 1) == 0)
      goto LABEL_13;
    swift_bridgeObjectRelease();
    if (!--v2)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
  }
  sub_235E8EC2C((uint64_t)v18, qword_25429C948);
LABEL_13:
  swift_bridgeObjectRelease();
  if (qword_25429CF60 != -1)
    swift_once();
  v11 = sub_235EE5CF8();
  __swift_project_value_buffer(v11, (uint64_t)qword_25429CF70);
  swift_bridgeObjectRetain();
  v12 = sub_235EE5CE0();
  v13 = sub_235EE5ECC();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc();
    v15 = swift_slowAlloc();
    v18[0] = v15;
    *(_DWORD *)v14 = 141558274;
    *(_QWORD *)&v17[0] = 1752392040;
    sub_235EE5F2C();
    *(_WORD *)(v14 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v17[0] = sub_235E911D4(v7, v6, v18);
    sub_235EE5F2C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_235E8C000, v12, v13, "Rejecting connection missing entitlement: %{mask.hash}s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B7E529C](v15, -1, -1);
    MEMORY[0x23B7E529C](v14, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return 0;
}

uint64_t sub_235E8F634()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;

  if (qword_25429CF60 != -1)
    swift_once();
  v1 = v0[8];
  v2 = sub_235EE5CF8();
  __swift_project_value_buffer(v2, (uint64_t)qword_25429CF70);
  sub_235E9105C(0xD00000000000005FLL, 0x8000000235EEC360, 0x6574617669746361, 0xEA00000000002928);
  if (!*(_BYTE *)(v1 + 128))
  {
    v3 = v0[8];
    v4 = *(void **)(v3 + 112);
    objc_msgSend(v4, sel_setExportedObject_, v3);
    v0[6] = sub_235ED061C;
    v0[7] = 0;
    v5 = MEMORY[0x24BDAC760];
    v0[2] = MEMORY[0x24BDAC760];
    v0[3] = 1107296256;
    v0[4] = sub_235ED021C;
    v0[5] = &block_descriptor_3;
    v6 = _Block_copy(v0 + 2);
    objc_msgSend(v4, sel_setInterruptionHandler_, v6);
    _Block_release(v6);
    v0[6] = sub_235ED0880;
    v0[7] = v3;
    v0[2] = v5;
    v0[3] = 1107296256;
    v0[4] = sub_235ED021C;
    v0[5] = &block_descriptor_3;
    v7 = _Block_copy(v0 + 2);
    swift_retain();
    swift_release();
    objc_msgSend(v4, sel_setInvalidationHandler_, v7);
    _Block_release(v7);
    objc_msgSend(v4, sel_resume);
    *(_BYTE *)(v1 + 128) = 1;
  }
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t XPCClient.init()()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;

  swift_defaultActor_initialize();
  *(_QWORD *)(v0 + 120) = 0;
  *(_BYTE *)(v0 + 128) = 0;
  sub_235EE5D40();
  v1 = objc_allocWithZone(MEMORY[0x24BDD1988]);
  v2 = (void *)sub_235EE5D34();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_initWithMachServiceName_options_, v2, 0);

  *(_QWORD *)(v0 + 112) = v3;
  v4 = (void *)objc_opt_self();
  v5 = v3;
  v6 = objc_msgSend(v4, sel_interfaceWithProtocol_, &unk_2563958D8);
  objc_msgSend(v5, sel_setRemoteObjectInterface_, v6);

  return v0;
}

uint64_t sub_235E8F8DC(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  _QWORD *v5;
  id v6;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD v12[2];

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25638BF90);
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    if (a2)
    {
      v8 = a2;
      v9 = sub_235EE5AB8();
      v11 = v10;

    }
    else
    {
      v9 = 0;
      v11 = 0xF000000000000000;
    }
    v12[0] = v9;
    v12[1] = v11;
    sub_235E8F9A4((uint64_t)v12, *(_QWORD *)(*(_QWORD *)(v3 + 64) + 40));
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_235E8F9A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25429CCB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

char *ActivitySharingFriendQuery.init(activitySharingClient:updateHandler:)(void *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v5;
  id v6;
  char *v7;
  id v8;
  id v9;
  char *v10;
  void *v11;
  char *v12;
  id v13;
  uint64_t v14;
  char *v15;
  objc_super v17;

  *(_QWORD *)&v3[OBJC_IVAR____ASActivitySharingFriendQuery_activitySharingClient] = a1;
  v5 = &v3[OBJC_IVAR____ASActivitySharingFriendQuery_updateHandler];
  *(_QWORD *)v5 = a2;
  *((_QWORD *)v5 + 1) = a3;
  v6 = objc_allocWithZone(MEMORY[0x24BE32800]);
  v7 = v3;
  v8 = a1;
  swift_retain();
  v9 = objc_msgSend(v6, sel_init);
  *(_QWORD *)&v7[OBJC_IVAR____ASActivitySharingFriendQuery_fitnessAppsStateObserver] = v9;

  v17.receiver = v7;
  v17.super_class = (Class)type metadata accessor for ActivitySharingFriendQuery();
  v10 = (char *)objc_msgSendSuper2(&v17, sel_init);
  v11 = *(void **)&v10[OBJC_IVAR____ASActivitySharingFriendQuery_fitnessAppsStateObserver];
  v12 = v10;
  objc_msgSend(v11, sel_setDelegate_, v12);
  _s21ActivitySharingClient0aB11FriendQueryC24fitnessAppsStateObserver_018applicationInstallH29DidChangeForBundleIdentifiersySo09FIFitnessghI0C_SaySSGtF_0();
  v13 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v14 = *MEMORY[0x24BE01F48];
  v15 = v12;
  objc_msgSend(v13, sel_addObserver_selector_name_object_, v15, sel_handleFriendListUpdate, v14, 0);

  swift_release();
  return v15;
}

void _s21ActivitySharingClient0aB11FriendQueryC24fitnessAppsStateObserver_018applicationInstallH29DidChangeForBundleIdentifiersySo09FIFitnessghI0C_SaySSGtF_0()
{
  char *v0;
  void *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  _QWORD *v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25429CDD0);
  MEMORY[0x24BDAC7A8]();
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25429CF60 != -1)
    swift_once();
  v4 = sub_235EE5CF8();
  __swift_project_value_buffer(v4, (uint64_t)qword_25429CF70);
  sub_235E9105C(0xD00000000000006CLL, 0x8000000235EEC520, 0xD000000000000011, 0x8000000235EEC5B0);
  v5 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v5, sel_isAppleWatch);

    v7 = sub_235EE5D40();
    v9 = v8;
    v10 = *(void **)&v0[OBJC_IVAR____ASActivitySharingFriendQuery_fitnessAppsStateObserver];
    v11 = (void *)sub_235EE5D34();
    v12 = objc_msgSend(v10, sel_installStateForBundleIdentifier_, v11);

    if (v12 == (id)1)
    {
      swift_bridgeObjectRelease();
      v13 = sub_235EE5E90();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v3, 1, 1, v13);
      v14 = (_QWORD *)swift_allocObject();
      v14[2] = 0;
      v14[3] = 0;
      v14[4] = v1;
      v15 = v1;
      sub_235ED3350((uint64_t)v3, (uint64_t)&unk_25638D3A0, (uint64_t)v14);
      swift_release();
    }
    else
    {
      swift_bridgeObjectRetain();
      v16 = sub_235EE5CE0();
      v17 = sub_235EE5ED8();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = (uint8_t *)swift_slowAlloc();
        v19 = swift_slowAlloc();
        v21 = v19;
        *(_DWORD *)v18 = 136315138;
        swift_bridgeObjectRetain();
        v20 = sub_235E911D4(v7, v9, &v21);
        sub_235EE5F2C();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_235E8C000, v16, v17, "App with bundle id %s not installed, not updating friend list", v18, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B7E529C](v19, -1, -1);
        MEMORY[0x23B7E529C](v18, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_235E8FE54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(_QWORD, unint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;

  v1 = sub_235E90070();
  *(_QWORD *)(v0 + 200) = v1;
  *(_QWORD *)(v0 + 208) = 0;
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 144);
    *(_QWORD *)(v0 + 56) = v0 + 120;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_235E8E3F8;
    v4 = swift_continuation_init();
    *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
    v5 = (_QWORD *)(v0 + 80);
    v5[1] = 0x40000000;
    v5[2] = sub_235E8E3F4;
    v5[3] = &block_descriptor_11;
    v5[4] = v4;
    objc_msgSend((id)swift_unknownObjectRetain(), sel_transportRequest_completionHandler_, v3, v5);
    return swift_continuation_await();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 152);
    v6 = *(_QWORD *)(v0 + 160);
    v8 = *(void (**)(_QWORD, unint64_t, uint64_t, uint64_t))(v6 + 16);
    sub_235E9083C(0, 0xF000000000000000);
    v8(0, 0xF000000000000000, v7, v6);
    v9 = *(_QWORD *)(v0 + 192);
    v10 = *(_QWORD *)(v0 + 152);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    {
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(v9, *(_QWORD *)(v0 + 176));
      sub_235E9A644();
      swift_allocError();
      *v12 = 1;
      swift_willThrow();
      sub_235E90940(0, 0xF000000000000000);
      swift_unknownObjectRelease();
    }
    else
    {
      v13 = *(_QWORD *)(v0 + 136);
      swift_unknownObjectRelease();
      sub_235E90940(0, 0xF000000000000000);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v13, v9, v10);
    }
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_235E90070()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v10;
  _QWORD aBlock[6];

  if (*(_BYTE *)(v0 + 128) == 1)
  {
    v1 = *(_QWORD *)(v0 + 120);
    if (!v1)
    {
      v2 = *(void **)(v0 + 112);
      aBlock[4] = sub_235ED1F9C;
      aBlock[5] = v0;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_235ED05A8;
      aBlock[3] = &block_descriptor_32;
      v3 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      v4 = objc_msgSend(v2, sel_remoteObjectProxyWithErrorHandler_, v3);
      _Block_release(v3);
      sub_235EE5F68();
      swift_unknownObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25429CCC0);
      v5 = swift_dynamicCast();
      v6 = v10;
      if (!v5)
        v6 = 0;
      *(_QWORD *)(v0 + 120) = v6;
      swift_unknownObjectRelease();
      v1 = *(_QWORD *)(v0 + 120);
      swift_unknownObjectRetain();
    }
    swift_unknownObjectRetain();
  }
  else
  {
    sub_235E9A644();
    v7 = swift_allocError();
    *v8 = 0;
    v1 = v7;
    swift_willThrow();
  }
  return v1;
}

void ActivitySharingClient.init(activitySharingDaemonEnabled:)(char a1)
{
  void *v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  char *v15;
  uint64_t v16;
  objc_class *v17;
  char *v18;
  id v19;
  char *v20;
  id v21;
  char *v22;
  id v23;
  id v24;
  char *v25;
  id v26;
  id v27;
  char *v28;
  objc_super v29;
  _OWORD v30[3];
  __int128 v31;
  objc_class *v32;
  _UNKNOWN **v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;

  swift_getObjectType();
  v3 = qword_25429CF60;
  v4 = v1;
  if (v3 != -1)
    swift_once();
  v5 = sub_235EE5CF8();
  __swift_project_value_buffer(v5, (uint64_t)qword_25429CF70);
  v6 = sub_235EE5CE0();
  v7 = sub_235EE5ED8();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    *(_QWORD *)&v34 = v9;
    *(_DWORD *)v8 = 136315650;
    v10 = sub_235EE61A8();
    sub_235E911D4(v10, v11, (uint64_t *)&v34);
    sub_235EE5F2C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2080;
    DWORD1(v30[0]) = (unint64_t)sub_235E911D4(0xD000000000000023, 0x8000000235EEB910, (uint64_t *)&v34) >> 32;
    sub_235EE5F2C();
    *(_WORD *)(v8 + 22) = 1024;
    LODWORD(v30[0]) = a1 & 1;
    sub_235EE5F2C();
    _os_log_impl(&dword_235E8C000, v6, v7, "%s::%s - activitySharingDaemonEnabled: %{BOOL}d", (uint8_t *)v8, 0x1Cu);
    swift_arrayDestroy();
    MEMORY[0x23B7E529C](v9, -1, -1);
    MEMORY[0x23B7E529C](v8, -1, -1);
  }

  if ((a1 & 1) != 0)
  {
    v12 = type metadata accessor for XPCClient();
    swift_allocObject();
    v13 = XPCClient.init()();
    v14 = (uint64_t *)&v4[OBJC_IVAR____ASActivitySharingClient_transportClient];
    v14[3] = v12;
    v14[4] = (uint64_t)&protocol witness table for XPCClient;
    *v14 = v13;
    v15 = &v4[OBJC_IVAR____ASActivitySharingClient_asListener];
    *((_OWORD *)v15 + 1) = 0u;
    *((_OWORD *)v15 + 2) = 0u;
    *(_OWORD *)v15 = 0u;
    swift_allocObject();
    v16 = XPCClient.init()();
    *((_QWORD *)&v35 + 1) = v12;
    *(_QWORD *)&v36 = &protocol witness table for XPCClient;
    *(_QWORD *)&v34 = v16;
    sub_235EB15DC((uint64_t)&v34, (uint64_t)&v4[OBJC_IVAR____ASActivitySharingClient_secureCloudClient], (uint64_t *)&unk_25429C908);
LABEL_9:

    v29.receiver = v4;
    v29.super_class = (Class)type metadata accessor for ActivitySharingClient();
    objc_msgSendSuper2(&v29, sel_init);
    return;
  }
  v17 = (objc_class *)type metadata accessor for LocalTransport();
  v18 = (char *)objc_msgSend(objc_allocWithZone(v17), sel_init);
  v19 = objc_msgSend(objc_allocWithZone(v17), sel_init);
  v20 = &v18[OBJC_IVAR____TtC21ActivitySharingClient14LocalTransport_proxy];
  swift_beginAccess();
  *(_QWORD *)v20 = v19;
  v21 = v19;
  swift_unknownObjectRelease();
  v22 = &v4[OBJC_IVAR____ASActivitySharingClient_transportClient];
  *((_QWORD *)v22 + 3) = v17;
  *((_QWORD *)v22 + 4) = &protocol witness table for LocalTransport;
  *(_QWORD *)v22 = v18;
  v32 = v17;
  v33 = &protocol witness table for LocalTransport;
  *(_QWORD *)&v31 = v21;
  v23 = objc_allocWithZone(MEMORY[0x24BDD3C40]);
  v24 = v21;
  v25 = v18;
  v26 = objc_msgSend(v23, sel_init);
  v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE01EF0]), sel_initWithHealthStore_, v26);

  if (v27)
  {
    *(_QWORD *)&v30[0] = v27;
    sub_235EB8C3C(&v31, (uint64_t)v30 + 8);
    v34 = v30[0];
    v35 = v30[1];
    v36 = v30[2];

    sub_235EB15DC((uint64_t)&v34, (uint64_t)&v4[OBJC_IVAR____ASActivitySharingClient_asListener], &qword_25429CCD8);
    v28 = &v4[OBJC_IVAR____ASActivitySharingClient_secureCloudClient];
    *(_OWORD *)v28 = 0u;
    *((_OWORD *)v28 + 1) = 0u;
    *((_QWORD *)v28 + 4) = 0;
    goto LABEL_9;
  }
  __break(1u);
}

unint64_t sub_235E905D8(uint64_t a1)
{
  uint64_t v2;

  sub_235EE6154();
  sub_235EE6160();
  v2 = sub_235EE616C();
  return sub_235E90630(a1, v2);
}

unint64_t sub_235E90630(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

uint64_t sub_235E906CC()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t (*v11)(void);
  uint64_t v12;

  v2 = v0[15];
  v1 = v0[16];
  swift_unknownObjectRelease();
  v3 = v0[26];
  v5 = v0[19];
  v4 = v0[20];
  v6 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v4 + 16);
  sub_235E9083C(v2, v1);
  v6(v2, v1, v5, v4);
  if (v3)
  {
    swift_unknownObjectRelease();
    sub_235E90940(v2, v1);
  }
  else
  {
    v7 = v0[24];
    v8 = v0[19];
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
    {
      v12 = v0[17];
      swift_unknownObjectRelease();
      sub_235E90940(v2, v1);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v12, v7, v8);
      swift_task_dealloc();
      v11 = (uint64_t (*)(void))v0[1];
      return v11();
    }
    (*(void (**)(uint64_t, _QWORD))(v0[23] + 8))(v7, v0[22]);
    sub_235E9A644();
    swift_allocError();
    *v10 = 1;
    swift_willThrow();
    sub_235E90940(v2, v1);
    swift_unknownObjectRelease();
  }
  swift_task_dealloc();
  v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_235E9083C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_235E90998(a1, a2);
  return a1;
}

uint64_t sub_235E90850(uint64_t a1, unint64_t a2)
{
  void *v2;
  uint64_t *v3;
  void *v4;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void (**v13)(_QWORD, _QWORD, _QWORD);

  v4 = v2;
  v7 = *v3;
  v8 = *(void **)(*v3 + 16);
  v9 = *v3;
  swift_task_dealloc();

  if (v4)
  {
    v10 = sub_235EE5A94();

    v11 = 0;
    v12 = (void *)v10;
  }
  else if (a2 >> 60 == 15)
  {
    v10 = 0;
    v11 = 0;
    v12 = 0;
  }
  else
  {
    v11 = sub_235EE5AAC();
    sub_235E90940(a1, a2);
    v10 = 0;
    v12 = (void *)v11;
  }
  v13 = *(void (***)(_QWORD, _QWORD, _QWORD))(v7 + 24);
  v13[2](v13, v11, v10);

  _Block_release(v13);
  return (*(uint64_t (**)(void))(v9 + 8))();
}

uint64_t sub_235E90940(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_235E90954(a1, a2);
  return a1;
}

uint64_t sub_235E90954(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_235E90998(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x23B7E5218]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

id sub_235E90C6C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t aBlock;
  uint64_t v27;
  uint64_t (*v28)(uint64_t);
  void *v29;
  void (*v30)();
  uint64_t v31;

  v2 = v1;
  if (qword_25429CF60 != -1)
    swift_once();
  v4 = sub_235EE5CF8();
  __swift_project_value_buffer(v4, (uint64_t)qword_25429CF70);
  v5 = a1;
  v6 = sub_235EE5CE0();
  v7 = sub_235EE5ED8();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    aBlock = v10;
    *(_DWORD *)v8 = 136315394;
    v11 = sub_235E91498(0xD000000000000063, 0x8000000235EEBD20, 0xD000000000000014, 0x8000000235EEBE90);
    sub_235E911D4(v11, v12, &aBlock);
    sub_235EE5F2C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2112;
    v13 = v5;
    sub_235EE5F2C();
    *v9 = v5;

    _os_log_impl(&dword_235E8C000, v6, v7, "%s Accepting new connection: %@", (uint8_t *)v8, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25429C8D0);
    swift_arrayDestroy();
    MEMORY[0x23B7E529C](v9, -1, -1);
    swift_arrayDestroy();
    v14 = v10;
    v2 = v1;
    MEMORY[0x23B7E529C](v14, -1, -1);
    MEMORY[0x23B7E529C](v8, -1, -1);

  }
  else
  {

  }
  v15 = (void *)objc_opt_self();
  v16 = objc_msgSend(v15, sel_interfaceWithProtocol_, &unk_2563958D8);
  objc_msgSend(v5, sel_setRemoteObjectInterface_, v16);

  v17 = objc_msgSend(v15, sel_interfaceWithProtocol_, &unk_2563958D8);
  objc_msgSend(v5, sel_setExportedInterface_, v17);

  objc_msgSend(v5, sel_setExportedObject_, v2);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v5;
  v30 = sub_235EC5470;
  v31 = v18;
  v19 = MEMORY[0x24BDAC760];
  aBlock = MEMORY[0x24BDAC760];
  v27 = 1107296256;
  v28 = sub_235ED021C;
  v29 = &block_descriptor_1;
  v20 = _Block_copy(&aBlock);
  v21 = v5;
  swift_release();
  objc_msgSend(v21, sel_setInterruptionHandler_, v20);
  _Block_release(v20);
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v21;
  v30 = sub_235EC5498;
  v31 = v22;
  aBlock = v19;
  v27 = 1107296256;
  v28 = sub_235ED021C;
  v29 = &block_descriptor_79;
  v23 = _Block_copy(&aBlock);
  v24 = v21;
  swift_release();
  objc_msgSend(v24, sel_setInvalidationHandler_, v23);
  _Block_release(v23);
  return objc_msgSend(v24, sel_resume);
}

void sub_235E9105C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  NSObject *oslog;
  uint64_t v11;

  v4 = sub_235E91498(a1, a2, a3, a4);
  v6 = v5;
  swift_bridgeObjectRetain();
  oslog = sub_235EE5CE0();
  v7 = sub_235EE5ED8();
  if (os_log_type_enabled(oslog, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v11 = v9;
    *(_DWORD *)v8 = 136446210;
    swift_bridgeObjectRetain();
    sub_235E911D4(v4, v6, &v11);
    sub_235EE5F2C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_235E8C000, oslog, v7, "%{public}s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B7E529C](v9, -1, -1);
    MEMORY[0x23B7E529C](v8, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n();

  }
}

uint64_t sub_235E911D4(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_235E912E0(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_235E912A4((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_235E912A4((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_235E912A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_235E912E0(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_235EE5F38();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_235EB0894(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_235EE5FD4();
  if (!v8)
  {
    sub_235EE6004();
    __break(1u);
LABEL_17:
    result = sub_235EE6040();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_235E91498(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _opaque_pthread_t *v25;

  sub_235E91808();
  v8 = sub_235EE5F44();
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    v10 = v8 + 16 * v9;
    a1 = *(_QWORD *)(v10 + 16);
    a2 = *(_QWORD *)(v10 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
  }
  sub_235E9171C(46, 0xE100000000000000, a1, a2);
  v11 = sub_235EE5DA0();
  v13 = v12;
  v15 = v14;
  v17 = v16;
  swift_bridgeObjectRelease();
  MEMORY[0x23B7E4930](v11, v13, v15, v17);
  swift_bridgeObjectRelease();
  sub_235E9171C(40, 0xE100000000000000, a3, a4);
  swift_bridgeObjectRetain();
  v18 = sub_235EE5DA0();
  v20 = v19;
  v22 = v21;
  v24 = v23;
  swift_bridgeObjectRelease();
  MEMORY[0x23B7E4930](v18, v20, v22, v24);
  swift_bridgeObjectRelease();
  v25 = pthread_self();
  pthread_mach_thread_np(v25);
  sub_235EE60C4();
  sub_235EE5D7C();
  swift_bridgeObjectRelease();
  sub_235EE5D7C();
  sub_235EE5D7C();
  swift_bridgeObjectRelease();
  sub_235EE5D7C();
  sub_235EE5D7C();
  swift_bridgeObjectRelease();
  return 91;
}

unint64_t sub_235E9171C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char v10;

  v4 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v4 = a3 & 0xFFFFFFFFFFFFLL;
  if (!v4)
    return 0;
  v7 = 4 * v4;
  v8 = 15;
  while (sub_235EE5D94() != a1 || v9 != a2)
  {
    v10 = sub_235EE60D0();
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0)
      return v8;
    v8 = sub_235EE5D70();
    if (v7 == v8 >> 14)
      return 0;
  }
  swift_bridgeObjectRelease();
  return v8;
}

unint64_t sub_235E91808()
{
  unint64_t result;

  result = qword_25429CF68;
  if (!qword_25429CF68)
  {
    result = MEMORY[0x23B7E5230](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_25429CF68);
  }
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_235E91888(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_25429C948);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_235E918D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25429CDE8;
  if (!qword_25429CDE8)
  {
    v1 = sub_235E8EC68(255, (unint64_t *)&qword_25429CCD0);
    result = MEMORY[0x23B7E5230](MEMORY[0x24BEE5BD8], v1);
    atomic_store(result, (unint64_t *)&qword_25429CDE8);
  }
  return result;
}

unint64_t sub_235E91928()
{
  unint64_t result;

  result = qword_25429CCD0;
  if (!qword_25429CCD0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25429CCD0);
  }
  return result;
}

void sub_235E91964(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_235E8E4A0(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_235E9196C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25429CDD0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_235E919AC()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_235E8E458;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_25638C4D0 + dword_25638C4D0))(v2, v3);
}

uint64_t sub_235E91A14()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t, _QWORD, _UNKNOWN **, uint64_t, uint64_t);

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____ASActivitySharingClient_transportClient);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v6 = (uint64_t (*)(uint64_t, uint64_t, _QWORD, _UNKNOWN **, uint64_t, uint64_t))(**(int **)(v3 + 48)
                                                                                       + *(_QWORD *)(v3 + 48));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v4;
  *v4 = v0;
  v4[1] = sub_235E91AC0;
  return v6(v0 + 48, 404, MEMORY[0x24BEE1328], &protocol witness table for Bool, v2, v3);
}

uint64_t sub_235E91AC0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_235E91B24()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_235E8E458;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_25638C2D0 + dword_25638C2D0))(v2, v3);
}

uint64_t sub_235E91B88()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t, _QWORD, _UNKNOWN **, uint64_t, uint64_t);

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 24) + OBJC_IVAR____ASActivitySharingClient_transportClient);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v6 = (uint64_t (*)(uint64_t, uint64_t, _QWORD, _UNKNOWN **, uint64_t, uint64_t))(**(int **)(v3 + 48)
                                                                                       + *(_QWORD *)(v3 + 48));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v4;
  *v4 = v0;
  v4[1] = sub_235E91C34;
  return v6(v0 + 16, 801, MEMORY[0x24BEE1768], &protocol witness table for Int, v2, v3);
}

uint64_t sub_235E91C34()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_235E91C98()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_235E8E458;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_25638C1D0 + dword_25638C1D0))(v2, v3);
}

uint64_t sub_235E91CFC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t);

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 24) + OBJC_IVAR____ASActivitySharingClient_transportClient);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(**(int **)(v3 + 40)
                                                                                        + *(_QWORD *)(v3 + 40));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v4;
  v5 = sub_235E8EC68(0, &qword_25429CDE0);
  *v4 = v0;
  v4[1] = sub_235E91DC0;
  return v7(v0 + 16, 601, v5, &protocol witness table for ASCodableFriendList, v2, v3);
}

uint64_t sub_235E91DC0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_235E91E24()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch();
}

uint64_t type metadata accessor for XPCClient()
{
  return objc_opt_self();
}

uint64_t sub_235E91E5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v10;
  _QWORD *v11;

  v10 = *v4;
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_235E8E458;
  v11[20] = a4;
  v11[21] = v10;
  v11[18] = a2;
  v11[19] = a3;
  v11[17] = a1;
  return swift_task_switch();
}

uint64_t sub_235E91EE4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *v0;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_235E8E458;
  v3[8] = v2;
  return swift_task_switch();
}

uint64_t sub_235E91F44()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 192) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t getEnumTagSinglePayload for ASListener(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for ASListener()
{
  return &type metadata for ASListener;
}

uint64_t type metadata accessor for ActivitySharingFriendQuery()
{
  return objc_opt_self();
}

uint64_t SecureCloudPingRequestProtobuf.identifier.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SecureCloudPingRequestProtobuf() + 20));
  if (v1[1])
    v2 = *v1;
  else
    v2 = 0;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t type metadata accessor for SecureCloudPingRequestProtobuf()
{
  uint64_t result;

  result = qword_25638B5B8;
  if (!qword_25638B5B8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_235E921B4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SecureCloudPingRequestProtobuf() + 20));
  v4 = v3[1];
  if (v4)
  {
    v5 = *v3;
    v6 = v4;
  }
  else
  {
    v5 = 0;
    v6 = 0xE000000000000000;
  }
  *a2 = v5;
  a2[1] = v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_235E92204(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(a2 + *(int *)(type metadata accessor for SecureCloudPingRequestProtobuf() + 20));
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *v4 = v3;
  v4[1] = v2;
  return result;
}

uint64_t SecureCloudPingRequestProtobuf.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for SecureCloudPingRequestProtobuf() + 20));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SecureCloudPingRequestProtobuf.identifier.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudPingRequestProtobuf() + 20);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v1 + v3);
  v5 = v4[1];
  if (v5)
  {
    v6 = *v4;
    v7 = v5;
  }
  else
  {
    v6 = 0;
    v7 = 0xE000000000000000;
  }
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_235E92300;
}

uint64_t sub_235E92300(uint64_t *a1, char a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;

  v2 = a1[1];
  v3 = (_QWORD *)(a1[2] + *((int *)a1 + 6));
  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *v3 = v4;
    v3[1] = v2;
    return swift_bridgeObjectRelease();
  }
  else
  {
    result = swift_bridgeObjectRelease();
    *v3 = v4;
    v3[1] = v2;
  }
  return result;
}

BOOL SecureCloudPingRequestProtobuf.hasIdentifier.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudPingRequestProtobuf() + 20) + 8) != 0;
}

Swift::Void __swiftcall SecureCloudPingRequestProtobuf.clearIdentifier()()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudPingRequestProtobuf() + 20));
  swift_bridgeObjectRelease();
  *v1 = 0;
  v1[1] = 0;
}

uint64_t SecureCloudPingRequestProtobuf.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_235EE5B90();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t SecureCloudPingRequestProtobuf.unknownFields.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_235EE5B90();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*SecureCloudPingRequestProtobuf.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t SecureCloudPingRequestProtobuf.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  _QWORD *v3;

  sub_235EE5B84();
  result = type metadata accessor for SecureCloudPingRequestProtobuf();
  v3 = (_QWORD *)(a1 + *(int *)(result + 20));
  *v3 = 0;
  v3[1] = 0;
  return result;
}

unint64_t static SecureCloudPingRequestProtobuf.protoMessageName.getter()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_235E924A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = sub_235EE5CD4();
  __swift_allocate_value_buffer(v0, qword_25638B4A8);
  __swift_project_value_buffer(v0, (uint64_t)qword_25638B4A8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25638B600);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638B608);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_235EE6BA0;
  v5 = v4 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v4 + v3) = 1;
  *(_QWORD *)v5 = "identifier";
  *(_QWORD *)(v5 + 8) = 10;
  *(_BYTE *)(v5 + 16) = 2;
  v6 = *MEMORY[0x24BE5C318];
  v7 = sub_235EE5CBC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v5, v6, v7);
  return sub_235EE5CC8();
}

uint64_t static SecureCloudPingRequestProtobuf._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_25638B4A0 != -1)
    swift_once();
  v2 = sub_235EE5CD4();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_25638B4A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t SecureCloudPingRequestProtobuf.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  while (1)
  {
    result = sub_235EE5BD8();
    if (v0 || (v2 & 1) != 0)
      break;
    if (result == 1)
    {
      type metadata accessor for SecureCloudPingRequestProtobuf();
      sub_235EE5C08();
    }
    v0 = 0;
  }
  return result;
}

uint64_t SecureCloudPingRequestProtobuf.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (!*(_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudPingRequestProtobuf() + 20) + 8))
    return sub_235EE5B78();
  result = sub_235EE5C98();
  if (!v1)
    return sub_235EE5B78();
  return result;
}

uint64_t SecureCloudPingRequestProtobuf.hashValue.getter()
{
  sub_235EE6154();
  type metadata accessor for SecureCloudPingRequestProtobuf();
  sub_235E930EC(&qword_25638B540, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudPingRequestProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudPingRequestProtobuf);
  sub_235EE5D1C();
  return sub_235EE616C();
}

uint64_t sub_235E927AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  _QWORD *v5;

  result = sub_235EE5B84();
  v5 = (_QWORD *)(a2 + *(int *)(a1 + 20));
  *v5 = 0;
  v5[1] = 0;
  return result;
}

unint64_t sub_235E927DC()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_235E927FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_235EE5B90();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t sub_235E92834(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_235EE5B90();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*sub_235E9286C())()
{
  return nullsub_1;
}

uint64_t sub_235E9287C()
{
  return SecureCloudPingRequestProtobuf.decodeMessage<A>(decoder:)();
}

uint64_t sub_235E92890()
{
  return SecureCloudPingRequestProtobuf.traverse<A>(visitor:)();
}

uint64_t sub_235E928A8()
{
  sub_235E930EC(&qword_25638B5F0, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudPingRequestProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudPingRequestProtobuf);
  return sub_235EE5BC0();
}

uint64_t sub_235E928FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_25638B4A0 != -1)
    swift_once();
  v2 = sub_235EE5CD4();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_25638B4A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_235E9296C()
{
  sub_235E930EC(&qword_25638B550, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudPingRequestProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudPingRequestProtobuf);
  return sub_235EE5C50();
}

uint64_t sub_235E929AC()
{
  sub_235EE6154();
  sub_235EE5D1C();
  return sub_235EE616C();
}

uint64_t sub_235E92A00()
{
  sub_235E930EC(&qword_25638B550, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudPingRequestProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudPingRequestProtobuf);
  return sub_235EE5C5C();
}

uint64_t sub_235E92A50()
{
  sub_235EE6154();
  sub_235EE5D1C();
  return sub_235EE616C();
}

void sub_235E92AA4(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

void sub_235E92AAC(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

_QWORD *sub_235E92AB8@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t _s21ActivitySharingClient30SecureCloudPingRequestProtobufV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  char v17;
  void (*v18)(char *, uint64_t, uint64_t);
  void (*v19)(char *, uint64_t);
  uint64_t v21;

  v4 = sub_235EE5B90();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v21 - v9;
  v11 = *(int *)(type metadata accessor for SecureCloudPingRequestProtobuf() + 20);
  v12 = (_QWORD *)(a1 + v11);
  v13 = *(_QWORD *)(a1 + v11 + 8);
  v14 = (_QWORD *)(a2 + v11);
  v15 = v14[1];
  if (!v13)
  {
    if (!v15)
    {
LABEL_11:
      v18 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v18(v10, a1, v4);
      v18(v8, a2, v4);
      sub_235E930EC(&qword_25638B5F8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v17 = sub_235EE5D28();
      v19 = *(void (**)(char *, uint64_t))(v5 + 8);
      v19(v8, v4);
      v19(v10, v4);
      return v17 & 1;
    }
LABEL_10:
    v17 = 0;
    return v17 & 1;
  }
  if (!v15)
    goto LABEL_10;
  if (*v12 == *v14 && v13 == v15)
    goto LABEL_11;
  v17 = 0;
  if ((sub_235EE60D0() & 1) != 0)
    goto LABEL_11;
  return v17 & 1;
}

uint64_t sub_235E92C24()
{
  return sub_235E930EC(&qword_25638B548, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudPingRequestProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudPingRequestProtobuf);
}

uint64_t sub_235E92C50()
{
  return sub_235E930EC(&qword_25638B550, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudPingRequestProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudPingRequestProtobuf);
}

uint64_t sub_235E92C7C()
{
  return sub_235E930EC(&qword_25638B540, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudPingRequestProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudPingRequestProtobuf);
}

uint64_t sub_235E92CA8()
{
  return sub_235E930EC(&qword_25638B558, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudPingRequestProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudPingRequestProtobuf);
}

uint64_t *initializeBufferWithCopyOfBuffer for SecureCloudPingRequestProtobuf(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_235EE5B90();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SecureCloudPingRequestProtobuf(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_235EE5B90();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SecureCloudPingRequestProtobuf(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_235EE5B90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SecureCloudPingRequestProtobuf(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_235EE5B90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for SecureCloudPingRequestProtobuf(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_235EE5B90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for SecureCloudPingRequestProtobuf(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_235EE5B90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SecureCloudPingRequestProtobuf()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_235E92F68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_235EE5B90();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for SecureCloudPingRequestProtobuf()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_235E93000(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_235EE5B90();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  return result;
}

uint64_t sub_235E9307C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_235EE5B90();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_235E930EC(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x23B7E5230](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t TransportSerializable<>.activitySharingTransportData()()
{
  uint64_t v0;

  sub_235EE5A64();
  swift_allocObject();
  sub_235EE5A58();
  v0 = sub_235EE5A4C();
  swift_release();
  return v0;
}

double sub_235E931BC@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  double result;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  if (a2 >> 60 == 15)
  {
    result = 0.0;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)(a3 + 48) = 0u;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  else
  {
    sub_235EE5A40();
    swift_allocObject();
    sub_235EE5A34();
    sub_235E94D20();
    sub_235EE5A28();
    swift_release();
    sub_235E90940(a1, a2);
    if (!v3)
    {
      *(_OWORD *)a3 = v8;
      *(_QWORD *)(a3 + 16) = v9;
      result = *(double *)&v10;
      *(_OWORD *)(a3 + 24) = v10;
      *(_BYTE *)(a3 + 40) = v11;
      *(_QWORD *)(a3 + 48) = v12;
      *(_QWORD *)(a3 + 56) = v13;
    }
  }
  return result;
}

double sub_235E932B0@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  double result;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;

  if (a2 >> 60 == 15)
  {
    *(_QWORD *)(a3 + 48) = 0;
    result = 0.0;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)a3 = 0u;
  }
  else
  {
    sub_235EE5A40();
    swift_allocObject();
    sub_235EE5A34();
    sub_235E94968();
    sub_235EE5A28();
    swift_release();
    sub_235E90940(a1, a2);
    if (!v3)
    {
      *(_OWORD *)a3 = v8;
      *(_OWORD *)(a3 + 16) = v9;
      *(_QWORD *)(a3 + 32) = v10;
      result = *(double *)&v11;
      *(_OWORD *)(a3 + 40) = v11;
    }
  }
  return result;
}

uint64_t sub_235E9339C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t result;

  v3 = a2 >> 60;
  if (a2 >> 60 == 15)
    return v3 > 0xE;
  sub_235EE5A40();
  swift_allocObject();
  sub_235EE5A34();
  sub_235E94DA8();
  sub_235EE5A28();
  swift_release();
  result = sub_235E90940(a1, a2);
  if (!v2)
    return v3 > 0xE;
  return result;
}

uint64_t sub_235E93448@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, void (*a3)(void)@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  if (a2 >> 60 == 15)
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
  }
  else
  {
    v8 = result;
    sub_235EE5A40();
    swift_allocObject();
    sub_235EE5A34();
    a3();
    sub_235EE5A28();
    swift_release();
    result = sub_235E90940(v8, a2);
    if (!v4)
    {
      *(_BYTE *)a4 = v9;
      a4[1] = v10;
      a4[2] = v11;
    }
  }
  return result;
}

double sub_235E9352C@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  double result;
  __int128 v8;
  __int128 v9;
  uint64_t v10;

  if (a2 >> 60 == 15)
  {
    *(_QWORD *)(a3 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  else
  {
    sub_235EE5A40();
    swift_allocObject();
    sub_235EE5A34();
    sub_235E94C10();
    sub_235EE5A28();
    swift_release();
    sub_235E90940(a1, a2);
    if (!v3)
    {
      result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(_OWORD *)(a3 + 16) = v9;
      *(_QWORD *)(a3 + 32) = v10;
    }
  }
  return result;
}

double sub_235E93608@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  double result;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;

  if (a2 >> 60 == 15)
  {
    result = 0.0;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)a3 = 0u;
  }
  else
  {
    sub_235EE5A40();
    swift_allocObject();
    sub_235EE5A34();
    sub_235E94B88();
    sub_235EE5A28();
    swift_release();
    sub_235E90940(a1, a2);
    if (!v3)
    {
      result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(_OWORD *)(a3 + 16) = v9;
      *(_QWORD *)(a3 + 32) = v10;
      *(_QWORD *)(a3 + 40) = v11;
    }
  }
  return result;
}

uint64_t sub_235E936E4@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v3;
  char v5;
  uint64_t v7;
  char v8;

  if (a2 >> 60 == 15)
  {
    v5 = 3;
  }
  else
  {
    v7 = result;
    sub_235EE5A40();
    swift_allocObject();
    sub_235EE5A34();
    sub_235E94A78();
    sub_235EE5A28();
    swift_release();
    result = sub_235E90940(v7, a2);
    if (v3)
      return result;
    v5 = v8;
  }
  *a3 = v5;
  return result;
}

uint64_t sub_235E937A0@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  if (a2 >> 60 == 15)
  {
    *(_QWORD *)a3 = 0;
    *(_BYTE *)(a3 + 8) = 1;
  }
  else
  {
    v6 = result;
    sub_235EE5A40();
    swift_allocObject();
    sub_235EE5A34();
    sub_235E948E0();
    sub_235EE5A28();
    swift_release();
    result = sub_235E90940(v6, a2);
    if (!v3)
    {
      *(_QWORD *)a3 = v7;
      *(_BYTE *)(a3 + 8) = 0;
    }
  }
  return result;
}

uint64_t sub_235E93868@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  __int128 v7;

  v5 = result;
  if (a2 >> 60 == 15)
  {
    *a3 = result;
    a3[1] = a2;
  }
  else
  {
    sub_235EE5A40();
    swift_allocObject();
    sub_235EE5A34();
    sub_235E949F0();
    sub_235EE5A28();
    swift_release();
    result = sub_235E90940(v5, a2);
    if (!v3)
      *(_OWORD *)a3 = v7;
  }
  return result;
}

uint64_t TransportSerializable<>.init(activitySharingTransportData:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v14;

  v9 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v12 >> 60 == 15)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a4, 1, 1, a3);
  sub_235EE5A40();
  swift_allocObject();
  sub_235EE5A34();
  sub_235EE5A28();
  swift_release();
  result = sub_235E90940(a1, a2);
  if (!v4)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a4, v11, a3);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(a4, 0, 1, a3);
  }
  return result;
}

void *TransportSerializable<>.activitySharingTransportData()()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  id v5[2];

  v5[1] = *(id *)MEMORY[0x24BDAC8D0];
  v5[0] = 0;
  v1 = objc_msgSend((id)objc_opt_self(), sel_archivedDataWithRootObject_requiringSecureCoding_error_, v0, 1, v5);
  v2 = v5[0];
  if (v1)
  {
    v3 = (void *)sub_235EE5AB8();

  }
  else
  {
    v3 = v2;
    sub_235EE5AA0();

    swift_willThrow();
  }
  return v3;
}

uint64_t TransportSerializable<>.init(activitySharingTransportData:)(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  if (a2 >> 60 == 15)
    return 0;
  sub_235E8E918();
  v2 = sub_235EE5EE4();
  sub_235E90940(a1, a2);
  return v2;
}

uint64_t dispatch thunk of TransportSerializable.activitySharingTransportData()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of TransportSerializable.init(activitySharingTransportData:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_235E93BE0()
{
  uint64_t v0;

  sub_235EE5A64();
  swift_allocObject();
  sub_235EE5A58();
  sub_235E94D64();
  v0 = sub_235EE5A4C();
  swift_release();
  return v0;
}

double sub_235E93C90@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_235E931BC(a1, a2, a3);
}

uint64_t sub_235E93CA4(uint64_t a1, uint64_t a2)
{
  return sub_235E940E4(a1, a2, (void (*)(void))sub_235E94CDC);
}

uint64_t sub_235E93CC0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_235E93448(a1, a2, (void (*)(void))sub_235E94C98, a3);
}

uint64_t sub_235E93CE4()
{
  return sub_235E9449C();
}

uint64_t sub_235E93D00@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_235E94548(a1, a2, a3);
}

uint64_t sub_235E93D1C()
{
  uint64_t v0;

  sub_235EE5A64();
  swift_allocObject();
  sub_235EE5A58();
  sub_235E94C54();
  v0 = sub_235EE5A4C();
  swift_release();
  return v0;
}

double sub_235E93DB4@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_235E9352C(a1, a2, a3);
}

void *sub_235E93DC8()
{
  return TransportSerializable<>.activitySharingTransportData()();
}

uint64_t sub_235E93DE8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = TransportSerializable<>.init(activitySharingTransportData:)(a1, a2);
  if (!v3)
    *a3 = result;
  return result;
}

uint64_t sub_235E93E10()
{
  uint64_t v0;

  sub_235EE5A64();
  swift_allocObject();
  sub_235EE5A58();
  sub_235E94BCC();
  v0 = sub_235EE5A4C();
  swift_release();
  return v0;
}

double sub_235E93EA8@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_235E93608(a1, a2, a3);
}

uint64_t sub_235E93EBC()
{
  uint64_t v0;

  sub_235EE5A64();
  swift_allocObject();
  sub_235EE5A58();
  sub_235E94DEC();
  v0 = sub_235EE5A4C();
  swift_release();
  return v0;
}

uint64_t sub_235E93F38@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = sub_235E9339C(a1, a2);
  if (!v3)
    *a3 = result & 1;
  return result;
}

uint64_t sub_235E93F64()
{
  uint64_t v0;

  sub_235EE5A64();
  swift_allocObject();
  sub_235EE5A58();
  v0 = sub_235EE5A4C();
  swift_release();
  return v0;
}

uint64_t sub_235E93FF4@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (a2 >> 60 == 15)
  {
    v5 = 0;
    v6 = 0;
  }
  else
  {
    v8 = result;
    sub_235EE5A40();
    swift_allocObject();
    sub_235EE5A34();
    sub_235EE5A28();
    swift_release();
    result = sub_235E90940(v8, a2);
    if (v3)
      return result;
    v5 = v9;
    v6 = v10;
  }
  *a3 = v5;
  a3[1] = v6;
  return result;
}

uint64_t sub_235E940C8(uint64_t a1, uint64_t a2)
{
  return sub_235E940E4(a1, a2, (void (*)(void))sub_235E94B44);
}

uint64_t sub_235E940E4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4;

  sub_235EE5A64();
  swift_allocObject();
  sub_235EE5A58();
  a3();
  v4 = sub_235EE5A4C();
  swift_release();
  return v4;
}

uint64_t sub_235E94180@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_235E93448(a1, a2, (void (*)(void))sub_235E94B00, a3);
}

uint64_t sub_235E941A4()
{
  uint64_t v0;

  sub_235EE5A64();
  swift_allocObject();
  sub_235EE5A58();
  sub_235E94ABC();
  v0 = sub_235EE5A4C();
  swift_release();
  return v0;
}

uint64_t sub_235E94234@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char *a3@<X8>)
{
  return sub_235E936E4(a1, a2, a3);
}

uint64_t sub_235E94248()
{
  uint64_t v0;

  sub_235EE5A64();
  swift_allocObject();
  sub_235EE5A58();
  sub_235E94A34();
  v0 = sub_235EE5A4C();
  swift_release();
  return v0;
}

uint64_t sub_235E942D8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_235E93868(a1, a2, a3);
}

uint64_t sub_235E942EC()
{
  return sub_235E9449C();
}

uint64_t sub_235E94308@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_235E94548(a1, a2, a3);
}

uint64_t sub_235E94324()
{
  uint64_t v0;

  sub_235EE5A64();
  swift_allocObject();
  sub_235EE5A58();
  sub_235E949AC();
  v0 = sub_235EE5A4C();
  swift_release();
  return v0;
}

double sub_235E943C8@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_235E932B0(a1, a2, a3);
}

uint64_t sub_235E943DC()
{
  uint64_t v0;

  sub_235EE5A64();
  swift_allocObject();
  sub_235EE5A58();
  sub_235E94924();
  v0 = sub_235EE5A4C();
  swift_release();
  return v0;
}

uint64_t sub_235E9446C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_235E937A0(a1, a2, a3);
}

uint64_t sub_235E94480()
{
  return sub_235E9449C();
}

uint64_t sub_235E9449C()
{
  uint64_t v0;

  sub_235EE5A64();
  swift_allocObject();
  sub_235EE5A58();
  v0 = sub_235EE5A4C();
  swift_release();
  return v0;
}

uint64_t sub_235E9452C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_235E94548(a1, a2, a3);
}

uint64_t sub_235E94548@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  v5 = a2 >> 60;
  if (a2 >> 60 == 15)
  {
    v6 = 0;
  }
  else
  {
    v8 = result;
    sub_235EE5A40();
    swift_allocObject();
    sub_235EE5A34();
    sub_235EE5A28();
    swift_release();
    result = sub_235E90940(v8, a2);
    if (v3)
      return result;
    v6 = v9;
  }
  *(_QWORD *)a3 = v6;
  *(_BYTE *)(a3 + 8) = v5 > 0xE;
  return result;
}

uint64_t sub_235E94624()
{
  uint64_t v0;

  sub_235EE5A64();
  swift_allocObject();
  sub_235EE5A58();
  v0 = sub_235EE5A4C();
  swift_release();
  return v0;
}

uint64_t sub_235E946B4@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v3;
  char v5;
  uint64_t v7;
  char v8;

  if (a2 >> 60 == 15)
  {
    v5 = 2;
  }
  else
  {
    v7 = result;
    sub_235EE5A40();
    swift_allocObject();
    sub_235EE5A34();
    sub_235EE5A28();
    swift_release();
    result = sub_235E90940(v7, a2);
    if (v3)
      return result;
    v5 = v8;
  }
  *a3 = v5;
  return result;
}

uint64_t sub_235E9477C(uint64_t a1, uint64_t a2)
{
  return sub_235E947E8(a1, a2, (uint64_t)&protocol conformance descriptor for CodableObject<A>, (uint64_t)&protocol conformance descriptor for CodableObject<A>);
}

uint64_t sub_235E947A0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_235E94860(a1, a2, a3, (uint64_t)&protocol conformance descriptor for CodableObject<A>, (uint64_t)&protocol conformance descriptor for CodableObject<A>, a4);
}

uint64_t sub_235E947C4(uint64_t a1, uint64_t a2)
{
  return sub_235E947E8(a1, a2, (uint64_t)&protocol conformance descriptor for CodableObjectArray<A>, (uint64_t)&protocol conformance descriptor for CodableObjectArray<A>);
}

uint64_t sub_235E947E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  MEMORY[0x23B7E5230](a3, a1);
  MEMORY[0x23B7E5230](a4, a1);
  return TransportSerializable<>.activitySharingTransportData()();
}

uint64_t sub_235E9483C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_235E94860(a1, a2, a3, (uint64_t)&protocol conformance descriptor for CodableObjectArray<A>, (uint64_t)&protocol conformance descriptor for CodableObjectArray<A>, a4);
}

uint64_t sub_235E94860@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  MEMORY[0x23B7E5230](a4, a3);
  MEMORY[0x23B7E5230](a5, a3);
  return TransportSerializable<>.init(activitySharingTransportData:)(a1, a2, a3, a6);
}

unint64_t sub_235E948E0()
{
  unint64_t result;

  result = qword_25638B610;
  if (!qword_25638B610)
  {
    result = MEMORY[0x23B7E5230](&protocol conformance descriptor for InvitationDestinationEndpointCapabilities, &type metadata for InvitationDestinationEndpointCapabilities);
    atomic_store(result, (unint64_t *)&qword_25638B610);
  }
  return result;
}

unint64_t sub_235E94924()
{
  unint64_t result;

  result = qword_25638B618;
  if (!qword_25638B618)
  {
    result = MEMORY[0x23B7E5230](&protocol conformance descriptor for InvitationDestinationEndpointCapabilities, &type metadata for InvitationDestinationEndpointCapabilities);
    atomic_store(result, (unint64_t *)&qword_25638B618);
  }
  return result;
}

unint64_t sub_235E94968()
{
  unint64_t result;

  result = qword_25638B620;
  if (!qword_25638B620)
  {
    result = MEMORY[0x23B7E5230](&protocol conformance descriptor for InvitationRequestItem, &type metadata for InvitationRequestItem);
    atomic_store(result, (unint64_t *)&qword_25638B620);
  }
  return result;
}

unint64_t sub_235E949AC()
{
  unint64_t result;

  result = qword_25638B628;
  if (!qword_25638B628)
  {
    result = MEMORY[0x23B7E5230](&protocol conformance descriptor for InvitationRequestItem, &type metadata for InvitationRequestItem);
    atomic_store(result, (unint64_t *)&qword_25638B628);
  }
  return result;
}

unint64_t sub_235E949F0()
{
  unint64_t result;

  result = qword_25638D690;
  if (!qword_25638D690)
  {
    result = MEMORY[0x23B7E5230](MEMORY[0x24BDCDE38], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_25638D690);
  }
  return result;
}

unint64_t sub_235E94A34()
{
  unint64_t result;

  result = qword_25638B630;
  if (!qword_25638B630)
  {
    result = MEMORY[0x23B7E5230](MEMORY[0x24BDCDDF8], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_25638B630);
  }
  return result;
}

unint64_t sub_235E94A78()
{
  unint64_t result;

  result = qword_25638B638;
  if (!qword_25638B638)
  {
    result = MEMORY[0x23B7E5230](&protocol conformance descriptor for InvitationDestinationReachability, &type metadata for InvitationDestinationReachability);
    atomic_store(result, (unint64_t *)&qword_25638B638);
  }
  return result;
}

unint64_t sub_235E94ABC()
{
  unint64_t result;

  result = qword_25638B640;
  if (!qword_25638B640)
  {
    result = MEMORY[0x23B7E5230](&protocol conformance descriptor for InvitationDestinationReachability, &type metadata for InvitationDestinationReachability);
    atomic_store(result, (unint64_t *)&qword_25638B640);
  }
  return result;
}

unint64_t sub_235E94B00()
{
  unint64_t result;

  result = qword_25638B648;
  if (!qword_25638B648)
  {
    result = MEMORY[0x23B7E5230](&protocol conformance descriptor for SetMuteEnabledTransportItem, &type metadata for SetMuteEnabledTransportItem);
    atomic_store(result, (unint64_t *)&qword_25638B648);
  }
  return result;
}

unint64_t sub_235E94B44()
{
  unint64_t result;

  result = qword_25638B650;
  if (!qword_25638B650)
  {
    result = MEMORY[0x23B7E5230](&protocol conformance descriptor for SetMuteEnabledTransportItem, &type metadata for SetMuteEnabledTransportItem);
    atomic_store(result, (unint64_t *)&qword_25638B650);
  }
  return result;
}

unint64_t sub_235E94B88()
{
  unint64_t result;

  result = qword_25638B658;
  if (!qword_25638B658)
  {
    result = MEMORY[0x23B7E5230](&protocol conformance descriptor for SendFriendInviteTransportItem, &type metadata for SendFriendInviteTransportItem);
    atomic_store(result, (unint64_t *)&qword_25638B658);
  }
  return result;
}

unint64_t sub_235E94BCC()
{
  unint64_t result;

  result = qword_25638B660;
  if (!qword_25638B660)
  {
    result = MEMORY[0x23B7E5230](&protocol conformance descriptor for SendFriendInviteTransportItem, &type metadata for SendFriendInviteTransportItem);
    atomic_store(result, (unint64_t *)&qword_25638B660);
  }
  return result;
}

unint64_t sub_235E94C10()
{
  unint64_t result;

  result = qword_25638B668;
  if (!qword_25638B668)
  {
    result = MEMORY[0x23B7E5230](&protocol conformance descriptor for InvitationDestinationEndpoint, &type metadata for InvitationDestinationEndpoint);
    atomic_store(result, (unint64_t *)&qword_25638B668);
  }
  return result;
}

unint64_t sub_235E94C54()
{
  unint64_t result;

  result = qword_25638B670;
  if (!qword_25638B670)
  {
    result = MEMORY[0x23B7E5230](&protocol conformance descriptor for InvitationDestinationEndpoint, &type metadata for InvitationDestinationEndpoint);
    atomic_store(result, (unint64_t *)&qword_25638B670);
  }
  return result;
}

unint64_t sub_235E94C98()
{
  unint64_t result;

  result = qword_25638B678;
  if (!qword_25638B678)
  {
    result = MEMORY[0x23B7E5230](&protocol conformance descriptor for SetActivityDataVisibleTransportItem, &type metadata for SetActivityDataVisibleTransportItem);
    atomic_store(result, (unint64_t *)&qword_25638B678);
  }
  return result;
}

unint64_t sub_235E94CDC()
{
  unint64_t result;

  result = qword_25638B680;
  if (!qword_25638B680)
  {
    result = MEMORY[0x23B7E5230](&protocol conformance descriptor for SetActivityDataVisibleTransportItem, &type metadata for SetActivityDataVisibleTransportItem);
    atomic_store(result, (unint64_t *)&qword_25638B680);
  }
  return result;
}

unint64_t sub_235E94D20()
{
  unint64_t result;

  result = qword_25638B688;
  if (!qword_25638B688)
  {
    result = MEMORY[0x23B7E5230](&protocol conformance descriptor for InvitationDestination, &type metadata for InvitationDestination);
    atomic_store(result, (unint64_t *)&qword_25638B688);
  }
  return result;
}

unint64_t sub_235E94D64()
{
  unint64_t result;

  result = qword_25638B690;
  if (!qword_25638B690)
  {
    result = MEMORY[0x23B7E5230](&protocol conformance descriptor for InvitationDestination, &type metadata for InvitationDestination);
    atomic_store(result, (unint64_t *)&qword_25638B690);
  }
  return result;
}

unint64_t sub_235E94DA8()
{
  unint64_t result;

  result = qword_25638B698;
  if (!qword_25638B698)
  {
    result = MEMORY[0x23B7E5230](&unk_235EEA194, &type metadata for VoidTransportSerializable);
    atomic_store(result, (unint64_t *)&qword_25638B698);
  }
  return result;
}

unint64_t sub_235E94DEC()
{
  unint64_t result;

  result = qword_25638B6A0;
  if (!qword_25638B6A0)
  {
    result = MEMORY[0x23B7E5230](&unk_235EEA16C, &type metadata for VoidTransportSerializable);
    atomic_store(result, (unint64_t *)&qword_25638B6A0);
  }
  return result;
}

uint64_t sub_235E94E30@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_235E93DE8(a1, a2, a3);
}

void *sub_235E94E44()
{
  return sub_235E93DC8();
}

unint64_t static InvitationDestinationConstants.inviteServiceIdentifier.getter()
{
  return 0xD00000000000002ELL;
}

ValueMetadata *type metadata accessor for InvitationDestinationConstants()
{
  return &type metadata for InvitationDestinationConstants;
}

uint64_t sub_235E94E84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25429C940);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_235EE6E00;
  *(_QWORD *)(v0 + 32) = 0xD00000000000002ELL;
  *(_QWORD *)(v0 + 40) = 0x8000000235EEB280;
  *(_QWORD *)(v0 + 48) = sub_235EE5D40();
  *(_QWORD *)(v0 + 56) = v1;
  result = sub_235EE5D40();
  *(_QWORD *)(v0 + 64) = result;
  *(_QWORD *)(v0 + 72) = v3;
  qword_256393B40 = v0;
  return result;
}

void sub_235E94F10()
{
  qword_256393B48 = (uint64_t)&unk_250744330;
}

uint64_t sub_235E94F24(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_235E94F2C(uint64_t a1)
{
  return sub_235E94F54(a1, qword_256393B50);
}

uint64_t sub_235E94F54(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_235EE5CF8();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_235EE5CEC();
}

double SecureCloudInviteRequestProtobuf.date.getter()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  v1 = v0 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 20);
  result = *(double *)v1;
  if (*(_BYTE *)(v1 + 8))
    return 0.0;
  return result;
}

uint64_t type metadata accessor for SecureCloudInviteRequestProtobuf()
{
  uint64_t result;

  result = qword_25638B748;
  if (!qword_25638B748)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t SecureCloudInviteRequestProtobuf.date.setter(double a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = type metadata accessor for SecureCloudInviteRequestProtobuf();
  v4 = v1 + *(int *)(result + 20);
  *(double *)v4 = a1;
  *(_BYTE *)(v4 + 8) = 0;
  return result;
}

uint64_t (*SecureCloudInviteRequestProtobuf.date.modify(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 20);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = v1 + v3;
  v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8))
    v5 = 0.0;
  *(double *)a1 = v5;
  return sub_235E950C4;
}

uint64_t sub_235E950C4(uint64_t result)
{
  uint64_t v1;

  v1 = *(_QWORD *)(result + 8) + *(int *)(result + 16);
  *(_QWORD *)v1 = *(_QWORD *)result;
  *(_BYTE *)(v1 + 8) = 0;
  return result;
}

BOOL SecureCloudInviteRequestProtobuf.hasDate.getter()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 20) + 8) & 1) == 0;
}

Swift::Void __swiftcall SecureCloudInviteRequestProtobuf.clearDate()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 20);
  *(_QWORD *)v1 = 0;
  *(_BYTE *)(v1 + 8) = 1;
}

uint64_t SecureCloudInviteRequestProtobuf.handshakeToken.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 24));
  if (v1[1])
    v2 = *v1;
  else
    v2 = 0;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_235E95184@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 24));
  v4 = v3[1];
  if (v4)
  {
    v5 = *v3;
    v6 = v4;
  }
  else
  {
    v5 = 0;
    v6 = 0xE000000000000000;
  }
  *a2 = v5;
  a2[1] = v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_235E951D4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(a2 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 24));
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *v4 = v3;
  v4[1] = v2;
  return result;
}

uint64_t SecureCloudInviteRequestProtobuf.handshakeToken.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 24));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SecureCloudInviteRequestProtobuf.handshakeToken.modify(uint64_t a1))(uint64_t *, char)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 24);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v1 + v3);
  v5 = v4[1];
  if (v5)
  {
    v6 = *v4;
    v7 = v5;
  }
  else
  {
    v6 = 0;
    v7 = 0xE000000000000000;
  }
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_235E952D0;
}

BOOL SecureCloudInviteRequestProtobuf.hasHandshakeToken.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 24) + 8) != 0;
}

Swift::Void __swiftcall SecureCloudInviteRequestProtobuf.clearHandshakeToken()()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 24));
  swift_bridgeObjectRelease();
  *v1 = 0;
  v1[1] = 0;
}

uint64_t SecureCloudInviteRequestProtobuf.identifier.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 28));
  if (v1[1])
    v2 = *v1;
  else
    v2 = 0;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_235E95384@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 28));
  v4 = v3[1];
  if (v4)
  {
    v5 = *v3;
    v6 = v4;
  }
  else
  {
    v5 = 0;
    v6 = 0xE000000000000000;
  }
  *a2 = v5;
  a2[1] = v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_235E953D4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(a2 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 28));
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *v4 = v3;
  v4[1] = v2;
  return result;
}

uint64_t SecureCloudInviteRequestProtobuf.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 28));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SecureCloudInviteRequestProtobuf.identifier.modify(uint64_t a1))(uint64_t *, char)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 28);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v1 + v3);
  v5 = v4[1];
  if (v5)
  {
    v6 = *v4;
    v7 = v5;
  }
  else
  {
    v6 = 0;
    v7 = 0xE000000000000000;
  }
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_235E952D0;
}

BOOL SecureCloudInviteRequestProtobuf.hasIdentifier.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 28) + 8) != 0;
}

Swift::Void __swiftcall SecureCloudInviteRequestProtobuf.clearIdentifier()()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 28));
  swift_bridgeObjectRelease();
  *v1 = 0;
  v1[1] = 0;
}

uint64_t SecureCloudInviteRequestProtobuf.buildNumber.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 32));
  if (v1[1])
    v2 = *v1;
  else
    v2 = 0;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_235E95580@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 32));
  v4 = v3[1];
  if (v4)
  {
    v5 = *v3;
    v6 = v4;
  }
  else
  {
    v5 = 0;
    v6 = 0xE000000000000000;
  }
  *a2 = v5;
  a2[1] = v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_235E955D0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(a2 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 32));
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *v4 = v3;
  v4[1] = v2;
  return result;
}

uint64_t SecureCloudInviteRequestProtobuf.buildNumber.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 32));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SecureCloudInviteRequestProtobuf.buildNumber.modify(uint64_t a1))(uint64_t *, char)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 32);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v1 + v3);
  v5 = v4[1];
  if (v5)
  {
    v6 = *v4;
    v7 = v5;
  }
  else
  {
    v6 = 0;
    v7 = 0xE000000000000000;
  }
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_235E952D0;
}

BOOL SecureCloudInviteRequestProtobuf.hasBuildNumber.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 32) + 8) != 0;
}

Swift::Void __swiftcall SecureCloudInviteRequestProtobuf.clearBuildNumber()()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 32));
  swift_bridgeObjectRelease();
  *v1 = 0;
  v1[1] = 0;
}

uint64_t SecureCloudInviteRequestProtobuf.userInfo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int *v7;
  _QWORD *v8;
  uint64_t v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638B6C0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SecureCloudInviteRequestProtobuf();
  sub_235E95A44(v1 + *(int *)(v6 + 36), (uint64_t)v5);
  v7 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48))(v5, 1, v7) != 1)
    return sub_235E95A8C((uint64_t)v5, a1);
  sub_235EE5B84();
  *(_OWORD *)(a1 + v7[5]) = xmmword_235EE6E80;
  *(_OWORD *)(a1 + v7[6]) = xmmword_235EE6E80;
  *(_OWORD *)(a1 + v7[7]) = xmmword_235EE6E80;
  v8 = (_QWORD *)(a1 + v7[8]);
  *v8 = 0;
  v8[1] = 0;
  return sub_235E8EC2C((uint64_t)v5, &qword_25638B6C0);
}

uint64_t sub_235E95824@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  int *v8;
  _QWORD *v9;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638B6C0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SecureCloudInviteRequestProtobuf();
  sub_235E95A44(a1 + *(int *)(v7 + 36), (uint64_t)v6);
  v8 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v8 - 1) + 48))(v6, 1, v8) != 1)
    return sub_235E95A8C((uint64_t)v6, a2);
  sub_235EE5B84();
  *(_OWORD *)(a2 + v8[5]) = xmmword_235EE6E80;
  *(_OWORD *)(a2 + v8[6]) = xmmword_235EE6E80;
  *(_OWORD *)(a2 + v8[7]) = xmmword_235EE6E80;
  v9 = (_QWORD *)(a2 + v8[8]);
  *v9 = 0;
  v9[1] = 0;
  return sub_235E8EC2C((uint64_t)v6, &qword_25638B6C0);
}

uint64_t sub_235E95920(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_235E95CE8(a1, (uint64_t)v7);
  v8 = a2 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 36);
  sub_235E8EC2C(v8, &qword_25638B6C0);
  sub_235E95A8C((uint64_t)v7, v8);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v8, 0, 1, v4);
}

uint64_t SecureCloudInviteRequestProtobuf.userInfo.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 36);
  sub_235E8EC2C(v3, &qword_25638B6C0);
  sub_235E95A8C(a1, v3);
  v4 = type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 0, 1, v4);
}

uint64_t sub_235E95A44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638B6C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_235E95A8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void (*SecureCloudInviteRequestProtobuf.userInfo.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  int *v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  char *v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638B6C0);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  v3[2] = v6;
  v7 = *((_QWORD *)v6 - 1);
  v3[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[4] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[5] = v9;
  v10 = *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 36);
  *((_DWORD *)v3 + 12) = v10;
  sub_235E95A44(v1 + v10, (uint64_t)v5);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_235EE5B84();
    *(_OWORD *)&v9[v6[5]] = xmmword_235EE6E80;
    *(_OWORD *)&v9[v6[6]] = xmmword_235EE6E80;
    *(_OWORD *)&v9[v6[7]] = xmmword_235EE6E80;
    v11 = &v9[v6[8]];
    *(_QWORD *)v11 = 0;
    *((_QWORD *)v11 + 1) = 0;
    sub_235E8EC2C((uint64_t)v5, &qword_25638B6C0);
  }
  else
  {
    sub_235E95A8C((uint64_t)v5, (uint64_t)v9);
  }
  return sub_235E95C00;
}

void sub_235E95C00(uint64_t a1, char a2)
{
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v2 = *(void **)a1;
  v3 = *(int *)(*(_QWORD *)a1 + 48);
  v4 = *(void **)(*(_QWORD *)a1 + 32);
  v5 = *(void **)(*(_QWORD *)a1 + 40);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  v7 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v8 = *(void **)(*(_QWORD *)a1 + 8);
  v9 = **(_QWORD **)a1 + v3;
  if ((a2 & 1) != 0)
  {
    sub_235E95CE8(*(_QWORD *)(*(_QWORD *)a1 + 40), (uint64_t)v4);
    sub_235E8EC2C(v9, &qword_25638B6C0);
    sub_235E95A8C((uint64_t)v4, v9);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
    sub_235E95D2C((uint64_t)v5);
  }
  else
  {
    sub_235E8EC2C(**(_QWORD **)a1 + v3, &qword_25638B6C0);
    sub_235E95A8C((uint64_t)v5, v9);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
  }
  free(v5);
  free(v4);
  free(v8);
  free(v2);
}

uint64_t sub_235E95CE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_235E95D2C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL SecureCloudInviteRequestProtobuf.hasUserInfo.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL8 v6;
  uint64_t v8;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638B6C0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for SecureCloudInviteRequestProtobuf();
  sub_235E95A44(v0 + *(int *)(v4 + 36), (uint64_t)v3);
  v5 = type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_235E8EC2C((uint64_t)v3, &qword_25638B6C0);
  return v6;
}

Swift::Void __swiftcall SecureCloudInviteRequestProtobuf.clearUserInfo()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 36);
  sub_235E8EC2C(v1, &qword_25638B6C0);
  v2 = type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
}

uint64_t SecureCloudInviteRequestProtobuf.version.getter()
{
  uint64_t v0;
  _BYTE *v1;

  v1 = (_BYTE *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 40));
  if (v1[4])
    return 0;
  else
    return *(unsigned int *)v1;
}

uint64_t SecureCloudInviteRequestProtobuf.version.setter(int a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = type metadata accessor for SecureCloudInviteRequestProtobuf();
  v4 = v1 + *(int *)(result + 40);
  *(_DWORD *)v4 = a1;
  *(_BYTE *)(v4 + 4) = 0;
  return result;
}

uint64_t (*SecureCloudInviteRequestProtobuf.version.modify(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 40);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_235E95F24;
}

uint64_t sub_235E95F24(uint64_t result)
{
  uint64_t v1;

  v1 = *(_QWORD *)result + *(int *)(result + 12);
  *(_DWORD *)v1 = *(_DWORD *)(result + 8);
  *(_BYTE *)(v1 + 4) = 0;
  return result;
}

BOOL SecureCloudInviteRequestProtobuf.hasVersion.getter()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 40) + 4) & 1) == 0;
}

Swift::Void __swiftcall SecureCloudInviteRequestProtobuf.clearVersion()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 40);
  *(_DWORD *)v1 = 0;
  *(_BYTE *)(v1 + 4) = 1;
}

uint64_t SecureCloudInviteRequestProtobuf.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_235EE5B90();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t SecureCloudInviteRequestProtobuf.unknownFields.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_235EE5B90();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*SecureCloudInviteRequestProtobuf.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t SecureCloudInviteRequestProtobuf.init()@<X0>(uint64_t a1@<X8>)
{
  int *v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  sub_235EE5B84();
  v2 = (int *)type metadata accessor for SecureCloudInviteRequestProtobuf();
  v3 = a1 + v2[5];
  *(_QWORD *)v3 = 0;
  *(_BYTE *)(v3 + 8) = 1;
  v4 = (_QWORD *)(a1 + v2[6]);
  *v4 = 0;
  v4[1] = 0;
  v5 = (_QWORD *)(a1 + v2[7]);
  *v5 = 0;
  v5[1] = 0;
  v6 = (_QWORD *)(a1 + v2[8]);
  *v6 = 0;
  v6[1] = 0;
  v7 = a1 + v2[9];
  v8 = type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v10 = a1 + v2[10];
  *(_DWORD *)v10 = 0;
  *(_BYTE *)(v10 + 4) = 1;
  return result;
}

unint64_t static SecureCloudInviteRequestProtobuf.protoMessageName.getter()
{
  return 0xD000000000000020;
}

uint64_t sub_235E960DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;

  v0 = sub_235EE5CD4();
  __swift_allocate_value_buffer(v0, qword_25638B6A8);
  __swift_project_value_buffer(v0, (uint64_t)qword_25638B6A8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25638B600);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638B608);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_235EE6E90;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "date";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_235EE5CBC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "handshakeToken";
  *(_QWORD *)(v11 + 8) = 14;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "identifier";
  *((_QWORD *)v13 + 1) = 10;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "buildNumber";
  *((_QWORD *)v15 + 1) = 11;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "userInfo";
  *((_QWORD *)v17 + 1) = 8;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "version";
  *((_QWORD *)v19 + 1) = 7;
  v19[16] = 2;
  v10();
  return sub_235EE5CC8();
}

uint64_t static SecureCloudInviteRequestProtobuf._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_25638B4D8 != -1)
    swift_once();
  v2 = sub_235EE5CD4();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_25638B6A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t SecureCloudInviteRequestProtobuf.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_235EE5BD8();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          type metadata accessor for SecureCloudInviteRequestProtobuf();
          v4 = v3;
          sub_235EE5BFC();
          goto LABEL_5;
        case 2:
        case 3:
        case 4:
          type metadata accessor for SecureCloudInviteRequestProtobuf();
          v4 = v3;
          sub_235EE5C08();
          goto LABEL_5;
        case 5:
          v4 = v3;
          sub_235E964C4();
          goto LABEL_5;
        case 6:
          type metadata accessor for SecureCloudInviteRequestProtobuf();
          v4 = v3;
          sub_235EE5C14();
LABEL_5:
          v3 = v4;
          break;
        default:
          break;
      }
      result = sub_235EE5BD8();
    }
  }
  return result;
}

uint64_t sub_235E964C4()
{
  type metadata accessor for SecureCloudInviteRequestProtobuf();
  type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  sub_235E930EC(&qword_25638B6C8, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudInviteUserInfoProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudInviteUserInfoProtobuf);
  return sub_235EE5C20();
}

uint64_t SecureCloudInviteRequestProtobuf.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  char v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638B6C0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v17 = (uint64_t)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (int *)type metadata accessor for SecureCloudInviteRequestProtobuf();
  v13 = *(_BYTE *)(v3 + v12[5] + 8);
  v18 = a3;
  if ((v13 & 1) != 0 || (result = sub_235EE5C8C(), !v4))
  {
    if (!*(_QWORD *)(v3 + v12[6] + 8) || (result = sub_235EE5C98(), !v4))
    {
      if (!*(_QWORD *)(v3 + v12[7] + 8) || (result = sub_235EE5C98(), !v4))
      {
        if (!*(_QWORD *)(v3 + v12[8] + 8) || (result = sub_235EE5C98(), !v4))
        {
          sub_235E95A44(v3 + v12[9], (uint64_t)v8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
          {
            sub_235E8EC2C((uint64_t)v8, &qword_25638B6C0);
          }
          else
          {
            v15 = v17;
            sub_235E95A8C((uint64_t)v8, v17);
            sub_235E930EC(&qword_25638B6C8, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudInviteUserInfoProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudInviteUserInfoProtobuf);
            sub_235EE5CB0();
            result = sub_235E95D2C(v15);
            if (v4)
              return result;
          }
          if ((*(_BYTE *)(v3 + v12[10] + 4) & 1) != 0)
            return sub_235EE5B78();
          result = sub_235EE5CA4();
          if (!v4)
            return sub_235EE5B78();
        }
      }
    }
  }
  return result;
}

uint64_t SecureCloudInviteRequestProtobuf.hashValue.getter()
{
  sub_235EE6154();
  type metadata accessor for SecureCloudInviteRequestProtobuf();
  sub_235E930EC(&qword_25638B6D0, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudInviteRequestProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudInviteRequestProtobuf);
  sub_235EE5D1C();
  return sub_235EE616C();
}

uint64_t sub_235E9684C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  sub_235EE5B84();
  v4 = a1[6];
  v5 = a2 + a1[5];
  *(_QWORD *)v5 = 0;
  *(_BYTE *)(v5 + 8) = 1;
  v6 = (_QWORD *)(a2 + v4);
  *v6 = 0;
  v6[1] = 0;
  v7 = a1[8];
  v8 = (_QWORD *)(a2 + a1[7]);
  *v8 = 0;
  v8[1] = 0;
  v9 = (_QWORD *)(a2 + v7);
  *v9 = 0;
  v9[1] = 0;
  v10 = a2 + a1[9];
  v11 = type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v13 = a2 + a1[10];
  *(_DWORD *)v13 = 0;
  *(_BYTE *)(v13 + 4) = 1;
  return result;
}

unint64_t sub_235E968E4()
{
  return 0xD000000000000020;
}

uint64_t sub_235E96900()
{
  return SecureCloudInviteRequestProtobuf.decodeMessage<A>(decoder:)();
}

uint64_t sub_235E96914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return SecureCloudInviteRequestProtobuf.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_235E96928()
{
  sub_235E930EC(&qword_25638B7A0, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudInviteRequestProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudInviteRequestProtobuf);
  return sub_235EE5BC0();
}

uint64_t sub_235E96978@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_25638B4D8 != -1)
    swift_once();
  v2 = sub_235EE5CD4();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_25638B6A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_235E969E8()
{
  sub_235E930EC(&qword_25638B6E0, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudInviteRequestProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudInviteRequestProtobuf);
  return sub_235EE5C50();
}

uint64_t sub_235E96A28()
{
  sub_235E930EC(&qword_25638B6E0, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudInviteRequestProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudInviteRequestProtobuf);
  return sub_235EE5C5C();
}

uint64_t _s21ActivitySharingClient32SecureCloudInviteRequestProtobufV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  double *v27;
  char v28;
  double *v29;
  int v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unsigned int (*v57)(uint64_t, uint64_t, uint64_t);
  char v59;
  uint64_t v60;
  _DWORD *v61;
  char v62;
  _DWORD *v63;
  int v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t, uint64_t);
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  void (*v72)(char *, uint64_t);
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;

  v4 = sub_235EE5B90();
  v77 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v76 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v75 = (char *)&v73 - v7;
  v8 = type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638B7A8);
  MEMORY[0x24BDAC7A8](v12);
  v78 = (uint64_t)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638B6C0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v73 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v73 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v73 - v21;
  v23 = type metadata accessor for SecureCloudInviteRequestProtobuf();
  v24 = a2;
  v25 = (int *)v23;
  v26 = *(int *)(v23 + 20);
  v27 = (double *)(a1 + v26);
  v28 = *(_BYTE *)(a1 + v26 + 8);
  v29 = (double *)(v24 + v26);
  v30 = *(unsigned __int8 *)(v24 + v26 + 8);
  if ((v28 & 1) != 0)
  {
    if (!v30)
      goto LABEL_34;
  }
  else
  {
    if (*v27 != *v29)
      LOBYTE(v30) = 1;
    if ((v30 & 1) != 0)
      goto LABEL_34;
  }
  v31 = *(int *)(v23 + 24);
  v32 = (_QWORD *)(a1 + v31);
  v33 = *(_QWORD *)(a1 + v31 + 8);
  v34 = (_QWORD *)(v24 + v31);
  v35 = v34[1];
  if (!v33)
  {
    v74 = v4;
    if (v35)
      goto LABEL_34;
    goto LABEL_14;
  }
  if (!v35)
    goto LABEL_34;
  v74 = v4;
  if (*v32 == *v34 && v33 == v35 || (v36 = v24, v37 = sub_235EE60D0(), v24 = v36, v38 = 0, (v37 & 1) != 0))
  {
LABEL_14:
    v39 = v25[7];
    v40 = (_QWORD *)(a1 + v39);
    v41 = *(_QWORD *)(a1 + v39 + 8);
    v42 = (_QWORD *)(v24 + v39);
    v43 = v42[1];
    if (v41)
    {
      if (!v43)
        goto LABEL_34;
      if (*v40 != *v42 || v41 != v43)
      {
        v44 = v24;
        v45 = sub_235EE60D0();
        v24 = v44;
        v38 = 0;
        if ((v45 & 1) == 0)
          return v38 & 1;
      }
    }
    else if (v43)
    {
      goto LABEL_34;
    }
    v46 = v25[8];
    v47 = (_QWORD *)(a1 + v46);
    v48 = *(_QWORD *)(a1 + v46 + 8);
    v49 = (_QWORD *)(v24 + v46);
    v50 = v49[1];
    if (v48)
    {
      if (!v50)
        goto LABEL_34;
      if (*v47 != *v49 || v48 != v50)
      {
        v51 = v24;
        v52 = sub_235EE60D0();
        v24 = v51;
        v38 = 0;
        if ((v52 & 1) == 0)
          return v38 & 1;
      }
    }
    else if (v50)
    {
      goto LABEL_34;
    }
    v53 = v24;
    sub_235E95A44(a1 + v25[9], (uint64_t)v22);
    v54 = v25[9];
    v73 = v53;
    sub_235E95A44(v53 + v54, (uint64_t)v20);
    v55 = v78;
    v56 = v78 + *(int *)(v12 + 48);
    sub_235E95A44((uint64_t)v22, v78);
    sub_235E95A44((uint64_t)v20, v56);
    v57 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (v57(v55, 1, v8) == 1)
    {
      sub_235E8EC2C((uint64_t)v20, &qword_25638B6C0);
      v55 = v78;
      sub_235E8EC2C((uint64_t)v22, &qword_25638B6C0);
      if (v57(v56, 1, v8) == 1)
      {
        sub_235E8EC2C(v55, &qword_25638B6C0);
LABEL_37:
        v60 = v25[10];
        v61 = (_DWORD *)(a1 + v60);
        v62 = *(_BYTE *)(a1 + v60 + 4);
        v63 = (_DWORD *)(v73 + v60);
        v64 = *(unsigned __int8 *)(v73 + v60 + 4);
        if ((v62 & 1) == 0)
        {
          if (*v61 != *v63)
            LOBYTE(v64) = 1;
          if ((v64 & 1) != 0)
            goto LABEL_34;
LABEL_43:
          v65 = v77;
          v66 = *(void (**)(char *, uint64_t, uint64_t))(v77 + 16);
          v67 = v74;
          v68 = v75;
          v69 = a1;
          v70 = v73;
          v66(v75, v69, v74);
          v71 = v76;
          v66(v76, v70, v67);
          sub_235E930EC(&qword_25638B5F8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
          v38 = sub_235EE5D28();
          v72 = *(void (**)(char *, uint64_t))(v65 + 8);
          v72(v71, v67);
          v72(v68, v67);
          return v38 & 1;
        }
        if (v64)
          goto LABEL_43;
LABEL_34:
        v38 = 0;
        return v38 & 1;
      }
    }
    else
    {
      sub_235E95A44(v55, (uint64_t)v17);
      if (v57(v56, 1, v8) != 1)
      {
        sub_235E95A8C(v56, (uint64_t)v11);
        v59 = _s21ActivitySharingClient33SecureCloudInviteUserInfoProtobufV2eeoiySbAC_ACtFZ_0((uint64_t)v17, (uint64_t)v11);
        sub_235E95D2C((uint64_t)v11);
        sub_235E8EC2C((uint64_t)v20, &qword_25638B6C0);
        sub_235E8EC2C((uint64_t)v22, &qword_25638B6C0);
        sub_235E95D2C((uint64_t)v17);
        sub_235E8EC2C(v55, &qword_25638B6C0);
        if ((v59 & 1) == 0)
          goto LABEL_34;
        goto LABEL_37;
      }
      sub_235E8EC2C((uint64_t)v20, &qword_25638B6C0);
      sub_235E8EC2C((uint64_t)v22, &qword_25638B6C0);
      sub_235E95D2C((uint64_t)v17);
    }
    sub_235E8EC2C(v55, &qword_25638B7A8);
    goto LABEL_34;
  }
  return v38 & 1;
}

uint64_t sub_235E96F90()
{
  return sub_235E930EC(&qword_25638B6D8, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudInviteRequestProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudInviteRequestProtobuf);
}

uint64_t sub_235E96FBC()
{
  return sub_235E930EC(&qword_25638B6E0, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudInviteRequestProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudInviteRequestProtobuf);
}

uint64_t sub_235E96FE8()
{
  return sub_235E930EC(&qword_25638B6D0, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudInviteRequestProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudInviteRequestProtobuf);
}

uint64_t sub_235E97014()
{
  return sub_235E930EC(&qword_25638B6E8, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudInviteRequestProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudInviteRequestProtobuf);
}

uint64_t sub_235E97040@<X0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  double v6;

  result = type metadata accessor for SecureCloudInviteRequestProtobuf();
  v5 = a1 + *(int *)(result + 20);
  v6 = *(double *)v5;
  if (*(_BYTE *)(v5 + 8))
    v6 = 0.0;
  *a2 = v6;
  return result;
}

uint64_t sub_235E97088(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1;
  result = type metadata accessor for SecureCloudInviteRequestProtobuf();
  v5 = a2 + *(int *)(result + 20);
  *(_QWORD *)v5 = v3;
  *(_BYTE *)(v5 + 8) = 0;
  return result;
}

uint64_t sub_235E970E0@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result;
  int *v5;
  int v6;

  result = type metadata accessor for SecureCloudInviteRequestProtobuf();
  v5 = (int *)(a1 + *(int *)(result + 40));
  if (*((_BYTE *)v5 + 4))
    v6 = 0;
  else
    v6 = *v5;
  *a2 = v6;
  return result;
}

uint64_t sub_235E97124(int *a1, uint64_t a2)
{
  int v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1;
  result = type metadata accessor for SecureCloudInviteRequestProtobuf();
  v5 = a2 + *(int *)(result + 40);
  *(_DWORD *)v5 = v3;
  *(_BYTE *)(v5 + 4) = 0;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SecureCloudInviteRequestProtobuf(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  int *v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, int *);
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  void (*v50)(char *, _QWORD, uint64_t, int *);
  uint64_t v51;
  char *v52;
  char *v53;
  void (*v55)(uint64_t *, uint64_t *);
  uint64_t v56;
  uint64_t v57;
  char *__dst;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v30 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_235EE5B90();
    v55 = *(void (**)(uint64_t *, uint64_t *))(*(_QWORD *)(v7 - 8) + 16);
    v56 = v7;
    v55(a1, a2);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
    v12 = (uint64_t *)((char *)a1 + v9);
    v13 = (uint64_t *)((char *)a2 + v9);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    v15 = a3[7];
    v16 = a3[8];
    v17 = (uint64_t *)((char *)a1 + v15);
    v18 = (uint64_t *)((char *)a2 + v15);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = (uint64_t *)((char *)a1 + v16);
    v21 = (uint64_t *)((char *)a2 + v16);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = a3[9];
    __dst = (char *)a1 + v23;
    v24 = (char *)a2 + v23;
    v25 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf();
    v26 = *((_QWORD *)v25 - 1);
    v27 = *(unsigned int (**)(char *, uint64_t, int *))(v26 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v28 = v24;
    swift_bridgeObjectRetain();
    if (v27(v24, 1, v25))
    {
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638B6C0);
      memcpy(__dst, v24, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v55)(__dst, v24, v56);
      v31 = v25[5];
      v32 = &__dst[v31];
      v33 = (uint64_t *)&v24[v31];
      v34 = v33[1];
      v57 = v26;
      if (v34 >> 60 == 15)
      {
        *(_OWORD *)v32 = *(_OWORD *)v33;
      }
      else
      {
        v35 = *v33;
        sub_235E90998(*v33, v34);
        *(_QWORD *)v32 = v35;
        *((_QWORD *)v32 + 1) = v34;
      }
      v36 = v25[6];
      v37 = &__dst[v36];
      v38 = &v28[v36];
      v39 = *((_QWORD *)v38 + 1);
      if (v39 >> 60 == 15)
      {
        *(_OWORD *)v37 = *(_OWORD *)v38;
      }
      else
      {
        v40 = *(_QWORD *)v38;
        sub_235E90998(*(_QWORD *)v38, *((_QWORD *)v38 + 1));
        *(_QWORD *)v37 = v40;
        *((_QWORD *)v37 + 1) = v39;
      }
      v41 = v25[7];
      v42 = &__dst[v41];
      v43 = &v28[v41];
      v44 = *((_QWORD *)v43 + 1);
      if (v44 >> 60 == 15)
      {
        *(_OWORD *)v42 = *(_OWORD *)v43;
      }
      else
      {
        v45 = *(_QWORD *)v43;
        sub_235E90998(*(_QWORD *)v43, *((_QWORD *)v43 + 1));
        *(_QWORD *)v42 = v45;
        *((_QWORD *)v42 + 1) = v44;
      }
      v46 = v25[8];
      v47 = &__dst[v46];
      v48 = &v28[v46];
      v49 = *((_QWORD *)v48 + 1);
      *(_QWORD *)v47 = *(_QWORD *)v48;
      *((_QWORD *)v47 + 1) = v49;
      v50 = *(void (**)(char *, _QWORD, uint64_t, int *))(v57 + 56);
      swift_bridgeObjectRetain();
      v50(__dst, 0, 1, v25);
    }
    v51 = a3[10];
    v52 = (char *)a1 + v51;
    v53 = (char *)a2 + v51;
    *(_DWORD *)v52 = *(_DWORD *)v53;
    v52[4] = v53[4];
  }
  return a1;
}

uint64_t destroy for SecureCloudInviteRequestProtobuf(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  int *v7;
  uint64_t result;
  uint64_t *v9;
  unint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t *v13;
  unint64_t v14;

  v4 = sub_235EE5B90();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = a1 + *(int *)(a2 + 36);
  v7 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48))(v6, 1, v7);
  if (!(_DWORD)result)
  {
    v5(v6, v4);
    v9 = (uint64_t *)(v6 + v7[5]);
    v10 = v9[1];
    if (v10 >> 60 != 15)
      sub_235E90954(*v9, v10);
    v11 = (uint64_t *)(v6 + v7[6]);
    v12 = v11[1];
    if (v12 >> 60 != 15)
      sub_235E90954(*v11, v12);
    v13 = (uint64_t *)(v6 + v7[7]);
    v14 = v13[1];
    if (v14 >> 60 != 15)
      sub_235E90954(*v13, v14);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for SecureCloudInviteRequestProtobuf(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  int *v24;
  uint64_t v25;
  unsigned int (*v26)(char *, uint64_t, int *);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, _QWORD, uint64_t, int *);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v52)(uint64_t, uint64_t, uint64_t);
  char *__dst;
  int *v54;

  v6 = sub_235EE5B90();
  v52 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v52(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = (_QWORD *)(a1 + v8);
  v12 = (_QWORD *)(a2 + v8);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  v14 = a3[7];
  v15 = a3[8];
  v16 = (_QWORD *)(a1 + v14);
  v17 = (_QWORD *)(a2 + v14);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = (_QWORD *)(a1 + v15);
  v20 = (_QWORD *)(a2 + v15);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  v22 = a3[9];
  __dst = (char *)(a1 + v22);
  v54 = a3;
  v23 = (char *)(a2 + v22);
  v24 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  v25 = *((_QWORD *)v24 - 1);
  v26 = *(unsigned int (**)(char *, uint64_t, int *))(v25 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v26(v23, 1, v24))
  {
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638B6C0);
    memcpy(__dst, v23, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    v52((uint64_t)__dst, (uint64_t)v23, v6);
    v28 = v24[5];
    v29 = &__dst[v28];
    v30 = &v23[v28];
    v31 = *((_QWORD *)v30 + 1);
    if (v31 >> 60 == 15)
    {
      *(_OWORD *)v29 = *(_OWORD *)v30;
    }
    else
    {
      v32 = *(_QWORD *)v30;
      sub_235E90998(*(_QWORD *)v30, *((_QWORD *)v30 + 1));
      *(_QWORD *)v29 = v32;
      *((_QWORD *)v29 + 1) = v31;
    }
    v33 = v24[6];
    v34 = &__dst[v33];
    v35 = &v23[v33];
    v36 = *((_QWORD *)v35 + 1);
    if (v36 >> 60 == 15)
    {
      *(_OWORD *)v34 = *(_OWORD *)v35;
    }
    else
    {
      v37 = *(_QWORD *)v35;
      sub_235E90998(*(_QWORD *)v35, *((_QWORD *)v35 + 1));
      *(_QWORD *)v34 = v37;
      *((_QWORD *)v34 + 1) = v36;
    }
    v38 = v24[7];
    v39 = &__dst[v38];
    v40 = &v23[v38];
    v41 = *((_QWORD *)v40 + 1);
    if (v41 >> 60 == 15)
    {
      *(_OWORD *)v39 = *(_OWORD *)v40;
    }
    else
    {
      v42 = *(_QWORD *)v40;
      sub_235E90998(*(_QWORD *)v40, *((_QWORD *)v40 + 1));
      *(_QWORD *)v39 = v42;
      *((_QWORD *)v39 + 1) = v41;
    }
    v43 = v24[8];
    v44 = &__dst[v43];
    v45 = &v23[v43];
    v46 = *((_QWORD *)v45 + 1);
    *(_QWORD *)v44 = *(_QWORD *)v45;
    *((_QWORD *)v44 + 1) = v46;
    v47 = *(void (**)(char *, _QWORD, uint64_t, int *))(v25 + 56);
    swift_bridgeObjectRetain();
    v47(__dst, 0, 1, v24);
  }
  v48 = v54[10];
  v49 = a1 + v48;
  v50 = a2 + v48;
  *(_DWORD *)v49 = *(_DWORD *)v50;
  *(_BYTE *)(v49 + 4) = *(_BYTE *)(v50 + 4);
  return a1;
}

uint64_t assignWithCopy for SecureCloudInviteRequestProtobuf(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  int *v25;
  uint64_t (*v26)(char *, uint64_t, int *);
  char *v27;
  int v28;
  uint64_t v29;
  char *v30;
  char *v31;
  unint64_t v32;
  uint64_t v33;
  int *v34;
  char *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  void (*v55)(char *, _QWORD, uint64_t, int *);
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t *v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t *v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  int *v80;
  int v81;
  uint64_t v83;
  int *v84;

  v6 = sub_235EE5B90();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = *(_BYTE *)(v11 + 8);
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_BYTE *)(v10 + 8) = v12;
  v13 = a3[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = a3[7];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = a3[8];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (_QWORD *)(a2 + v19);
  *v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v84 = a3;
  v22 = a3[9];
  v23 = (char *)(a1 + v22);
  v24 = (char *)(a2 + v22);
  v25 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  v83 = *((_QWORD *)v25 - 1);
  v26 = *(uint64_t (**)(char *, uint64_t, int *))(v83 + 48);
  v27 = v23;
  LODWORD(v23) = v26(v23, 1, v25);
  v28 = v26(v24, 1, v25);
  if (!(_DWORD)v23)
  {
    if (v28)
    {
      sub_235E95D2C((uint64_t)v27);
      goto LABEL_7;
    }
    v35 = v24;
    v8((uint64_t)v27, (uint64_t)v24, v6);
    v36 = v25[5];
    v37 = (uint64_t *)&v27[v36];
    v38 = (uint64_t *)&v24[v36];
    v39 = *(_QWORD *)&v24[v36 + 8];
    if (*(_QWORD *)&v27[v36 + 8] >> 60 == 15)
    {
      v34 = v84;
      if (v39 >> 60 != 15)
      {
        v40 = *v38;
        sub_235E90998(*v38, v39);
        *v37 = v40;
        v37[1] = v39;
        goto LABEL_23;
      }
    }
    else
    {
      v34 = v84;
      if (v39 >> 60 != 15)
      {
        v56 = *v38;
        sub_235E90998(*v38, v39);
        v57 = *v37;
        v58 = v37[1];
        *v37 = v56;
        v37[1] = v39;
        sub_235E90954(v57, v58);
LABEL_23:
        v59 = v25[6];
        v60 = (uint64_t *)&v27[v59];
        v61 = (uint64_t *)&v35[v59];
        v62 = *(_QWORD *)&v35[v59 + 8];
        if (*(_QWORD *)&v27[v59 + 8] >> 60 == 15)
        {
          if (v62 >> 60 != 15)
          {
            v63 = *v61;
            sub_235E90998(*v61, v62);
            *v60 = v63;
            v60[1] = v62;
            goto LABEL_30;
          }
        }
        else
        {
          if (v62 >> 60 != 15)
          {
            v64 = *v61;
            sub_235E90998(*v61, v62);
            v65 = *v60;
            v66 = v60[1];
            *v60 = v64;
            v60[1] = v62;
            sub_235E90954(v65, v66);
LABEL_30:
            v67 = v25[7];
            v68 = (uint64_t *)&v27[v67];
            v69 = (uint64_t *)&v35[v67];
            v70 = *(_QWORD *)&v35[v67 + 8];
            if (*(_QWORD *)&v27[v67 + 8] >> 60 == 15)
            {
              if (v70 >> 60 != 15)
              {
                v71 = *v69;
                sub_235E90998(*v69, v70);
                *v68 = v71;
                v68[1] = v70;
LABEL_37:
                v75 = v25[8];
                v76 = &v27[v75];
                v77 = &v35[v75];
                *(_QWORD *)v76 = *(_QWORD *)v77;
                *((_QWORD *)v76 + 1) = *((_QWORD *)v77 + 1);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                goto LABEL_38;
              }
            }
            else
            {
              if (v70 >> 60 != 15)
              {
                v72 = *v69;
                sub_235E90998(*v69, v70);
                v73 = *v68;
                v74 = v68[1];
                *v68 = v72;
                v68[1] = v70;
                sub_235E90954(v73, v74);
                goto LABEL_37;
              }
              sub_235E97C08((uint64_t)v68);
            }
            *(_OWORD *)v68 = *(_OWORD *)v69;
            goto LABEL_37;
          }
          sub_235E97C08((uint64_t)v60);
        }
        *(_OWORD *)v60 = *(_OWORD *)v61;
        goto LABEL_30;
      }
      sub_235E97C08((uint64_t)v37);
    }
    *(_OWORD *)v37 = *(_OWORD *)v38;
    goto LABEL_23;
  }
  if (v28)
  {
LABEL_7:
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638B6C0);
    memcpy(v27, v24, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    v34 = v84;
    goto LABEL_38;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v27, v24, v6);
  v29 = v25[5];
  v30 = &v27[v29];
  v31 = &v24[v29];
  v32 = *((_QWORD *)v31 + 1);
  if (v32 >> 60 == 15)
  {
    *(_OWORD *)v30 = *(_OWORD *)v31;
  }
  else
  {
    v41 = *(_QWORD *)v31;
    sub_235E90998(*(_QWORD *)v31, *((_QWORD *)v31 + 1));
    *(_QWORD *)v30 = v41;
    *((_QWORD *)v30 + 1) = v32;
  }
  v42 = v25[6];
  v43 = &v27[v42];
  v44 = &v24[v42];
  v45 = *((_QWORD *)v44 + 1);
  if (v45 >> 60 == 15)
  {
    *(_OWORD *)v43 = *(_OWORD *)v44;
  }
  else
  {
    v46 = *(_QWORD *)v44;
    sub_235E90998(*(_QWORD *)v44, *((_QWORD *)v44 + 1));
    *(_QWORD *)v43 = v46;
    *((_QWORD *)v43 + 1) = v45;
  }
  v34 = v84;
  v47 = v25[7];
  v48 = &v27[v47];
  v49 = &v24[v47];
  v50 = *((_QWORD *)v49 + 1);
  if (v50 >> 60 == 15)
  {
    *(_OWORD *)v48 = *(_OWORD *)v49;
  }
  else
  {
    v51 = *(_QWORD *)v49;
    sub_235E90998(*(_QWORD *)v49, *((_QWORD *)v49 + 1));
    *(_QWORD *)v48 = v51;
    *((_QWORD *)v48 + 1) = v50;
  }
  v52 = v25[8];
  v53 = &v27[v52];
  v54 = &v24[v52];
  *(_QWORD *)v53 = *(_QWORD *)v54;
  *((_QWORD *)v53 + 1) = *((_QWORD *)v54 + 1);
  v55 = *(void (**)(char *, _QWORD, uint64_t, int *))(v83 + 56);
  swift_bridgeObjectRetain();
  v55(v27, 0, 1, v25);
LABEL_38:
  v78 = v34[10];
  v79 = a1 + v78;
  v80 = (int *)(a2 + v78);
  v81 = *v80;
  *(_BYTE *)(v79 + 4) = *((_BYTE *)v80 + 4);
  *(_DWORD *)v79 = v81;
  return a1;
}

uint64_t sub_235E97C08(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BDCDDE8] - 8) + 8))();
  return a1;
}

uint64_t initializeWithTake for SecureCloudInviteRequestProtobuf(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_235EE5B90();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a3[6];
  v10 = a1 + v8;
  v11 = a2 + v8;
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_BYTE *)(v10 + 8) = *(_BYTE *)(v11 + 8);
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  v12 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  v13 = a3[9];
  v14 = (char *)(a1 + v13);
  v15 = (char *)(a2 + v13);
  v16 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  v17 = *((_QWORD *)v16 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v17 + 48))(v15, 1, v16))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638B6C0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v14, (uint64_t)v15, v6);
    *(_OWORD *)&v14[v16[5]] = *(_OWORD *)&v15[v16[5]];
    *(_OWORD *)&v14[v16[6]] = *(_OWORD *)&v15[v16[6]];
    *(_OWORD *)&v14[v16[7]] = *(_OWORD *)&v15[v16[7]];
    *(_OWORD *)&v14[v16[8]] = *(_OWORD *)&v15[v16[8]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v17 + 56))(v14, 0, 1, v16);
  }
  v19 = a3[10];
  v20 = a1 + v19;
  v21 = a2 + v19;
  *(_DWORD *)v20 = *(_DWORD *)v21;
  *(_BYTE *)(v20 + 4) = *(_BYTE *)(v21 + 4);
  return a1;
}

uint64_t assignWithTake for SecureCloudInviteRequestProtobuf(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  int *v28;
  uint64_t v29;
  uint64_t (*v30)(char *, uint64_t, int *);
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t *v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t *v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t, uint64_t);

  v6 = sub_235EE5B90();
  v61 = *(_QWORD *)(v6 - 8);
  v62 = *(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 40);
  v62(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = (_QWORD *)(a1 + v8);
  v12 = (uint64_t *)(a2 + v8);
  v14 = *v12;
  v13 = v12[1];
  *v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  v15 = a3[7];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (uint64_t *)(a2 + v15);
  v19 = *v17;
  v18 = v17[1];
  *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  v20 = a3[8];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (uint64_t *)(a2 + v20);
  v24 = *v22;
  v23 = v22[1];
  *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  v25 = a3[9];
  v26 = (char *)(a1 + v25);
  v27 = (char *)(a2 + v25);
  v28 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  v29 = *((_QWORD *)v28 - 1);
  v30 = *(uint64_t (**)(char *, uint64_t, int *))(v29 + 48);
  v31 = v30(v26, 1, v28);
  v32 = v30(v27, 1, v28);
  if (!v31)
  {
    if (v32)
    {
      sub_235E95D2C((uint64_t)v26);
      goto LABEL_6;
    }
    v62((uint64_t)v26, (uint64_t)v27, v6);
    v38 = v28[5];
    v39 = (uint64_t)&v26[v38];
    v40 = &v27[v38];
    v41 = *(_QWORD *)&v26[v38 + 8];
    if (v41 >> 60 == 15)
    {
      *(_OWORD *)v39 = *(_OWORD *)v40;
    }
    else
    {
      v42 = *((_QWORD *)v40 + 1);
      if (v42 >> 60 == 15)
      {
        sub_235E97C08(v39);
        *(_OWORD *)v39 = *(_OWORD *)v40;
      }
      else
      {
        v43 = *(_QWORD *)v39;
        *(_QWORD *)v39 = *(_QWORD *)v40;
        *(_QWORD *)(v39 + 8) = v42;
        sub_235E90954(v43, v41);
      }
    }
    v44 = v28[6];
    v45 = (uint64_t *)&v26[v44];
    v46 = (uint64_t *)&v27[v44];
    v47 = *(_QWORD *)&v26[v44 + 8];
    if (v47 >> 60 != 15)
    {
      v48 = v46[1];
      if (v48 >> 60 != 15)
      {
        v49 = *v45;
        *v45 = *v46;
        v45[1] = v48;
        sub_235E90954(v49, v47);
LABEL_18:
        v50 = v28[7];
        v51 = (uint64_t *)&v26[v50];
        v52 = (uint64_t *)&v27[v50];
        v53 = *(_QWORD *)&v26[v50 + 8];
        if (v53 >> 60 != 15)
        {
          v54 = v52[1];
          if (v54 >> 60 != 15)
          {
            v55 = *v51;
            *v51 = *v52;
            v51[1] = v54;
            sub_235E90954(v55, v53);
            goto LABEL_23;
          }
          sub_235E97C08((uint64_t)v51);
        }
        *(_OWORD *)v51 = *(_OWORD *)v52;
LABEL_23:
        v56 = v28[8];
        v57 = &v26[v56];
        v58 = &v27[v56];
        v60 = *(_QWORD *)v58;
        v59 = *((_QWORD *)v58 + 1);
        *(_QWORD *)v57 = v60;
        *((_QWORD *)v57 + 1) = v59;
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
      sub_235E97C08((uint64_t)v45);
    }
    *(_OWORD *)v45 = *(_OWORD *)v46;
    goto LABEL_18;
  }
  if (v32)
  {
LABEL_6:
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638B6C0);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v26, v27, v6);
  *(_OWORD *)&v26[v28[5]] = *(_OWORD *)&v27[v28[5]];
  *(_OWORD *)&v26[v28[6]] = *(_OWORD *)&v27[v28[6]];
  *(_OWORD *)&v26[v28[7]] = *(_OWORD *)&v27[v28[7]];
  *(_OWORD *)&v26[v28[8]] = *(_OWORD *)&v27[v28[8]];
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v29 + 56))(v26, 0, 1, v28);
LABEL_7:
  v34 = a3[10];
  v35 = a1 + v34;
  v36 = a2 + v34;
  *(_DWORD *)v35 = *(_DWORD *)v36;
  *(_BYTE *)(v35 + 4) = *(_BYTE *)(v36 + 4);
  return a1;
}

uint64_t getEnumTagSinglePayload for SecureCloudInviteRequestProtobuf()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_235E980E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;
  uint64_t v11;

  v6 = sub_235EE5B90();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 2147483646)
  {
    v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
    if (v9 >= 0xFFFFFFFF)
      LODWORD(v9) = -1;
    v10 = v9 - 1;
    if (v10 < 0)
      v10 = -1;
    return (v10 + 1);
  }
  else
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638B6C0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for SecureCloudInviteRequestProtobuf()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_235E981AC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_235EE5B90();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = a2;
      return result;
    }
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638B6C0);
    v12 = a1 + *(int *)(a4 + 36);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_235E98258()
{
  unint64_t v0;
  unint64_t v1;

  sub_235EE5B90();
  if (v0 <= 0x3F)
  {
    sub_235E982FC();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_235E982FC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25638B758[0])
  {
    type metadata accessor for SecureCloudInviteUserInfoProtobuf();
    v0 = sub_235EE5F14();
    if (!v1)
      atomic_store(v0, qword_25638B758);
  }
}

uint64_t SecureCloudPingRequest.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

ActivitySharingClient::SecureCloudPingRequest __swiftcall SecureCloudPingRequest.init(identifier:)(ActivitySharingClient::SecureCloudPingRequest identifier)
{
  ActivitySharingClient::SecureCloudPingRequest *v1;

  *v1 = identifier;
  return identifier;
}

uint64_t SecureCloudPingRequest.protobuf()()
{
  type metadata accessor for SecureCloudPingRequestProtobuf();
  sub_235E98560(&qword_25638B550, (uint64_t)&protocol conformance descriptor for SecureCloudPingRequestProtobuf);
  return sub_235EE5C68();
}

uint64_t sub_235E983F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(a1 + *(int *)(type metadata accessor for SecureCloudPingRequestProtobuf() + 20));
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *v5 = a2;
  v5[1] = a3;
  return result;
}

uint64_t sub_235E98454(uint64_t a1)
{
  return sub_235E987D8(a1);
}

uint64_t SecureCloudPingRequest.init(_:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SecureCloudPingRequestProtobuf() + 20));
  if (v4[1])
  {
    v5 = *v4;
    v6 = v4[1];
  }
  else
  {
    v5 = 0;
    v6 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  result = sub_235E984DC(a1);
  *a2 = v5;
  a2[1] = v6;
  return result;
}

uint64_t sub_235E984DC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SecureCloudPingRequestProtobuf();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_235E98518()
{
  return sub_235E98560(&qword_25638B550, (uint64_t)&protocol conformance descriptor for SecureCloudPingRequestProtobuf);
}

uint64_t sub_235E9853C()
{
  return sub_235E98560(&qword_25638B558, (uint64_t)&protocol conformance descriptor for SecureCloudPingRequestProtobuf);
}

uint64_t sub_235E98560(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for SecureCloudPingRequestProtobuf();
    result = MEMORY[0x23B7E5230](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_235E985A0()
{
  type metadata accessor for SecureCloudPingRequestProtobuf();
  sub_235E98560(&qword_25638B550, (uint64_t)&protocol conformance descriptor for SecureCloudPingRequestProtobuf);
  return sub_235EE5C68();
}

uint64_t sub_235E98620@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SecureCloudPingRequestProtobuf() + 20));
  if (v4[1])
  {
    v5 = *v4;
    v6 = v4[1];
  }
  else
  {
    v5 = 0;
    v6 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  result = sub_235E984DC(a1);
  *a2 = v5;
  a2[1] = v6;
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for SecureCloudPingRequest(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for SecureCloudPingRequest()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for SecureCloudPingRequest(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

_QWORD *assignWithTake for SecureCloudPingRequest(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SecureCloudPingRequest(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SecureCloudPingRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SecureCloudPingRequest()
{
  return &type metadata for SecureCloudPingRequest;
}

uint64_t sub_235E987D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t result;

  v3 = *(_QWORD *)(v1 + 16);
  v2 = *(_QWORD *)(v1 + 24);
  v4 = (_QWORD *)(a1 + *(int *)(type metadata accessor for SecureCloudPingRequestProtobuf() + 20));
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *v4 = v3;
  v4[1] = v2;
  return result;
}

uint64_t SecureCloudInviteRequest.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_235EE5B0C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t SecureCloudInviteRequest.handshakeToken.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteRequest() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for SecureCloudInviteRequest()
{
  uint64_t result;

  result = qword_25429CB88;
  if (!qword_25429CB88)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t SecureCloudInviteRequest.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteRequest() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SecureCloudInviteRequest.buildNumber.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteRequest() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

id SecureCloudInviteRequest.userInfo.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v11;

  v3 = v1 + *(int *)(type metadata accessor for SecureCloudInviteRequest() + 32);
  v4 = *(_QWORD *)(v3 + 8);
  v11 = *(id *)v3;
  v5 = *(_QWORD *)(v3 + 16);
  v6 = *(void **)(v3 + 24);
  v7 = *(void **)(v3 + 32);
  *a1 = *(_QWORD *)v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  swift_bridgeObjectRetain();
  v8 = v6;
  v9 = v7;
  return v11;
}

uint64_t SecureCloudInviteRequest.version.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteRequest() + 36));
}

__n128 SecureCloudInviteRequest.init(date:handshakeToken:identifier:buildNumber:userInfo:version:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, __int128 *a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v18;
  uint64_t v19;
  int *v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  __n128 result;
  __n128 v26;
  __int128 v27;

  v27 = *a8;
  v18 = *((_QWORD *)a8 + 2);
  v19 = sub_235EE5B0C();
  v26 = *(__n128 *)((char *)a8 + 24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a9, a1, v19);
  v20 = (int *)type metadata accessor for SecureCloudInviteRequest();
  v21 = (_QWORD *)(a9 + v20[5]);
  *v21 = a2;
  v21[1] = a3;
  v22 = (_QWORD *)(a9 + v20[6]);
  *v22 = a4;
  v22[1] = a5;
  v23 = (_QWORD *)(a9 + v20[7]);
  *v23 = a6;
  v23[1] = a7;
  v24 = a9 + v20[8];
  *(_OWORD *)v24 = v27;
  *(_QWORD *)(v24 + 16) = v18;
  result = v26;
  *(__n128 *)(v24 + 24) = v26;
  *(_QWORD *)(a9 + v20[9]) = a10;
  return result;
}

uint64_t SecureCloudInviteRequest.protobuf()()
{
  type metadata accessor for SecureCloudInviteRequestProtobuf();
  sub_235E930EC(&qword_25638B6E0, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudInviteRequestProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudInviteRequestProtobuf);
  return sub_235EE5C68();
}

uint64_t sub_235E98B54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  int *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD v31[6];
  _OWORD v32[2];
  uint64_t v33;

  v4 = type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  v31[0] = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_235EE5ADC();
  v8 = v7;
  v9 = (int *)type metadata accessor for SecureCloudInviteRequestProtobuf();
  v10 = a1 + v9[5];
  *(_QWORD *)v10 = v8;
  *(_BYTE *)(v10 + 8) = 0;
  v11 = (int *)type metadata accessor for SecureCloudInviteRequest();
  v12 = (uint64_t *)(a2 + v11[5]);
  v14 = *v12;
  v13 = v12[1];
  v15 = (_QWORD *)(a1 + v9[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *v15 = v14;
  v15[1] = v13;
  v16 = (uint64_t *)(a2 + v11[6]);
  v18 = *v16;
  v17 = v16[1];
  v19 = (_QWORD *)(a1 + v9[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *v19 = v18;
  v19[1] = v17;
  v20 = (uint64_t *)(a2 + v11[7]);
  v22 = *v20;
  v21 = v20[1];
  v23 = (_QWORD *)(a1 + v9[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *v23 = v22;
  v23[1] = v21;
  v24 = a2 + v11[8];
  v25 = *(_OWORD *)(v24 + 16);
  v32[0] = *(_OWORD *)v24;
  v32[1] = v25;
  v33 = *(_QWORD *)(v24 + 32);
  v31[4] = v32;
  sub_235E99A28((uint64_t)v32);
  sub_235E930EC(&qword_25638B6C8, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudInviteUserInfoProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudInviteUserInfoProtobuf);
  v26 = v31[1];
  sub_235EE5C68();
  result = sub_235E99A6C((uint64_t)v32);
  if (!v26)
  {
    v28 = a1 + v9[9];
    sub_235E9917C(v28);
    sub_235E95A8C((uint64_t)v6, v28);
    result = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v31[0] + 56))(v28, 0, 1, v4);
    v29 = *(_QWORD *)(a2 + v11[9]);
    if ((v29 & 0x8000000000000000) != 0 || HIDWORD(v29))
    {
      result = sub_235EE6004();
      __break(1u);
    }
    else
    {
      v30 = a1 + v9[10];
      *(_DWORD *)v30 = v29;
      *(_BYTE *)(v30 + 4) = 0;
    }
  }
  return result;
}

uint64_t sub_235E98E04(uint64_t a1)
{
  uint64_t v1;

  return sub_235E98B54(a1, *(_QWORD *)(v1 + 16));
}

double SecureCloudInviteRequest.init(_:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  int *v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t *v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  double result;
  uint64_t v25;
  unsigned int *v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  _QWORD *v30;
  unint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  _QWORD *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  unint64_t v45;
  unint64_t v46;
  __int128 v47;
  uint64_t v48;
  __int128 v49;
  unint64_t v50;

  v40 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638B6C0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  v7 = *((_QWORD *)v6 - 1);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v44 = sub_235EE5B0C();
  v42 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (int *)type metadata accessor for SecureCloudInviteRequestProtobuf();
  v41 = v11;
  sub_235EE5AD0();
  v13 = (uint64_t *)(a1 + v12[6]);
  v14 = v13[1];
  if (v14)
  {
    v39 = *v13;
    v50 = v14;
  }
  else
  {
    v39 = 0;
    v50 = 0xE000000000000000;
  }
  v15 = (uint64_t *)(a1 + v12[7]);
  v16 = v15[1];
  if (v16)
  {
    v38 = *v15;
    v46 = v16;
  }
  else
  {
    v38 = 0;
    v46 = 0xE000000000000000;
  }
  v17 = (uint64_t *)(a1 + v12[8]);
  v18 = v17[1];
  if (v18)
  {
    v37 = *v17;
    v45 = v18;
  }
  else
  {
    v37 = 0;
    v45 = 0xE000000000000000;
  }
  sub_235E95A44(a1 + v12[9], (uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_235EE5B84();
    *(_OWORD *)&v9[v6[5]] = xmmword_235EE6E80;
    *(_OWORD *)&v9[v6[6]] = xmmword_235EE6E80;
    *(_OWORD *)&v9[v6[7]] = xmmword_235EE6E80;
    v19 = &v9[v6[8]];
    *(_QWORD *)v19 = 0;
    *((_QWORD *)v19 + 1) = 0;
    sub_235E9917C((uint64_t)v5);
  }
  else
  {
    sub_235E95A8C((uint64_t)v5, (uint64_t)v9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v20 = v44;
  v22 = v42;
  v21 = v43;
  v23 = v41;
  SecureCloudInviteUserInfo.init(_:)((uint64_t)v9, &v47);
  if (v21)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_235E991BC(a1);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v23, v20);
  }
  else
  {
    v25 = v48;
    v43 = v49;
    v44 = v47;
    v26 = (unsigned int *)(a1 + v12[10]);
    if (*((_BYTE *)v26 + 4))
      v27 = 0;
    else
      v27 = *v26;
    sub_235E991BC(a1);
    v28 = v40;
    (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(v40, v23, v20);
    v29 = (int *)type metadata accessor for SecureCloudInviteRequest();
    v30 = (_QWORD *)(v28 + v29[5]);
    v31 = v50;
    *v30 = v39;
    v30[1] = v31;
    v32 = (_QWORD *)(v28 + v29[6]);
    v33 = v46;
    *v32 = v38;
    v32[1] = v33;
    v34 = (_QWORD *)(v28 + v29[7]);
    v35 = v45;
    *v34 = v37;
    v34[1] = v35;
    v36 = v28 + v29[8];
    *(_OWORD *)v36 = v44;
    *(_QWORD *)(v36 + 16) = v25;
    result = *(double *)&v43;
    *(_OWORD *)(v36 + 24) = v43;
    *(_QWORD *)(v28 + v29[9]) = v27;
  }
  return result;
}

uint64_t sub_235E9917C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638B6C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_235E991BC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SecureCloudInviteRequestProtobuf();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_235E991F8()
{
  return sub_235E930EC(&qword_25638B6E0, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudInviteRequestProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudInviteRequestProtobuf);
}

uint64_t sub_235E99224()
{
  return sub_235E930EC(&qword_25638B6E8, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudInviteRequestProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudInviteRequestProtobuf);
}

uint64_t sub_235E99250()
{
  type metadata accessor for SecureCloudInviteRequestProtobuf();
  sub_235E930EC(&qword_25638B6E0, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudInviteRequestProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudInviteRequestProtobuf);
  return sub_235EE5C68();
}

double sub_235E992D0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return SecureCloudInviteRequest.init(_:)(a1, a2);
}

uint64_t *initializeBufferWithCopyOfBuffer for SecureCloudInviteRequest(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v30 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_235EE5B0C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[7];
    v17 = a3[8];
    v18 = (uint64_t *)((char *)a1 + v16);
    v19 = (uint64_t *)((char *)a2 + v16);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = (uint64_t *)((char *)a1 + v17);
    v22 = (char *)a2 + v17;
    v24 = *(void **)v22;
    v23 = *((_QWORD *)v22 + 1);
    *v21 = *(_QWORD *)v22;
    v21[1] = v23;
    v25 = (void *)*((_QWORD *)v22 + 3);
    v21[2] = *((_QWORD *)v22 + 2);
    v21[3] = v25;
    v26 = (void *)*((_QWORD *)v22 + 4);
    v21[4] = v26;
    *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v27 = v24;
    swift_bridgeObjectRetain();
    v28 = v25;
    v29 = v26;
  }
  return a1;
}

void destroy for SecureCloudInviteRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  id *v5;

  v4 = sub_235EE5B0C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = (id *)(a1 + *(int *)(a2 + 32));

  swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SecureCloudInviteRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  id v28;

  v6 = sub_235EE5B0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v15);
  v18 = (_QWORD *)(a2 + v15);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = (_QWORD *)(a1 + v16);
  v21 = a2 + v16;
  v23 = *(void **)v21;
  v22 = *(_QWORD *)(v21 + 8);
  *v20 = *(_QWORD *)v21;
  v20[1] = v22;
  v24 = *(void **)(v21 + 24);
  v20[2] = *(_QWORD *)(v21 + 16);
  v20[3] = v24;
  v25 = *(void **)(v21 + 32);
  v20[4] = v25;
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v26 = v23;
  swift_bridgeObjectRetain();
  v27 = v24;
  v28 = v25;
  return a1;
}

uint64_t assignWithCopy for SecureCloudInviteRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  void *v25;
  void *v26;
  id v27;

  v6 = sub_235EE5B0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = a3[8];
  v17 = a1 + v16;
  v18 = (_QWORD *)(a2 + v16);
  v19 = *(void **)(a2 + v16);
  v20 = *(void **)v17;
  *(_QWORD *)v17 = v19;
  v21 = v19;

  *(_QWORD *)(v17 + 8) = v18[1];
  *(_QWORD *)(v17 + 16) = v18[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = (void *)v18[3];
  v23 = *(void **)(v17 + 24);
  *(_QWORD *)(v17 + 24) = v22;
  v24 = v22;

  v25 = (void *)v18[4];
  v26 = *(void **)(v17 + 32);
  *(_QWORD *)(v17 + 32) = v25;
  v27 = v25;

  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t initializeWithTake for SecureCloudInviteRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;

  v6 = sub_235EE5B0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(_QWORD *)(v9 + 32) = *(_QWORD *)(v10 + 32);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithTake for SecureCloudInviteRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  void *v25;
  uint64_t v26;
  void *v27;
  void *v28;

  v6 = sub_235EE5B0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[7];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (uint64_t *)(a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  v22 = a3[8];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  v25 = *(void **)(a1 + v22);
  *(_QWORD *)(a1 + v22) = *(_QWORD *)(a2 + v22);

  v26 = v24[2];
  v23[1] = v24[1];
  v23[2] = v26;
  swift_bridgeObjectRelease();
  v27 = (void *)v23[3];
  v23[3] = v24[3];

  v28 = (void *)v23[4];
  v23[4] = v24[4];

  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t getEnumTagSinglePayload for SecureCloudInviteRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_235E9987C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_235EE5B0C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for SecureCloudInviteRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_235E99908(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_235EE5B0C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_235E99984()
{
  uint64_t result;
  unint64_t v1;

  result = sub_235EE5B0C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

id sub_235E99A10(uint64_t a1)
{
  uint64_t v1;

  return sub_235E9D0A8(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_235E99A28(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;

  v2 = *(void **)a1;
  v3 = *(void **)(a1 + 24);
  v4 = *(void **)(a1 + 32);
  swift_bridgeObjectRetain();
  v5 = v3;
  v6 = v4;
  v7 = v2;
  return a1;
}

uint64_t sub_235E99A6C(uint64_t a1)
{
  void *v2;
  void *v3;

  v2 = *(void **)a1;
  v3 = *(void **)(a1 + 24);

  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_235E99AB4(uint64_t a1)
{
  return sub_235E98E04(a1);
}

ActivitySharingClient::SecureCloudUpgradeMessage::MessageType_optional __swiftcall SecureCloudUpgradeMessage.MessageType.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  if (rawValue == 2)
    v2 = 1;
  else
    v2 = 2;
  if (rawValue == 1)
    v2 = 0;
  *v1 = v2;
  return (ActivitySharingClient::SecureCloudUpgradeMessage::MessageType_optional)rawValue;
}

uint64_t SecureCloudUpgradeMessage.MessageType.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 2;
  else
    return 1;
}

BOOL sub_235E99AF8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_235E99B10()
{
  sub_235EE6154();
  sub_235EE6160();
  return sub_235EE616C();
}

uint64_t sub_235E99B5C()
{
  return sub_235EE6160();
}

uint64_t sub_235E99B90()
{
  sub_235EE6154();
  sub_235EE6160();
  return sub_235EE616C();
}

_QWORD *sub_235E99BD8@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 2)
    v2 = 1;
  else
    v2 = 2;
  if (*result == 1)
    v3 = 0;
  else
    v3 = v2;
  *a2 = v3;
  return result;
}

void sub_235E99BF8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  v2 = 1;
  if (*v1)
    v2 = 2;
  *a1 = v2;
}

uint64_t sub_235E99C10()
{
  sub_235E9B014();
  return sub_235EE5DE8();
}

uint64_t sub_235E99C6C()
{
  sub_235E9B014();
  return sub_235EE5DB8();
}

uint64_t SecureCloudUpgradeMessage.buildNumber.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SecureCloudUpgradeMessage.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SecureCloudUpgradeMessage() + 20);
  v4 = sub_235EE5B0C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for SecureCloudUpgradeMessage()
{
  uint64_t result;

  result = qword_25429CC10;
  if (!qword_25429CC10)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t SecureCloudUpgradeMessage.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessage() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SecureCloudUpgradeMessage.messageType.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SecureCloudUpgradeMessage();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 28));
  return result;
}

id SecureCloudUpgradeMessage.secureCloudShareItem.getter()
{
  uint64_t v0;

  return *(id *)(v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessage() + 32));
}

uint64_t SecureCloudUpgradeMessage.upgradeToken.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessage() + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SecureCloudUpgradeMessage.version.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessage() + 40));
}

uint64_t SecureCloudUpgradeMessage.init(buildNumber:date:messageType:secureCloudShareItem:upgradeToken:version:identifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11)
{
  char v16;
  int *v17;
  char *v18;
  uint64_t v19;
  uint64_t result;
  _QWORD *v21;
  _QWORD *v22;

  v16 = *a4;
  *a9 = a1;
  a9[1] = a2;
  v17 = (int *)type metadata accessor for SecureCloudUpgradeMessage();
  v18 = (char *)a9 + v17[5];
  v19 = sub_235EE5B0C();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18, a3, v19);
  v21 = (_QWORD *)((char *)a9 + v17[6]);
  *v21 = a10;
  v21[1] = a11;
  *((_BYTE *)a9 + v17[7]) = v16;
  v22 = (_QWORD *)((char *)a9 + v17[9]);
  *v22 = a6;
  v22[1] = a7;
  *(_QWORD *)((char *)a9 + v17[10]) = a8;
  *(_QWORD *)((char *)a9 + v17[8]) = a5;
  return result;
}

uint64_t SecureCloudUpgradeMessage.protobuf()()
{
  type metadata accessor for SecureCloudUpgradeMessageProtobuf();
  sub_235E9A754(&qword_25638B810, (uint64_t)&protocol conformance descriptor for SecureCloudUpgradeMessageProtobuf);
  return sub_235EE5C68();
}

uint64_t sub_235E99F94(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  _BYTE *v30;

  v5 = *a2;
  v4 = a2[1];
  v6 = (int *)type metadata accessor for SecureCloudUpgradeMessageProtobuf();
  v7 = (_QWORD *)(a1 + v6[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *v7 = v5;
  v7[1] = v4;
  v8 = (int *)type metadata accessor for SecureCloudUpgradeMessage();
  sub_235EE5ADC();
  v9 = a1 + v6[6];
  *(_QWORD *)v9 = v10;
  *(_BYTE *)(v9 + 8) = 0;
  v11 = (_QWORD *)((char *)a2 + v8[9]);
  v13 = *v11;
  v12 = v11[1];
  v14 = (_QWORD *)(a1 + v6[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *v14 = v13;
  v14[1] = v12;
  v15 = (_QWORD *)((char *)a2 + v8[6]);
  v17 = *v15;
  v16 = v15[1];
  v18 = (_QWORD *)(a1 + v6[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *v18 = v17;
  v18[1] = v16;
  v19 = *(_QWORD *)((char *)a2 + v8[10]);
  if ((v19 & 0x8000000000000000) != 0 || HIDWORD(v19))
  {
    result = sub_235EE6004();
    __break(1u);
  }
  else
  {
    v20 = a1 + v6[11];
    *(_DWORD *)v20 = v19;
    *(_BYTE *)(v20 + 4) = 0;
    v21 = objc_msgSend(*(id *)((char *)a2 + v8[8]), sel_codableShareItem);
    if (v21
      && (v22 = v21, v23 = objc_msgSend(v21, sel_data), v22, v23))
    {
      v24 = sub_235EE5AB8();
      v26 = v25;

      v27 = a1 + v6[9];
      result = sub_235E90940(*(_QWORD *)v27, *(_QWORD *)(v27 + 8));
      *(_QWORD *)v27 = v24;
      *(_QWORD *)(v27 + 8) = v26;
      v29 = a1 + v6[10];
      *(_QWORD *)v29 = (*((_BYTE *)a2 + v8[7]) & 1) != 0;
      *(_WORD *)(v29 + 8) = 1;
    }
    else
    {
      sub_235E9A644();
      swift_allocError();
      *v30 = 1;
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_235E9A204(uint64_t a1)
{
  uint64_t v1;

  return sub_235E99F94(a1, *(_QWORD **)(v1 + 16));
}

uint64_t SecureCloudUpgradeMessage.init(_:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t *v13;
  unint64_t v14;
  unsigned int *v15;
  uint64_t v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t result;
  _BYTE *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  unint64_t v38;
  int *v39;
  uint64_t *v40;
  uint64_t v41;
  char *v42;
  unint64_t v43;
  uint64_t v44;
  _BOOL4 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v53 = a2;
  v4 = sub_235EE5B30();
  v50 = *(_QWORD *)(v4 - 8);
  v51 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v49 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_235EE5B0C();
  v57 = *(_QWORD *)(v58 - 8);
  v6 = MEMORY[0x24BDAC7A8](v58);
  v52 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v44 - v8;
  v10 = (int *)type metadata accessor for SecureCloudUpgradeMessageProtobuf();
  sub_235EE5AD0();
  v11 = (uint64_t *)(a1 + v10[7]);
  v12 = v11[1];
  if (v12)
  {
    v48 = *v11;
    v56 = v12;
  }
  else
  {
    v48 = 0;
    v56 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = (uint64_t *)(a1 + v10[5]);
  v14 = v13[1];
  v54 = v2;
  if (v14)
  {
    v46 = *v13;
    v55 = v14;
  }
  else
  {
    v46 = 0;
    v55 = 0xE000000000000000;
  }
  v15 = (unsigned int *)(a1 + v10[11]);
  if (*((_BYTE *)v15 + 4))
    v16 = 0;
  else
    v16 = *v15;
  v47 = v16;
  v17 = (uint64_t *)(a1 + v10[9]);
  v19 = *v17;
  v18 = v17[1];
  if (v18 >> 60 == 15)
    v20 = 0;
  else
    v20 = *v17;
  if (v18 >> 60 == 15)
    v21 = 0xC000000000000000;
  else
    v21 = v17[1];
  v22 = objc_allocWithZone(MEMORY[0x24BE01F10]);
  swift_bridgeObjectRetain();
  sub_235E9083C(v19, v18);
  v23 = (void *)sub_235EE5AAC();
  sub_235E90954(v20, v21);
  v24 = objc_msgSend(v22, sel_initWithData_, v23);

  if (!v24)
    goto LABEL_21;
  v25 = objc_msgSend((id)objc_opt_self(), sel_shareItemWithCodableShareItem_, v24);
  if (!v25)
  {

LABEL_21:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_235E9A644();
    swift_allocError();
    *v28 = 1;
    swift_willThrow();
    goto LABEL_22;
  }
  v26 = v25;
  v27 = a1 + v10[10];
  if ((*(_BYTE *)(v27 + 9) & 1) == 0)
  {
    if ((*(_BYTE *)(v27 + 8) & 1) != 0)
    {
      v45 = *(_QWORD *)v27 != 0;
      goto LABEL_26;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_235E9A644();
    swift_allocError();
    *v30 = 1;
    swift_willThrow();

LABEL_22:
    sub_235E9A688(a1);
    return (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v9, v58);
  }
  v45 = 0;
LABEL_26:
  v31 = v57;
  v32 = v52;
  v33 = v58;
  (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v52, v9, v58);
  v34 = v49;
  sub_235EE5B24();
  v35 = sub_235EE5B18();
  v44 = v36;
  (*(void (**)(char *, uint64_t))(v50 + 8))(v34, v51);

  sub_235E9A688(a1);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v9, v33);
  v37 = v53;
  v38 = v55;
  *(_QWORD *)v53 = v46;
  *((_QWORD *)v37 + 1) = v38;
  v39 = (int *)type metadata accessor for SecureCloudUpgradeMessage();
  result = (*(uint64_t (**)(char *, char *, uint64_t))(v31 + 32))(&v37[v39[5]], v32, v33);
  v40 = (uint64_t *)&v37[v39[6]];
  v41 = v44;
  *v40 = v35;
  v40[1] = v41;
  v37[v39[7]] = v45;
  v42 = &v37[v39[9]];
  v43 = v56;
  *(_QWORD *)v42 = v48;
  *((_QWORD *)v42 + 1) = v43;
  *(_QWORD *)&v37[v39[10]] = v47;
  *(_QWORD *)&v37[v39[8]] = v26;
  return result;
}

unint64_t sub_235E9A644()
{
  unint64_t result;

  result = qword_25638B818;
  if (!qword_25638B818)
  {
    result = MEMORY[0x23B7E5230](&unk_235EE9BB0, &type metadata for TransportError);
    atomic_store(result, (unint64_t *)&qword_25638B818);
  }
  return result;
}

uint64_t sub_235E9A688(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SecureCloudUpgradeMessageProtobuf();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_235E9A6C8()
{
  unint64_t result;

  result = qword_25638B820;
  if (!qword_25638B820)
  {
    result = MEMORY[0x23B7E5230](&protocol conformance descriptor for SecureCloudUpgradeMessage.MessageType, &type metadata for SecureCloudUpgradeMessage.MessageType);
    atomic_store(result, (unint64_t *)&qword_25638B820);
  }
  return result;
}

uint64_t sub_235E9A70C()
{
  return sub_235E9A754(&qword_25638B810, (uint64_t)&protocol conformance descriptor for SecureCloudUpgradeMessageProtobuf);
}

uint64_t sub_235E9A730()
{
  return sub_235E9A754(&qword_25638B828, (uint64_t)&protocol conformance descriptor for SecureCloudUpgradeMessageProtobuf);
}

uint64_t sub_235E9A754(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for SecureCloudUpgradeMessageProtobuf();
    result = MEMORY[0x23B7E5230](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_235E9A794()
{
  type metadata accessor for SecureCloudUpgradeMessageProtobuf();
  sub_235E9A754(&qword_25638B810, (uint64_t)&protocol conformance descriptor for SecureCloudUpgradeMessageProtobuf);
  return sub_235EE5C68();
}

uint64_t sub_235E9A80C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return SecureCloudUpgradeMessage.init(_:)(a1, a2);
}

_QWORD *initializeBufferWithCopyOfBuffer for SecureCloudUpgradeMessage(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_235EE5B0C();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = a3[7];
    v15 = (_QWORD *)((char *)v4 + v13);
    v16 = (_QWORD *)((char *)a2 + v13);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    *((_BYTE *)v4 + v14) = *((_BYTE *)a2 + v14);
    v18 = a3[8];
    v19 = a3[9];
    v20 = *(void **)((char *)a2 + v18);
    *(_QWORD *)((char *)v4 + v18) = v20;
    v21 = (_QWORD *)((char *)v4 + v19);
    v22 = (_QWORD *)((char *)a2 + v19);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    *(_QWORD *)((char *)v4 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
    swift_bridgeObjectRetain();
    v24 = v20;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for SecureCloudUpgradeMessage(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_235EE5B0C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for SecureCloudUpgradeMessage(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  id v23;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_235EE5B0C();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = a3[7];
  v14 = (_QWORD *)((char *)a1 + v12);
  v15 = (_QWORD *)((char *)a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  *((_BYTE *)a1 + v13) = *((_BYTE *)a2 + v13);
  v17 = a3[8];
  v18 = a3[9];
  v19 = *(void **)((char *)a2 + v17);
  *(_QWORD *)((char *)a1 + v17) = v19;
  v20 = (_QWORD *)((char *)a1 + v18);
  v21 = (_QWORD *)((char *)a2 + v18);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  swift_bridgeObjectRetain();
  v23 = v19;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SecureCloudUpgradeMessage(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_235EE5B0C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v13 = a3[8];
  v14 = *(void **)((char *)a2 + v13);
  v15 = *(void **)((char *)a1 + v13);
  *(_QWORD *)((char *)a1 + v13) = v14;
  v16 = v14;

  v17 = a3[9];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  *v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  return a1;
}

_OWORD *initializeWithTake for SecureCloudUpgradeMessage(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_235EE5B0C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *((_BYTE *)a1 + v10) = *((_BYTE *)a2 + v10);
  v11 = a3[9];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v11) = *(_OWORD *)((char *)a2 + v11);
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  return a1;
}

_QWORD *assignWithTake for SecureCloudUpgradeMessage(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_235EE5B0C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  v16 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v17 = *(void **)((char *)a1 + v16);
  *(_QWORD *)((char *)a1 + v16) = *(_QWORD *)((char *)a2 + v16);

  v18 = a3[9];
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  v22 = *v20;
  v21 = v20[1];
  *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  return a1;
}

uint64_t getEnumTagSinglePayload for SecureCloudUpgradeMessage()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_235E9ACFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_235EE5B0C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for SecureCloudUpgradeMessage()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_235E9AD84(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_235EE5B0C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_235E9ADF8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_235EE5B0C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for SecureCloudUpgradeMessage.MessageType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SecureCloudUpgradeMessage.MessageType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_235E9AF80 + 4 * byte_235EE7205[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_235E9AFB4 + 4 * byte_235EE7200[v4]))();
}

uint64_t sub_235E9AFB4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_235E9AFBC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x235E9AFC4);
  return result;
}

uint64_t sub_235E9AFD0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x235E9AFD8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_235E9AFDC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_235E9AFE4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_235E9AFF0(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_235E9AFF8(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for SecureCloudUpgradeMessage.MessageType()
{
  return &type metadata for SecureCloudUpgradeMessage.MessageType;
}

unint64_t sub_235E9B014()
{
  unint64_t result;

  result = qword_25638B860;
  if (!qword_25638B860)
  {
    result = MEMORY[0x23B7E5230](&protocol conformance descriptor for SecureCloudUpgradeMessage.MessageType, &type metadata for SecureCloudUpgradeMessage.MessageType);
    atomic_store(result, (unint64_t *)&qword_25638B860);
  }
  return result;
}

uint64_t sub_235E9B058(uint64_t a1)
{
  return sub_235E9A204(a1);
}

uint64_t sub_235E9B06C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x656E696C636564;
  else
    v3 = 0x747065636361;
  if (v2)
    v4 = 0xE600000000000000;
  else
    v4 = 0xE700000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x656E696C636564;
  else
    v5 = 0x747065636361;
  if ((a2 & 1) != 0)
    v6 = 0xE700000000000000;
  else
    v6 = 0xE600000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_235EE60D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

ActivitySharingClient::SecureCloudPingResponseType_optional __swiftcall SecureCloudPingResponseType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  ActivitySharingClient::SecureCloudPingResponseType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_235EE604C();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t SecureCloudPingResponseType.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x656E696C636564;
  else
    return 0x747065636361;
}

uint64_t sub_235E9B1A4(char *a1, char *a2)
{
  return sub_235E9B06C(*a1, *a2);
}

unint64_t sub_235E9B1B4()
{
  unint64_t result;

  result = qword_25638B868;
  if (!qword_25638B868)
  {
    result = MEMORY[0x23B7E5230](&protocol conformance descriptor for SecureCloudPingResponseType, &type metadata for SecureCloudPingResponseType);
    atomic_store(result, (unint64_t *)&qword_25638B868);
  }
  return result;
}

uint64_t sub_235E9B1F8()
{
  sub_235EE6154();
  sub_235EE5D64();
  swift_bridgeObjectRelease();
  return sub_235EE616C();
}

uint64_t sub_235E9B274()
{
  sub_235EE5D64();
  return swift_bridgeObjectRelease();
}

uint64_t sub_235E9B2CC()
{
  sub_235EE6154();
  sub_235EE5D64();
  swift_bridgeObjectRelease();
  return sub_235EE616C();
}

ActivitySharingClient::SecureCloudPingResponseType_optional sub_235E9B344(Swift::String *a1)
{
  return SecureCloudPingResponseType.init(rawValue:)(*a1);
}

void sub_235E9B350(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x747065636361;
  if (*v1)
    v2 = 0x656E696C636564;
  v3 = 0xE600000000000000;
  if (*v1)
    v3 = 0xE700000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t storeEnumTagSinglePayload for SecureCloudPingResponseType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_235E9B3D8 + 4 * byte_235EE73F5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_235E9B40C + 4 * byte_235EE73F0[v4]))();
}

uint64_t sub_235E9B40C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_235E9B414(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x235E9B41CLL);
  return result;
}

uint64_t sub_235E9B428(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x235E9B430);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_235E9B434(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_235E9B43C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SecureCloudPingResponseType()
{
  return &type metadata for SecureCloudPingResponseType;
}

ActivitySharingClient::SecureCloudInviteResponseType_optional __swiftcall SecureCloudInviteResponseType.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 5;
  if ((unint64_t)rawValue < 5)
    v2 = rawValue;
  *v1 = v2;
  return (ActivitySharingClient::SecureCloudInviteResponseType_optional)rawValue;
}

uint64_t SecureCloudInviteResponseType.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

BOOL sub_235E9B474(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_235E9B488()
{
  sub_235EE6154();
  sub_235EE6160();
  return sub_235EE616C();
}

uint64_t sub_235E9B4CC()
{
  return sub_235EE6160();
}

uint64_t sub_235E9B4F4()
{
  sub_235EE6154();
  sub_235EE6160();
  return sub_235EE616C();
}

ActivitySharingClient::SecureCloudInviteResponseType_optional sub_235E9B534(Swift::Int *a1)
{
  return SecureCloudInviteResponseType.init(rawValue:)(*a1);
}

void sub_235E9B53C(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t SecureCloudInviteResponse.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_235EE5B0C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t SecureCloudInviteResponse.handshakeToken.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteResponse() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for SecureCloudInviteResponse()
{
  uint64_t result;

  result = qword_25429CBA8;
  if (!qword_25429CBA8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t SecureCloudInviteResponse.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteResponse() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SecureCloudInviteResponse.buildNumber.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteResponse() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SecureCloudInviteResponse.type.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SecureCloudInviteResponse();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 32));
  return result;
}

id SecureCloudInviteResponse.userInfo.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;

  v3 = v1 + *(int *)(type metadata accessor for SecureCloudInviteResponse() + 36);
  v4 = *(void **)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(void **)(v3 + 24);
  v8 = *(void **)(v3 + 32);
  *a1 = *(_QWORD *)v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  return sub_235E9B6E4(v4, v5, v6, v7, v8);
}

id sub_235E9B6E4(id result, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  id v7;
  id v8;
  id v9;

  if (result)
  {
    v9 = result;
    swift_bridgeObjectRetain();
    v7 = a4;
    v8 = a5;
    return v9;
  }
  return result;
}

uint64_t SecureCloudInviteResponse.version.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteResponse() + 40));
}

__n128 SecureCloudInviteResponse.init(date:handshakeToken:buildNumber:type:userInfo:version:identifier:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, __int128 *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  char v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  __n128 result;
  __n128 v26;
  __int128 v27;

  v17 = *a6;
  v26 = (__n128)a7[1];
  v27 = *a7;
  v18 = *((_QWORD *)a7 + 4);
  v19 = sub_235EE5B0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a9, a1, v19);
  v20 = (int *)type metadata accessor for SecureCloudInviteResponse();
  v21 = (_QWORD *)(a9 + v20[5]);
  *v21 = a2;
  v21[1] = a3;
  v22 = (_QWORD *)(a9 + v20[6]);
  *v22 = a10;
  v22[1] = a11;
  v23 = (_QWORD *)(a9 + v20[7]);
  *v23 = a4;
  v23[1] = a5;
  *(_BYTE *)(a9 + v20[8]) = v17;
  v24 = a9 + v20[9];
  result = v26;
  *(_OWORD *)v24 = v27;
  *(__n128 *)(v24 + 16) = v26;
  *(_QWORD *)(v24 + 32) = v18;
  *(_QWORD *)(a9 + v20[10]) = a8;
  return result;
}

uint64_t SecureCloudInviteResponse.protobuf()()
{
  type metadata accessor for SecureCloudInviteResponseProtobuf();
  sub_235E930EC(&qword_25638B870, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudInviteResponseProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudInviteResponseProtobuf);
  return sub_235EE5C68();
}

void *sub_235E9B8B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  void *result;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  void *v53;

  v47 = type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  v4 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  v46 = (uint64_t)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_235EE5ADC();
  v7 = v6;
  v8 = (int *)type metadata accessor for SecureCloudInviteResponseProtobuf();
  v9 = a1 + v8[5];
  *(_QWORD *)v9 = v7;
  *(_BYTE *)(v9 + 8) = 0;
  v10 = (int *)type metadata accessor for SecureCloudInviteResponse();
  v11 = (uint64_t *)(a2 + v10[5]);
  v13 = *v11;
  v12 = v11[1];
  v14 = (_QWORD *)(a1 + v8[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *v14 = v13;
  v14[1] = v12;
  v15 = (uint64_t *)(a2 + v10[6]);
  v17 = *v15;
  v16 = v15[1];
  v18 = (_QWORD *)(a1 + v8[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *v18 = v17;
  v18[1] = v16;
  v19 = (uint64_t *)(a2 + v10[7]);
  v21 = *v19;
  v20 = v19[1];
  v22 = (_QWORD *)(a1 + v8[8]);
  swift_bridgeObjectRetain();
  v23 = swift_bridgeObjectRelease();
  *v22 = v21;
  v22[1] = v20;
  v24 = a2 + v10[9];
  v25 = *(void **)v24;
  if (*(_QWORD *)v24)
  {
    v39 = a1;
    v40 = v4;
    v41 = &v38;
    v26 = *(_QWORD *)(v24 + 8);
    v27 = *(_QWORD *)(v24 + 16);
    v28 = *(void **)(v24 + 24);
    v29 = *(void **)(v24 + 32);
    v49 = v25;
    v50 = v26;
    v42 = v26;
    v51 = v27;
    v52 = v28;
    v53 = v29;
    MEMORY[0x24BDAC7A8](v23);
    sub_235E930EC(&qword_25638B6C8, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudInviteUserInfoProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudInviteUserInfoProtobuf);
    v30 = v25;
    v43 = v27;
    swift_bridgeObjectRetain();
    v44 = v28;
    v31 = v28;
    v45 = v29;
    v32 = v29;
    v33 = v48;
    sub_235EE5C68();
    if (v33)
      return sub_235E9C128(v25, v42, v43, v44, v45);
    a1 = v39;
    v35 = v39 + v8[10];
    sub_235E9917C(v35);
    sub_235E95A8C(v46, v35);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v40 + 56))(v35, 0, 1, v47);
    sub_235E9C128(v25, v42, v43, v44, v45);
  }
  v36 = *(_QWORD *)(a2 + v10[10]);
  if ((v36 & 0x8000000000000000) == 0 && !HIDWORD(v36))
  {
    v37 = a1 + v8[11];
    *(_DWORD *)v37 = v36;
    *(_BYTE *)(v37 + 4) = 0;
    __asm { BR              X10 }
  }
  result = (void *)sub_235EE6004();
  __break(1u);
  return result;
}

void *sub_235E9BC68(uint64_t a1)
{
  uint64_t v1;

  return sub_235E9B8B8(a1, *(_QWORD *)(v1 + 16));
}

int *SecureCloudInviteResponse.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int *v15;
  uint64_t v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t *v19;
  unint64_t v20;
  uint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(char *, uint64_t, int *);
  int v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  unsigned int *v38;
  uint64_t v39;
  _BYTE *v40;
  unint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  int *result;
  uint64_t v45;
  _QWORD *v46;
  unint64_t v47;
  _QWORD *v48;
  unint64_t v49;
  _QWORD *v50;
  unint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD v66[5];
  uint64_t v67;

  v53 = a2;
  v4 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  v5 = *((_QWORD *)v4 - 1);
  MEMORY[0x24BDAC7A8](v4);
  v54 = (uint64_t)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638B6C0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v55 = (uint64_t)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v53 - v10;
  v12 = sub_235EE5B0C();
  v63 = *(_QWORD *)(v12 - 8);
  v64 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (int *)type metadata accessor for SecureCloudInviteResponseProtobuf();
  v62 = v14;
  sub_235EE5AD0();
  v16 = a1;
  v17 = (uint64_t *)(a1 + v15[6]);
  v18 = v17[1];
  v67 = v2;
  if (v18)
  {
    v58 = *v17;
    v61 = v18;
  }
  else
  {
    v58 = 0;
    v61 = 0xE000000000000000;
  }
  v19 = (uint64_t *)(a1 + v15[7]);
  v20 = v19[1];
  if (v20)
  {
    v57 = *v19;
    v60 = v20;
  }
  else
  {
    v57 = 0;
    v60 = 0xE000000000000000;
  }
  v21 = (uint64_t *)(v16 + v15[8]);
  v22 = v21[1];
  if (v22)
  {
    v56 = *v21;
    v59 = v22;
  }
  else
  {
    v56 = 0;
    v59 = 0xE000000000000000;
  }
  v23 = v15[10];
  v65 = v16;
  v24 = v16 + v23;
  sub_235E95A44(v16 + v23, (uint64_t)v11);
  v25 = *(uint64_t (**)(char *, uint64_t, int *))(v5 + 48);
  v26 = v25(v11, 1, v4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_235E9917C((uint64_t)v11);
  if (v26 == 1)
  {
    v27 = 0;
    v28 = 0;
    v29 = 0;
    v30 = 0;
    v31 = 0;
  }
  else
  {
    v32 = v55;
    sub_235E95A44(v24, v55);
    v33 = v25((char *)v32, 1, v4);
    v34 = v67;
    v35 = v54;
    if (v33 == 1)
    {
      sub_235EE5B84();
      *(_OWORD *)(v35 + v4[5]) = xmmword_235EE6E80;
      *(_OWORD *)(v35 + v4[6]) = xmmword_235EE6E80;
      *(_OWORD *)(v35 + v4[7]) = xmmword_235EE6E80;
      v36 = (_QWORD *)(v35 + v4[8]);
      *v36 = 0;
      v36[1] = 0;
      sub_235E9917C(v32);
    }
    else
    {
      sub_235E95A8C(v32, v54);
    }
    SecureCloudInviteUserInfo.init(_:)(v35, v66);
    if (v34)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v37 = v65;
      goto LABEL_25;
    }
    v27 = (void *)v66[0];
    v28 = v66[1];
    v29 = v66[2];
    v30 = (void *)v66[3];
    v31 = (void *)v66[4];
  }
  v38 = (unsigned int *)(v65 + v15[11]);
  if (*((_BYTE *)v38 + 4))
    v39 = 0;
  else
    v39 = *v38;
  v40 = (_BYTE *)(v65 + v15[9]);
  if ((v40[9] & 1) == 0)
  {
    if ((v40[8] & 1) != 0)
    {
      v41 = 0x403010200uLL >> (8 * *v40);
      goto LABEL_27;
    }
    v42 = v65;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_235E9A644();
    swift_allocError();
    *v43 = 1;
    swift_willThrow();
    sub_235E9C128(v27, v28, v29, v30, v31);
    v37 = v42;
LABEL_25:
    sub_235E9C0EC(v37);
    return (int *)(*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v62, v64);
  }
  LOBYTE(v41) = 0;
LABEL_27:
  v45 = v53;
  sub_235E9C0EC(v65);
  (*(void (**)(uint64_t, char *, uint64_t))(v63 + 32))(v45, v62, v64);
  result = (int *)type metadata accessor for SecureCloudInviteResponse();
  v46 = (_QWORD *)(v45 + result[5]);
  v47 = v61;
  *v46 = v58;
  v46[1] = v47;
  v48 = (_QWORD *)(v45 + result[6]);
  v49 = v60;
  *v48 = v57;
  v48[1] = v49;
  v50 = (_QWORD *)(v45 + result[7]);
  v51 = v59;
  *v50 = v56;
  v50[1] = v51;
  *(_BYTE *)(v45 + result[8]) = v41;
  v52 = (_QWORD *)(v45 + result[9]);
  *v52 = v27;
  v52[1] = v28;
  v52[2] = v29;
  v52[3] = v30;
  v52[4] = v31;
  *(_QWORD *)(v45 + result[10]) = v39;
  return result;
}

uint64_t sub_235E9C0EC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SecureCloudInviteResponseProtobuf();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_235E9C128(void *result, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  if (result)
  {

    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_235E9C170()
{
  unint64_t result;

  result = qword_25638B878;
  if (!qword_25638B878)
  {
    result = MEMORY[0x23B7E5230](&protocol conformance descriptor for SecureCloudInviteResponseType, &type metadata for SecureCloudInviteResponseType);
    atomic_store(result, (unint64_t *)&qword_25638B878);
  }
  return result;
}

uint64_t sub_235E9C1B4()
{
  return sub_235E930EC(&qword_25638B870, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudInviteResponseProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudInviteResponseProtobuf);
}

uint64_t sub_235E9C1E0()
{
  return sub_235E930EC(&qword_25638B880, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudInviteResponseProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudInviteResponseProtobuf);
}

uint64_t sub_235E9C20C()
{
  type metadata accessor for SecureCloudInviteResponseProtobuf();
  sub_235E930EC(&qword_25638B870, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudInviteResponseProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudInviteResponseProtobuf);
  return sub_235EE5C68();
}

int *sub_235E9C28C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return SecureCloudInviteResponse.init(_:)(a1, a2);
}

uint64_t getEnumTagSinglePayload for SecureCloudInviteResponseType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SecureCloudInviteResponseType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_235E9C37C + 4 * byte_235EE74FA[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_235E9C3B0 + 4 * byte_235EE74F5[v4]))();
}

uint64_t sub_235E9C3B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_235E9C3B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x235E9C3C0);
  return result;
}

uint64_t sub_235E9C3CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x235E9C3D4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_235E9C3D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_235E9C3E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_235E9C3EC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for SecureCloudInviteResponseType()
{
  return &type metadata for SecureCloudInviteResponseType;
}

_QWORD *initializeBufferWithCopyOfBuffer for SecureCloudInviteResponse(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  __int128 v33;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v32 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v32 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_235EE5B0C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (_QWORD *)((char *)a1 + v8);
    v11 = (_QWORD *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (_QWORD *)((char *)a1 + v9);
    v14 = (_QWORD *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[7];
    v17 = a3[8];
    v18 = (_QWORD *)((char *)a1 + v16);
    v19 = (_QWORD *)((char *)a2 + v16);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    *((_BYTE *)a1 + v17) = *((_BYTE *)a2 + v17);
    v21 = a3[9];
    v22 = (_QWORD *)((char *)a1 + v21);
    v23 = (char *)a2 + v21;
    v24 = *(void **)((char *)a2 + v21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v24)
    {
      v25 = *((_QWORD *)v23 + 1);
      v26 = *((_QWORD *)v23 + 2);
      *v22 = v24;
      v22[1] = v25;
      v27 = (void *)*((_QWORD *)v23 + 3);
      v28 = (void *)*((_QWORD *)v23 + 4);
      v22[2] = v26;
      v22[3] = v27;
      v22[4] = v28;
      v29 = v24;
      swift_bridgeObjectRetain();
      v30 = v27;
      v31 = v28;
    }
    else
    {
      v33 = *((_OWORD *)v23 + 1);
      *(_OWORD *)v22 = *(_OWORD *)v23;
      *((_OWORD *)v22 + 1) = v33;
      v22[4] = *((_QWORD *)v23 + 4);
    }
    *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  }
  return a1;
}

void destroy for SecureCloudInviteResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  id *v5;

  v4 = sub_235EE5B0C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = (id *)(a1 + *(int *)(a2 + 36));
  if (*v5)
  {

    swift_bridgeObjectRelease();
  }
}

uint64_t initializeWithCopy for SecureCloudInviteResponse(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  __int128 v31;

  v6 = sub_235EE5B0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v15);
  v18 = (_QWORD *)(a2 + v15);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  *(_BYTE *)(a1 + v16) = *(_BYTE *)(a2 + v16);
  v20 = a3[9];
  v21 = (_QWORD *)(a1 + v20);
  v22 = a2 + v20;
  v23 = *(void **)(a2 + v20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v23)
  {
    v24 = *(_QWORD *)(v22 + 8);
    v25 = *(_QWORD *)(v22 + 16);
    *v21 = v23;
    v21[1] = v24;
    v26 = *(void **)(v22 + 24);
    v27 = *(void **)(v22 + 32);
    v21[2] = v25;
    v21[3] = v26;
    v21[4] = v27;
    v28 = v23;
    swift_bridgeObjectRetain();
    v29 = v26;
    v30 = v27;
  }
  else
  {
    v31 = *(_OWORD *)(v22 + 16);
    *(_OWORD *)v21 = *(_OWORD *)v22;
    *((_OWORD *)v21 + 1) = v31;
    v21[4] = *(_QWORD *)(v22 + 32);
  }
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  return a1;
}

uint64_t assignWithCopy for SecureCloudInviteResponse(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  __int128 *v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;

  v6 = sub_235EE5B0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v16 = a3[9];
  v17 = a1 + v16;
  v18 = (__int128 *)(a2 + v16);
  v19 = *(void **)(a1 + v16);
  v20 = *(void **)(a2 + v16);
  if (v19)
  {
    if (v20)
    {
      *(_QWORD *)v17 = v20;
      v21 = v20;

      *(_QWORD *)(v17 + 8) = *((_QWORD *)v18 + 1);
      *(_QWORD *)(v17 + 16) = *((_QWORD *)v18 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v22 = (void *)*((_QWORD *)v18 + 3);
      v23 = *(void **)(v17 + 24);
      *(_QWORD *)(v17 + 24) = v22;
      v24 = v22;

      v25 = (void *)*((_QWORD *)v18 + 4);
      v26 = *(void **)(v17 + 32);
      *(_QWORD *)(v17 + 32) = v25;
      v27 = v25;

    }
    else
    {
      sub_235E9C8CC((id *)v17);
      v33 = *((_QWORD *)v18 + 4);
      v34 = v18[1];
      *(_OWORD *)v17 = *v18;
      *(_OWORD *)(v17 + 16) = v34;
      *(_QWORD *)(v17 + 32) = v33;
    }
  }
  else if (v20)
  {
    *(_QWORD *)v17 = v20;
    *(_QWORD *)(v17 + 8) = *((_QWORD *)v18 + 1);
    *(_QWORD *)(v17 + 16) = *((_QWORD *)v18 + 2);
    v28 = (void *)*((_QWORD *)v18 + 3);
    *(_QWORD *)(v17 + 24) = v28;
    v29 = (void *)*((_QWORD *)v18 + 4);
    *(_QWORD *)(v17 + 32) = v29;
    v30 = v20;
    swift_bridgeObjectRetain();
    v31 = v28;
    v32 = v29;
  }
  else
  {
    v35 = *v18;
    v36 = v18[1];
    *(_QWORD *)(v17 + 32) = *((_QWORD *)v18 + 4);
    *(_OWORD *)v17 = v35;
    *(_OWORD *)(v17 + 16) = v36;
  }
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  return a1;
}

id *sub_235E9C8CC(id *a1)
{
  destroy for SecureCloudInviteUserInfo(a1);
  return a1;
}

uint64_t initializeWithTake for SecureCloudInviteResponse(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;

  v6 = sub_235EE5B0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v9 = a3[9];
  v10 = a3[10];
  v11 = a1 + v9;
  v12 = a2 + v9;
  v13 = *(_OWORD *)(v12 + 16);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *(_OWORD *)(v11 + 16) = v13;
  *(_QWORD *)(v11 + 32) = *(_QWORD *)(v12 + 32);
  *(_QWORD *)(a1 + v10) = *(_QWORD *)(a2 + v10);
  return a1;
}

uint64_t assignWithTake for SecureCloudInviteResponse(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  void *v28;
  __int128 v29;

  v6 = sub_235EE5B0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[7];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (uint64_t *)(a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  v22 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = *(void **)(a1 + v22);
  if (!v25)
    goto LABEL_5;
  if (!*(_QWORD *)v24)
  {
    sub_235E9C8CC((id *)v23);
LABEL_5:
    v29 = *(_OWORD *)(v24 + 16);
    *(_OWORD *)v23 = *(_OWORD *)v24;
    *(_OWORD *)(v23 + 16) = v29;
    *(_QWORD *)(v23 + 32) = *(_QWORD *)(v24 + 32);
    goto LABEL_6;
  }
  *(_QWORD *)v23 = *(_QWORD *)v24;

  v26 = *(_QWORD *)(v24 + 16);
  *(_QWORD *)(v23 + 8) = *(_QWORD *)(v24 + 8);
  *(_QWORD *)(v23 + 16) = v26;
  swift_bridgeObjectRelease();
  v27 = *(void **)(v23 + 24);
  *(_QWORD *)(v23 + 24) = *(_QWORD *)(v24 + 24);

  v28 = *(void **)(v23 + 32);
  *(_QWORD *)(v23 + 32) = *(_QWORD *)(v24 + 32);

LABEL_6:
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  return a1;
}

uint64_t getEnumTagSinglePayload for SecureCloudInviteResponse()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_235E9CAD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_235EE5B0C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for SecureCloudInviteResponse()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_235E9CB64(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_235EE5B0C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_235E9CBE0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_235EE5B0C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_235E9CC78(uint64_t a1)
{
  return sub_235E9BC68(a1);
}

uint64_t SecureCloudInviteUserInfo.protobuf()()
{
  type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  sub_235E9D2F4(&qword_25638B6C8, (uint64_t)&protocol conformance descriptor for SecureCloudInviteUserInfoProtobuf);
  return sub_235EE5C68();
}

uint64_t SecureCloudInviteUserInfo.init(_:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  int *v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  void *v20;
  id v21;
  uint64_t *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  id v27;
  void *v28;
  id v29;
  uint64_t *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  uint64_t result;
  _BYTE *v40;
  _BYTE *v41;
  _BYTE *v42;
  uint64_t v43;
  _QWORD *v44;
  void *v45;
  unint64_t v46;

  v4 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  v5 = (uint64_t *)(a1 + v4[8]);
  v6 = *v5;
  v7 = v5[1];
  v8 = *v5 & 0xFFFFFFFFFFFFLL;
  if (v7)
    v9 = v8;
  else
    v9 = 0;
  if (v7)
    v10 = v7;
  else
    v10 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0)
    v11 = v9;
  v44 = a2;
  if (v11)
  {
    if (v7)
      v12 = v6;
    else
      v12 = 0;
    v43 = v12;
    if (v7)
      v13 = v7;
    else
      v13 = 0xE000000000000000;
    v46 = v13;
    swift_bridgeObjectRetain();
  }
  else
  {
    v43 = 0;
    v46 = 0;
  }
  v14 = (uint64_t *)(a1 + v4[5]);
  v15 = *v14;
  v16 = v14[1];
  if (v16 >> 60 == 15)
    v17 = 0;
  else
    v17 = *v14;
  if (v16 >> 60 == 15)
    v18 = 0xC000000000000000;
  else
    v18 = v14[1];
  v19 = objc_allocWithZone(MEMORY[0x24BE01EF8]);
  sub_235E9083C(v15, v16);
  v20 = (void *)sub_235EE5AAC();
  sub_235E90954(v17, v18);
  v21 = objc_msgSend(v19, sel_initWithData_, v20);

  if (v21)
  {
    v45 = v21;
    v22 = (uint64_t *)(a1 + v4[7]);
    v23 = *v22;
    v24 = v22[1];
    if (v24 >> 60 == 15)
      v25 = 0;
    else
      v25 = *v22;
    if (v24 >> 60 == 15)
      v26 = 0xC000000000000000;
    else
      v26 = v22[1];
    v27 = objc_allocWithZone(MEMORY[0x24BE01F18]);
    sub_235E9083C(v23, v24);
    v28 = (void *)sub_235EE5AAC();
    sub_235E90954(v25, v26);
    v29 = objc_msgSend(v27, sel_initWithData_, v28);

    if (v29)
    {
      v30 = (uint64_t *)(a1 + v4[6]);
      v31 = *v30;
      v32 = v30[1];
      if (v32 >> 60 == 15)
        v33 = 0;
      else
        v33 = *v30;
      if (v32 >> 60 == 15)
        v34 = 0xC000000000000000;
      else
        v34 = v30[1];
      v35 = objc_allocWithZone(MEMORY[0x24BE01F10]);
      sub_235E9083C(v31, v32);
      v36 = (void *)sub_235EE5AAC();
      sub_235E90954(v33, v34);
      v37 = objc_msgSend(v35, sel_initWithData_, v36);

      if (v37)
      {
        v38 = objc_msgSend((id)objc_opt_self(), sel_shareItemWithCodableShareItem_, v37);

        if (v38)
        {
          result = sub_235E95D2C(a1);
          *v44 = v45;
          v44[1] = v43;
          v44[2] = v46;
          v44[3] = v29;
          v44[4] = v38;
          return result;
        }
      }
      swift_bridgeObjectRelease();
      sub_235E9A644();
      swift_allocError();
      *v42 = 1;
      swift_willThrow();

    }
    else
    {
      swift_bridgeObjectRelease();
      sub_235E9A644();
      swift_allocError();
      *v41 = 1;
      swift_willThrow();
    }

  }
  else
  {
    swift_bridgeObjectRelease();
    sub_235E9A644();
    swift_allocError();
    *v40 = 1;
    swift_willThrow();
  }
  return sub_235E95D2C(a1);
}

id SecureCloudInviteUserInfo.activityDataPreview.getter()
{
  id *v0;

  return *v0;
}

uint64_t SecureCloudInviteUserInfo.cloudKitAddress.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

id SecureCloudInviteUserInfo.legacyShareLocations.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 24);
}

id SecureCloudInviteUserInfo.secureCloudShareItem.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 32);
}

uint64_t SecureCloudInviteUserInfo.init(activityDataPreview:cloudKitAddress:legacyShareLocations:secureCloudShareItem:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

id sub_235E9D0A8(uint64_t a1, uint64_t a2)
{
  id result;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _BYTE *v28;
  _BYTE *v29;

  result = objc_msgSend(*(id *)a2, sel_data);
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  v5 = result;
  v6 = sub_235EE5AB8();
  v8 = v7;

  v9 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  v10 = a1 + v9[5];
  sub_235E90940(*(_QWORD *)v10, *(_QWORD *)(v10 + 8));
  *(_QWORD *)v10 = v6;
  *(_QWORD *)(v10 + 8) = v8;
  result = objc_msgSend(*(id *)(a2 + 24), sel_data);
  if (!result)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  v11 = result;
  v12 = sub_235EE5AB8();
  v14 = v13;

  v15 = a1 + v9[7];
  sub_235E90940(*(_QWORD *)v15, *(_QWORD *)(v15 + 8));
  *(_QWORD *)v15 = v12;
  *(_QWORD *)(v15 + 8) = v14;
  v16 = objc_msgSend(*(id *)(a2 + 32), sel_codableShareItem);
  if (v16 && (v17 = v16, v18 = objc_msgSend(v16, sel_data), v17, v18))
  {
    v19 = sub_235EE5AB8();
    v21 = v20;

    v22 = (uint64_t *)(a1 + v9[6]);
    v23 = *v22;
    v24 = v22[1];
    sub_235E90998(v19, v21);
    sub_235E90940(v23, v24);
    *v22 = v19;
    v22[1] = v21;
    v25 = *(_QWORD *)(a2 + 16);
    if (v25)
    {
      v26 = *(_QWORD *)(a2 + 8);
      v27 = (_QWORD *)(a1 + v9[8]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      result = (id)sub_235E90954(v19, v21);
      *v27 = v26;
      v27[1] = v25;
    }
    else
    {
      sub_235E9A644();
      swift_allocError();
      *v29 = 1;
      swift_willThrow();
      return (id)sub_235E90954(v19, v21);
    }
  }
  else
  {
    sub_235E9A644();
    swift_allocError();
    *v28 = 1;
    return (id)swift_willThrow();
  }
  return result;
}

uint64_t sub_235E9D2AC()
{
  return sub_235E9D2F4(&qword_25638B6C8, (uint64_t)&protocol conformance descriptor for SecureCloudInviteUserInfoProtobuf);
}

uint64_t sub_235E9D2D0()
{
  return sub_235E9D2F4(&qword_25638B8B8, (uint64_t)&protocol conformance descriptor for SecureCloudInviteUserInfoProtobuf);
}

uint64_t sub_235E9D2F4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for SecureCloudInviteUserInfoProtobuf();
    result = MEMORY[0x23B7E5230](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_235E9D334()
{
  type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  sub_235E9D2F4(&qword_25638B6C8, (uint64_t)&protocol conformance descriptor for SecureCloudInviteUserInfoProtobuf);
  return sub_235EE5C68();
}

uint64_t sub_235E9D3BC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return SecureCloudInviteUserInfo.init(_:)(a1, a2);
}

uint64_t initializeBufferWithCopyOfBuffer for SecureCloudInviteUserInfo(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

void destroy for SecureCloudInviteUserInfo(id *a1)
{

  swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for SecureCloudInviteUserInfo(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(void **)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v5;
  v6 = *(void **)(a2 + 32);
  a1[4] = v6;
  v7 = v3;
  swift_bridgeObjectRetain();
  v8 = v5;
  v9 = v6;
  return a1;
}

uint64_t assignWithCopy for SecureCloudInviteUserInfo(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(void **)(a2 + 24);
  v8 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 32);
  v11 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v10;
  v12 = v10;

  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for SecureCloudInviteUserInfo(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  v6 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);

  return a1;
}

uint64_t getEnumTagSinglePayload for SecureCloudInviteUserInfo(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SecureCloudInviteUserInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SecureCloudInviteUserInfo()
{
  return &type metadata for SecureCloudInviteUserInfo;
}

id sub_235E9D62C(uint64_t a1)
{
  return sub_235E99A10(a1);
}

uint64_t SecureCloudPingResponse.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SecureCloudPingResponse.requestIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

ActivitySharingClient::SecureCloudPingResponse __swiftcall SecureCloudPingResponse.init(requestIdentifier:identifier:)(Swift::String requestIdentifier, Swift::String identifier)
{
  Swift::String *v2;
  ActivitySharingClient::SecureCloudPingResponse result;

  *v2 = identifier;
  v2[1] = requestIdentifier;
  result.requestIdentifier = identifier;
  result.identifier = requestIdentifier;
  return result;
}

uint64_t SecureCloudPingResponse.protobuf()()
{
  type metadata accessor for SecureCloudPingResponseProtobuf();
  sub_235E9D910(&qword_25638B8F0, (uint64_t)&protocol conformance descriptor for SecureCloudPingResponseProtobuf);
  return sub_235EE5C68();
}

uint64_t sub_235E9D728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t result;

  v10 = type metadata accessor for SecureCloudPingResponseProtobuf();
  v11 = (_QWORD *)(a1 + *(int *)(v10 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *v11 = a2;
  v11[1] = a3;
  v12 = (_QWORD *)(a1 + *(int *)(v10 + 24));
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *v12 = a4;
  v12[1] = a5;
  return result;
}

uint64_t sub_235E9D7C0(uint64_t a1)
{
  uint64_t *v1;

  return sub_235E9D728(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t SecureCloudPingResponse.init(_:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;

  v4 = type metadata accessor for SecureCloudPingResponseProtobuf();
  v5 = (uint64_t *)(a1 + *(int *)(v4 + 20));
  if (v5[1])
  {
    v6 = *v5;
    v7 = v5[1];
  }
  else
  {
    v6 = 0;
    v7 = 0xE000000000000000;
  }
  v8 = (uint64_t *)(a1 + *(int *)(v4 + 24));
  if (v8[1])
  {
    v9 = *v8;
    v10 = v8[1];
  }
  else
  {
    v9 = 0;
    v10 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = sub_235E9D88C(a1);
  *a2 = v6;
  a2[1] = v7;
  a2[2] = v9;
  a2[3] = v10;
  return result;
}

uint64_t sub_235E9D88C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SecureCloudPingResponseProtobuf();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_235E9D8C8()
{
  return sub_235E9D910(&qword_25638B8F0, (uint64_t)&protocol conformance descriptor for SecureCloudPingResponseProtobuf);
}

uint64_t sub_235E9D8EC()
{
  return sub_235E9D910(&qword_25638B8F8, (uint64_t)&protocol conformance descriptor for SecureCloudPingResponseProtobuf);
}

uint64_t sub_235E9D910(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for SecureCloudPingResponseProtobuf();
    result = MEMORY[0x23B7E5230](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_235E9D950()
{
  type metadata accessor for SecureCloudPingResponseProtobuf();
  sub_235E9D910(&qword_25638B8F0, (uint64_t)&protocol conformance descriptor for SecureCloudPingResponseProtobuf);
  return sub_235EE5C68();
}

uint64_t sub_235E9D9E0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;

  v4 = type metadata accessor for SecureCloudPingResponseProtobuf();
  v5 = (uint64_t *)(a1 + *(int *)(v4 + 20));
  if (v5[1])
  {
    v6 = *v5;
    v7 = v5[1];
  }
  else
  {
    v6 = 0;
    v7 = 0xE000000000000000;
  }
  v8 = (uint64_t *)(a1 + *(int *)(v4 + 24));
  if (v8[1])
  {
    v9 = *v8;
    v10 = v8[1];
  }
  else
  {
    v9 = 0;
    v10 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = sub_235E9D88C(a1);
  *a2 = v6;
  a2[1] = v7;
  a2[2] = v9;
  a2[3] = v10;
  return result;
}

uint64_t destroy for SecureCloudPingResponse()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for SecureCloudPingResponse(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SecureCloudPingResponse(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

_QWORD *assignWithTake for SecureCloudPingResponse(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SecureCloudPingResponse(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SecureCloudPingResponse(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SecureCloudPingResponse()
{
  return &type metadata for SecureCloudPingResponse;
}

uint64_t sub_235E9DC48(uint64_t a1)
{
  return sub_235E9D7C0(a1);
}

uint64_t SecureCloudUpgradeVersion.init(rawValue:)@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = result != 1;
  return result;
}

uint64_t SecureCloudUpgradeVersion.rawValue.getter()
{
  return 1;
}

uint64_t sub_235E9DC78()
{
  return 1;
}

unint64_t sub_235E9DC84()
{
  unint64_t result;

  result = qword_25638B930;
  if (!qword_25638B930)
  {
    result = MEMORY[0x23B7E5230](&protocol conformance descriptor for SecureCloudUpgradeVersion, &type metadata for SecureCloudUpgradeVersion);
    atomic_store(result, (unint64_t *)&qword_25638B930);
  }
  return result;
}

uint64_t sub_235E9DCC8()
{
  sub_235EE6154();
  sub_235EE6160();
  return sub_235EE616C();
}

uint64_t sub_235E9DD08()
{
  return sub_235EE6160();
}

uint64_t sub_235E9DD2C()
{
  sub_235EE6154();
  sub_235EE6160();
  return sub_235EE616C();
}

_QWORD *sub_235E9DD68@<X0>(_QWORD *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 1;
  return result;
}

void sub_235E9DD7C(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_235E9DD88()
{
  sub_235E9DF28();
  return sub_235EE5DE8();
}

uint64_t sub_235E9DDE4()
{
  sub_235E9DF28();
  return sub_235EE5DB8();
}

uint64_t getEnumTagSinglePayload for SecureCloudUpgradeVersion(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for SecureCloudUpgradeVersion(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_235E9DEC4 + 4 * asc_235EE77F0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_235E9DEE4 + 4 * byte_235EE77F5[v4]))();
}

_BYTE *sub_235E9DEC4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_235E9DEE4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_235E9DEEC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_235E9DEF4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_235E9DEFC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_235E9DF04(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_235E9DF10()
{
  return 0;
}

ValueMetadata *type metadata accessor for SecureCloudUpgradeVersion()
{
  return &type metadata for SecureCloudUpgradeVersion;
}

unint64_t sub_235E9DF28()
{
  unint64_t result;

  result = qword_25638B938;
  if (!qword_25638B938)
  {
    result = MEMORY[0x23B7E5230](&protocol conformance descriptor for SecureCloudUpgradeVersion, &type metadata for SecureCloudUpgradeVersion);
    atomic_store(result, (unint64_t *)&qword_25638B938);
  }
  return result;
}

uint64_t SecureCloudWithdrawRequest.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_235EE5B0C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t SecureCloudWithdrawRequest.handshakeToken.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudWithdrawRequest() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for SecureCloudWithdrawRequest()
{
  uint64_t result;

  result = qword_25429CBB8;
  if (!qword_25429CBB8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t SecureCloudWithdrawRequest.init(date:handshakeToken:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t result;
  _QWORD *v10;

  v8 = sub_235EE5B0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a4, a1, v8);
  result = type metadata accessor for SecureCloudWithdrawRequest();
  v10 = (_QWORD *)(a4 + *(int *)(result + 20));
  *v10 = a2;
  v10[1] = a3;
  return result;
}

uint64_t SecureCloudWithdrawRequest.protobuf()()
{
  type metadata accessor for SecureCloudWithdrawRequestProtobuf();
  sub_235E9E330(&qword_25638B940, (uint64_t)&protocol conformance descriptor for SecureCloudWithdrawRequestProtobuf);
  return sub_235EE5C68();
}

uint64_t sub_235E9E0F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t result;

  sub_235EE5ADC();
  v5 = v4;
  v6 = type metadata accessor for SecureCloudWithdrawRequestProtobuf();
  v7 = a1 + *(int *)(v6 + 20);
  *(_QWORD *)v7 = v5;
  *(_BYTE *)(v7 + 8) = 0;
  v8 = (uint64_t *)(a2 + *(int *)(type metadata accessor for SecureCloudWithdrawRequest() + 20));
  v10 = *v8;
  v9 = v8[1];
  v11 = (_QWORD *)(a1 + *(int *)(v6 + 24));
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *v11 = v10;
  v11[1] = v9;
  return result;
}

uint64_t sub_235E9E190(uint64_t a1)
{
  uint64_t v1;

  return sub_235E9E0F8(a1, *(_QWORD *)(v1 + 16));
}

uint64_t SecureCloudWithdrawRequest.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t result;
  _QWORD *v13;
  uint64_t v14;

  v4 = sub_235EE5B0C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SecureCloudWithdrawRequestProtobuf();
  sub_235EE5AD0();
  v9 = (uint64_t *)(a1 + *(int *)(v8 + 24));
  if (v9[1])
  {
    v10 = *v9;
    v11 = v9[1];
  }
  else
  {
    v10 = 0;
    v11 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  sub_235E9E2AC(a1);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v7, v4);
  result = type metadata accessor for SecureCloudWithdrawRequest();
  v13 = (_QWORD *)(a2 + *(int *)(result + 20));
  *v13 = v10;
  v13[1] = v11;
  return result;
}

uint64_t sub_235E9E2AC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SecureCloudWithdrawRequestProtobuf();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_235E9E2E8()
{
  return sub_235E9E330(&qword_25638B940, (uint64_t)&protocol conformance descriptor for SecureCloudWithdrawRequestProtobuf);
}

uint64_t sub_235E9E30C()
{
  return sub_235E9E330(&qword_25638B948, (uint64_t)&protocol conformance descriptor for SecureCloudWithdrawRequestProtobuf);
}

uint64_t sub_235E9E330(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for SecureCloudWithdrawRequestProtobuf();
    result = MEMORY[0x23B7E5230](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_235E9E370()
{
  type metadata accessor for SecureCloudWithdrawRequestProtobuf();
  sub_235E9E330(&qword_25638B940, (uint64_t)&protocol conformance descriptor for SecureCloudWithdrawRequestProtobuf);
  return sub_235EE5C68();
}

uint64_t sub_235E9E3E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t result;
  _QWORD *v15;
  uint64_t v16;

  v6 = sub_235EE5B0C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for SecureCloudWithdrawRequestProtobuf();
  sub_235EE5AD0();
  v11 = (uint64_t *)(a1 + *(int *)(v10 + 24));
  if (v11[1])
  {
    v12 = *v11;
    v13 = v11[1];
  }
  else
  {
    v12 = 0;
    v13 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  sub_235E9E2AC(a1);
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(a3, v9, v6);
  v15 = (_QWORD *)(a3 + *(int *)(a2 + 20));
  *v15 = v12;
  v15[1] = v13;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SecureCloudWithdrawRequest(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_235EE5B0C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SecureCloudWithdrawRequest(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_235EE5B0C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SecureCloudWithdrawRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_235EE5B0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SecureCloudWithdrawRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_235EE5B0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for SecureCloudWithdrawRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_235EE5B0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for SecureCloudWithdrawRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_235EE5B0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SecureCloudWithdrawRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_235E9E784(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_235EE5B0C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for SecureCloudWithdrawRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_235E9E810(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_235EE5B0C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_235E9E88C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_235EE5B0C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_235E9E8FC(uint64_t a1)
{
  return sub_235E9E190(a1);
}

uint64_t TransportDispatching.register(_:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;

  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  return swift_task_switch();
}

uint64_t sub_235E9E930()
{
  uint64_t *v0;
  _QWORD *v1;

  v0[8] = (*(uint64_t (**)(uint64_t))(v0[6] + 8))(v0[5]);
  v1 = (_QWORD *)swift_task_alloc();
  v0[9] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_235E9E998;
  return sub_235EA4BC4(v0[2], v0[3], v0[4]);
}

uint64_t sub_235E9E998()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_release();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t TransportDispatching.register<A>(_:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;

  v8[8] = a7;
  v8[9] = v7;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  return swift_task_switch();
}

{
  uint64_t v7;
  _QWORD *v8;

  v8[8] = a7;
  v8[9] = v7;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  return swift_task_switch();
}

{
  uint64_t v7;
  _QWORD *v8;

  v8[8] = a7;
  v8[9] = v7;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  return swift_task_switch();
}

{
  uint64_t v7;
  _QWORD *v8;

  v8[8] = a7;
  v8[9] = v7;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  return swift_task_switch();
}

uint64_t sub_235E9EA0C()
{
  uint64_t *v0;
  _QWORD *v1;

  v0[10] = (*(uint64_t (**)(uint64_t))(v0[7] + 8))(v0[5]);
  v1 = (_QWORD *)swift_task_alloc();
  v0[11] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_235E9EED8;
  return sub_235EA4DD8(v0[2], v0[3], v0[4], v0[6], v0[8]);
}

uint64_t sub_235E9EAA4()
{
  uint64_t *v0;
  _QWORD *v1;

  v0[10] = (*(uint64_t (**)(uint64_t))(v0[7] + 8))(v0[5]);
  v1 = (_QWORD *)swift_task_alloc();
  v0[11] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_235E9EED8;
  return sub_235EA5148(v0[2], v0[3], v0[4], v0[6], v0[8]);
}

uint64_t sub_235E9EB3C()
{
  uint64_t *v0;
  _QWORD *v1;

  v0[10] = (*(uint64_t (**)(uint64_t))(v0[7] + 8))(v0[5]);
  v1 = (_QWORD *)swift_task_alloc();
  v0[11] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_235E9EED8;
  return sub_235EA5574(v0[2], v0[3], v0[4], v0[6], v0[8]);
}

uint64_t sub_235E9EBD4()
{
  uint64_t *v0;
  _QWORD *v1;

  v0[10] = (*(uint64_t (**)(uint64_t))(v0[7] + 8))(v0[5]);
  v1 = (_QWORD *)swift_task_alloc();
  v0[11] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_235E9EC48;
  return sub_235EA5A68(v0[2], v0[3], v0[4], v0[6], v0[8]);
}

uint64_t sub_235E9EC48()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_release();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t TransportDispatching.register<A, B>(_:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;

  v9[10] = v11;
  v9[11] = v8;
  v9[8] = a7;
  v9[9] = a8;
  v9[6] = a5;
  v9[7] = a6;
  v9[4] = a3;
  v9[5] = a4;
  v9[2] = a1;
  v9[3] = a2;
  return swift_task_switch();
}

{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;

  v9[10] = v11;
  v9[11] = v8;
  v9[8] = a7;
  v9[9] = a8;
  v9[6] = a5;
  v9[7] = a6;
  v9[4] = a3;
  v9[5] = a4;
  v9[2] = a1;
  v9[3] = a2;
  return swift_task_switch();
}

uint64_t sub_235E9ECC8()
{
  uint64_t *v0;
  _QWORD *v1;

  v0[12] = (*(uint64_t (**)(uint64_t))(v0[8] + 8))(v0[5]);
  v1 = (_QWORD *)swift_task_alloc();
  v0[13] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_235E9ED3C;
  return sub_235EA5D78(v0[2], v0[3], v0[4], v0[6], v0[7], v0[9], v0[10]);
}

uint64_t sub_235E9ED3C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_release();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_235E9EDBC()
{
  uint64_t *v0;
  _QWORD *v1;

  v0[12] = (*(uint64_t (**)(uint64_t))(v0[8] + 8))(v0[5]);
  v1 = (_QWORD *)swift_task_alloc();
  v0[13] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_235E9EEDC;
  return sub_235EA61F0(v0[2], v0[3], v0[4], v0[6], v0[7], v0[9], v0[10]);
}

uint64_t TransportDispatching.unregister(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_235E9EE4C()
{
  _QWORD *v0;

  v0[6] = (*(uint64_t (**)(_QWORD))(v0[4] + 8))(v0[3]);
  return swift_task_switch();
}

uint64_t sub_235E9EE94()
{
  uint64_t v0;

  sub_235EA6930(*(_QWORD *)(v0 + 16));
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t dispatch thunk of TransportDispatching.transportDispatchService.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_235E9EEE0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[16];
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for SecureCloudPingRequestProtobuf();
  MEMORY[0x24BDAC7A8](v1);
  v3 = &v7[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = v0[1];
  v8 = *v0;
  v9 = v4;
  sub_235E930EC(&qword_25638B550, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudPingRequestProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudPingRequestProtobuf);
  sub_235EE5C68();
  v5 = sub_235EE5C44();
  sub_235EA0C6C((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for SecureCloudPingRequestProtobuf);
  return v5;
}

uint64_t TransportProtobufSerializable.activitySharingTransportData()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v9 = (char *)&v11 - v8;
  (*(void (**)(uint64_t, uint64_t))(a2 + 32))(a1, a2);
  if (!v3)
  {
    swift_getAssociatedConformanceWitness();
    v2 = sub_235EE5C44();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, AssociatedTypeWitness);
  }
  return v2;
}

uint64_t sub_235E9F0EC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_235E9F100(a1, a2, a3);
}

uint64_t sub_235E9F100@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  _BYTE *v14;
  uint64_t result;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  _OWORD v19[2];
  uint64_t v20;

  v7 = sub_235EE5BA8();
  MEMORY[0x24BDAC7A8](v7);
  v8 = type metadata accessor for SecureCloudPingRequestProtobuf();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v19 - v12;
  if (a2 >> 60 == 15)
  {
    sub_235E9A644();
    swift_allocError();
    *v14 = 3;
    return swift_willThrow();
  }
  else
  {
    v20 = 0;
    memset(v19, 0, sizeof(v19));
    sub_235E90998(a1, a2);
    sub_235EE5B9C();
    sub_235E930EC(&qword_25638B550, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudPingRequestProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudPingRequestProtobuf);
    sub_235EE5C38();
    if (v3)
    {
      return sub_235E90940(a1, a2);
    }
    else
    {
      sub_235EA0C28((uint64_t)v13, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for SecureCloudPingRequestProtobuf);
      v16 = &v11[*(int *)(v8 + 20)];
      if (*((_QWORD *)v16 + 1))
      {
        v17 = *(_QWORD *)v16;
        v18 = *((_QWORD *)v16 + 1);
      }
      else
      {
        v17 = 0;
        v18 = 0xE000000000000000;
      }
      swift_bridgeObjectRetain();
      sub_235EA0C6C((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for SecureCloudPingRequestProtobuf);
      sub_235E90940(a1, a2);
      result = sub_235EA0C6C((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for SecureCloudPingRequestProtobuf);
      *a3 = v17;
      a3[1] = v18;
    }
  }
  return result;
}

uint64_t sub_235E9F308@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  _BYTE *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;

  v28 = a1;
  v5 = type metadata accessor for SecureCloudInviteRequest();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_235EE5BA8();
  MEMORY[0x24BDAC7A8](v9);
  v10 = type metadata accessor for SecureCloudInviteRequestProtobuf();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v21 - v14;
  if (a2 >> 60 == 15)
  {
    sub_235E9A644();
    swift_allocError();
    *v16 = 3;
    return swift_willThrow();
  }
  else
  {
    v22 = v5;
    v23 = v8;
    v21 = v6;
    v27 = 0;
    v25 = 0u;
    v26 = 0u;
    v18 = v28;
    sub_235E90998(v28, a2);
    sub_235EE5B9C();
    sub_235E930EC(&qword_25638B6E0, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudInviteRequestProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudInviteRequestProtobuf);
    v19 = v24;
    sub_235EE5C38();
    if (v19)
    {
      return sub_235E90940(v18, a2);
    }
    else
    {
      sub_235EA0C28((uint64_t)v15, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for SecureCloudInviteRequestProtobuf);
      v20 = (uint64_t)v23;
      SecureCloudInviteRequest.init(_:)((uint64_t)v13, (uint64_t)v23);
      sub_235E90940(v18, a2);
      sub_235EA0C6C((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for SecureCloudInviteRequestProtobuf);
      sub_235EA0BE4(v20, a3, (uint64_t (*)(_QWORD))type metadata accessor for SecureCloudInviteRequest);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v21 + 56))(a3, 0, 1, v22);
    }
  }
}

uint64_t sub_235E9F55C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  _BYTE *v16;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;

  v28 = a1;
  v5 = type metadata accessor for SecureCloudUpgradeMessage();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_235EE5BA8();
  MEMORY[0x24BDAC7A8](v9);
  v10 = type metadata accessor for SecureCloudUpgradeMessageProtobuf();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v21 - v14;
  if (a2 >> 60 == 15)
  {
    sub_235E9A644();
    swift_allocError();
    *v16 = 3;
    return swift_willThrow();
  }
  else
  {
    v22 = v5;
    v23 = v8;
    v21 = v6;
    v27 = 0;
    v25 = 0u;
    v26 = 0u;
    v18 = v28;
    sub_235E90998(v28, a2);
    sub_235EE5B9C();
    sub_235E930EC(&qword_25638B810, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudUpgradeMessageProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudUpgradeMessageProtobuf);
    v19 = v24;
    sub_235EE5C38();
    if (v19)
    {
      return sub_235E90940(v18, a2);
    }
    else
    {
      sub_235EA0C28((uint64_t)v15, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for SecureCloudUpgradeMessageProtobuf);
      v20 = v23;
      SecureCloudUpgradeMessage.init(_:)((uint64_t)v13, v23);
      sub_235E90940(v18, a2);
      sub_235EA0C6C((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for SecureCloudUpgradeMessageProtobuf);
      sub_235EA0BE4((uint64_t)v20, a3, (uint64_t (*)(_QWORD))type metadata accessor for SecureCloudUpgradeMessage);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v21 + 56))(a3, 0, 1, v22);
    }
  }
}

uint64_t sub_235E9F7B0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  _BYTE *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;

  v28 = a1;
  v5 = type metadata accessor for SecureCloudInviteResponse();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_235EE5BA8();
  MEMORY[0x24BDAC7A8](v9);
  v10 = type metadata accessor for SecureCloudInviteResponseProtobuf();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v21 - v14;
  if (a2 >> 60 == 15)
  {
    sub_235E9A644();
    swift_allocError();
    *v16 = 3;
    return swift_willThrow();
  }
  else
  {
    v22 = v5;
    v23 = v8;
    v21 = v6;
    v27 = 0;
    v25 = 0u;
    v26 = 0u;
    v18 = v28;
    sub_235E90998(v28, a2);
    sub_235EE5B9C();
    sub_235E930EC(&qword_25638B870, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudInviteResponseProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudInviteResponseProtobuf);
    v19 = v24;
    sub_235EE5C38();
    if (v19)
    {
      return sub_235E90940(v18, a2);
    }
    else
    {
      sub_235EA0C28((uint64_t)v15, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for SecureCloudInviteResponseProtobuf);
      v20 = (uint64_t)v23;
      SecureCloudInviteResponse.init(_:)((uint64_t)v13, (uint64_t)v23);
      sub_235E90940(v18, a2);
      sub_235EA0C6C((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for SecureCloudInviteResponseProtobuf);
      sub_235EA0BE4(v20, a3, (uint64_t (*)(_QWORD))type metadata accessor for SecureCloudInviteResponse);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v21 + 56))(a3, 0, 1, v22);
    }
  }
}

uint64_t sub_235E9FA04@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  _BYTE *v14;
  uint64_t result;
  _OWORD v16[3];

  v7 = sub_235EE5BA8();
  MEMORY[0x24BDAC7A8](v7);
  v8 = type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v16 - v12;
  if (a2 >> 60 == 15)
  {
    sub_235E9A644();
    swift_allocError();
    *v14 = 3;
    return swift_willThrow();
  }
  else
  {
    memset(v16, 0, 40);
    sub_235E90998(a1, a2);
    sub_235EE5B9C();
    sub_235E930EC(&qword_25638B6C8, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudInviteUserInfoProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudInviteUserInfoProtobuf);
    sub_235EE5C38();
    if (v3)
    {
      return sub_235E90940(a1, a2);
    }
    else
    {
      sub_235EA0C28((uint64_t)v13, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for SecureCloudInviteUserInfoProtobuf);
      SecureCloudInviteUserInfo.init(_:)((uint64_t)v11, v16);
      sub_235E90940(a1, a2);
      result = sub_235EA0C6C((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for SecureCloudInviteUserInfoProtobuf);
      *(_QWORD *)a3 = *(_QWORD *)&v16[0];
      *(_OWORD *)(a3 + 8) = *(_OWORD *)((char *)v16 + 8);
      *(_OWORD *)(a3 + 24) = *(_OWORD *)((char *)&v16[1] + 8);
    }
  }
  return result;
}

uint64_t sub_235E9FBF8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  _BYTE *v14;
  uint64_t result;
  char *v16;
  unint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;

  v7 = sub_235EE5BA8();
  MEMORY[0x24BDAC7A8](v7);
  v8 = type metadata accessor for SecureCloudPingResponseProtobuf();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v22 - v12;
  if (a2 >> 60 == 15)
  {
    sub_235E9A644();
    swift_allocError();
    *v14 = 3;
    return swift_willThrow();
  }
  else
  {
    v26 = 0;
    v24 = 0u;
    v25 = 0u;
    sub_235E90998(a1, a2);
    sub_235EE5B9C();
    sub_235E930EC(&qword_25638B8F0, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudPingResponseProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudPingResponseProtobuf);
    sub_235EE5C38();
    if (v3)
    {
      return sub_235E90940(a1, a2);
    }
    else
    {
      sub_235EA0C28((uint64_t)v13, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for SecureCloudPingResponseProtobuf);
      v16 = &v11[*(int *)(v8 + 20)];
      v17 = *((_QWORD *)v16 + 1);
      if (v17)
      {
        v27 = *(_QWORD *)v16;
        v23 = v17;
      }
      else
      {
        v27 = 0;
        v23 = 0xE000000000000000;
      }
      v18 = &v11[*(int *)(v8 + 24)];
      if (*((_QWORD *)v18 + 1))
      {
        v19 = *(_QWORD *)v18;
        v20 = *((_QWORD *)v18 + 1);
      }
      else
      {
        v19 = 0;
        v20 = 0xE000000000000000;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_235EA0C6C((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for SecureCloudPingResponseProtobuf);
      sub_235E90940(a1, a2);
      result = sub_235EA0C6C((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for SecureCloudPingResponseProtobuf);
      v21 = v23;
      *a3 = v27;
      a3[1] = v21;
      a3[2] = v19;
      a3[3] = v20;
    }
  }
  return result;
}

uint64_t sub_235E9FE40@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _BYTE *v17;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t *v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;

  v39 = a3;
  v44 = a1;
  v38 = sub_235EE5B0C();
  v4 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SecureCloudWithdrawRequest();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_235EE5BA8();
  MEMORY[0x24BDAC7A8](v11);
  v12 = type metadata accessor for SecureCloudWithdrawRequestProtobuf();
  v13 = MEMORY[0x24BDAC7A8](v12);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v33 - v15;
  if (a2 >> 60 == 15)
  {
    sub_235E9A644();
    swift_allocError();
    *v17 = 3;
    return swift_willThrow();
  }
  else
  {
    v19 = a2;
    v20 = v14;
    v34 = v6;
    v35 = v10;
    v36 = v4;
    v37 = v8;
    v43 = 0;
    v41 = 0u;
    v42 = 0u;
    v21 = v44;
    v22 = v19;
    sub_235E90998(v44, v19);
    sub_235EE5B9C();
    sub_235E930EC(&qword_25638B940, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudWithdrawRequestProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudWithdrawRequestProtobuf);
    v23 = v40;
    sub_235EE5C38();
    if (v23)
    {
      return sub_235E90940(v21, v22);
    }
    else
    {
      sub_235EA0C28((uint64_t)v16, v20, (uint64_t (*)(_QWORD))type metadata accessor for SecureCloudWithdrawRequestProtobuf);
      v24 = v34;
      sub_235EE5AD0();
      v25 = (uint64_t *)(v20 + *(int *)(v12 + 24));
      v26 = v25[1];
      if (v26)
      {
        v40 = *v25;
        v27 = v26;
      }
      else
      {
        v40 = 0;
        v27 = 0xE000000000000000;
      }
      v28 = v38;
      swift_bridgeObjectRetain();
      sub_235EA0C6C(v20, (uint64_t (*)(_QWORD))type metadata accessor for SecureCloudWithdrawRequestProtobuf);
      v29 = (uint64_t)v35;
      (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v35, v24, v28);
      sub_235E90940(v44, v22);
      v30 = (_QWORD *)(v29 + *(int *)(v7 + 20));
      *v30 = v40;
      v30[1] = v27;
      sub_235EA0C6C((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for SecureCloudWithdrawRequestProtobuf);
      v31 = v29;
      v32 = v39;
      sub_235EA0BE4(v31, v39, (uint64_t (*)(_QWORD))type metadata accessor for SecureCloudWithdrawRequest);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v32, 0, 1, v7);
    }
  }
}

uint64_t sub_235EA0154@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  _BYTE *v16;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;

  v28 = a1;
  v5 = type metadata accessor for SecureCloudRepairMessage();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (uint64_t *)((char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_235EE5BA8();
  MEMORY[0x24BDAC7A8](v9);
  v10 = type metadata accessor for SecureCloudRepairMessageProtobuf();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v21 - v14;
  if (a2 >> 60 == 15)
  {
    sub_235E9A644();
    swift_allocError();
    *v16 = 3;
    return swift_willThrow();
  }
  else
  {
    v22 = v5;
    v23 = v8;
    v21 = v6;
    v27 = 0;
    v25 = 0u;
    v26 = 0u;
    v18 = v28;
    sub_235E90998(v28, a2);
    sub_235EE5B9C();
    sub_235E930EC(&qword_25638B9C0, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudRepairMessageProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudRepairMessageProtobuf);
    v19 = v24;
    sub_235EE5C38();
    if (v19)
    {
      return sub_235E90940(v18, a2);
    }
    else
    {
      sub_235EA0C28((uint64_t)v15, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for SecureCloudRepairMessageProtobuf);
      v20 = v23;
      SecureCloudRepairMessage.init(_:)((uint64_t)v13, v23);
      sub_235E90940(v18, a2);
      sub_235EA0C6C((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for SecureCloudRepairMessageProtobuf);
      sub_235EA0BE4((uint64_t)v20, a3, (uint64_t (*)(_QWORD))type metadata accessor for SecureCloudRepairMessage);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v21 + 56))(a3, 0, 1, v22);
    }
  }
}

uint64_t TransportProtobufSerializable.init(activitySharingTransportData:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _BYTE *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;

  v31 = a1;
  v30 = a5;
  v8 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_235EE5BA8();
  MEMORY[0x24BDAC7A8](v11);
  v36 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v26 - v17;
  if (a2 >> 60 == 15)
  {
    sub_235E9A644();
    swift_allocError();
    *v19 = 3;
    return swift_willThrow();
  }
  else
  {
    v28 = v16;
    v29 = v10;
    v27 = v8;
    v35 = 0;
    v33 = 0u;
    v34 = 0u;
    v21 = v31;
    sub_235E90998(v31, a2);
    swift_getAssociatedConformanceWitness();
    sub_235EE5B9C();
    v22 = v32;
    sub_235EE5C38();
    if (v22)
    {
      return sub_235E90940(v21, a2);
    }
    else
    {
      v23 = v28;
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v15, v18, AssociatedTypeWitness);
      (*(void (**)(char *, uint64_t))(v36 + 40))(v15, a3);
      sub_235E90940(v21, a2);
      (*(void (**)(char *, uint64_t))(v23 + 8))(v18, AssociatedTypeWitness);
      v24 = v27;
      v25 = v30;
      (*(void (**)(uint64_t, char *, uint64_t))(v27 + 32))(v30, v29, a3);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v24 + 56))(v25, 0, 1, a3);
    }
  }
}

uint64_t sub_235EA0640(uint64_t a1, uint64_t a2)
{
  return sub_235EA06BC(a1, a2, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudInviteRequestProtobuf, &qword_25638B6E0, (uint64_t)&protocol conformance descriptor for SecureCloudInviteRequestProtobuf);
}

uint64_t sub_235EA0674@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_235E9F308(a1, a2, a3);
}

uint64_t sub_235EA0688(uint64_t a1, uint64_t a2)
{
  return sub_235EA06BC(a1, a2, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudUpgradeMessageProtobuf, &qword_25638B810, (uint64_t)&protocol conformance descriptor for SecureCloudUpgradeMessageProtobuf);
}

uint64_t sub_235EA06BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE v15[16];
  uint64_t v16;

  v10 = a3(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v15[-v11];
  v16 = v5;
  sub_235E930EC(a4, a3, a5);
  v13 = v10;
  sub_235EE5C68();
  if (!v6)
  {
    v13 = sub_235EE5C44();
    sub_235EA0C6C((uint64_t)v12, a3);
  }
  return v13;
}

uint64_t sub_235EA07BC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_235E9F55C(a1, a2, a3);
}

uint64_t sub_235EA07D0(uint64_t a1, uint64_t a2)
{
  return sub_235EA06BC(a1, a2, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudInviteResponseProtobuf, &qword_25638B870, (uint64_t)&protocol conformance descriptor for SecureCloudInviteResponseProtobuf);
}

uint64_t sub_235EA0804@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_235E9F7B0(a1, a2, a3);
}

uint64_t sub_235EA0818()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  __int128 v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  _BYTE v9[16];
  _OWORD *v10;
  _OWORD v11[2];
  uint64_t v12;

  v2 = type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v9[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = *(_OWORD *)(v0 + 16);
  v11[0] = *(_OWORD *)v0;
  v11[1] = v5;
  v12 = *(_QWORD *)(v0 + 32);
  v10 = v11;
  sub_235E930EC(&qword_25638B6C8, v6, (uint64_t)&protocol conformance descriptor for SecureCloudInviteUserInfoProtobuf);
  v7 = v2;
  sub_235EE5C68();
  if (!v1)
  {
    v7 = sub_235EE5C44();
    sub_235EA0C6C((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for SecureCloudInviteUserInfoProtobuf);
  }
  return v7;
}

uint64_t sub_235EA092C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_235E9FA04(a1, a2, a3);
}

uint64_t sub_235EA0940()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[16];
  __int128 v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for SecureCloudPingResponseProtobuf();
  MEMORY[0x24BDAC7A8](v1);
  v3 = &v8[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = *((_QWORD *)v0 + 2);
  v5 = *((_QWORD *)v0 + 3);
  v9 = *v0;
  v10 = v4;
  v11 = v5;
  sub_235E930EC(&qword_25638B8F0, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudPingResponseProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudPingResponseProtobuf);
  sub_235EE5C68();
  v6 = sub_235EE5C44();
  sub_235EA0C6C((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for SecureCloudPingResponseProtobuf);
  return v6;
}

uint64_t sub_235EA0A3C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_235E9FBF8(a1, a2, a3);
}

uint64_t sub_235EA0A50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  _BYTE v6[16];
  uint64_t v7;

  v1 = type metadata accessor for SecureCloudWithdrawRequestProtobuf();
  MEMORY[0x24BDAC7A8](v1);
  v3 = &v6[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = v0;
  sub_235E930EC(&qword_25638B940, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudWithdrawRequestProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudWithdrawRequestProtobuf);
  sub_235EE5C68();
  v4 = sub_235EE5C44();
  sub_235EA0C6C((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for SecureCloudWithdrawRequestProtobuf);
  return v4;
}

uint64_t sub_235EA0B40@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_235E9FE40(a1, a2, a3);
}

uint64_t dispatch thunk of TransportProtobufSerializable.protobuf()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of TransportProtobufSerializable.init(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_235EA0B84(uint64_t a1, uint64_t a2)
{
  return sub_235EA06BC(a1, a2, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudRepairMessageProtobuf, &qword_25638B9C0, (uint64_t)&protocol conformance descriptor for SecureCloudRepairMessageProtobuf);
}

uint64_t sub_235EA0BB8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_235EA0154(a1, a2, a3);
}

uint64_t sub_235EA0BCC(uint64_t a1)
{
  uint64_t v1;

  return sub_235EE3940(a1, *(_QWORD **)(v1 + 16));
}

uint64_t sub_235EA0BE4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_235EA0C28(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_235EA0C6C(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_235EA0CA8(uint64_t a1)
{
  uint64_t v1;

  return sub_235E983F8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t TransportPayload.transportItem.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t TransportPayload.serializedPayload.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_235E90998(v1, *(_QWORD *)(v0 + 16));
  return v1;
}

uint64_t TransportPayload.init(transportItem:serializedPayload:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t destroy for TransportPayload(uint64_t a1)
{
  return sub_235E90954(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
}

_QWORD *_s21ActivitySharingClient16TransportPayloadVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  v4 = a2[2];
  sub_235E90998(v3, v4);
  a1[1] = v3;
  a1[2] = v4;
  return a1;
}

_QWORD *assignWithCopy for TransportPayload(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  *a1 = *a2;
  v3 = a2[1];
  v4 = a2[2];
  sub_235E90998(v3, v4);
  v5 = a1[1];
  v6 = a1[2];
  a1[1] = v3;
  a1[2] = v4;
  sub_235E90954(v5, v6);
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for TransportPayload(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  sub_235E90954(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for TransportPayload(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xD && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 13);
  v3 = (((*(_QWORD *)(a1 + 16) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(_QWORD *)(a1 + 16) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for TransportPayload(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 13;
    if (a3 >= 0xD)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0xD)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
    {
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TransportPayload()
{
  return &type metadata for TransportPayload;
}

uint64_t TestClient.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for XPCClient();
  swift_allocObject();
  result = XPCClient.init()();
  a1[3] = v2;
  a1[4] = (uint64_t)&protocol witness table for XPCClient;
  *a1 = result;
  return result;
}

uint64_t TestClient.activate()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_235EA0F18()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t);

  v1 = *(_QWORD **)(v0 + 16);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v6 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v3 + 8) + *(_QWORD *)(v3 + 8));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v4;
  *v4 = v0;
  v4[1] = sub_235EA1DAC;
  return v6(v2, v3);
}

uint64_t TestClient.invalidate()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_235EA0FA8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t);

  v1 = *(_QWORD **)(v0 + 16);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v6 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v3 + 16) + *(_QWORD *)(v3 + 16));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v4;
  *v4 = v0;
  v4[1] = sub_235EA1020;
  return v6(v2, v3);
}

uint64_t sub_235EA1020()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t TestClient.ping()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_235EA1080()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD **)(v0 + 16);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v3 + 24) + *(_QWORD *)(v3 + 24));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v4;
  *v4 = v0;
  v4[1] = sub_235EA1020;
  return v6(1001, v2, v3);
}

uint64_t TestClient.submit(input:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = v1;
  return swift_task_switch();
}

uint64_t sub_235EA1114()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t, _QWORD, _UNKNOWN **, uint64_t, uint64_t);

  v2 = *(_QWORD *)(v0 + 32);
  v1 = *(_QWORD **)(v0 + 40);
  v3 = v1[3];
  v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  *(_QWORD *)(v0 + 16) = v2;
  *(_BYTE *)(v0 + 24) = 0;
  v7 = (uint64_t (*)(uint64_t, uint64_t, _QWORD, _UNKNOWN **, uint64_t, uint64_t))(**(int **)(v4 + 32)
                                                                                       + *(_QWORD *)(v4 + 32));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v5;
  *v5 = v0;
  v5[1] = sub_235EA11B8;
  return v7(1004, v0 + 16, MEMORY[0x24BEE1768], &protocol witness table for Int, v3, v4);
}

uint64_t sub_235EA11B8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t TestClient.submitOptional(input:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v3 + 25) = a2;
  *(_QWORD *)(v3 + 32) = a1;
  *(_QWORD *)(v3 + 40) = v2;
  return swift_task_switch();
}

uint64_t sub_235EA1240()
{
  uint64_t v0;
  char v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t, _QWORD, _UNKNOWN **, uint64_t, uint64_t);

  v1 = *(_BYTE *)(v0 + 25);
  v3 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD **)(v0 + 40);
  v4 = v2[3];
  v5 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v4);
  *(_QWORD *)(v0 + 16) = v3;
  *(_BYTE *)(v0 + 24) = v1 & 1;
  v8 = (uint64_t (*)(uint64_t, uint64_t, _QWORD, _UNKNOWN **, uint64_t, uint64_t))(**(int **)(v5 + 32)
                                                                                       + *(_QWORD *)(v5 + 32));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v6;
  *v6 = v0;
  v6[1] = sub_235EA12F0;
  return v8(1005, v0 + 16, MEMORY[0x24BEE1768], &protocol witness table for Int, v4, v5);
}

uint64_t sub_235EA12F0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_235EA135C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t TestClient.requestSecret()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = v0;
  return swift_task_switch();
}

uint64_t sub_235EA1380()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t, _QWORD, _UNKNOWN **, uint64_t, uint64_t);

  v1 = *(_QWORD **)(v0 + 32);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v6 = (uint64_t (*)(uint64_t, uint64_t, _QWORD, _UNKNOWN **, uint64_t, uint64_t))(**(int **)(v3 + 48)
                                                                                       + *(_QWORD *)(v3 + 48));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v4;
  *v4 = v0;
  v4[1] = sub_235EA1420;
  return v6(v0 + 16, 1002, MEMORY[0x24BEE0D00], &protocol witness table for String, v2, v3);
}

uint64_t sub_235EA1420()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_235EA1484()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_235EA1494()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t TestClient.requestOptionalSecret()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = v0;
  return swift_task_switch();
}

uint64_t sub_235EA14B8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t, _QWORD, _UNKNOWN **, uint64_t, uint64_t);

  v1 = *(_QWORD **)(v0 + 32);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v6 = (uint64_t (*)(uint64_t, uint64_t, _QWORD, _UNKNOWN **, uint64_t, uint64_t))(**(int **)(v3 + 40)
                                                                                       + *(_QWORD *)(v3 + 40));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v4;
  *v4 = v0;
  v4[1] = sub_235EA1558;
  return v6(v0 + 16, 1003, MEMORY[0x24BEE0D00], &protocol witness table for String, v2, v3);
}

uint64_t sub_235EA1558()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t TestClient.subtractOne(from:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = v1;
  return swift_task_switch();
}

void sub_235EA15D4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v0 + 40);
  v1 = *(_QWORD **)(v0 + 48);
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  *(_QWORD *)(v0 + 16) = v2;
  *(_BYTE *)(v0 + 24) = 0;
  v5 = **(int **)(v3 + 64) + *(_QWORD *)(v3 + 64);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v4;
  *v4 = v0;
  v4[1] = sub_235EA1694;
  __asm { BR              X8 }
}

uint64_t sub_235EA1694()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_235EA16F8()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 32));
}

uint64_t sub_235EA1708()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t TestClient.subtractOneOptionalInput(from:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v3 + 25) = a2;
  *(_QWORD *)(v3 + 40) = a1;
  *(_QWORD *)(v3 + 48) = v2;
  return swift_task_switch();
}

void sub_235EA1730()
{
  uint64_t v0;
  char v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v1 = *(_BYTE *)(v0 + 25);
  v3 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD **)(v0 + 48);
  v4 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  *(_QWORD *)(v0 + 16) = v3;
  *(_BYTE *)(v0 + 24) = v1 & 1;
  v6 = **(int **)(v4 + 64) + *(_QWORD *)(v4 + 64);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v5;
  *v5 = v0;
  v5[1] = sub_235EA17FC;
  __asm { BR              X8 }
}

uint64_t sub_235EA17FC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t TestClient.subtractOneOptionalOutput(from:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = v1;
  return swift_task_switch();
}

void sub_235EA1878()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD **)(v0 + 56);
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  *(_QWORD *)(v0 + 32) = v2;
  *(_BYTE *)(v0 + 40) = 0;
  v5 = **(int **)(v3 + 56) + *(_QWORD *)(v3 + 56);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v4;
  *v4 = v0;
  v4[1] = sub_235EA1938;
  __asm { BR              X8 }
}

uint64_t sub_235EA1938()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_235EA199C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16), *(unsigned __int8 *)(v0 + 24));
}

uint64_t sub_235EA19AC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t TestClient.subtractOneOptionalInputAndOutput(from:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v3 + 25) = a2;
  *(_QWORD *)(v3 + 48) = a1;
  *(_QWORD *)(v3 + 56) = v2;
  return swift_task_switch();
}

void sub_235EA19D4()
{
  uint64_t v0;
  char v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v1 = *(_BYTE *)(v0 + 25);
  v3 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD **)(v0 + 56);
  v4 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  *(_QWORD *)(v0 + 32) = v3;
  *(_BYTE *)(v0 + 40) = v1 & 1;
  v6 = **(int **)(v4 + 56) + *(_QWORD *)(v4 + 56);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v5;
  *v5 = v0;
  v5[1] = sub_235EA1AA0;
  __asm { BR              X8 }
}

uint64_t sub_235EA1AA0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t initializeWithCopy for TestClient(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for TestClient(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

uint64_t assignWithTake for TestClient(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for TestClient(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TestClient(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TestClient()
{
  return &type metadata for TestClient;
}

uint64_t SecureCloudUpgradeMessageProtobuf.buildNumber.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 20));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t type metadata accessor for SecureCloudUpgradeMessageProtobuf()
{
  uint64_t result;

  result = qword_25638BAF0;
  if (!qword_25638BAF0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t SecureCloudUpgradeMessageProtobuf.date.setter(double a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = type metadata accessor for SecureCloudUpgradeMessageProtobuf();
  v4 = v1 + *(int *)(result + 24);
  *(double *)v4 = a1;
  *(_BYTE *)(v4 + 8) = 0;
  return result;
}

uint64_t SecureCloudUpgradeMessageProtobuf.upgradeToken.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 28));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t SecureCloudUpgradeMessageProtobuf.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 32));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t SecureCloudUpgradeMessageProtobuf.version.setter(int a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = type metadata accessor for SecureCloudUpgradeMessageProtobuf();
  v4 = v1 + *(int *)(result + 44);
  *(_DWORD *)v4 = a1;
  *(_BYTE *)(v4 + 4) = 0;
  return result;
}

uint64_t SecureCloudUpgradeMessageProtobuf.secureCloudShareItem.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = v2 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 36);
  result = sub_235E90940(*(_QWORD *)v5, *(_QWORD *)(v5 + 8));
  *(_QWORD *)v5 = a1;
  *(_QWORD *)(v5 + 8) = a2;
  return result;
}

uint64_t SecureCloudUpgradeMessageProtobuf.type.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t result;
  uint64_t v5;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  result = type metadata accessor for SecureCloudUpgradeMessageProtobuf();
  v5 = v1 + *(int *)(result + 40);
  *(_QWORD *)v5 = v2;
  *(_BYTE *)(v5 + 8) = v3;
  *(_BYTE *)(v5 + 9) = 0;
  return result;
}

double SecureCloudUpgradeMessageProtobuf.date.getter()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  v1 = v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 24);
  result = *(double *)v1;
  if (*(_BYTE *)(v1 + 8))
    return 0.0;
  return result;
}

uint64_t SecureCloudUpgradeMessageProtobuf.upgradeToken.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 28));
  if (v1[1])
    v2 = *v1;
  else
    v2 = 0;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t SecureCloudUpgradeMessageProtobuf.identifier.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 32));
  if (v1[1])
    v2 = *v1;
  else
    v2 = 0;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t SecureCloudUpgradeMessageProtobuf.buildNumber.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 20));
  if (v1[1])
    v2 = *v1;
  else
    v2 = 0;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t SecureCloudUpgradeMessageProtobuf.version.getter()
{
  uint64_t v0;
  _BYTE *v1;

  v1 = (_BYTE *)(v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 44));
  if (v1[4])
    return 0;
  else
    return *(unsigned int *)v1;
}

uint64_t SecureCloudUpgradeMessageProtobuf.secureCloudShareItem.getter()
{
  uint64_t v0;
  uint64_t *v1;
  unint64_t v2;
  uint64_t v3;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 36));
  v2 = v1[1];
  if (v2 >> 60 == 15)
    v3 = 0;
  else
    v3 = *v1;
  sub_235E9083C(*v1, v2);
  return v3;
}

uint64_t SecureCloudUpgradeMessageProtobuf.type.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  char v6;
  char v7;

  result = type metadata accessor for SecureCloudUpgradeMessageProtobuf();
  v4 = (uint64_t *)(v1 + *(int *)(result + 40));
  if ((*((_BYTE *)v4 + 9) & 1) != 0)
  {
    v5 = 0;
    v6 = 1;
  }
  else
  {
    v7 = *((_BYTE *)v4 + 8);
    v5 = *v4;
    v6 = v7 & 1;
  }
  *(_QWORD *)a1 = v5;
  *(_BYTE *)(a1 + 8) = v6;
  return result;
}

uint64_t sub_235EA21B0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 20));
  v4 = v3[1];
  if (v4)
  {
    v5 = *v3;
    v6 = v4;
  }
  else
  {
    v5 = 0;
    v6 = 0xE000000000000000;
  }
  *a2 = v5;
  a2[1] = v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_235EA2200(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(a2 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 20));
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *v4 = v3;
  v4[1] = v2;
  return result;
}

uint64_t (*SecureCloudUpgradeMessageProtobuf.buildNumber.modify(uint64_t a1))(uint64_t *, char)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 20);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v1 + v3);
  v5 = v4[1];
  if (v5)
  {
    v6 = *v4;
    v7 = v5;
  }
  else
  {
    v6 = 0;
    v7 = 0xE000000000000000;
  }
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_235E952D0;
}

BOOL SecureCloudUpgradeMessageProtobuf.hasBuildNumber.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 20) + 8) != 0;
}

Swift::Void __swiftcall SecureCloudUpgradeMessageProtobuf.clearBuildNumber()()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 20));
  swift_bridgeObjectRelease();
  *v1 = 0;
  v1[1] = 0;
}

uint64_t (*SecureCloudUpgradeMessageProtobuf.date.modify(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 24);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = v1 + v3;
  v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8))
    v5 = 0.0;
  *(double *)a1 = v5;
  return sub_235E950C4;
}

BOOL SecureCloudUpgradeMessageProtobuf.hasDate.getter()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 24) + 8) & 1) == 0;
}

Swift::Void __swiftcall SecureCloudUpgradeMessageProtobuf.clearDate()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 24);
  *(_QWORD *)v1 = 0;
  *(_BYTE *)(v1 + 8) = 1;
}

uint64_t sub_235EA23C8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 28));
  v4 = v3[1];
  if (v4)
  {
    v5 = *v3;
    v6 = v4;
  }
  else
  {
    v5 = 0;
    v6 = 0xE000000000000000;
  }
  *a2 = v5;
  a2[1] = v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_235EA2418(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(a2 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 28));
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *v4 = v3;
  v4[1] = v2;
  return result;
}

uint64_t (*SecureCloudUpgradeMessageProtobuf.upgradeToken.modify(uint64_t a1))(uint64_t *, char)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 28);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v1 + v3);
  v5 = v4[1];
  if (v5)
  {
    v6 = *v4;
    v7 = v5;
  }
  else
  {
    v6 = 0;
    v7 = 0xE000000000000000;
  }
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_235E952D0;
}

BOOL SecureCloudUpgradeMessageProtobuf.hasUpgradeToken.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 28) + 8) != 0;
}

Swift::Void __swiftcall SecureCloudUpgradeMessageProtobuf.clearUpgradeToken()()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 28));
  swift_bridgeObjectRelease();
  *v1 = 0;
  v1[1] = 0;
}

uint64_t sub_235EA2530@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 32));
  v4 = v3[1];
  if (v4)
  {
    v5 = *v3;
    v6 = v4;
  }
  else
  {
    v5 = 0;
    v6 = 0xE000000000000000;
  }
  *a2 = v5;
  a2[1] = v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_235EA2580(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(a2 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 32));
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *v4 = v3;
  v4[1] = v2;
  return result;
}

uint64_t (*SecureCloudUpgradeMessageProtobuf.identifier.modify(uint64_t a1))(uint64_t *, char)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 32);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v1 + v3);
  v5 = v4[1];
  if (v5)
  {
    v6 = *v4;
    v7 = v5;
  }
  else
  {
    v6 = 0;
    v7 = 0xE000000000000000;
  }
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_235E952D0;
}

BOOL SecureCloudUpgradeMessageProtobuf.hasIdentifier.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 32) + 8) != 0;
}

Swift::Void __swiftcall SecureCloudUpgradeMessageProtobuf.clearIdentifier()()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 32));
  swift_bridgeObjectRelease();
  *v1 = 0;
  v1[1] = 0;
}

uint64_t sub_235EA2698(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = (uint64_t *)(a2 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 36));
  v5 = *v4;
  v6 = v4[1];
  sub_235E90998(v2, v3);
  result = sub_235E90940(v5, v6);
  *v4 = v2;
  v4[1] = v3;
  return result;
}

uint64_t (*SecureCloudUpgradeMessageProtobuf.secureCloudShareItem.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 36);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v1 + v3);
  v5 = *v4;
  v6 = v4[1];
  if (v6 >> 60 == 15)
    v7 = 0;
  else
    v7 = *v4;
  v8 = 0xC000000000000000;
  if (v6 >> 60 != 15)
    v8 = v6;
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v8;
  sub_235E9083C(v5, v6);
  return sub_235EA2758;
}

uint64_t sub_235EA2758(uint64_t a1, char a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16) + *(int *)(a1 + 24);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)v3;
  v6 = *(_QWORD *)(v3 + 8);
  if ((a2 & 1) != 0)
  {
    sub_235E90998(*(_QWORD *)a1, v2);
    sub_235E90940(v5, v6);
    *(_QWORD *)v3 = v4;
    *(_QWORD *)(v3 + 8) = v2;
    return sub_235E90954(v4, v2);
  }
  else
  {
    result = sub_235E90940(*(_QWORD *)v3, *(_QWORD *)(v3 + 8));
    *(_QWORD *)v3 = v4;
    *(_QWORD *)(v3 + 8) = v2;
  }
  return result;
}

BOOL SecureCloudUpgradeMessageProtobuf.hasSecureCloudShareItem.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 36) + 8) >> 60 != 15;
}

Swift::Void __swiftcall SecureCloudUpgradeMessageProtobuf.clearSecureCloudShareItem()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 36);
  sub_235E90940(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  *(_OWORD *)v1 = xmmword_235EE6E80;
}

uint64_t (*SecureCloudUpgradeMessageProtobuf.type.modify(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  char v6;
  char v7;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 40);
  *(_DWORD *)(a1 + 12) = v3;
  v4 = (uint64_t *)(v1 + v3);
  if ((*((_BYTE *)v4 + 9) & 1) != 0)
  {
    v5 = 0;
    v6 = 1;
  }
  else
  {
    v7 = *((_BYTE *)v4 + 8);
    v5 = *v4;
    v6 = v7 & 1;
  }
  *(_QWORD *)a1 = v5;
  *(_BYTE *)(a1 + 8) = v6;
  return sub_235EA28B4;
}

uint64_t sub_235EA28B4(uint64_t result)
{
  uint64_t v1;
  unsigned __int8 v2;

  v1 = *(_QWORD *)(result + 16) + *(int *)(result + 12);
  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)v1 = *(_QWORD *)result;
  *(_WORD *)(v1 + 8) = v2;
  return result;
}

BOOL SecureCloudUpgradeMessageProtobuf.hasType.getter()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 40) + 9) & 1) == 0;
}

Swift::Void __swiftcall SecureCloudUpgradeMessageProtobuf.clearType()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 40);
  *(_QWORD *)v1 = 0;
  *(_WORD *)(v1 + 8) = 256;
}

uint64_t (*SecureCloudUpgradeMessageProtobuf.version.modify(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 44);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_235E95F24;
}

BOOL SecureCloudUpgradeMessageProtobuf.hasVersion.getter()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 44) + 4) & 1) == 0;
}

Swift::Void __swiftcall SecureCloudUpgradeMessageProtobuf.clearVersion()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 44);
  *(_DWORD *)v1 = 0;
  *(_BYTE *)(v1 + 4) = 1;
}

uint64_t SecureCloudUpgradeMessageProtobuf.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_235EE5B90();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t SecureCloudUpgradeMessageProtobuf.unknownFields.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_235EE5B90();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*SecureCloudUpgradeMessageProtobuf.unknownFields.modify())()
{
  return nullsub_1;
}

void SecureCloudUpgradeMessageProtobuf.MessageType.init()(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

unint64_t SecureCloudUpgradeMessageProtobuf.MessageType.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = result < 2;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

uint64_t SecureCloudUpgradeMessageProtobuf.MessageType.rawValue.getter()
{
  _BYTE *v0;

  if (v0[8])
    return *(_QWORD *)v0 != 0;
  else
    return *(_QWORD *)v0;
}

void sub_235EA2A9C(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

unint64_t sub_235EA2AAC@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = result < 2;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

uint64_t sub_235EA2AC4()
{
  _BYTE *v0;

  if (v0[8])
    return *(_QWORD *)v0 != 0;
  else
    return *(_QWORD *)v0;
}

_QWORD *sub_235EA2AE0@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2;
  char v3;

  v2 = *result >= 2uLL;
  *(_QWORD *)a2 = *result;
  v3 = !v2;
  *(_BYTE *)(a2 + 8) = v3;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

void sub_235EA2AFC(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  if (*((_BYTE *)v1 + 8))
    v2 = *v1 != 0;
  *a1 = v2;
}

uint64_t sub_235EA2B1C()
{
  sub_235EE6154();
  sub_235EE5D1C();
  return sub_235EE616C();
}

uint64_t sub_235EA2B84()
{
  sub_235EA3578();
  return sub_235EE5BCC();
}

uint64_t sub_235EA2BBC()
{
  sub_235EE6154();
  sub_235EE5D1C();
  return sub_235EE616C();
}

BOOL sub_235EA2C20(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  if (*((_BYTE *)a1 + 8))
    v2 = *a1 != 0;
  v3 = *a2 != 0;
  if (!*((_BYTE *)a2 + 8))
    v3 = *a2;
  return v2 == v3;
}

double SecureCloudUpgradeMessageProtobuf.init()@<D0>(uint64_t a1@<X8>)
{
  int *v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  double result;
  uint64_t v8;
  uint64_t v9;

  sub_235EE5B84();
  v2 = (int *)type metadata accessor for SecureCloudUpgradeMessageProtobuf();
  v3 = (_QWORD *)(a1 + v2[5]);
  *v3 = 0;
  v3[1] = 0;
  v4 = a1 + v2[6];
  *(_QWORD *)v4 = 0;
  *(_BYTE *)(v4 + 8) = 1;
  v5 = (_QWORD *)(a1 + v2[7]);
  *v5 = 0;
  v5[1] = 0;
  v6 = (_QWORD *)(a1 + v2[8]);
  *v6 = 0;
  v6[1] = 0;
  result = 0.0;
  *(_OWORD *)(a1 + v2[9]) = xmmword_235EE6E80;
  v8 = a1 + v2[10];
  *(_QWORD *)v8 = 0;
  *(_WORD *)(v8 + 8) = 256;
  v9 = a1 + v2[11];
  *(_DWORD *)v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  return result;
}

void sub_235EA2CF0()
{
  qword_25638BA20 = (uint64_t)&unk_2507443A8;
}

uint64_t static SecureCloudUpgradeMessageProtobuf.MessageType.allCases.getter()
{
  if (qword_25638B4E0 != -1)
    swift_once();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static SecureCloudUpgradeMessageProtobuf.MessageType.allCases.setter(uint64_t a1)
{
  if (qword_25638B4E0 != -1)
    swift_once();
  swift_beginAccess();
  qword_25638BA20 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static SecureCloudUpgradeMessageProtobuf.MessageType.allCases.modify())()
{
  if (qword_25638B4E0 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_235EA2E54@<X0>(_QWORD *a1@<X8>)
{
  if (qword_25638B4E0 != -1)
    swift_once();
  swift_beginAccess();
  *a1 = qword_25638BA20;
  return swift_bridgeObjectRetain();
}

unint64_t static SecureCloudUpgradeMessageProtobuf.protoMessageName.getter()
{
  return 0xD000000000000021;
}

uint64_t sub_235EA2EE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;

  v0 = sub_235EE5CD4();
  __swift_allocate_value_buffer(v0, qword_25638BA28);
  __swift_project_value_buffer(v0, (uint64_t)qword_25638BA28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25638B600);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638B608);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_235EE7AE0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 2;
  *(_QWORD *)v7 = "buildNumber";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_235EE5CBC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 3;
  *(_QWORD *)v11 = "date";
  *(_QWORD *)(v11 + 8) = 4;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 4;
  *(_QWORD *)v13 = "upgradeToken";
  *((_QWORD *)v13 + 1) = 12;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 5;
  *(_QWORD *)v15 = "identifier";
  *((_QWORD *)v15 + 1) = 10;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 6;
  *(_QWORD *)v17 = "secureCloudShareItem";
  *((_QWORD *)v17 + 1) = 20;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 7;
  *(_QWORD *)v19 = "type";
  *((_QWORD *)v19 + 1) = 4;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 8;
  *(_QWORD *)v21 = "version";
  *((_QWORD *)v21 + 1) = 7;
  v21[16] = 2;
  v10();
  return sub_235EE5CC8();
}

uint64_t static SecureCloudUpgradeMessageProtobuf._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_235EA3960(&qword_25638B4E8, (uint64_t)qword_25638BA28, a1);
}

uint64_t SecureCloudUpgradeMessageProtobuf.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_235EE5BD8();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 2:
        case 4:
        case 5:
          type metadata accessor for SecureCloudUpgradeMessageProtobuf();
          sub_235EE5C08();
          break;
        case 3:
          type metadata accessor for SecureCloudUpgradeMessageProtobuf();
          sub_235EE5BFC();
          break;
        case 6:
          type metadata accessor for SecureCloudUpgradeMessageProtobuf();
          sub_235EE5BF0();
          break;
        case 7:
          sub_235EA32F0();
          break;
        case 8:
          type metadata accessor for SecureCloudUpgradeMessageProtobuf();
          sub_235EE5C14();
          break;
        default:
          break;
      }
      result = sub_235EE5BD8();
    }
  }
  return result;
}

uint64_t sub_235EA32F0()
{
  type metadata accessor for SecureCloudUpgradeMessageProtobuf();
  sub_235EA3578();
  return sub_235EE5BE4();
}

uint64_t SecureCloudUpgradeMessageProtobuf.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t result;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v2 = (int *)type metadata accessor for SecureCloudUpgradeMessageProtobuf();
  if (!*(_QWORD *)(v0 + v2[5] + 8) || (result = sub_235EE5C98(), !v1))
  {
    if ((*(_BYTE *)(v0 + v2[6] + 8) & 1) != 0 || (result = sub_235EE5C8C(), !v1))
    {
      if (!*(_QWORD *)(v0 + v2[7] + 8) || (result = sub_235EE5C98(), !v1))
      {
        if (!*(_QWORD *)(v0 + v2[8] + 8) || (result = sub_235EE5C98(), !v1))
        {
          v4 = v0 + v2[9];
          v5 = *(_QWORD *)(v4 + 8);
          if (v5 >> 60 == 15
            || (v6 = *(_QWORD *)v4,
                sub_235E90998(*(_QWORD *)v4, *(_QWORD *)(v4 + 8)),
                sub_235EE5C80(),
                result = sub_235E90940(v6, v5),
                !v1))
          {
            if ((*(_BYTE *)(v0 + v2[10] + 9) & 1) != 0 || (sub_235EA3578(), result = sub_235EE5C74(), !v1))
            {
              if ((*(_BYTE *)(v0 + v2[11] + 4) & 1) != 0)
                return sub_235EE5B78();
              result = sub_235EE5CA4();
              if (!v1)
                return sub_235EE5B78();
            }
          }
        }
      }
    }
  }
  return result;
}

unint64_t sub_235EA3578()
{
  unint64_t result;

  result = qword_25638BA58;
  if (!qword_25638BA58)
  {
    result = MEMORY[0x23B7E5230](&protocol conformance descriptor for SecureCloudUpgradeMessageProtobuf.MessageType, &type metadata for SecureCloudUpgradeMessageProtobuf.MessageType);
    atomic_store(result, (unint64_t *)&qword_25638BA58);
  }
  return result;
}

uint64_t SecureCloudUpgradeMessageProtobuf.hashValue.getter()
{
  sub_235EE6154();
  type metadata accessor for SecureCloudUpgradeMessageProtobuf();
  sub_235E930EC(&qword_25638BA60, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudUpgradeMessageProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudUpgradeMessageProtobuf);
  sub_235EE5D1C();
  return sub_235EE616C();
}

double sub_235EA362C@<D0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  double result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_235EE5B84();
  v4 = a1[6];
  v5 = (_QWORD *)(a2 + a1[5]);
  *v5 = 0;
  v5[1] = 0;
  v6 = a2 + v4;
  *(_QWORD *)v6 = 0;
  *(_BYTE *)(v6 + 8) = 1;
  v7 = a1[8];
  v8 = (_QWORD *)(a2 + a1[7]);
  *v8 = 0;
  v8[1] = 0;
  v9 = (_QWORD *)(a2 + v7);
  *v9 = 0;
  v9[1] = 0;
  result = 0.0;
  v11 = a1[10];
  *(_OWORD *)(a2 + a1[9]) = xmmword_235EE6E80;
  v12 = a2 + v11;
  *(_QWORD *)v12 = 0;
  *(_WORD *)(v12 + 8) = 256;
  v13 = a2 + a1[11];
  *(_DWORD *)v13 = 0;
  *(_BYTE *)(v13 + 4) = 1;
  return result;
}

unint64_t sub_235EA36B0()
{
  return 0xD000000000000021;
}

uint64_t sub_235EA36CC()
{
  return SecureCloudUpgradeMessageProtobuf.decodeMessage<A>(decoder:)();
}

uint64_t sub_235EA36E0()
{
  return SecureCloudUpgradeMessageProtobuf.traverse<A>(visitor:)();
}

uint64_t sub_235EA36F4()
{
  sub_235E930EC(&qword_25638BB40, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudUpgradeMessageProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudUpgradeMessageProtobuf);
  return sub_235EE5BC0();
}

uint64_t sub_235EA3744@<X0>(uint64_t a1@<X8>)
{
  return sub_235EA39E4(&qword_25638B4E8, (uint64_t)qword_25638BA28, a1);
}

uint64_t sub_235EA3760()
{
  sub_235E930EC(&qword_25638B810, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudUpgradeMessageProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudUpgradeMessageProtobuf);
  return sub_235EE5C50();
}

uint64_t sub_235EA37A0()
{
  sub_235E930EC(&qword_25638B810, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudUpgradeMessageProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudUpgradeMessageProtobuf);
  return sub_235EE5C5C();
}

uint64_t sub_235EA37F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_235EE5CD4();
  __swift_allocate_value_buffer(v0, qword_25638BA40);
  __swift_project_value_buffer(v0, (uint64_t)qword_25638BA40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25638B600);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638B608);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_235EE7AF0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "request";
  *(_QWORD *)(v7 + 8) = 7;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_235EE5CBC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "response";
  *((_QWORD *)v11 + 1) = 8;
  v11[16] = 2;
  v10();
  return sub_235EE5CC8();
}

uint64_t static SecureCloudUpgradeMessageProtobuf.MessageType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_235EA3960(&qword_25638B4F0, (uint64_t)qword_25638BA40, a1);
}

uint64_t sub_235EA3960@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_235EE5CD4();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t sub_235EA39C8@<X0>(uint64_t a1@<X8>)
{
  return sub_235EA39E4(&qword_25638B4F0, (uint64_t)qword_25638BA40, a1);
}

uint64_t sub_235EA39E4@<X0>(_QWORD *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_235EE5CD4();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t _s21ActivitySharingClient33SecureCloudUpgradeMessageProtobufV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  BOOL v17;
  char v18;
  uint64_t v19;
  double *v20;
  char v21;
  double *v22;
  int v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t *v46;
  char v47;
  uint64_t *v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  _DWORD *v55;
  char v56;
  _DWORD *v57;
  int v58;
  void (*v59)(_BYTE *, uint64_t, uint64_t);
  void (*v60)(_BYTE *, uint64_t);
  _BYTE v61[4];
  int v62;
  uint64_t v63;

  v4 = sub_235EE5B90();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = &v61[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v6);
  v10 = &v61[-v9];
  v11 = (int *)type metadata accessor for SecureCloudUpgradeMessageProtobuf();
  v12 = v11[5];
  v13 = (_QWORD *)(a1 + v12);
  v14 = *(_QWORD *)(a1 + v12 + 8);
  v15 = (_QWORD *)(a2 + v12);
  v16 = v15[1];
  if (!v14)
  {
    if (v16)
      goto LABEL_34;
    goto LABEL_10;
  }
  if (!v16)
    goto LABEL_34;
  v17 = *v13 == *v15 && v14 == v16;
  if (v17 || (v18 = 0, (sub_235EE60D0() & 1) != 0))
  {
LABEL_10:
    v19 = v11[6];
    v20 = (double *)(a1 + v19);
    v21 = *(_BYTE *)(a1 + v19 + 8);
    v22 = (double *)(a2 + v19);
    v23 = *(unsigned __int8 *)(a2 + v19 + 8);
    if ((v21 & 1) != 0)
    {
      if (!v23)
        goto LABEL_34;
    }
    else
    {
      if (*v20 != *v22)
        LOBYTE(v23) = 1;
      if ((v23 & 1) != 0)
        goto LABEL_34;
    }
    v24 = v11[7];
    v25 = (_QWORD *)(a1 + v24);
    v26 = *(_QWORD *)(a1 + v24 + 8);
    v27 = (_QWORD *)(a2 + v24);
    v28 = v27[1];
    if (v26)
    {
      if (!v28)
        goto LABEL_34;
      if (*v25 != *v27 || v26 != v28)
      {
        v18 = 0;
        if ((sub_235EE60D0() & 1) == 0)
          return v18 & 1;
      }
    }
    else if (v28)
    {
      goto LABEL_34;
    }
    v30 = v11[8];
    v31 = (_QWORD *)(a1 + v30);
    v32 = *(_QWORD *)(a1 + v30 + 8);
    v33 = (_QWORD *)(a2 + v30);
    v34 = v33[1];
    if (v32)
    {
      if (!v34)
        goto LABEL_34;
      if (*v31 != *v33 || v32 != v34)
      {
        v18 = 0;
        if ((sub_235EE60D0() & 1) == 0)
          return v18 & 1;
      }
    }
    else if (v34)
    {
      goto LABEL_34;
    }
    v37 = v11[9];
    v38 = *(_QWORD *)(a1 + v37);
    v39 = *(_QWORD *)(a1 + v37 + 8);
    v40 = (uint64_t *)(a2 + v37);
    v41 = *v40;
    v42 = v40[1];
    if (v39 >> 60 == 15)
    {
      if (v42 >> 60 == 15)
      {
LABEL_42:
        v45 = v11[10];
        v46 = (uint64_t *)(a1 + v45);
        v47 = *(_BYTE *)(a1 + v45 + 9);
        v48 = (uint64_t *)(a2 + v45);
        if ((v47 & 1) != 0)
        {
          if ((*((_BYTE *)v48 + 9) & 1) == 0)
            goto LABEL_34;
        }
        else
        {
          if ((*((_BYTE *)v48 + 9) & 1) != 0)
            goto LABEL_34;
          v49 = *v46;
          v50 = *((_BYTE *)v46 + 8);
          v51 = *v48;
          v52 = *((_BYTE *)v48 + 8);
          v53 = v49 != 0;
          if ((v50 & 1) == 0)
            v53 = v49;
          if ((v52 & 1) != 0)
          {
            if (v51)
            {
              if (v53 != 1)
                goto LABEL_34;
            }
            else if (v53)
            {
              goto LABEL_34;
            }
          }
          else if (v53 != v51)
          {
            goto LABEL_34;
          }
        }
        v54 = v11[11];
        v55 = (_DWORD *)(a1 + v54);
        v56 = *(_BYTE *)(a1 + v54 + 4);
        v57 = (_DWORD *)(a2 + v54);
        v58 = *(unsigned __int8 *)(a2 + v54 + 4);
        if ((v56 & 1) == 0)
        {
          if (*v55 != *v57)
            LOBYTE(v58) = 1;
          if ((v58 & 1) != 0)
            goto LABEL_34;
LABEL_61:
          v59 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16);
          v59(v10, a1, v4);
          v59(v8, a2, v4);
          sub_235E930EC(&qword_25638B5F8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
          v18 = sub_235EE5D28();
          v60 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
          v60(v8, v4);
          v60(v10, v4);
          return v18 & 1;
        }
        if (v58)
          goto LABEL_61;
LABEL_34:
        v18 = 0;
        return v18 & 1;
      }
    }
    else if (v42 >> 60 != 15)
    {
      v63 = v38;
      sub_235E9083C(v38, v39);
      sub_235E9083C(v41, v42);
      sub_235EC1A04(v63, v39);
      v62 = v44;
      sub_235E90940(v41, v42);
      sub_235E90940(v63, v39);
      if ((v62 & 1) == 0)
        goto LABEL_34;
      goto LABEL_42;
    }
    v43 = v38;
    sub_235E9083C(v38, v39);
    sub_235E9083C(v41, v42);
    sub_235E90940(v43, v39);
    sub_235E90940(v41, v42);
    v18 = 0;
  }
  return v18 & 1;
}

unint64_t sub_235EA3DF0()
{
  unint64_t result;

  result = qword_25638BA68;
  if (!qword_25638BA68)
  {
    result = MEMORY[0x23B7E5230](&protocol conformance descriptor for SecureCloudUpgradeMessageProtobuf.MessageType, &type metadata for SecureCloudUpgradeMessageProtobuf.MessageType);
    atomic_store(result, (unint64_t *)&qword_25638BA68);
  }
  return result;
}

unint64_t sub_235EA3E38()
{
  unint64_t result;

  result = qword_25638BA70;
  if (!qword_25638BA70)
  {
    result = MEMORY[0x23B7E5230](&protocol conformance descriptor for SecureCloudUpgradeMessageProtobuf.MessageType, &type metadata for SecureCloudUpgradeMessageProtobuf.MessageType);
    atomic_store(result, (unint64_t *)&qword_25638BA70);
  }
  return result;
}

unint64_t sub_235EA3E80()
{
  unint64_t result;

  result = qword_25638BA78;
  if (!qword_25638BA78)
  {
    result = MEMORY[0x23B7E5230](&protocol conformance descriptor for SecureCloudUpgradeMessageProtobuf.MessageType, &type metadata for SecureCloudUpgradeMessageProtobuf.MessageType);
    atomic_store(result, (unint64_t *)&qword_25638BA78);
  }
  return result;
}

unint64_t sub_235EA3EC8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25638BA80;
  if (!qword_25638BA80)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25638BA88);
    result = MEMORY[0x23B7E5230](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_25638BA80);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x23B7E5224](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_235EA3F58()
{
  return sub_235E930EC(&qword_25638BA90, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudUpgradeMessageProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudUpgradeMessageProtobuf);
}

uint64_t sub_235EA3F84()
{
  return sub_235E930EC(&qword_25638B810, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudUpgradeMessageProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudUpgradeMessageProtobuf);
}

uint64_t sub_235EA3FB0()
{
  return sub_235E930EC(&qword_25638BA60, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudUpgradeMessageProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudUpgradeMessageProtobuf);
}

uint64_t sub_235EA3FDC()
{
  return sub_235E930EC(&qword_25638B828, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudUpgradeMessageProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudUpgradeMessageProtobuf);
}

uint64_t sub_235EA4010@<X0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  double v6;

  result = type metadata accessor for SecureCloudUpgradeMessageProtobuf();
  v5 = a1 + *(int *)(result + 24);
  v6 = *(double *)v5;
  if (*(_BYTE *)(v5 + 8))
    v6 = 0.0;
  *a2 = v6;
  return result;
}

uint64_t sub_235EA4058(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1;
  result = type metadata accessor for SecureCloudUpgradeMessageProtobuf();
  v5 = a2 + *(int *)(result + 24);
  *(_QWORD *)v5 = v3;
  *(_BYTE *)(v5 + 8) = 0;
  return result;
}

uint64_t sub_235EA40A0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 36));
  v4 = *v3;
  v5 = v3[1];
  if (v5 >> 60 == 15)
    v6 = 0;
  else
    v6 = *v3;
  v7 = 0xC000000000000000;
  if (v5 >> 60 != 15)
    v7 = v5;
  *a2 = v6;
  a2[1] = v7;
  return sub_235E9083C(v4, v5);
}

uint64_t sub_235EA40F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t *v5;
  uint64_t v6;
  char v7;
  int v8;

  result = type metadata accessor for SecureCloudUpgradeMessageProtobuf();
  v5 = (uint64_t *)(a1 + *(int *)(result + 40));
  v6 = *v5;
  v7 = *((_BYTE *)v5 + 8);
  v8 = *((unsigned __int8 *)v5 + 9);
  if (v8)
    v6 = 0;
  *(_QWORD *)a2 = v6;
  *(_BYTE *)(a2 + 8) = (v8 | v7) & 1;
  return result;
}

uint64_t sub_235EA4144(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t result;
  uint64_t v6;

  v3 = *a1;
  v4 = *((_BYTE *)a1 + 8);
  result = type metadata accessor for SecureCloudUpgradeMessageProtobuf();
  v6 = a2 + *(int *)(result + 40);
  *(_QWORD *)v6 = v3;
  *(_BYTE *)(v6 + 8) = v4;
  *(_BYTE *)(v6 + 9) = 0;
  return result;
}

uint64_t sub_235EA418C@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result;
  int *v5;
  int v6;

  result = type metadata accessor for SecureCloudUpgradeMessageProtobuf();
  v5 = (int *)(a1 + *(int *)(result + 44));
  if (*((_BYTE *)v5 + 4))
    v6 = 0;
  else
    v6 = *v5;
  *a2 = v6;
  return result;
}

uint64_t sub_235EA41D0(int *a1, uint64_t a2)
{
  int v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1;
  result = type metadata accessor for SecureCloudUpgradeMessageProtobuf();
  v5 = a2 + *(int *)(result + 44);
  *(_DWORD *)v5 = v3;
  *(_BYTE *)(v5 + 4) = 0;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SecureCloudUpgradeMessageProtobuf(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v27 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_235EE5B90();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (char *)a1 + v9;
    v14 = (char *)a2 + v9;
    *(_QWORD *)v13 = *(_QWORD *)v14;
    v13[8] = v14[8];
    v15 = a3[7];
    v16 = a3[8];
    v17 = (uint64_t *)((char *)a1 + v15);
    v18 = (uint64_t *)((char *)a2 + v15);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = (uint64_t *)((char *)a1 + v16);
    v21 = (uint64_t *)((char *)a2 + v16);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = a3[9];
    v24 = (char *)a1 + v23;
    v25 = (uint64_t *)((char *)a2 + v23);
    v26 = *(uint64_t *)((char *)a2 + v23 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v26 >> 60 == 15)
    {
      *(_OWORD *)v24 = *(_OWORD *)v25;
    }
    else
    {
      v28 = *v25;
      sub_235E90998(*v25, v26);
      *(_QWORD *)v24 = v28;
      *((_QWORD *)v24 + 1) = v26;
    }
    v29 = a3[10];
    v30 = a3[11];
    v31 = (char *)a1 + v29;
    v32 = (char *)a2 + v29;
    *(_QWORD *)v31 = *(_QWORD *)v32;
    *((_WORD *)v31 + 4) = *((_WORD *)v32 + 4);
    v33 = (char *)a1 + v30;
    v34 = (char *)a2 + v30;
    *(_DWORD *)v33 = *(_DWORD *)v34;
    v33[4] = v34[4];
  }
  return a1;
}

uint64_t destroy for SecureCloudUpgradeMessageProtobuf(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t *v6;
  unint64_t v7;

  v4 = sub_235EE5B90();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v6 = (uint64_t *)(a1 + *(int *)(a2 + 36));
  v7 = v6[1];
  if (v7 >> 60 != 15)
    return sub_235E90954(*v6, v7);
  return result;
}

uint64_t initializeWithCopy for SecureCloudUpgradeMessageProtobuf(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v6 = sub_235EE5B90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = a1 + v8;
  v13 = a2 + v8;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
  v14 = a3[7];
  v15 = a3[8];
  v16 = (_QWORD *)(a1 + v14);
  v17 = (_QWORD *)(a2 + v14);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = (_QWORD *)(a1 + v15);
  v20 = (_QWORD *)(a2 + v15);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  v22 = a3[9];
  v23 = a1 + v22;
  v24 = (uint64_t *)(a2 + v22);
  v25 = *(_QWORD *)(a2 + v22 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v25 >> 60 == 15)
  {
    *(_OWORD *)v23 = *(_OWORD *)v24;
  }
  else
  {
    v26 = *v24;
    sub_235E90998(*v24, v25);
    *(_QWORD *)v23 = v26;
    *(_QWORD *)(v23 + 8) = v25;
  }
  v27 = a3[10];
  v28 = a3[11];
  v29 = a1 + v27;
  v30 = a2 + v27;
  *(_QWORD *)v29 = *(_QWORD *)v30;
  *(_WORD *)(v29 + 8) = *(_WORD *)(v30 + 8);
  v31 = a1 + v28;
  v32 = a2 + v28;
  *(_DWORD *)v31 = *(_DWORD *)v32;
  *(_BYTE *)(v31 + 4) = *(_BYTE *)(v32 + 4);
  return a1;
}

uint64_t assignWithCopy for SecureCloudUpgradeMessageProtobuf(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v6 = sub_235EE5B90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = (uint64_t *)(a2 + v10);
  v13 = *v12;
  *(_BYTE *)(v11 + 8) = *((_BYTE *)v12 + 8);
  *(_QWORD *)v11 = v13;
  v14 = a3[7];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = a3[8];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  *v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = a3[9];
  v21 = (uint64_t *)(a1 + v20);
  v22 = (uint64_t *)(a2 + v20);
  v23 = *(_QWORD *)(a2 + v20 + 8);
  if (*(_QWORD *)(a1 + v20 + 8) >> 60 != 15)
  {
    if (v23 >> 60 != 15)
    {
      v25 = *v22;
      sub_235E90998(v25, v23);
      v26 = *v21;
      v27 = v21[1];
      *v21 = v25;
      v21[1] = v23;
      sub_235E90954(v26, v27);
      goto LABEL_8;
    }
    sub_235E97C08((uint64_t)v21);
    goto LABEL_6;
  }
  if (v23 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)v21 = *(_OWORD *)v22;
    goto LABEL_8;
  }
  v24 = *v22;
  sub_235E90998(v24, v23);
  *v21 = v24;
  v21[1] = v23;
LABEL_8:
  v28 = a3[10];
  v29 = a1 + v28;
  v30 = (uint64_t *)(a2 + v28);
  v31 = *v30;
  *(_WORD *)(v29 + 8) = *((_WORD *)v30 + 4);
  *(_QWORD *)v29 = v31;
  v32 = a3[11];
  v33 = a1 + v32;
  v34 = a2 + v32;
  LODWORD(v31) = *(_DWORD *)v34;
  *(_BYTE *)(v33 + 4) = *(_BYTE *)(v34 + 4);
  *(_DWORD *)v33 = v31;
  return a1;
}

uint64_t initializeWithTake for SecureCloudUpgradeMessageProtobuf(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_235EE5B90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
  v10 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v10) = *(_OWORD *)(a2 + v10);
  v11 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_WORD *)(v12 + 8) = *(_WORD *)(v13 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v14 = a3[11];
  v15 = a1 + v14;
  v16 = a2 + v14;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  *(_DWORD *)v15 = *(_DWORD *)v16;
  return a1;
}

uint64_t assignWithTake for SecureCloudUpgradeMessageProtobuf(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v6 = sub_235EE5B90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = a3[7];
  v14 = a1 + v12;
  v15 = a2 + v12;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
  v16 = (_QWORD *)(a1 + v13);
  v17 = (uint64_t *)(a2 + v13);
  v19 = *v17;
  v18 = v17[1];
  *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  v20 = a3[8];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (uint64_t *)(a2 + v20);
  v24 = *v22;
  v23 = v22[1];
  *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  v25 = a3[9];
  v26 = (uint64_t *)(a1 + v25);
  v27 = (uint64_t *)(a2 + v25);
  v28 = *(_QWORD *)(a1 + v25 + 8);
  if (v28 >> 60 != 15)
  {
    v29 = v27[1];
    if (v29 >> 60 != 15)
    {
      v30 = *v26;
      *v26 = *v27;
      v26[1] = v29;
      sub_235E90954(v30, v28);
      goto LABEL_6;
    }
    sub_235E97C08((uint64_t)v26);
  }
  *(_OWORD *)v26 = *(_OWORD *)v27;
LABEL_6:
  v31 = a3[10];
  v32 = a3[11];
  v33 = a1 + v31;
  v34 = a2 + v31;
  *(_QWORD *)v33 = *(_QWORD *)v34;
  *(_WORD *)(v33 + 8) = *(_WORD *)(v34 + 8);
  v35 = a1 + v32;
  v36 = a2 + v32;
  *(_DWORD *)v35 = *(_DWORD *)v36;
  *(_BYTE *)(v35 + 4) = *(_BYTE *)(v36 + 4);
  return a1;
}

uint64_t getEnumTagSinglePayload for SecureCloudUpgradeMessageProtobuf()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_235EA48FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_235EE5B90();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for SecureCloudUpgradeMessageProtobuf()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_235EA4994(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_235EE5B90();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  return result;
}

uint64_t sub_235EA4A10()
{
  uint64_t result;
  unint64_t v1;

  result = sub_235EE5B90();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for SecureCloudUpgradeMessageProtobuf.MessageType(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SecureCloudUpgradeMessageProtobuf.MessageType(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_235EA4B10(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_235EA4B2C(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    *(_BYTE *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SecureCloudUpgradeMessageProtobuf.MessageType()
{
  return &type metadata for SecureCloudUpgradeMessageProtobuf.MessageType;
}

uint64_t TransportDispatchService.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v0 + 112) = MEMORY[0x24BEE4B00];
  return v0;
}

uint64_t TransportDispatchService.init()()
{
  uint64_t v0;

  swift_defaultActor_initialize();
  *(_QWORD *)(v0 + 112) = MEMORY[0x24BEE4B00];
  return v0;
}

uint64_t sub_235EA4BC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  return swift_task_switch();
}

uint64_t sub_235EA4BE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 48);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v1;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = &unk_25638BB58;
  *(_QWORD *)(v6 + 24) = v5;
  swift_beginAccess();
  swift_retain();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *(_QWORD *)(v2 + 112);
  *(_QWORD *)(v2 + 112) = 0x8000000000000000;
  sub_235EA7438((uint64_t)&unk_25638BB68, v6, v3, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v2 + 112) = v9;
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EA4CE4(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = sub_235E8E458;
  return v7();
}

uint64_t sub_235EA4D38()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_235EA4D5C()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v2 = *(int **)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_235E8E458;
  v6 = (uint64_t (*)(void))((char *)v2 + *v2);
  v4 = (_QWORD *)swift_task_alloc();
  v3[2] = v4;
  *v4 = v3;
  v4[1] = sub_235E8E458;
  return v6();
}

uint64_t sub_235EA4DD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;

  v6[9] = a5;
  v6[10] = v5;
  v6[7] = a3;
  v6[8] = a4;
  v6[5] = a1;
  v6[6] = a2;
  return swift_task_switch();
}

uint64_t sub_235EA4DF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = *(_OWORD *)(v0 + 64);
  *(_QWORD *)(v5 + 32) = v3;
  *(_QWORD *)(v5 + 40) = v2;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = &unk_25638BB80;
  *(_QWORD *)(v6 + 24) = v5;
  swift_beginAccess();
  swift_retain();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *(_QWORD *)(v1 + 112);
  *(_QWORD *)(v1 + 112) = 0x8000000000000000;
  sub_235EA7438((uint64_t)&unk_25638BB88, v6, v4, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v1 + 112) = v9;
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EA4F08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;

  v7[6] = a6;
  v7[7] = a7;
  v7[4] = a4;
  v7[5] = a5;
  v7[2] = a1;
  v7[3] = a2;
  v8 = sub_235EE5F14();
  v7[8] = v8;
  v7[9] = *(_QWORD *)(v8 - 8);
  v7[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_235EA4F74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, unint64_t, uint64_t, uint64_t);
  _QWORD *v6;
  uint64_t (*v8)(_QWORD);

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v5 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v1 + 16);
  sub_235E9083C(v4, v3);
  v5(v4, v3, v2, v1);
  v8 = (uint64_t (*)(_QWORD))(**(int **)(v0 + 32) + *(_QWORD *)(v0 + 32));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v6;
  *v6 = v0;
  v6[1] = sub_235EA5058;
  return v8(*(_QWORD *)(v0 + 80));
}

uint64_t sub_235EA5058()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_235EA50BC()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 64));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EA5104()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 64));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EA5148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;

  v6[9] = a5;
  v6[10] = v5;
  v6[7] = a3;
  v6[8] = a4;
  v6[5] = a1;
  v6[6] = a2;
  return swift_task_switch();
}

uint64_t sub_235EA5168()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = *(_OWORD *)(v0 + 64);
  *(_QWORD *)(v5 + 32) = v3;
  *(_QWORD *)(v5 + 40) = v2;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = &unk_25638BBA0;
  *(_QWORD *)(v6 + 24) = v5;
  swift_beginAccess();
  swift_retain();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *(_QWORD *)(v1 + 112);
  *(_QWORD *)(v1 + 112) = 0x8000000000000000;
  sub_235EA7438((uint64_t)&unk_25638BBA8, v6, v4, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v1 + 112) = v9;
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EA5278(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v9;

  v7[6] = a6;
  v7[7] = a7;
  v7[4] = a4;
  v7[5] = a5;
  v7[2] = a1;
  v7[3] = a2;
  v9 = sub_235EE5F14();
  v7[8] = v9;
  v7[9] = *(_QWORD *)(v9 - 8);
  v7[10] = swift_task_alloc();
  v7[11] = *(_QWORD *)(a6 - 8);
  v7[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_235EA5304()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  int *v11;
  _QWORD *v12;
  uint64_t (*v13)(_QWORD);

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v5 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v1 + 16);
  sub_235E9083C(v4, v3);
  v5(v4, v3, v2, v1);
  v6 = *(_QWORD *)(v0 + 80);
  v7 = *(_QWORD *)(v0 + 88);
  v8 = *(_QWORD *)(v0 + 48);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v6, 1, v8) == 1)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(v6, *(_QWORD *)(v0 + 64));
    sub_235E9A644();
    swift_allocError();
    *v9 = 1;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v11 = *(int **)(v0 + 32);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v0 + 96), v6, v8);
    v13 = (uint64_t (*)(_QWORD))((char *)v11 + *v11);
    v12 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 104) = v12;
    *v12 = v0;
    v12[1] = sub_235EA546C;
    return v13(*(_QWORD *)(v0 + 96));
  }
}

uint64_t sub_235EA546C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_235EA54D0()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 48));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EA5524()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 48));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EA5574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;

  v6[9] = a5;
  v6[10] = v5;
  v6[7] = a3;
  v6[8] = a4;
  v6[5] = a1;
  v6[6] = a2;
  return swift_task_switch();
}

uint64_t sub_235EA5594()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = *(_OWORD *)(v0 + 64);
  *(_QWORD *)(v5 + 32) = v3;
  *(_QWORD *)(v5 + 40) = v2;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = &unk_25638BBC0;
  *(_QWORD *)(v6 + 24) = v5;
  swift_beginAccess();
  swift_retain();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *(_QWORD *)(v1 + 112);
  *(_QWORD *)(v1 + 112) = 0x8000000000000000;
  sub_235EA7438((uint64_t)&unk_25638BBC8, v6, v4, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v1 + 112) = v9;
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EA56A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v10;

  *(_QWORD *)(v7 + 72) = a6;
  *(_QWORD *)(v7 + 80) = a7;
  *(_QWORD *)(v7 + 56) = a4;
  *(_QWORD *)(v7 + 64) = a5;
  *(_QWORD *)(v7 + 40) = a1;
  *(_QWORD *)(v7 + 48) = a2;
  v10 = sub_235EE5F14();
  *(_QWORD *)(v7 + 88) = v10;
  *(_QWORD *)(v7 + 96) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v7 + 104) = swift_task_alloc();
  *(_QWORD *)(v7 + 112) = *(_QWORD *)(a6 - 8);
  *(_QWORD *)(v7 + 120) = swift_task_alloc();
  *(_OWORD *)(v7 + 128) = *(_OWORD *)a3;
  *(_BYTE *)(v7 + 33) = *(_BYTE *)(a3 + 16);
  return swift_task_switch();
}

uint64_t sub_235EA5744()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  int v10;
  void *v11;
  uint64_t v12;
  int *v13;
  char v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  int *v21;

  v2 = *(_QWORD *)(v0 + 72);
  v1 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  v5 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v1 + 16);
  sub_235E9083C(v4, v3);
  v5(v4, v3, v2, v1);
  v6 = *(_QWORD *)(v0 + 104);
  v7 = *(_QWORD *)(v0 + 112);
  v8 = *(_QWORD *)(v0 + 72);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v6, 1, v8) == 1)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(v6, *(_QWORD *)(v0 + 88));
    sub_235E9A644();
    swift_allocError();
    *v9 = 1;
    swift_willThrow();
  }
  else
  {
    v10 = *(unsigned __int8 *)(v0 + 33);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v0 + 120), v6, v8);
    if (v10 != 255)
    {
      v11 = *(void **)(v0 + 128);
      v12 = *(_QWORD *)(v0 + 136);
      v13 = *(int **)(v0 + 56);
      v14 = *(_BYTE *)(v0 + 33) & 1;
      *(_QWORD *)(v0 + 16) = v11;
      *(_QWORD *)(v0 + 24) = v12;
      *(_BYTE *)(v0 + 32) = v14;
      sub_235EA8D38(v11, v12, v14);
      v21 = (int *)((char *)v13 + *v13);
      v15 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 144) = v15;
      *v15 = v0;
      v15[1] = sub_235EA5928;
      return ((uint64_t (*)(_QWORD, uint64_t))v21)(*(_QWORD *)(v0 + 120), v0 + 16);
    }
    v18 = *(_QWORD *)(v0 + 112);
    v17 = *(_QWORD *)(v0 + 120);
    v19 = *(_QWORD *)(v0 + 72);
    sub_235E9A644();
    swift_allocError();
    *v20 = 1;
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EA5928()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_235EA598C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 112);
  v1 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 72);
  sub_235EA8D48(*(void **)(v0 + 128), *(_QWORD *)(v0 + 136), *(_BYTE *)(v0 + 33));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EA59F8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unsigned __int8 v3;

  v1 = *(void **)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_BYTE *)(v0 + 33);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 112) + 8))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 72));
  sub_235EA8D48(v1, v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EA5A68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;

  v6[9] = a5;
  v6[10] = v5;
  v6[7] = a3;
  v6[8] = a4;
  v6[5] = a1;
  v6[6] = a2;
  return swift_task_switch();
}

uint64_t sub_235EA5A88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = *(_OWORD *)(v0 + 64);
  *(_QWORD *)(v5 + 32) = v3;
  *(_QWORD *)(v5 + 40) = v2;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = &unk_25638BBE0;
  *(_QWORD *)(v6 + 24) = v5;
  swift_beginAccess();
  swift_retain();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *(_QWORD *)(v1 + 112);
  *(_QWORD *)(v1 + 112) = 0x8000000000000000;
  sub_235EA7438((uint64_t)&unk_25638BBF0, v6, v4, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v1 + 112) = v9;
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EA5B98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t);

  v8[3] = a7;
  v8[4] = a8;
  v8[2] = a1;
  v10 = sub_235EE5F14();
  v8[5] = v10;
  v8[6] = *(_QWORD *)(v10 - 8);
  v11 = swift_task_alloc();
  v8[7] = v11;
  v14 = (uint64_t (*)(uint64_t))((char *)a5 + *a5);
  v12 = (_QWORD *)swift_task_alloc();
  v8[8] = v12;
  *v12 = v8;
  v12[1] = sub_235EA5C38;
  return v14(v11);
}

uint64_t sub_235EA5C38()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_235EA5C9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t *boxed_opaque_existential_1;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v4 = *(_QWORD *)(v0 + 16);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 48) + 8))(v1, *(_QWORD *)(v0 + 40));
    *(_QWORD *)(v4 + 32) = 0;
    *(_OWORD *)v4 = 0u;
    *(_OWORD *)(v4 + 16) = 0u;
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 32);
    v6 = *(uint64_t **)(v0 + 16);
    v6[3] = v2;
    v6[4] = v5;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v6);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v3 + 32))(boxed_opaque_existential_1, v1, v2);
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EA5D44()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EA5D78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;

  v8[11] = a7;
  v8[12] = v7;
  v8[9] = a5;
  v8[10] = a6;
  v8[7] = a3;
  v8[8] = a4;
  v8[5] = a1;
  v8[6] = a2;
  return swift_task_switch();
}

uint64_t sub_235EA5D9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = swift_allocObject();
  v6 = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v5 + 32) = v6;
  *(_QWORD *)(v5 + 48) = v3;
  *(_QWORD *)(v5 + 56) = v2;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = &unk_25638BC08;
  *(_QWORD *)(v7 + 24) = v5;
  swift_beginAccess();
  swift_retain();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v10 = *(_QWORD *)(v1 + 112);
  *(_QWORD *)(v1 + 112) = 0x8000000000000000;
  sub_235EA7438((uint64_t)&unk_25638BC10, v7, v4, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v1 + 112) = v10;
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EA5EAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v8[9] = v12;
  v8[10] = v13;
  v8[7] = a7;
  v8[8] = a8;
  v8[5] = a5;
  v8[6] = a6;
  v8[3] = a2;
  v8[4] = a3;
  v8[2] = a1;
  v9 = sub_235EE5F14();
  v8[11] = v9;
  v8[12] = *(_QWORD *)(v9 - 8);
  v8[13] = swift_task_alloc();
  v10 = sub_235EE5F14();
  v8[14] = v10;
  v8[15] = *(_QWORD *)(v10 - 8);
  v8[16] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_235EA5F54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, unint64_t, uint64_t, uint64_t);
  _QWORD *v6;
  uint64_t (*v8)(_QWORD, _QWORD);

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v5 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v1 + 16);
  sub_235E9083C(v4, v3);
  v5(v4, v3, v2, v1);
  v8 = (uint64_t (*)(_QWORD, _QWORD))(**(int **)(v0 + 40) + *(_QWORD *)(v0 + 40));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v6;
  *v6 = v0;
  v6[1] = sub_235EA604C;
  return v8(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 128));
}

uint64_t sub_235EA604C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_235EA60B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *boxed_opaque_existential_1;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  v6 = *(_QWORD *)(v0 + 120);
  v5 = *(_QWORD *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 112);
  if (v4 == 1)
  {
    v8 = *(_QWORD *)(v0 + 88);
    v9 = *(_QWORD *)(v0 + 96);
    v10 = *(_QWORD *)(v0 + 16);
    (*(void (**)(_QWORD, _QWORD))(v6 + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 112));
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v1, v8);
    *(_QWORD *)(v10 + 32) = 0;
    *(_OWORD *)v10 = 0u;
    *(_OWORD *)(v10 + 16) = 0u;
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 80);
    v12 = *(uint64_t **)(v0 + 16);
    v12[3] = v2;
    v12[4] = v11;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v12);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v3 + 32))(boxed_opaque_existential_1, v1, v2);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EA61A0()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 112));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EA61F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;

  v8[11] = a7;
  v8[12] = v7;
  v8[9] = a5;
  v8[10] = a6;
  v8[7] = a3;
  v8[8] = a4;
  v8[5] = a1;
  v8[6] = a2;
  return swift_task_switch();
}

uint64_t sub_235EA6214()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = swift_allocObject();
  v6 = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v5 + 32) = v6;
  *(_QWORD *)(v5 + 48) = v3;
  *(_QWORD *)(v5 + 56) = v2;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = &unk_25638BC28;
  *(_QWORD *)(v7 + 24) = v5;
  swift_beginAccess();
  swift_retain();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v10 = *(_QWORD *)(v1 + 112);
  *(_QWORD *)(v1 + 112) = 0x8000000000000000;
  sub_235EA7438((uint64_t)&unk_25638BC30, v7, v4, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v1 + 112) = v10;
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EA6324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v8[9] = v13;
  v8[10] = v14;
  v8[7] = a7;
  v8[8] = a8;
  v8[5] = a5;
  v8[6] = a6;
  v8[3] = a2;
  v8[4] = a3;
  v8[2] = a1;
  v10 = sub_235EE5F14();
  v8[11] = v10;
  v8[12] = *(_QWORD *)(v10 - 8);
  v8[13] = swift_task_alloc();
  v11 = sub_235EE5F14();
  v8[14] = v11;
  v8[15] = *(_QWORD *)(v11 - 8);
  v8[16] = swift_task_alloc();
  v8[17] = *(_QWORD *)(a7 - 8);
  v8[18] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_235EA63E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  int *v11;
  _QWORD *v12;
  int *v13;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v5 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v1 + 16);
  sub_235E9083C(v4, v3);
  v5(v4, v3, v2, v1);
  v6 = *(_QWORD *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 136);
  v8 = *(_QWORD *)(v0 + 56);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v6, 1, v8) == 1)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(v6, *(_QWORD *)(v0 + 112));
    sub_235E9A644();
    swift_allocError();
    *v9 = 1;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v11 = *(int **)(v0 + 40);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v0 + 144), v6, v8);
    v13 = (int *)((char *)v11 + *v11);
    v12 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v12;
    *v12 = v0;
    v12[1] = sub_235EA6564;
    return ((uint64_t (*)(_QWORD, _QWORD))v13)(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 144));
  }
}

uint64_t sub_235EA6564()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_235EA65C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *boxed_opaque_existential_1;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  v6 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 144);
  if (v4 == 1)
  {
    v7 = *(_QWORD *)(v0 + 88);
    v8 = *(_QWORD *)(v0 + 96);
    v9 = *(_QWORD *)(v0 + 16);
    (*(void (**)(_QWORD, _QWORD))(v6 + 8))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 56));
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v1, v7);
    *(_QWORD *)(v9 + 32) = 0;
    *(_OWORD *)v9 = 0u;
    *(_OWORD *)(v9 + 16) = 0u;
  }
  else
  {
    v10 = *(_QWORD *)(v0 + 80);
    v11 = *(_QWORD *)(v0 + 56);
    v12 = *(uint64_t **)(v0 + 16);
    v12[3] = v2;
    v12[4] = v10;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v12);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v3 + 32))(boxed_opaque_existential_1, v1, v2);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v11);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EA66BC()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 8))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 56));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EA6720(uint64_t a1, uint64_t *a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)(v4 + 40) = a1;
  v5 = *(_BYTE *)(a3 + 16);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a3;
  *(_BYTE *)(v4 + 32) = v5;
  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)a4 + *a4);
  v6 = *a2;
  v7 = a2[1];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 48) = v8;
  *v8 = v4;
  v8[1] = sub_235EA67A8;
  return v10(v6, v7, v4 + 16);
}

uint64_t sub_235EA67A8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_235EA680C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v1 + 24) = &type metadata for VoidTransportSerializable;
  *(_QWORD *)(v1 + 32) = &off_250748E80;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EA6830(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int *v8;
  _QWORD *v9;

  v8 = *(int **)(v3 + 16);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_235E8E458;
  return sub_235EA6720(a1, a2, a3, v8);
}

uint64_t sub_235EA68AC(uint64_t a1, uint64_t *a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v7 = *a2;
  v8 = a2[1];
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)a4 + *a4);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_235E8E5E8;
  return v11(a1, v7, v8, a3);
}

uint64_t sub_235EA6930(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  unint64_t v4;
  char v5;
  unint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v10;

  v3 = (uint64_t *)(v1 + 112);
  swift_beginAccess();
  v4 = sub_235E905D8(a1);
  if ((v5 & 1) != 0)
  {
    v6 = v4;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v3;
    v10 = *v3;
    *v3 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_235EA7E00();
      v8 = v10;
    }
    sub_235EA7280(v6, v8);
    *v3 = v8;
    swift_release();
    swift_bridgeObjectRelease();
  }
  return swift_endAccess();
}

uint64_t sub_235EA69EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  *(_QWORD *)(v2 + 40) = v1;
  *(_QWORD *)(v2 + 16) = 0;
  *(_QWORD *)(v2 + 24) = 0;
  *(_BYTE *)(v2 + 32) = -1;
  v4 = swift_task_alloc();
  *(_QWORD *)(v2 + 48) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_235EA6A7C;
  *(_QWORD *)(v4 + 144) = v1;
  *(_OWORD *)(v4 + 128) = xmmword_235EE6E80;
  *(_QWORD *)(v4 + 120) = a1;
  *(_OWORD *)(v4 + 152) = *(_OWORD *)(v2 + 16);
  *(_BYTE *)(v4 + 97) = *(_BYTE *)(v2 + 32);
  return swift_task_switch();
}

uint64_t sub_235EA6A7C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(v6 + 56) = v2;
  swift_task_dealloc();
  if (v2)
    return swift_task_switch();
  sub_235E90940(a1, a2);
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_235EA6B08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;

  *(_QWORD *)(v4 + 40) = v3;
  *(_QWORD *)(v4 + 16) = 0;
  *(_QWORD *)(v4 + 24) = 0;
  *(_BYTE *)(v4 + 32) = -1;
  v8 = swift_task_alloc();
  *(_QWORD *)(v4 + 48) = v8;
  *(_QWORD *)v8 = v4;
  *(_QWORD *)(v8 + 8) = sub_235EA6A7C;
  *(_QWORD *)(v8 + 136) = a3;
  *(_QWORD *)(v8 + 144) = v3;
  *(_QWORD *)(v8 + 120) = a1;
  *(_QWORD *)(v8 + 128) = a2;
  *(_OWORD *)(v8 + 152) = *(_OWORD *)(v4 + 16);
  *(_BYTE *)(v8 + 97) = *(_BYTE *)(v4 + 32);
  return swift_task_switch();
}

uint64_t sub_235EA6B9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  char v9;
  uint64_t v10;

  *(_QWORD *)(v5 + 40) = v4;
  v9 = *(_BYTE *)(a4 + 16);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)a4;
  *(_BYTE *)(v5 + 32) = v9;
  v10 = swift_task_alloc();
  *(_QWORD *)(v5 + 48) = v10;
  *(_QWORD *)v10 = v5;
  *(_QWORD *)(v10 + 8) = sub_235EA6C34;
  *(_QWORD *)(v10 + 136) = a3;
  *(_QWORD *)(v10 + 144) = v4;
  *(_QWORD *)(v10 + 120) = a1;
  *(_QWORD *)(v10 + 128) = a2;
  *(_OWORD *)(v10 + 152) = *(_OWORD *)(v5 + 16);
  *(_BYTE *)(v10 + 97) = *(_BYTE *)(v5 + 32);
  return swift_task_switch();
}

uint64_t sub_235EA6C34(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(v6 + 56) = v2;
  swift_task_dealloc();
  if (v2)
    return swift_task_switch();
  sub_235E90940(a1, a2);
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_235EA6CC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  *(_QWORD *)(v2 + 40) = v1;
  *(_QWORD *)(v2 + 16) = 0;
  *(_QWORD *)(v2 + 24) = 0;
  *(_BYTE *)(v2 + 32) = -1;
  v4 = swift_task_alloc();
  *(_QWORD *)(v2 + 48) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_235EA6D50;
  *(_QWORD *)(v4 + 144) = v1;
  *(_OWORD *)(v4 + 128) = xmmword_235EE6E80;
  *(_QWORD *)(v4 + 120) = a1;
  *(_OWORD *)(v4 + 152) = *(_OWORD *)(v2 + 16);
  *(_BYTE *)(v4 + 97) = *(_BYTE *)(v2 + 32);
  return swift_task_switch();
}

uint64_t sub_235EA6D50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(v6 + 56) = v2;
  swift_task_dealloc();
  if (v2)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

uint64_t sub_235EA6DD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;

  *(_QWORD *)(v4 + 40) = v3;
  *(_QWORD *)(v4 + 16) = 0;
  *(_QWORD *)(v4 + 24) = 0;
  *(_BYTE *)(v4 + 32) = -1;
  v8 = swift_task_alloc();
  *(_QWORD *)(v4 + 48) = v8;
  *(_QWORD *)v8 = v4;
  *(_QWORD *)(v8 + 8) = sub_235EA6E6C;
  *(_QWORD *)(v8 + 136) = a3;
  *(_QWORD *)(v8 + 144) = v3;
  *(_QWORD *)(v8 + 120) = a1;
  *(_QWORD *)(v8 + 128) = a2;
  *(_OWORD *)(v8 + 152) = *(_OWORD *)(v4 + 16);
  *(_BYTE *)(v8 + 97) = *(_BYTE *)(v4 + 32);
  return swift_task_switch();
}

uint64_t sub_235EA6E6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(v6 + 56) = v2;
  swift_task_dealloc();
  if (v2)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

uint64_t sub_235EA6EF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 136) = a3;
  *(_QWORD *)(v5 + 144) = v4;
  *(_QWORD *)(v5 + 120) = a1;
  *(_QWORD *)(v5 + 128) = a2;
  *(_OWORD *)(v5 + 152) = *(_OWORD *)a4;
  *(_BYTE *)(v5 + 97) = *(_BYTE *)(a4 + 16);
  return swift_task_switch();
}

uint64_t sub_235EA6F20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  int *v7;
  _QWORD *v8;
  _BYTE *v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 144);
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 112);
  if (*(_QWORD *)(v2 + 16) && (v3 = sub_235E905D8(*(_QWORD *)(v0 + 120)), (v4 & 1) != 0))
  {
    v5 = *(_BYTE *)(v0 + 97);
    v6 = *(_QWORD *)(v2 + 56) + 16 * v3;
    v7 = *(int **)v6;
    *(_QWORD *)(v0 + 168) = *(_QWORD *)(v6 + 8);
    *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 152);
    *(_BYTE *)(v0 + 96) = v5;
    *(_OWORD *)(v0 + 104) = *(_OWORD *)(v0 + 128);
    v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v7 + *v7);
    swift_retain();
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 176) = v8;
    *v8 = v0;
    v8[1] = sub_235EA704C;
    return v11(v0 + 16, v0 + 104, v0 + 80);
  }
  else
  {
    sub_235E9A644();
    swift_allocError();
    *v10 = 2;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_235EA704C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_235EA70C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  unint64_t v8;

  v1 = *(_QWORD *)(v0 + 40);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 184);
    v3 = *(_QWORD *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
    v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v1, v3);
    if (v2)
    {
      __swift_destroy_boxed_opaque_existential_1(v0 + 16);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v7 = v4;
    v8 = v5;
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  }
  else
  {
    sub_235EA7FA8(v0 + 16);
    v7 = 0;
    v8 = 0xF000000000000000;
  }
  return (*(uint64_t (**)(uint64_t, unint64_t))(v0 + 8))(v7, v8);
}

uint64_t sub_235EA7188()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t TransportDispatchService.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t TransportDispatchService.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t TransportDispatchService.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_235EA7210()
{
  uint64_t v0;

  return v0;
}

unint64_t sub_235EA721C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_235EE6154();
  sub_235EE5D64();
  v4 = sub_235EE616C();
  return sub_235EA7D20(a1, a2, v4);
}

unint64_t sub_235EA7280(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_235EE5F80();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_235EE6154();
        sub_235EE6160();
        result = sub_235EE616C();
        v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8)
            goto LABEL_5;
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          v10 = *(_QWORD *)(a2 + 48);
          v11 = (_QWORD *)(v10 + 8 * v3);
          v12 = (_QWORD *)(v10 + 8 * v6);
          if (v3 != v6 || v11 >= v12 + 1)
            *v11 = *v12;
          v13 = *(_QWORD *)(a2 + 56);
          v14 = (_OWORD *)(v13 + 16 * v3);
          v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || (v3 = v6, v14 >= v15 + 1))
          {
            *v14 = *v15;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v17 = *v16;
    v18 = (-1 << v3) - 1;
  }
  else
  {
    v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    v18 = *v16;
    v17 = (-1 << result) - 1;
  }
  *v16 = v18 & v17;
  v19 = *(_QWORD *)(a2 + 16);
  v20 = __OFSUB__(v19, 1);
  v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_235EA7438(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  char v20;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v10 = *v4;
  v12 = sub_235E905D8(a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= result && (a4 & 1) == 0)
  {
    result = (uint64_t)sub_235EA7E00();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = (_QWORD *)(v18[7] + 16 * v12);
      result = swift_release();
      *v19 = a1;
      v19[1] = a2;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(_QWORD *)(v18[6] + 8 * v12) = a3;
    v21 = (_QWORD *)(v18[7] + 16 * v12);
    *v21 = a1;
    v21[1] = a2;
    v22 = v18[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_235EDD630(result, a4 & 1);
  result = sub_235E905D8(a3);
  if ((v16 & 1) == (v20 & 1))
  {
    v12 = result;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_235EE6100();
  __break(1u);
  return result;
}

uint64_t sub_235EA7574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v8 = v3[2];
  v9 = v3[3];
  v11 = v3[4];
  v10 = v3[5];
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v12;
  *v12 = v4;
  v12[1] = sub_235E8E458;
  return sub_235EA4F08(a1, a2, a3, v11, v10, v8, v9);
}

uint64_t sub_235EA7600()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_235EA7624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v8 = v3[2];
  v9 = v3[3];
  v11 = v3[4];
  v10 = v3[5];
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v12;
  *v12 = v4;
  v12[1] = sub_235E8E458;
  return sub_235EA5278(a1, a2, a3, v11, v10, v8, v9);
}

uint64_t sub_235EA76B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v8 = v3[2];
  v9 = v3[3];
  v11 = v3[4];
  v10 = v3[5];
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v12;
  *v12 = v4;
  v12[1] = sub_235E8E458;
  return sub_235EA56A4(a1, a2, a3, v11, v10, v8, v9);
}

uint64_t sub_235EA773C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  _QWORD *v14;

  v10 = v4[2];
  v11 = v4[3];
  v13 = (int *)v4[4];
  v12 = v4[5];
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v14;
  *v14 = v5;
  v14[1] = sub_235E8E458;
  return sub_235EA5B98(a1, a2, a3, a4, v13, v12, v10, v11);
}

uint64_t sub_235EA77D4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int *v8;
  _QWORD *v9;

  v8 = *(int **)(v3 + 16);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_235E8E458;
  return ((uint64_t (*)(uint64_t, uint64_t *, uint64_t, int *))((char *)&dword_25638BBE8 + dword_25638BBE8))(a1, a2, a3, v8);
}

uint64_t sub_235EA785C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_235EA7880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v9 = v4[2];
  v10 = v4[3];
  v12 = v4[6];
  v11 = v4[7];
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v13;
  *v13 = v5;
  v13[1] = sub_235E8E458;
  return sub_235EA5EAC(a1, a2, a3, a4, v12, v11, v9, v10);
}

uint64_t sub_235EA7928(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int *v8;
  _QWORD *v9;

  v8 = *(int **)(v3 + 16);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_235E8E5E8;
  return ((uint64_t (*)(uint64_t, uint64_t *, uint64_t, int *))((char *)&dword_25638BBE8 + dword_25638BBE8))(a1, a2, a3, v8);
}

uint64_t sub_235EA79B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v9 = v4[2];
  v10 = v4[3];
  v12 = v4[6];
  v11 = v4[7];
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v13;
  *v13 = v5;
  v13[1] = sub_235E8E458;
  return sub_235EA6324(a1, a2, a3, a4, v12, v11, v9, v10);
}

uint64_t sub_235EA7A58(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v5 = v4;
  v10 = *v4;
  v12 = sub_235EA721C(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_235EA8B50(&qword_25638BCE8);
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v23 = (uint64_t *)(v18[6] + 16 * v12);
    *v23 = a2;
    v23[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v24 = v18[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v18[2] = v26;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_235EDD904(v15, a4 & 1);
  v21 = sub_235EA721C(a2, a3);
  if ((v16 & 1) == (v22 & 1))
  {
    v12 = v21;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_235EE6100();
  __break(1u);
  return result;
}

uint64_t sub_235EA7BBC(__int128 *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t result;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  _OWORD *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;

  v5 = v4;
  v10 = *v4;
  v12 = sub_235EA721C(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_235EA877C();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      return sub_235EA8CFC((uint64_t)a1, v18[7] + (v12 << 6));
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    v23 = (_OWORD *)(v18[7] + (v12 << 6));
    v24 = *a1;
    v25 = a1[1];
    v26 = a1[3];
    v23[2] = a1[2];
    v23[3] = v26;
    *v23 = v24;
    v23[1] = v25;
    v27 = v18[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (!v28)
    {
      v18[2] = v29;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_235EDD910(v15, a4 & 1);
  v20 = sub_235EA721C(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      return sub_235EA8CFC((uint64_t)a1, v18[7] + (v12 << 6));
    goto LABEL_11;
  }
LABEL_15:
  result = sub_235EE6100();
  __break(1u);
  return result;
}

unint64_t sub_235EA7D20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_235EE60D0() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_235EE60D0() & 1) == 0);
    }
  }
  return v6;
}

void *sub_235EA7E00()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25429C8C0);
  v2 = *v0;
  v3 = sub_235EE601C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    v19 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v18);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v18) = v19;
    result = (void *)swift_retain();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_235EA7FA8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638BC68);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for TransportDispatchService()
{
  return objc_opt_self();
}

uint64_t method lookup function for TransportDispatchService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TransportDispatchService.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of TransportDispatchService.register(_:handler:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v3 + 128)
                                                          + *(_QWORD *)(*(_QWORD *)v3 + 128));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_235E8E458;
  return v10(a1, a2, a3);
}

uint64_t dispatch thunk of TransportDispatchService.register<A>(_:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v5 + 136)
                                                                            + *(_QWORD *)(*(_QWORD *)v5 + 136));
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v12;
  *v12 = v6;
  v12[1] = sub_235E8E458;
  return v14(a1, a2, a3, a4, a5);
}

{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v5 + 144)
                                                                            + *(_QWORD *)(*(_QWORD *)v5 + 144));
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v12;
  *v12 = v6;
  v12[1] = sub_235E8E458;
  return v14(a1, a2, a3, a4, a5);
}

{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v5 + 152)
                                                                            + *(_QWORD *)(*(_QWORD *)v5 + 152));
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v12;
  *v12 = v6;
  v12[1] = sub_235E8E458;
  return v14(a1, a2, a3, a4, a5);
}

{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v5 + 160)
                                                                            + *(_QWORD *)(*(_QWORD *)v5 + 160));
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v12;
  *v12 = v6;
  v12[1] = sub_235E8E458;
  return v14(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of TransportDispatchService.register<A, B>(_:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  _QWORD *v16;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v7 + 168)
                                                                                              + *(_QWORD *)(*(_QWORD *)v7 + 168));
  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v16;
  *v16 = v8;
  v16[1] = sub_235E8E5E8;
  return v18(a1, a2, a3, a4, a5, a6, a7);
}

{
  uint64_t v7;
  uint64_t v8;
  _QWORD *v16;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v7 + 176)
                                                                                              + *(_QWORD *)(*(_QWORD *)v7 + 176));
  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v16;
  *v16 = v8;
  v16[1] = sub_235E8E458;
  return v18(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t dispatch thunk of TransportDispatchService.unregister(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of TransportDispatchService.dispatchMessage(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 208) + *(_QWORD *)(*(_QWORD *)v1 + 208));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_235E8E458;
  return v6(a1);
}

uint64_t dispatch thunk of TransportDispatchService.dispatchMessage(_:data:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v3 + 216)
                                                          + *(_QWORD *)(*(_QWORD *)v3 + 216));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_235E8E458;
  return v10(a1, a2, a3);
}

uint64_t dispatch thunk of TransportDispatchService.dispatchMessage(_:data:metadata:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);

  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v4 + 224)
                                                                   + *(_QWORD *)(*(_QWORD *)v4 + 224));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v10;
  *v10 = v5;
  v10[1] = sub_235E8E458;
  return v12(a1, a2, a3, a4);
}

uint64_t dispatch thunk of TransportDispatchService.dispatchRequest(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 232) + *(_QWORD *)(*(_QWORD *)v1 + 232));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_235EA8D70;
  return v6(a1);
}

uint64_t dispatch thunk of TransportDispatchService.dispatchRequest(_:data:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v3 + 240)
                                                          + *(_QWORD *)(*(_QWORD *)v3 + 240));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_235EA8694;
  return v10(a1, a2, a3);
}

uint64_t sub_235EA8694(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v6;

  v6 = *v2;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

uint64_t dispatch thunk of TransportDispatchService.dispatchRequest(_:data:metadata:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);

  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v4 + 248)
                                                                   + *(_QWORD *)(*(_QWORD *)v4 + 248));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v10;
  *v10 = v5;
  v10[1] = sub_235EA8D70;
  return v12(a1, a2, a3, a4);
}

void *sub_235EA877C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  __int128 v29;
  unint64_t v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25638BCF0);
  v2 = *v0;
  v3 = sub_235EE601C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v31 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v31 >= v13)
      goto LABEL_26;
    v32 = *(_QWORD *)(v6 + 8 * v31);
    ++v9;
    if (!v32)
    {
      v9 = v31 + 1;
      if (v31 + 1 >= v13)
        goto LABEL_26;
      v32 = *(_QWORD *)(v6 + 8 * v9);
      if (!v32)
        break;
    }
LABEL_25:
    v12 = (v32 - 1) & v32;
    v15 = __clz(__rbit64(v32)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = v15 << 6;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(_QWORD *)v21;
    v23 = *(_QWORD *)(v21 + 8);
    v24 = *(_QWORD *)(v21 + 16);
    v25 = *(_BYTE *)(v21 + 40);
    v26 = *(_QWORD *)(v21 + 48);
    v27 = *(_QWORD *)(v21 + 56);
    v28 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    v29 = *(_OWORD *)(v21 + 24);
    *v28 = v19;
    v28[1] = v18;
    v30 = *(_QWORD *)(v4 + 56) + v20;
    *(_QWORD *)v30 = v22;
    *(_QWORD *)(v30 + 8) = v23;
    *(_QWORD *)(v30 + 16) = v24;
    *(_OWORD *)(v30 + 24) = v29;
    *(_BYTE *)(v30 + 40) = v25;
    *(_QWORD *)(v30 + 48) = v26;
    *(_QWORD *)(v30 + 56) = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v33 = v31 + 2;
  if (v33 >= v13)
    goto LABEL_26;
  v32 = *(_QWORD *)(v6 + 8 * v33);
  if (v32)
  {
    v9 = v33;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v33 + 1;
    if (__OFADD__(v33, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v32 = *(_QWORD *)(v6 + 8 * v9);
    ++v33;
    if (v32)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_235EA898C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25638BCE0);
  v2 = *v0;
  v3 = sub_235EE601C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_235EA8B44()
{
  return sub_235EA8B50(&qword_25638BCD8);
}

void *sub_235EA8B50(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_235EE601C();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_235EA8CFC(uint64_t a1, uint64_t a2)
{
  assignWithTake for InvitationDestination(a2, a1);
  return a2;
}

id sub_235EA8D38(void *a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return a1;
  else
    return (id)swift_bridgeObjectRetain();
}

void sub_235EA8D48(void *a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255)
    sub_235EA8D60(a1, a2, a3 & 1);
}

void sub_235EA8D60(void *a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)

  else
    swift_bridgeObjectRelease();
}

double SecureCloudInviteUserInfoProtobuf.init()@<D0>(uint64_t a1@<X8>)
{
  int *v2;
  double result;
  _QWORD *v4;

  sub_235EE5B84();
  v2 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  result = 0.0;
  *(_OWORD *)(a1 + v2[5]) = xmmword_235EE6E80;
  *(_OWORD *)(a1 + v2[6]) = xmmword_235EE6E80;
  *(_OWORD *)(a1 + v2[7]) = xmmword_235EE6E80;
  v4 = (_QWORD *)(a1 + v2[8]);
  *v4 = 0;
  v4[1] = 0;
  return result;
}

uint64_t type metadata accessor for SecureCloudInviteUserInfoProtobuf()
{
  uint64_t result;

  result = qword_25638BD78;
  if (!qword_25638BD78)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t SecureCloudInviteUserInfoProtobuf.activityDataPreview.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = v2 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 20);
  result = sub_235E90940(*(_QWORD *)v5, *(_QWORD *)(v5 + 8));
  *(_QWORD *)v5 = a1;
  *(_QWORD *)(v5 + 8) = a2;
  return result;
}

uint64_t SecureCloudInviteUserInfoProtobuf.legacyShareLocations.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = v2 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 28);
  result = sub_235E90940(*(_QWORD *)v5, *(_QWORD *)(v5 + 8));
  *(_QWORD *)v5 = a1;
  *(_QWORD *)(v5 + 8) = a2;
  return result;
}

uint64_t SecureCloudInviteUserInfoProtobuf.secureCloudShareItem.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = v2 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 24);
  result = sub_235E90940(*(_QWORD *)v5, *(_QWORD *)(v5 + 8));
  *(_QWORD *)v5 = a1;
  *(_QWORD *)(v5 + 8) = a2;
  return result;
}

uint64_t SecureCloudInviteUserInfoProtobuf.cloudKitAddress.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 32));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t SecureCloudInviteUserInfoProtobuf.cloudKitAddress.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 32));
  if (v1[1])
    v2 = *v1;
  else
    v2 = 0;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t SecureCloudInviteUserInfoProtobuf.activityDataPreview.getter()
{
  uint64_t v0;
  uint64_t *v1;
  unint64_t v2;
  uint64_t v3;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 20));
  v2 = v1[1];
  if (v2 >> 60 == 15)
    v3 = 0;
  else
    v3 = *v1;
  sub_235E9083C(*v1, v2);
  return v3;
}

uint64_t SecureCloudInviteUserInfoProtobuf.legacyShareLocations.getter()
{
  uint64_t v0;
  uint64_t *v1;
  unint64_t v2;
  uint64_t v3;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 28));
  v2 = v1[1];
  if (v2 >> 60 == 15)
    v3 = 0;
  else
    v3 = *v1;
  sub_235E9083C(*v1, v2);
  return v3;
}

uint64_t SecureCloudInviteUserInfoProtobuf.secureCloudShareItem.getter()
{
  uint64_t v0;
  uint64_t *v1;
  unint64_t v2;
  uint64_t v3;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 24));
  v2 = v1[1];
  if (v2 >> 60 == 15)
    v3 = 0;
  else
    v3 = *v1;
  sub_235E9083C(*v1, v2);
  return v3;
}

uint64_t sub_235EA9074(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = (uint64_t *)(a2 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 20));
  v5 = *v4;
  v6 = v4[1];
  sub_235E90998(v2, v3);
  result = sub_235E90940(v5, v6);
  *v4 = v2;
  v4[1] = v3;
  return result;
}

uint64_t (*SecureCloudInviteUserInfoProtobuf.activityDataPreview.modify(uint64_t a1))(uint64_t, char)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 20);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v1 + v3);
  v5 = *v4;
  v6 = v4[1];
  if (v6 >> 60 == 15)
    v7 = 0;
  else
    v7 = *v4;
  v8 = 0xC000000000000000;
  if (v6 >> 60 != 15)
    v8 = v6;
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v8;
  sub_235E9083C(v5, v6);
  return sub_235EA9134;
}

BOOL SecureCloudInviteUserInfoProtobuf.hasActivityDataPreview.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 20) + 8) >> 60 != 15;
}

Swift::Void __swiftcall SecureCloudInviteUserInfoProtobuf.clearActivityDataPreview()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 20);
  sub_235E90940(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  *(_OWORD *)v1 = xmmword_235EE6E80;
}

uint64_t sub_235EA91A4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = (uint64_t *)(a2 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 24));
  v5 = *v4;
  v6 = v4[1];
  sub_235E90998(v2, v3);
  result = sub_235E90940(v5, v6);
  *v4 = v2;
  v4[1] = v3;
  return result;
}

uint64_t (*SecureCloudInviteUserInfoProtobuf.secureCloudShareItem.modify(uint64_t a1))(uint64_t, char)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 24);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v1 + v3);
  v5 = *v4;
  v6 = v4[1];
  if (v6 >> 60 == 15)
    v7 = 0;
  else
    v7 = *v4;
  v8 = 0xC000000000000000;
  if (v6 >> 60 != 15)
    v8 = v6;
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v8;
  sub_235E9083C(v5, v6);
  return sub_235EA9134;
}

BOOL SecureCloudInviteUserInfoProtobuf.hasSecureCloudShareItem.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 24) + 8) >> 60 != 15;
}

Swift::Void __swiftcall SecureCloudInviteUserInfoProtobuf.clearSecureCloudShareItem()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 24);
  sub_235E90940(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  *(_OWORD *)v1 = xmmword_235EE6E80;
}

uint64_t sub_235EA92D0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = (uint64_t *)(a2 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 28));
  v5 = *v4;
  v6 = v4[1];
  sub_235E90998(v2, v3);
  result = sub_235E90940(v5, v6);
  *v4 = v2;
  v4[1] = v3;
  return result;
}

uint64_t (*SecureCloudInviteUserInfoProtobuf.legacyShareLocations.modify(uint64_t a1))(uint64_t, char)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 28);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v1 + v3);
  v5 = *v4;
  v6 = v4[1];
  if (v6 >> 60 == 15)
    v7 = 0;
  else
    v7 = *v4;
  v8 = 0xC000000000000000;
  if (v6 >> 60 != 15)
    v8 = v6;
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v8;
  sub_235E9083C(v5, v6);
  return sub_235EA9134;
}

BOOL SecureCloudInviteUserInfoProtobuf.hasLegacyShareLocations.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 28) + 8) >> 60 != 15;
}

Swift::Void __swiftcall SecureCloudInviteUserInfoProtobuf.clearLegacyShareLocations()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 28);
  sub_235E90940(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  *(_OWORD *)v1 = xmmword_235EE6E80;
}

uint64_t sub_235EA93FC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 32));
  v4 = v3[1];
  if (v4)
  {
    v5 = *v3;
    v6 = v4;
  }
  else
  {
    v5 = 0;
    v6 = 0xE000000000000000;
  }
  *a2 = v5;
  a2[1] = v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_235EA944C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(a2 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 32));
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *v4 = v3;
  v4[1] = v2;
  return result;
}

uint64_t (*SecureCloudInviteUserInfoProtobuf.cloudKitAddress.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 32);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v1 + v3);
  v5 = v4[1];
  if (v5)
  {
    v6 = *v4;
    v7 = v5;
  }
  else
  {
    v6 = 0;
    v7 = 0xE000000000000000;
  }
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_235E92300;
}

BOOL SecureCloudInviteUserInfoProtobuf.hasCloudKitAddress.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 32) + 8) != 0;
}

Swift::Void __swiftcall SecureCloudInviteUserInfoProtobuf.clearCloudKitAddress()()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 32));
  swift_bridgeObjectRelease();
  *v1 = 0;
  v1[1] = 0;
}

uint64_t SecureCloudInviteUserInfoProtobuf.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_235EE5B90();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t SecureCloudInviteUserInfoProtobuf.unknownFields.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_235EE5B90();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*SecureCloudInviteUserInfoProtobuf.unknownFields.modify())()
{
  return nullsub_1;
}

unint64_t static SecureCloudInviteUserInfoProtobuf.protoMessageName.getter()
{
  return 0xD000000000000021;
}

uint64_t sub_235EA9600()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_235EE5CD4();
  __swift_allocate_value_buffer(v0, qword_25638BCF8);
  __swift_project_value_buffer(v0, (uint64_t)qword_25638BCF8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25638B600);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638B608);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_235EE7F30;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "activityDataPreview";
  *(_QWORD *)(v7 + 8) = 19;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_235EE5CBC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 3;
  *(_QWORD *)v11 = "secureCloudShareItem";
  *(_QWORD *)(v11 + 8) = 20;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 4;
  *(_QWORD *)v13 = "legacyShareLocations";
  *((_QWORD *)v13 + 1) = 20;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 5;
  *(_QWORD *)v15 = "cloudKitAddress";
  *((_QWORD *)v15 + 1) = 15;
  v15[16] = 2;
  v10();
  return sub_235EE5CC8();
}

uint64_t static SecureCloudInviteUserInfoProtobuf._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_25638B4F8 != -1)
    swift_once();
  v2 = sub_235EE5CD4();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_25638BCF8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t SecureCloudInviteUserInfoProtobuf.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_235EE5BD8();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 3:
        case 4:
          type metadata accessor for SecureCloudInviteUserInfoProtobuf();
          sub_235EE5BF0();
          break;
        case 5:
          type metadata accessor for SecureCloudInviteUserInfoProtobuf();
          sub_235EE5C08();
          break;
        default:
          break;
      }
      result = sub_235EE5BD8();
    }
  }
  return result;
}

uint64_t SecureCloudInviteUserInfoProtobuf.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v2 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  v3 = v0 + v2[5];
  v4 = *(_QWORD *)(v3 + 8);
  if (v4 >> 60 == 15
    || (v5 = *(_QWORD *)v3,
        sub_235E90998(*(_QWORD *)v3, *(_QWORD *)(v3 + 8)),
        sub_235EE5C80(),
        result = sub_235E90940(v5, v4),
        !v1))
  {
    v7 = v0 + v2[6];
    v8 = *(_QWORD *)(v7 + 8);
    if (v8 >> 60 == 15
      || (v9 = *(_QWORD *)v7,
          sub_235E90998(*(_QWORD *)v7, *(_QWORD *)(v7 + 8)),
          sub_235EE5C80(),
          result = sub_235E90940(v9, v8),
          !v1))
    {
      v10 = v0 + v2[7];
      v11 = *(_QWORD *)(v10 + 8);
      if (v11 >> 60 == 15
        || (v12 = *(_QWORD *)v10,
            sub_235E90998(*(_QWORD *)v10, *(_QWORD *)(v10 + 8)),
            sub_235EE5C80(),
            result = sub_235E90940(v12, v11),
            !v1))
      {
        if (!*(_QWORD *)(v0 + v2[8] + 8))
          return sub_235EE5B78();
        result = sub_235EE5C98();
        if (!v1)
          return sub_235EE5B78();
      }
    }
  }
  return result;
}

uint64_t SecureCloudInviteUserInfoProtobuf.hashValue.getter()
{
  sub_235EE6154();
  type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  sub_235E930EC(&qword_25638BD10, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudInviteUserInfoProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudInviteUserInfoProtobuf);
  sub_235EE5D1C();
  return sub_235EE616C();
}

double sub_235EA9B5C@<D0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  double result;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  sub_235EE5B84();
  result = 0.0;
  v5 = a1[6];
  *(_OWORD *)(a2 + a1[5]) = xmmword_235EE6E80;
  *(_OWORD *)(a2 + v5) = xmmword_235EE6E80;
  v6 = a1[8];
  *(_OWORD *)(a2 + a1[7]) = xmmword_235EE6E80;
  v7 = (_QWORD *)(a2 + v6);
  *v7 = 0;
  v7[1] = 0;
  return result;
}

unint64_t sub_235EA9BA4()
{
  return 0xD000000000000021;
}

uint64_t sub_235EA9BC0()
{
  return SecureCloudInviteUserInfoProtobuf.decodeMessage<A>(decoder:)();
}

uint64_t sub_235EA9BD4()
{
  return SecureCloudInviteUserInfoProtobuf.traverse<A>(visitor:)();
}

uint64_t sub_235EA9BE8()
{
  sub_235E930EC(&qword_25638BDC0, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudInviteUserInfoProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudInviteUserInfoProtobuf);
  return sub_235EE5BC0();
}

uint64_t sub_235EA9C38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_25638B4F8 != -1)
    swift_once();
  v2 = sub_235EE5CD4();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_25638BCF8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_235EA9CA8()
{
  sub_235E930EC(&qword_25638B6C8, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudInviteUserInfoProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudInviteUserInfoProtobuf);
  return sub_235EE5C50();
}

uint64_t sub_235EA9CE8()
{
  sub_235E930EC(&qword_25638B6C8, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudInviteUserInfoProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudInviteUserInfoProtobuf);
  return sub_235EE5C5C();
}

uint64_t _s21ActivitySharingClient33SecureCloudInviteUserInfoProtobufV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t *v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t *v24;
  char v25;
  char v27;
  char v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  uint64_t v40;

  v4 = sub_235EE5B90();
  v39 = *(_QWORD *)(v4 - 8);
  v40 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v39 - v8;
  v10 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  v11 = v10[5];
  v12 = *(_QWORD *)(a1 + v11);
  v13 = *(_QWORD *)(a1 + v11 + 8);
  v14 = (uint64_t *)(a2 + v11);
  v15 = *v14;
  v16 = v14[1];
  if (v13 >> 60 == 15)
  {
    if (v16 >> 60 != 15)
      goto LABEL_15;
  }
  else
  {
    if (v16 >> 60 == 15)
      goto LABEL_15;
    sub_235E9083C(v12, v13);
    sub_235E9083C(v15, v16);
    sub_235EC1A04(v12, v13);
    v18 = v17;
    sub_235E90940(v15, v16);
    sub_235E90940(v12, v13);
    if ((v18 & 1) == 0)
      goto LABEL_16;
  }
  v19 = v10[6];
  v12 = *(_QWORD *)(a1 + v19);
  v13 = *(_QWORD *)(a1 + v19 + 8);
  v20 = (uint64_t *)(a2 + v19);
  v15 = *v20;
  v16 = v20[1];
  if (v13 >> 60 == 15)
  {
    if (v16 >> 60 != 15)
      goto LABEL_15;
    goto LABEL_11;
  }
  if (v16 >> 60 == 15)
    goto LABEL_15;
  sub_235E9083C(v12, v13);
  sub_235E9083C(v15, v16);
  sub_235EC1A04(v12, v13);
  v22 = v21;
  sub_235E90940(v15, v16);
  sub_235E90940(v12, v13);
  if ((v22 & 1) == 0)
  {
LABEL_16:
    v25 = 0;
    return v25 & 1;
  }
LABEL_11:
  v23 = v10[7];
  v12 = *(_QWORD *)(a1 + v23);
  v13 = *(_QWORD *)(a1 + v23 + 8);
  v24 = (uint64_t *)(a2 + v23);
  v15 = *v24;
  v16 = v24[1];
  if (v13 >> 60 == 15)
  {
    if (v16 >> 60 == 15)
      goto LABEL_19;
LABEL_15:
    sub_235E9083C(v12, v13);
    sub_235E9083C(v15, v16);
    sub_235E90940(v12, v13);
    sub_235E90940(v15, v16);
    goto LABEL_16;
  }
  if (v16 >> 60 == 15)
    goto LABEL_15;
  sub_235E9083C(v12, v13);
  sub_235E9083C(v15, v16);
  sub_235EC1A04(v12, v13);
  v28 = v27;
  sub_235E90940(v15, v16);
  sub_235E90940(v12, v13);
  if ((v28 & 1) == 0)
    goto LABEL_16;
LABEL_19:
  v29 = v10[8];
  v30 = (_QWORD *)(a1 + v29);
  v31 = *(_QWORD *)(a1 + v29 + 8);
  v32 = (_QWORD *)(a2 + v29);
  v33 = v32[1];
  if (!v31)
  {
    if (v33)
      goto LABEL_16;
    goto LABEL_26;
  }
  if (!v33)
    goto LABEL_16;
  if (*v30 == *v32 && v31 == v33 || (v25 = 0, (sub_235EE60D0() & 1) != 0))
  {
LABEL_26:
    v34 = v39;
    v35 = *(void (**)(char *, uint64_t, uint64_t))(v39 + 16);
    v36 = a1;
    v37 = v40;
    v35(v9, v36, v40);
    v35(v7, a2, v37);
    sub_235E930EC(&qword_25638B5F8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v25 = sub_235EE5D28();
    v38 = *(void (**)(char *, uint64_t))(v34 + 8);
    v38(v7, v37);
    v38(v9, v37);
  }
  return v25 & 1;
}

uint64_t sub_235EAA084()
{
  return sub_235E930EC(&qword_25638BD18, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudInviteUserInfoProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudInviteUserInfoProtobuf);
}

uint64_t sub_235EAA0B0()
{
  return sub_235E930EC(&qword_25638B6C8, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudInviteUserInfoProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudInviteUserInfoProtobuf);
}

uint64_t sub_235EAA0DC()
{
  return sub_235E930EC(&qword_25638BD10, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudInviteUserInfoProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudInviteUserInfoProtobuf);
}

uint64_t sub_235EAA108()
{
  return sub_235E930EC(&qword_25638B8B8, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudInviteUserInfoProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudInviteUserInfoProtobuf);
}

uint64_t sub_235EAA134@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 20));
  v4 = *v3;
  v5 = v3[1];
  if (v5 >> 60 == 15)
    v6 = 0;
  else
    v6 = *v3;
  v7 = 0xC000000000000000;
  if (v5 >> 60 != 15)
    v7 = v5;
  *a2 = v6;
  a2[1] = v7;
  return sub_235E9083C(v4, v5);
}

uint64_t sub_235EAA184@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 24));
  v4 = *v3;
  v5 = v3[1];
  if (v5 >> 60 == 15)
    v6 = 0;
  else
    v6 = *v3;
  v7 = 0xC000000000000000;
  if (v5 >> 60 != 15)
    v7 = v5;
  *a2 = v6;
  a2[1] = v7;
  return sub_235E9083C(v4, v5);
}

uint64_t sub_235EAA1D4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 28));
  v4 = *v3;
  v5 = v3[1];
  if (v5 >> 60 == 15)
    v6 = 0;
  else
    v6 = *v3;
  v7 = 0xC000000000000000;
  if (v5 >> 60 != 15)
    v7 = v5;
  *a2 = v6;
  a2[1] = v7;
  return sub_235E9083C(v4, v5);
}

uint64_t *initializeBufferWithCopyOfBuffer for SecureCloudInviteUserInfoProtobuf(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_235EE5B90();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *((_QWORD *)v10 + 1);
    if (v11 >> 60 == 15)
    {
      *(_OWORD *)v9 = *(_OWORD *)v10;
    }
    else
    {
      v13 = *(_QWORD *)v10;
      sub_235E90998(*(_QWORD *)v10, *((_QWORD *)v10 + 1));
      *(_QWORD *)v9 = v13;
      *((_QWORD *)v9 + 1) = v11;
    }
    v14 = a3[6];
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = *((_QWORD *)v16 + 1);
    if (v17 >> 60 == 15)
    {
      *(_OWORD *)v15 = *(_OWORD *)v16;
    }
    else
    {
      v18 = *(_QWORD *)v16;
      sub_235E90998(*(_QWORD *)v16, *((_QWORD *)v16 + 1));
      *(_QWORD *)v15 = v18;
      *((_QWORD *)v15 + 1) = v17;
    }
    v19 = a3[7];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v22 = *((_QWORD *)v21 + 1);
    if (v22 >> 60 == 15)
    {
      *(_OWORD *)v20 = *(_OWORD *)v21;
    }
    else
    {
      v23 = *(_QWORD *)v21;
      sub_235E90998(*(_QWORD *)v21, *((_QWORD *)v21 + 1));
      *(_QWORD *)v20 = v23;
      *((_QWORD *)v20 + 1) = v22;
    }
    v24 = a3[8];
    v25 = (uint64_t *)((char *)a1 + v24);
    v26 = (uint64_t *)((char *)a2 + v24);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SecureCloudInviteUserInfoProtobuf(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  uint64_t *v7;
  unint64_t v8;
  uint64_t *v9;
  unint64_t v10;

  v4 = sub_235EE5B90();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = (uint64_t *)(a1 + a2[5]);
  v6 = v5[1];
  if (v6 >> 60 != 15)
    sub_235E90954(*v5, v6);
  v7 = (uint64_t *)(a1 + a2[6]);
  v8 = v7[1];
  if (v8 >> 60 != 15)
    sub_235E90954(*v7, v8);
  v9 = (uint64_t *)(a1 + a2[7]);
  v10 = v9[1];
  if (v10 >> 60 != 15)
    sub_235E90954(*v9, v10);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SecureCloudInviteUserInfoProtobuf(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;

  v6 = sub_235EE5B90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = (uint64_t *)(a2 + v7);
  v10 = v9[1];
  if (v10 >> 60 == 15)
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
  }
  else
  {
    v11 = *v9;
    sub_235E90998(*v9, v9[1]);
    *(_QWORD *)v8 = v11;
    *(_QWORD *)(v8 + 8) = v10;
  }
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = (uint64_t *)(a2 + v12);
  v15 = v14[1];
  if (v15 >> 60 == 15)
  {
    *(_OWORD *)v13 = *(_OWORD *)v14;
  }
  else
  {
    v16 = *v14;
    sub_235E90998(*v14, v14[1]);
    *(_QWORD *)v13 = v16;
    *(_QWORD *)(v13 + 8) = v15;
  }
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = (uint64_t *)(a2 + v17);
  v20 = v19[1];
  if (v20 >> 60 == 15)
  {
    *(_OWORD *)v18 = *(_OWORD *)v19;
  }
  else
  {
    v21 = *v19;
    sub_235E90998(*v19, v19[1]);
    *(_QWORD *)v18 = v21;
    *(_QWORD *)(v18 + 8) = v20;
  }
  v22 = a3[8];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SecureCloudInviteUserInfoProtobuf(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;

  v6 = sub_235EE5B90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (uint64_t *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v10 = *(_QWORD *)(a2 + v7 + 8);
  if (*(_QWORD *)(a1 + v7 + 8) >> 60 == 15)
  {
    if (v10 >> 60 != 15)
    {
      v11 = *v9;
      sub_235E90998(v11, v10);
      *v8 = v11;
      v8[1] = v10;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v10 >> 60 == 15)
  {
    sub_235E97C08((uint64_t)v8);
LABEL_6:
    *(_OWORD *)v8 = *(_OWORD *)v9;
    goto LABEL_8;
  }
  v12 = *v9;
  sub_235E90998(v12, v10);
  v13 = *v8;
  v14 = v8[1];
  *v8 = v12;
  v8[1] = v10;
  sub_235E90954(v13, v14);
LABEL_8:
  v15 = a3[6];
  v16 = (uint64_t *)(a1 + v15);
  v17 = (uint64_t *)(a2 + v15);
  v18 = *(_QWORD *)(a2 + v15 + 8);
  if (*(_QWORD *)(a1 + v15 + 8) >> 60 == 15)
  {
    if (v18 >> 60 != 15)
    {
      v19 = *v17;
      sub_235E90998(v19, v18);
      *v16 = v19;
      v16[1] = v18;
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (v18 >> 60 == 15)
  {
    sub_235E97C08((uint64_t)v16);
LABEL_13:
    *(_OWORD *)v16 = *(_OWORD *)v17;
    goto LABEL_15;
  }
  v20 = *v17;
  sub_235E90998(v20, v18);
  v21 = *v16;
  v22 = v16[1];
  *v16 = v20;
  v16[1] = v18;
  sub_235E90954(v21, v22);
LABEL_15:
  v23 = a3[7];
  v24 = (uint64_t *)(a1 + v23);
  v25 = (uint64_t *)(a2 + v23);
  v26 = *(_QWORD *)(a2 + v23 + 8);
  if (*(_QWORD *)(a1 + v23 + 8) >> 60 != 15)
  {
    if (v26 >> 60 != 15)
    {
      v28 = *v25;
      sub_235E90998(v28, v26);
      v29 = *v24;
      v30 = v24[1];
      *v24 = v28;
      v24[1] = v26;
      sub_235E90954(v29, v30);
      goto LABEL_22;
    }
    sub_235E97C08((uint64_t)v24);
    goto LABEL_20;
  }
  if (v26 >> 60 == 15)
  {
LABEL_20:
    *(_OWORD *)v24 = *(_OWORD *)v25;
    goto LABEL_22;
  }
  v27 = *v25;
  sub_235E90998(v27, v26);
  *v24 = v27;
  v24[1] = v26;
LABEL_22:
  v31 = a3[8];
  v32 = (_QWORD *)(a1 + v31);
  v33 = (_QWORD *)(a2 + v31);
  *v32 = *v33;
  v32[1] = v33[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for SecureCloudInviteUserInfoProtobuf(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_235EE5B90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  return a1;
}

uint64_t assignWithTake for SecureCloudInviteUserInfoProtobuf(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;

  v6 = sub_235EE5B90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a1 + v7 + 8);
  if (v10 >> 60 == 15)
    goto LABEL_4;
  v11 = *(_QWORD *)(v9 + 8);
  if (v11 >> 60 == 15)
  {
    sub_235E97C08(v8);
LABEL_4:
    *(_OWORD *)v8 = *(_OWORD *)v9;
    goto LABEL_6;
  }
  v12 = *(_QWORD *)v8;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_QWORD *)(v8 + 8) = v11;
  sub_235E90954(v12, v10);
LABEL_6:
  v13 = a3[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = *(_QWORD *)(a1 + v13 + 8);
  if (v16 >> 60 == 15)
  {
LABEL_9:
    *(_OWORD *)v14 = *(_OWORD *)v15;
    goto LABEL_11;
  }
  v17 = *(_QWORD *)(v15 + 8);
  if (v17 >> 60 == 15)
  {
    sub_235E97C08(v14);
    goto LABEL_9;
  }
  v18 = *(_QWORD *)v14;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_QWORD *)(v14 + 8) = v17;
  sub_235E90954(v18, v16);
LABEL_11:
  v19 = a3[7];
  v20 = (uint64_t *)(a1 + v19);
  v21 = (uint64_t *)(a2 + v19);
  v22 = *(_QWORD *)(a1 + v19 + 8);
  if (v22 >> 60 != 15)
  {
    v23 = v21[1];
    if (v23 >> 60 != 15)
    {
      v24 = *v20;
      *v20 = *v21;
      v20[1] = v23;
      sub_235E90954(v24, v22);
      goto LABEL_16;
    }
    sub_235E97C08((uint64_t)v20);
  }
  *(_OWORD *)v20 = *(_OWORD *)v21;
LABEL_16:
  v25 = a3[8];
  v26 = (_QWORD *)(a1 + v25);
  v27 = (uint64_t *)(a2 + v25);
  v29 = *v27;
  v28 = v27[1];
  *v26 = v29;
  v26[1] = v28;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SecureCloudInviteUserInfoProtobuf()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_235EAA934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_235EE5B90();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 32) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for SecureCloudInviteUserInfoProtobuf()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_235EAA9CC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_235EE5B90();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 32) + 8) = a2;
  return result;
}

uint64_t sub_235EAAA48()
{
  uint64_t result;
  unint64_t v1;

  result = sub_235EE5B90();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t SecureCloudInviteResponseProtobuf.date.setter(double a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = type metadata accessor for SecureCloudInviteResponseProtobuf();
  v4 = v1 + *(int *)(result + 20);
  *(double *)v4 = a1;
  *(_BYTE *)(v4 + 8) = 0;
  return result;
}

uint64_t type metadata accessor for SecureCloudInviteResponseProtobuf()
{
  uint64_t result;

  result = qword_25638BE98;
  if (!qword_25638BE98)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t SecureCloudInviteResponseProtobuf.handshakeToken.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 24));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t SecureCloudInviteResponseProtobuf.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 28));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t SecureCloudInviteResponseProtobuf.buildNumber.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 32));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t SecureCloudInviteResponseProtobuf.userInfo.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 40);
  sub_235E8EC2C(v3, &qword_25638B6C0);
  sub_235E95A8C(a1, v3);
  v4 = type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 0, 1, v4);
}

uint64_t SecureCloudInviteResponseProtobuf.version.setter(int a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = type metadata accessor for SecureCloudInviteResponseProtobuf();
  v4 = v1 + *(int *)(result + 44);
  *(_DWORD *)v4 = a1;
  *(_BYTE *)(v4 + 4) = 0;
  return result;
}

uint64_t SecureCloudInviteResponseProtobuf.type.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t result;
  uint64_t v5;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  result = type metadata accessor for SecureCloudInviteResponseProtobuf();
  v5 = v1 + *(int *)(result + 36);
  *(_QWORD *)v5 = v2;
  *(_BYTE *)(v5 + 8) = v3;
  *(_BYTE *)(v5 + 9) = 0;
  return result;
}

double SecureCloudInviteResponseProtobuf.date.getter()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  v1 = v0 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 20);
  result = *(double *)v1;
  if (*(_BYTE *)(v1 + 8))
    return 0.0;
  return result;
}

uint64_t SecureCloudInviteResponseProtobuf.handshakeToken.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 24));
  if (v1[1])
    v2 = *v1;
  else
    v2 = 0;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t SecureCloudInviteResponseProtobuf.identifier.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 28));
  if (v1[1])
    v2 = *v1;
  else
    v2 = 0;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t SecureCloudInviteResponseProtobuf.buildNumber.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 32));
  if (v1[1])
    v2 = *v1;
  else
    v2 = 0;
  swift_bridgeObjectRetain();
  return v2;
}

BOOL SecureCloudInviteResponseProtobuf.hasUserInfo.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL8 v6;
  uint64_t v8;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638B6C0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for SecureCloudInviteResponseProtobuf();
  sub_235E95A44(v0 + *(int *)(v4 + 40), (uint64_t)v3);
  v5 = type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_235E8EC2C((uint64_t)v3, &qword_25638B6C0);
  return v6;
}

uint64_t SecureCloudInviteResponseProtobuf.userInfo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int *v7;
  _QWORD *v8;
  uint64_t v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638B6C0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SecureCloudInviteResponseProtobuf();
  sub_235E95A44(v1 + *(int *)(v6 + 40), (uint64_t)v5);
  v7 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48))(v5, 1, v7) != 1)
    return sub_235E95A8C((uint64_t)v5, a1);
  sub_235EE5B84();
  *(_OWORD *)(a1 + v7[5]) = xmmword_235EE6E80;
  *(_OWORD *)(a1 + v7[6]) = xmmword_235EE6E80;
  *(_OWORD *)(a1 + v7[7]) = xmmword_235EE6E80;
  v8 = (_QWORD *)(a1 + v7[8]);
  *v8 = 0;
  v8[1] = 0;
  return sub_235E8EC2C((uint64_t)v5, &qword_25638B6C0);
}

uint64_t SecureCloudInviteResponseProtobuf.version.getter()
{
  uint64_t v0;
  _BYTE *v1;

  v1 = (_BYTE *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 44));
  if (v1[4])
    return 0;
  else
    return *(unsigned int *)v1;
}

uint64_t SecureCloudInviteResponseProtobuf.type.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  char v6;
  char v7;

  result = type metadata accessor for SecureCloudInviteResponseProtobuf();
  v4 = (uint64_t *)(v1 + *(int *)(result + 36));
  if ((*((_BYTE *)v4 + 9) & 1) != 0)
  {
    v5 = 0;
    v6 = 1;
  }
  else
  {
    v7 = *((_BYTE *)v4 + 8);
    v5 = *v4;
    v6 = v7 & 1;
  }
  *(_QWORD *)a1 = v5;
  *(_BYTE *)(a1 + 8) = v6;
  return result;
}

uint64_t (*SecureCloudInviteResponseProtobuf.date.modify(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 20);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = v1 + v3;
  v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8))
    v5 = 0.0;
  *(double *)a1 = v5;
  return sub_235E950C4;
}

BOOL SecureCloudInviteResponseProtobuf.hasDate.getter()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 20) + 8) & 1) == 0;
}

Swift::Void __swiftcall SecureCloudInviteResponseProtobuf.clearDate()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 20);
  *(_QWORD *)v1 = 0;
  *(_BYTE *)(v1 + 8) = 1;
}

uint64_t sub_235EAB0E4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 24));
  v4 = v3[1];
  if (v4)
  {
    v5 = *v3;
    v6 = v4;
  }
  else
  {
    v5 = 0;
    v6 = 0xE000000000000000;
  }
  *a2 = v5;
  a2[1] = v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_235EAB134(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(a2 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 24));
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *v4 = v3;
  v4[1] = v2;
  return result;
}

uint64_t (*SecureCloudInviteResponseProtobuf.handshakeToken.modify(uint64_t a1))(uint64_t *, char)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 24);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v1 + v3);
  v5 = v4[1];
  if (v5)
  {
    v6 = *v4;
    v7 = v5;
  }
  else
  {
    v6 = 0;
    v7 = 0xE000000000000000;
  }
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_235E952D0;
}

BOOL SecureCloudInviteResponseProtobuf.hasHandshakeToken.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 24) + 8) != 0;
}

Swift::Void __swiftcall SecureCloudInviteResponseProtobuf.clearHandshakeToken()()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 24));
  swift_bridgeObjectRelease();
  *v1 = 0;
  v1[1] = 0;
}

uint64_t sub_235EAB24C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 28));
  v4 = v3[1];
  if (v4)
  {
    v5 = *v3;
    v6 = v4;
  }
  else
  {
    v5 = 0;
    v6 = 0xE000000000000000;
  }
  *a2 = v5;
  a2[1] = v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_235EAB29C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(a2 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 28));
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *v4 = v3;
  v4[1] = v2;
  return result;
}

uint64_t (*SecureCloudInviteResponseProtobuf.identifier.modify(uint64_t a1))(uint64_t *, char)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 28);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v1 + v3);
  v5 = v4[1];
  if (v5)
  {
    v6 = *v4;
    v7 = v5;
  }
  else
  {
    v6 = 0;
    v7 = 0xE000000000000000;
  }
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_235E952D0;
}

BOOL SecureCloudInviteResponseProtobuf.hasIdentifier.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 28) + 8) != 0;
}

Swift::Void __swiftcall SecureCloudInviteResponseProtobuf.clearIdentifier()()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 28));
  swift_bridgeObjectRelease();
  *v1 = 0;
  v1[1] = 0;
}

uint64_t sub_235EAB3B4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 32));
  v4 = v3[1];
  if (v4)
  {
    v5 = *v3;
    v6 = v4;
  }
  else
  {
    v5 = 0;
    v6 = 0xE000000000000000;
  }
  *a2 = v5;
  a2[1] = v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_235EAB404(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(a2 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 32));
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *v4 = v3;
  v4[1] = v2;
  return result;
}

uint64_t (*SecureCloudInviteResponseProtobuf.buildNumber.modify(uint64_t a1))(uint64_t *, char)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 32);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v1 + v3);
  v5 = v4[1];
  if (v5)
  {
    v6 = *v4;
    v7 = v5;
  }
  else
  {
    v6 = 0;
    v7 = 0xE000000000000000;
  }
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_235E952D0;
}

BOOL SecureCloudInviteResponseProtobuf.hasBuildNumber.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 32) + 8) != 0;
}

Swift::Void __swiftcall SecureCloudInviteResponseProtobuf.clearBuildNumber()()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 32));
  swift_bridgeObjectRelease();
  *v1 = 0;
  v1[1] = 0;
}

uint64_t (*SecureCloudInviteResponseProtobuf.type.modify(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  char v6;
  char v7;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 36);
  *(_DWORD *)(a1 + 12) = v3;
  v4 = (uint64_t *)(v1 + v3);
  if ((*((_BYTE *)v4 + 9) & 1) != 0)
  {
    v5 = 0;
    v6 = 1;
  }
  else
  {
    v7 = *((_BYTE *)v4 + 8);
    v5 = *v4;
    v6 = v7 & 1;
  }
  *(_QWORD *)a1 = v5;
  *(_BYTE *)(a1 + 8) = v6;
  return sub_235EA28B4;
}

BOOL SecureCloudInviteResponseProtobuf.hasType.getter()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 36) + 9) & 1) == 0;
}

Swift::Void __swiftcall SecureCloudInviteResponseProtobuf.clearType()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 36);
  *(_QWORD *)v1 = 0;
  *(_WORD *)(v1 + 8) = 256;
}

uint64_t sub_235EAB5DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  int *v8;
  _QWORD *v9;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638B6C0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SecureCloudInviteResponseProtobuf();
  sub_235E95A44(a1 + *(int *)(v7 + 40), (uint64_t)v6);
  v8 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v8 - 1) + 48))(v6, 1, v8) != 1)
    return sub_235E95A8C((uint64_t)v6, a2);
  sub_235EE5B84();
  *(_OWORD *)(a2 + v8[5]) = xmmword_235EE6E80;
  *(_OWORD *)(a2 + v8[6]) = xmmword_235EE6E80;
  *(_OWORD *)(a2 + v8[7]) = xmmword_235EE6E80;
  v9 = (_QWORD *)(a2 + v8[8]);
  *v9 = 0;
  v9[1] = 0;
  return sub_235E8EC2C((uint64_t)v6, &qword_25638B6C0);
}

uint64_t sub_235EAB6D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_235E95CE8(a1, (uint64_t)v7);
  v8 = a2 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 40);
  sub_235E8EC2C(v8, &qword_25638B6C0);
  sub_235E95A8C((uint64_t)v7, v8);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v8, 0, 1, v4);
}

void (*SecureCloudInviteResponseProtobuf.userInfo.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  int *v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  char *v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638B6C0);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  v3[2] = v6;
  v7 = *((_QWORD *)v6 - 1);
  v3[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[4] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[5] = v9;
  v10 = *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 40);
  *((_DWORD *)v3 + 12) = v10;
  sub_235E95A44(v1 + v10, (uint64_t)v5);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_235EE5B84();
    *(_OWORD *)&v9[v6[5]] = xmmword_235EE6E80;
    *(_OWORD *)&v9[v6[6]] = xmmword_235EE6E80;
    *(_OWORD *)&v9[v6[7]] = xmmword_235EE6E80;
    v11 = &v9[v6[8]];
    *(_QWORD *)v11 = 0;
    *((_QWORD *)v11 + 1) = 0;
    sub_235E8EC2C((uint64_t)v5, &qword_25638B6C0);
  }
  else
  {
    sub_235E95A8C((uint64_t)v5, (uint64_t)v9);
  }
  return sub_235E95C00;
}

Swift::Void __swiftcall SecureCloudInviteResponseProtobuf.clearUserInfo()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 40);
  sub_235E8EC2C(v1, &qword_25638B6C0);
  v2 = type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
}

uint64_t (*SecureCloudInviteResponseProtobuf.version.modify(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 44);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_235E95F24;
}

BOOL SecureCloudInviteResponseProtobuf.hasVersion.getter()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 44) + 4) & 1) == 0;
}

Swift::Void __swiftcall SecureCloudInviteResponseProtobuf.clearVersion()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 44);
  *(_DWORD *)v1 = 0;
  *(_BYTE *)(v1 + 4) = 1;
}

uint64_t SecureCloudInviteResponseProtobuf.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_235EE5B90();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t SecureCloudInviteResponseProtobuf.unknownFields.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_235EE5B90();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*SecureCloudInviteResponseProtobuf.unknownFields.modify())()
{
  return nullsub_1;
}

void SecureCloudInviteResponseProtobuf.ProtobufType.init()(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

unint64_t SecureCloudInviteResponseProtobuf.ProtobufType.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = result < 5;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

uint64_t SecureCloudInviteResponseProtobuf.ProtobufType.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_235EABA78()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

unint64_t sub_235EABA80@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return SecureCloudInviteResponseProtobuf.ProtobufType.init(rawValue:)(*a1, a2);
}

uint64_t sub_235EABA88()
{
  sub_235EAC55C();
  return sub_235EE5BCC();
}

BOOL sub_235EABAC0(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t SecureCloudInviteResponseProtobuf.init()@<X0>(uint64_t a1@<X8>)
{
  int *v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  sub_235EE5B84();
  v2 = (int *)type metadata accessor for SecureCloudInviteResponseProtobuf();
  v3 = a1 + v2[5];
  *(_QWORD *)v3 = 0;
  *(_BYTE *)(v3 + 8) = 1;
  v4 = (_QWORD *)(a1 + v2[6]);
  *v4 = 0;
  v4[1] = 0;
  v5 = (_QWORD *)(a1 + v2[7]);
  *v5 = 0;
  v5[1] = 0;
  v6 = (_QWORD *)(a1 + v2[8]);
  *v6 = 0;
  v6[1] = 0;
  v7 = a1 + v2[9];
  *(_QWORD *)v7 = 0;
  *(_WORD *)(v7 + 8) = 256;
  v8 = a1 + v2[10];
  v9 = type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v11 = a1 + v2[11];
  *(_DWORD *)v11 = 0;
  *(_BYTE *)(v11 + 4) = 1;
  return result;
}

void sub_235EABB90()
{
  qword_25638BDC8 = (uint64_t)&unk_2507443E8;
}

uint64_t static SecureCloudInviteResponseProtobuf.ProtobufType.allCases.getter()
{
  if (qword_25638B500 != -1)
    swift_once();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static SecureCloudInviteResponseProtobuf.ProtobufType.allCases.setter(uint64_t a1)
{
  if (qword_25638B500 != -1)
    swift_once();
  swift_beginAccess();
  qword_25638BDC8 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static SecureCloudInviteResponseProtobuf.ProtobufType.allCases.modify())()
{
  if (qword_25638B500 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_235EABCF0@<X0>(_QWORD *a1@<X8>)
{
  if (qword_25638B500 != -1)
    swift_once();
  swift_beginAccess();
  *a1 = qword_25638BDC8;
  return swift_bridgeObjectRetain();
}

unint64_t static SecureCloudInviteResponseProtobuf.protoMessageName.getter()
{
  return 0xD000000000000021;
}

uint64_t sub_235EABD80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;

  v0 = sub_235EE5CD4();
  __swift_allocate_value_buffer(v0, qword_25638BDD0);
  __swift_project_value_buffer(v0, (uint64_t)qword_25638BDD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25638B600);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638B608);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_235EE7AE0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "date";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_235EE5CBC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "handshakeToken";
  *(_QWORD *)(v11 + 8) = 14;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "identifier";
  *((_QWORD *)v13 + 1) = 10;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "buildNumber";
  *((_QWORD *)v15 + 1) = 11;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "type";
  *((_QWORD *)v17 + 1) = 4;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "userInfo";
  *((_QWORD *)v19 + 1) = 8;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "version";
  *((_QWORD *)v21 + 1) = 7;
  v21[16] = 2;
  v10();
  return sub_235EE5CC8();
}

uint64_t static SecureCloudInviteResponseProtobuf._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_235EA3960(&qword_25638B508, (uint64_t)qword_25638BDD0, a1);
}

uint64_t SecureCloudInviteResponseProtobuf.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_235EE5BD8();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          type metadata accessor for SecureCloudInviteResponseProtobuf();
          sub_235EE5BFC();
          break;
        case 2:
        case 3:
        case 4:
          type metadata accessor for SecureCloudInviteResponseProtobuf();
          sub_235EE5C08();
          break;
        case 5:
          sub_235EAC17C();
          break;
        case 6:
          sub_235EAC1F0();
          break;
        case 7:
          type metadata accessor for SecureCloudInviteResponseProtobuf();
          sub_235EE5C14();
          break;
        default:
          break;
      }
      result = sub_235EE5BD8();
    }
  }
  return result;
}

uint64_t sub_235EAC17C()
{
  type metadata accessor for SecureCloudInviteResponseProtobuf();
  sub_235EAC55C();
  return sub_235EE5BE4();
}

uint64_t sub_235EAC1F0()
{
  type metadata accessor for SecureCloudInviteResponseProtobuf();
  type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  sub_235E930EC(&qword_25638B6C8, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudInviteUserInfoProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudInviteUserInfoProtobuf);
  return sub_235EE5C20();
}

uint64_t SecureCloudInviteResponseProtobuf.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  char v13;
  uint64_t result;
  uint64_t *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638B6C0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v19 = (uint64_t)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (int *)type metadata accessor for SecureCloudInviteResponseProtobuf();
  v13 = *(_BYTE *)(v3 + v12[5] + 8);
  v22 = a3;
  if ((v13 & 1) != 0 || (result = sub_235EE5C8C(), !v4))
  {
    if (!*(_QWORD *)(v3 + v12[6] + 8) || (result = sub_235EE5C98(), !v4))
    {
      if (!*(_QWORD *)(v3 + v12[7] + 8) || (result = sub_235EE5C98(), !v4))
      {
        if (!*(_QWORD *)(v3 + v12[8] + 8) || (result = sub_235EE5C98(), !v4))
        {
          v15 = (uint64_t *)(v3 + v12[9]);
          if ((*((_BYTE *)v15 + 9) & 1) != 0
            || (v16 = *((_BYTE *)v15 + 8), v20 = *v15, v21 = v16 & 1, sub_235EAC55C(), result = sub_235EE5C74(), !v4))
          {
            sub_235E95A44(v3 + v12[10], (uint64_t)v8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
            {
              sub_235E8EC2C((uint64_t)v8, &qword_25638B6C0);
            }
            else
            {
              v17 = v19;
              sub_235E95A8C((uint64_t)v8, v19);
              sub_235E930EC(&qword_25638B6C8, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudInviteUserInfoProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudInviteUserInfoProtobuf);
              sub_235EE5CB0();
              result = sub_235E95D2C(v17);
              if (v4)
                return result;
            }
            if ((*(_BYTE *)(v3 + v12[11] + 4) & 1) != 0)
              return sub_235EE5B78();
            result = sub_235EE5CA4();
            if (!v4)
              return sub_235EE5B78();
          }
        }
      }
    }
  }
  return result;
}

unint64_t sub_235EAC55C()
{
  unint64_t result;

  result = qword_25638BE00;
  if (!qword_25638BE00)
  {
    result = MEMORY[0x23B7E5230](&protocol conformance descriptor for SecureCloudInviteResponseProtobuf.ProtobufType, &type metadata for SecureCloudInviteResponseProtobuf.ProtobufType);
    atomic_store(result, (unint64_t *)&qword_25638BE00);
  }
  return result;
}

uint64_t SecureCloudInviteResponseProtobuf.hashValue.getter()
{
  sub_235EE6154();
  type metadata accessor for SecureCloudInviteResponseProtobuf();
  sub_235E930EC(&qword_25638BE08, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudInviteResponseProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudInviteResponseProtobuf);
  sub_235EE5D1C();
  return sub_235EE616C();
}

uint64_t sub_235EAC610@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  sub_235EE5B84();
  v4 = a1[6];
  v5 = a2 + a1[5];
  *(_QWORD *)v5 = 0;
  *(_BYTE *)(v5 + 8) = 1;
  v6 = (_QWORD *)(a2 + v4);
  *v6 = 0;
  v6[1] = 0;
  v7 = a1[8];
  v8 = (_QWORD *)(a2 + a1[7]);
  *v8 = 0;
  v8[1] = 0;
  v9 = (_QWORD *)(a2 + v7);
  *v9 = 0;
  v9[1] = 0;
  v10 = a1[10];
  v11 = a2 + a1[9];
  *(_WORD *)(v11 + 8) = 256;
  v12 = a2 + v10;
  *(_QWORD *)v11 = 0;
  v13 = type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v15 = a2 + a1[11];
  *(_DWORD *)v15 = 0;
  *(_BYTE *)(v15 + 4) = 1;
  return result;
}

unint64_t sub_235EAC6B8()
{
  return 0xD000000000000021;
}

uint64_t sub_235EAC6D4()
{
  return SecureCloudInviteResponseProtobuf.decodeMessage<A>(decoder:)();
}

uint64_t sub_235EAC6E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return SecureCloudInviteResponseProtobuf.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_235EAC6FC()
{
  sub_235E930EC(&qword_25638BEE8, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudInviteResponseProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudInviteResponseProtobuf);
  return sub_235EE5BC0();
}

uint64_t sub_235EAC74C@<X0>(uint64_t a1@<X8>)
{
  return sub_235EA39E4(&qword_25638B508, (uint64_t)qword_25638BDD0, a1);
}

uint64_t sub_235EAC768()
{
  sub_235E930EC(&qword_25638B870, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudInviteResponseProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudInviteResponseProtobuf);
  return sub_235EE5C50();
}

uint64_t sub_235EAC7A8()
{
  sub_235E930EC(&qword_25638B870, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudInviteResponseProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudInviteResponseProtobuf);
  return sub_235EE5C5C();
}

uint64_t sub_235EAC7FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;

  v0 = sub_235EE5CD4();
  __swift_allocate_value_buffer(v0, qword_25638BDE8);
  __swift_project_value_buffer(v0, (uint64_t)qword_25638BDE8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25638B600);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638B608);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_235EE8140;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 0;
  *(_QWORD *)v7 = "accept";
  *(_QWORD *)(v7 + 8) = 6;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_235EE5CBC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 1;
  *(_QWORD *)v11 = "incompatibleVersion";
  *(_QWORD *)(v11 + 8) = 19;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "incompatibleAccount";
  *((_QWORD *)v13 + 1) = 19;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "ineligibleDevices";
  *((_QWORD *)v15 + 1) = 17;
  v15[16] = 2;
  v10();
  v16 = v6 + 4 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + 4 * v3) = 4;
  *(_QWORD *)v16 = "invalidAddress";
  *(_QWORD *)(v16 + 8) = 14;
  *(_BYTE *)(v16 + 16) = 2;
  v10();
  return sub_235EE5CC8();
}

uint64_t static SecureCloudInviteResponseProtobuf.ProtobufType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_235EA3960(&qword_25638B510, (uint64_t)qword_25638BDE8, a1);
}

uint64_t sub_235EACA1C@<X0>(uint64_t a1@<X8>)
{
  return sub_235EA39E4(&qword_25638B510, (uint64_t)qword_25638BDE8, a1);
}

uint64_t _s21ActivitySharingClient33SecureCloudInviteResponseProtobufV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  double *v25;
  char v26;
  double *v27;
  int v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  char v47;
  uint64_t *v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int (*v52)(uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  _DWORD *v58;
  char v59;
  _DWORD *v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t, uint64_t);
  char *v65;
  char *v66;
  void (*v67)(char *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;

  v4 = sub_235EE5B90();
  v74 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v73 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v72 = (char *)&v69 - v7;
  v75 = type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  v8 = *(_QWORD *)(v75 - 8);
  MEMORY[0x24BDAC7A8](v75);
  v10 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638B7A8);
  MEMORY[0x24BDAC7A8](v11);
  v76 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638B6C0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v69 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v69 - v20;
  v22 = type metadata accessor for SecureCloudInviteResponseProtobuf();
  v23 = (int *)v22;
  v24 = *(int *)(v22 + 20);
  v25 = (double *)(a1 + v24);
  v26 = *(_BYTE *)(a1 + v24 + 8);
  v27 = (double *)(a2 + v24);
  v28 = *(unsigned __int8 *)(a2 + v24 + 8);
  if ((v26 & 1) != 0)
  {
    if (!v28)
      goto LABEL_49;
  }
  else
  {
    if (*v25 != *v27)
      LOBYTE(v28) = 1;
    if ((v28 & 1) != 0)
      goto LABEL_49;
  }
  v29 = *(int *)(v22 + 24);
  v30 = (_QWORD *)(a1 + v29);
  v31 = *(_QWORD *)(a1 + v29 + 8);
  v32 = (_QWORD *)(a2 + v29);
  v33 = v32[1];
  if (v31)
  {
    if (!v33)
      goto LABEL_49;
    v71 = v4;
    if (*v30 != *v32 || v31 != v33)
    {
      v34 = 0;
      if ((sub_235EE60D0() & 1) == 0)
        return v34 & 1;
    }
  }
  else
  {
    v71 = v4;
    if (v33)
      goto LABEL_49;
  }
  v35 = v23[7];
  v36 = (_QWORD *)(a1 + v35);
  v37 = *(_QWORD *)(a1 + v35 + 8);
  v38 = (_QWORD *)(a2 + v35);
  v39 = v38[1];
  if (v37)
  {
    if (!v39)
      goto LABEL_49;
    if (*v36 != *v38 || v37 != v39)
    {
      v34 = 0;
      if ((sub_235EE60D0() & 1) == 0)
        return v34 & 1;
    }
  }
  else if (v39)
  {
    goto LABEL_49;
  }
  v40 = v23[8];
  v41 = (_QWORD *)(a1 + v40);
  v42 = *(_QWORD *)(a1 + v40 + 8);
  v43 = (_QWORD *)(a2 + v40);
  v44 = v43[1];
  if (v42)
  {
    if (!v44)
      goto LABEL_49;
    if (*v41 != *v43 || v42 != v44)
    {
      v34 = 0;
      if ((sub_235EE60D0() & 1) == 0)
        return v34 & 1;
    }
  }
  else if (v44)
  {
    goto LABEL_49;
  }
  v45 = v23[9];
  v46 = (uint64_t *)(a1 + v45);
  v47 = *(_BYTE *)(a1 + v45 + 9);
  v48 = (uint64_t *)(a2 + v45);
  v49 = *(_BYTE *)(a2 + v45 + 9);
  if ((v47 & 1) != 0)
  {
    v50 = (uint64_t)v76;
    if ((v49 & 1) == 0)
      goto LABEL_49;
  }
  else
  {
    v50 = (uint64_t)v76;
    if ((v49 & 1) != 0)
      goto LABEL_49;
    v54 = *v46;
    v55 = *v48;
    if ((v48[1] & 1) != 0)
      __asm { BR              X11 }
    if (v54 != v55)
      goto LABEL_49;
  }
  sub_235E95A44(a1 + v23[10], (uint64_t)v21);
  sub_235E95A44(a2 + v23[10], (uint64_t)v19);
  v51 = v50 + *(int *)(v11 + 48);
  sub_235E95A44((uint64_t)v21, v50);
  v70 = v51;
  sub_235E95A44((uint64_t)v19, v51);
  v52 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  v53 = v75;
  if (v52(v50, 1, v75) != 1)
  {
    sub_235E95A44(v50, (uint64_t)v16);
    if (v52(v70, 1, v53) == 1)
    {
      sub_235E8EC2C((uint64_t)v19, &qword_25638B6C0);
      sub_235E8EC2C((uint64_t)v21, &qword_25638B6C0);
      sub_235E95D2C((uint64_t)v16);
      goto LABEL_39;
    }
    sub_235E95A8C(v70, (uint64_t)v10);
    v56 = static SecureCloudInviteUserInfoProtobuf.== infix(_:_:)((uint64_t)v16, (uint64_t)v10);
    sub_235E95D2C((uint64_t)v10);
    sub_235E8EC2C((uint64_t)v19, &qword_25638B6C0);
    sub_235E8EC2C((uint64_t)v21, &qword_25638B6C0);
    sub_235E95D2C((uint64_t)v16);
    sub_235E8EC2C(v50, &qword_25638B6C0);
    if ((v56 & 1) != 0)
      goto LABEL_42;
LABEL_49:
    v34 = 0;
    return v34 & 1;
  }
  sub_235E8EC2C((uint64_t)v19, &qword_25638B6C0);
  v50 = (uint64_t)v76;
  sub_235E8EC2C((uint64_t)v21, &qword_25638B6C0);
  if (v52(v70, 1, v53) != 1)
  {
LABEL_39:
    sub_235E8EC2C(v50, &qword_25638B7A8);
    goto LABEL_49;
  }
  sub_235E8EC2C(v50, &qword_25638B6C0);
LABEL_42:
  v57 = v23[11];
  v58 = (_DWORD *)(a1 + v57);
  v59 = *(_BYTE *)(a1 + v57 + 4);
  v60 = (_DWORD *)(a2 + v57);
  v61 = *(unsigned __int8 *)(a2 + v57 + 4);
  if ((v59 & 1) != 0)
  {
    v62 = v71;
    if (!v61)
      goto LABEL_49;
  }
  else
  {
    if (*v58 != *v60)
      LOBYTE(v61) = 1;
    v62 = v71;
    if ((v61 & 1) != 0)
      goto LABEL_49;
  }
  v63 = v74;
  v64 = *(void (**)(char *, uint64_t, uint64_t))(v74 + 16);
  v65 = v72;
  v64(v72, a1, v62);
  v66 = v73;
  v64(v73, a2, v62);
  sub_235E930EC(&qword_25638B5F8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v34 = sub_235EE5D28();
  v67 = *(void (**)(char *, uint64_t))(v63 + 8);
  v67(v66, v62);
  v67(v65, v62);
  return v34 & 1;
}

unint64_t sub_235EACFC4()
{
  unint64_t result;

  result = qword_25638BE10;
  if (!qword_25638BE10)
  {
    result = MEMORY[0x23B7E5230](&protocol conformance descriptor for SecureCloudInviteResponseProtobuf.ProtobufType, &type metadata for SecureCloudInviteResponseProtobuf.ProtobufType);
    atomic_store(result, (unint64_t *)&qword_25638BE10);
  }
  return result;
}

unint64_t sub_235EAD00C()
{
  unint64_t result;

  result = qword_25638BE18;
  if (!qword_25638BE18)
  {
    result = MEMORY[0x23B7E5230](&protocol conformance descriptor for SecureCloudInviteResponseProtobuf.ProtobufType, &type metadata for SecureCloudInviteResponseProtobuf.ProtobufType);
    atomic_store(result, (unint64_t *)&qword_25638BE18);
  }
  return result;
}

unint64_t sub_235EAD054()
{
  unint64_t result;

  result = qword_25638BE20;
  if (!qword_25638BE20)
  {
    result = MEMORY[0x23B7E5230](&protocol conformance descriptor for SecureCloudInviteResponseProtobuf.ProtobufType, &type metadata for SecureCloudInviteResponseProtobuf.ProtobufType);
    atomic_store(result, (unint64_t *)&qword_25638BE20);
  }
  return result;
}

unint64_t sub_235EAD09C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25638BE28;
  if (!qword_25638BE28)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25638BE30);
    result = MEMORY[0x23B7E5230](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_25638BE28);
  }
  return result;
}

uint64_t sub_235EAD0E8()
{
  return sub_235E930EC(&qword_25638BE38, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudInviteResponseProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudInviteResponseProtobuf);
}

uint64_t sub_235EAD114()
{
  return sub_235E930EC(&qword_25638B870, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudInviteResponseProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudInviteResponseProtobuf);
}

uint64_t sub_235EAD140()
{
  return sub_235E930EC(&qword_25638BE08, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudInviteResponseProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudInviteResponseProtobuf);
}

uint64_t sub_235EAD16C()
{
  return sub_235E930EC(&qword_25638B880, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudInviteResponseProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudInviteResponseProtobuf);
}

uint64_t sub_235EAD198@<X0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  double v6;

  result = type metadata accessor for SecureCloudInviteResponseProtobuf();
  v5 = a1 + *(int *)(result + 20);
  v6 = *(double *)v5;
  if (*(_BYTE *)(v5 + 8))
    v6 = 0.0;
  *a2 = v6;
  return result;
}

uint64_t sub_235EAD1E0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1;
  result = type metadata accessor for SecureCloudInviteResponseProtobuf();
  v5 = a2 + *(int *)(result + 20);
  *(_QWORD *)v5 = v3;
  *(_BYTE *)(v5 + 8) = 0;
  return result;
}

uint64_t sub_235EAD230@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t *v5;
  uint64_t v6;
  char v7;
  int v8;

  result = type metadata accessor for SecureCloudInviteResponseProtobuf();
  v5 = (uint64_t *)(a1 + *(int *)(result + 36));
  v6 = *v5;
  v7 = *((_BYTE *)v5 + 8);
  v8 = *((unsigned __int8 *)v5 + 9);
  if (v8)
    v6 = 0;
  *(_QWORD *)a2 = v6;
  *(_BYTE *)(a2 + 8) = (v8 | v7) & 1;
  return result;
}

uint64_t sub_235EAD284(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t result;
  uint64_t v6;

  v3 = *a1;
  v4 = *((_BYTE *)a1 + 8);
  result = type metadata accessor for SecureCloudInviteResponseProtobuf();
  v6 = a2 + *(int *)(result + 36);
  *(_QWORD *)v6 = v3;
  *(_BYTE *)(v6 + 8) = v4;
  *(_BYTE *)(v6 + 9) = 0;
  return result;
}

uint64_t sub_235EAD2D4@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result;
  int *v5;
  int v6;

  result = type metadata accessor for SecureCloudInviteResponseProtobuf();
  v5 = (int *)(a1 + *(int *)(result + 44));
  if (*((_BYTE *)v5 + 4))
    v6 = 0;
  else
    v6 = *v5;
  *a2 = v6;
  return result;
}

uint64_t sub_235EAD318(int *a1, uint64_t a2)
{
  int v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1;
  result = type metadata accessor for SecureCloudInviteResponseProtobuf();
  v5 = a2 + *(int *)(result + 44);
  *(_DWORD *)v5 = v3;
  *(_BYTE *)(v5 + 4) = 0;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SecureCloudInviteResponseProtobuf(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  int *v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, int *);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  unint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  void (*v53)(char *, _QWORD, uint64_t, int *);
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v58;
  void (*v59)(uint64_t *, uint64_t *);
  uint64_t v60;
  char *__dst;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v32 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v32 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_235EE5B90();
    v59 = *(void (**)(uint64_t *, uint64_t *))(*(_QWORD *)(v7 - 8) + 16);
    v60 = v7;
    v59(a1, a2);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
    v12 = (uint64_t *)((char *)a1 + v9);
    v13 = (uint64_t *)((char *)a2 + v9);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    v15 = a3[7];
    v16 = a3[8];
    v17 = (uint64_t *)((char *)a1 + v15);
    v18 = (uint64_t *)((char *)a2 + v15);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = (uint64_t *)((char *)a1 + v16);
    v21 = (uint64_t *)((char *)a2 + v16);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = a3[9];
    v24 = a3[10];
    v25 = (char *)a1 + v23;
    v26 = (char *)a2 + v23;
    *(_QWORD *)v25 = *(_QWORD *)v26;
    *((_WORD *)v25 + 4) = *((_WORD *)v26 + 4);
    __dst = (char *)a1 + v24;
    v27 = (char *)a2 + v24;
    v28 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf();
    v29 = *((_QWORD *)v28 - 1);
    v30 = *(unsigned int (**)(char *, uint64_t, int *))(v29 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v30(v27, 1, v28))
    {
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638B6C0);
      memcpy(__dst, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      v58 = v29;
      ((void (*)(char *, char *, uint64_t))v59)(__dst, v27, v60);
      v33 = v28[5];
      v34 = &__dst[v33];
      v35 = &v27[v33];
      v36 = *((_QWORD *)v35 + 1);
      v37 = v27;
      if (v36 >> 60 == 15)
      {
        *(_OWORD *)v34 = *(_OWORD *)v35;
      }
      else
      {
        v38 = *(_QWORD *)v35;
        sub_235E90998(*(_QWORD *)v35, *((_QWORD *)v35 + 1));
        *(_QWORD *)v34 = v38;
        *((_QWORD *)v34 + 1) = v36;
      }
      v39 = v28[6];
      v40 = &__dst[v39];
      v41 = &v27[v39];
      v42 = *((_QWORD *)v41 + 1);
      if (v42 >> 60 == 15)
      {
        *(_OWORD *)v40 = *(_OWORD *)v41;
      }
      else
      {
        v43 = *(_QWORD *)v41;
        sub_235E90998(*(_QWORD *)v41, *((_QWORD *)v41 + 1));
        *(_QWORD *)v40 = v43;
        *((_QWORD *)v40 + 1) = v42;
      }
      v44 = v28[7];
      v45 = &__dst[v44];
      v46 = &v37[v44];
      v47 = *((_QWORD *)v46 + 1);
      if (v47 >> 60 == 15)
      {
        *(_OWORD *)v45 = *(_OWORD *)v46;
      }
      else
      {
        v48 = *(_QWORD *)v46;
        sub_235E90998(*(_QWORD *)v46, *((_QWORD *)v46 + 1));
        *(_QWORD *)v45 = v48;
        *((_QWORD *)v45 + 1) = v47;
      }
      v49 = v28[8];
      v50 = &__dst[v49];
      v51 = &v37[v49];
      v52 = *((_QWORD *)v51 + 1);
      *(_QWORD *)v50 = *(_QWORD *)v51;
      *((_QWORD *)v50 + 1) = v52;
      v53 = *(void (**)(char *, _QWORD, uint64_t, int *))(v58 + 56);
      swift_bridgeObjectRetain();
      v53(__dst, 0, 1, v28);
    }
    v54 = a3[11];
    v55 = (char *)a1 + v54;
    v56 = (char *)a2 + v54;
    *(_DWORD *)v55 = *(_DWORD *)v56;
    v55[4] = v56[4];
  }
  return a1;
}

uint64_t destroy for SecureCloudInviteResponseProtobuf(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  int *v7;
  uint64_t result;
  uint64_t *v9;
  unint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t *v13;
  unint64_t v14;

  v4 = sub_235EE5B90();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = a1 + *(int *)(a2 + 40);
  v7 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48))(v6, 1, v7);
  if (!(_DWORD)result)
  {
    v5(v6, v4);
    v9 = (uint64_t *)(v6 + v7[5]);
    v10 = v9[1];
    if (v10 >> 60 != 15)
      sub_235E90954(*v9, v10);
    v11 = (uint64_t *)(v6 + v7[6]);
    v12 = v11[1];
    if (v12 >> 60 != 15)
      sub_235E90954(*v11, v12);
    v13 = (uint64_t *)(v6 + v7[7]);
    v14 = v13[1];
    if (v14 >> 60 != 15)
      sub_235E90954(*v13, v14);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for SecureCloudInviteResponseProtobuf(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  int *v27;
  uint64_t v28;
  unsigned int (*v29)(char *, uint64_t, int *);
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  unint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  void (*v51)(char *, _QWORD, uint64_t, int *);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  void (*v57)(uint64_t, uint64_t);
  uint64_t v58;
  char *__dst;

  v6 = sub_235EE5B90();
  v57 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v58 = v6;
  v57(a1, a2);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = (_QWORD *)(a1 + v8);
  v12 = (_QWORD *)(a2 + v8);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  v14 = a3[7];
  v15 = a3[8];
  v16 = (_QWORD *)(a1 + v14);
  v17 = (_QWORD *)(a2 + v14);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = (_QWORD *)(a1 + v15);
  v20 = (_QWORD *)(a2 + v15);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  v22 = a3[9];
  v23 = a3[10];
  v24 = a1 + v22;
  v25 = a2 + v22;
  *(_QWORD *)v24 = *(_QWORD *)v25;
  *(_WORD *)(v24 + 8) = *(_WORD *)(v25 + 8);
  __dst = (char *)(a1 + v23);
  v26 = (char *)(a2 + v23);
  v27 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  v28 = *((_QWORD *)v27 - 1);
  v29 = *(unsigned int (**)(char *, uint64_t, int *))(v28 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v29(v26, 1, v27))
  {
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638B6C0);
    memcpy(__dst, v26, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    v56 = v28;
    ((void (*)(char *, char *, uint64_t))v57)(__dst, v26, v58);
    v31 = v27[5];
    v32 = &__dst[v31];
    v33 = &v26[v31];
    v34 = *((_QWORD *)v33 + 1);
    v35 = v26;
    if (v34 >> 60 == 15)
    {
      *(_OWORD *)v32 = *(_OWORD *)v33;
    }
    else
    {
      v36 = *(_QWORD *)v33;
      sub_235E90998(*(_QWORD *)v33, *((_QWORD *)v33 + 1));
      *(_QWORD *)v32 = v36;
      *((_QWORD *)v32 + 1) = v34;
    }
    v37 = v27[6];
    v38 = &__dst[v37];
    v39 = &v26[v37];
    v40 = *((_QWORD *)v39 + 1);
    if (v40 >> 60 == 15)
    {
      *(_OWORD *)v38 = *(_OWORD *)v39;
    }
    else
    {
      v41 = *(_QWORD *)v39;
      sub_235E90998(*(_QWORD *)v39, *((_QWORD *)v39 + 1));
      *(_QWORD *)v38 = v41;
      *((_QWORD *)v38 + 1) = v40;
    }
    v42 = v27[7];
    v43 = &__dst[v42];
    v44 = &v35[v42];
    v45 = *((_QWORD *)v44 + 1);
    if (v45 >> 60 == 15)
    {
      *(_OWORD *)v43 = *(_OWORD *)v44;
    }
    else
    {
      v46 = *(_QWORD *)v44;
      sub_235E90998(*(_QWORD *)v44, *((_QWORD *)v44 + 1));
      *(_QWORD *)v43 = v46;
      *((_QWORD *)v43 + 1) = v45;
    }
    v47 = v27[8];
    v48 = &__dst[v47];
    v49 = &v35[v47];
    v50 = *((_QWORD *)v49 + 1);
    *(_QWORD *)v48 = *(_QWORD *)v49;
    *((_QWORD *)v48 + 1) = v50;
    v51 = *(void (**)(char *, _QWORD, uint64_t, int *))(v56 + 56);
    swift_bridgeObjectRetain();
    v51(__dst, 0, 1, v27);
  }
  v52 = a3[11];
  v53 = a1 + v52;
  v54 = a2 + v52;
  *(_DWORD *)v53 = *(_DWORD *)v54;
  *(_BYTE *)(v53 + 4) = *(_BYTE *)(v54 + 4);
  return a1;
}

uint64_t assignWithCopy for SecureCloudInviteResponseProtobuf(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  char *v31;
  char *v32;
  int *v33;
  int v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  unint64_t v39;
  uint64_t v40;
  int *v41;
  char *v42;
  int *v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t *v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  void (*v63)(char *, _QWORD, uint64_t, int *);
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t *v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t *v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  int *v88;
  int v89;
  uint64_t v91;
  uint64_t v92;
  int *v93;

  v6 = sub_235EE5B90();
  v92 = *(_QWORD *)(v6 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v92 + 24);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = *(_BYTE *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = v11;
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  *v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = a3[7];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = a3[8];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  *v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = a3[9];
  v22 = a1 + v21;
  v23 = (uint64_t *)(a2 + v21);
  v24 = *v23;
  *(_WORD *)(v22 + 8) = *((_WORD *)v23 + 4);
  *(_QWORD *)v22 = v24;
  v93 = a3;
  v25 = a3[10];
  v26 = (char *)(a1 + v25);
  v27 = (char *)(a2 + v25);
  v28 = type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  v91 = *(_QWORD *)(v28 - 8);
  v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v91 + 48);
  v30 = v26;
  LODWORD(v26) = v29(v26, 1, v28);
  v31 = v27;
  v32 = v27;
  v33 = (int *)v28;
  v34 = v29(v32, 1, v28);
  if (!(_DWORD)v26)
  {
    if (v34)
    {
      sub_235E95D2C((uint64_t)v30);
      goto LABEL_7;
    }
    v42 = v31;
    v7((uint64_t)v30, (uint64_t)v31, v6);
    v43 = (int *)v28;
    v44 = *(int *)(v28 + 20);
    v45 = (uint64_t *)&v30[v44];
    v46 = (uint64_t *)&v31[v44];
    v47 = *(_QWORD *)&v31[v44 + 8];
    if (*(_QWORD *)&v30[v44 + 8] >> 60 == 15)
    {
      v41 = v93;
      if (v47 >> 60 != 15)
      {
        v48 = *v46;
        sub_235E90998(*v46, v47);
        *v45 = v48;
        v45[1] = v47;
        goto LABEL_23;
      }
    }
    else
    {
      v41 = v93;
      if (v47 >> 60 != 15)
      {
        v64 = *v46;
        sub_235E90998(*v46, v47);
        v65 = *v45;
        v66 = v45[1];
        *v45 = v64;
        v45[1] = v47;
        sub_235E90954(v65, v66);
LABEL_23:
        v67 = v43[6];
        v68 = (uint64_t *)&v30[v67];
        v69 = (uint64_t *)&v42[v67];
        v70 = *(_QWORD *)&v42[v67 + 8];
        if (*(_QWORD *)&v30[v67 + 8] >> 60 == 15)
        {
          if (v70 >> 60 != 15)
          {
            v71 = *v69;
            sub_235E90998(*v69, v70);
            *v68 = v71;
            v68[1] = v70;
            goto LABEL_30;
          }
        }
        else
        {
          if (v70 >> 60 != 15)
          {
            v72 = *v69;
            sub_235E90998(*v69, v70);
            v73 = *v68;
            v74 = v68[1];
            *v68 = v72;
            v68[1] = v70;
            sub_235E90954(v73, v74);
LABEL_30:
            v75 = v43[7];
            v76 = (uint64_t *)&v30[v75];
            v77 = (uint64_t *)&v42[v75];
            v78 = *(_QWORD *)&v42[v75 + 8];
            if (*(_QWORD *)&v30[v75 + 8] >> 60 == 15)
            {
              if (v78 >> 60 != 15)
              {
                v79 = *v77;
                sub_235E90998(*v77, v78);
                *v76 = v79;
                v76[1] = v78;
LABEL_37:
                v83 = v43[8];
                v84 = &v30[v83];
                v85 = &v42[v83];
                *(_QWORD *)v84 = *(_QWORD *)v85;
                *((_QWORD *)v84 + 1) = *((_QWORD *)v85 + 1);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                goto LABEL_38;
              }
            }
            else
            {
              if (v78 >> 60 != 15)
              {
                v80 = *v77;
                sub_235E90998(*v77, v78);
                v81 = *v76;
                v82 = v76[1];
                *v76 = v80;
                v76[1] = v78;
                sub_235E90954(v81, v82);
                goto LABEL_37;
              }
              sub_235E97C08((uint64_t)v76);
            }
            *(_OWORD *)v76 = *(_OWORD *)v77;
            goto LABEL_37;
          }
          sub_235E97C08((uint64_t)v68);
        }
        *(_OWORD *)v68 = *(_OWORD *)v69;
        goto LABEL_30;
      }
      sub_235E97C08((uint64_t)v45);
    }
    *(_OWORD *)v45 = *(_OWORD *)v46;
    goto LABEL_23;
  }
  if (v34)
  {
LABEL_7:
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638B6C0);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    v41 = v93;
    goto LABEL_38;
  }
  v35 = v31;
  (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v30, v31, v6);
  v36 = *(int *)(v28 + 20);
  v37 = &v30[v36];
  v38 = &v31[v36];
  v39 = *((_QWORD *)v38 + 1);
  if (v39 >> 60 == 15)
  {
    *(_OWORD *)v37 = *(_OWORD *)v38;
  }
  else
  {
    v49 = *(_QWORD *)v38;
    sub_235E90998(*(_QWORD *)v38, *((_QWORD *)v38 + 1));
    *(_QWORD *)v37 = v49;
    *((_QWORD *)v37 + 1) = v39;
  }
  v41 = v93;
  v50 = v33[6];
  v51 = &v30[v50];
  v52 = &v35[v50];
  v53 = *((_QWORD *)v52 + 1);
  if (v53 >> 60 == 15)
  {
    *(_OWORD *)v51 = *(_OWORD *)v52;
  }
  else
  {
    v54 = *(_QWORD *)v52;
    sub_235E90998(*(_QWORD *)v52, *((_QWORD *)v52 + 1));
    *(_QWORD *)v51 = v54;
    *((_QWORD *)v51 + 1) = v53;
  }
  v55 = v33[7];
  v56 = &v30[v55];
  v57 = &v35[v55];
  v58 = *((_QWORD *)v57 + 1);
  if (v58 >> 60 == 15)
  {
    *(_OWORD *)v56 = *(_OWORD *)v57;
  }
  else
  {
    v59 = *(_QWORD *)v57;
    sub_235E90998(*(_QWORD *)v57, *((_QWORD *)v57 + 1));
    *(_QWORD *)v56 = v59;
    *((_QWORD *)v56 + 1) = v58;
  }
  v60 = v33[8];
  v61 = &v30[v60];
  v62 = &v35[v60];
  *(_QWORD *)v61 = *(_QWORD *)v62;
  *((_QWORD *)v61 + 1) = *((_QWORD *)v62 + 1);
  v63 = *(void (**)(char *, _QWORD, uint64_t, int *))(v91 + 56);
  swift_bridgeObjectRetain();
  v63(v30, 0, 1, v33);
LABEL_38:
  v86 = v41[11];
  v87 = a1 + v86;
  v88 = (int *)(a2 + v86);
  v89 = *v88;
  *(_BYTE *)(v87 + 4) = *((_BYTE *)v88 + 4);
  *(_DWORD *)v87 = v89;
  return a1;
}

uint64_t initializeWithTake for SecureCloudInviteResponseProtobuf(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_235EE5B90();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a3[6];
  v10 = a1 + v8;
  v11 = a2 + v8;
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_BYTE *)(v10 + 8) = *(_BYTE *)(v11 + 8);
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  v12 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  v13 = a3[9];
  v14 = a3[10];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_WORD *)(v15 + 8) = *(_WORD *)(v16 + 8);
  *(_QWORD *)v15 = *(_QWORD *)v16;
  v17 = (char *)(a1 + v14);
  v18 = (char *)(a2 + v14);
  v19 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  v20 = *((_QWORD *)v19 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v20 + 48))(v18, 1, v19))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638B6C0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v17, (uint64_t)v18, v6);
    *(_OWORD *)&v17[v19[5]] = *(_OWORD *)&v18[v19[5]];
    *(_OWORD *)&v17[v19[6]] = *(_OWORD *)&v18[v19[6]];
    *(_OWORD *)&v17[v19[7]] = *(_OWORD *)&v18[v19[7]];
    *(_OWORD *)&v17[v19[8]] = *(_OWORD *)&v18[v19[8]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v20 + 56))(v17, 0, 1, v19);
  }
  v22 = a3[11];
  v23 = a1 + v22;
  v24 = a2 + v22;
  *(_DWORD *)v23 = *(_DWORD *)v24;
  *(_BYTE *)(v23 + 4) = *(_BYTE *)(v24 + 4);
  return a1;
}

uint64_t assignWithTake for SecureCloudInviteResponseProtobuf(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  int *v31;
  uint64_t v32;
  uint64_t (*v33)(char *, uint64_t, int *);
  char *v34;
  int v35;
  int v36;
  uint64_t v37;
  int *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t *v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t *v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t, uint64_t);
  int *v68;

  v6 = sub_235EE5B90();
  v66 = *(_QWORD *)(v6 - 8);
  v67 = *(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 40);
  v67(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = (_QWORD *)(a1 + v8);
  v12 = (uint64_t *)(a2 + v8);
  v14 = *v12;
  v13 = v12[1];
  *v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  v15 = a3[7];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (uint64_t *)(a2 + v15);
  v19 = *v17;
  v18 = v17[1];
  *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  v20 = a3[8];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (uint64_t *)(a2 + v20);
  v24 = *v22;
  v23 = v22[1];
  *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  v25 = a3[9];
  v26 = a3[10];
  v68 = a3;
  v27 = a1 + v25;
  v28 = a2 + v25;
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *(_WORD *)(v27 + 8) = *(_WORD *)(v28 + 8);
  v29 = (char *)(a1 + v26);
  v30 = (char *)(a2 + v26);
  v31 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  v32 = *((_QWORD *)v31 - 1);
  v33 = *(uint64_t (**)(char *, uint64_t, int *))(v32 + 48);
  v34 = v29;
  v35 = v33(v29, 1, v31);
  v36 = v33(v30, 1, v31);
  if (!v35)
  {
    if (v36)
    {
      sub_235E95D2C((uint64_t)v29);
      goto LABEL_6;
    }
    v67((uint64_t)v29, (uint64_t)v30, v6);
    v43 = v31[5];
    v44 = (uint64_t)&v29[v43];
    v45 = &v30[v43];
    v46 = *(_QWORD *)&v29[v43 + 8];
    if (v46 >> 60 == 15)
    {
      *(_OWORD *)v44 = *(_OWORD *)v45;
      v38 = v68;
    }
    else
    {
      v47 = *((_QWORD *)v45 + 1);
      v38 = v68;
      if (v47 >> 60 == 15)
      {
        sub_235E97C08(v44);
        *(_OWORD *)v44 = *(_OWORD *)v45;
      }
      else
      {
        v48 = *(_QWORD *)v44;
        *(_QWORD *)v44 = *(_QWORD *)v45;
        *(_QWORD *)(v44 + 8) = v47;
        sub_235E90954(v48, v46);
      }
    }
    v49 = v31[6];
    v50 = (uint64_t *)&v34[v49];
    v51 = (uint64_t *)&v30[v49];
    v52 = *(_QWORD *)&v34[v49 + 8];
    if (v52 >> 60 != 15)
    {
      v53 = v51[1];
      if (v53 >> 60 != 15)
      {
        v54 = *v50;
        *v50 = *v51;
        v50[1] = v53;
        sub_235E90954(v54, v52);
LABEL_19:
        v55 = v31[7];
        v56 = (uint64_t *)&v34[v55];
        v57 = (uint64_t *)&v30[v55];
        v58 = *(_QWORD *)&v34[v55 + 8];
        if (v58 >> 60 != 15)
        {
          v59 = v57[1];
          if (v59 >> 60 != 15)
          {
            v60 = *v56;
            *v56 = *v57;
            v56[1] = v59;
            sub_235E90954(v60, v58);
            goto LABEL_24;
          }
          sub_235E97C08((uint64_t)v56);
        }
        *(_OWORD *)v56 = *(_OWORD *)v57;
LABEL_24:
        v61 = v31[8];
        v62 = &v34[v61];
        v63 = &v30[v61];
        v65 = *(_QWORD *)v63;
        v64 = *((_QWORD *)v63 + 1);
        *(_QWORD *)v62 = v65;
        *((_QWORD *)v62 + 1) = v64;
        swift_bridgeObjectRelease();
        goto LABEL_8;
      }
      sub_235E97C08((uint64_t)v50);
    }
    *(_OWORD *)v50 = *(_OWORD *)v51;
    goto LABEL_19;
  }
  if (v36)
  {
LABEL_6:
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638B6C0);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v29, v30, v6);
  *(_OWORD *)&v29[v31[5]] = *(_OWORD *)&v30[v31[5]];
  *(_OWORD *)&v29[v31[6]] = *(_OWORD *)&v30[v31[6]];
  *(_OWORD *)&v29[v31[7]] = *(_OWORD *)&v30[v31[7]];
  *(_OWORD *)&v29[v31[8]] = *(_OWORD *)&v30[v31[8]];
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v32 + 56))(v29, 0, 1, v31);
LABEL_7:
  v38 = v68;
LABEL_8:
  v39 = v38[11];
  v40 = a1 + v39;
  v41 = a2 + v39;
  *(_DWORD *)v40 = *(_DWORD *)v41;
  *(_BYTE *)(v40 + 4) = *(_BYTE *)(v41 + 4);
  return a1;
}

uint64_t getEnumTagSinglePayload for SecureCloudInviteResponseProtobuf()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_235EAE32C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;
  uint64_t v11;

  v6 = sub_235EE5B90();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 2147483646)
  {
    v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
    if (v9 >= 0xFFFFFFFF)
      LODWORD(v9) = -1;
    v10 = v9 - 1;
    if (v10 < 0)
      v10 = -1;
    return (v10 + 1);
  }
  else
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638B6C0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(a1 + *(int *)(a3 + 40), a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for SecureCloudInviteResponseProtobuf()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_235EAE3F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_235EE5B90();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = a2;
      return result;
    }
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638B6C0);
    v12 = a1 + *(int *)(a4 + 40);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_235EAE4A0()
{
  unint64_t v0;
  unint64_t v1;

  sub_235EE5B90();
  if (v0 <= 0x3F)
  {
    sub_235E982FC();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for SecureCloudInviteResponseProtobuf.ProtobufType()
{
  return &type metadata for SecureCloudInviteResponseProtobuf.ProtobufType;
}

void ActivitySharingSettings.init(healthStore:)(void *a1@<X0>, _QWORD *a2@<X8>)
{
  id v4;
  void *v5;
  id v6;
  id v7;

  v4 = objc_allocWithZone(MEMORY[0x24BDD3C98]);
  v5 = (void *)sub_235EE5D34();
  v6 = objc_msgSend(v4, sel_initWithCategory_domainName_healthStore_, 4, v5, a1);

  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3D80]), sel_initWithHealthStore_, a1);
  *a2 = v6;
  a2[1] = v7;
}

uint64_t sub_235EAE600(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 184) = a1;
  *(_OWORD *)(v2 + 192) = *v1;
  return swift_task_switch();
}

uint64_t sub_235EAE620()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = v0[23];
  sub_235EE5A64();
  swift_allocObject();
  sub_235EE5A58();
  v0[18] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25638BF00);
  sub_235EB157C(&qword_25638BFA8, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
  v0[26] = sub_235EE5A4C();
  v0[27] = v2;
  v3 = (void *)v0[24];
  swift_release();
  v4 = sub_235EE5AAC();
  v0[28] = v4;
  v5 = sub_235EE5D34();
  v0[29] = v5;
  v0[2] = v0;
  v0[3] = sub_235EAE930;
  v0[22] = swift_continuation_init();
  v0[18] = MEMORY[0x24BDAC760];
  v0[19] = 0x40000000;
  v0[20] = sub_235EAEE88;
  v0[21] = &block_descriptor_19;
  objc_msgSend(v3, sel_setData_forKey_completion_, v4, v5, v0 + 18);
  return swift_continuation_await();
}

uint64_t sub_235EAE930()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 240) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_235EAE990()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(void **)(v0 + 224);
  v2 = *(void **)(v0 + 200);

  *(_QWORD *)(v0 + 80) = v0;
  *(_QWORD *)(v0 + 88) = sub_235EAEA34;
  v3 = swift_continuation_init();
  *(_QWORD *)(v0 + 144) = MEMORY[0x24BDAC760];
  v4 = (_QWORD *)(v0 + 144);
  v4[1] = 0x40000000;
  v4[2] = sub_235EAEE88;
  v4[3] = &block_descriptor_20;
  v4[4] = v3;
  objc_msgSend(v2, sel_forceNanoSyncWithOptions_completion_, 0, v4);
  return swift_continuation_await();
}

uint64_t sub_235EAEA34()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 248) = *(_QWORD *)(*(_QWORD *)v0 + 112);
  return swift_task_switch();
}

uint64_t sub_235EAEA94()
{
  uint64_t v0;

  sub_235E90954(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 216));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EAEAC4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 216);
  swift_willThrow();
  sub_235E90954(v1, v2);
  v3 = *(void **)(v0 + 248);
  if (qword_25638B4D0 != -1)
    swift_once();
  v4 = sub_235EE5CF8();
  __swift_project_value_buffer(v4, (uint64_t)qword_256393B50);
  v5 = v3;
  v6 = v3;
  v7 = sub_235EE5CE0();
  v8 = sub_235EE5ECC();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v9 = 138412290;
    v11 = v3;
    v12 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 144) = v12;
    sub_235EE5F2C();
    *v10 = v12;

    _os_log_impl(&dword_235E8C000, v7, v8, "Failed to save identifiers to force migration: %@", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25429C8D0);
    swift_arrayDestroy();
    MEMORY[0x23B7E529C](v10, -1, -1);
    MEMORY[0x23B7E529C](v9, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EAECA0()
{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;

  v1 = *(void **)(v0 + 232);
  v2 = *(_QWORD *)(v0 + 216);
  v3 = *(void **)(v0 + 224);
  v4 = *(_QWORD *)(v0 + 208);
  swift_willThrow();
  sub_235E90954(v4, v2);

  v5 = *(void **)(v0 + 240);
  if (qword_25638B4D0 != -1)
    swift_once();
  v6 = sub_235EE5CF8();
  __swift_project_value_buffer(v6, (uint64_t)qword_256393B50);
  v7 = v5;
  v8 = v5;
  v9 = sub_235EE5CE0();
  v10 = sub_235EE5ECC();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v11 = 138412290;
    v13 = v5;
    v14 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 144) = v14;
    sub_235EE5F2C();
    *v12 = v14;

    _os_log_impl(&dword_235E8C000, v9, v10, "Failed to save identifiers to force migration: %@", v11, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25429C8D0);
    swift_arrayDestroy();
    MEMORY[0x23B7E529C](v12, -1, -1);
    MEMORY[0x23B7E529C](v11, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EAEE88(uint64_t a1, int a2, void *a3)
{
  uint64_t result;
  _QWORD *v5;
  id v6;

  if (a2)
    return swift_continuation_throwingResume();
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25638BF90);
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t ActivitySharingSettings.forceMigrationAllowed(friendIdentifier:)(uint64_t a1, uint64_t a2)
{
  _OWORD *v2;
  uint64_t v3;
  _QWORD *v4;

  *(_QWORD *)(v3 + 32) = a1;
  *(_QWORD *)(v3 + 40) = a2;
  *(_OWORD *)(v3 + 16) = *v2;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 48) = v4;
  *v4 = v3;
  v4[1] = sub_235EAEF70;
  v4[17] = *(_QWORD *)(v3 + 16);
  return swift_task_switch();
}

uint64_t sub_235EAEF70(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_235EAEFCC()
{
  uint64_t v0;
  char v1;

  v1 = sub_235EAF580(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD **)(v0 + 56));
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(v1 & 1);
}

uint64_t ActivitySharingSettings.forcedMigrationFriendIdentifiers()()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 136) = *v0;
  return swift_task_switch();
}

uint64_t sub_235EAF030()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = (void *)v0[17];
  v2 = sub_235EE5D34();
  v0[18] = v2;
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_235EAF0F4;
  v3 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v4 = v0 + 10;
  v4[1] = 0x40000000;
  v4[2] = sub_235EAFA90;
  v4[3] = &block_descriptor;
  v4[4] = v3;
  objc_msgSend(v1, sel_dataForKey_completion_, v2, v4);
  return swift_continuation_await();
}

uint64_t sub_235EAF0F4()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 152) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_235EAF154()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);

  if (v2 >> 60 == 15)
  {
    v3 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    sub_235EE5A40();
    swift_allocObject();
    sub_235EE5A34();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25638BF00);
    sub_235EB157C(&qword_25638BF08, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
    sub_235EE5A28();
    sub_235E90940(v1, v2);
    swift_release();
    v3 = *(_QWORD *)(v0 + 80);
  }
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
}

uint64_t sub_235EAF3B4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;

  v1 = *(void **)(v0 + 144);
  swift_willThrow();

  v2 = *(void **)(v0 + 152);
  if (qword_25638B4D0 != -1)
    swift_once();
  v3 = sub_235EE5CF8();
  __swift_project_value_buffer(v3, (uint64_t)qword_256393B50);
  v4 = v2;
  v5 = v2;
  v6 = sub_235EE5CE0();
  v7 = sub_235EE5ECC();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v8 = 138412290;
    v10 = v2;
    v11 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 80) = v11;
    sub_235EE5F2C();
    *v9 = v11;

    _os_log_impl(&dword_235E8C000, v6, v7, "Failed to retrieve forced migration friend identifiers: %@", v8, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25429C8D0);
    swift_arrayDestroy();
    MEMORY[0x23B7E529C](v9, -1, -1);
    MEMORY[0x23B7E529C](v8, -1, -1);
  }
  else
  {

  }
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(MEMORY[0x24BEE4AF8]);
}

uint64_t sub_235EAF580(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v9;
  uint64_t i;
  uint64_t v11;
  BOOL v12;

  v3 = a3[2];
  if (!v3)
    return 0;
  if (a3[4] == a1 && a3[5] == a2)
    return 1;
  result = sub_235EE60D0();
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v9 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v11 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_235EE60D0() & 1) != 0)
      return 1;
    result = 0;
    v9 += 2;
    if (v11 == v3)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t ActivitySharingSettings.updateAllowForcedMigration(_:friendIdentifier:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  *(_QWORD *)(v4 + 56) = a2;
  *(_QWORD *)(v4 + 64) = a3;
  *(_BYTE *)(v4 + 120) = a1;
  v5 = *v3;
  v6 = v3[1];
  *(_QWORD *)(v4 + 72) = *v3;
  *(_QWORD *)(v4 + 80) = v6;
  *(_QWORD *)(v4 + 16) = v5;
  *(_QWORD *)(v4 + 24) = v6;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 88) = v7;
  *v7 = v4;
  v7[1] = sub_235EAF6B8;
  v7[17] = *(_QWORD *)(v4 + 16);
  return swift_task_switch();
}

uint64_t sub_235EAF6B8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_235EAF714()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  _QWORD *v5;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  if (*(_BYTE *)(v0 + 120) == 1)
  {
    v4 = sub_235EAF580(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD **)(v0 + 96));
    v5 = *(_QWORD **)(v0 + 96);
    if ((v4 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v5 = *(_QWORD **)(v0 + 96);
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v5 = sub_235EB04E4(0, v5[2] + 1, 1, *(_QWORD **)(v0 + 96));
      v8 = v5[2];
      v7 = v5[3];
      if (v8 >= v7 >> 1)
        v5 = sub_235EB04E4((_QWORD *)(v7 > 1), v8 + 1, 1, v5);
      v10 = *(_QWORD *)(v0 + 56);
      v9 = *(_QWORD *)(v0 + 64);
      v5[2] = v8 + 1;
      v11 = &v5[2 * v8];
      v11[4] = v10;
      v11[5] = v9;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    v5 = (_QWORD *)sub_235EB0DFC(v1, v2, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)(v0 + 104) = v5;
  *(_OWORD *)(v0 + 32) = *(_OWORD *)(v0 + 72);
  v12 = swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v12;
  *(_QWORD *)v12 = v0;
  *(_QWORD *)(v12 + 8) = sub_235EAF86C;
  *(_QWORD *)(v12 + 184) = v5;
  *(_OWORD *)(v12 + 192) = *(_OWORD *)(v0 + 32);
  return swift_task_switch();
}

uint64_t sub_235EAF86C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_235EAF8C0()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v11;

  if (qword_25638B4D0 != -1)
    swift_once();
  v1 = sub_235EE5CF8();
  __swift_project_value_buffer(v1, (uint64_t)qword_256393B50);
  swift_bridgeObjectRetain();
  v2 = sub_235EE5CE0();
  v3 = sub_235EE5ED8();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v11 = v5;
    *(_DWORD *)v4 = 136315138;
    v6 = swift_bridgeObjectRetain();
    v7 = MEMORY[0x23B7E49E4](v6, MEMORY[0x24BEE0D00]);
    v9 = v8;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 48) = sub_235E911D4(v7, v9, &v11);
    sub_235EE5F2C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_235E8C000, v2, v3, "Updated list of friends allowed to force a migration: %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B7E529C](v5, -1, -1);
    MEMORY[0x23B7E529C](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EAFA90(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  _QWORD *v5;
  id v6;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD v12[2];

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25638BF90);
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    if (a2)
    {
      v8 = a2;
      v9 = sub_235EE5AB8();
      v11 = v10;

    }
    else
    {
      v9 = 0;
      v11 = 0xF000000000000000;
    }
    v12[0] = v9;
    v12[1] = v11;
    sub_235EB15DC((uint64_t)v12, *(_QWORD *)(*(_QWORD *)(v3 + 64) + 40), &qword_25429CCB8);
    return swift_continuation_throwingResume();
  }
}

uint64_t ActivitySharingSettings.ignoreLegacyDevices()()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 128) = *v0;
  return swift_task_switch();
}

uint64_t sub_235EAFB7C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = (void *)v0[16];
  v2 = sub_235EE5D34();
  v0[17] = v2;
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_235EAFC40;
  v3 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v4 = v0 + 10;
  v4[1] = 0x40000000;
  v4[2] = sub_235EAFEDC;
  v4[3] = &block_descriptor_4;
  v4[4] = v3;
  objc_msgSend(v1, sel_numberForKey_completion_, v2, v4);
  return swift_continuation_await();
}

uint64_t sub_235EAFC40()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 144) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_235EAFCA0()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 120);

  if (v1)
  {
    v2 = objc_msgSend(v1, sel_BOOLValue);

  }
  else
  {
    v2 = 0;
  }
  return (*(uint64_t (**)(id))(v0 + 8))(v2);
}

uint64_t sub_235EAFD00()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  void *v9;
  uint8_t *v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;

  v1 = *(void **)(v0 + 136);
  swift_willThrow();

  if (qword_25638B4D0 != -1)
    swift_once();
  v2 = *(void **)(v0 + 144);
  v3 = sub_235EE5CF8();
  __swift_project_value_buffer(v3, (uint64_t)qword_256393B50);
  v4 = v2;
  v5 = v2;
  v6 = sub_235EE5CE0();
  v7 = sub_235EE5ECC();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(void **)(v0 + 144);
  if (v8)
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v10 = 138412290;
    v12 = v9;
    v13 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 80) = v13;
    sub_235EE5F2C();
    *v11 = v13;

    _os_log_impl(&dword_235E8C000, v6, v7, "Failed to retrieve ignore legacy devices setting: %@", v10, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25429C8D0);
    swift_arrayDestroy();
    MEMORY[0x23B7E529C](v11, -1, -1);
    MEMORY[0x23B7E529C](v10, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_235EAFEDC(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  _QWORD *v5;
  id v6;
  uint64_t v8;
  id v9;
  void *v10;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25638BF90);
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    v10 = a2;
    v8 = *(_QWORD *)(*(_QWORD *)(v3 + 64) + 40);
    v9 = a2;
    sub_235EB15DC((uint64_t)&v10, v8, &qword_25638BF98);
    return swift_continuation_throwingResume();
  }
}

uint64_t ActivitySharingSettings.updateIgnoreLegacyDevices(_:)(char a1)
{
  _OWORD *v1;
  uint64_t v2;

  *(_BYTE *)(v2 + 232) = a1;
  *(_OWORD *)(v2 + 184) = *v1;
  return swift_task_switch();
}

uint64_t sub_235EAFFA4()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = (void *)v0[23];
  v2 = sub_235EE5E54();
  v0[25] = v2;
  v3 = sub_235EE5D34();
  v0[26] = v3;
  v0[2] = v0;
  v0[3] = sub_235EB0074;
  v4 = swift_continuation_init();
  v0[18] = MEMORY[0x24BDAC760];
  v5 = v0 + 18;
  v5[1] = 0x40000000;
  v5[2] = sub_235EAEE88;
  v5[3] = &block_descriptor_5;
  v5[4] = v4;
  objc_msgSend(v1, sel_setNumber_forKey_completion_, v2, v3, v5);
  return swift_continuation_await();
}

uint64_t sub_235EB0074()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 216) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_235EB00D4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(void **)(v0 + 200);
  v2 = *(void **)(v0 + 192);

  *(_QWORD *)(v0 + 80) = v0;
  *(_QWORD *)(v0 + 88) = sub_235EB0178;
  v3 = swift_continuation_init();
  *(_QWORD *)(v0 + 144) = MEMORY[0x24BDAC760];
  v4 = (_QWORD *)(v0 + 144);
  v4[1] = 0x40000000;
  v4[2] = sub_235EAEE88;
  v4[3] = &block_descriptor_6;
  v4[4] = v3;
  objc_msgSend(v2, sel_forceNanoSyncWithOptions_completion_, 0, v4);
  return swift_continuation_await();
}

uint64_t sub_235EB0178()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 224) = *(_QWORD *)(*(_QWORD *)v0 + 112);
  return swift_task_switch();
}

uint64_t sub_235EB01D8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EB01E4()
{
  uint64_t v0;

  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EB0220()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 208);
  v2 = *(void **)(v0 + 200);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EB0268(uint64_t a1, uint64_t a2)
{
  _OWORD *v2;
  uint64_t v3;
  _QWORD *v4;

  *(_QWORD *)(v3 + 32) = a1;
  *(_QWORD *)(v3 + 40) = a2;
  *(_OWORD *)(v3 + 16) = *v2;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 48) = v4;
  *v4 = v3;
  v4[1] = sub_235EAEF70;
  v4[17] = *(_QWORD *)(v3 + 16);
  return swift_task_switch();
}

uint64_t sub_235EB02D4(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_235E8E458;
  return ActivitySharingSettings.updateAllowForcedMigration(_:friendIdentifier:)(a1, a2, a3);
}

uint64_t sub_235EB0338()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_235EB1620;
  v2[17] = *v0;
  return swift_task_switch();
}

uint64_t sub_235EB0398()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_235EB1620;
  v2[16] = *v0;
  return swift_task_switch();
}

uint64_t sub_235EB03F8(char a1)
{
  _OWORD *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_235E8E5E8;
  *(_BYTE *)(v4 + 232) = a1;
  *(_OWORD *)(v4 + 184) = *v1;
  return swift_task_switch();
}

uint64_t sub_235EB0460(uint64_t result, _BYTE **a2)
{
  _BYTE *v2;

  v2 = *a2;
  *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_235EB0470(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_235EB04A4(void (*a1)(void))
{
  a1();
  return _swift_stdlib_bridgeErrorToNSError();
}

uint64_t sub_235EB04C4(uint64_t (*a1)(void))
{
  return a1();
}

_QWORD *sub_235EB04E4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25429C940);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_235EB0D0C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_235EB05F0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25638BF88);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 + 31;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 6);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 4])
          memmove(v13, a4 + 4, v8 << 6);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_235EB1398(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_235EB06FC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25638BF80);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 88);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[11 * v8 + 4])
          memmove(v12, a4 + 4, 88 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_235EB1488(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_235EB0824(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;

  v6 = a4();
  sub_235E911D4(v6, v7, a3);
  v8 = *a1 + 8;
  sub_235EE5F2C();
  result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_235EB0894(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_235EB0928(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_235EB0B00(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_235EB0B00(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_235EB0928(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_235EB0A9C(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_235EE5FBC();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_235EE6004();
      __break(1u);
LABEL_10:
      v2 = sub_235EE5D88();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_235EE6040();
    __break(1u);
LABEL_14:
    result = sub_235EE6004();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_235EB0A9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25638BFA0);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_235EB0B00(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25638BFA0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_235EE6040();
  __break(1u);
  return result;
}

_BYTE **sub_235EB0C4C(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

void sub_235EB0C5C(uint64_t *a1, _QWORD **a2, uint64_t a3, uint64_t (*a4)(void))
{
  void *v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = (void *)a4();
  v7 = *a1 + 8;
  sub_235EE5F2C();
  *a1 = v7;
  v8 = *a2;
  if (*a2)
  {
    *v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {

  }
}

uint64_t sub_235EB0D0C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_235EE6040();
  __break(1u);
  return result;
}

uint64_t sub_235EB0DFC(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t *i;
  uint64_t v13;
  uint64_t v14;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;

  v3 = *(_QWORD *)(result + 16);
  if (!v3)
    return MEMORY[0x24BEE4AF8];
  v6 = 0;
  v7 = result + 40;
  v8 = -(uint64_t)v3;
  v9 = MEMORY[0x24BEE4AF8];
  v19 = result + 40;
  do
  {
    if (v6 <= v3)
      v10 = v3;
    else
      v10 = v6;
    v11 = -(uint64_t)v10;
    for (i = (uint64_t *)(v7 + 16 * v6++); ; i += 2)
    {
      if (v11 + v6 == 1)
      {
        __break(1u);
        return result;
      }
      v13 = *(i - 1);
      v14 = *i;
      if (v13 != a2 || v14 != a3)
      {
        result = sub_235EE60D0();
        if ((result & 1) == 0)
          break;
      }
      ++v6;
      if (v8 + v6 == 1)
        return v9;
    }
    swift_bridgeObjectRetain();
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
      result = sub_235EDE2BC(0, *(_QWORD *)(v9 + 16) + 1, 1);
    v17 = *(_QWORD *)(v9 + 16);
    v16 = *(_QWORD *)(v9 + 24);
    if (v17 >= v16 >> 1)
      result = sub_235EDE2BC(v16 > 1, v17 + 1, 1);
    *(_QWORD *)(v9 + 16) = v17 + 1;
    v18 = v9 + 16 * v17;
    *(_QWORD *)(v18 + 32) = v13;
    *(_QWORD *)(v18 + 40) = v14;
    v3 = v20;
    v7 = v19;
  }
  while (v8 + v6);
  return v9;
}

uint64_t dispatch thunk of ActivitySharingSettingsProtocol.forceMigrationAllowed(friendIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 8) + *(_QWORD *)(a4 + 8));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_235EB1620;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of ActivitySharingSettingsProtocol.updateAllowForcedMigration(_:friendIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 16) + *(_QWORD *)(a5 + 16));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_235E8E5E8;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of ActivitySharingSettingsProtocol.forcedMigrationFriendIdentifiers()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 24) + *(_QWORD *)(a2 + 24));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_235EB10E8;
  return v7(a1, a2);
}

uint64_t sub_235EB10E8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t dispatch thunk of ActivitySharingSettingsProtocol.ignoreLegacyDevices()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 32) + *(_QWORD *)(a2 + 32));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_235EB10E8;
  return v7(a1, a2);
}

uint64_t dispatch thunk of ActivitySharingSettingsProtocol.updateIgnoreLegacyDevices(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 40) + *(_QWORD *)(a3 + 40));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_235E8E5E8;
  return v9(a1, a2, a3);
}

_QWORD *initializeBufferWithCopyOfBuffer for ActivitySharingSettings(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  v6 = v4;
  return a1;
}

void destroy for ActivitySharingSettings(id *a1)
{

}

uint64_t assignWithCopy for ActivitySharingSettings(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  return a1;
}

uint64_t assignWithTake for ActivitySharingSettings(uint64_t a1, _OWORD *a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for ActivitySharingSettings(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivitySharingSettings(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivitySharingSettings()
{
  return &type metadata for ActivitySharingSettings;
}

uint64_t sub_235EB1398(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + (a1 << 6) + 32;
    v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_235EE6040();
  __break(1u);
  return result;
}

uint64_t sub_235EB1488(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 88 * a1 + 32;
    v6 = a3 + 88 * v4;
    if (v5 >= v6 || v5 + 88 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_235EE6040();
  __break(1u);
  return result;
}

uint64_t sub_235EB157C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25638BF00);
    v8 = a2;
    result = MEMORY[0x23B7E5230](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_235EB15DC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t TransportItem.init(rawValue:)(uint64_t a1)
{
  return sub_235EB1720(a1);
}

uint64_t sub_235EB1644()
{
  sub_235EE6154();
  sub_235EE6160();
  return sub_235EE616C();
}

uint64_t sub_235EB1688()
{
  return sub_235EE6160();
}

uint64_t sub_235EB16B0()
{
  sub_235EE6154();
  sub_235EE6160();
  return sub_235EE616C();
}

uint64_t sub_235EB16F0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  char v4;

  result = sub_235EB1720(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_235EB1720(uint64_t result)
{
  if (result <= 700)
  {
    if (result > 400)
    {
      if ((unint64_t)(result - 401) < 5 || (unint64_t)(result - 601) < 4 || result == 501)
        return result;
    }
    else if ((unint64_t)(result - 301) < 5
           || (unint64_t)(result - 101) < 4
           || (unint64_t)(result - 201) < 2)
    {
      return result;
    }
    return 0;
  }
  switch(result)
  {
    case 901:
    case 1001:
    case 1002:
    case 1003:
    case 1004:
    case 1005:
    case 1006:
    case 1007:
    case 1008:
    case 1009:
    case 1101:
    case 1102:
    case 1103:
    case 1104:
    case 1105:
    case 1106:
    case 1107:
    case 1108:
    case 1109:
    case 1110:
    case 1111:
    case 1150:
    case 1151:
    case 1152:
    case 1153:
    case 1154:
    case 1155:
    case 1156:
    case 1157:
    case 1158:
    case 1159:
    case 1160:
      return result;
    case 902:
    case 903:
    case 904:
    case 905:
    case 906:
    case 907:
    case 908:
    case 909:
    case 910:
    case 911:
    case 912:
    case 913:
    case 914:
    case 915:
    case 916:
    case 917:
    case 918:
    case 919:
    case 920:
    case 921:
    case 922:
    case 923:
    case 924:
    case 925:
    case 926:
    case 927:
    case 928:
    case 929:
    case 930:
    case 931:
    case 932:
    case 933:
    case 934:
    case 935:
    case 936:
    case 937:
    case 938:
    case 939:
    case 940:
    case 941:
    case 942:
    case 943:
    case 944:
    case 945:
    case 946:
    case 947:
    case 948:
    case 949:
    case 950:
    case 951:
    case 952:
    case 953:
    case 954:
    case 955:
    case 956:
    case 957:
    case 958:
    case 959:
    case 960:
    case 961:
    case 962:
    case 963:
    case 964:
    case 965:
    case 966:
    case 967:
    case 968:
    case 969:
    case 970:
    case 971:
    case 972:
    case 973:
    case 974:
    case 975:
    case 976:
    case 977:
    case 978:
    case 979:
    case 980:
    case 981:
    case 982:
    case 983:
    case 984:
    case 985:
    case 986:
    case 987:
    case 988:
    case 989:
    case 990:
    case 991:
    case 992:
    case 993:
    case 994:
    case 995:
    case 996:
    case 997:
    case 998:
    case 999:
    case 1000:
    case 1010:
    case 1011:
    case 1012:
    case 1013:
    case 1014:
    case 1015:
    case 1016:
    case 1017:
    case 1018:
    case 1019:
    case 1020:
    case 1021:
    case 1022:
    case 1023:
    case 1024:
    case 1025:
    case 1026:
    case 1027:
    case 1028:
    case 1029:
    case 1030:
    case 1031:
    case 1032:
    case 1033:
    case 1034:
    case 1035:
    case 1036:
    case 1037:
    case 1038:
    case 1039:
    case 1040:
    case 1041:
    case 1042:
    case 1043:
    case 1044:
    case 1045:
    case 1046:
    case 1047:
    case 1048:
    case 1049:
    case 1050:
    case 1051:
    case 1052:
    case 1053:
    case 1054:
    case 1055:
    case 1056:
    case 1057:
    case 1058:
    case 1059:
    case 1060:
    case 1061:
    case 1062:
    case 1063:
    case 1064:
    case 1065:
    case 1066:
    case 1067:
    case 1068:
    case 1069:
    case 1070:
    case 1071:
    case 1072:
    case 1073:
    case 1074:
    case 1075:
    case 1076:
    case 1077:
    case 1078:
    case 1079:
    case 1080:
    case 1081:
    case 1082:
    case 1083:
    case 1084:
    case 1085:
    case 1086:
    case 1087:
    case 1088:
    case 1089:
    case 1090:
    case 1091:
    case 1092:
    case 1093:
    case 1094:
    case 1095:
    case 1096:
    case 1097:
    case 1098:
    case 1099:
    case 1100:
    case 1112:
    case 1113:
    case 1114:
    case 1115:
    case 1116:
    case 1117:
    case 1118:
    case 1119:
    case 1120:
    case 1121:
    case 1122:
    case 1123:
    case 1124:
    case 1125:
    case 1126:
    case 1127:
    case 1128:
    case 1129:
    case 1130:
    case 1131:
    case 1132:
    case 1133:
    case 1134:
    case 1135:
    case 1136:
    case 1137:
    case 1138:
    case 1139:
    case 1140:
    case 1141:
    case 1142:
    case 1143:
    case 1144:
    case 1145:
    case 1146:
    case 1147:
    case 1148:
    case 1149:
      return 0;
    default:
      if (result != 701 && result != 801)
        return 0;
      break;
  }
  return result;
}

unint64_t sub_235EB17C8()
{
  unint64_t result;

  result = qword_25429CE18;
  if (!qword_25429CE18)
  {
    result = MEMORY[0x23B7E5230](&protocol conformance descriptor for TransportItem, &type metadata for TransportItem);
    atomic_store(result, (unint64_t *)&qword_25429CE18);
  }
  return result;
}

ValueMetadata *type metadata accessor for TransportItem()
{
  return &type metadata for TransportItem;
}

uint64_t InvitationDestination.canonicalDestination.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InvitationDestination.destination.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InvitationDestination.endpoints.getter()
{
  return swift_bridgeObjectRetain();
}

void InvitationDestination.reachability.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 40);
}

uint64_t InvitationDestination.serviceIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

void __swiftcall InvitationDestination.init(canonicalDestination:destination:endpoints:reachability:serviceIdentifier:)(ActivitySharingClient::InvitationDestination *__return_ptr retstr, Swift::String canonicalDestination, Swift::String destination, Swift::OpaquePointer endpoints, ActivitySharingClient::InvitationDestinationReachability reachability, Swift::String serviceIdentifier)
{
  ActivitySharingClient::InvitationDestinationReachability v6;

  v6 = *(_BYTE *)reachability;
  retstr->canonicalDestination = canonicalDestination;
  retstr->destination = destination;
  retstr->endpoints = endpoints;
  retstr->reachability = v6;
  retstr->serviceIdentifier = serviceIdentifier;
}

uint64_t InvitationDestination.shortDescription.getter()
{
  uint64_t v0;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  sub_235EE5D7C();
  swift_bridgeObjectRetain();
  sub_235EE5D7C();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_235EB193C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_235EB1978 + 4 * byte_235EE8750[a1]))(0xD000000000000014, 0x8000000235EEB8D0);
}

uint64_t sub_235EB1978()
{
  return 0x74616E6974736564;
}

uint64_t sub_235EB1998()
{
  return 0x746E696F70646E65;
}

uint64_t sub_235EB19B4()
{
  return 0x6962616863616572;
}

unint64_t sub_235EB19D4()
{
  return 0xD000000000000011;
}

uint64_t sub_235EB19F0()
{
  unsigned __int8 *v0;

  return sub_235EB193C(*v0);
}

uint64_t sub_235EB19F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_235EB2944(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_235EB1A1C()
{
  return 0;
}

void sub_235EB1A28(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_235EB1A34()
{
  sub_235EB20EC();
  return sub_235EE6190();
}

uint64_t sub_235EB1A5C()
{
  sub_235EB20EC();
  return sub_235EE619C();
}

unint64_t InvitationDestination.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  sub_235EE5FB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_235EE5D7C();
  swift_bridgeObjectRelease();
  sub_235EE5D7C();
  sub_235EE5D7C();
  swift_bridgeObjectRelease();
  sub_235EE5FB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_235EE5D7C();
  swift_bridgeObjectRelease();
  sub_235EE5D7C();
  swift_bridgeObjectRetain();
  sub_235EE5D7C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v0 = swift_bridgeObjectRetain();
  v1 = sub_235EB1DF8(v0);
  swift_bridgeObjectRelease();
  MEMORY[0x23B7E49E4](v1, MEMORY[0x24BEE0D00]);
  sub_235EE5D7C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_235EE5D7C();
  swift_bridgeObjectRetain();
  sub_235EE5D7C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_235EE5FB0();
  sub_235EE5D7C();
  sub_235EE5FE0();
  sub_235EE5D7C();
  swift_bridgeObjectRetain();
  sub_235EE5D7C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_235EE5FB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_235EE5D7C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_235EE5D7C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0xD000000000000017;
}

uint64_t sub_235EB1DF8(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v11 = MEMORY[0x24BEE4AF8];
    sub_235EDE2BC(0, v1, 0);
    v2 = v11;
    v4 = (uint64_t *)(a1 + 64);
    do
    {
      v6 = *(v4 - 1);
      v5 = *v4;
      v8 = *(_QWORD *)(v11 + 16);
      v7 = *(_QWORD *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v7 >> 1)
        sub_235EDE2BC(v7 > 1, v8 + 1, 1);
      *(_QWORD *)(v11 + 16) = v8 + 1;
      v9 = v11 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v6;
      *(_QWORD *)(v9 + 40) = v5;
      v4 += 5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t InvitationDestination.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[2];
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638BFB0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  v16 = *(_QWORD *)(v1 + 24);
  v17 = v7;
  v15 = *(_QWORD *)(v1 + 32);
  v14 = *(unsigned __int8 *)(v1 + 40);
  v8 = *(_QWORD *)(v1 + 48);
  v13[0] = *(_QWORD *)(v1 + 56);
  v13[1] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_235EB20EC();
  sub_235EE6184();
  v25 = 0;
  v9 = v18;
  sub_235EE6088();
  if (!v9)
  {
    v10 = v15;
    v11 = v14;
    v24 = 1;
    sub_235EE6088();
    v19 = v10;
    v23 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25638BFC0);
    sub_235EB2498(&qword_25638BFC8, (uint64_t (*)(void))sub_235E94C54, MEMORY[0x24BEE12A0]);
    sub_235EE60A0();
    v22 = v11;
    v21 = 3;
    sub_235E94ABC();
    sub_235EE60A0();
    v20 = 4;
    sub_235EE6088();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_235EB20EC()
{
  unint64_t result;

  result = qword_25638BFB8;
  if (!qword_25638BFB8)
  {
    result = MEMORY[0x23B7E5230](&unk_235EE88FC, &type metadata for InvitationDestination.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25638BFB8);
  }
  return result;
}

uint64_t InvitationDestination.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  unsigned __int8 v31;
  char v32;
  char v33;
  char v34;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638BFD0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_235EB20EC();
  sub_235EE6178();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v34 = 0;
  v9 = sub_235EE6058();
  v11 = v10;
  v26 = v9;
  v33 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_235EE6058();
  v27 = v13;
  v25 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25638BFC0);
  v32 = 2;
  sub_235EB2498(&qword_25638BFD8, (uint64_t (*)(void))sub_235E94C10, MEMORY[0x24BEE12D0]);
  swift_bridgeObjectRetain();
  sub_235EE6070();
  v14 = v28;
  v30 = 3;
  sub_235E94A78();
  v24 = v14;
  swift_bridgeObjectRetain();
  sub_235EE6070();
  HIDWORD(v23) = v31;
  v29 = 4;
  v15 = sub_235EE6058();
  v18 = v17;
  v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  v20 = v15;
  v19(v8, v5);
  swift_bridgeObjectRetain();
  v21 = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v26;
  *(_QWORD *)(a2 + 8) = v11;
  v22 = v24;
  *(_QWORD *)(a2 + 16) = v25;
  *(_QWORD *)(a2 + 24) = v21;
  *(_QWORD *)(a2 + 32) = v22;
  *(_BYTE *)(a2 + 40) = BYTE4(v23);
  *(_QWORD *)(a2 + 48) = v20;
  *(_QWORD *)(a2 + 56) = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_235EB2498(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25638BFC0);
    v8 = a2();
    result = MEMORY[0x23B7E5230](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_235EB2500@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return InvitationDestination.init(from:)(a1, a2);
}

uint64_t sub_235EB2514(_QWORD *a1)
{
  return InvitationDestination.encode(to:)(a1);
}

uint64_t destroy for InvitationDestination()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for InvitationDestination(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for InvitationDestination(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for InvitationDestination(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InvitationDestination(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InvitationDestination(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for InvitationDestination()
{
  return &type metadata for InvitationDestination;
}

uint64_t storeEnumTagSinglePayload for InvitationDestination.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_235EB27EC + 4 * byte_235EE875A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_235EB2820 + 4 * byte_235EE8755[v4]))();
}

uint64_t sub_235EB2820(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_235EB2828(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x235EB2830);
  return result;
}

uint64_t sub_235EB283C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x235EB2844);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_235EB2848(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_235EB2850(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InvitationDestination.CodingKeys()
{
  return &type metadata for InvitationDestination.CodingKeys;
}

unint64_t sub_235EB2870()
{
  unint64_t result;

  result = qword_25638BFE0;
  if (!qword_25638BFE0)
  {
    result = MEMORY[0x23B7E5230](&unk_235EE88D4, &type metadata for InvitationDestination.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25638BFE0);
  }
  return result;
}

unint64_t sub_235EB28B8()
{
  unint64_t result;

  result = qword_25638BFE8;
  if (!qword_25638BFE8)
  {
    result = MEMORY[0x23B7E5230](&unk_235EE8844, &type metadata for InvitationDestination.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25638BFE8);
  }
  return result;
}

unint64_t sub_235EB2900()
{
  unint64_t result;

  result = qword_25638BFF0;
  if (!qword_25638BFF0)
  {
    result = MEMORY[0x23B7E5230](&unk_235EE886C, &type metadata for InvitationDestination.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25638BFF0);
  }
  return result;
}

uint64_t sub_235EB2944(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000014 && a2 == 0x8000000235EEB8D0 || (sub_235EE60D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74616E6974736564 && a2 == 0xEB000000006E6F69 || (sub_235EE60D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746E696F70646E65 && a2 == 0xE900000000000073 || (sub_235EE60D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6962616863616572 && a2 == 0xEC0000007974696CLL || (sub_235EE60D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000235EEB8F0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v5 = sub_235EE60D0();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

id ActivitySharingClient.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

uint64_t ActivitySharingClient.init()()
{
  char v0;
  id v1;
  uint64_t v2;
  uint64_t v3;

  v0 = ASActivitySharingDaemonEnabled();
  v1 = objc_allocWithZone((Class)type metadata accessor for ActivitySharingClient());
  ActivitySharingClient.init(activitySharingDaemonEnabled:)(v0);
  v3 = v2;
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v3;
}

void ActivitySharingClient.__allocating_init(activitySharingDaemonEnabled:)(char a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  ActivitySharingClient.init(activitySharingDaemonEnabled:)(a1);
}

uint64_t sub_235EB2C48()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 104) = v0;
  return swift_task_switch();
}

uint64_t sub_235EB2C60()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t);

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 104) + OBJC_IVAR____ASActivitySharingClient_transportClient);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v6 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v3 + 8) + *(_QWORD *)(v3 + 8));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v4;
  *v4 = v0;
  v4[1] = sub_235EB2CE4;
  return v6(v2, v3);
}

uint64_t sub_235EB2CE4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_235EB2D38()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t);

  sub_235EB8C54(*(_QWORD *)(v0 + 104) + OBJC_IVAR____ASActivitySharingClient_asListener, v0 + 16, &qword_25429CCD8);
  if (*(_QWORD *)(v0 + 16))
  {
    v1 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v1;
    *v1 = v0;
    v1[1] = sub_235EB2E84;
    return ASListener.activate()();
  }
  else
  {
    sub_235E8EC2C(v0 + 16, &qword_25429CCD8);
    sub_235EB8C54(*(_QWORD *)(v0 + 104) + OBJC_IVAR____ASActivitySharingClient_secureCloudClient, v0 + 64, (uint64_t *)&unk_25429C908);
    v3 = *(_QWORD *)(v0 + 88);
    if (v3)
    {
      v4 = *(_QWORD *)(v0 + 96);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 88));
      v6 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v4 + 8) + *(_QWORD *)(v4 + 8));
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 128) = v5;
      *v5 = v0;
      v5[1] = sub_235EB2FB0;
      return v6(v3, v4);
    }
    else
    {
      sub_235E8EC2C(v0 + 64, (uint64_t *)&unk_25429C908);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
}

uint64_t sub_235EB2E84()
{
  _QWORD *v0;
  id *v1;

  v1 = (id *)(*v0 + 16);
  swift_task_dealloc();
  sub_235EB8CCC(v1);
  return swift_task_switch();
}

uint64_t sub_235EB2EE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t, uint64_t);

  sub_235EB8C54(*(_QWORD *)(v0 + 104) + OBJC_IVAR____ASActivitySharingClient_secureCloudClient, v0 + 64, (uint64_t *)&unk_25429C908);
  v1 = *(_QWORD *)(v0 + 88);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 96);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 88));
    v5 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v2 + 8) + *(_QWORD *)(v2 + 8));
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 128) = v3;
    *v3 = v0;
    v3[1] = sub_235EB2FB0;
    return v5(v1, v2);
  }
  else
  {
    sub_235E8EC2C(v0 + 64, (uint64_t *)&unk_25429C908);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_235EB2FB0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_235EB3004()
{
  uint64_t v0;

  sub_235EB8C98(v0 + 64);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EB3034()
{
  uint64_t *v0;
  void (**v1)(_QWORD);
  void *v2;
  uint64_t v4;

  v1 = *(void (***)(_QWORD))(*v0 + 24);
  v2 = *(void **)(*v0 + 16);
  v4 = *v0;
  swift_task_dealloc();

  v1[2](v1);
  _Block_release(v1);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_235EB3098()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_235EB30B0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t);

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____ASActivitySharingClient_transportClient);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v6 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v3 + 16) + *(_QWORD *)(v3 + 16));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v4;
  *v4 = v0;
  v4[1] = sub_235EA1020;
  return v6(v2, v3);
}

uint64_t sub_235EB3250(const void *a1, void *a2)
{
  uint64_t v2;
  id v4;

  *(_QWORD *)(v2 + 16) = a2;
  *(_QWORD *)(v2 + 24) = _Block_copy(a1);
  v4 = a2;
  return swift_task_switch();
}

uint64_t sub_235EB3298()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t);

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____ASActivitySharingClient_transportClient);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v6 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v3 + 16) + *(_QWORD *)(v3 + 16));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v4;
  *v4 = v0;
  v4[1] = sub_235EB331C;
  return v6(v2, v3);
}

uint64_t sub_235EB331C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_235EB3370()
{
  uint64_t v0;
  void (**v1)(_QWORD);

  v1 = *(void (***)(_QWORD))(v0 + 24);

  v1[2](v1);
  _Block_release(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EB33B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;

  v7[13] = a6;
  v7[14] = v6;
  v7[11] = a4;
  v7[12] = a5;
  v7[9] = a2;
  v7[10] = a3;
  v7[8] = a1;
  return swift_task_switch();
}

void sub_235EB33D8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  v1 = v0[13];
  v2 = v0[11];
  v3 = v0[12];
  v4 = v0[9];
  v5 = v0[10];
  v6 = v0[8];
  v7 = (_QWORD *)(v0[14] + OBJC_IVAR____ASActivitySharingClient_transportClient);
  v8 = v7[4];
  __swift_project_boxed_opaque_existential_1(v7, v7[3]);
  v0[2] = v6;
  v0[3] = v4;
  v0[4] = v5;
  v0[5] = v2;
  v0[6] = v3;
  v0[7] = v1;
  v10 = **(int **)(v8 + 64) + *(_QWORD *)(v8 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = (_QWORD *)swift_task_alloc();
  v0[15] = v9;
  *v9 = v0;
  v9[1] = sub_235EB34E8;
  __asm { BR              X8 }
}

uint64_t sub_235EB34E8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_235EB3578()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 136));
}

uint64_t sub_235EB3588()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_235EB36E4(int a1, int a2, int a3, void *aBlock, void *a5)
{
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  _QWORD *v17;

  v5[2] = a5;
  v5[3] = _Block_copy(aBlock);
  v7 = sub_235EE5D40();
  v9 = v8;
  v5[4] = v8;
  v10 = sub_235EE5D40();
  v12 = v11;
  v5[5] = v11;
  v13 = sub_235EE5D40();
  v15 = v14;
  v5[6] = v14;
  v16 = a5;
  v17 = (_QWORD *)swift_task_alloc();
  v5[7] = v17;
  *v17 = v5;
  v17[1] = sub_235EB37CC;
  v17[13] = v15;
  v17[14] = v16;
  v17[11] = v12;
  v17[12] = v13;
  v17[9] = v9;
  v17[10] = v10;
  v17[8] = v7;
  return swift_task_switch();
}

uint64_t sub_235EB37CC(char a1)
{
  void *v1;
  uint64_t *v2;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v4 = *(void **)(*v2 + 16);
  v5 = *v2;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(v5 + 24);
  if (v1)
  {
    v7 = (void *)sub_235EE5A94();

    (*(void (**)(uint64_t, _QWORD, void *))(v6 + 16))(v6, 0, v7);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v6 + 16))(*(_QWORD *)(v5 + 24), a1 & 1, 0);
  }
  _Block_release(*(const void **)(v5 + 24));
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_235EB38A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[12] = a2;
  v3[13] = v2;
  v3[11] = a1;
  return swift_task_switch();
}

uint64_t sub_235EB38C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v12)(uint64_t, uint64_t, _QWORD, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v13;

  if (!ASSecureCloudEnabled())
  {
    v7 = *(_QWORD *)(v0 + 96);
    v8 = *(_QWORD *)(v0 + 88);
    v9 = (_QWORD *)(*(_QWORD *)(v0 + 104) + OBJC_IVAR____ASActivitySharingClient_transportClient);
    v10 = v9[4];
    __swift_project_boxed_opaque_existential_1(v9, v9[3]);
    *(_QWORD *)(v0 + 56) = v8;
    *(_QWORD *)(v0 + 64) = v7;
    v13 = **(int **)(v10 + 64) + *(_QWORD *)(v10 + 64);
    swift_bridgeObjectRetain();
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 128) = v11;
    *v11 = v0;
    v11[1] = sub_235EB3B20;
    __asm { BR              X8 }
  }
  sub_235EB8C54(*(_QWORD *)(v0 + 104) + OBJC_IVAR____ASActivitySharingClient_secureCloudClient, v0 + 16, (uint64_t *)&unk_25429C908);
  v1 = *(_QWORD *)(v0 + 40);
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 88);
    v2 = *(_QWORD *)(v0 + 96);
    v4 = *(_QWORD *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
    *(_QWORD *)(v0 + 72) = v3;
    *(_QWORD *)(v0 + 80) = v2;
    v12 = (uint64_t (*)(uint64_t, uint64_t, _QWORD, _UNKNOWN **, uint64_t, uint64_t))(**(int **)(v4 + 32)
                                                                                          + *(_QWORD *)(v4 + 32));
    swift_bridgeObjectRetain();
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v5;
    *v5 = v0;
    v5[1] = sub_235EB3AB0;
    return v12(1105, v0 + 72, MEMORY[0x24BEE0D00], &protocol witness table for String, v1, v4);
  }
  else
  {
    sub_235E8EC2C(v0 + 16, (uint64_t *)&unk_25429C908);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
  }
}

uint64_t sub_235EB3AB0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_235EB3B20()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_235EB3CC0(int a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD *v9;

  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  v5 = sub_235EE5D40();
  v7 = v6;
  v3[4] = v6;
  v8 = a3;
  v9 = (_QWORD *)swift_task_alloc();
  v3[5] = v9;
  *v9 = v3;
  v9[1] = sub_235EBA634;
  v9[12] = v7;
  v9[13] = v8;
  v9[11] = v5;
  return swift_task_switch();
}

uint64_t sub_235EB3D60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[12] = a2;
  v3[13] = v2;
  v3[11] = a1;
  return swift_task_switch();
}

uint64_t sub_235EB3D7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v12)(uint64_t, uint64_t, _QWORD, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v13;

  if (!ASSecureCloudEnabled())
  {
    v7 = *(_QWORD *)(v0 + 96);
    v8 = *(_QWORD *)(v0 + 88);
    v9 = (_QWORD *)(*(_QWORD *)(v0 + 104) + OBJC_IVAR____ASActivitySharingClient_transportClient);
    v10 = v9[4];
    __swift_project_boxed_opaque_existential_1(v9, v9[3]);
    *(_QWORD *)(v0 + 56) = v8;
    *(_QWORD *)(v0 + 64) = v7;
    v13 = **(int **)(v10 + 64) + *(_QWORD *)(v10 + 64);
    swift_bridgeObjectRetain();
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 128) = v11;
    *v11 = v0;
    v11[1] = sub_235EB3B20;
    __asm { BR              X8 }
  }
  sub_235EB8C54(*(_QWORD *)(v0 + 104) + OBJC_IVAR____ASActivitySharingClient_secureCloudClient, v0 + 16, (uint64_t *)&unk_25429C908);
  v1 = *(_QWORD *)(v0 + 40);
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 88);
    v2 = *(_QWORD *)(v0 + 96);
    v4 = *(_QWORD *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
    *(_QWORD *)(v0 + 72) = v3;
    *(_QWORD *)(v0 + 80) = v2;
    v12 = (uint64_t (*)(uint64_t, uint64_t, _QWORD, _UNKNOWN **, uint64_t, uint64_t))(**(int **)(v4 + 32)
                                                                                          + *(_QWORD *)(v4 + 32));
    swift_bridgeObjectRetain();
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v5;
    *v5 = v0;
    v5[1] = sub_235EB3AB0;
    return v12(1106, v0 + 72, MEMORY[0x24BEE0D00], &protocol witness table for String, v1, v4);
  }
  else
  {
    sub_235E8EC2C(v0 + 16, (uint64_t *)&unk_25429C908);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
  }
}

uint64_t sub_235EB409C(int a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD *v9;

  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  v5 = sub_235EE5D40();
  v7 = v6;
  v3[4] = v6;
  v8 = a3;
  v9 = (_QWORD *)swift_task_alloc();
  v3[5] = v9;
  *v9 = v3;
  v9[1] = sub_235EBA634;
  v9[12] = v7;
  v9[13] = v8;
  v9[11] = v5;
  return swift_task_switch();
}

uint64_t sub_235EB413C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[12] = a2;
  v3[13] = v2;
  v3[11] = a1;
  return swift_task_switch();
}

uint64_t sub_235EB4158()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v12)(uint64_t, uint64_t, _QWORD, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v13;

  if (!ASSecureCloudEnabled())
  {
    v7 = *(_QWORD *)(v0 + 96);
    v8 = *(_QWORD *)(v0 + 88);
    v9 = (_QWORD *)(*(_QWORD *)(v0 + 104) + OBJC_IVAR____ASActivitySharingClient_transportClient);
    v10 = v9[4];
    __swift_project_boxed_opaque_existential_1(v9, v9[3]);
    *(_QWORD *)(v0 + 56) = v8;
    *(_QWORD *)(v0 + 64) = v7;
    v13 = **(int **)(v10 + 64) + *(_QWORD *)(v10 + 64);
    swift_bridgeObjectRetain();
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 128) = v11;
    *v11 = v0;
    v11[1] = sub_235EB3B20;
    __asm { BR              X8 }
  }
  sub_235EB8C54(*(_QWORD *)(v0 + 104) + OBJC_IVAR____ASActivitySharingClient_secureCloudClient, v0 + 16, (uint64_t *)&unk_25429C908);
  v1 = *(_QWORD *)(v0 + 40);
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 88);
    v2 = *(_QWORD *)(v0 + 96);
    v4 = *(_QWORD *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
    *(_QWORD *)(v0 + 72) = v3;
    *(_QWORD *)(v0 + 80) = v2;
    v12 = (uint64_t (*)(uint64_t, uint64_t, _QWORD, _UNKNOWN **, uint64_t, uint64_t))(**(int **)(v4 + 32)
                                                                                          + *(_QWORD *)(v4 + 32));
    swift_bridgeObjectRetain();
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v5;
    *v5 = v0;
    v5[1] = sub_235EB3AB0;
    return v12(1107, v0 + 72, MEMORY[0x24BEE0D00], &protocol witness table for String, v1, v4);
  }
  else
  {
    sub_235E8EC2C(v0 + 16, (uint64_t *)&unk_25429C908);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
  }
}

uint64_t sub_235EB4478(int a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD *v9;

  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  v5 = sub_235EE5D40();
  v7 = v6;
  v3[4] = v6;
  v8 = a3;
  v9 = (_QWORD *)swift_task_alloc();
  v3[5] = v9;
  *v9 = v3;
  v9[1] = sub_235EBA634;
  v9[12] = v7;
  v9[13] = v8;
  v9[11] = v5;
  return swift_task_switch();
}

uint64_t sub_235EB4518(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 112) = a3;
  *(_QWORD *)(v4 + 120) = v3;
  *(_QWORD *)(v4 + 104) = a2;
  *(_BYTE *)(v4 + 161) = a1;
  return swift_task_switch();
}

uint64_t sub_235EB4538()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t (*v14)(uint64_t, uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v15;

  swift_bridgeObjectRetain();
  if (!ASSecureCloudEnabled())
  {
    v8 = *(_QWORD *)(v0 + 112);
    v9 = *(_QWORD *)(v0 + 104);
    v10 = *(unsigned __int8 *)(v0 + 161);
    v11 = (_QWORD *)(*(_QWORD *)(v0 + 120) + OBJC_IVAR____ASActivitySharingClient_transportClient);
    v12 = v11[4];
    __swift_project_boxed_opaque_existential_1(v11, v11[3]);
    *(_QWORD *)(v0 + 56) = v10;
    *(_QWORD *)(v0 + 64) = v9;
    *(_QWORD *)(v0 + 72) = v8;
    v15 = **(int **)(v12 + 64) + *(_QWORD *)(v12 + 64);
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 144) = v13;
    *v13 = v0;
    v13[1] = sub_235EB47AC;
    __asm { BR              X8 }
  }
  sub_235EB8C54(*(_QWORD *)(v0 + 120) + OBJC_IVAR____ASActivitySharingClient_secureCloudClient, v0 + 16, (uint64_t *)&unk_25429C908);
  v1 = *(_QWORD *)(v0 + 40);
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 104);
    v2 = *(_QWORD *)(v0 + 112);
    v4 = *(unsigned __int8 *)(v0 + 161);
    v5 = *(_QWORD *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
    *(_QWORD *)(v0 + 80) = v4;
    *(_QWORD *)(v0 + 88) = v3;
    *(_QWORD *)(v0 + 96) = v2;
    v14 = (uint64_t (*)(uint64_t, uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(**(int **)(v5 + 32) + *(_QWORD *)(v5 + 32));
    swift_bridgeObjectRetain();
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 128) = v6;
    *v6 = v0;
    v6[1] = sub_235EB473C;
    return v14(1158, v0 + 80, &type metadata for SetMuteEnabledTransportItem, &protocol witness table for SetMuteEnabledTransportItem, v1, v5);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_235E8EC2C(v0 + 16, (uint64_t *)&unk_25429C908);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
  }
}

uint64_t sub_235EB473C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_235EB47AC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_235EB4954(char a1, int a2, void *aBlock, void *a4)
{
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;

  v4[2] = a4;
  v4[3] = _Block_copy(aBlock);
  v7 = sub_235EE5D40();
  v9 = v8;
  v4[4] = v8;
  v10 = a4;
  v11 = swift_task_alloc();
  v4[5] = v11;
  *(_QWORD *)v11 = v4;
  *(_QWORD *)(v11 + 8) = sub_235EBA634;
  *(_QWORD *)(v11 + 112) = v9;
  *(_QWORD *)(v11 + 120) = v10;
  *(_QWORD *)(v11 + 104) = v7;
  *(_BYTE *)(v11 + 161) = a1;
  return swift_task_switch();
}

uint64_t sub_235EB4A04(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 112) = a3;
  *(_QWORD *)(v4 + 120) = v3;
  *(_QWORD *)(v4 + 104) = a2;
  *(_BYTE *)(v4 + 161) = a1;
  return swift_task_switch();
}

uint64_t sub_235EB4A24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t (*v14)(uint64_t, uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v15;

  swift_bridgeObjectRetain();
  if (!ASSecureCloudEnabled())
  {
    v8 = *(_QWORD *)(v0 + 112);
    v9 = *(_QWORD *)(v0 + 104);
    v10 = *(unsigned __int8 *)(v0 + 161);
    v11 = (_QWORD *)(*(_QWORD *)(v0 + 120) + OBJC_IVAR____ASActivitySharingClient_transportClient);
    v12 = v11[4];
    __swift_project_boxed_opaque_existential_1(v11, v11[3]);
    *(_QWORD *)(v0 + 56) = v10;
    *(_QWORD *)(v0 + 64) = v9;
    *(_QWORD *)(v0 + 72) = v8;
    v15 = **(int **)(v12 + 64) + *(_QWORD *)(v12 + 64);
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 144) = v13;
    *v13 = v0;
    v13[1] = sub_235EB4D20;
    __asm { BR              X8 }
  }
  sub_235EB8C54(*(_QWORD *)(v0 + 120) + OBJC_IVAR____ASActivitySharingClient_secureCloudClient, v0 + 16, (uint64_t *)&unk_25429C908);
  v1 = *(_QWORD *)(v0 + 40);
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 104);
    v2 = *(_QWORD *)(v0 + 112);
    v4 = *(unsigned __int8 *)(v0 + 161);
    v5 = *(_QWORD *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
    *(_QWORD *)(v0 + 80) = v4;
    *(_QWORD *)(v0 + 88) = v3;
    *(_QWORD *)(v0 + 96) = v2;
    v14 = (uint64_t (*)(uint64_t, uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(**(int **)(v5 + 32) + *(_QWORD *)(v5 + 32));
    swift_bridgeObjectRetain();
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 128) = v6;
    *v6 = v0;
    v6[1] = sub_235EB4C28;
    return v14(1159, v0 + 80, &type metadata for SetActivityDataVisibleTransportItem, &protocol witness table for SetActivityDataVisibleTransportItem, v1, v5);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_235E8EC2C(v0 + 16, (uint64_t *)&unk_25429C908);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
  }
}

uint64_t sub_235EB4C28()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_235EB4C98()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_235EB8C98(v0 + 16);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
}

uint64_t sub_235EB4CDC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_235EB8C98(v0 + 16);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_235EB4D20()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_235EB4D90()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 160));
}

uint64_t sub_235EB4DA0()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_235EB4EE8(char a1, int a2, void *aBlock, void *a4)
{
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;

  v4[2] = a4;
  v4[3] = _Block_copy(aBlock);
  v7 = sub_235EE5D40();
  v9 = v8;
  v4[4] = v8;
  v10 = a4;
  v11 = swift_task_alloc();
  v4[5] = v11;
  *(_QWORD *)v11 = v4;
  *(_QWORD *)(v11 + 8) = sub_235EB4F98;
  *(_QWORD *)(v11 + 112) = v9;
  *(_QWORD *)(v11 + 120) = v10;
  *(_QWORD *)(v11 + 104) = v7;
  *(_BYTE *)(v11 + 161) = a1;
  return swift_task_switch();
}

uint64_t sub_235EB4F98(char a1)
{
  void *v1;
  uint64_t *v2;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v4 = *(void **)(*v2 + 16);
  v5 = *v2;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(v5 + 24);
  if (v1)
  {
    v7 = (void *)sub_235EE5A94();

    (*(void (**)(uint64_t, _QWORD, void *))(v6 + 16))(v6, 0, v7);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v6 + 16))(*(_QWORD *)(v5 + 24), a1 & 1, 0);
  }
  _Block_release(*(const void **)(v5 + 24));
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_235EB5054(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  return swift_task_switch();
}

void sub_235EB5070()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v1 = v0[5];
  v2 = v0[4];
  v3 = (_QWORD *)(v0[6] + OBJC_IVAR____ASActivitySharingClient_transportClient);
  v4 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  v0[2] = v2;
  v0[3] = v1;
  v6 = **(int **)(v4 + 64) + *(_QWORD *)(v4 + 64);
  swift_bridgeObjectRetain();
  v5 = (_QWORD *)swift_task_alloc();
  v0[7] = v5;
  *v5 = v0;
  v5[1] = sub_235EB5158;
  __asm { BR              X8 }
}

uint64_t sub_235EB5158()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_235EB52F8(int a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD *v9;

  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  v5 = sub_235EE5D40();
  v7 = v6;
  v3[4] = v6;
  v8 = a3;
  v9 = (_QWORD *)swift_task_alloc();
  v3[5] = v9;
  *v9 = v3;
  v9[1] = sub_235EBA634;
  v9[5] = v7;
  v9[6] = v8;
  v9[4] = v5;
  return swift_task_switch();
}

uint64_t sub_235EB5398(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  return swift_task_switch();
}

void sub_235EB53B4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v1 = v0[5];
  v2 = v0[4];
  v3 = (_QWORD *)(v0[6] + OBJC_IVAR____ASActivitySharingClient_transportClient);
  v4 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  v0[2] = v2;
  v0[3] = v1;
  v6 = **(int **)(v4 + 64) + *(_QWORD *)(v4 + 64);
  swift_bridgeObjectRetain();
  v5 = (_QWORD *)swift_task_alloc();
  v0[7] = v5;
  *v5 = v0;
  v5[1] = sub_235EB5158;
  __asm { BR              X8 }
}

uint64_t sub_235EB55CC(int a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD *v9;

  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  v5 = sub_235EE5D40();
  v7 = v6;
  v3[4] = v6;
  v8 = a3;
  v9 = (_QWORD *)swift_task_alloc();
  v3[5] = v9;
  *v9 = v3;
  v9[1] = sub_235EBA634;
  v9[5] = v7;
  v9[6] = v8;
  v9[4] = v5;
  return swift_task_switch();
}

uint64_t sub_235EB566C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  return swift_task_switch();
}

void sub_235EB5688()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v1 = v0[5];
  v2 = v0[4];
  v3 = (_QWORD *)(v0[6] + OBJC_IVAR____ASActivitySharingClient_transportClient);
  v4 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  v0[2] = v2;
  v0[3] = v1;
  v6 = **(int **)(v4 + 64) + *(_QWORD *)(v4 + 64);
  swift_bridgeObjectRetain();
  v5 = (_QWORD *)swift_task_alloc();
  v0[7] = v5;
  *v5 = v0;
  v5[1] = sub_235EB5158;
  __asm { BR              X8 }
}

uint64_t sub_235EB58A0(int a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD *v9;

  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  v5 = sub_235EE5D40();
  v7 = v6;
  v3[4] = v6;
  v8 = a3;
  v9 = (_QWORD *)swift_task_alloc();
  v3[5] = v9;
  *v9 = v3;
  v9[1] = sub_235EBA634;
  v9[5] = v7;
  v9[6] = v8;
  v9[4] = v5;
  return swift_task_switch();
}

uint64_t sub_235EB5940(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  return swift_task_switch();
}

void sub_235EB595C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v1 = v0[5];
  v2 = v0[4];
  v3 = (_QWORD *)(v0[6] + OBJC_IVAR____ASActivitySharingClient_transportClient);
  v4 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  v0[2] = v2;
  v0[3] = v1;
  v6 = **(int **)(v4 + 64) + *(_QWORD *)(v4 + 64);
  swift_bridgeObjectRetain();
  v5 = (_QWORD *)swift_task_alloc();
  v0[7] = v5;
  *v5 = v0;
  v5[1] = sub_235EB5158;
  __asm { BR              X8 }
}

uint64_t sub_235EB5B74(int a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD *v9;

  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  v5 = sub_235EE5D40();
  v7 = v6;
  v3[4] = v6;
  v8 = a3;
  v9 = (_QWORD *)swift_task_alloc();
  v3[5] = v9;
  *v9 = v3;
  v9[1] = sub_235EBA634;
  v9[5] = v7;
  v9[6] = v8;
  v9[4] = v5;
  return swift_task_switch();
}

uint64_t sub_235EB5C14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  return swift_task_switch();
}

void sub_235EB5C30()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v1 = v0[5];
  v2 = v0[4];
  v3 = (_QWORD *)(v0[6] + OBJC_IVAR____ASActivitySharingClient_transportClient);
  v4 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  v0[2] = v2;
  v0[3] = v1;
  v6 = **(int **)(v4 + 64) + *(_QWORD *)(v4 + 64);
  swift_bridgeObjectRetain();
  v5 = (_QWORD *)swift_task_alloc();
  v0[7] = v5;
  *v5 = v0;
  v5[1] = sub_235EB5D18;
  __asm { BR              X8 }
}

uint64_t sub_235EB5D18()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_235EB5D88()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 72));
}

uint64_t sub_235EB5D98()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_235EB5ED8(int a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD *v9;

  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  v5 = sub_235EE5D40();
  v7 = v6;
  v3[4] = v6;
  v8 = a3;
  v9 = (_QWORD *)swift_task_alloc();
  v3[5] = v9;
  *v9 = v3;
  v9[1] = sub_235EBA634;
  v9[5] = v7;
  v9[6] = v8;
  v9[4] = v5;
  return swift_task_switch();
}

uint64_t sub_235EB5F78()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_235EB5F90()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t, _QWORD, _UNKNOWN **, uint64_t, uint64_t);

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____ASActivitySharingClient_transportClient);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v6 = (uint64_t (*)(uint64_t, uint64_t, _QWORD, _UNKNOWN **, uint64_t, uint64_t))(**(int **)(v3 + 48)
                                                                                       + *(_QWORD *)(v3 + 48));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v4;
  *v4 = v0;
  v4[1] = sub_235EB603C;
  return v6(v0 + 40, 401, MEMORY[0x24BEE1328], &protocol witness table for Bool, v2, v3);
}

uint64_t sub_235EB603C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 32) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_235EB61BC(const void *a1, void *a2)
{
  uint64_t v2;
  id v4;

  *(_QWORD *)(v2 + 16) = a2;
  *(_QWORD *)(v2 + 24) = _Block_copy(a1);
  v4 = a2;
  return swift_task_switch();
}

uint64_t sub_235EB6204()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t, _QWORD, _UNKNOWN **, uint64_t, uint64_t);

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____ASActivitySharingClient_transportClient);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v6 = (uint64_t (*)(uint64_t, uint64_t, _QWORD, _UNKNOWN **, uint64_t, uint64_t))(**(int **)(v3 + 48)
                                                                                       + *(_QWORD *)(v3 + 48));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v4;
  *v4 = v0;
  v4[1] = sub_235E91AC0;
  return v6(v0 + 48, 401, MEMORY[0x24BEE1328], &protocol witness table for Bool, v2, v3);
}

uint64_t sub_235EB62B0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_235EB62C8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t, _QWORD, _UNKNOWN **, uint64_t, uint64_t);

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____ASActivitySharingClient_transportClient);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v6 = (uint64_t (*)(uint64_t, uint64_t, _QWORD, _UNKNOWN **, uint64_t, uint64_t))(**(int **)(v3 + 48)
                                                                                       + *(_QWORD *)(v3 + 48));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v4;
  *v4 = v0;
  v4[1] = sub_235EB6374;
  return v6(v0 + 40, 402, MEMORY[0x24BEE1328], &protocol witness table for Bool, v2, v3);
}

uint64_t sub_235EB6374()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 32) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_235EB63D8()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 40));
}

uint64_t sub_235EB63E8()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_235EB6514(const void *a1, void *a2)
{
  uint64_t v2;
  id v4;

  *(_QWORD *)(v2 + 16) = a2;
  *(_QWORD *)(v2 + 24) = _Block_copy(a1);
  v4 = a2;
  return swift_task_switch();
}

uint64_t sub_235EB655C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t, _QWORD, _UNKNOWN **, uint64_t, uint64_t);

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____ASActivitySharingClient_transportClient);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v6 = (uint64_t (*)(uint64_t, uint64_t, _QWORD, _UNKNOWN **, uint64_t, uint64_t))(**(int **)(v3 + 48)
                                                                                       + *(_QWORD *)(v3 + 48));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v4;
  *v4 = v0;
  v4[1] = sub_235EB6608;
  return v6(v0 + 48, 402, MEMORY[0x24BEE1328], &protocol witness table for Bool, v2, v3);
}

uint64_t sub_235EB6608()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_235EB666C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = *(void **)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 24);

  v3 = (void *)sub_235EE5A94();
  (*(void (**)(uint64_t, _QWORD, void *))(v2 + 16))(v2, 0, v3);

  _Block_release(*(const void **)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EB66DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = v1;
  return swift_task_switch();
}

void sub_235EB66F4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = (_QWORD *)(*(_QWORD *)(v0 + 40) + OBJC_IVAR____ASActivitySharingClient_transportClient);
  v3 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  *(_QWORD *)(v0 + 16) = v1;
  *(_BYTE *)(v0 + 24) = 0;
  v5 = **(int **)(v3 + 64) + *(_QWORD *)(v3 + 64);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v4;
  *v4 = v0;
  v4[1] = sub_235EB67C8;
  __asm { BR              X8 }
}

uint64_t sub_235EB67C8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_235EB6958(uint64_t a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  id v5;

  v3[4] = a1;
  v3[5] = a3;
  v3[6] = _Block_copy(aBlock);
  v5 = a3;
  return swift_task_switch();
}

void sub_235EB69A4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = (_QWORD *)(*(_QWORD *)(v0 + 40) + OBJC_IVAR____ASActivitySharingClient_transportClient);
  v3 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  *(_QWORD *)(v0 + 16) = v1;
  *(_BYTE *)(v0 + 24) = 0;
  v5 = **(int **)(v3 + 64) + *(_QWORD *)(v3 + 64);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v4;
  *v4 = v0;
  v4[1] = sub_235EB6A78;
  __asm { BR              X8 }
}

uint64_t sub_235EB6A78()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_235EB6ADC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_235EB6AF4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t, _QWORD, _UNKNOWN **, uint64_t, uint64_t);

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____ASActivitySharingClient_transportClient);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v6 = (uint64_t (*)(uint64_t, uint64_t, _QWORD, _UNKNOWN **, uint64_t, uint64_t))(**(int **)(v3 + 48)
                                                                                       + *(_QWORD *)(v3 + 48));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v4;
  *v4 = v0;
  v4[1] = sub_235EB603C;
  return v6(v0 + 40, 404, MEMORY[0x24BEE1328], &protocol witness table for Bool, v2, v3);
}

uint64_t sub_235EB6BA0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_235EB6BB8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t, _QWORD, _UNKNOWN **, uint64_t, uint64_t);

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____ASActivitySharingClient_transportClient);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v6 = (uint64_t (*)(uint64_t, uint64_t, _QWORD, _UNKNOWN **, uint64_t, uint64_t))(**(int **)(v3 + 48)
                                                                                       + *(_QWORD *)(v3 + 48));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v4;
  *v4 = v0;
  v4[1] = sub_235EB603C;
  return v6(v0 + 40, 405, MEMORY[0x24BEE1328], &protocol witness table for Bool, v2, v3);
}

uint64_t sub_235EB6D80(const void *a1, void *a2)
{
  uint64_t v2;
  id v4;

  *(_QWORD *)(v2 + 16) = a2;
  *(_QWORD *)(v2 + 24) = _Block_copy(a1);
  v4 = a2;
  return swift_task_switch();
}

uint64_t sub_235EB6DC8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t, _QWORD, _UNKNOWN **, uint64_t, uint64_t);

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____ASActivitySharingClient_transportClient);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v6 = (uint64_t (*)(uint64_t, uint64_t, _QWORD, _UNKNOWN **, uint64_t, uint64_t))(**(int **)(v3 + 48)
                                                                                       + *(_QWORD *)(v3 + 48));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v4;
  *v4 = v0;
  v4[1] = sub_235E91AC0;
  return v6(v0 + 48, 405, MEMORY[0x24BEE1328], &protocol witness table for Bool, v2, v3);
}

uint64_t sub_235EB6E74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = v1;
  return swift_task_switch();
}

void sub_235EB6E8C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = (_QWORD *)(*(_QWORD *)(v0 + 40) + OBJC_IVAR____ASActivitySharingClient_transportClient);
  v3 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  *(_QWORD *)(v0 + 16) = v1;
  *(_BYTE *)(v0 + 24) = 0;
  v5 = **(int **)(v3 + 64) + *(_QWORD *)(v3 + 64);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v4;
  *v4 = v0;
  v4[1] = sub_235EB6F60;
  __asm { BR              X8 }
}

uint64_t sub_235EB6F60()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_235EB6FC4()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 25));
}

uint64_t sub_235EB6FD4()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_235EB7110(uint64_t a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  id v5;

  v3[4] = a1;
  v3[5] = a3;
  v3[6] = _Block_copy(aBlock);
  v5 = a3;
  return swift_task_switch();
}

void sub_235EB715C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = (_QWORD *)(*(_QWORD *)(v0 + 40) + OBJC_IVAR____ASActivitySharingClient_transportClient);
  v3 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  *(_QWORD *)(v0 + 16) = v1;
  *(_BYTE *)(v0 + 24) = 0;
  v5 = **(int **)(v3 + 64) + *(_QWORD *)(v3 + 64);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v4;
  *v4 = v0;
  v4[1] = sub_235EB7230;
  __asm { BR              X8 }
}

uint64_t sub_235EB7230()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_235EB7294()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);

  (*(void (**)(uint64_t, _QWORD, _QWORD))(v1 + 16))(v1, *(unsigned __int8 *)(v0 + 25), 0);
  _Block_release(*(const void **)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EB72E0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = *(void **)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 48);

  v3 = (void *)sub_235EE5A94();
  (*(void (**)(uint64_t, _QWORD, void *))(v2 + 16))(v2, 0, v3);

  _Block_release(*(const void **)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EB7350()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EB7478(const void *a1, void *a2)
{
  _QWORD *v2;
  id v4;
  _QWORD *v5;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  v4 = a2;
  v5 = (_QWORD *)swift_task_alloc();
  v2[4] = v5;
  *v5 = v2;
  v5[1] = sub_235EB74F0;
  v5[3] = v4;
  return swift_task_switch();
}

uint64_t sub_235EB74F0(uint64_t a1)
{
  void *v1;
  uint64_t *v2;
  void *v3;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void (**v10)(_QWORD, _QWORD, _QWORD);

  v3 = v1;
  v5 = *v2;
  v6 = *(void **)(*v2 + 16);
  v7 = *v2;
  swift_task_dealloc();

  if (v3)
  {
    a1 = sub_235EE5A94();

    v8 = 0;
    v9 = (void *)a1;
  }
  else if (a1)
  {
    sub_235E8EC68(0, (unint64_t *)&qword_25429CCD0);
    sub_235E918D0();
    v8 = sub_235EE5E9C();
    swift_bridgeObjectRelease();
    a1 = 0;
    v9 = (void *)v8;
  }
  else
  {
    v8 = 0;
    v9 = 0;
  }
  v10 = *(void (***)(_QWORD, _QWORD, _QWORD))(v5 + 24);
  v10[2](v10, v8, a1);

  _Block_release(v10);
  return (*(uint64_t (**)(void))(v7 + 8))();
}

uint64_t sub_235EB75E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  return swift_task_switch();
}

void sub_235EB7604()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v1 = v0[6];
  v2 = v0[5];
  v3 = (_QWORD *)(v0[7] + OBJC_IVAR____ASActivitySharingClient_transportClient);
  v4 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  v0[2] = v2;
  v0[3] = v1;
  v6 = **(int **)(v4 + 56) + *(_QWORD *)(v4 + 56);
  swift_bridgeObjectRetain();
  v5 = (_QWORD *)swift_task_alloc();
  v0[8] = v5;
  sub_235E8EC68(0, &qword_25429CCA8);
  *v5 = v0;
  v5[1] = sub_235EB7700;
  __asm { BR              X8 }
}

uint64_t sub_235EB7700()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_235EB7770()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 32);
  if (v1)
  {
    v2 = objc_msgSend((id)objc_opt_self(), sel_friendWithCodableFriend_, v1);

  }
  else
  {
    v2 = 0;
  }
  return (*(uint64_t (**)(id))(v0 + 8))(v2);
}

uint64_t sub_235EB7910(int a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD *v9;

  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  v5 = sub_235EE5D40();
  v7 = v6;
  v3[4] = v6;
  v8 = a3;
  v9 = (_QWORD *)swift_task_alloc();
  v3[5] = v9;
  *v9 = v3;
  v9[1] = sub_235EB79B0;
  v9[6] = v7;
  v9[7] = v8;
  v9[5] = v5;
  return swift_task_switch();
}

uint64_t sub_235EB79B0(void *a1)
{
  void *v1;
  uint64_t *v2;
  void *v3;
  void *v5;
  uint64_t v6;
  void (**v7)(_QWORD, _QWORD, _QWORD);
  void *v8;

  v3 = v1;
  v5 = *(void **)(*v2 + 16);
  v6 = *v2;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  v7 = *(void (***)(_QWORD, _QWORD, _QWORD))(v6 + 24);
  if (v3)
  {
    v8 = (void *)sub_235EE5A94();

    ((void (**)(_QWORD, _QWORD, void *))v7)[2](v7, 0, v8);
    _Block_release(v7);
  }
  else
  {
    ((void (**)(_QWORD, void *, _QWORD))v7)[2](*(_QWORD *)(v6 + 24), a1, 0);
    _Block_release(v7);

  }
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_235EB7A7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[12] = a2;
  v3[13] = v2;
  v3[11] = a1;
  return swift_task_switch();
}

uint64_t sub_235EB7A98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v12)(uint64_t, uint64_t, _QWORD, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v13;

  if (!ASSecureCloudEnabled())
  {
    v7 = *(_QWORD *)(v0 + 96);
    v8 = *(_QWORD *)(v0 + 88);
    v9 = (_QWORD *)(*(_QWORD *)(v0 + 104) + OBJC_IVAR____ASActivitySharingClient_transportClient);
    v10 = v9[4];
    __swift_project_boxed_opaque_existential_1(v9, v9[3]);
    *(_QWORD *)(v0 + 56) = v8;
    *(_QWORD *)(v0 + 64) = v7;
    v13 = **(int **)(v10 + 64) + *(_QWORD *)(v10 + 64);
    swift_bridgeObjectRetain();
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 128) = v11;
    *v11 = v0;
    v11[1] = sub_235EB7D68;
    __asm { BR              X8 }
  }
  sub_235EB8C54(*(_QWORD *)(v0 + 104) + OBJC_IVAR____ASActivitySharingClient_secureCloudClient, v0 + 16, (uint64_t *)&unk_25429C908);
  v1 = *(_QWORD *)(v0 + 40);
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 88);
    v2 = *(_QWORD *)(v0 + 96);
    v4 = *(_QWORD *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
    *(_QWORD *)(v0 + 72) = v3;
    *(_QWORD *)(v0 + 80) = v2;
    v12 = (uint64_t (*)(uint64_t, uint64_t, _QWORD, _UNKNOWN **, uint64_t, uint64_t))(**(int **)(v4 + 32)
                                                                                          + *(_QWORD *)(v4 + 32));
    swift_bridgeObjectRetain();
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v5;
    *v5 = v0;
    v5[1] = sub_235EB7C88;
    return v12(1157, v0 + 72, MEMORY[0x24BEE0D00], &protocol witness table for String, v1, v4);
  }
  else
  {
    sub_235E8EC2C(v0 + 16, (uint64_t *)&unk_25429C908);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
  }
}

uint64_t sub_235EB7C88()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_235EB7CF8()
{
  uint64_t v0;

  sub_235EB8C98(v0 + 16);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
}

uint64_t sub_235EB7D30()
{
  uint64_t v0;

  sub_235EB8C98(v0 + 16);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_235EB7D68()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_235EB7DD8()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 144));
}

uint64_t sub_235EB7DE8()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_235EB7F28(int a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD *v9;

  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  v5 = sub_235EE5D40();
  v7 = v6;
  v3[4] = v6;
  v8 = a3;
  v9 = (_QWORD *)swift_task_alloc();
  v3[5] = v9;
  *v9 = v3;
  v9[1] = sub_235EBA634;
  v9[12] = v7;
  v9[13] = v8;
  v9[11] = v5;
  return swift_task_switch();
}

uint64_t sub_235EB7FC8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_235EB7FE0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t, _QWORD, _UNKNOWN **, uint64_t, uint64_t);

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____ASActivitySharingClient_transportClient);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v6 = (uint64_t (*)(uint64_t, uint64_t, _QWORD, _UNKNOWN **, uint64_t, uint64_t))(**(int **)(v3 + 48)
                                                                                       + *(_QWORD *)(v3 + 48));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v4;
  *v4 = v0;
  v4[1] = sub_235EB603C;
  return v6(v0 + 40, 604, MEMORY[0x24BEE1328], &protocol witness table for Bool, v2, v3);
}

uint64_t sub_235EB81A8(const void *a1, void *a2)
{
  uint64_t v2;
  id v4;

  *(_QWORD *)(v2 + 16) = a2;
  *(_QWORD *)(v2 + 24) = _Block_copy(a1);
  v4 = a2;
  return swift_task_switch();
}

uint64_t sub_235EB81F0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t, _QWORD, _UNKNOWN **, uint64_t, uint64_t);

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____ASActivitySharingClient_transportClient);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v6 = (uint64_t (*)(uint64_t, uint64_t, _QWORD, _UNKNOWN **, uint64_t, uint64_t))(**(int **)(v3 + 48)
                                                                                       + *(_QWORD *)(v3 + 48));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v4;
  *v4 = v0;
  v4[1] = sub_235E91AC0;
  return v6(v0 + 48, 604, MEMORY[0x24BEE1328], &protocol witness table for Bool, v2, v3);
}

uint64_t sub_235EB829C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v1;
  return swift_task_switch();
}

void sub_235EB82B4()
{
  _QWORD *v0;
  void *v1;
  _QWORD *v2;
  uint64_t v3;
  id v4;
  _QWORD *v5;
  uint64_t v6;

  v1 = (void *)v0[3];
  v2 = (_QWORD *)(v0[4] + OBJC_IVAR____ASActivitySharingClient_transportClient);
  v3 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  v0[2] = v1;
  v6 = **(int **)(v3 + 64) + *(_QWORD *)(v3 + 64);
  v4 = v1;
  v5 = (_QWORD *)swift_task_alloc();
  v0[5] = v5;
  sub_235E8EC68(0, &qword_25429CCB0);
  *v5 = v0;
  v5[1] = sub_235EB83A4;
  __asm { BR              X8 }
}

uint64_t sub_235EB83A4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v2 = *(void **)(*(_QWORD *)v1 + 24);
  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();

  return swift_task_switch();
}

uint64_t sub_235EB8410()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 56));
}

uint64_t sub_235EB8420()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_235EB8560(void *a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  id v6;
  id v7;
  _QWORD *v8;

  v3[2] = a1;
  v3[3] = a3;
  v3[4] = _Block_copy(aBlock);
  v6 = a1;
  v7 = a3;
  v8 = (_QWORD *)swift_task_alloc();
  v3[5] = v8;
  *v8 = v3;
  v8[1] = sub_235EB85F0;
  v8[3] = v6;
  v8[4] = v7;
  return swift_task_switch();
}

uint64_t sub_235EB85F0(char a1)
{
  void *v1;
  uint64_t *v2;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v5 = *(void **)(*v2 + 16);
  v4 = *(void **)(*v2 + 24);
  v6 = *v2;
  swift_task_dealloc();

  v7 = *(_QWORD *)(v6 + 32);
  if (v1)
  {
    v8 = (void *)sub_235EE5A94();

    (*(void (**)(uint64_t, _QWORD, void *))(v7 + 16))(v7, 0, v8);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16))(*(_QWORD *)(v6 + 32), a1 & 1, 0);
  }
  _Block_release(*(const void **)(v6 + 32));
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_235EB86A8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch();
}

uint64_t sub_235EB86C0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t, _QWORD, _UNKNOWN **, uint64_t, uint64_t);

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 24) + OBJC_IVAR____ASActivitySharingClient_transportClient);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v6 = (uint64_t (*)(uint64_t, uint64_t, _QWORD, _UNKNOWN **, uint64_t, uint64_t))(**(int **)(v3 + 48)
                                                                                       + *(_QWORD *)(v3 + 48));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v4;
  *v4 = v0;
  v4[1] = sub_235EB876C;
  return v6(v0 + 16, 801, MEMORY[0x24BEE1768], &protocol witness table for Int, v2, v3);
}

uint64_t sub_235EB876C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_235EB87D0()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_235EB87DC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = *(void **)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 32);

  v3 = (void *)sub_235EE5A94();
  (*(void (**)(uint64_t))(v2 + 16))(v2);

  _Block_release(*(const void **)(v0 + 32));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EB8848()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_235EB8860()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t, _QWORD, _UNKNOWN **, uint64_t, uint64_t);

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____ASActivitySharingClient_transportClient);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v6 = (uint64_t (*)(uint64_t, uint64_t, _QWORD, _UNKNOWN **, uint64_t, uint64_t))(**(int **)(v3 + 48)
                                                                                       + *(_QWORD *)(v3 + 48));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v4;
  *v4 = v0;
  v4[1] = sub_235EB603C;
  return v6(v0 + 40, 901, MEMORY[0x24BEE1328], &protocol witness table for Bool, v2, v3);
}

uint64_t sub_235EB8A28(const void *a1, void *a2)
{
  uint64_t v2;
  id v4;

  *(_QWORD *)(v2 + 16) = a2;
  *(_QWORD *)(v2 + 24) = _Block_copy(a1);
  v4 = a2;
  return swift_task_switch();
}

uint64_t sub_235EB8A70()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t, _QWORD, _UNKNOWN **, uint64_t, uint64_t);

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____ASActivitySharingClient_transportClient);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v6 = (uint64_t (*)(uint64_t, uint64_t, _QWORD, _UNKNOWN **, uint64_t, uint64_t))(**(int **)(v3 + 48)
                                                                                       + *(_QWORD *)(v3 + 48));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v4;
  *v4 = v0;
  v4[1] = sub_235E91AC0;
  return v6(v0 + 48, 901, MEMORY[0x24BEE1328], &protocol witness table for Bool, v2, v3);
}

id ActivitySharingClient.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivitySharingClient();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void *sub_235EB8BA8(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  uint64_t v4;

  if (__src)
    v4 = a2 - (_QWORD)__src;
  else
    v4 = 0;
  if (!__dst)
  {
    if (v4 <= 0)
      return __src;
LABEL_10:
    __src = (void *)sub_235EE6040();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v4)
    goto LABEL_10;
  if (__src)
    return memmove(__dst, __src, a2 - (_QWORD)__src);
  return __src;
}

uint64_t sub_235EB8C3C(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_235EB8C54(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_235EB8C98(uint64_t a1)
{
  destroy for TestClient();
  return a1;
}

id *sub_235EB8CCC(id *a1)
{
  destroy for ASListener(a1);
  return a1;
}

uint64_t method lookup function for ActivitySharingClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ActivitySharingClient.__allocating_init(activitySharingDaemonEnabled:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of ActivitySharingClient.activate()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x24BEE4EA0] & *v0) + 0x78);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_235E8E458;
  return v5();
}

uint64_t dispatch thunk of ActivitySharingClient.invalidate()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x24BEE4EA0] & *v0) + 0x80);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_235E8E458;
  return v5();
}

uint64_t dispatch thunk of ActivitySharingClient.sendFriendInvite(to:callerID:serviceIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  int *v14;
  _QWORD *v15;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v14 = *(int **)((*MEMORY[0x24BEE4EA0] & *v6) + 0x88);
  v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)v14 + *v14);
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_235EBA664;
  return v17(a1, a2, a3, a4, a5, a6);
}

uint64_t dispatch thunk of ActivitySharingClient.acceptFriendInvite(from:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  v6 = *(int **)((*MEMORY[0x24BEE4EA0] & *v2) + 0x90);
  v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_235EBA664;
  return v9(a1, a2);
}

uint64_t dispatch thunk of ActivitySharingClient.withdrawFriendInvite(to:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  v6 = *(int **)((*MEMORY[0x24BEE4EA0] & *v2) + 0x98);
  v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_235EBA664;
  return v9(a1, a2);
}

uint64_t dispatch thunk of ActivitySharingClient.ignoreFriendInvite(from:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  v6 = *(int **)((*MEMORY[0x24BEE4EA0] & *v2) + 0xA0);
  v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_235EBA664;
  return v9(a1, a2);
}

uint64_t dispatch thunk of ActivitySharingClient.setMuteEnabled(_:friendUUID:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  int *v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);

  v8 = *(int **)((*MEMORY[0x24BEE4EA0] & *v3) + 0xA8);
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v8 + *v8);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_235EBA664;
  return v11(a1, a2, a3);
}

uint64_t dispatch thunk of ActivitySharingClient.setActivityDataVisible(_:friendUUID:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  int *v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);

  v8 = *(int **)((*MEMORY[0x24BEE4EA0] & *v3) + 0xB0);
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v8 + *v8);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_235EBA664;
  return v11(a1, a2, a3);
}

uint64_t dispatch thunk of ActivitySharingClient.sendCompetitionInvite(to:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  v6 = *(int **)((*MEMORY[0x24BEE4EA0] & *v2) + 0xB8);
  v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_235EBA664;
  return v9(a1, a2);
}

uint64_t dispatch thunk of ActivitySharingClient.acceptCompetitionInvite(from:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  v6 = *(int **)((*MEMORY[0x24BEE4EA0] & *v2) + 0xC0);
  v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_235EBA664;
  return v9(a1, a2);
}

uint64_t dispatch thunk of ActivitySharingClient.ignoreCompetitionInvite(from:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  v6 = *(int **)((*MEMORY[0x24BEE4EA0] & *v2) + 0xC8);
  v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_235EBA664;
  return v9(a1, a2);
}

uint64_t dispatch thunk of ActivitySharingClient.completeCompetition(with:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  v6 = *(int **)((*MEMORY[0x24BEE4EA0] & *v2) + 0xD0);
  v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_235EBA664;
  return v9(a1, a2);
}

uint64_t dispatch thunk of ActivitySharingClient.rollCompetition(with:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  v6 = *(int **)((*MEMORY[0x24BEE4EA0] & *v2) + 0xD8);
  v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_235EBA664;
  return v9(a1, a2);
}

uint64_t dispatch thunk of ActivitySharingClient.pushActivityData()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x24BEE4EA0] & *v0) + 0xE0);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_235EBA664;
  return v5();
}

uint64_t dispatch thunk of ActivitySharingClient.immediateFetchActivityData()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x24BEE4EA0] & *v0) + 0xE8);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_235EB947C;
  return v5();
}

uint64_t sub_235EB947C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t dispatch thunk of ActivitySharingClient.fetchActivityData(lastFetchElapsedMinimum:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v4 = *(int **)((*MEMORY[0x24BEE4EA0] & *v1) + 0xF0);
  v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_235EBA664;
  return v7(a1);
}

uint64_t dispatch thunk of ActivitySharingClient.isCloudKitAccountActive()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x24BEE4EA0] & *v0) + 0xF8);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_235EBA664;
  return v5();
}

uint64_t dispatch thunk of ActivitySharingClient.expireChangeToken()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x24BEE4EA0] & *v0) + 0x100);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_235EBA664;
  return v5();
}

uint64_t dispatch thunk of ActivitySharingClient.areMultipleDevicesSharingData(forSnapshotIndex:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v4 = *(int **)((*MEMORY[0x24BEE4EA0] & *v1) + 0x108);
  v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_235EBA664;
  return v7(a1);
}

uint64_t dispatch thunk of ActivitySharingClient.allFriends()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x24BEE4EA0] & *v0) + 0x110);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_235EB947C;
  return v5();
}

uint64_t dispatch thunk of ActivitySharingClient.friend(withRemoteRelationshipUUID:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  v6 = *(int **)((*MEMORY[0x24BEE4EA0] & *v2) + 0x118);
  v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_235EBA664;
  return v9(a1, a2);
}

uint64_t dispatch thunk of ActivitySharingClient.removeFriend(withUUID:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  v6 = *(int **)((*MEMORY[0x24BEE4EA0] & *v2) + 0x120);
  v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_235EBA664;
  return v9(a1, a2);
}

uint64_t dispatch thunk of ActivitySharingClient.removeAllFriends()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x24BEE4EA0] & *v0) + 0x128);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_235EBA664;
  return v5();
}

uint64_t dispatch thunk of ActivitySharingClient.handleNotificationResponse(_:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v4 = *(int **)((*MEMORY[0x24BEE4EA0] & *v1) + 0x130);
  v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_235EBA664;
  return v7(a1);
}

uint64_t dispatch thunk of ActivitySharingClient.appBadgeCount()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x24BEE4EA0] & *v0) + 0x138);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_235EBA664;
  return v5();
}

uint64_t dispatch thunk of ActivitySharingClient.pushFakeActivityData()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x24BEE4EA0] & *v0) + 0x140);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_235EBA664;
  return v5();
}

uint64_t sub_235EB999C()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_235E8E458;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_25638C1B0 + dword_25638C1B0))(v2, v3);
}

uint64_t sub_235EB9A04()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (int *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_235E8E458;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_25638C8B0 + dword_25638C8B0))(v2, v3, v4);
}

uint64_t sub_235EB9A80(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_235E8E458;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_25638C8C0 + dword_25638C8C0))(a1, v4, v5, v6);
}

uint64_t sub_235EB9B14()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = (void *)v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_235E8E458;
  return ((uint64_t (*)(void *, void *, void *))((char *)&dword_25638C1F0 + dword_25638C1F0))(v2, v3, v4);
}

uint64_t sub_235EB9B8C()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_235E8E458;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_25638C210 + dword_25638C210))(v2, v3);
}

uint64_t sub_235EB9BFC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_235E8E458;
  return ((uint64_t (*)(int, void *, void *))((char *)&dword_25638C230 + dword_25638C230))(v2, v3, v4);
}

uint64_t sub_235EB9C74()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_235E8E458;
  return ((uint64_t (*)(int, void *, void *))((char *)&dword_25638C250 + dword_25638C250))(v2, v3, v4);
}

uint64_t sub_235EB9CEC()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_235E8E458;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_25638C270 + dword_25638C270))(v2, v3);
}

uint64_t sub_235EB9D5C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_235E8E458;
  return ((uint64_t (*)(uint64_t, void *, void *))((char *)&dword_25638C290 + dword_25638C290))(v2, v3, v4);
}

uint64_t sub_235EB9DD4()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_235E8E458;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_25638C2B0 + dword_25638C2B0))(v2, v3);
}

uint64_t objectdestroy_186Tm()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));

  return swift_deallocObject();
}

uint64_t sub_235EB9E7C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_235E8E458;
  return ((uint64_t (*)(uint64_t, void *, void *))((char *)&dword_25638C2F0 + dword_25638C2F0))(v2, v3, v4);
}

uint64_t sub_235EB9EF4()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_235E8E5E8;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_25638C310 + dword_25638C310))(v2, v3);
}

uint64_t sub_235EB9F64()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_235E8E458;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_25638C330 + dword_25638C330))(v2, v3);
}

uint64_t sub_235EB9FD4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_235E8E458;
  return ((uint64_t (*)(int, void *, void *))((char *)&dword_25638C350 + dword_25638C350))(v2, v3, v4);
}

uint64_t sub_235EBA04C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_235E8E458;
  return ((uint64_t (*)(int, void *, void *))((char *)&dword_25638C370 + dword_25638C370))(v2, v3, v4);
}

uint64_t sub_235EBA0C4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_235E8E458;
  return ((uint64_t (*)(int, void *, void *))((char *)&dword_25638C390 + dword_25638C390))(v2, v3, v4);
}

uint64_t sub_235EBA13C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_235E8E458;
  return ((uint64_t (*)(int, void *, void *))((char *)&dword_25638C3B0 + dword_25638C3B0))(v2, v3, v4);
}

uint64_t sub_235EBA1B4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_235E8E458;
  return ((uint64_t (*)(int, void *, void *))((char *)&dword_25638C3D0 + dword_25638C3D0))(v2, v3, v4);
}

uint64_t sub_235EBA22C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  void *v4;
  void *v5;
  _QWORD *v6;

  v2 = *(_BYTE *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(void **)(v0 + 32);
  v5 = *(void **)(v0 + 40);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_235E8E458;
  return ((uint64_t (*)(char, int, void *, void *))((char *)&dword_25638C3F0 + dword_25638C3F0))(v2, v3, v4, v5);
}

uint64_t sub_235EBA2B4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  void *v4;
  void *v5;
  _QWORD *v6;

  v2 = *(_BYTE *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(void **)(v0 + 32);
  v5 = *(void **)(v0 + 40);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_235E8E458;
  return ((uint64_t (*)(char, int, void *, void *))((char *)&dword_25638C410 + dword_25638C410))(v2, v3, v4, v5);
}

uint64_t sub_235EBA33C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_235E8E458;
  return ((uint64_t (*)(int, void *, void *))((char *)&dword_25638C430 + dword_25638C430))(v2, v3, v4);
}

uint64_t sub_235EBA3B4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_235E8E458;
  return ((uint64_t (*)(int, void *, void *))((char *)&dword_25638C450 + dword_25638C450))(v2, v3, v4);
}

uint64_t objectdestroy_111Tm()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  return swift_deallocObject();
}

uint64_t sub_235EBA460()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_235E8E458;
  return ((uint64_t (*)(int, void *, void *))((char *)&dword_25638C470 + dword_25638C470))(v2, v3, v4);
}

uint64_t sub_235EBA4D4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 40));
  return swift_deallocObject();
}

uint64_t sub_235EBA518()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  _QWORD *v7;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = (void *)v0[5];
  v6 = (void *)v0[6];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v7;
  *v7 = v1;
  v7[1] = sub_235E8E458;
  return ((uint64_t (*)(int, int, int, void *, void *))((char *)&dword_25638C490 + dword_25638C490))(v2, v3, v4, v5, v6);
}

uint64_t sub_235EBA5A4()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_235E8E458;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_25638C4B0 + dword_25638C4B0))(v2, v3);
}

uint64_t Collection.asyncMap<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;

  v6[6] = a4;
  v6[7] = v5;
  v6[4] = a2;
  v6[5] = a3;
  v6[3] = a1;
  v6[8] = swift_task_alloc();
  v6[9] = *(_QWORD *)(a5 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[10] = AssociatedTypeWitness;
  v6[11] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6[12] = swift_task_alloc();
  sub_235EE5F14();
  v6[13] = swift_task_alloc();
  v6[14] = *(_QWORD *)(a3 - 8);
  v6[15] = swift_task_alloc();
  v10 = swift_getAssociatedTypeWitness();
  v6[16] = v10;
  v6[17] = *(_QWORD *)(v10 - 8);
  v6[18] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_235EBA7A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v10;
  _QWORD *v11;
  int *v12;

  v2 = *(_QWORD *)(v0 + 112);
  v1 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v0 + 16) = sub_235EE5E18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v3, v4);
  sub_235EE5DAC();
  v5 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 80);
  v7 = *(_QWORD *)(v0 + 88);
  swift_getAssociatedConformanceWitness();
  sub_235EE5F20();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 8))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 128));
    v8 = *(_QWORD *)(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v8);
  }
  else
  {
    v10 = *(int **)(v0 + 24);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 32))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 80));
    v12 = (int *)((char *)v10 + *v10);
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v11;
    *v11 = v0;
    v11[1] = sub_235EBA944;
    return ((uint64_t (*)(_QWORD, _QWORD))v12)(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 96));
  }
}

uint64_t sub_235EBA944()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_235EBA9B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v9;
  _QWORD *v10;
  int *v11;

  v2 = *(_QWORD *)(v0 + 88);
  v1 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 80);
  sub_235EE5E48();
  sub_235EE5E3C();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 88);
  swift_getAssociatedConformanceWitness();
  sub_235EE5F20();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 8))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 128));
    v7 = *(_QWORD *)(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v7);
  }
  else
  {
    v9 = *(int **)(v0 + 24);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 32))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 80));
    v11 = (int *)((char *)v9 + *v9);
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v10;
    *v10 = v0;
    v10[1] = sub_235EBA944;
    return ((uint64_t (*)(_QWORD, _QWORD))v11)(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 96));
  }
}

uint64_t sub_235EBAB3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 136);
  v1 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 128);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Collection.asyncCompactMap<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;

  v6[6] = a4;
  v6[7] = v5;
  v6[4] = a2;
  v6[5] = a3;
  v6[3] = a1;
  v10 = sub_235EE5F14();
  v6[8] = v10;
  v6[9] = *(_QWORD *)(v10 - 8);
  v6[10] = swift_task_alloc();
  v6[11] = *(_QWORD *)(a4 - 8);
  v6[12] = swift_task_alloc();
  v6[13] = swift_task_alloc();
  v6[14] = *(_QWORD *)(a5 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[15] = AssociatedTypeWitness;
  v6[16] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6[17] = swift_task_alloc();
  sub_235EE5F14();
  v6[18] = swift_task_alloc();
  v6[19] = *(_QWORD *)(a3 - 8);
  v6[20] = swift_task_alloc();
  v12 = swift_getAssociatedTypeWitness();
  v6[21] = v12;
  v6[22] = *(_QWORD *)(v12 - 8);
  v6[23] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_235EBAD50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v10;
  _QWORD *v11;
  int *v12;

  v2 = *(_QWORD *)(v0 + 152);
  v1 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v0 + 16) = sub_235EE5E18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v3, v4);
  sub_235EE5DAC();
  v5 = *(_QWORD *)(v0 + 144);
  v6 = *(_QWORD *)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 128);
  swift_getAssociatedConformanceWitness();
  sub_235EE5F20();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 176) + 8))(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 168));
    v8 = *(_QWORD *)(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v8);
  }
  else
  {
    v10 = *(int **)(v0 + 24);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 32))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 120));
    v12 = (int *)((char *)v10 + *v10);
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 192) = v11;
    *v11 = v0;
    v11[1] = sub_235EBAF10;
    return ((uint64_t (*)(_QWORD, _QWORD))v12)(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 136));
  }
}

uint64_t sub_235EBAF10()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_235EBAF7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v17;
  _QWORD *v18;
  int *v19;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3);
  v6 = *(_QWORD *)(v0 + 128);
  v5 = *(_QWORD *)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 120);
  if (v4 == 1)
  {
    v8 = *(_QWORD *)(v0 + 64);
    v9 = *(_QWORD *)(v0 + 72);
    (*(void (**)(_QWORD, _QWORD))(v6 + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v1, v8);
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 96);
    v10 = *(_QWORD *)(v0 + 104);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v10, v1, v3);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v11, v10, v3);
    sub_235EE5E48();
    sub_235EE5E3C();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v10, v3);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  v12 = *(_QWORD *)(v0 + 144);
  v13 = *(_QWORD *)(v0 + 120);
  v14 = *(_QWORD *)(v0 + 128);
  swift_getAssociatedConformanceWitness();
  sub_235EE5F20();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 176) + 8))(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 168));
    v15 = *(_QWORD *)(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v15);
  }
  else
  {
    v17 = *(int **)(v0 + 24);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 32))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 120));
    v19 = (int *)((char *)v17 + *v17);
    v18 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 192) = v18;
    *v18 = v0;
    v18[1] = sub_235EBAF10;
    return ((uint64_t (*)(_QWORD, _QWORD))v19)(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 136));
  }
}

uint64_t sub_235EBB1AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 176);
  v1 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 168);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Collection.asyncFlatMap<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;

  v7[7] = a6;
  v7[8] = v6;
  v7[5] = a3;
  v7[6] = a4;
  v7[3] = a1;
  v7[4] = a2;
  v7[9] = swift_task_alloc();
  v7[10] = *(_QWORD *)(a5 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7[11] = AssociatedTypeWitness;
  v7[12] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v7[13] = swift_task_alloc();
  sub_235EE5F14();
  v7[14] = swift_task_alloc();
  v7[15] = *(_QWORD *)(a3 - 8);
  v7[16] = swift_task_alloc();
  v11 = swift_getAssociatedTypeWitness();
  v7[17] = v11;
  v7[18] = *(_QWORD *)(v11 - 8);
  v7[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_235EBB398()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v10;
  _QWORD *v11;
  int *v12;

  v2 = *(_QWORD *)(v0 + 120);
  v1 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v0 + 160) = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v0 + 16) = sub_235EE5E18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v3, v4);
  sub_235EE5DAC();
  v5 = *(_QWORD *)(v0 + 112);
  v6 = *(_QWORD *)(v0 + 88);
  v7 = *(_QWORD *)(v0 + 96);
  swift_getAssociatedConformanceWitness();
  sub_235EE5F20();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 8))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 136));
    v8 = *(_QWORD *)(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v8);
  }
  else
  {
    v10 = *(int **)(v0 + 24);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 32))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 88));
    v12 = (int *)((char *)v10 + *v10);
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 168) = v11;
    *v11 = v0;
    v11[1] = sub_235EBB564;
    return ((uint64_t (*)(_QWORD, _QWORD))v12)(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 104));
  }
}

uint64_t sub_235EBB564()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_235EBB5D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v9;
  _QWORD *v10;
  int *v11;

  v2 = *(_QWORD *)(v0 + 96);
  v1 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 88);
  sub_235EE5E48();
  sub_235EE5E30();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 88);
  v6 = *(_QWORD *)(v0 + 96);
  swift_getAssociatedConformanceWitness();
  sub_235EE5F20();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 8))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 136));
    v7 = *(_QWORD *)(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v7);
  }
  else
  {
    v9 = *(int **)(v0 + 24);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 32))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 88));
    v11 = (int *)((char *)v9 + *v9);
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 168) = v10;
    *v10 = v0;
    v10[1] = sub_235EBB564;
    return ((uint64_t (*)(_QWORD, _QWORD))v11)(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 104));
  }
}

uint64_t sub_235EBB76C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 144);
  v1 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 136);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Collection.asyncForEach(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;

  v5[4] = a3;
  v5[5] = v4;
  v5[2] = a1;
  v5[3] = a2;
  v5[6] = *(_QWORD *)(a4 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[7] = AssociatedTypeWitness;
  v5[8] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v5[9] = swift_task_alloc();
  sub_235EE5F14();
  v5[10] = swift_task_alloc();
  v5[11] = *(_QWORD *)(a3 - 8);
  v5[12] = swift_task_alloc();
  v8 = swift_getAssociatedTypeWitness();
  v5[13] = v8;
  v5[14] = *(_QWORD *)(v8 - 8);
  v5[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_235EBB918()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v5;
  _QWORD *v6;
  uint64_t (*v7)(_QWORD);

  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 16))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 32));
  sub_235EE5DAC();
  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  swift_getAssociatedConformanceWitness();
  sub_235EE5F20();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 112) + 8))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 104));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v5 = *(int **)(v0 + 16);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 32))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 56));
    v7 = (uint64_t (*)(_QWORD))((char *)v5 + *v5);
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 128) = v6;
    *v6 = v0;
    v6[1] = sub_235EBBA80;
    return v7(*(_QWORD *)(v0 + 72));
  }
}

uint64_t sub_235EBBA80()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_235EBBAE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v5;
  _QWORD *v6;
  uint64_t (*v7)(_QWORD);

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 56));
  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  swift_getAssociatedConformanceWitness();
  sub_235EE5F20();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 112) + 8))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 104));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v5 = *(int **)(v0 + 16);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 32))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 56));
    v7 = (uint64_t (*)(_QWORD))((char *)v5 + *v5);
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 128) = v6;
    *v6 = v0;
    v6[1] = sub_235EBBA80;
    return v7(*(_QWORD *)(v0 + 72));
  }
}

uint64_t sub_235EBBC28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 112);
  v1 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 104);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 56));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Collection.asyncFilter(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;

  v5[5] = a3;
  v5[6] = v4;
  v5[3] = a1;
  v5[4] = a2;
  v5[7] = *(_QWORD *)(a4 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[8] = AssociatedTypeWitness;
  v5[9] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v5[10] = swift_task_alloc();
  v5[11] = swift_task_alloc();
  sub_235EE5F14();
  v5[12] = swift_task_alloc();
  v5[13] = *(_QWORD *)(a3 - 8);
  v5[14] = swift_task_alloc();
  v8 = swift_getAssociatedTypeWitness();
  v5[15] = v8;
  v5[16] = *(_QWORD *)(v8 - 8);
  v5[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_235EBBDD8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  int *v11;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t);

  v2 = v0[13];
  v1 = v0[14];
  v4 = v0[5];
  v3 = v0[6];
  v0[2] = sub_235EE5E18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v3, v4);
  sub_235EE5DAC();
  v5 = v0[12];
  v6 = v0[9];
  v7 = v0[8];
  swift_getAssociatedConformanceWitness();
  sub_235EE5F20();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v5, 1, v7) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(v0[16] + 8))(v0[17], v0[15]);
    v8 = v0[2];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v9 = (uint64_t (*)(uint64_t))v0[1];
    v10 = v8;
  }
  else
  {
    v11 = (int *)v0[3];
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[9] + 32))(v0[11], v0[12], v0[8]);
    v14 = (uint64_t (*)(uint64_t))((char *)v11 + *v11);
    v12 = (_QWORD *)swift_task_alloc();
    v0[18] = v12;
    *v12 = v0;
    v12[1] = sub_235EBBF5C;
    v10 = v0[11];
    v9 = v14;
  }
  return v9(v10);
}

uint64_t sub_235EBBF5C(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 152) = v1;
  swift_task_dealloc();
  if (v1)
    swift_bridgeObjectRelease();
  else
    *(_BYTE *)(v4 + 160) = a1 & 1;
  return swift_task_switch();
}

uint64_t sub_235EBBFDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  int *v7;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t);

  if ((*(_BYTE *)(v0 + 160) & 1) != 0)
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 16))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 64));
    sub_235EE5E48();
    sub_235EE5E3C();
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 64));
  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 72);
  swift_getAssociatedConformanceWitness();
  sub_235EE5F20();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
    v4 = *(_QWORD *)(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v5 = *(uint64_t (**)(uint64_t))(v0 + 8);
    v6 = v4;
  }
  else
  {
    v7 = *(int **)(v0 + 24);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 32))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 64));
    v10 = (uint64_t (*)(uint64_t))((char *)v7 + *v7);
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 144) = v8;
    *v8 = v0;
    v8[1] = sub_235EBBF5C;
    v6 = *(_QWORD *)(v0 + 88);
    v5 = v10;
  }
  return v5(v6);
}

uint64_t sub_235EBC164()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 128);
  v1 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 120);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 64));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

ActivitySharingClient::SetActivityDataVisibleTransportItem __swiftcall SetActivityDataVisibleTransportItem.init(isActivityDataVisible:friendUUID:)(Swift::Bool isActivityDataVisible, Swift::String friendUUID)
{
  uint64_t v2;
  ActivitySharingClient::SetActivityDataVisibleTransportItem result;

  *(_BYTE *)v2 = isActivityDataVisible;
  *(Swift::String *)(v2 + 8) = friendUUID;
  result.friendUUID = friendUUID;
  result.isActivityDataVisible = isActivityDataVisible;
  return result;
}

uint64_t SetActivityDataVisibleTransportItem.isActivityDataVisible.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t SetActivityDataVisibleTransportItem.friendUUID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t SetActivityDataVisibleTransportItem.description.getter()
{
  sub_235EE5FB0();
  swift_bridgeObjectRelease();
  sub_235EE5D7C();
  swift_bridgeObjectRelease();
  sub_235EE5D7C();
  swift_bridgeObjectRetain();
  sub_235EE5D7C();
  swift_bridgeObjectRelease();
  sub_235EE5D7C();
  return 0xD00000000000003BLL;
}

uint64_t sub_235EBC340()
{
  _BYTE *v0;

  if (*v0)
    return 0x5555646E65697266;
  else
    return 0xD000000000000015;
}

uint64_t sub_235EBC384@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_235EBC9EC(a1, a2);
  *a3 = result;
  return result;
}

void sub_235EBC3A8(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_235EBC3B4()
{
  sub_235EBC52C();
  return sub_235EE6190();
}

uint64_t sub_235EBC3DC()
{
  sub_235EBC52C();
  return sub_235EE619C();
}

uint64_t SetActivityDataVisibleTransportItem.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];
  char v11;
  char v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638C518);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + 8);
  v10[0] = *(_QWORD *)(v1 + 16);
  v10[1] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_235EBC52C();
  sub_235EE6184();
  v12 = 0;
  sub_235EE6094();
  if (!v2)
  {
    v11 = 1;
    sub_235EE6088();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_235EBC52C()
{
  unint64_t result;

  result = qword_25638C520;
  if (!qword_25638C520)
  {
    result = MEMORY[0x23B7E5230](&unk_235EE8B38, &type metadata for SetActivityDataVisibleTransportItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25638C520);
  }
  return result;
}

uint64_t SetActivityDataVisibleTransportItem.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638C528);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_235EBC52C();
  sub_235EE6178();
  if (!v2)
  {
    v16 = 0;
    v9 = sub_235EE6064();
    v15 = 1;
    v11 = sub_235EE6058();
    v13 = v12;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_BYTE *)a2 = v9 & 1;
    *(_QWORD *)(a2 + 8) = v11;
    *(_QWORD *)(a2 + 16) = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_235EBC6C4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SetActivityDataVisibleTransportItem.init(from:)(a1, a2);
}

uint64_t sub_235EBC6D8(_QWORD *a1)
{
  return SetActivityDataVisibleTransportItem.encode(to:)(a1);
}

uint64_t destroy for SetActivityDataVisibleTransportItem()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s21ActivitySharingClient35SetActivityDataVisibleTransportItemVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SetActivityDataVisibleTransportItem(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SetActivityDataVisibleTransportItem(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SetActivityDataVisibleTransportItem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SetActivityDataVisibleTransportItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SetActivityDataVisibleTransportItem()
{
  return &type metadata for SetActivityDataVisibleTransportItem;
}

uint64_t storeEnumTagSinglePayload for SetActivityDataVisibleTransportItem.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_235EBC894 + 4 * byte_235EE8995[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_235EBC8C8 + 4 * byte_235EE8990[v4]))();
}

uint64_t sub_235EBC8C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_235EBC8D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x235EBC8D8);
  return result;
}

uint64_t sub_235EBC8E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x235EBC8ECLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_235EBC8F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_235EBC8F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SetActivityDataVisibleTransportItem.CodingKeys()
{
  return &type metadata for SetActivityDataVisibleTransportItem.CodingKeys;
}

unint64_t sub_235EBC918()
{
  unint64_t result;

  result = qword_25638C530;
  if (!qword_25638C530)
  {
    result = MEMORY[0x23B7E5230](&unk_235EE8B10, &type metadata for SetActivityDataVisibleTransportItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25638C530);
  }
  return result;
}

unint64_t sub_235EBC960()
{
  unint64_t result;

  result = qword_25638C538;
  if (!qword_25638C538)
  {
    result = MEMORY[0x23B7E5230](&unk_235EE8A80, &type metadata for SetActivityDataVisibleTransportItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25638C538);
  }
  return result;
}

unint64_t sub_235EBC9A8()
{
  unint64_t result;

  result = qword_25638C540;
  if (!qword_25638C540)
  {
    result = MEMORY[0x23B7E5230](&unk_235EE8AA8, &type metadata for SetActivityDataVisibleTransportItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25638C540);
  }
  return result;
}

uint64_t sub_235EBC9EC(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000015 && a2 == 0x8000000235EEBC60 || (sub_235EE60D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x5555646E65697266 && a2 == 0xEA00000000004449)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_235EE60D0();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

id LocalTransport.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

uint64_t sub_235EBCB04(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR____TtC21ActivitySharingClient14LocalTransport_transportDispatchService);
  swift_beginAccess();
  *v3 = v2;
  swift_retain();
  return swift_release();
}

uint64_t sub_235EBCB6C()
{
  swift_beginAccess();
  return swift_retain();
}

uint64_t sub_235EBCBB4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC21ActivitySharingClient14LocalTransport_transportDispatchService);
  swift_beginAccess();
  *v3 = a1;
  return swift_release();
}

uint64_t (*sub_235EBCC04())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_235EBCC48(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR____TtC21ActivitySharingClient14LocalTransport_proxy);
  swift_beginAccess();
  *v3 = v2;
  swift_unknownObjectRetain();
  return swift_unknownObjectRelease();
}

uint64_t sub_235EBCCB0()
{
  swift_beginAccess();
  return swift_unknownObjectRetain();
}

uint64_t sub_235EBCCF8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC21ActivitySharingClient14LocalTransport_proxy);
  swift_beginAccess();
  *v3 = a1;
  return swift_unknownObjectRelease();
}

uint64_t (*sub_235EBCD48())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id LocalTransport.init()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  objc_super v5;

  v1 = OBJC_IVAR____TtC21ActivitySharingClient14LocalTransport_transportDispatchService;
  type metadata accessor for TransportDispatchService();
  v2 = swift_allocObject();
  v3 = v0;
  swift_defaultActor_initialize();
  *(_QWORD *)(v2 + 112) = MEMORY[0x24BEE4B00];
  *(_QWORD *)&v0[v1] = v2;
  *(_QWORD *)&v3[OBJC_IVAR____TtC21ActivitySharingClient14LocalTransport_proxy] = 0;

  v5.receiver = v3;
  v5.super_class = (Class)type metadata accessor for LocalTransport();
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t type metadata accessor for LocalTransport()
{
  return objc_opt_self();
}

id LocalTransport.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LocalTransport();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_235EBCF38()
{
  swift_beginAccess();
  return swift_retain();
}

uint64_t LocalTransport.invalidate()()
{
  uint64_t v0;

  return sub_235EBCF98(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_235EBCF98(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t LocalTransport.sendItem(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 144) = a1;
  *(_QWORD *)(v2 + 152) = v1;
  return swift_task_switch();
}

uint64_t sub_235EBCFB8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = (uint64_t *)(*(_QWORD *)(v0 + 152) + OBJC_IVAR____TtC21ActivitySharingClient14LocalTransport_proxy);
  swift_beginAccess();
  v2 = *v1;
  *(_QWORD *)(v0 + 160) = v2;
  if (!v2)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v3 = *(_QWORD *)(v0 + 144);
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_235EBD09C;
  v4 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
  v5 = (_QWORD *)(v0 + 80);
  v5[1] = 0x40000000;
  v5[2] = sub_235EBD174;
  v5[3] = &block_descriptor_0;
  v5[4] = v4;
  objc_msgSend((id)swift_unknownObjectRetain(), sel_transportMessage_completionHandler_, v3, v5);
  return swift_continuation_await();
}

uint64_t sub_235EBD09C()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 168) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_235EBD0FC()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EBD130()
{
  uint64_t v0;

  swift_willThrow();
  swift_unknownObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t LocalTransport.sendItem<A>(_:payload:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v5[21] = a4;
  v5[22] = v4;
  v5[19] = a2;
  v5[20] = a3;
  v5[18] = a1;
  v6 = sub_235EE5F14();
  v5[23] = v6;
  v5[24] = *(_QWORD *)(v6 - 8);
  v5[25] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_235EBD1E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void **v10;
  void *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v1 = *(_QWORD *)(v0 + 200);
  v3 = (uint64_t *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 160);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 192) + 16))(v1, *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 184));
  v4 = *(_QWORD *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v2) == 1)
  {
    v5 = 0;
    v4 = *(_QWORD *)(v0 + 192);
    v6 = 0xF000000000000000;
    v3 = (uint64_t *)(v0 + 184);
  }
  else
  {
    v5 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 160));
    v6 = v7;
  }
  v8 = *v3;
  *(_QWORD *)(v0 + 208) = v5;
  *(_QWORD *)(v0 + 216) = v6;
  v9 = *(_QWORD *)(v0 + 176);
  (*(void (**)(_QWORD, uint64_t))(v4 + 8))(*(_QWORD *)(v0 + 200), v8);
  v10 = (void **)(v9 + OBJC_IVAR____TtC21ActivitySharingClient14LocalTransport_proxy);
  swift_beginAccess();
  v11 = *v10;
  *(_QWORD *)(v0 + 224) = *v10;
  if (v11)
  {
    swift_unknownObjectRetain();
    if (v6 >> 60 == 15)
    {
      v12 = 0;
    }
    else
    {
      sub_235E9083C(v5, v6);
      v12 = sub_235EE5AAC();
      sub_235E90940(v5, v6);
    }
    *(_QWORD *)(v0 + 232) = v12;
    v14 = *(_QWORD *)(v0 + 144);
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_235EBD3F4;
    v15 = swift_continuation_init();
    *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
    v16 = (_QWORD *)(v0 + 80);
    v16[1] = 0x40000000;
    v16[2] = sub_235EBD174;
    v16[3] = &block_descriptor_2;
    v16[4] = v15;
    objc_msgSend(v11, sel_transportMessage_data_completionHandler_, v14, v12, v16);
    return swift_continuation_await();
  }
  else
  {
    sub_235E90940(v5, v6);
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_235EBD3F4()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 240) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_235EBD454()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 232);
  sub_235E90940(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 216));
  swift_unknownObjectRelease();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EBD4A0()
{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 232);
  v2 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 208);
  swift_willThrow();
  sub_235E90940(v3, v2);
  swift_unknownObjectRelease();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EBD50C(uint64_t a1, void *a2)
{
  _QWORD *v3;
  id v4;

  if (!a2)
    return swift_continuation_throwingResume();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25638BF90);
  swift_allocError();
  *v3 = a2;
  v4 = a2;
  return swift_continuation_throwingResumeWithError();
}

uint64_t LocalTransport.sendItem<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[23] = a4;
  v5[24] = v4;
  v5[21] = a2;
  v5[22] = a3;
  v5[20] = a1;
  return swift_task_switch();
}

{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v5[23] = a4;
  v5[24] = v4;
  v5[21] = a2;
  v5[22] = a3;
  v5[20] = a1;
  v6 = sub_235EE5F14();
  v5[25] = v6;
  v5[26] = *(_QWORD *)(v6 - 8);
  v5[27] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_235EBD5A0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = (uint64_t *)(*(_QWORD *)(v0 + 192) + OBJC_IVAR____TtC21ActivitySharingClient14LocalTransport_proxy);
  swift_beginAccess();
  v2 = *v1;
  *(_QWORD *)(v0 + 200) = v2;
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 168);
    *(_QWORD *)(v0 + 56) = v0 + 144;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_235EBD6BC;
    v4 = swift_continuation_init();
    *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
    v5 = (_QWORD *)(v0 + 80);
    v5[1] = 0x40000000;
    v5[2] = sub_235E8E3F4;
    v5[3] = &block_descriptor_4_0;
    v5[4] = v4;
    objc_msgSend((id)swift_unknownObjectRetain(), sel_transportRequest_completionHandler_, v3, v5);
    return swift_continuation_await();
  }
  else
  {
    (*(void (**)(_QWORD, unint64_t))(*(_QWORD *)(v0 + 184) + 16))(0, 0xF000000000000000);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_235EBD6BC()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 208) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_235EBD71C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 144);
  v1 = *(_QWORD *)(v0 + 152);
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 184) + 16))(v2, v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EBD788()
{
  uint64_t v0;

  swift_willThrow();
  swift_unknownObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EBD838()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(_QWORD, unint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;

  v1 = (uint64_t *)(*(_QWORD *)(v0 + 192) + OBJC_IVAR____TtC21ActivitySharingClient14LocalTransport_proxy);
  swift_beginAccess();
  v2 = *v1;
  *(_QWORD *)(v0 + 224) = v2;
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 168);
    *(_QWORD *)(v0 + 56) = v0 + 144;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_235EBDA24;
    v4 = swift_continuation_init();
    *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
    v5 = (_QWORD *)(v0 + 80);
    v5[1] = 0x40000000;
    v5[2] = sub_235E8E3F4;
    v5[3] = &block_descriptor_6_0;
    v5[4] = v4;
    objc_msgSend((id)swift_unknownObjectRetain(), sel_transportRequest_completionHandler_, v3, v5);
    return swift_continuation_await();
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 176);
    v7 = *(_QWORD *)(v0 + 184);
    v9 = *(void (**)(_QWORD, unint64_t, uint64_t, uint64_t))(v7 + 16);
    sub_235E9083C(0, 0xF000000000000000);
    v9(0, 0xF000000000000000, v8, v7);
    v10 = *(_QWORD *)(v0 + 216);
    v11 = *(_QWORD *)(v0 + 176);
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    {
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 208) + 8))(v10, *(_QWORD *)(v0 + 200));
      sub_235E9A644();
      swift_allocError();
      *v13 = 1;
      swift_willThrow();
      sub_235E90940(0, 0xF000000000000000);
    }
    else
    {
      v14 = *(_QWORD *)(v0 + 160);
      sub_235E90940(0, 0xF000000000000000);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v14, v10, v11);
    }
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_235EBDA24()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 232) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_235EBDA84()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  swift_unknownObjectRelease();
  v4 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 184);
  v5 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v3 + 16);
  sub_235E9083C(v1, v2);
  v5(v1, v2, v4, v3);
  v6 = *(_QWORD *)(v0 + 216);
  v7 = *(_QWORD *)(v0 + 176);
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 208) + 8))(v6, *(_QWORD *)(v0 + 200));
    sub_235E9A644();
    swift_allocError();
    *v9 = 1;
    swift_willThrow();
    sub_235E90940(v1, v2);
  }
  else
  {
    v10 = *(_QWORD *)(v0 + 160);
    sub_235E90940(v1, v2);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v10, v6, v7);
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EBDBC4()
{
  uint64_t v0;

  swift_willThrow();
  swift_unknownObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t LocalTransport.sendItem<A, B>(_:payload:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v8[26] = a7;
  v8[27] = v7;
  v8[24] = a5;
  v8[25] = a6;
  v8[22] = a3;
  v8[23] = a4;
  v8[20] = a1;
  v8[21] = a2;
  v9 = sub_235EE5F14();
  v8[28] = v9;
  v8[29] = *(_QWORD *)(v9 - 8);
  v8[30] = swift_task_alloc();
  return swift_task_switch();
}

{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v8[26] = a7;
  v8[27] = v7;
  v8[24] = a5;
  v8[25] = a6;
  v8[22] = a3;
  v8[23] = a4;
  v8[20] = a1;
  v8[21] = a2;
  v9 = sub_235EE5F14();
  v8[28] = v9;
  v8[29] = *(_QWORD *)(v9 - 8);
  v8[30] = swift_task_alloc();
  v10 = sub_235EE5F14();
  v8[31] = v10;
  v8[32] = *(_QWORD *)(v10 - 8);
  v8[33] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_235EBDC80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void **v10;
  void *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v1 = *(_QWORD *)(v0 + 240);
  v3 = (uint64_t *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 184);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 232) + 16))(v1, *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 224));
  v4 = *(_QWORD *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v2) == 1)
  {
    v5 = 0;
    v4 = *(_QWORD *)(v0 + 232);
    v6 = 0xF000000000000000;
    v3 = (uint64_t *)(v0 + 224);
  }
  else
  {
    v5 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v0 + 200) + 8))(*(_QWORD *)(v0 + 184));
    v6 = v7;
  }
  v8 = *v3;
  *(_QWORD *)(v0 + 256) = v5;
  *(_QWORD *)(v0 + 264) = v6;
  *(_QWORD *)(v0 + 248) = 0;
  v9 = *(_QWORD *)(v0 + 216);
  (*(void (**)(_QWORD, uint64_t))(v4 + 8))(*(_QWORD *)(v0 + 240), v8);
  v10 = (void **)(v9 + OBJC_IVAR____TtC21ActivitySharingClient14LocalTransport_proxy);
  swift_beginAccess();
  v11 = *v10;
  *(_QWORD *)(v0 + 272) = *v10;
  if (v11)
  {
    swift_unknownObjectRetain();
    if (v6 >> 60 == 15)
    {
      v12 = 0;
    }
    else
    {
      sub_235E9083C(v5, v6);
      v12 = sub_235EE5AAC();
      sub_235E90940(v5, v6);
    }
    *(_QWORD *)(v0 + 280) = v12;
    v14 = *(_QWORD *)(v0 + 168);
    *(_QWORD *)(v0 + 56) = v0 + 144;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_235EBDED0;
    v15 = swift_continuation_init();
    *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
    v16 = (_QWORD *)(v0 + 80);
    v16[1] = 0x40000000;
    v16[2] = sub_235E8E3F4;
    v16[3] = &block_descriptor_8;
    v16[4] = v15;
    objc_msgSend(v11, sel_transportRequest_data_completionHandler_, v14, v12, v16);
    return swift_continuation_await();
  }
  else
  {
    (*(void (**)(_QWORD, unint64_t))(*(_QWORD *)(v0 + 208) + 16))(0, 0xF000000000000000);
    sub_235E90940(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 264));
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_235EBDED0()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 288) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_235EBDF30()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 280);
  v3 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  swift_unknownObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 208) + 16))(v3, v2);
  sub_235E90940(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 264));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EBDFC8()
{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 280);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 256);
  swift_willThrow();
  sub_235E90940(v3, v2);
  swift_unknownObjectRelease();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EBE0D4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void **v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(_QWORD, unint64_t, uint64_t, uint64_t);
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  unint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t (*v30)(void);
  uint64_t v31;

  v1 = v0[33];
  v3 = v0 + 23;
  v2 = v0[23];
  (*(void (**)(uint64_t, _QWORD, _QWORD))(v0[32] + 16))(v1, v0[22], v0[31]);
  v4 = *(_QWORD *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v2) == 1)
  {
    v5 = 0;
    v4 = v0[32];
    v6 = 0xF000000000000000;
    v3 = v0 + 31;
  }
  else
  {
    v5 = (*(uint64_t (**)(_QWORD))(v0[25] + 8))(v0[23]);
    v6 = v7;
  }
  v8 = *v3;
  v0[35] = v5;
  v0[36] = v6;
  v0[34] = 0;
  v9 = v0[27];
  (*(void (**)(_QWORD, uint64_t))(v4 + 8))(v0[33], v8);
  v10 = (void **)(v9 + OBJC_IVAR____TtC21ActivitySharingClient14LocalTransport_proxy);
  swift_beginAccess();
  v11 = *v10;
  v0[37] = *v10;
  if (!v11)
  {
    v13 = v0[34];
    v14 = v0[26];
    v15 = v0[24];
    v16 = *(void (**)(_QWORD, unint64_t, uint64_t, uint64_t))(v14 + 16);
    sub_235E9083C(0, 0xF000000000000000);
    v16(0, 0xF000000000000000, v15, v14);
    if (v13)
    {
      sub_235E90940(v0[35], v0[36]);
      v17 = 0;
      v18 = 0xF000000000000000;
    }
    else
    {
      v23 = v0[30];
      v24 = v0[24];
      v25 = *(_QWORD *)(v24 - 8);
      v26 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24);
      v28 = v0[35];
      v27 = v0[36];
      if (v26 != 1)
      {
        v31 = v0[20];
        sub_235E90940(v0[35], v0[36]);
        sub_235E90940(0, 0xF000000000000000);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v31, v23, v24);
        swift_task_dealloc();
        swift_task_dealloc();
        v30 = (uint64_t (*)(void))v0[1];
        return v30();
      }
      (*(void (**)(uint64_t, _QWORD))(v0[29] + 8))(v23, v0[28]);
      sub_235E9A644();
      swift_allocError();
      *v29 = 1;
      swift_willThrow();
      sub_235E90940(0, 0xF000000000000000);
      v17 = v28;
      v18 = v27;
    }
    sub_235E90940(v17, v18);
    swift_task_dealloc();
    swift_task_dealloc();
    v30 = (uint64_t (*)(void))v0[1];
    return v30();
  }
  swift_unknownObjectRetain();
  if (v6 >> 60 == 15)
  {
    v12 = 0;
  }
  else
  {
    sub_235E9083C(v5, v6);
    v12 = sub_235EE5AAC();
    sub_235E90940(v5, v6);
  }
  v0[38] = v12;
  v19 = v0[21];
  v0[7] = v0 + 18;
  v0[2] = v0;
  v0[3] = sub_235EBE414;
  v20 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v21 = v0 + 10;
  v21[1] = 0x40000000;
  v21[2] = sub_235E8E3F4;
  v21[3] = &block_descriptor_10;
  v21[4] = v20;
  objc_msgSend(v11, sel_transportRequest_data_completionHandler_, v19, v12, v21);
  return swift_continuation_await();
}

uint64_t sub_235EBE414()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 312) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_235EBE474()
{
  _QWORD *v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  unint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t (*v17)(void);
  uint64_t v18;

  v1 = (void *)v0[38];
  v3 = v0[18];
  v2 = v0[19];
  swift_unknownObjectRelease();

  v4 = v0[34];
  v5 = v0[26];
  v6 = v0[24];
  v7 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v5 + 16);
  sub_235E9083C(v3, v2);
  v7(v3, v2, v6, v5);
  if (v4)
  {
    sub_235E90940(v0[35], v0[36]);
    v8 = v3;
    v9 = v2;
  }
  else
  {
    v10 = v0[30];
    v11 = v0[24];
    v12 = *(_QWORD *)(v11 - 8);
    v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11);
    v15 = v0[35];
    v14 = v0[36];
    if (v13 != 1)
    {
      v18 = v0[20];
      sub_235E90940(v0[35], v0[36]);
      sub_235E90940(v3, v2);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v18, v10, v11);
      swift_task_dealloc();
      swift_task_dealloc();
      v17 = (uint64_t (*)(void))v0[1];
      return v17();
    }
    (*(void (**)(uint64_t, _QWORD))(v0[29] + 8))(v10, v0[28]);
    sub_235E9A644();
    swift_allocError();
    *v16 = 1;
    swift_willThrow();
    sub_235E90940(v3, v2);
    v8 = v15;
    v9 = v14;
  }
  sub_235E90940(v8, v9);
  swift_task_dealloc();
  swift_task_dealloc();
  v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_235EBE60C()
{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 304);
  v2 = *(_QWORD *)(v0 + 288);
  v3 = *(_QWORD *)(v0 + 280);
  swift_willThrow();
  sub_235E90940(v3, v2);
  swift_unknownObjectRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EBE684()
{
  uint64_t v0;

  return sub_235EBCF98(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_235EBE690(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_235E8E458;
  v5[18] = a1;
  v5[19] = v4;
  return swift_task_switch();
}

uint64_t sub_235EBE6F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_235E8E458;
  return LocalTransport.sendItem<A>(_:payload:)(a1, a2, a3, a4);
}

uint64_t sub_235EBE76C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v10;
  _QWORD *v11;

  v10 = *v4;
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_235E8E458;
  v11[23] = a4;
  v11[24] = v10;
  v11[21] = a2;
  v11[22] = a3;
  v11[20] = a1;
  return swift_task_switch();
}

uint64_t sub_235EBE7F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_235E8E458;
  return LocalTransport.sendItem<A>(_:)(a1, a2, a3, a4);
}

uint64_t sub_235EBE870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;

  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_235E8E458;
  return LocalTransport.sendItem<A, B>(_:payload:)(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_235EBE910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;

  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_235E8E5E8;
  return LocalTransport.sendItem<A, B>(_:payload:)(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t LocalTransport.transportMessage(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = v1;
  return swift_task_switch();
}

uint64_t sub_235EBE9C8()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 72) + OBJC_IVAR____TtC21ActivitySharingClient14LocalTransport_transportDispatchService);
  swift_beginAccess();
  *(_QWORD *)(v0 + 80) = *v1;
  *(_QWORD *)(v0 + 48) = 0;
  *(_QWORD *)(v0 + 40) = 0;
  *(_BYTE *)(v0 + 56) = -1;
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v2;
  *v2 = v0;
  v2[1] = sub_235EBEA74;
  return sub_235EA6EF4(*(_QWORD *)(v0 + 64), 0, 0xF000000000000000, v0 + 40);
}

uint64_t sub_235EBEA74(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(*(_QWORD *)v3 + 96) = v2;
  swift_task_dealloc();
  if (!v2)
    sub_235E90940(a1, a2);
  return swift_task_switch();
}

uint64_t sub_235EBEAFC()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EBEB30()
{
  return swift_task_switch();
}

uint64_t sub_235EBEB44()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EBECA4(uint64_t a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  id v6;
  _QWORD *v7;

  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  v6 = a3;
  v7 = (_QWORD *)swift_task_alloc();
  v3[4] = v7;
  *v7 = v3;
  v7[1] = sub_235EBED2C;
  v7[8] = a1;
  v7[9] = v6;
  return swift_task_switch();
}

uint64_t sub_235EBED2C()
{
  void *v0;
  uint64_t *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = *(void **)(*v1 + 16);
  v3 = *v1;
  swift_task_dealloc();

  v4 = *(_QWORD *)(v3 + 24);
  if (v0)
  {
    v5 = (void *)sub_235EE5A94();

    (*(void (**)(uint64_t, void *))(v4 + 16))(v4, v5);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v4 + 16))(*(_QWORD *)(v3 + 24), 0);
  }
  _Block_release(*(const void **)(v3 + 24));
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t LocalTransport.transportMessage(_:data:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[10] = a3;
  v4[11] = v3;
  v4[8] = a1;
  v4[9] = a2;
  return swift_task_switch();
}

uint64_t sub_235EBEDE8()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 88) + OBJC_IVAR____TtC21ActivitySharingClient14LocalTransport_transportDispatchService);
  swift_beginAccess();
  *(_QWORD *)(v0 + 96) = *v1;
  *(_QWORD *)(v0 + 48) = 0;
  *(_QWORD *)(v0 + 40) = 0;
  *(_BYTE *)(v0 + 56) = -1;
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v2;
  *v2 = v0;
  v2[1] = sub_235EBEE90;
  return sub_235EA6EF4(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), v0 + 40);
}

uint64_t sub_235EBEE90(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(*(_QWORD *)v3 + 112) = v2;
  swift_task_dealloc();
  if (!v2)
    sub_235E90940(a1, a2);
  return swift_task_switch();
}

uint64_t sub_235EBEF18()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EBEF4C()
{
  return swift_task_switch();
}

uint64_t sub_235EBEF60()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EBF0C8(uint64_t a1, void *a2, void *aBlock, void *a4)
{
  _QWORD *v4;
  id v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  _QWORD *v13;

  v4[2] = a4;
  v4[3] = _Block_copy(aBlock);
  if (a2)
  {
    v8 = a2;
    v9 = a4;
    a2 = (void *)sub_235EE5AB8();
    v11 = v10;

  }
  else
  {
    v12 = a4;
    v11 = 0xF000000000000000;
  }
  v4[4] = a2;
  v4[5] = v11;
  v13 = (_QWORD *)swift_task_alloc();
  v4[6] = v13;
  *v13 = v4;
  v13[1] = sub_235EBF188;
  v13[10] = v11;
  v13[11] = a4;
  v13[8] = a1;
  v13[9] = a2;
  return swift_task_switch();
}

uint64_t sub_235EBF188()
{
  void *v0;
  uint64_t *v1;
  unint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v2 = *(_QWORD *)(*v1 + 40);
  v3 = *(_QWORD *)(*v1 + 32);
  v4 = *(void **)(*v1 + 16);
  v5 = *v1;
  swift_task_dealloc();

  sub_235E90940(v3, v2);
  v6 = *(_QWORD *)(v5 + 24);
  if (v0)
  {
    v7 = (void *)sub_235EE5A94();

    (*(void (**)(uint64_t, void *))(v6 + 16))(v6, v7);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v6 + 16))(*(_QWORD *)(v5 + 24), 0);
  }
  _Block_release(*(const void **)(v5 + 24));
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t LocalTransport.transportRequest(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = v1;
  return swift_task_switch();
}

uint64_t sub_235EBF258()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 72) + OBJC_IVAR____TtC21ActivitySharingClient14LocalTransport_transportDispatchService);
  swift_beginAccess();
  *(_QWORD *)(v0 + 80) = *v1;
  *(_QWORD *)(v0 + 48) = 0;
  *(_QWORD *)(v0 + 40) = 0;
  *(_BYTE *)(v0 + 56) = -1;
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v2;
  *v2 = v0;
  v2[1] = sub_235EBF304;
  return sub_235EA6EF4(*(_QWORD *)(v0 + 64), 0, 0xF000000000000000, v0 + 40);
}

uint64_t sub_235EBF304(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(v6 + 96) = v2;
  swift_task_dealloc();
  if (v2)
    return swift_task_switch();
  swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

uint64_t sub_235EBF4C0(uint64_t a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  id v5;

  v3[8] = a1;
  v3[9] = a3;
  v3[10] = _Block_copy(aBlock);
  v5 = a3;
  return swift_task_switch();
}

uint64_t sub_235EBF50C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 72) + OBJC_IVAR____TtC21ActivitySharingClient14LocalTransport_transportDispatchService);
  swift_beginAccess();
  *(_QWORD *)(v0 + 88) = *v1;
  *(_QWORD *)(v0 + 48) = 0;
  *(_QWORD *)(v0 + 40) = 0;
  *(_BYTE *)(v0 + 56) = -1;
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v2;
  *v2 = v0;
  v2[1] = sub_235EBF5B8;
  return sub_235EA6EF4(*(_QWORD *)(v0 + 64), 0, 0xF000000000000000, v0 + 40);
}

uint64_t sub_235EBF5B8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  void *v8;
  void *v9;
  void (**v10)(_QWORD, _QWORD, _QWORD);

  v6 = *v3;
  *(_QWORD *)(v6 + 104) = v2;
  swift_task_dealloc();
  if (v2)
    return swift_task_switch();
  v8 = *(void **)(v6 + 72);
  swift_release();

  if (a2 >> 60 == 15)
  {
    v9 = 0;
  }
  else
  {
    v9 = (void *)sub_235EE5AAC();
    sub_235E90940(a1, a2);
  }
  v10 = *(void (***)(_QWORD, _QWORD, _QWORD))(v6 + 80);
  ((void (**)(_QWORD, void *, _QWORD))v10)[2](v10, v9, 0);

  _Block_release(v10);
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_235EBF6A8()
{
  return swift_task_switch();
}

uint64_t sub_235EBF6BC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void (**v4)(_QWORD, _QWORD, _QWORD);

  v1 = *(void **)(v0 + 104);
  v2 = *(void **)(v0 + 72);
  swift_release();

  v3 = (void *)sub_235EE5A94();
  v4 = *(void (***)(_QWORD, _QWORD, _QWORD))(v0 + 80);
  ((void (**)(_QWORD, _QWORD, void *))v4)[2](v4, 0, v3);

  _Block_release(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t LocalTransport.transportRequest(_:data:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[10] = a3;
  v4[11] = v3;
  v4[8] = a1;
  v4[9] = a2;
  return swift_task_switch();
}

uint64_t sub_235EBF74C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 88) + OBJC_IVAR____TtC21ActivitySharingClient14LocalTransport_transportDispatchService);
  swift_beginAccess();
  *(_QWORD *)(v0 + 96) = *v1;
  *(_QWORD *)(v0 + 48) = 0;
  *(_QWORD *)(v0 + 40) = 0;
  *(_BYTE *)(v0 + 56) = -1;
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v2;
  *v2 = v0;
  v2[1] = sub_235EBF7F4;
  return sub_235EA6EF4(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), v0 + 40);
}

uint64_t sub_235EBF7F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(v6 + 112) = v2;
  swift_task_dealloc();
  if (v2)
    return swift_task_switch();
  swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

uint64_t sub_235EBF884@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC21ActivitySharingClient14LocalTransport_transportDispatchService);
  swift_beginAccess();
  *a2 = *v3;
  return swift_retain();
}

uint64_t sub_235EBF8DC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC21ActivitySharingClient14LocalTransport_proxy);
  swift_beginAccess();
  *a2 = *v3;
  return swift_unknownObjectRetain();
}

uint64_t method lookup function for LocalTransport()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LocalTransport.transportDispatchService.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of LocalTransport.transportDispatchService.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of LocalTransport.transportDispatchService.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of LocalTransport.proxy.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of LocalTransport.proxy.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of LocalTransport.proxy.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x88))();
}

uint64_t sub_235EBFB1C(uint64_t a1, void *a2, void *aBlock, void *a4)
{
  _QWORD *v4;
  id v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;

  v4[8] = a1;
  v4[9] = a4;
  v4[10] = _Block_copy(aBlock);
  if (a2)
  {
    v7 = a2;
    v8 = a4;
    v9 = sub_235EE5AB8();
    v11 = v10;

  }
  else
  {
    v12 = a4;
    v9 = 0;
    v11 = 0xF000000000000000;
  }
  v4[11] = v9;
  v4[12] = v11;
  return swift_task_switch();
}

uint64_t sub_235EBFBA8()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 72) + OBJC_IVAR____TtC21ActivitySharingClient14LocalTransport_transportDispatchService);
  swift_beginAccess();
  *(_QWORD *)(v0 + 104) = *v1;
  *(_QWORD *)(v0 + 48) = 0;
  *(_QWORD *)(v0 + 40) = 0;
  *(_BYTE *)(v0 + 56) = -1;
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v2;
  *v2 = v0;
  v2[1] = sub_235EBFC50;
  return sub_235EA6EF4(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), v0 + 40);
}

uint64_t sub_235EBFC50(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void (**v12)(_QWORD, _QWORD, _QWORD);

  v6 = *v3;
  *(_QWORD *)(v6 + 120) = v2;
  swift_task_dealloc();
  if (v2)
    return swift_task_switch();
  v8 = *(_QWORD *)(v6 + 96);
  v9 = *(_QWORD *)(v6 + 88);
  v10 = *(void **)(v6 + 72);
  swift_release();

  sub_235E90940(v9, v8);
  if (a2 >> 60 == 15)
  {
    v11 = 0;
  }
  else
  {
    v11 = (void *)sub_235EE5AAC();
    sub_235E90940(a1, a2);
  }
  v12 = *(void (***)(_QWORD, _QWORD, _QWORD))(v6 + 80);
  ((void (**)(_QWORD, void *, _QWORD))v12)[2](v12, v11, 0);

  _Block_release(v12);
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_235EBFD50()
{
  return swift_task_switch();
}

uint64_t sub_235EBFD64()
{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void (**v6)(_QWORD, _QWORD, _QWORD);

  v1 = *(void **)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v4 = *(void **)(v0 + 72);
  swift_release();

  sub_235E90940(v3, v2);
  v5 = (void *)sub_235EE5A94();

  v6 = *(void (***)(_QWORD, _QWORD, _QWORD))(v0 + 80);
  ((void (**)(_QWORD, _QWORD, void *))v6)[2](v6, 0, v5);

  _Block_release(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EBFDF4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  _QWORD *v6;

  v2 = v0[2];
  v3 = (void *)v0[3];
  v5 = (void *)v0[4];
  v4 = (void *)v0[5];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_235E8E458;
  return ((uint64_t (*)(uint64_t, void *, void *, void *))((char *)&dword_25638C5F8 + dword_25638C5F8))(v2, v3, v5, v4);
}

uint64_t sub_235EBFE78()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_235E8E458;
  return ((uint64_t (*)(uint64_t, void *, void *))((char *)&dword_25638C608 + dword_25638C608))(v2, v3, v4);
}

uint64_t sub_235EBFEF0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  _QWORD *v6;

  v2 = v0[2];
  v3 = (void *)v0[3];
  v5 = (void *)v0[4];
  v4 = (void *)v0[5];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_235E8E5E8;
  return ((uint64_t (*)(uint64_t, void *, void *, void *))((char *)&dword_25638C628 + dword_25638C628))(v2, v3, v5, v4);
}

uint64_t sub_235EBFF74()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_235E8E458;
  return ((uint64_t (*)(uint64_t, void *, void *))((char *)&dword_25638C648 + dword_25638C648))(v2, v3, v4);
}

uint64_t getEnumTagSinglePayload for CodableError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CodableError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_235EC00D0 + 4 * byte_235EE8BF5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_235EC0104 + 4 * byte_235EE8BF0[v4]))();
}

uint64_t sub_235EC0104(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_235EC010C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x235EC0114);
  return result;
}

uint64_t sub_235EC0120(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x235EC0128);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_235EC012C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_235EC0134(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CodableError()
{
  return &type metadata for CodableError;
}

unint64_t sub_235EC0154()
{
  unint64_t result;

  result = qword_25638C668;
  if (!qword_25638C668)
  {
    result = MEMORY[0x23B7E5230](&unk_235EE8C64, &type metadata for CodableError);
    atomic_store(result, (unint64_t *)&qword_25638C668);
  }
  return result;
}

uint64_t SecureCloudRepairMessageProtobuf.buildNumber.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 20));
  if (v1[1])
    v2 = *v1;
  else
    v2 = 0;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t type metadata accessor for SecureCloudRepairMessageProtobuf()
{
  uint64_t result;

  result = qword_25638C748;
  if (!qword_25638C748)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_235EC0234@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 20));
  v4 = v3[1];
  if (v4)
  {
    v5 = *v3;
    v6 = v4;
  }
  else
  {
    v5 = 0;
    v6 = 0xE000000000000000;
  }
  *a2 = v5;
  a2[1] = v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_235EC0284(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(a2 + *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 20));
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *v4 = v3;
  v4[1] = v2;
  return result;
}

uint64_t SecureCloudRepairMessageProtobuf.buildNumber.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 20));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SecureCloudRepairMessageProtobuf.buildNumber.modify(uint64_t a1))(uint64_t *, char)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 20);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v1 + v3);
  v5 = v4[1];
  if (v5)
  {
    v6 = *v4;
    v7 = v5;
  }
  else
  {
    v6 = 0;
    v7 = 0xE000000000000000;
  }
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_235E952D0;
}

BOOL SecureCloudRepairMessageProtobuf.hasBuildNumber.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 20) + 8) != 0;
}

Swift::Void __swiftcall SecureCloudRepairMessageProtobuf.clearBuildNumber()()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 20));
  swift_bridgeObjectRelease();
  *v1 = 0;
  v1[1] = 0;
}

double SecureCloudRepairMessageProtobuf.date.getter()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  v1 = v0 + *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 24);
  result = *(double *)v1;
  if (*(_BYTE *)(v1 + 8))
    return 0.0;
  return result;
}

uint64_t SecureCloudRepairMessageProtobuf.date.setter(double a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = type metadata accessor for SecureCloudRepairMessageProtobuf();
  v4 = v1 + *(int *)(result + 24);
  *(double *)v4 = a1;
  *(_BYTE *)(v4 + 8) = 0;
  return result;
}

uint64_t (*SecureCloudRepairMessageProtobuf.date.modify(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 24);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = v1 + v3;
  v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8))
    v5 = 0.0;
  *(double *)a1 = v5;
  return sub_235E950C4;
}

BOOL SecureCloudRepairMessageProtobuf.hasDate.getter()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 24) + 8) & 1) == 0;
}

Swift::Void __swiftcall SecureCloudRepairMessageProtobuf.clearDate()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 24);
  *(_QWORD *)v1 = 0;
  *(_BYTE *)(v1 + 8) = 1;
}

uint64_t SecureCloudRepairMessageProtobuf.identifier.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 28));
  if (v1[1])
    v2 = *v1;
  else
    v2 = 0;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_235EC0548@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 28));
  v4 = v3[1];
  if (v4)
  {
    v5 = *v3;
    v6 = v4;
  }
  else
  {
    v5 = 0;
    v6 = 0xE000000000000000;
  }
  *a2 = v5;
  a2[1] = v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_235EC0598(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(a2 + *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 28));
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *v4 = v3;
  v4[1] = v2;
  return result;
}

uint64_t SecureCloudRepairMessageProtobuf.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 28));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SecureCloudRepairMessageProtobuf.identifier.modify(uint64_t a1))(uint64_t *, char)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 28);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v1 + v3);
  v5 = v4[1];
  if (v5)
  {
    v6 = *v4;
    v7 = v5;
  }
  else
  {
    v6 = 0;
    v7 = 0xE000000000000000;
  }
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_235E952D0;
}

BOOL SecureCloudRepairMessageProtobuf.hasIdentifier.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 28) + 8) != 0;
}

Swift::Void __swiftcall SecureCloudRepairMessageProtobuf.clearIdentifier()()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 28));
  swift_bridgeObjectRelease();
  *v1 = 0;
  v1[1] = 0;
}

uint64_t SecureCloudRepairMessageProtobuf.secureCloudShareItem.getter()
{
  uint64_t v0;
  uint64_t *v1;
  unint64_t v2;
  uint64_t v3;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 32));
  v2 = v1[1];
  if (v2 >> 60 == 15)
    v3 = 0;
  else
    v3 = *v1;
  sub_235E9083C(*v1, v2);
  return v3;
}

uint64_t sub_235EC0740(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = (uint64_t *)(a2 + *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 32));
  v5 = *v4;
  v6 = v4[1];
  sub_235E90998(v2, v3);
  result = sub_235E90940(v5, v6);
  *v4 = v2;
  v4[1] = v3;
  return result;
}

uint64_t SecureCloudRepairMessageProtobuf.secureCloudShareItem.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = v2 + *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 32);
  result = sub_235E90940(*(_QWORD *)v5, *(_QWORD *)(v5 + 8));
  *(_QWORD *)v5 = a1;
  *(_QWORD *)(v5 + 8) = a2;
  return result;
}

uint64_t (*SecureCloudRepairMessageProtobuf.secureCloudShareItem.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 32);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v1 + v3);
  v5 = *v4;
  v6 = v4[1];
  if (v6 >> 60 == 15)
    v7 = 0;
  else
    v7 = *v4;
  v8 = 0xC000000000000000;
  if (v6 >> 60 != 15)
    v8 = v6;
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v8;
  sub_235E9083C(v5, v6);
  return sub_235EA2758;
}

BOOL SecureCloudRepairMessageProtobuf.hasSecureCloudShareItem.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 32) + 8) >> 60 != 15;
}

Swift::Void __swiftcall SecureCloudRepairMessageProtobuf.clearSecureCloudShareItem()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 32);
  sub_235E90940(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  *(_OWORD *)v1 = xmmword_235EE6E80;
}

uint64_t SecureCloudRepairMessageProtobuf.type.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  char v6;
  char v7;

  result = type metadata accessor for SecureCloudRepairMessageProtobuf();
  v4 = (uint64_t *)(v1 + *(int *)(result + 36));
  if ((*((_BYTE *)v4 + 9) & 1) != 0)
  {
    v5 = 0;
    v6 = 1;
  }
  else
  {
    v7 = *((_BYTE *)v4 + 8);
    v5 = *v4;
    v6 = v7 & 1;
  }
  *(_QWORD *)a1 = v5;
  *(_BYTE *)(a1 + 8) = v6;
  return result;
}

uint64_t SecureCloudRepairMessageProtobuf.type.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t result;
  uint64_t v5;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  result = type metadata accessor for SecureCloudRepairMessageProtobuf();
  v5 = v1 + *(int *)(result + 36);
  *(_QWORD *)v5 = v2;
  *(_BYTE *)(v5 + 8) = v3;
  *(_BYTE *)(v5 + 9) = 0;
  return result;
}

uint64_t (*SecureCloudRepairMessageProtobuf.type.modify(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  char v6;
  char v7;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 36);
  *(_DWORD *)(a1 + 12) = v3;
  v4 = (uint64_t *)(v1 + v3);
  if ((*((_BYTE *)v4 + 9) & 1) != 0)
  {
    v5 = 0;
    v6 = 1;
  }
  else
  {
    v7 = *((_BYTE *)v4 + 8);
    v5 = *v4;
    v6 = v7 & 1;
  }
  *(_QWORD *)a1 = v5;
  *(_BYTE *)(a1 + 8) = v6;
  return sub_235EA28B4;
}

BOOL SecureCloudRepairMessageProtobuf.hasType.getter()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 36) + 9) & 1) == 0;
}

Swift::Void __swiftcall SecureCloudRepairMessageProtobuf.clearType()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 36);
  *(_QWORD *)v1 = 0;
  *(_WORD *)(v1 + 8) = 256;
}

uint64_t SecureCloudRepairMessageProtobuf.version.getter()
{
  uint64_t v0;
  _BYTE *v1;

  v1 = (_BYTE *)(v0 + *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 40));
  if (v1[4])
    return 0;
  else
    return *(unsigned int *)v1;
}

uint64_t SecureCloudRepairMessageProtobuf.version.setter(int a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = type metadata accessor for SecureCloudRepairMessageProtobuf();
  v4 = v1 + *(int *)(result + 40);
  *(_DWORD *)v4 = a1;
  *(_BYTE *)(v4 + 4) = 0;
  return result;
}

uint64_t (*SecureCloudRepairMessageProtobuf.version.modify(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 40);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_235E95F24;
}

BOOL SecureCloudRepairMessageProtobuf.hasVersion.getter()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 40) + 4) & 1) == 0;
}

Swift::Void __swiftcall SecureCloudRepairMessageProtobuf.clearVersion()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 40);
  *(_DWORD *)v1 = 0;
  *(_BYTE *)(v1 + 4) = 1;
}

uint64_t SecureCloudRepairMessageProtobuf.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_235EE5B90();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t SecureCloudRepairMessageProtobuf.unknownFields.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_235EE5B90();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*SecureCloudRepairMessageProtobuf.unknownFields.modify())()
{
  return nullsub_1;
}

void SecureCloudRepairMessageProtobuf.MessageType.init()(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

unint64_t SecureCloudRepairMessageProtobuf.MessageType.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = result < 2;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

uint64_t SecureCloudRepairMessageProtobuf.MessageType.rawValue.getter()
{
  _BYTE *v0;

  if (v0[8])
    return *(_QWORD *)v0 != 0;
  else
    return *(_QWORD *)v0;
}

uint64_t sub_235EC0BD8()
{
  sub_235EC1484();
  return sub_235EE5BCC();
}

double SecureCloudRepairMessageProtobuf.init()@<D0>(uint64_t a1@<X8>)
{
  int *v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  double result;
  uint64_t v7;
  uint64_t v8;

  sub_235EE5B84();
  v2 = (int *)type metadata accessor for SecureCloudRepairMessageProtobuf();
  v3 = (_QWORD *)(a1 + v2[5]);
  *v3 = 0;
  v3[1] = 0;
  v4 = a1 + v2[6];
  *(_QWORD *)v4 = 0;
  *(_BYTE *)(v4 + 8) = 1;
  v5 = (_QWORD *)(a1 + v2[7]);
  *v5 = 0;
  v5[1] = 0;
  result = 0.0;
  *(_OWORD *)(a1 + v2[8]) = xmmword_235EE6E80;
  v7 = a1 + v2[9];
  *(_QWORD *)v7 = 0;
  *(_WORD *)(v7 + 8) = 256;
  v8 = a1 + v2[10];
  *(_DWORD *)v8 = 0;
  *(_BYTE *)(v8 + 4) = 1;
  return result;
}

void sub_235EC0C98()
{
  qword_25638C670 = (uint64_t)&unk_250744458;
}

uint64_t static SecureCloudRepairMessageProtobuf.MessageType.allCases.getter()
{
  if (qword_25638B518 != -1)
    swift_once();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static SecureCloudRepairMessageProtobuf.MessageType.allCases.setter(uint64_t a1)
{
  if (qword_25638B518 != -1)
    swift_once();
  swift_beginAccess();
  qword_25638C670 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static SecureCloudRepairMessageProtobuf.MessageType.allCases.modify())()
{
  if (qword_25638B518 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_235EC0DF8@<X0>(_QWORD *a1@<X8>)
{
  if (qword_25638B518 != -1)
    swift_once();
  swift_beginAccess();
  *a1 = qword_25638C670;
  return swift_bridgeObjectRetain();
}

unint64_t static SecureCloudRepairMessageProtobuf.protoMessageName.getter()
{
  return 0xD000000000000020;
}

uint64_t sub_235EC0E88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;

  v0 = sub_235EE5CD4();
  __swift_allocate_value_buffer(v0, qword_25638C678);
  __swift_project_value_buffer(v0, (uint64_t)qword_25638C678);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25638B600);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638B608);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_235EE6E90;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "buildNumber";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_235EE5CBC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "date";
  *(_QWORD *)(v11 + 8) = 4;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "identifier";
  *((_QWORD *)v13 + 1) = 10;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "secureCloudShareItem";
  *((_QWORD *)v15 + 1) = 20;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "type";
  *((_QWORD *)v17 + 1) = 4;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "version";
  *((_QWORD *)v19 + 1) = 7;
  v19[16] = 2;
  v10();
  return sub_235EE5CC8();
}

uint64_t static SecureCloudRepairMessageProtobuf._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_235EA3960(&qword_25638B520, (uint64_t)qword_25638C678, a1);
}

uint64_t SecureCloudRepairMessageProtobuf.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_235EE5BD8();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 3:
          type metadata accessor for SecureCloudRepairMessageProtobuf();
          v4 = v3;
          sub_235EE5C08();
          goto LABEL_5;
        case 2:
          type metadata accessor for SecureCloudRepairMessageProtobuf();
          v4 = v3;
          sub_235EE5BFC();
          goto LABEL_5;
        case 4:
          type metadata accessor for SecureCloudRepairMessageProtobuf();
          v4 = v3;
          sub_235EE5BF0();
          goto LABEL_5;
        case 5:
          v4 = v3;
          sub_235EC122C();
          goto LABEL_5;
        case 6:
          type metadata accessor for SecureCloudRepairMessageProtobuf();
          v4 = v3;
          sub_235EE5C14();
LABEL_5:
          v3 = v4;
          break;
        default:
          break;
      }
      result = sub_235EE5BD8();
    }
  }
  return result;
}

uint64_t sub_235EC122C()
{
  type metadata accessor for SecureCloudRepairMessageProtobuf();
  sub_235EC1484();
  return sub_235EE5BE4();
}

uint64_t SecureCloudRepairMessageProtobuf.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t result;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v2 = (int *)type metadata accessor for SecureCloudRepairMessageProtobuf();
  if (!*(_QWORD *)(v0 + v2[5] + 8) || (result = sub_235EE5C98(), !v1))
  {
    if ((*(_BYTE *)(v0 + v2[6] + 8) & 1) != 0 || (result = sub_235EE5C8C(), !v1))
    {
      if (!*(_QWORD *)(v0 + v2[7] + 8) || (result = sub_235EE5C98(), !v1))
      {
        v4 = v0 + v2[8];
        v5 = *(_QWORD *)(v4 + 8);
        if (v5 >> 60 == 15
          || (v6 = *(_QWORD *)v4,
              sub_235E90998(*(_QWORD *)v4, *(_QWORD *)(v4 + 8)),
              sub_235EE5C80(),
              result = sub_235E90940(v6, v5),
              !v1))
        {
          if ((*(_BYTE *)(v0 + v2[9] + 9) & 1) != 0 || (sub_235EC1484(), result = sub_235EE5C74(), !v1))
          {
            if ((*(_BYTE *)(v0 + v2[10] + 4) & 1) != 0)
              return sub_235EE5B78();
            result = sub_235EE5CA4();
            if (!v1)
              return sub_235EE5B78();
          }
        }
      }
    }
  }
  return result;
}

unint64_t sub_235EC1484()
{
  unint64_t result;

  result = qword_25638C6A8;
  if (!qword_25638C6A8)
  {
    result = MEMORY[0x23B7E5230](&protocol conformance descriptor for SecureCloudRepairMessageProtobuf.MessageType, &type metadata for SecureCloudRepairMessageProtobuf.MessageType);
    atomic_store(result, (unint64_t *)&qword_25638C6A8);
  }
  return result;
}

uint64_t SecureCloudRepairMessageProtobuf.hashValue.getter()
{
  sub_235EE6154();
  type metadata accessor for SecureCloudRepairMessageProtobuf();
  sub_235E930EC(&qword_25638C6B0, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudRepairMessageProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudRepairMessageProtobuf);
  sub_235EE5D1C();
  return sub_235EE616C();
}

double sub_235EC1538@<D0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  double result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_235EE5B84();
  v4 = a1[6];
  v5 = (_QWORD *)(a2 + a1[5]);
  *v5 = 0;
  v5[1] = 0;
  v6 = a2 + v4;
  *(_QWORD *)v6 = 0;
  *(_BYTE *)(v6 + 8) = 1;
  v7 = a1[8];
  v8 = (_QWORD *)(a2 + a1[7]);
  *v8 = 0;
  v8[1] = 0;
  result = 0.0;
  *(_OWORD *)(a2 + v7) = xmmword_235EE6E80;
  v10 = a1[10];
  v11 = a2 + a1[9];
  *(_QWORD *)v11 = 0;
  *(_WORD *)(v11 + 8) = 256;
  v12 = a2 + v10;
  *(_DWORD *)v12 = 0;
  *(_BYTE *)(v12 + 4) = 1;
  return result;
}

unint64_t sub_235EC15B0()
{
  return 0xD000000000000020;
}

uint64_t sub_235EC15CC()
{
  return SecureCloudRepairMessageProtobuf.decodeMessage<A>(decoder:)();
}

uint64_t sub_235EC15E0()
{
  return SecureCloudRepairMessageProtobuf.traverse<A>(visitor:)();
}

uint64_t sub_235EC15F4()
{
  sub_235E930EC(&qword_25638C798, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudRepairMessageProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudRepairMessageProtobuf);
  return sub_235EE5BC0();
}

uint64_t sub_235EC1644@<X0>(uint64_t a1@<X8>)
{
  return sub_235EA39E4(&qword_25638B520, (uint64_t)qword_25638C678, a1);
}

uint64_t sub_235EC1660()
{
  sub_235E930EC(&qword_25638B9C0, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudRepairMessageProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudRepairMessageProtobuf);
  return sub_235EE5C50();
}

uint64_t sub_235EC16A0()
{
  sub_235E930EC(&qword_25638B9C0, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudRepairMessageProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudRepairMessageProtobuf);
  return sub_235EE5C5C();
}

uint64_t sub_235EC16F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_235EE5CD4();
  __swift_allocate_value_buffer(v0, qword_25638C690);
  __swift_project_value_buffer(v0, (uint64_t)qword_25638C690);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25638B600);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638B608);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_235EE7AF0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "request";
  *(_QWORD *)(v7 + 8) = 7;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_235EE5CBC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "response";
  *((_QWORD *)v11 + 1) = 8;
  v11[16] = 2;
  v10();
  return sub_235EE5CC8();
}

uint64_t static SecureCloudRepairMessageProtobuf.MessageType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_235EA3960(&qword_25638B528, (uint64_t)qword_25638C690, a1);
}

uint64_t sub_235EC1860@<X0>(uint64_t a1@<X8>)
{
  return sub_235EA39E4(&qword_25638B528, (uint64_t)qword_25638C690, a1);
}

uint64_t sub_235EC187C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v5;
  char v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v8 = a1;
  v9 = a2;
  v10 = BYTE2(a2);
  v11 = BYTE3(a2);
  v12 = BYTE4(a2);
  v13 = BYTE5(a2);
  sub_235EDD3C8((uint64_t)&v8, (uint64_t)&v8 + BYTE6(a2), a3, a4);
  if (!v4)
    v5 = v7;
  return v5 & 1;
}

uint64_t sub_235EC1950(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  result = sub_235EE5A70();
  v11 = result;
  if (result)
  {
    result = sub_235EE5A88();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = sub_235EE5A7C();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v11 + v15;
  if (v11)
    v17 = v16;
  else
    v17 = 0;
  sub_235EDD3C8(v11, v17, a4, a5);
  if (!v5)
    v18 = v19;
  return v18 & 1;
}

void sub_235EC1A04(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_235EC1A50()
{
  unint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_235EC1A84 + dword_235EC1C5C[v0 >> 62]))();
}

uint64_t sub_235EC1A94@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (v1 == BYTE6(v2))
  {
    if (v1 >= 1)
      __asm { BR              X10 }
    v3 = 1;
  }
  else
  {
    v3 = 0;
  }
  return v3 & 1;
}

uint64_t _s21ActivitySharingClient32SecureCloudRepairMessageProtobufV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  BOOL v17;
  char v18;
  uint64_t v19;
  double *v20;
  char v21;
  double *v22;
  int v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t *v40;
  char v41;
  uint64_t *v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  _DWORD *v49;
  char v50;
  _DWORD *v51;
  int v52;
  void (*v53)(_BYTE *, uint64_t, uint64_t);
  void (*v54)(_BYTE *, uint64_t);
  _BYTE v55[4];
  int v56;
  uint64_t v57;

  v4 = sub_235EE5B90();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = &v55[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v6);
  v10 = &v55[-v9];
  v11 = (int *)type metadata accessor for SecureCloudRepairMessageProtobuf();
  v12 = v11[5];
  v13 = (_QWORD *)(a1 + v12);
  v14 = *(_QWORD *)(a1 + v12 + 8);
  v15 = (_QWORD *)(a2 + v12);
  v16 = v15[1];
  if (!v14)
  {
    if (v16)
      goto LABEL_25;
    goto LABEL_10;
  }
  if (!v16)
    goto LABEL_25;
  v17 = *v13 == *v15 && v14 == v16;
  if (v17 || (v18 = 0, (sub_235EE60D0() & 1) != 0))
  {
LABEL_10:
    v19 = v11[6];
    v20 = (double *)(a1 + v19);
    v21 = *(_BYTE *)(a1 + v19 + 8);
    v22 = (double *)(a2 + v19);
    v23 = *(unsigned __int8 *)(a2 + v19 + 8);
    if ((v21 & 1) != 0)
    {
      if (!v23)
        goto LABEL_25;
    }
    else
    {
      if (*v20 != *v22)
        LOBYTE(v23) = 1;
      if ((v23 & 1) != 0)
        goto LABEL_25;
    }
    v24 = v11[7];
    v25 = (_QWORD *)(a1 + v24);
    v26 = *(_QWORD *)(a1 + v24 + 8);
    v27 = (_QWORD *)(a2 + v24);
    v28 = v27[1];
    if (v26)
    {
      if (!v28)
        goto LABEL_25;
      if (*v25 != *v27 || v26 != v28)
      {
        v18 = 0;
        if ((sub_235EE60D0() & 1) == 0)
          return v18 & 1;
      }
    }
    else if (v28)
    {
      goto LABEL_25;
    }
    v31 = v11[8];
    v32 = *(_QWORD *)(a1 + v31);
    v33 = *(_QWORD *)(a1 + v31 + 8);
    v34 = (uint64_t *)(a2 + v31);
    v35 = *v34;
    v36 = v34[1];
    if (v33 >> 60 == 15)
    {
      if (v36 >> 60 == 15)
      {
LABEL_33:
        v39 = v11[9];
        v40 = (uint64_t *)(a1 + v39);
        v41 = *(_BYTE *)(a1 + v39 + 9);
        v42 = (uint64_t *)(a2 + v39);
        if ((v41 & 1) != 0)
        {
          if ((*((_BYTE *)v42 + 9) & 1) == 0)
            goto LABEL_25;
        }
        else
        {
          if ((*((_BYTE *)v42 + 9) & 1) != 0)
            goto LABEL_25;
          v43 = *v40;
          v44 = *((_BYTE *)v40 + 8);
          v45 = *v42;
          v46 = *((_BYTE *)v42 + 8);
          v47 = v43 != 0;
          if ((v44 & 1) == 0)
            v47 = v43;
          if ((v46 & 1) != 0)
          {
            if (v45)
            {
              if (v47 != 1)
                goto LABEL_25;
            }
            else if (v47)
            {
              goto LABEL_25;
            }
          }
          else if (v47 != v45)
          {
            goto LABEL_25;
          }
        }
        v48 = v11[10];
        v49 = (_DWORD *)(a1 + v48);
        v50 = *(_BYTE *)(a1 + v48 + 4);
        v51 = (_DWORD *)(a2 + v48);
        v52 = *(unsigned __int8 *)(a2 + v48 + 4);
        if ((v50 & 1) == 0)
        {
          if (*v49 != *v51)
            LOBYTE(v52) = 1;
          if ((v52 & 1) != 0)
            goto LABEL_25;
LABEL_52:
          v53 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16);
          v53(v10, a1, v4);
          v53(v8, a2, v4);
          sub_235E930EC(&qword_25638B5F8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
          v18 = sub_235EE5D28();
          v54 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
          v54(v8, v4);
          v54(v10, v4);
          return v18 & 1;
        }
        if (v52)
          goto LABEL_52;
LABEL_25:
        v18 = 0;
        return v18 & 1;
      }
    }
    else if (v36 >> 60 != 15)
    {
      v57 = v32;
      sub_235E9083C(v32, v33);
      sub_235E9083C(v35, v36);
      sub_235EC1A04(v57, v33);
      v56 = v38;
      sub_235E90940(v35, v36);
      sub_235E90940(v57, v33);
      if ((v56 & 1) == 0)
        goto LABEL_25;
      goto LABEL_33;
    }
    v37 = v32;
    sub_235E9083C(v32, v33);
    sub_235E9083C(v35, v36);
    sub_235E90940(v37, v33);
    sub_235E90940(v35, v36);
    v18 = 0;
  }
  return v18 & 1;
}

unint64_t sub_235EC1FD4()
{
  unint64_t result;

  result = qword_25638C6B8;
  if (!qword_25638C6B8)
  {
    result = MEMORY[0x23B7E5230](&protocol conformance descriptor for SecureCloudRepairMessageProtobuf.MessageType, &type metadata for SecureCloudRepairMessageProtobuf.MessageType);
    atomic_store(result, (unint64_t *)&qword_25638C6B8);
  }
  return result;
}

unint64_t sub_235EC201C()
{
  unint64_t result;

  result = qword_25638C6C0;
  if (!qword_25638C6C0)
  {
    result = MEMORY[0x23B7E5230](&protocol conformance descriptor for SecureCloudRepairMessageProtobuf.MessageType, &type metadata for SecureCloudRepairMessageProtobuf.MessageType);
    atomic_store(result, (unint64_t *)&qword_25638C6C0);
  }
  return result;
}

unint64_t sub_235EC2064()
{
  unint64_t result;

  result = qword_25638C6C8;
  if (!qword_25638C6C8)
  {
    result = MEMORY[0x23B7E5230](&protocol conformance descriptor for SecureCloudRepairMessageProtobuf.MessageType, &type metadata for SecureCloudRepairMessageProtobuf.MessageType);
    atomic_store(result, (unint64_t *)&qword_25638C6C8);
  }
  return result;
}

unint64_t sub_235EC20AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25638C6D0;
  if (!qword_25638C6D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25638C6D8);
    result = MEMORY[0x23B7E5230](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_25638C6D0);
  }
  return result;
}

uint64_t sub_235EC20F8()
{
  return sub_235E930EC(&qword_25638C6E0, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudRepairMessageProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudRepairMessageProtobuf);
}

uint64_t sub_235EC2124()
{
  return sub_235E930EC(&qword_25638B9C0, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudRepairMessageProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudRepairMessageProtobuf);
}

uint64_t sub_235EC2150()
{
  return sub_235E930EC(&qword_25638C6B0, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudRepairMessageProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudRepairMessageProtobuf);
}

uint64_t sub_235EC217C()
{
  return sub_235E930EC(&qword_25638C6E8, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudRepairMessageProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudRepairMessageProtobuf);
}

uint64_t sub_235EC21B0@<X0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  double v6;

  result = type metadata accessor for SecureCloudRepairMessageProtobuf();
  v5 = a1 + *(int *)(result + 24);
  v6 = *(double *)v5;
  if (*(_BYTE *)(v5 + 8))
    v6 = 0.0;
  *a2 = v6;
  return result;
}

uint64_t sub_235EC21F8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1;
  result = type metadata accessor for SecureCloudRepairMessageProtobuf();
  v5 = a2 + *(int *)(result + 24);
  *(_QWORD *)v5 = v3;
  *(_BYTE *)(v5 + 8) = 0;
  return result;
}

uint64_t sub_235EC2238@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 32));
  v4 = *v3;
  v5 = v3[1];
  if (v5 >> 60 == 15)
    v6 = 0;
  else
    v6 = *v3;
  v7 = 0xC000000000000000;
  if (v5 >> 60 != 15)
    v7 = v5;
  *a2 = v6;
  a2[1] = v7;
  return sub_235E9083C(v4, v5);
}

uint64_t sub_235EC2288@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t *v5;
  uint64_t v6;
  char v7;
  int v8;

  result = type metadata accessor for SecureCloudRepairMessageProtobuf();
  v5 = (uint64_t *)(a1 + *(int *)(result + 36));
  v6 = *v5;
  v7 = *((_BYTE *)v5 + 8);
  v8 = *((unsigned __int8 *)v5 + 9);
  if (v8)
    v6 = 0;
  *(_QWORD *)a2 = v6;
  *(_BYTE *)(a2 + 8) = (v8 | v7) & 1;
  return result;
}

uint64_t sub_235EC22DC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t result;
  uint64_t v6;

  v3 = *a1;
  v4 = *((_BYTE *)a1 + 8);
  result = type metadata accessor for SecureCloudRepairMessageProtobuf();
  v6 = a2 + *(int *)(result + 36);
  *(_QWORD *)v6 = v3;
  *(_BYTE *)(v6 + 8) = v4;
  *(_BYTE *)(v6 + 9) = 0;
  return result;
}

uint64_t sub_235EC2324@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result;
  int *v5;
  int v6;

  result = type metadata accessor for SecureCloudRepairMessageProtobuf();
  v5 = (int *)(a1 + *(int *)(result + 40));
  if (*((_BYTE *)v5 + 4))
    v6 = 0;
  else
    v6 = *v5;
  *a2 = v6;
  return result;
}

uint64_t sub_235EC2368(int *a1, uint64_t a2)
{
  int v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1;
  result = type metadata accessor for SecureCloudRepairMessageProtobuf();
  v5 = a2 + *(int *)(result + 40);
  *(_DWORD *)v5 = v3;
  *(_BYTE *)(v5 + 4) = 0;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SecureCloudRepairMessageProtobuf(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  char *v20;
  uint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  char *v30;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_235EE5B90();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (char *)a1 + v9;
    v14 = (char *)a2 + v9;
    v13[8] = v14[8];
    *(_QWORD *)v13 = *(_QWORD *)v14;
    v15 = a3[7];
    v16 = a3[8];
    v17 = (uint64_t *)((char *)a1 + v15);
    v18 = (uint64_t *)((char *)a2 + v15);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = (char *)a1 + v16;
    v21 = (uint64_t *)((char *)a2 + v16);
    v22 = *(uint64_t *)((char *)a2 + v16 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v22 >> 60 == 15)
    {
      *(_OWORD *)v20 = *(_OWORD *)v21;
    }
    else
    {
      v24 = *v21;
      sub_235E90998(*v21, v22);
      *(_QWORD *)v20 = v24;
      *((_QWORD *)v20 + 1) = v22;
    }
    v25 = a3[9];
    v26 = a3[10];
    v27 = (char *)a1 + v25;
    v28 = (char *)a2 + v25;
    *(_QWORD *)v27 = *(_QWORD *)v28;
    *((_WORD *)v27 + 4) = *((_WORD *)v28 + 4);
    v29 = (char *)a1 + v26;
    v30 = (char *)a2 + v26;
    *(_DWORD *)v29 = *(_DWORD *)v30;
    v29[4] = v30[4];
  }
  return a1;
}

uint64_t destroy for SecureCloudRepairMessageProtobuf(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t *v6;
  unint64_t v7;

  v4 = sub_235EE5B90();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v6 = (uint64_t *)(a1 + *(int *)(a2 + 32));
  v7 = v6[1];
  if (v7 >> 60 != 15)
    return sub_235E90954(*v6, v7);
  return result;
}

uint64_t initializeWithCopy for SecureCloudRepairMessageProtobuf(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = sub_235EE5B90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = a1 + v8;
  v13 = a2 + v8;
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v14 = a3[7];
  v15 = a3[8];
  v16 = (_QWORD *)(a1 + v14);
  v17 = (_QWORD *)(a2 + v14);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = a1 + v15;
  v20 = (uint64_t *)(a2 + v15);
  v21 = *(_QWORD *)(a2 + v15 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v21 >> 60 == 15)
  {
    *(_OWORD *)v19 = *(_OWORD *)v20;
  }
  else
  {
    v22 = *v20;
    sub_235E90998(*v20, v21);
    *(_QWORD *)v19 = v22;
    *(_QWORD *)(v19 + 8) = v21;
  }
  v23 = a3[9];
  v24 = a3[10];
  v25 = a1 + v23;
  v26 = a2 + v23;
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *(_WORD *)(v25 + 8) = *(_WORD *)(v26 + 8);
  v27 = a1 + v24;
  v28 = a2 + v24;
  *(_DWORD *)v27 = *(_DWORD *)v28;
  *(_BYTE *)(v27 + 4) = *(_BYTE *)(v28 + 4);
  return a1;
}

uint64_t assignWithCopy for SecureCloudRepairMessageProtobuf(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v6 = sub_235EE5B90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = (uint64_t *)(a2 + v10);
  v13 = *v12;
  *(_BYTE *)(v11 + 8) = *((_BYTE *)v12 + 8);
  *(_QWORD *)v11 = v13;
  v14 = a3[7];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = a3[8];
  v18 = (uint64_t *)(a1 + v17);
  v19 = (uint64_t *)(a2 + v17);
  v20 = *(_QWORD *)(a2 + v17 + 8);
  if (*(_QWORD *)(a1 + v17 + 8) >> 60 != 15)
  {
    if (v20 >> 60 != 15)
    {
      v22 = *v19;
      sub_235E90998(v22, v20);
      v23 = *v18;
      v24 = v18[1];
      *v18 = v22;
      v18[1] = v20;
      sub_235E90954(v23, v24);
      goto LABEL_8;
    }
    sub_235E97C08((uint64_t)v18);
    goto LABEL_6;
  }
  if (v20 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)v18 = *(_OWORD *)v19;
    goto LABEL_8;
  }
  v21 = *v19;
  sub_235E90998(v21, v20);
  *v18 = v21;
  v18[1] = v20;
LABEL_8:
  v25 = a3[9];
  v26 = a1 + v25;
  v27 = (uint64_t *)(a2 + v25);
  v28 = *v27;
  *(_WORD *)(v26 + 8) = *((_WORD *)v27 + 4);
  *(_QWORD *)v26 = v28;
  v29 = a3[10];
  v30 = a1 + v29;
  v31 = a2 + v29;
  LODWORD(v28) = *(_DWORD *)v31;
  *(_BYTE *)(v30 + 4) = *(_BYTE *)(v31 + 4);
  *(_DWORD *)v30 = v28;
  return a1;
}

uint64_t initializeWithTake for SecureCloudRepairMessageProtobuf(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_235EE5B90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
  v10 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v10) = *(_OWORD *)(a2 + v10);
  v11 = a3[9];
  v12 = a3[10];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_WORD *)(v13 + 8) = *(_WORD *)(v14 + 8);
  v15 = a1 + v12;
  v16 = a2 + v12;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  *(_DWORD *)v15 = *(_DWORD *)v16;
  return a1;
}

uint64_t assignWithTake for SecureCloudRepairMessageProtobuf(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v6 = sub_235EE5B90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = a3[7];
  v14 = a1 + v12;
  v15 = a2 + v12;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
  v16 = (_QWORD *)(a1 + v13);
  v17 = (uint64_t *)(a2 + v13);
  v19 = *v17;
  v18 = v17[1];
  *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  v20 = a3[8];
  v21 = (uint64_t *)(a1 + v20);
  v22 = (uint64_t *)(a2 + v20);
  v23 = *(_QWORD *)(a1 + v20 + 8);
  if (v23 >> 60 != 15)
  {
    v24 = v22[1];
    if (v24 >> 60 != 15)
    {
      v25 = *v21;
      *v21 = *v22;
      v21[1] = v24;
      sub_235E90954(v25, v23);
      goto LABEL_6;
    }
    sub_235E97C08((uint64_t)v21);
  }
  *(_OWORD *)v21 = *(_OWORD *)v22;
LABEL_6:
  v26 = a3[9];
  v27 = a3[10];
  v28 = a1 + v26;
  v29 = a2 + v26;
  *(_QWORD *)v28 = *(_QWORD *)v29;
  *(_WORD *)(v28 + 8) = *(_WORD *)(v29 + 8);
  v30 = a1 + v27;
  v31 = a2 + v27;
  *(_DWORD *)v30 = *(_DWORD *)v31;
  *(_BYTE *)(v30 + 4) = *(_BYTE *)(v31 + 4);
  return a1;
}

uint64_t getEnumTagSinglePayload for SecureCloudRepairMessageProtobuf()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_235EC29F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_235EE5B90();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for SecureCloudRepairMessageProtobuf()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_235EC2A90(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_235EE5B90();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  return result;
}

uint64_t sub_235EC2B0C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_235EE5B90();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SecureCloudRepairMessageProtobuf.MessageType()
{
  return &type metadata for SecureCloudRepairMessageProtobuf.MessageType;
}

BOOL static InvitationDestinationError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t InvitationDestinationError.hash(into:)()
{
  return sub_235EE6160();
}

uint64_t InvitationDestinationError.hashValue.getter()
{
  sub_235EE6154();
  sub_235EE6160();
  return sub_235EE616C();
}

unint64_t sub_235EC2C40()
{
  unint64_t result;

  result = qword_25638C7A0;
  if (!qword_25638C7A0)
  {
    result = MEMORY[0x23B7E5230](&protocol conformance descriptor for InvitationDestinationError, &type metadata for InvitationDestinationError);
    atomic_store(result, (unint64_t *)&qword_25638C7A0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for InvitationDestinationError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_235EC2CD0 + 4 * byte_235EE90B5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_235EC2D04 + 4 * byte_235EE90B0[v4]))();
}

uint64_t sub_235EC2D04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_235EC2D0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x235EC2D14);
  return result;
}

uint64_t sub_235EC2D20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x235EC2D28);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_235EC2D2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_235EC2D34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InvitationDestinationError()
{
  return &type metadata for InvitationDestinationError;
}

BOOL static ASCloudDevice.DeviceType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ASCloudDevice.DeviceType.hash(into:)()
{
  return sub_235EE6160();
}

uint64_t ASCloudDevice.DeviceType.hashValue.getter()
{
  sub_235EE6154();
  sub_235EE6160();
  return sub_235EE616C();
}

BOOL ASCloudDevice.isEligibleForMigration.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD v12[2];
  _QWORD v13[2];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25429CC78);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  ASCloudDevice.platform.getter((char *)v13);
  if (!LOBYTE(v13[0]))
    return 1;
  v4 = 808333617;
  if (LOBYTE(v13[0]) == 1)
    v4 = 808335409;
  v5 = objc_msgSend(v0, sel_osVersion);
  v6 = sub_235EE5D40();
  v8 = v7;

  v13[0] = v6;
  v13[1] = v8;
  v12[0] = v4;
  v12[1] = 0xE400000000000000;
  v9 = sub_235EE5B3C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v3, 1, 1, v9);
  sub_235E91808();
  v10 = sub_235EE5F50();
  sub_235E8EC2C((uint64_t)v3, &qword_25429CC78);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10 < 2;
}

uint64_t ASCloudDevice.platform.getter@<X0>(char *a1@<X8>)
{
  void *v1;
  void *v2;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  char v9;
  id v10;

  v2 = v1;
  v4 = objc_msgSend(v1, sel_deviceType);
  v5 = sub_235EE5D40();
  v7 = v6;

  sub_235E91808();
  LOBYTE(v4) = sub_235EE5F5C();
  result = swift_bridgeObjectRelease();
  if ((v4 & 1) != 0)
  {
    v9 = 1;
  }
  else
  {
    v10 = objc_msgSend(v2, sel_deviceType, 5459817, 0xE300000000000000, v5, v7);
    sub_235EE5D40();

    LOBYTE(v10) = sub_235EE5F5C();
    result = swift_bridgeObjectRelease();
    if ((v10 & 1) != 0)
      v9 = 2;
    else
      v9 = 0;
  }
  *a1 = v9;
  return result;
}

BOOL ASCloudDevice.isWithinTimeToLive.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t);
  _BOOL8 v18;
  id v19;
  uint64_t v20;
  id v22[2];
  uint64_t v23;
  uint64_t v24;

  v0 = sub_235EE5B60();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_235EE5B6C();
  v23 = *(_QWORD *)(v4 - 8);
  v24 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25429CC08);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_235EE5B0C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v22 - v15;
  sub_235EE5B54();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BDCF220], v0);
  sub_235EE5B00();
  sub_235EE5B48();
  v17 = *(void (**)(char *, uint64_t))(v11 + 8);
  v17(v14, v10);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v24);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_235E8EC2C((uint64_t)v9, &qword_25429CC08);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v9, v10);
    v19 = objc_msgSend(v22[1], sel_modificationDate);
    sub_235EE5AE8();

    v20 = sub_235EE5AF4();
    v17(v14, v10);
    v18 = v20 == 1;
    v17(v16, v10);
  }
  return v18;
}

uint64_t ASCloudDevice.deviceName.getter()
{
  uint64_t v0;
  char v2;

  ASCloudDevice.platform.getter(&v2);
  v0 = 0x656E6F685069;
  if (v2 != 1)
    v0 = 0x615720656C707041;
  if (v2)
    return v0;
  else
    return 0x6E776F6E6B6E55;
}

unint64_t sub_235EC3334()
{
  unint64_t result;

  result = qword_25638C7A8;
  if (!qword_25638C7A8)
  {
    result = MEMORY[0x23B7E5230](&protocol conformance descriptor for ASCloudDevice.DeviceType, &type metadata for ASCloudDevice.DeviceType);
    atomic_store(result, (unint64_t *)&qword_25638C7A8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for InvitationDestinationReachability(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s10DeviceTypeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_235EC3454 + 4 * byte_235EE91C5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_235EC3488 + 4 * byte_235EE91C0[v4]))();
}

uint64_t sub_235EC3488(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_235EC3490(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x235EC3498);
  return result;
}

uint64_t sub_235EC34A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x235EC34ACLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_235EC34B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_235EC34B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ASCloudDevice.DeviceType()
{
  return &type metadata for ASCloudDevice.DeviceType;
}

uint64_t dispatch thunk of TransportClient.activate()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 8) + *(_QWORD *)(a2 + 8));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_235E8E458;
  return v7(a1, a2);
}

uint64_t dispatch thunk of TransportClient.invalidate()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 16) + *(_QWORD *)(a2 + 16));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_235E8E5E8;
  return v7(a1, a2);
}

uint64_t dispatch thunk of TransportClient.sendItem(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 24) + *(_QWORD *)(a3 + 24));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_235E8E458;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of TransportClient.sendItem<A>(_:payload:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a6 + 32)
                                                                                     + *(_QWORD *)(a6 + 32));
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_235E8E458;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t dispatch thunk of TransportClient.sendItem<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a6 + 40)
                                                                                     + *(_QWORD *)(a6 + 40));
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_235E8E458;
  return v15(a1, a2, a3, a4, a5, a6);
}

{
  uint64_t v6;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a6 + 48)
                                                                                     + *(_QWORD *)(a6 + 48));
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_235E8E458;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t dispatch thunk of TransportClient.sendItem<A, B>(_:payload:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  _QWORD *v17;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a9 + 56) + *(_QWORD *)(a9 + 56));
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v9 + 16) = v17;
  *v17 = v9;
  v17[1] = sub_235E8E458;
  return v19(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

{
  uint64_t v9;
  _QWORD *v17;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a9 + 64) + *(_QWORD *)(a9 + 64));
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v9 + 16) = v17;
  *v17 = v9;
  v17[1] = sub_235E8E5E8;
  return v19(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t ASXPCListener.transportDispatchService.getter()
{
  return swift_retain();
}

id ASXPCListener.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

char *ASXPCListener.init()()
{
  id v0;
  char *v1;

  sub_235EE5D40();
  v0 = objc_allocWithZone((Class)type metadata accessor for ASXPCListener());
  v1 = ASXPCListener.init(machServiceName:)();
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v1;
}

char *ASXPCListener.__allocating_init(machServiceName:)()
{
  objc_class *v0;
  id v1;

  v1 = objc_allocWithZone(v0);
  return ASXPCListener.init(machServiceName:)();
}

uint64_t type metadata accessor for ASXPCListener()
{
  return objc_opt_self();
}

char *ASXPCListener.init(machServiceName:)()
{
  void *v0;
  id v1;
  char *v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  objc_super v10;

  v1 = objc_allocWithZone(MEMORY[0x24BDD1998]);
  v2 = v0;
  v3 = (void *)sub_235EE5D34();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v1, sel_initWithMachServiceName_, v3);

  *(_QWORD *)&v2[OBJC_IVAR____TtC21ActivitySharingClient13ASXPCListener_listener] = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25429C940);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_235EE6BA0;
  *(_QWORD *)(v5 + 32) = sub_235EE5D40();
  *(_QWORD *)(v5 + 40) = v6;
  *(_QWORD *)&v2[OBJC_IVAR____TtC21ActivitySharingClient13ASXPCListener_requiredEntitlements] = v5;
  type metadata accessor for TransportDispatchService();
  v7 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v7 + 112) = MEMORY[0x24BEE4B00];
  *(_QWORD *)&v2[OBJC_IVAR____TtC21ActivitySharingClient13ASXPCListener_transportDispatchService] = v7;

  v10.receiver = v2;
  v10.super_class = (Class)type metadata accessor for ASXPCListener();
  v8 = (char *)objc_msgSendSuper2(&v10, sel_init);
  objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC21ActivitySharingClient13ASXPCListener_listener], sel_setDelegate_, v8);
  return v8;
}

id ASXPCListener.__deallocating_deinit()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  objc_super v5;

  v1 = v0;
  if (qword_25429CF60 != -1)
    swift_once();
  v2 = sub_235EE5CF8();
  __swift_project_value_buffer(v2, (uint64_t)qword_25429CF70);
  sub_235E9105C(0xD000000000000063, 0x8000000235EEBD20, 0x6164696C61766E69, 0xEC00000029286574);
  v3 = *(void **)&v0[OBJC_IVAR____TtC21ActivitySharingClient13ASXPCListener_listener];
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC21ActivitySharingClient13ASXPCListener_listener], sel_setDelegate_, 0);
  objc_msgSend(v3, sel_invalidate);
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for ASXPCListener();
  return objc_msgSendSuper2(&v5, sel_dealloc);
}

id sub_235EC3E5C()
{
  uint64_t v0;
  uint64_t v1;

  if (qword_25429CF60 != -1)
    swift_once();
  v1 = sub_235EE5CF8();
  __swift_project_value_buffer(v1, (uint64_t)qword_25429CF70);
  sub_235E9105C(0xD000000000000063, 0x8000000235EEBD20, 0x6574617669746361, 0xEA00000000002928);
  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC21ActivitySharingClient13ASXPCListener_listener), sel_resume);
}

id sub_235EC3F00()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  if (qword_25429CF60 != -1)
    swift_once();
  v1 = sub_235EE5CF8();
  __swift_project_value_buffer(v1, (uint64_t)qword_25429CF70);
  sub_235E9105C(0xD000000000000063, 0x8000000235EEBD20, 0x6164696C61766E69, 0xEC00000029286574);
  v2 = *(void **)(v0 + OBJC_IVAR____TtC21ActivitySharingClient13ASXPCListener_listener);
  objc_msgSend(v2, sel_setDelegate_, 0);
  return objc_msgSend(v2, sel_invalidate);
}

void sub_235EC3FC0(void *a1, const char *a2)
{
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;

  if (qword_25429CF60 != -1)
    swift_once();
  v4 = sub_235EE5CF8();
  __swift_project_value_buffer(v4, (uint64_t)qword_25429CF70);
  v14 = a1;
  v5 = sub_235EE5CE0();
  v6 = sub_235EE5ECC();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v15 = v8;
    *(_DWORD *)v7 = 136446210;
    v9 = objc_msgSend(v14, sel_serviceName);
    if (v9)
    {
      v10 = v9;
      v11 = sub_235EE5D40();
      v13 = v12;

    }
    else
    {
      v13 = 0xEB00000000646569;
      v11 = 0x6669636570736E75;
    }
    sub_235E911D4(v11, v13, &v15);
    sub_235EE5F2C();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_235E8C000, v5, v6, a2, v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B7E529C](v8, -1, -1);
    MEMORY[0x23B7E529C](v7, -1, -1);

  }
  else
  {

  }
}

Swift::Bool __swiftcall ASXPCListener.listener(_:shouldAcceptNewConnection:)(NSXPCListener _, NSXPCConnection shouldAcceptNewConnection)
{
  uint64_t v2;
  char v4;

  v4 = sub_235E8F36C(shouldAcceptNewConnection.super.isa, *(_QWORD *)(v2 + OBJC_IVAR____TtC21ActivitySharingClient13ASXPCListener_requiredEntitlements));
  if ((v4 & 1) != 0)
    sub_235E90C6C(shouldAcceptNewConnection.super.isa);
  return v4 & 1;
}

uint64_t ASXPCListener.transportMessage(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = v1;
  return swift_task_switch();
}

uint64_t sub_235EC422C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  if (qword_25429CF60 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 48);
  v2 = sub_235EE5CF8();
  __swift_project_value_buffer(v2, (uint64_t)qword_25429CF70);
  sub_235E9105C(0xD000000000000063, 0x8000000235EEBD20, 0xD000000000000014, 0x8000000235EEBD90);
  *(_QWORD *)(v0 + 56) = *(_QWORD *)(v1 + OBJC_IVAR____TtC21ActivitySharingClient13ASXPCListener_transportDispatchService);
  *(_QWORD *)(v0 + 24) = 0;
  *(_QWORD *)(v0 + 16) = 0;
  *(_BYTE *)(v0 + 32) = -1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v3;
  *v3 = v0;
  v3[1] = sub_235EC4324;
  return sub_235EA6EF4(*(_QWORD *)(v0 + 40), 0, 0xF000000000000000, v0 + 16);
}

uint64_t sub_235EC4324(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(v6 + 72) = v2;
  swift_task_dealloc();
  if (v2)
    return swift_task_switch();
  sub_235E90940(a1, a2);
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_235EC44DC(uint64_t a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  id v6;
  _QWORD *v7;

  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  v6 = a3;
  v7 = (_QWORD *)swift_task_alloc();
  v3[4] = v7;
  *v7 = v3;
  v7[1] = sub_235EBED2C;
  v7[5] = a1;
  v7[6] = v6;
  return swift_task_switch();
}

uint64_t ASXPCListener.transportMessage(_:data:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  return swift_task_switch();
}

uint64_t sub_235EC4580()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  if (qword_25429CF60 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 64);
  v2 = sub_235EE5CF8();
  __swift_project_value_buffer(v2, (uint64_t)qword_25429CF70);
  sub_235E9105C(0xD000000000000063, 0x8000000235EEBD20, 0xD000000000000019, 0x8000000235EEBDB0);
  *(_QWORD *)(v0 + 72) = *(_QWORD *)(v1 + OBJC_IVAR____TtC21ActivitySharingClient13ASXPCListener_transportDispatchService);
  *(_QWORD *)(v0 + 24) = 0;
  *(_QWORD *)(v0 + 16) = 0;
  *(_BYTE *)(v0 + 32) = -1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v3;
  *v3 = v0;
  v3[1] = sub_235EC4674;
  return sub_235EA6EF4(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), v0 + 16);
}

uint64_t sub_235EC4674(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(v6 + 88) = v2;
  swift_task_dealloc();
  if (v2)
    return swift_task_switch();
  sub_235E90940(a1, a2);
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_235EC4700()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EC4840(uint64_t a1, void *a2, void *aBlock, void *a4)
{
  _QWORD *v4;
  id v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  _QWORD *v13;

  v4[2] = a4;
  v4[3] = _Block_copy(aBlock);
  if (a2)
  {
    v8 = a2;
    v9 = a4;
    a2 = (void *)sub_235EE5AB8();
    v11 = v10;

  }
  else
  {
    v12 = a4;
    v11 = 0xF000000000000000;
  }
  v4[4] = a2;
  v4[5] = v11;
  v13 = (_QWORD *)swift_task_alloc();
  v4[6] = v13;
  *v13 = v4;
  v13[1] = sub_235EBF188;
  v13[7] = v11;
  v13[8] = a4;
  v13[5] = a1;
  v13[6] = a2;
  return swift_task_switch();
}

uint64_t ASXPCListener.transportRequest(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = v1;
  return swift_task_switch();
}

uint64_t sub_235EC4918(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(v6 + 72) = v2;
  swift_task_dealloc();
  if (v2)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

uint64_t ASXPCListener.transportRequest(_:data:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  return swift_task_switch();
}

uint64_t sub_235EC49BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  if (qword_25429CF60 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 64);
  v2 = sub_235EE5CF8();
  __swift_project_value_buffer(v2, (uint64_t)qword_25429CF70);
  sub_235E9105C(0xD000000000000063, 0x8000000235EEBD20, 0xD000000000000019, 0x8000000235EEBDF0);
  *(_QWORD *)(v0 + 72) = *(_QWORD *)(v1 + OBJC_IVAR____TtC21ActivitySharingClient13ASXPCListener_transportDispatchService);
  *(_QWORD *)(v0 + 24) = 0;
  *(_QWORD *)(v0 + 16) = 0;
  *(_BYTE *)(v0 + 32) = -1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v3;
  *v3 = v0;
  v3[1] = sub_235EC4AB0;
  return sub_235EA6EF4(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), v0 + 16);
}

uint64_t sub_235EC4AB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(v6 + 88) = v2;
  swift_task_dealloc();
  if (v2)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

uint64_t sub_235EC4C6C(uint64_t a1, void *a2, void *aBlock, void *a4)
{
  _QWORD *v4;
  id v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;

  v4[5] = a1;
  v4[6] = a4;
  v4[7] = _Block_copy(aBlock);
  if (a2)
  {
    v7 = a2;
    v8 = a4;
    v9 = sub_235EE5AB8();
    v11 = v10;

  }
  else
  {
    v12 = a4;
    v9 = 0;
    v11 = 0xF000000000000000;
  }
  v4[8] = v9;
  v4[9] = v11;
  return swift_task_switch();
}

uint64_t sub_235EC4CF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  if (qword_25429CF60 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 48);
  v2 = sub_235EE5CF8();
  __swift_project_value_buffer(v2, (uint64_t)qword_25429CF70);
  sub_235E9105C(0xD000000000000063, 0x8000000235EEBD20, 0xD000000000000019, 0x8000000235EEBDF0);
  *(_QWORD *)(v0 + 80) = *(_QWORD *)(v1 + OBJC_IVAR____TtC21ActivitySharingClient13ASXPCListener_transportDispatchService);
  *(_QWORD *)(v0 + 24) = 0;
  *(_QWORD *)(v0 + 16) = 0;
  *(_BYTE *)(v0 + 32) = -1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v3;
  *v3 = v0;
  v3[1] = sub_235EC4DEC;
  return sub_235EA6EF4(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), v0 + 16);
}

uint64_t sub_235EC4DEC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  void (**v11)(_QWORD, _QWORD, _QWORD);

  v6 = *v3;
  *(_QWORD *)(v6 + 96) = v2;
  swift_task_dealloc();
  if (v2)
    return swift_task_switch();
  v9 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(v6 + 72);

  sub_235E90940(v9, v8);
  if (a2 >> 60 == 15)
  {
    v10 = 0;
  }
  else
  {
    v10 = (void *)sub_235EE5AAC();
    sub_235E90940(a1, a2);
  }
  v11 = *(void (***)(_QWORD, _QWORD, _QWORD))(v6 + 56);
  ((void (**)(_QWORD, void *, _QWORD))v11)[2](v11, v10, 0);

  _Block_release(v11);
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_235EC4EE4()
{
  return swift_task_switch();
}

uint64_t sub_235EC4EF8()
{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  void *v4;
  void (**v5)(_QWORD, _QWORD, _QWORD);

  v1 = *(void **)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);

  sub_235E90940(v3, v2);
  v4 = (void *)sub_235EE5A94();

  v5 = *(void (***)(_QWORD, _QWORD, _QWORD))(v0 + 56);
  ((void (**)(_QWORD, _QWORD, void *))v5)[2](v5, 0, v4);

  _Block_release(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EC4F7C()
{
  return swift_retain();
}

uint64_t sub_235EC4F90(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v4;
  *v4 = v3;
  v4[1] = sub_235E8E458;
  return v6();
}

uint64_t sub_235EC4FE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_235EE5E90();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_235EE5E84();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_235E8EC2C(a1, &qword_25429CDD0);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_235EE5E60();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_235EC5130(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_235EC5194;
  return v6(a1);
}

uint64_t sub_235EC5194()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t method lookup function for ASXPCListener()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ASXPCListener.__allocating_init(machServiceName:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of ASXPCListener.activate()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of ASXPCListener.invalidate()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x78))();
}

uint64_t sub_235EC5230()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  _QWORD *v6;

  v2 = v0[2];
  v3 = (void *)v0[3];
  v5 = (void *)v0[4];
  v4 = (void *)v0[5];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_235E8E458;
  return ((uint64_t (*)(uint64_t, void *, void *, void *))((char *)&dword_25638C8A0 + dword_25638C8A0))(v2, v3, v5, v4);
}

uint64_t sub_235EC52B0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_235EC52D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_235E8E5E8;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_25638C8D0 + dword_25638C8D0))(a1, v4);
}

uint64_t sub_235EC5354()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  _QWORD *v6;

  v2 = v0[2];
  v3 = (void *)v0[3];
  v5 = (void *)v0[4];
  v4 = (void *)v0[5];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_235E8E5E8;
  return ((uint64_t (*)(uint64_t, void *, void *, void *))((char *)&dword_25638C900 + dword_25638C900))(v2, v3, v5, v4);
}

uint64_t sub_235EC53D8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_235E8E458;
  return ((uint64_t (*)(uint64_t, void *, void *))((char *)&dword_25638C920 + dword_25638C920))(v2, v3, v4);
}

uint64_t sub_235EC544C()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_235EC5470()
{
  uint64_t v0;

  sub_235EC3FC0(*(void **)(v0 + 16), "XPC client connection (%{public}s) interrupted");
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

void sub_235EC5498()
{
  uint64_t v0;

  sub_235EC3FC0(*(void **)(v0 + 16), "XPC client connection (%{public}s) invalidated");
}

uint64_t sub_235EC54C4()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x696669746E656469;
  if (*v0 != 1)
    v1 = 6910581;
  if (*v0)
    return v1;
  else
    return 0x696C696261706163;
}

uint64_t sub_235EC552C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_235EC5D60(a1, a2);
  *a3 = result;
  return result;
}

void sub_235EC5550(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_235EC555C()
{
  sub_235EC573C();
  return sub_235EE6190();
}

uint64_t sub_235EC5584()
{
  sub_235EC573C();
  return sub_235EE619C();
}

uint64_t InvitationDestinationEndpoint.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638C9A0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v8 = v1[1];
  v13 = v1[2];
  v14 = v8;
  v10 = v1[3];
  v12[0] = v1[4];
  v12[1] = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_235EC573C();
  sub_235EE6184();
  v15 = v9;
  v17 = 0;
  sub_235E94924();
  sub_235EE60A0();
  if (!v2)
  {
    v15 = v14;
    v16 = v13;
    v17 = 1;
    sub_235E94A34();
    sub_235EE60A0();
    LOBYTE(v15) = 2;
    sub_235EE6088();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_235EC573C()
{
  unint64_t result;

  result = qword_25638C9A8;
  if (!qword_25638C9A8)
  {
    result = MEMORY[0x23B7E5230](&unk_235EE9474, &type metadata for InvitationDestinationEndpoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25638C9A8);
  }
  return result;
}

uint64_t InvitationDestinationEndpoint.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638C9B0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_235EC573C();
  sub_235EE6178();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v22 = 0;
  sub_235E948E0();
  sub_235EE6070();
  v9 = v20;
  v22 = 1;
  sub_235E949F0();
  sub_235EE6070();
  v19 = v9;
  v10 = v20;
  v11 = v21;
  LOBYTE(v20) = 2;
  sub_235E90998(v10, v21);
  v12 = sub_235EE6058();
  v14 = v13;
  v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  v16 = v12;
  v15(v8, v5);
  sub_235E90998(v10, v11);
  swift_bridgeObjectRetain();
  sub_235E90954(v10, v11);
  *a2 = v19;
  a2[1] = v10;
  a2[2] = v11;
  a2[3] = v16;
  a2[4] = v14;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  sub_235E90954(v10, v11);
  return swift_bridgeObjectRelease();
}

uint64_t sub_235EC59B4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return InvitationDestinationEndpoint.init(from:)(a1, a2);
}

uint64_t sub_235EC59C8(_QWORD *a1)
{
  return InvitationDestinationEndpoint.encode(to:)(a1);
}

uint64_t destroy for InvitationDestinationEndpoint(uint64_t a1)
{
  sub_235E90954(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for InvitationDestinationEndpoint(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  v5 = a2[2];
  sub_235E90998(v4, v5);
  a1[1] = v4;
  a1[2] = v5;
  v6 = a2[4];
  a1[3] = a2[3];
  a1[4] = v6;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for InvitationDestinationEndpoint(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  sub_235E90998(v4, v5);
  v6 = a1[1];
  v7 = a1[2];
  a1[1] = v4;
  a1[2] = v5;
  sub_235E90954(v6, v7);
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for InvitationDestinationEndpoint(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_235E90954(v4, v5);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InvitationDestinationEndpoint(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InvitationDestinationEndpoint(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for InvitationDestinationEndpoint()
{
  return &type metadata for InvitationDestinationEndpoint;
}

uint64_t storeEnumTagSinglePayload for InvitationDestinationEndpoint.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_235EC5C08 + 4 * byte_235EE9305[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_235EC5C3C + 4 * byte_235EE9300[v4]))();
}

uint64_t sub_235EC5C3C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_235EC5C44(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x235EC5C4CLL);
  return result;
}

uint64_t sub_235EC5C58(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x235EC5C60);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_235EC5C64(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_235EC5C6C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InvitationDestinationEndpoint.CodingKeys()
{
  return &type metadata for InvitationDestinationEndpoint.CodingKeys;
}

unint64_t sub_235EC5C8C()
{
  unint64_t result;

  result = qword_25638C9B8;
  if (!qword_25638C9B8)
  {
    result = MEMORY[0x23B7E5230](&unk_235EE944C, &type metadata for InvitationDestinationEndpoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25638C9B8);
  }
  return result;
}

unint64_t sub_235EC5CD4()
{
  unint64_t result;

  result = qword_25638C9C0;
  if (!qword_25638C9C0)
  {
    result = MEMORY[0x23B7E5230](&unk_235EE93BC, &type metadata for InvitationDestinationEndpoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25638C9C0);
  }
  return result;
}

unint64_t sub_235EC5D1C()
{
  unint64_t result;

  result = qword_25638C9C8;
  if (!qword_25638C9C8)
  {
    result = MEMORY[0x23B7E5230](&unk_235EE93E4, &type metadata for InvitationDestinationEndpoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25638C9C8);
  }
  return result;
}

uint64_t sub_235EC5D60(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696C696261706163 && a2 == 0xEC00000073656974;
  if (v2 || (sub_235EE60D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEE00617461447265 || (sub_235EE60D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 6910581 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_235EE60D0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

double sub_235EC5EE0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v6;
  char v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  double result;

  if (*(_QWORD *)(a3 + 16) && (v6 = sub_235EA721C(a1, a2), (v7 & 1) != 0))
  {
    v8 = *(_QWORD *)(a3 + 56) + (v6 << 6);
    v9 = *(_QWORD *)(v8 + 8);
    v10 = *(_QWORD *)(v8 + 16);
    v11 = *(_QWORD *)(v8 + 24);
    v12 = *(_QWORD *)(v8 + 32);
    v13 = *(_BYTE *)(v8 + 40);
    v14 = *(_QWORD *)(v8 + 48);
    v15 = *(_QWORD *)(v8 + 56);
    *(_QWORD *)a4 = *(_QWORD *)v8;
    *(_QWORD *)(a4 + 8) = v9;
    *(_QWORD *)(a4 + 16) = v10;
    *(_QWORD *)(a4 + 24) = v11;
    *(_QWORD *)(a4 + 32) = v12;
    *(_BYTE *)(a4 + 40) = v13;
    *(_QWORD *)(a4 + 48) = v14;
    *(_QWORD *)(a4 + 56) = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    result = 0.0;
    *(_OWORD *)(a4 + 32) = 0u;
    *(_OWORD *)(a4 + 48) = 0u;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
  }
  return result;
}

unint64_t sub_235EC5F7C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  uint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25638BCF0);
  v2 = sub_235EE6034();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v21 = v2 + 64;
  swift_retain();
  v5 = (_QWORD *)(a1 + 104);
  while (1)
  {
    v22 = v4;
    v6 = *(v5 - 9);
    v7 = *(v5 - 8);
    v8 = *(v5 - 7);
    v9 = *(v5 - 6);
    v10 = *(v5 - 5);
    v23 = *((_OWORD *)v5 - 2);
    v11 = *((_BYTE *)v5 - 16);
    v13 = *(v5 - 1);
    v12 = *v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_235EA721C(v6, v7);
    if ((v15 & 1) != 0)
      break;
    *(_QWORD *)(v21 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v16 = (uint64_t *)(v3[6] + 16 * result);
    *v16 = v6;
    v16[1] = v7;
    v17 = v3[7] + (result << 6);
    *(_QWORD *)v17 = v8;
    *(_QWORD *)(v17 + 8) = v9;
    *(_QWORD *)(v17 + 16) = v10;
    *(_OWORD *)(v17 + 24) = v23;
    *(_BYTE *)(v17 + 40) = v11;
    *(_QWORD *)(v17 + 48) = v13;
    *(_QWORD *)(v17 + 56) = v12;
    v18 = v3[2];
    v19 = __OFADD__(v18, 1);
    v20 = v18 + 1;
    if (v19)
      goto LABEL_11;
    v5 += 10;
    v3[2] = v20;
    v4 = v22 - 1;
    if (v22 == 1)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t InvitationDestinationCache.__allocating_init(invitationDestinationMap:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v2 + 112) = a1;
  return v2;
}

uint64_t InvitationDestinationCache.init(invitationDestinationMap:)(uint64_t a1)
{
  uint64_t v1;

  swift_defaultActor_initialize();
  *(_QWORD *)(v1 + 112) = a1;
  return v1;
}

uint64_t InvitationDestinationCache.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t InvitationDestinationCache.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t InvitationDestinationCache.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t InvitationDestinationCache.addInvitationDestination(_:forDestination:serviceIdentifier:)(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;

  *(_QWORD *)(v6 + 152) = a5;
  *(_QWORD *)(v6 + 160) = v5;
  *(_QWORD *)(v6 + 136) = a3;
  *(_QWORD *)(v6 + 144) = a4;
  *(_QWORD *)(v6 + 128) = a2;
  v7 = a1[1];
  *(_OWORD *)(v6 + 16) = *a1;
  *(_OWORD *)(v6 + 32) = v7;
  v8 = a1[3];
  *(_OWORD *)(v6 + 48) = a1[2];
  *(_OWORD *)(v6 + 64) = v8;
  return swift_task_switch();
}

uint64_t sub_235EC61EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  char v13;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 160) + 112;
  swift_beginAccess();
  v2 = *(_QWORD *)v1;
  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    goto LABEL_5;
  v4 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = sub_235EA721C(v4, v3);
  if ((v6 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    v7 = sub_235EC5F7C(MEMORY[0x24BEE4AF8]);
    goto LABEL_6;
  }
  v7 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_6:
  v9 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 152);
  v11 = *(_QWORD *)(v0 + 128);
  v10 = *(_QWORD *)(v0 + 136);
  swift_bridgeObjectRetain();
  sub_235EC6784(v0 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_235EA7BBC((__int128 *)(v0 + 16), v11, v10, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v13 = swift_isUniquelyReferenced_nonNull_native();
  v15 = *(_QWORD *)v1;
  *(_QWORD *)v1 = 0x8000000000000000;
  sub_235EA7A58(v7, v9, v8, v13);
  *(_QWORD *)v1 = v15;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t InvitationDestinationCache.invitationDestination(for:serviceIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;

  v6[9] = a5;
  v6[10] = v5;
  v6[7] = a3;
  v6[8] = a4;
  v6[5] = a1;
  v6[6] = a2;
  return swift_task_switch();
}

uint64_t sub_235EC63AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  _OWORD *v12;

  v1 = *(_QWORD *)(v0 + 80);
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 112);
  if (*(_QWORD *)(v2 + 16))
  {
    v4 = *(_QWORD *)(v0 + 64);
    v3 = *(_QWORD *)(v0 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v5 = sub_235EA721C(v4, v3);
    if ((v6 & 1) != 0)
    {
      v8 = *(_QWORD *)(v0 + 48);
      v7 = *(_QWORD *)(v0 + 56);
      v9 = *(_QWORD *)(v0 + 40);
      v10 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_235EC5EE0(v8, v7, v10, v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v12 = *(_OWORD **)(v0 + 40);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v12[2] = 0u;
      v12[3] = 0u;
      *v12 = 0u;
      v12[1] = 0u;
    }
  }
  else
  {
    v11 = *(_OWORD **)(v0 + 40);
    v11[2] = 0u;
    v11[3] = 0u;
    *v11 = 0u;
    v11[1] = 0u;
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t InvitationDestinationCache.containsInvitationDestination(for:serviceIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[8] = a4;
  v5[9] = v4;
  v5[6] = a2;
  v5[7] = a3;
  v5[5] = a1;
  return swift_task_switch();
}

uint64_t sub_235EC64DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;

  v1 = *(_QWORD *)(v0 + 72);
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 112);
  if (!*(_QWORD *)(v2 + 16))
    goto LABEL_7;
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = sub_235EA721C(v4, v3);
  if ((v6 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  v7 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v7 + 16))
  {
LABEL_6:
    swift_bridgeObjectRelease();
LABEL_7:
    v11 = 0;
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(v11 & 1);
  }
  v9 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  sub_235EA721C(v9, v8);
  v11 = v10;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(v11 & 1);
}

uint64_t sub_235EC65D4(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;

  v12 = *v5;
  v13 = swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *(_QWORD *)v13 = v6;
  *(_QWORD *)(v13 + 8) = sub_235E8E458;
  *(_QWORD *)(v13 + 152) = a5;
  *(_QWORD *)(v13 + 160) = v12;
  *(_QWORD *)(v13 + 136) = a3;
  *(_QWORD *)(v13 + 144) = a4;
  *(_QWORD *)(v13 + 128) = a2;
  v14 = a1[3];
  *(_OWORD *)(v13 + 48) = a1[2];
  *(_OWORD *)(v13 + 64) = v14;
  v15 = a1[1];
  *(_OWORD *)(v13 + 16) = *a1;
  *(_OWORD *)(v13 + 32) = v15;
  return swift_task_switch();
}

uint64_t sub_235EC6670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t v12;
  _QWORD *v13;

  v12 = *v5;
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_235E8E5E8;
  v13[9] = a5;
  v13[10] = v12;
  v13[7] = a3;
  v13[8] = a4;
  v13[5] = a1;
  v13[6] = a2;
  return swift_task_switch();
}

uint64_t sub_235EC66FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v10;
  _QWORD *v11;

  v10 = *v4;
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_235EB10E8;
  v11[8] = a4;
  v11[9] = v10;
  v11[6] = a2;
  v11[7] = a3;
  v11[5] = a1;
  return swift_task_switch();
}

uint64_t sub_235EC6784(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t dispatch thunk of InvitationDestinationCaching.addInvitationDestination(_:forDestination:serviceIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a7 + 8)
                                                                                              + *(_QWORD *)(a7 + 8));
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_235E8E458;
  return v17(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t dispatch thunk of InvitationDestinationCaching.invitationDestination(for:serviceIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a7 + 16)
                                                                                              + *(_QWORD *)(a7 + 16));
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_235E8E458;
  return v17(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t dispatch thunk of InvitationDestinationCaching.containsInvitationDestination(for:serviceIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a6 + 24)
                                                                                     + *(_QWORD *)(a6 + 24));
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_235EB1620;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t type metadata accessor for InvitationDestinationCache()
{
  return objc_opt_self();
}

uint64_t method lookup function for InvitationDestinationCache()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InvitationDestinationCache.__allocating_init(invitationDestinationMap:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t InvitationDestinationGroup.destination.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InvitationDestinationGroup.preferredDestination.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(v1 + 16);
  v2 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  v6 = *(_QWORD *)(v1 + 48);
  v7 = *(_BYTE *)(v1 + 56);
  v8 = *(_QWORD *)(v1 + 64);
  v9 = *(_QWORD *)(v1 + 72);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_BYTE *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t InvitationDestinationGroup.additionalDestinations.getter()
{
  return swift_bridgeObjectRetain();
}

unint64_t InvitationDestinationGroup.description.getter()
{
  uint64_t v0;

  sub_235EE5FB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  InvitationDestination.description.getter();
  sub_235EE5D7C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_235EE5D7C();
  sub_235EE5D7C();
  swift_bridgeObjectRelease();
  sub_235EE5FB0();
  swift_bridgeObjectRelease();
  v0 = swift_bridgeObjectRetain();
  MEMORY[0x23B7E49E4](v0, &type metadata for InvitationDestination);
  sub_235EE5D7C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_235EE5D7C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0xD00000000000001DLL;
}

uint64_t destroy for InvitationDestinationGroup()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for InvitationDestinationGroup(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for InvitationDestinationGroup(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for InvitationDestinationGroup(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InvitationDestinationGroup(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InvitationDestinationGroup(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for InvitationDestinationGroup()
{
  return &type metadata for InvitationDestinationGroup;
}

uint64_t ASListener.activate()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 2040) = v0;
  return swift_task_switch();
}

uint64_t sub_235EC6FA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 2040);
  sub_235EC9660(v1 + 8, v0 + 2000);
  v2 = *(_QWORD *)(v0 + 2024);
  v3 = *(_QWORD *)(v0 + 2032);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 2000), v2);
  sub_235EC978C(v1, v0 + 64);
  v4 = (_OWORD *)swift_allocObject();
  v5 = *(_OWORD *)(v0 + 80);
  v4[1] = *(_OWORD *)(v0 + 64);
  v4[2] = v5;
  v4[3] = *(_OWORD *)(v0 + 96);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = &unk_25638CAE8;
  *(_QWORD *)(v6 + 24) = v4;
  v7 = swift_allocObject();
  *(_QWORD *)(v0 + 2048) = v7;
  *(_QWORD *)(v7 + 16) = &unk_25638CAF8;
  *(_QWORD *)(v7 + 24) = v6;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 2056) = v8;
  *v8 = v0;
  v8[1] = sub_235EC70F0;
  return TransportDispatching.register<A, B>(_:handler:)(101, (uint64_t)&unk_25638CB08, v7, v2, (uint64_t)&type metadata for SendFriendInviteTransportItem, MEMORY[0x24BEE1328], v3, (uint64_t)&protocol witness table for SendFriendInviteTransportItem);
}

uint64_t sub_235EC70F0()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_235EC7150()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 2040);
  __swift_destroy_boxed_opaque_existential_1(v0 + 2000);
  sub_235EC9660(v1 + 8, v0 + 1920);
  v2 = *(_QWORD *)(v0 + 1944);
  v3 = *(_QWORD *)(v0 + 1952);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 1920), v2);
  sub_235EC978C(v1, v0 + 160);
  v4 = (_OWORD *)swift_allocObject();
  v5 = *(_OWORD *)(v0 + 176);
  v4[1] = *(_OWORD *)(v0 + 160);
  v4[2] = v5;
  v4[3] = *(_OWORD *)(v0 + 192);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = &unk_25638CB18;
  *(_QWORD *)(v6 + 24) = v4;
  v7 = swift_allocObject();
  *(_QWORD *)(v0 + 2064) = v7;
  *(_QWORD *)(v7 + 16) = &unk_25638CB28;
  *(_QWORD *)(v7 + 24) = v6;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 2072) = v8;
  *v8 = v0;
  v8[1] = sub_235EC72A4;
  return TransportDispatching.register<A, B>(_:handler:)(102, (uint64_t)&unk_25638CB38, v7, v2, MEMORY[0x24BEE0D00], MEMORY[0x24BEE1328], v3, (uint64_t)&protocol witness table for String);
}

uint64_t sub_235EC72A4()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_235EC7304()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 2040);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1920);
  sub_235EC9660(v1 + 8, v0 + 1840);
  v2 = *(_QWORD *)(v0 + 1864);
  v3 = *(_QWORD *)(v0 + 1872);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 1840), v2);
  sub_235EC978C(v1, v0 + 256);
  v4 = (_OWORD *)swift_allocObject();
  v5 = *(_OWORD *)(v0 + 272);
  v4[1] = *(_OWORD *)(v0 + 256);
  v4[2] = v5;
  v4[3] = *(_OWORD *)(v0 + 288);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = &unk_25638CB48;
  *(_QWORD *)(v6 + 24) = v4;
  v7 = swift_allocObject();
  *(_QWORD *)(v0 + 2080) = v7;
  *(_QWORD *)(v7 + 16) = &unk_25638CB50;
  *(_QWORD *)(v7 + 24) = v6;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 2088) = v8;
  *v8 = v0;
  v8[1] = sub_235EC7458;
  return TransportDispatching.register<A, B>(_:handler:)(103, (uint64_t)&unk_25638CB58, v7, v2, MEMORY[0x24BEE0D00], MEMORY[0x24BEE1328], v3, (uint64_t)&protocol witness table for String);
}

uint64_t sub_235EC7458()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_235EC74B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 2040);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1840);
  sub_235EC9660(v1 + 8, v0 + 1760);
  v2 = *(_QWORD *)(v0 + 1784);
  v3 = *(_QWORD *)(v0 + 1792);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 1760), v2);
  sub_235EC978C(v1, v0 + 352);
  v4 = (_OWORD *)swift_allocObject();
  v5 = *(_OWORD *)(v0 + 368);
  v4[1] = *(_OWORD *)(v0 + 352);
  v4[2] = v5;
  v4[3] = *(_OWORD *)(v0 + 384);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = &unk_25638CB68;
  *(_QWORD *)(v6 + 24) = v4;
  v7 = swift_allocObject();
  *(_QWORD *)(v0 + 2096) = v7;
  *(_QWORD *)(v7 + 16) = &unk_25638CB70;
  *(_QWORD *)(v7 + 24) = v6;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 2104) = v8;
  *v8 = v0;
  v8[1] = sub_235EC760C;
  return TransportDispatching.register<A, B>(_:handler:)(104, (uint64_t)&unk_25638CB78, v7, v2, MEMORY[0x24BEE0D00], MEMORY[0x24BEE1328], v3, (uint64_t)&protocol witness table for String);
}

uint64_t sub_235EC760C()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_235EC766C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 2040);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1760);
  sub_235EC9660(v1 + 8, v0 + 1680);
  v2 = *(_QWORD *)(v0 + 1704);
  v3 = *(_QWORD *)(v0 + 1712);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 1680), v2);
  sub_235EC978C(v1, v0 + 448);
  v4 = (_OWORD *)swift_allocObject();
  v5 = *(_OWORD *)(v0 + 464);
  v4[1] = *(_OWORD *)(v0 + 448);
  v4[2] = v5;
  v4[3] = *(_OWORD *)(v0 + 480);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = &unk_25638CB88;
  *(_QWORD *)(v6 + 24) = v4;
  v7 = swift_allocObject();
  *(_QWORD *)(v0 + 2112) = v7;
  *(_QWORD *)(v7 + 16) = &unk_25638CB98;
  *(_QWORD *)(v7 + 24) = v6;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 2120) = v8;
  *v8 = v0;
  v8[1] = sub_235EC77C0;
  return TransportDispatching.register<A, B>(_:handler:)(202, (uint64_t)&unk_25638CBA8, v7, v2, (uint64_t)&type metadata for SetMuteEnabledTransportItem, MEMORY[0x24BEE1328], v3, (uint64_t)&protocol witness table for SetMuteEnabledTransportItem);
}

uint64_t sub_235EC77C0()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_235EC7820()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 2040);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1680);
  sub_235EC9660(v1 + 8, v0 + 1600);
  v2 = *(_QWORD *)(v0 + 1624);
  v3 = *(_QWORD *)(v0 + 1632);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 1600), v2);
  sub_235EC978C(v1, v0 + 544);
  v4 = (_OWORD *)swift_allocObject();
  v5 = *(_OWORD *)(v0 + 560);
  v4[1] = *(_OWORD *)(v0 + 544);
  v4[2] = v5;
  v4[3] = *(_OWORD *)(v0 + 576);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = &unk_25638CBB8;
  *(_QWORD *)(v6 + 24) = v4;
  v7 = swift_allocObject();
  *(_QWORD *)(v0 + 2128) = v7;
  *(_QWORD *)(v7 + 16) = &unk_25638CBC8;
  *(_QWORD *)(v7 + 24) = v6;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 2136) = v8;
  *v8 = v0;
  v8[1] = sub_235EC7974;
  return TransportDispatching.register<A, B>(_:handler:)(201, (uint64_t)&unk_25638CBD8, v7, v2, (uint64_t)&type metadata for SetActivityDataVisibleTransportItem, MEMORY[0x24BEE1328], v3, (uint64_t)&protocol witness table for SetActivityDataVisibleTransportItem);
}

uint64_t sub_235EC7974()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_235EC79D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 2040);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1600);
  sub_235EC9660(v1 + 8, v0 + 1520);
  v2 = *(_QWORD *)(v0 + 1544);
  v3 = *(_QWORD *)(v0 + 1552);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 1520), v2);
  sub_235EC978C(v1, v0 + 640);
  v4 = (_OWORD *)swift_allocObject();
  v5 = *(_OWORD *)(v0 + 656);
  v4[1] = *(_OWORD *)(v0 + 640);
  v4[2] = v5;
  v4[3] = *(_OWORD *)(v0 + 672);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = &unk_25638CBE8;
  *(_QWORD *)(v6 + 24) = v4;
  v7 = swift_allocObject();
  *(_QWORD *)(v0 + 2144) = v7;
  *(_QWORD *)(v7 + 16) = &unk_25638CBF0;
  *(_QWORD *)(v7 + 24) = v6;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 2152) = v8;
  *v8 = v0;
  v8[1] = sub_235EC7B28;
  return TransportDispatching.register<A, B>(_:handler:)(301, (uint64_t)&unk_25638CBF8, v7, v2, MEMORY[0x24BEE0D00], MEMORY[0x24BEE1328], v3, (uint64_t)&protocol witness table for String);
}

uint64_t sub_235EC7B28()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_235EC7B88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 2040);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1520);
  sub_235EC9660(v1 + 8, v0 + 1440);
  v2 = *(_QWORD *)(v0 + 1464);
  v3 = *(_QWORD *)(v0 + 1472);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 1440), v2);
  sub_235EC978C(v1, v0 + 736);
  v4 = (_OWORD *)swift_allocObject();
  v5 = *(_OWORD *)(v0 + 752);
  v4[1] = *(_OWORD *)(v0 + 736);
  v4[2] = v5;
  v4[3] = *(_OWORD *)(v0 + 768);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = &unk_25638CC08;
  *(_QWORD *)(v6 + 24) = v4;
  v7 = swift_allocObject();
  *(_QWORD *)(v0 + 2160) = v7;
  *(_QWORD *)(v7 + 16) = &unk_25638CC10;
  *(_QWORD *)(v7 + 24) = v6;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 2168) = v8;
  *v8 = v0;
  v8[1] = sub_235EC7CDC;
  return TransportDispatching.register<A, B>(_:handler:)(302, (uint64_t)&unk_25638CC18, v7, v2, MEMORY[0x24BEE0D00], MEMORY[0x24BEE1328], v3, (uint64_t)&protocol witness table for String);
}

uint64_t sub_235EC7CDC()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_235EC7D3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 2040);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1440);
  sub_235EC9660(v1 + 8, v0 + 1360);
  v2 = *(_QWORD *)(v0 + 1384);
  v3 = *(_QWORD *)(v0 + 1392);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 1360), v2);
  sub_235EC978C(v1, v0 + 832);
  v4 = (_OWORD *)swift_allocObject();
  v5 = *(_OWORD *)(v0 + 848);
  v4[1] = *(_OWORD *)(v0 + 832);
  v4[2] = v5;
  v4[3] = *(_OWORD *)(v0 + 864);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = &unk_25638CC28;
  *(_QWORD *)(v6 + 24) = v4;
  v7 = swift_allocObject();
  *(_QWORD *)(v0 + 2176) = v7;
  *(_QWORD *)(v7 + 16) = &unk_25638CC30;
  *(_QWORD *)(v7 + 24) = v6;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 2184) = v8;
  *v8 = v0;
  v8[1] = sub_235EC7E90;
  return TransportDispatching.register<A, B>(_:handler:)(303, (uint64_t)&unk_25638CC38, v7, v2, MEMORY[0x24BEE0D00], MEMORY[0x24BEE1328], v3, (uint64_t)&protocol witness table for String);
}

uint64_t sub_235EC7E90()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_235EC7EF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 2040);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1360);
  sub_235EC9660(v1 + 8, v0 + 1280);
  v2 = *(_QWORD *)(v0 + 1304);
  v3 = *(_QWORD *)(v0 + 1312);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 1280), v2);
  sub_235EC978C(v1, v0 + 928);
  v4 = (_OWORD *)swift_allocObject();
  v5 = *(_OWORD *)(v0 + 944);
  v4[1] = *(_OWORD *)(v0 + 928);
  v4[2] = v5;
  v4[3] = *(_OWORD *)(v0 + 960);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = &unk_25638CC48;
  *(_QWORD *)(v6 + 24) = v4;
  v7 = swift_allocObject();
  *(_QWORD *)(v0 + 2192) = v7;
  *(_QWORD *)(v7 + 16) = &unk_25638CC50;
  *(_QWORD *)(v7 + 24) = v6;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 2200) = v8;
  *v8 = v0;
  v8[1] = sub_235EC8044;
  return TransportDispatching.register<A, B>(_:handler:)(304, (uint64_t)&unk_25638CC58, v7, v2, MEMORY[0x24BEE0D00], MEMORY[0x24BEE1328], v3, (uint64_t)&protocol witness table for String);
}

uint64_t sub_235EC8044()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_235EC80A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 2040);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1280);
  sub_235EC9660(v1 + 8, v0 + 1200);
  v2 = *(_QWORD *)(v0 + 1224);
  v3 = *(_QWORD *)(v0 + 1232);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 1200), v2);
  sub_235EC978C(v1, v0 + 1024);
  v4 = (_OWORD *)swift_allocObject();
  v5 = *(_OWORD *)(v0 + 1040);
  v4[1] = *(_OWORD *)(v0 + 1024);
  v4[2] = v5;
  v4[3] = *(_OWORD *)(v0 + 1056);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = &unk_25638CC68;
  *(_QWORD *)(v6 + 24) = v4;
  v7 = swift_allocObject();
  *(_QWORD *)(v0 + 2208) = v7;
  *(_QWORD *)(v7 + 16) = &unk_25638CC78;
  *(_QWORD *)(v7 + 24) = v6;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 2216) = v8;
  *v8 = v0;
  v8[1] = sub_235EC81E8;
  return TransportDispatching.register<A>(_:handler:)(401, (uint64_t)&unk_25638CC88, v7, v2, MEMORY[0x24BEE1328], v3, (uint64_t)&protocol witness table for Bool);
}

uint64_t sub_235EC81E8()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_235EC8248()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 2040);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1200);
  sub_235EC9660(v1 + 8, v0 + 1120);
  v2 = *(_QWORD *)(v0 + 1144);
  v3 = *(_QWORD *)(v0 + 1152);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 1120), v2);
  sub_235EC978C(v1, v0 + 16);
  v4 = (_OWORD *)swift_allocObject();
  v5 = *(_OWORD *)(v0 + 32);
  v4[1] = *(_OWORD *)(v0 + 16);
  v4[2] = v5;
  v4[3] = *(_OWORD *)(v0 + 48);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = &unk_25638CC98;
  *(_QWORD *)(v6 + 24) = v4;
  v7 = swift_allocObject();
  *(_QWORD *)(v0 + 2224) = v7;
  *(_QWORD *)(v7 + 16) = &unk_25638CCA0;
  *(_QWORD *)(v7 + 24) = v6;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 2232) = v8;
  *v8 = v0;
  v8[1] = sub_235EC8388;
  return TransportDispatching.register<A>(_:handler:)(402, (uint64_t)&unk_25638CCA8, v7, v2, MEMORY[0x24BEE1328], v3, (uint64_t)&protocol witness table for Bool);
}

uint64_t sub_235EC8388()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_235EC83E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 2040);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1120);
  sub_235EC9660(v1 + 8, v0 + 1160);
  v2 = *(_QWORD *)(v0 + 1184);
  v3 = *(_QWORD *)(v0 + 1192);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 1160), v2);
  sub_235EC978C(v1, v0 + 976);
  v4 = (_OWORD *)swift_allocObject();
  v5 = *(_OWORD *)(v0 + 992);
  v4[1] = *(_OWORD *)(v0 + 976);
  v4[2] = v5;
  v4[3] = *(_OWORD *)(v0 + 1008);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = &unk_25638CCB8;
  *(_QWORD *)(v6 + 24) = v4;
  v7 = swift_allocObject();
  *(_QWORD *)(v0 + 2240) = v7;
  *(_QWORD *)(v7 + 16) = &unk_25638CCC8;
  *(_QWORD *)(v7 + 24) = v6;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 2248) = v8;
  *v8 = v0;
  v8[1] = sub_235EC853C;
  return TransportDispatching.register<A, B>(_:handler:)(403, (uint64_t)&unk_25638CCD8, v7, v2, MEMORY[0x24BEE1E88], MEMORY[0x24BEE1328], v3, (uint64_t)&protocol witness table for UInt);
}

uint64_t sub_235EC853C()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_235EC859C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 2040);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1160);
  sub_235EC9660(v1 + 8, v0 + 1240);
  v2 = *(_QWORD *)(v0 + 1264);
  v3 = *(_QWORD *)(v0 + 1272);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 1240), v2);
  sub_235EC978C(v1, v0 + 880);
  v4 = (_OWORD *)swift_allocObject();
  v5 = *(_OWORD *)(v0 + 896);
  v4[1] = *(_OWORD *)(v0 + 880);
  v4[2] = v5;
  v4[3] = *(_OWORD *)(v0 + 912);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = &unk_25638CCE8;
  *(_QWORD *)(v6 + 24) = v4;
  v7 = swift_allocObject();
  *(_QWORD *)(v0 + 2256) = v7;
  *(_QWORD *)(v7 + 16) = &unk_25638CCF0;
  *(_QWORD *)(v7 + 24) = v6;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 2264) = v8;
  *v8 = v0;
  v8[1] = sub_235EC86DC;
  return TransportDispatching.register<A>(_:handler:)(404, (uint64_t)&unk_25638CCF8, v7, v2, MEMORY[0x24BEE1328], v3, (uint64_t)&protocol witness table for Bool);
}

uint64_t sub_235EC86DC()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_235EC873C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 2040);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1240);
  sub_235EC9660(v1 + 8, v0 + 1320);
  v2 = *(_QWORD *)(v0 + 1344);
  v3 = *(_QWORD *)(v0 + 1352);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 1320), v2);
  sub_235EC978C(v1, v0 + 784);
  v4 = (_OWORD *)swift_allocObject();
  v5 = *(_OWORD *)(v0 + 800);
  v4[1] = *(_OWORD *)(v0 + 784);
  v4[2] = v5;
  v4[3] = *(_OWORD *)(v0 + 816);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = &unk_25638CD08;
  *(_QWORD *)(v6 + 24) = v4;
  v7 = swift_allocObject();
  *(_QWORD *)(v0 + 2272) = v7;
  *(_QWORD *)(v7 + 16) = &unk_25638CD10;
  *(_QWORD *)(v7 + 24) = v6;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 2280) = v8;
  *v8 = v0;
  v8[1] = sub_235EC887C;
  return TransportDispatching.register<A>(_:handler:)(405, (uint64_t)&unk_25638CD18, v7, v2, MEMORY[0x24BEE1328], v3, (uint64_t)&protocol witness table for Bool);
}

uint64_t sub_235EC887C()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_235EC88DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 2040);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1320);
  sub_235EC9660(v1 + 8, v0 + 1400);
  v2 = *(_QWORD *)(v0 + 1424);
  v3 = *(_QWORD *)(v0 + 1432);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 1400), v2);
  sub_235EC978C(v1, v0 + 688);
  v4 = (_OWORD *)swift_allocObject();
  v5 = *(_OWORD *)(v0 + 704);
  v4[1] = *(_OWORD *)(v0 + 688);
  v4[2] = v5;
  v4[3] = *(_OWORD *)(v0 + 720);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = &unk_25638CD28;
  *(_QWORD *)(v6 + 24) = v4;
  v7 = swift_allocObject();
  *(_QWORD *)(v0 + 2288) = v7;
  *(_QWORD *)(v7 + 16) = &unk_25638CD38;
  *(_QWORD *)(v7 + 24) = v6;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 2296) = v8;
  *v8 = v0;
  v8[1] = sub_235EC8A30;
  return TransportDispatching.register<A, B>(_:handler:)(501, (uint64_t)&unk_25638CD48, v7, v2, MEMORY[0x24BEE4008], MEMORY[0x24BEE1328], v3, (uint64_t)&protocol witness table for Int64);
}

uint64_t sub_235EC8A30()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_235EC8A90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  __int128 v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 2040);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1400);
  sub_235EC9660(v1 + 8, v0 + 1480);
  v2 = *(_QWORD *)(v0 + 1504);
  v3 = *(_QWORD *)(v0 + 1512);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 1480), v2);
  sub_235EC978C(v1, v0 + 592);
  v4 = (_OWORD *)swift_allocObject();
  v5 = *(_OWORD *)(v0 + 608);
  v4[1] = *(_OWORD *)(v0 + 592);
  v4[2] = v5;
  v4[3] = *(_OWORD *)(v0 + 624);
  v6 = swift_allocObject();
  *(_QWORD *)(v0 + 2304) = v6;
  *(_QWORD *)(v6 + 16) = &unk_25638CD58;
  *(_QWORD *)(v6 + 24) = v4;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 2312) = v7;
  v8 = sub_235E8EC68(0, &qword_25429CDE0);
  *v7 = v0;
  v7[1] = sub_235EC8BC4;
  return TransportDispatching.register<A>(_:handler:)(601, (uint64_t)&unk_25638CD68, v6, v2, v8, v3, (uint64_t)&protocol witness table for ASCodableFriendList);
}

uint64_t sub_235EC8BC4()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_235EC8C24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  __int128 v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 2040);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1480);
  sub_235EC9660(v1 + 8, v0 + 1560);
  v2 = *(_QWORD *)(v0 + 1584);
  v3 = *(_QWORD *)(v0 + 1592);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 1560), v2);
  sub_235EC978C(v1, v0 + 496);
  v4 = (_OWORD *)swift_allocObject();
  v5 = *(_OWORD *)(v0 + 512);
  v4[1] = *(_OWORD *)(v0 + 496);
  v4[2] = v5;
  v4[3] = *(_OWORD *)(v0 + 528);
  v6 = swift_allocObject();
  *(_QWORD *)(v0 + 2320) = v6;
  *(_QWORD *)(v6 + 16) = &unk_25638CD78;
  *(_QWORD *)(v6 + 24) = v4;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 2328) = v7;
  v8 = sub_235E8EC68(0, &qword_25429CCA8);
  *v7 = v0;
  v7[1] = sub_235EC8D6C;
  return TransportDispatching.register<A, B>(_:handler:)(602, (uint64_t)&unk_25638CD88, v6, v2, MEMORY[0x24BEE0D00], v8, v3, (uint64_t)&protocol witness table for String);
}

uint64_t sub_235EC8D6C()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_235EC8DCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 2040);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1560);
  sub_235EC9660(v1 + 8, v0 + 1640);
  v2 = *(_QWORD *)(v0 + 1664);
  v3 = *(_QWORD *)(v0 + 1672);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 1640), v2);
  sub_235EC978C(v1, v0 + 400);
  v4 = (_OWORD *)swift_allocObject();
  v5 = *(_OWORD *)(v0 + 416);
  v4[1] = *(_OWORD *)(v0 + 400);
  v4[2] = v5;
  v4[3] = *(_OWORD *)(v0 + 432);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = &unk_25638CD98;
  *(_QWORD *)(v6 + 24) = v4;
  v7 = swift_allocObject();
  *(_QWORD *)(v0 + 2336) = v7;
  *(_QWORD *)(v7 + 16) = &unk_25638CDA0;
  *(_QWORD *)(v7 + 24) = v6;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 2344) = v8;
  *v8 = v0;
  v8[1] = sub_235EC8F20;
  return TransportDispatching.register<A, B>(_:handler:)(603, (uint64_t)&unk_25638CDA8, v7, v2, MEMORY[0x24BEE0D00], MEMORY[0x24BEE1328], v3, (uint64_t)&protocol witness table for String);
}

uint64_t sub_235EC8F20()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_235EC8F80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 2040);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1640);
  sub_235EC9660(v1 + 8, v0 + 1720);
  v2 = *(_QWORD *)(v0 + 1744);
  v3 = *(_QWORD *)(v0 + 1752);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 1720), v2);
  sub_235EC978C(v1, v0 + 304);
  v4 = (_OWORD *)swift_allocObject();
  v5 = *(_OWORD *)(v0 + 320);
  v4[1] = *(_OWORD *)(v0 + 304);
  v4[2] = v5;
  v4[3] = *(_OWORD *)(v0 + 336);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = &unk_25638CDB8;
  *(_QWORD *)(v6 + 24) = v4;
  v7 = swift_allocObject();
  *(_QWORD *)(v0 + 2352) = v7;
  *(_QWORD *)(v7 + 16) = &unk_25638CDC0;
  *(_QWORD *)(v7 + 24) = v6;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 2360) = v8;
  *v8 = v0;
  v8[1] = sub_235EC90C0;
  return TransportDispatching.register<A>(_:handler:)(604, (uint64_t)&unk_25638CDC8, v7, v2, MEMORY[0x24BEE1328], v3, (uint64_t)&protocol witness table for Bool);
}

uint64_t sub_235EC90C0()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_235EC9120()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 2040);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1720);
  sub_235EC9660(v1 + 8, v0 + 1800);
  v2 = *(_QWORD *)(v0 + 1824);
  v3 = *(_QWORD *)(v0 + 1832);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 1800), v2);
  sub_235EC978C(v1, v0 + 208);
  v4 = (_OWORD *)swift_allocObject();
  v5 = *(_OWORD *)(v0 + 224);
  v4[1] = *(_OWORD *)(v0 + 208);
  v4[2] = v5;
  v4[3] = *(_OWORD *)(v0 + 240);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = &unk_25638CDD8;
  *(_QWORD *)(v6 + 24) = v4;
  v7 = swift_allocObject();
  *(_QWORD *)(v0 + 2368) = v7;
  *(_QWORD *)(v7 + 16) = &unk_25638CDE8;
  *(_QWORD *)(v7 + 24) = v6;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 2376) = v8;
  v9 = sub_235E8EC68(0, &qword_25429CCB0);
  *v8 = v0;
  v8[1] = sub_235EC928C;
  return TransportDispatching.register<A, B>(_:handler:)(701, (uint64_t)&unk_25638CDF8, v7, v2, v9, MEMORY[0x24BEE1328], v3, (uint64_t)&protocol witness table for ASUserNotificationResponse);
}

uint64_t sub_235EC928C()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_235EC92EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 2040);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1800);
  sub_235EC9660(v1 + 8, v0 + 1880);
  v2 = *(_QWORD *)(v0 + 1904);
  v3 = *(_QWORD *)(v0 + 1912);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 1880), v2);
  sub_235EC978C(v1, v0 + 112);
  v4 = (_OWORD *)swift_allocObject();
  v5 = *(_OWORD *)(v0 + 128);
  v4[1] = *(_OWORD *)(v0 + 112);
  v4[2] = v5;
  v4[3] = *(_OWORD *)(v0 + 144);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = &unk_25638CE08;
  *(_QWORD *)(v6 + 24) = v4;
  v7 = swift_allocObject();
  *(_QWORD *)(v0 + 2384) = v7;
  *(_QWORD *)(v7 + 16) = &unk_25638CE18;
  *(_QWORD *)(v7 + 24) = v6;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 2392) = v8;
  *v8 = v0;
  v8[1] = sub_235EC942C;
  return TransportDispatching.register<A>(_:handler:)(801, (uint64_t)&unk_25638CE28, v7, v2, MEMORY[0x24BEE1768], v3, (uint64_t)&protocol witness table for Int);
}

uint64_t sub_235EC942C()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_235EC948C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 2040);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1880);
  sub_235EC9660(v1 + 8, v0 + 1960);
  v2 = *(_QWORD *)(v0 + 1984);
  v3 = *(_QWORD *)(v0 + 1992);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 1960), v2);
  sub_235EC978C(v1, v0 + 1072);
  v4 = (_OWORD *)swift_allocObject();
  v5 = *(_OWORD *)(v0 + 1088);
  v4[1] = *(_OWORD *)(v0 + 1072);
  v4[2] = v5;
  v4[3] = *(_OWORD *)(v0 + 1104);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = &unk_25638CE38;
  *(_QWORD *)(v6 + 24) = v4;
  v7 = swift_allocObject();
  *(_QWORD *)(v0 + 2400) = v7;
  *(_QWORD *)(v7 + 16) = &unk_25638CE40;
  *(_QWORD *)(v7 + 24) = v6;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 2408) = v8;
  *v8 = v0;
  v8[1] = sub_235EC95D0;
  return TransportDispatching.register<A>(_:handler:)(901, (uint64_t)&unk_25638CE48, v7, v2, MEMORY[0x24BEE1328], v3, (uint64_t)&protocol witness table for Bool);
}

uint64_t sub_235EC95D0()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_235EC9630()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 1960);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EC9660(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_235EC96A4(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)a1;
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(v1 + 32) = v2;
  *(_QWORD *)(v1 + 48) = v3;
  *(_QWORD *)(v1 + 56) = v4;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 64) = v5;
  *v5 = v1;
  v5[1] = sub_235EC9708;
  return sub_235EC984C(v1 + 16);
}

uint64_t sub_235EC9708(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 72) = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(_QWORD))(v4 + 8))(a1 & 1);
}

uint64_t sub_235EC977C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_235EC978C(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  id v9;

  v3 = *(void **)a1;
  *(_QWORD *)a2 = *(_QWORD *)a1;
  v4 = a2 + 8;
  v5 = a1 + 8;
  v6 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 32) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  v9 = v3;
  v8(v4, v5, v7);
  return a2;
}

uint64_t sub_235EC97F8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_235EBA664;
  return sub_235EC96A4(a1);
}

uint64_t sub_235EC984C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 120) = v1;
  *(_OWORD *)(v2 + 128) = *(_OWORD *)a1;
  *(_QWORD *)(v2 + 144) = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(v2 + 152) = *(_OWORD *)(a1 + 24);
  *(_QWORD *)(v2 + 168) = *(_QWORD *)(a1 + 40);
  return swift_task_switch();
}

uint64_t sub_235EC9884()
{
  _QWORD *v0;
  void **v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  if (qword_25429CF60 != -1)
    swift_once();
  v1 = (void **)v0[15];
  v2 = sub_235EE5CF8();
  __swift_project_value_buffer(v2, (uint64_t)qword_25429CF70);
  sub_235E9105C(0xD00000000000005CLL, 0x8000000235EEBF80, 0xD000000000000014, 0x8000000235EEC340);
  v3 = *v1;
  v4 = sub_235EE5D34();
  v0[22] = v4;
  v5 = sub_235EE5D34();
  v0[23] = v5;
  v6 = sub_235EE5D34();
  v0[24] = v6;
  v0[7] = v0 + 26;
  v0[2] = v0;
  v0[3] = sub_235EC9A14;
  v7 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v8 = v0 + 10;
  v8[1] = 0x40000000;
  v8[2] = sub_235ECE248;
  v8[3] = &block_descriptor_442;
  v8[4] = v7;
  objc_msgSend(v3, sel_sendInviteRequestToDestination_callerID_serviceIdentifier_completion_, v4, v5, v6, v8);
  return swift_continuation_await();
}

uint64_t sub_235EC9A14()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 200) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_235EC9A74()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 184);
  v2 = *(void **)(v0 + 176);
  v3 = *(unsigned __int8 *)(v0 + 208);

  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
}

uint64_t sub_235EC9AC4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = *(void **)(v0 + 192);
  v3 = *(void **)(v0 + 176);
  v2 = *(void **)(v0 + 184);
  swift_willThrow();

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_235EC9B1C(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_235ECE4B0;
  return v6(a1);
}

uint64_t sub_235EC9B7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_235EBA664;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_25638CAF0 + dword_25638CAF0))(a1, v4);
}

uint64_t sub_235EC9BE8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  *(_QWORD *)(v3 + 16) = a1;
  v7 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 24) = v5;
  *v5 = v3;
  v5[1] = sub_235ECE4A8;
  return v7(a2);
}

uint64_t sub_235EC9C4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;

  v6 = *(int **)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_235E8E458;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_25638CB00 + dword_25638CB00))(a1, a2, v6);
}

uint64_t sub_235EC9CCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_235ECE498;
  v7[16] = a2;
  v7[17] = a3;
  v7[15] = a1;
  return swift_task_switch();
}

uint64_t sub_235EC9D44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_235EBA664;
  return sub_235EC9CCC(a1, a2, v2 + 16);
}

uint64_t sub_235EC9DA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  return swift_task_switch();
}

uint64_t sub_235EC9DC4()
{
  _QWORD *v0;
  void **v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  if (qword_25429CF60 != -1)
    swift_once();
  v1 = (void **)v0[17];
  v2 = sub_235EE5CF8();
  __swift_project_value_buffer(v2, (uint64_t)qword_25429CF70);
  sub_235E9105C(0xD00000000000005CLL, 0x8000000235EEBF80, 0xD000000000000019, 0x8000000235EEC320);
  v3 = *v1;
  v4 = sub_235EE5D34();
  v0[18] = v4;
  v0[7] = v0 + 20;
  v0[2] = v0;
  v0[3] = sub_235EC9F00;
  v5 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v6 = v0 + 10;
  v6[1] = 0x40000000;
  v6[2] = sub_235ECE248;
  v6[3] = &block_descriptor_434;
  v6[4] = v5;
  objc_msgSend(v3, sel_acceptInviteRequestFromFriendWithUUID_completion_, v4, v6);
  return swift_continuation_await();
}

uint64_t sub_235EC9F00()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 152) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_235EC9F60(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)a3 + *a3);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_235ECE4B0;
  return v8(a1, a2);
}

uint64_t sub_235EC9FCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;

  v6 = *(int **)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_235EBA664;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_25638CB20 + dword_25638CB20))(a1, a2, v6);
}

uint64_t sub_235ECA048(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  *(_QWORD *)(v3 + 16) = a1;
  v4 = *a2;
  v5 = a2[1];
  v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)a3 + *a3);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 24) = v6;
  *v6 = v3;
  v6[1] = sub_235ECE4A8;
  return v8(v4, v5);
}

uint64_t sub_235ECA0B4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;

  v6 = *(int **)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_235E8E458;
  return ((uint64_t (*)(uint64_t, uint64_t *, int *))((char *)&dword_25638CB30 + dword_25638CB30))(a1, a2, v6);
}

uint64_t sub_235ECA134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_235ECE498;
  v7[16] = a2;
  v7[17] = a3;
  v7[15] = a1;
  return swift_task_switch();
}

uint64_t sub_235ECA1AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_235EBA664;
  return sub_235ECA134(a1, a2, v2 + 16);
}

uint64_t sub_235ECA210(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  return swift_task_switch();
}

uint64_t sub_235ECA22C()
{
  _QWORD *v0;
  void **v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  if (qword_25429CF60 != -1)
    swift_once();
  v1 = (void **)v0[17];
  v2 = sub_235EE5CF8();
  __swift_project_value_buffer(v2, (uint64_t)qword_25429CF70);
  sub_235E9105C(0xD00000000000005CLL, 0x8000000235EEBF80, 0xD000000000000019, 0x8000000235EEC300);
  v3 = *v1;
  v4 = sub_235EE5D34();
  v0[18] = v4;
  v0[7] = v0 + 20;
  v0[2] = v0;
  v0[3] = sub_235EC9F00;
  v5 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v6 = v0 + 10;
  v6[1] = 0x40000000;
  v6[2] = sub_235ECE248;
  v6[3] = &block_descriptor_426;
  v6[4] = v5;
  objc_msgSend(v3, sel_sendWithdrawInviteRequestToFriendWithUUID_completion_, v4, v6);
  return swift_continuation_await();
}

uint64_t sub_235ECA368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_235ECE498;
  v7[16] = a2;
  v7[17] = a3;
  v7[15] = a1;
  return swift_task_switch();
}

uint64_t sub_235ECA3E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_235EBA664;
  return sub_235ECA368(a1, a2, v2 + 16);
}

uint64_t sub_235ECA444(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  return swift_task_switch();
}

uint64_t sub_235ECA460()
{
  _QWORD *v0;
  void **v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  if (qword_25429CF60 != -1)
    swift_once();
  v1 = (void **)v0[17];
  v2 = sub_235EE5CF8();
  __swift_project_value_buffer(v2, (uint64_t)qword_25429CF70);
  sub_235E9105C(0xD00000000000005CLL, 0x8000000235EEBF80, 0xD000000000000019, 0x8000000235EEC2E0);
  v3 = *v1;
  v4 = sub_235EE5D34();
  v0[18] = v4;
  v0[7] = v0 + 20;
  v0[2] = v0;
  v0[3] = sub_235EC9F00;
  v5 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v6 = v0 + 10;
  v6[1] = 0x40000000;
  v6[2] = sub_235ECE248;
  v6[3] = &block_descriptor_422;
  v6[4] = v5;
  objc_msgSend(v3, sel_ignoreInviteRequestFromFriendWithUUID_completion_, v4, v6);
  return swift_continuation_await();
}

uint64_t sub_235ECA59C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  *(_BYTE *)(v2 + 16) = *(_BYTE *)a1;
  *(_QWORD *)(v2 + 24) = v4;
  *(_QWORD *)(v2 + 32) = v5;
  v6 = swift_task_alloc();
  *(_QWORD *)(v2 + 40) = v6;
  *(_QWORD *)v6 = v2;
  *(_QWORD *)(v6 + 8) = sub_235ECA61C;
  *(_BYTE *)(v6 + 161) = *(_BYTE *)(v2 + 16);
  v7 = *(_QWORD *)(v2 + 24);
  v8 = *(_QWORD *)(v2 + 32);
  *(_QWORD *)(v6 + 120) = a2;
  *(_QWORD *)(v6 + 128) = v7;
  *(_QWORD *)(v6 + 136) = v8;
  return swift_task_switch();
}

uint64_t sub_235ECA61C(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 48) = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(_QWORD))(v4 + 8))(a1 & 1);
}

uint64_t sub_235ECA694(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_235EBA664;
  return sub_235ECA59C(a1, v1 + 16);
}

uint64_t sub_235ECA6E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v2 + 161) = *(_BYTE *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(v2 + 120) = v1;
  *(_QWORD *)(v2 + 128) = v3;
  *(_QWORD *)(v2 + 136) = v4;
  return swift_task_switch();
}

uint64_t sub_235ECA710()
{
  uint64_t v0;
  uint64_t v1;
  void **v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  if (qword_25429CF60 != -1)
    swift_once();
  v1 = *(unsigned __int8 *)(v0 + 161);
  v2 = *(void ***)(v0 + 120);
  v3 = sub_235EE5CF8();
  __swift_project_value_buffer(v3, (uint64_t)qword_25429CF70);
  sub_235E9105C(0xD00000000000005CLL, 0x8000000235EEBF80, 0xD000000000000012, 0x8000000235EEC2C0);
  v4 = *v2;
  v5 = sub_235EE5D34();
  *(_QWORD *)(v0 + 144) = v5;
  *(_QWORD *)(v0 + 56) = v0 + 160;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_235EC9F00;
  v6 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
  v7 = (_QWORD *)(v0 + 80);
  v7[1] = 0x40000000;
  v7[2] = sub_235ECE248;
  v7[3] = &block_descriptor_418;
  v7[4] = v6;
  objc_msgSend(v4, sel_setMuteEnabled_forFriendWithUUID_completion_, v1, v5, v7);
  return swift_continuation_await();
}

uint64_t sub_235ECA85C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_235EBA664;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_25638CB90 + dword_25638CB90))(a1, v4);
}

uint64_t sub_235ECA8C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;

  v6 = *(int **)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_235E8E458;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_25638CBA0 + dword_25638CBA0))(a1, a2, v6);
}

uint64_t sub_235ECA948(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  *(_BYTE *)(v2 + 16) = *(_BYTE *)a1;
  *(_QWORD *)(v2 + 24) = v4;
  *(_QWORD *)(v2 + 32) = v5;
  v6 = swift_task_alloc();
  *(_QWORD *)(v2 + 40) = v6;
  *(_QWORD *)v6 = v2;
  *(_QWORD *)(v6 + 8) = sub_235ECA9C8;
  *(_BYTE *)(v6 + 161) = *(_BYTE *)(v2 + 16);
  v7 = *(_QWORD *)(v2 + 24);
  v8 = *(_QWORD *)(v2 + 32);
  *(_QWORD *)(v6 + 120) = a2;
  *(_QWORD *)(v6 + 128) = v7;
  *(_QWORD *)(v6 + 136) = v8;
  return swift_task_switch();
}

uint64_t sub_235ECA9C8(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 48) = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(_QWORD))(v4 + 8))(a1 & 1);
}

uint64_t sub_235ECAA40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_235EB947C;
  return sub_235ECA948(a1, v1 + 16);
}

uint64_t sub_235ECAA94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v2 + 161) = *(_BYTE *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(v2 + 120) = v1;
  *(_QWORD *)(v2 + 128) = v3;
  *(_QWORD *)(v2 + 136) = v4;
  return swift_task_switch();
}

uint64_t sub_235ECAABC()
{
  uint64_t v0;
  uint64_t v1;
  void **v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  if (qword_25429CF60 != -1)
    swift_once();
  v1 = *(unsigned __int8 *)(v0 + 161);
  v2 = *(void ***)(v0 + 120);
  v3 = sub_235EE5CF8();
  __swift_project_value_buffer(v3, (uint64_t)qword_25429CF70);
  sub_235E9105C(0xD00000000000005CLL, 0x8000000235EEBF80, 0xD00000000000001ALL, 0x8000000235EEC2A0);
  v4 = *v2;
  v5 = sub_235EE5D34();
  *(_QWORD *)(v0 + 144) = v5;
  *(_QWORD *)(v0 + 56) = v0 + 160;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_235ECAC08;
  v6 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
  v7 = (_QWORD *)(v0 + 80);
  v7[1] = 0x40000000;
  v7[2] = sub_235ECE248;
  v7[3] = &block_descriptor_410;
  v7[4] = v6;
  objc_msgSend(v4, sel_setActivityDataVisible_toFriendWithUUID_completion_, v1, v5, v7);
  return swift_continuation_await();
}

uint64_t sub_235ECAC08()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 152) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_235ECAC68()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(v0 + 160);

  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_235ECACA4()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 144);
  swift_willThrow();

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_235ECACE8(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_235ECAD48;
  return v6(a1);
}

uint64_t sub_235ECAD48(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v4 + 8))();
  else
    return (*(uint64_t (**)(_QWORD))(v4 + 8))(a1 & 1);
}

uint64_t sub_235ECADB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_235EB947C;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_25638CBC0 + dword_25638CBC0))(a1, v4);
}

uint64_t sub_235ECAE1C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  *(_QWORD *)(v3 + 16) = a1;
  v7 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 24) = v5;
  *v5 = v3;
  v5[1] = sub_235ECAE80;
  return v7(a2);
}

uint64_t sub_235ECAE80(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (!v1)
    **(_BYTE **)(v4 + 16) = a1;
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_235ECAEDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;

  v6 = *(int **)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_235E8E5E8;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_25638CBD0 + dword_25638CBD0))(a1, a2, v6);
}

uint64_t sub_235ECAF5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_235ECAFD0;
  v7[16] = a2;
  v7[17] = a3;
  v7[15] = a1;
  return swift_task_switch();
}

uint64_t sub_235ECAFD0(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  swift_task_dealloc();
  if (v1)
    v5 = 0;
  else
    v5 = a1 & 1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t sub_235ECB030(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_235EBA664;
  return sub_235ECAF5C(a1, a2, v2 + 16);
}

uint64_t sub_235ECB094(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  return swift_task_switch();
}

uint64_t sub_235ECB0B0()
{
  _QWORD *v0;
  void **v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  if (qword_25429CF60 != -1)
    swift_once();
  v1 = (void **)v0[17];
  v2 = sub_235EE5CF8();
  __swift_project_value_buffer(v2, (uint64_t)qword_25429CF70);
  sub_235E9105C(0xD00000000000005CLL, 0x8000000235EEBF80, 0xD00000000000001ALL, 0x8000000235EEC280);
  v3 = *v1;
  v4 = sub_235EE5D34();
  v0[18] = v4;
  v0[7] = v0 + 20;
  v0[2] = v0;
  v0[3] = sub_235EC9F00;
  v5 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v6 = v0 + 10;
  v6[1] = 0x40000000;
  v6[2] = sub_235ECE248;
  v6[3] = &block_descriptor_402;
  v6[4] = v5;
  objc_msgSend(v3, sel_sendCompetitionRequestToFriendWithUUID_completion_, v4, v6);
  return swift_continuation_await();
}

uint64_t sub_235ECB1EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_235ECE498;
  v7[16] = a2;
  v7[17] = a3;
  v7[15] = a1;
  return swift_task_switch();
}

uint64_t sub_235ECB264(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_235EBA664;
  return sub_235ECB1EC(a1, a2, v2 + 16);
}

uint64_t sub_235ECB2C8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_235ECB2EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  return swift_task_switch();
}

uint64_t sub_235ECB308()
{
  _QWORD *v0;
  void **v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  if (qword_25429CF60 != -1)
    swift_once();
  v1 = (void **)v0[17];
  v2 = sub_235EE5CF8();
  __swift_project_value_buffer(v2, (uint64_t)qword_25429CF70);
  sub_235E9105C(0xD00000000000005CLL, 0x8000000235EEBF80, 0xD00000000000001ELL, 0x8000000235EEC260);
  v3 = *v1;
  v4 = sub_235EE5D34();
  v0[18] = v4;
  v0[7] = v0 + 20;
  v0[2] = v0;
  v0[3] = sub_235EC9F00;
  v5 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v6 = v0 + 10;
  v6[1] = 0x40000000;
  v6[2] = sub_235ECE248;
  v6[3] = &block_descriptor_398;
  v6[4] = v5;
  objc_msgSend(v3, sel_acceptCompetitionRequestFromFriendWithUUID_completion_, v4, v6);
  return swift_continuation_await();
}

uint64_t sub_235ECB444(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_235ECE498;
  v7[16] = a2;
  v7[17] = a3;
  v7[15] = a1;
  return swift_task_switch();
}

uint64_t sub_235ECB4BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_235EBA664;
  return sub_235ECB444(a1, a2, v2 + 16);
}

uint64_t sub_235ECB520(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  return swift_task_switch();
}

uint64_t sub_235ECB53C()
{
  _QWORD *v0;
  void **v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  if (qword_25429CF60 != -1)
    swift_once();
  v1 = (void **)v0[17];
  v2 = sub_235EE5CF8();
  __swift_project_value_buffer(v2, (uint64_t)qword_25429CF70);
  sub_235E9105C(0xD00000000000005CLL, 0x8000000235EEBF80, 0xD00000000000001ELL, 0x8000000235EEC240);
  v3 = *v1;
  v4 = sub_235EE5D34();
  v0[18] = v4;
  v0[7] = v0 + 20;
  v0[2] = v0;
  v0[3] = sub_235EC9F00;
  v5 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v6 = v0 + 10;
  v6[1] = 0x40000000;
  v6[2] = sub_235ECE248;
  v6[3] = &block_descriptor_394;
  v6[4] = v5;
  objc_msgSend(v3, sel_ignoreCompetitionRequestFromFriendWithUUID_completion_, v4, v6);
  return swift_continuation_await();
}

uint64_t sub_235ECB678(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_235ECE498;
  v7[16] = a2;
  v7[17] = a3;
  v7[15] = a1;
  return swift_task_switch();
}

uint64_t sub_235ECB6F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_235EBA664;
  return sub_235ECB678(a1, a2, v2 + 16);
}

uint64_t sub_235ECB754(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  return swift_task_switch();
}

uint64_t sub_235ECB770()
{
  _QWORD *v0;
  void **v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  if (qword_25429CF60 != -1)
    swift_once();
  v1 = (void **)v0[17];
  v2 = sub_235EE5CF8();
  __swift_project_value_buffer(v2, (uint64_t)qword_25429CF70);
  sub_235E9105C(0xD00000000000005CLL, 0x8000000235EEBF80, 0xD00000000000001ALL, 0x8000000235EEC220);
  v3 = *v1;
  v4 = sub_235EE5D34();
  v0[18] = v4;
  v0[7] = v0 + 20;
  v0[2] = v0;
  v0[3] = sub_235EC9F00;
  v5 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v6 = v0 + 10;
  v6[1] = 0x40000000;
  v6[2] = sub_235ECE248;
  v6[3] = &block_descriptor_390;
  v6[4] = v5;
  objc_msgSend(v3, sel_completeCompetitionWithFriendWithUUID_completion_, v4, v6);
  return swift_continuation_await();
}

uint64_t sub_235ECB8AC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_235ECE498;
  v3[15] = a1;
  return swift_task_switch();
}

uint64_t sub_235ECB910()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_235EBA664;
  return sub_235ECB8AC(v0 + 16);
}

uint64_t sub_235ECB95C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 120) = v0;
  return swift_task_switch();
}

uint64_t sub_235ECB974()
{
  _QWORD *v0;
  void **v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;

  if (qword_25429CF60 != -1)
    swift_once();
  v1 = (void **)v0[15];
  v2 = sub_235EE5CF8();
  __swift_project_value_buffer(v2, (uint64_t)qword_25429CF70);
  sub_235E9105C(0xD00000000000005CLL, 0x8000000235EEBF80, 0xD000000000000012, 0x8000000235EEC200);
  v3 = *v1;
  v0[7] = v0 + 17;
  v0[2] = v0;
  v0[3] = sub_235ECBA8C;
  v4 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v5 = v0 + 10;
  v5[1] = 0x40000000;
  v5[2] = sub_235ECE248;
  v5[3] = &block_descriptor_386;
  v5[4] = v4;
  objc_msgSend(v3, sel_pushActivityDataToAllFriendsWithCompletion_, v5);
  return swift_continuation_await();
}

uint64_t sub_235ECBA8C()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 128) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_235ECBAEC(int *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))((char *)a1 + *a1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_235ECE4B0;
  return v4();
}

uint64_t sub_235ECBB44()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;

  v2 = *(int **)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_235EBA664;
  return ((uint64_t (*)(int *))((char *)&dword_25638CC70 + dword_25638CC70))(v2);
}

uint64_t sub_235ECBBA8(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_235ECE4A8;
  return v5();
}

uint64_t sub_235ECBC00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_235E8E458;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_25638CC80 + dword_25638CC80))(a1, v4);
}

uint64_t sub_235ECBC70(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_235ECE498;
  v3[15] = a1;
  return swift_task_switch();
}

uint64_t sub_235ECBCD4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_235EBA664;
  return sub_235ECBC70(v0 + 16);
}

uint64_t sub_235ECBD20()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 120) = v0;
  return swift_task_switch();
}

uint64_t sub_235ECBD38()
{
  _QWORD *v0;
  void **v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;

  if (qword_25429CF60 != -1)
    swift_once();
  v1 = (void **)v0[15];
  v2 = sub_235EE5CF8();
  __swift_project_value_buffer(v2, (uint64_t)qword_25429CF70);
  sub_235E9105C(0xD00000000000005CLL, 0x8000000235EEBF80, 0xD00000000000001CLL, 0x8000000235EEC1E0);
  v3 = *v1;
  v0[7] = v0 + 17;
  v0[2] = v0;
  v0[3] = sub_235ECBE50;
  v4 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v5 = v0 + 10;
  v5[1] = 0x40000000;
  v5[2] = sub_235ECE248;
  v5[3] = &block_descriptor_378;
  v5[4] = v4;
  objc_msgSend(v3, sel_fetchAllDataWithCompletion_, v5);
  return swift_continuation_await();
}

uint64_t sub_235ECBE50()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 128) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_235ECBEB0()
{
  uint64_t v0;

  swift_willThrow();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_235ECBEF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_235ECE498;
  v5[15] = a1;
  v5[16] = a2;
  return swift_task_switch();
}

uint64_t sub_235ECBF58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_235EBA664;
  return sub_235ECBEF0(a1, v1 + 16);
}

uint64_t sub_235ECBFAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 120) = a1;
  *(_QWORD *)(v2 + 128) = v1;
  return swift_task_switch();
}

uint64_t sub_235ECBFC4()
{
  _QWORD *v0;
  uint64_t v1;
  void **v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  _QWORD *v6;

  if (qword_25429CF60 != -1)
    swift_once();
  v1 = v0[15];
  v2 = (void **)v0[16];
  v3 = sub_235EE5CF8();
  __swift_project_value_buffer(v3, (uint64_t)qword_25429CF70);
  sub_235E9105C(0xD00000000000005CLL, 0x8000000235EEBF80, 0xD00000000000002BLL, 0x8000000235EEC1B0);
  v4 = *v2;
  v0[7] = v0 + 18;
  v0[2] = v0;
  v0[3] = sub_235ECC0E8;
  v5 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v6 = v0 + 10;
  v6[1] = 0x40000000;
  v6[2] = sub_235ECE248;
  v6[3] = &block_descriptor_374;
  v6[4] = v5;
  objc_msgSend(v4, sel_fetchAllDataIfTimeSinceLastFetchIsGreaterThan_completion_, v1, v6);
  return swift_continuation_await();
}

uint64_t sub_235ECC0E8()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 136) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_235ECC148()
{
  uint64_t v0;

  swift_willThrow();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_235ECC188(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_235EBA664;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_25638CCC0 + dword_25638CCC0))(a1, v4);
}

uint64_t sub_235ECC1F4(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  *(_QWORD *)(v3 + 16) = a1;
  v4 = *a2;
  v7 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 24) = v5;
  *v5 = v3;
  v5[1] = sub_235ECE4A8;
  return v7(v4);
}

uint64_t sub_235ECC258(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;

  v6 = *(int **)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_235E8E458;
  return ((uint64_t (*)(uint64_t, uint64_t *, int *))((char *)&dword_25638CCD0 + dword_25638CCD0))(a1, a2, v6);
}

uint64_t sub_235ECC2D8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_235ECE498;
  v3[15] = a1;
  return swift_task_switch();
}

uint64_t sub_235ECC33C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_235EBA664;
  return sub_235ECC2D8(v0 + 16);
}

uint64_t sub_235ECC388()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 120) = v0;
  return swift_task_switch();
}

uint64_t sub_235ECC3A0()
{
  _QWORD *v0;
  void **v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;

  if (qword_25429CF60 != -1)
    swift_once();
  v1 = (void **)v0[15];
  v2 = sub_235EE5CF8();
  __swift_project_value_buffer(v2, (uint64_t)qword_25429CF70);
  sub_235E9105C(0xD00000000000005CLL, 0x8000000235EEBF80, 0xD000000000000019, 0x8000000235EEC190);
  v3 = *v1;
  v0[7] = v0 + 17;
  v0[2] = v0;
  v0[3] = sub_235ECBE50;
  v4 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v5 = v0 + 10;
  v5[1] = 0x40000000;
  v5[2] = sub_235ECE2C8;
  v5[3] = &block_descriptor_366;
  v5[4] = v4;
  objc_msgSend(v3, sel_cloudKitAccountStatusWithCompletion_, v5);
  return swift_continuation_await();
}

uint64_t sub_235ECC4B8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_235ECE498;
  v3[15] = a1;
  return swift_task_switch();
}

uint64_t sub_235ECC51C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_235EBA664;
  return sub_235ECC4B8(v0 + 16);
}

uint64_t sub_235ECC568()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 120) = v0;
  return swift_task_switch();
}

uint64_t sub_235ECC580()
{
  _QWORD *v0;
  void **v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;

  if (qword_25429CF60 != -1)
    swift_once();
  v1 = (void **)v0[15];
  v2 = sub_235EE5CF8();
  __swift_project_value_buffer(v2, (uint64_t)qword_25429CF70);
  sub_235E9105C(0xD00000000000005CLL, 0x8000000235EEBF80, 0xD000000000000013, 0x8000000235EEC170);
  v3 = *v1;
  v0[7] = v0 + 17;
  v0[2] = v0;
  v0[3] = sub_235ECBA8C;
  v4 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v5 = v0 + 10;
  v5[1] = 0x40000000;
  v5[2] = sub_235ECE248;
  v5[3] = &block_descriptor_362;
  v5[4] = v4;
  objc_msgSend(v3, sel_expireChangeTokenWithCompletion_, v5);
  return swift_continuation_await();
}

uint64_t sub_235ECC698(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_235ECE498;
  v5[15] = a1;
  v5[16] = a2;
  return swift_task_switch();
}

uint64_t sub_235ECC700(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_235EBA664;
  return sub_235ECC698(a1, v1 + 16);
}

uint64_t sub_235ECC754(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 120) = a1;
  *(_QWORD *)(v2 + 128) = v1;
  return swift_task_switch();
}

uint64_t sub_235ECC76C()
{
  _QWORD *v0;
  void **v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  _QWORD *v6;

  if (qword_25429CF60 != -1)
    swift_once();
  v1 = (void **)v0[16];
  v2 = sub_235EE5CF8();
  __swift_project_value_buffer(v2, (uint64_t)qword_25429CF70);
  sub_235E9105C(0xD00000000000005CLL, 0x8000000235EEBF80, 0xD000000000000030, 0x8000000235EEC110);
  v3 = sub_235EE6148();
  v0[17] = v3;
  v4 = *v1;
  v0[7] = v0 + 19;
  v0[2] = v0;
  v0[3] = sub_235ECC8A0;
  v5 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v6 = v0 + 10;
  v6[1] = 0x40000000;
  v6[2] = sub_235ECE2C8;
  v6[3] = &block_descriptor_358;
  v6[4] = v5;
  objc_msgSend(v4, sel_fetchAreMultipleDevicesSharingDataForSnapshotIndex_withCompletion_, v3, v6);
  return swift_continuation_await();
}

uint64_t sub_235ECC8A0()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 144) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_235ECC900()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(v0 + 152);

  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_235ECC93C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 136);
  swift_willThrow();

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_235ECC980(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_235EBA664;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_25638CD30 + dword_25638CD30))(a1, v4);
}

uint64_t sub_235ECC9EC(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;

  v6 = *(int **)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_235E8E458;
  return ((uint64_t (*)(uint64_t, uint64_t *, int *))((char *)&dword_25638CD40 + dword_25638CD40))(a1, a2, v6);
}

uint64_t sub_235ECCA6C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_235ECE49C;
  v3[17] = a1;
  return swift_task_switch();
}

uint64_t sub_235ECCAD0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_235EBA664;
  return sub_235ECCA6C(v0 + 16);
}

uint64_t sub_235ECCB1C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 136) = v0;
  return swift_task_switch();
}

uint64_t sub_235ECCB34()
{
  _QWORD *v0;
  void **v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;

  if (qword_25429CF60 != -1)
    swift_once();
  v1 = (void **)v0[17];
  v2 = sub_235EE5CF8();
  __swift_project_value_buffer(v2, (uint64_t)qword_25429CF70);
  sub_235E9105C(0xD00000000000005CLL, 0x8000000235EEBF80, 0x6E656972466C6C61, 0xEC00000029287364);
  v3 = *v1;
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_235ECCC4C;
  v4 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v5 = v0 + 10;
  v5[1] = 0x40000000;
  v5[2] = sub_235ECE34C;
  v5[3] = &block_descriptor_350;
  v5[4] = v4;
  objc_msgSend(v3, sel_allFriendsWithCompletion_, v5);
  return swift_continuation_await();
}

uint64_t sub_235ECCC4C()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 144) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_235ECCCAC()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 120));
}

uint64_t sub_235ECCCBC()
{
  uint64_t v0;

  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235ECCCF8(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_235ECE4AC;
  return v5();
}

uint64_t sub_235ECCD50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_235E8E458;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_25638CD60 + dword_25638CD60))(a1, v4);
}

uint64_t sub_235ECCDC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_235ECE49C;
  v7[18] = a2;
  v7[19] = a3;
  v7[17] = a1;
  return swift_task_switch();
}

uint64_t sub_235ECCE38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_235EBA664;
  return sub_235ECCDC0(a1, a2, v2 + 16);
}

uint64_t sub_235ECCE9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[18] = a2;
  v3[19] = v2;
  v3[17] = a1;
  return swift_task_switch();
}

uint64_t sub_235ECCEB8()
{
  _QWORD *v0;
  void **v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  if (qword_25429CF60 != -1)
    swift_once();
  v1 = (void **)v0[19];
  v2 = sub_235EE5CF8();
  __swift_project_value_buffer(v2, (uint64_t)qword_25429CF70);
  sub_235E9105C(0xD00000000000005CLL, 0x8000000235EEBF80, 0xD000000000000016, 0x8000000235EEC090);
  v3 = *v1;
  v4 = sub_235EE5D34();
  v0[20] = v4;
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_235ECCFF4;
  v5 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v6 = v0 + 10;
  v6[1] = 0x40000000;
  v6[2] = sub_235ECE34C;
  v6[3] = &block_descriptor_344;
  v6[4] = v5;
  objc_msgSend(v3, sel_friendWithRemoteUUID_completion_, v4, v6);
  return swift_continuation_await();
}

uint64_t sub_235ECCFF4()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 168) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_235ECD054()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 120);

  if (v1)
  {
    v2 = objc_msgSend(v1, sel_codableFriendIncludingCloudKitFields_, 1);

  }
  else
  {
    v2 = 0;
  }
  return (*(uint64_t (**)(id))(v0 + 8))(v2);
}

uint64_t sub_235ECD0C0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 160);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235ECD100(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  *(_QWORD *)(v3 + 16) = a1;
  v4 = *a2;
  v5 = a2[1];
  v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)a3 + *a3);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 24) = v6;
  *v6 = v3;
  v6[1] = sub_235ECD16C;
  return v8(v4, v5);
}

uint64_t sub_235ECD16C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (!v1)
    **(_QWORD **)(v4 + 16) = a1;
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_235ECD1C8(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;

  v6 = *(int **)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_235E8E458;
  return ((uint64_t (*)(uint64_t, uint64_t *, int *))((char *)&dword_25638CD80 + dword_25638CD80))(a1, a2, v6);
}

uint64_t sub_235ECD248(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_235ECE498;
  v7[16] = a2;
  v7[17] = a3;
  v7[15] = a1;
  return swift_task_switch();
}

uint64_t sub_235ECD2C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_235EBA664;
  return sub_235ECD248(a1, a2, v2 + 16);
}

uint64_t sub_235ECD324(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  return swift_task_switch();
}

uint64_t sub_235ECD340()
{
  _QWORD *v0;
  void **v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  if (qword_25429CF60 != -1)
    swift_once();
  v1 = (void **)v0[17];
  v2 = sub_235EE5CF8();
  __swift_project_value_buffer(v2, (uint64_t)qword_25429CF70);
  sub_235E9105C(0xD00000000000005CLL, 0x8000000235EEBF80, 0xD000000000000017, 0x8000000235EEC070);
  v3 = *v1;
  v4 = sub_235EE5D34();
  v0[18] = v4;
  v0[7] = v0 + 20;
  v0[2] = v0;
  v0[3] = sub_235ECAC08;
  v5 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v6 = v0 + 10;
  v6[1] = 0x40000000;
  v6[2] = sub_235ECE248;
  v6[3] = &block_descriptor_338;
  v6[4] = v5;
  objc_msgSend(v3, sel_removeFriendWithUUID_completion_, v4, v6);
  return swift_continuation_await();
}

uint64_t sub_235ECD47C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_235ECE498;
  v3[15] = a1;
  return swift_task_switch();
}

uint64_t sub_235ECD4E0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_235EBA664;
  return sub_235ECD47C(v0 + 16);
}

uint64_t sub_235ECD52C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 120) = v0;
  return swift_task_switch();
}

uint64_t sub_235ECD544()
{
  _QWORD *v0;
  void **v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;

  if (qword_25429CF60 != -1)
    swift_once();
  v1 = (void **)v0[15];
  v2 = sub_235EE5CF8();
  __swift_project_value_buffer(v2, (uint64_t)qword_25429CF70);
  sub_235E9105C(0xD00000000000005CLL, 0x8000000235EEBF80, 0xD000000000000012, 0x8000000235EEC050);
  v3 = *v1;
  v0[7] = v0 + 17;
  v0[2] = v0;
  v0[3] = sub_235ECBA8C;
  v4 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v5 = v0 + 10;
  v5[1] = 0x40000000;
  v5[2] = sub_235ECE248;
  v5[3] = &block_descriptor_334;
  v5[4] = v4;
  objc_msgSend(v3, sel_clearFriendListWithCompletion_, v5);
  return swift_continuation_await();
}

uint64_t sub_235ECD65C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_235ECE498;
  v5[15] = a1;
  v5[16] = a2;
  return swift_task_switch();
}

uint64_t sub_235ECD6C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_235EBA664;
  return sub_235ECD65C(a1, v1 + 16);
}

uint64_t sub_235ECD718(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 120) = a1;
  *(_QWORD *)(v2 + 128) = v1;
  return swift_task_switch();
}

uint64_t sub_235ECD730()
{
  _QWORD *v0;
  uint64_t v1;
  void **v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  _QWORD *v6;

  if (qword_25429CF60 != -1)
    swift_once();
  v1 = v0[15];
  v2 = (void **)v0[16];
  v3 = sub_235EE5CF8();
  __swift_project_value_buffer(v3, (uint64_t)qword_25429CF70);
  sub_235E9105C(0xD00000000000005CLL, 0x8000000235EEBF80, 0xD00000000000001ELL, 0x8000000235EEC030);
  v4 = *v2;
  v0[7] = v0 + 18;
  v0[2] = v0;
  v0[3] = sub_235ECD854;
  v5 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v6 = v0 + 10;
  v6[1] = 0x40000000;
  v6[2] = sub_235ECE248;
  v6[3] = &block_descriptor_330;
  v6[4] = v5;
  objc_msgSend(v4, sel_handleNotificationResponse_completion_, v1, v6);
  return swift_continuation_await();
}

uint64_t sub_235ECD854()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 136) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_235ECD8B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_235EBA664;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_25638CDE0 + dword_25638CDE0))(a1, v4);
}

uint64_t sub_235ECD920(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;

  v6 = *(int **)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_235E8E458;
  return ((uint64_t (*)(uint64_t, uint64_t *, int *))((char *)&dword_25638CDF0 + dword_25638CDF0))(a1, a2, v6);
}

uint64_t sub_235ECD9A0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_235ECDA00;
  v3[17] = a1;
  return swift_task_switch();
}

uint64_t sub_235ECDA00(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t sub_235ECDA58()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_235EB947C;
  return sub_235ECD9A0(v0 + 16);
}

uint64_t sub_235ECDAA4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 136) = v0;
  return swift_task_switch();
}

uint64_t sub_235ECDABC()
{
  _QWORD *v0;
  void **v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;

  if (qword_25429CF60 != -1)
    swift_once();
  v1 = (void **)v0[17];
  v2 = sub_235EE5CF8();
  __swift_project_value_buffer(v2, (uint64_t)qword_25429CF70);
  sub_235E9105C(0xD00000000000005CLL, 0x8000000235EEBF80, 0x6567646142707061, 0xEF2928746E756F43);
  v3 = *v1;
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_235ECDBD8;
  v4 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v5 = v0 + 10;
  v5[1] = 0x40000000;
  v5[2] = sub_235ECE34C;
  v5[3] = &block_descriptor_322;
  v5[4] = v4;
  objc_msgSend(v3, sel_queryAppBadgeCountWithCompletion_, v5);
  return swift_continuation_await();
}

uint64_t sub_235ECDBD8()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 144) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_235ECDC38()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 120);
  if (v1)
  {
    v2 = objc_msgSend(*(id *)(v0 + 120), sel_integerValue);

  }
  else
  {
    v2 = 0;
  }
  return (*(uint64_t (**)(id))(v0 + 8))(v2);
}

uint64_t sub_235ECDC90(int *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))((char *)a1 + *a1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_235ECDCE8;
  return v4();
}

uint64_t sub_235ECDCE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
  {
    v5 = a1;
    v6 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v5, v6);
}

uint64_t sub_235ECDD40()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;

  v2 = *(int **)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_235EA8694;
  return ((uint64_t (*)(int *))((char *)&dword_25638CE10 + dword_25638CE10))(v2);
}

uint64_t sub_235ECDDA4(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_235ECDDFC;
  return v5();
}

uint64_t sub_235ECDDFC(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *v3;
  v7 = *v3;
  swift_task_dealloc();
  if (!v2)
  {
    v8 = *(_QWORD *)(v6 + 16);
    *(_QWORD *)v8 = a1;
    *(_BYTE *)(v8 + 8) = a2 & 1;
  }
  return (*(uint64_t (**)(void))(v7 + 8))();
}

uint64_t sub_235ECDE64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_235E8E458;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_25638CE20 + dword_25638CE20))(a1, v4);
}

uint64_t sub_235ECDED4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_235ECE498;
  v3[15] = a1;
  return swift_task_switch();
}

uint64_t sub_235ECDF38()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_235EBA664;
  return sub_235ECDED4(v0 + 16);
}

uint64_t destroy for ASListener(id *a1)
{
  uint64_t v1;

  v1 = (uint64_t)(a1 + 1);

  return __swift_destroy_boxed_opaque_existential_1(v1);
}

uint64_t initializeWithCopy for ASListener(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  id v9;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = a1 + 8;
  v5 = a2 + 8;
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  v9 = v3;
  v8(v4, v5, v7);
  return a1;
}

void **assignWithCopy for ASListener(void **a1, void **a2)
{
  void *v3;
  uint64_t *v4;
  void *v5;
  uint64_t *v6;
  id v7;

  v4 = (uint64_t *)(a2 + 1);
  v3 = *a2;
  v5 = *a1;
  *a1 = *a2;
  v6 = (uint64_t *)(a1 + 1);
  v7 = v3;

  __swift_assign_boxed_opaque_existential_1(v6, v4);
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ASListener(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t storeEnumTagSinglePayload for ASListener(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_235ECE118()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 120) = v0;
  return swift_task_switch();
}

uint64_t sub_235ECE130()
{
  _QWORD *v0;
  void **v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;

  if (qword_25429CF60 != -1)
    swift_once();
  v1 = (void **)v0[15];
  v2 = sub_235EE5CF8();
  __swift_project_value_buffer(v2, (uint64_t)qword_25429CF70);
  sub_235E9105C(0xD00000000000005CLL, 0x8000000235EEBF80, 0xD000000000000016, 0x8000000235EEBFE0);
  v3 = *v1;
  v0[7] = v0 + 17;
  v0[2] = v0;
  v0[3] = sub_235ECBA8C;
  v4 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v5 = v0 + 10;
  v5[1] = 0x40000000;
  v5[2] = sub_235ECE248;
  v5[3] = &block_descriptor_2;
  v5[4] = v4;
  objc_msgSend(v3, sel_pushFakeActivityDataToAllFriendsWithCompletion_, v5);
  return swift_continuation_await();
}

uint64_t sub_235ECE248(uint64_t a1, char a2, void *a3)
{
  _QWORD *v4;
  id v5;

  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25638BF90);
    swift_allocError();
    *v4 = a3;
    v5 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    **(_BYTE **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 64) + 40) = a2;
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_235ECE2C8(uint64_t a1, char a2, char a3, void *a4)
{
  _QWORD *v5;
  id v6;
  _BYTE *v8;

  if (a4)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25638BF90);
    swift_allocError();
    *v5 = a4;
    v6 = a4;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    v8 = *(_BYTE **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 64) + 40);
    *v8 = a2;
    v8[1] = a3;
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_235ECE350(uint64_t a1, void *a2, char a3, void *a4)
{
  _QWORD *v5;
  id v6;
  uint64_t v8;
  id v9;

  if (a4)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25638BF90);
    swift_allocError();
    *v5 = a4;
    v6 = a4;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    v8 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 64) + 40);
    *(_QWORD *)v8 = a2;
    *(_BYTE *)(v8 + 8) = a3;
    v9 = a2;
    return swift_continuation_throwingResume();
  }
}

uint64_t Array<A>.activitySharingTransportData()(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v9;

  swift_bridgeObjectRetain();
  CodableObjectArray.init(value:)((uint64_t *)&v9);
  v3 = v9;
  v6 = type metadata accessor for CodableObjectArray(0, a2, v4, v5);
  MEMORY[0x23B7E5230](&protocol conformance descriptor for CodableObjectArray<A>, v6);
  MEMORY[0x23B7E5230](&protocol conformance descriptor for CodableObjectArray<A>, v6);
  v7 = TransportSerializable<>.activitySharingTransportData()();

  return v7;
}

uint64_t Array<A>.init(activitySharingTransportData:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v11;

  v7 = type metadata accessor for CodableObjectArray(0, a3, a3, a4);
  sub_235E9083C(a1, a2);
  MEMORY[0x23B7E5230](&protocol conformance descriptor for CodableObjectArray<A>, v7);
  MEMORY[0x23B7E5230](&protocol conformance descriptor for CodableObjectArray<A>, v7);
  v8 = v7;
  TransportSerializable<>.init(activitySharingTransportData:)(a1, a2, v7, (uint64_t)&v11);
  if (v4)
  {
    sub_235E90940(a1, a2);
  }
  else
  {
    v9 = v11;
    if (v11)
    {
      v8 = CodableObjectArray.value.getter();
      sub_235E90940(a1, a2);

    }
    else
    {
      sub_235E90940(a1, a2);
      return 0;
    }
  }
  return v8;
}

uint64_t sub_235ECE67C(uint64_t a1)
{
  uint64_t *v1;

  return Array<A>.activitySharingTransportData()(*v1, *(_QWORD *)(a1 + 16));
}

uint64_t sub_235ECE69C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t result;

  result = Array<A>.init(activitySharingTransportData:)(a1, a2, *(_QWORD *)(a3 + 16), a4);
  if (!v5)
    *a5 = result;
  return result;
}

uint64_t static CloudDeviceConstants.cloudDevicesUserDefaultsKey.getter()
{
  return 0x76654464756F6C43;
}

uint64_t static CloudDeviceConstants.iOSVersionForMigration.getter()
{
  return 808335409;
}

uint64_t static CloudDeviceConstants.watchOSVersionForMigration.getter()
{
  return 808333617;
}

uint64_t static CloudDeviceConstants.validAgeInDays.getter()
{
  return 30;
}

ValueMetadata *type metadata accessor for CloudDeviceConstants()
{
  return &type metadata for CloudDeviceConstants;
}

uint64_t SecureCloudWithdrawRequestProtobuf.date.setter(double a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = type metadata accessor for SecureCloudWithdrawRequestProtobuf();
  v4 = v1 + *(int *)(result + 20);
  *(double *)v4 = a1;
  *(_BYTE *)(v4 + 8) = 0;
  return result;
}

uint64_t type metadata accessor for SecureCloudWithdrawRequestProtobuf()
{
  uint64_t result;

  result = qword_25638D050;
  if (!qword_25638D050)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t SecureCloudWithdrawRequestProtobuf.handshakeToken.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for SecureCloudWithdrawRequestProtobuf() + 24));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

double SecureCloudWithdrawRequestProtobuf.date.getter()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  v1 = v0 + *(int *)(type metadata accessor for SecureCloudWithdrawRequestProtobuf() + 20);
  result = *(double *)v1;
  if (*(_BYTE *)(v1 + 8))
    return 0.0;
  return result;
}

uint64_t SecureCloudWithdrawRequestProtobuf.handshakeToken.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SecureCloudWithdrawRequestProtobuf() + 24));
  if (v1[1])
    v2 = *v1;
  else
    v2 = 0;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t (*SecureCloudWithdrawRequestProtobuf.date.modify(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudWithdrawRequestProtobuf() + 20);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = v1 + v3;
  v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8))
    v5 = 0.0;
  *(double *)a1 = v5;
  return sub_235E950C4;
}

BOOL SecureCloudWithdrawRequestProtobuf.hasDate.getter()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + *(int *)(type metadata accessor for SecureCloudWithdrawRequestProtobuf() + 20) + 8) & 1) == 0;
}

Swift::Void __swiftcall SecureCloudWithdrawRequestProtobuf.clearDate()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(int *)(type metadata accessor for SecureCloudWithdrawRequestProtobuf() + 20);
  *(_QWORD *)v1 = 0;
  *(_BYTE *)(v1 + 8) = 1;
}

uint64_t sub_235ECE908@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SecureCloudWithdrawRequestProtobuf() + 24));
  v4 = v3[1];
  if (v4)
  {
    v5 = *v3;
    v6 = v4;
  }
  else
  {
    v5 = 0;
    v6 = 0xE000000000000000;
  }
  *a2 = v5;
  a2[1] = v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_235ECE958(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(a2 + *(int *)(type metadata accessor for SecureCloudWithdrawRequestProtobuf() + 24));
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *v4 = v3;
  v4[1] = v2;
  return result;
}

uint64_t (*SecureCloudWithdrawRequestProtobuf.handshakeToken.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudWithdrawRequestProtobuf() + 24);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v1 + v3);
  v5 = v4[1];
  if (v5)
  {
    v6 = *v4;
    v7 = v5;
  }
  else
  {
    v6 = 0;
    v7 = 0xE000000000000000;
  }
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_235E92300;
}

BOOL SecureCloudWithdrawRequestProtobuf.hasHandshakeToken.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudWithdrawRequestProtobuf() + 24) + 8) != 0;
}

Swift::Void __swiftcall SecureCloudWithdrawRequestProtobuf.clearHandshakeToken()()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudWithdrawRequestProtobuf() + 24));
  swift_bridgeObjectRelease();
  *v1 = 0;
  v1[1] = 0;
}

uint64_t SecureCloudWithdrawRequestProtobuf.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_235EE5B90();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t SecureCloudWithdrawRequestProtobuf.unknownFields.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_235EE5B90();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*SecureCloudWithdrawRequestProtobuf.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t SecureCloudWithdrawRequestProtobuf.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  _QWORD *v4;

  sub_235EE5B84();
  result = type metadata accessor for SecureCloudWithdrawRequestProtobuf();
  v3 = a1 + *(int *)(result + 20);
  *(_QWORD *)v3 = 0;
  *(_BYTE *)(v3 + 8) = 1;
  v4 = (_QWORD *)(a1 + *(int *)(result + 24));
  *v4 = 0;
  v4[1] = 0;
  return result;
}

unint64_t static SecureCloudWithdrawRequestProtobuf.protoMessageName.getter()
{
  return 0xD000000000000022;
}

uint64_t sub_235ECEB54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_235EE5CD4();
  __swift_allocate_value_buffer(v0, qword_25638CFD0);
  __swift_project_value_buffer(v0, (uint64_t)qword_25638CFD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25638B600);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638B608);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_235EE7AF0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "date";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_235EE5CBC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "handshakeToken";
  *((_QWORD *)v11 + 1) = 14;
  v11[16] = 2;
  v10();
  return sub_235EE5CC8();
}

uint64_t static SecureCloudWithdrawRequestProtobuf._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_25638B530 != -1)
    swift_once();
  v2 = sub_235EE5CD4();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_25638CFD0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t SecureCloudWithdrawRequestProtobuf.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  while (1)
  {
    result = sub_235EE5BD8();
    if (v0 || (v2 & 1) != 0)
      break;
    if (result == 2)
    {
      type metadata accessor for SecureCloudWithdrawRequestProtobuf();
      sub_235EE5C08();
    }
    else if (result == 1)
    {
      type metadata accessor for SecureCloudWithdrawRequestProtobuf();
      sub_235EE5BFC();
    }
    v0 = 0;
  }
  return result;
}

uint64_t SecureCloudWithdrawRequestProtobuf.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for SecureCloudWithdrawRequestProtobuf();
  if ((*(_BYTE *)(v0 + *(int *)(v2 + 20) + 8) & 1) != 0 || (result = sub_235EE5C8C(), !v1))
  {
    if (!*(_QWORD *)(v0 + *(int *)(v2 + 24) + 8))
      return sub_235EE5B78();
    result = sub_235EE5C98();
    if (!v1)
      return sub_235EE5B78();
  }
  return result;
}

uint64_t SecureCloudWithdrawRequestProtobuf.hashValue.getter()
{
  sub_235EE6154();
  type metadata accessor for SecureCloudWithdrawRequestProtobuf();
  sub_235E930EC(&qword_25638CFE8, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudWithdrawRequestProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudWithdrawRequestProtobuf);
  sub_235EE5D1C();
  return sub_235EE616C();
}

uint64_t sub_235ECEF18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  result = sub_235EE5B84();
  v5 = *(int *)(a1 + 24);
  v6 = a2 + *(int *)(a1 + 20);
  *(_QWORD *)v6 = 0;
  *(_BYTE *)(v6 + 8) = 1;
  v7 = (_QWORD *)(a2 + v5);
  *v7 = 0;
  v7[1] = 0;
  return result;
}

unint64_t sub_235ECEF58()
{
  return 0xD000000000000022;
}

uint64_t sub_235ECEF74()
{
  return SecureCloudWithdrawRequestProtobuf.decodeMessage<A>(decoder:)();
}

uint64_t sub_235ECEF88()
{
  return SecureCloudWithdrawRequestProtobuf.traverse<A>(visitor:)();
}

uint64_t sub_235ECEF9C()
{
  sub_235E930EC(&qword_25638D090, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudWithdrawRequestProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudWithdrawRequestProtobuf);
  return sub_235EE5BC0();
}

uint64_t sub_235ECEFEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_25638B530 != -1)
    swift_once();
  v2 = sub_235EE5CD4();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_25638CFD0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_235ECF05C()
{
  sub_235E930EC(&qword_25638B940, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudWithdrawRequestProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudWithdrawRequestProtobuf);
  return sub_235EE5C50();
}

uint64_t sub_235ECF09C()
{
  sub_235E930EC(&qword_25638B940, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudWithdrawRequestProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudWithdrawRequestProtobuf);
  return sub_235EE5C5C();
}

uint64_t _s21ActivitySharingClient34SecureCloudWithdrawRequestProtobufV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  double *v13;
  char v14;
  double *v15;
  int v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  char v23;
  void (*v24)(char *, uint64_t, uint64_t);
  void (*v25)(char *, uint64_t);
  uint64_t v27;

  v4 = sub_235EE5B90();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v27 - v9;
  v11 = type metadata accessor for SecureCloudWithdrawRequestProtobuf();
  v12 = *(int *)(v11 + 20);
  v13 = (double *)(a1 + v12);
  v14 = *(_BYTE *)(a1 + v12 + 8);
  v15 = (double *)(a2 + v12);
  v16 = *(unsigned __int8 *)(a2 + v12 + 8);
  if ((v14 & 1) != 0)
  {
    if (!v16)
      goto LABEL_16;
  }
  else
  {
    if (*v13 != *v15)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_16;
  }
  v17 = *(int *)(v11 + 24);
  v18 = (_QWORD *)(a1 + v17);
  v19 = *(_QWORD *)(a1 + v17 + 8);
  v20 = (_QWORD *)(a2 + v17);
  v21 = v20[1];
  if (!v19)
  {
    if (!v21)
    {
LABEL_17:
      v24 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v24(v10, a1, v4);
      v24(v8, a2, v4);
      sub_235E930EC(&qword_25638B5F8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v23 = sub_235EE5D28();
      v25 = *(void (**)(char *, uint64_t))(v5 + 8);
      v25(v8, v4);
      v25(v10, v4);
      return v23 & 1;
    }
LABEL_16:
    v23 = 0;
    return v23 & 1;
  }
  if (!v21)
    goto LABEL_16;
  if (*v18 == *v20 && v19 == v21)
    goto LABEL_17;
  v23 = 0;
  if ((sub_235EE60D0() & 1) != 0)
    goto LABEL_17;
  return v23 & 1;
}

uint64_t sub_235ECF284()
{
  return sub_235E930EC(&qword_25638CFF0, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudWithdrawRequestProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudWithdrawRequestProtobuf);
}

uint64_t sub_235ECF2B0()
{
  return sub_235E930EC(&qword_25638B940, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudWithdrawRequestProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudWithdrawRequestProtobuf);
}

uint64_t sub_235ECF2DC()
{
  return sub_235E930EC(&qword_25638CFE8, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudWithdrawRequestProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudWithdrawRequestProtobuf);
}

uint64_t sub_235ECF308()
{
  return sub_235E930EC(&qword_25638B948, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudWithdrawRequestProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudWithdrawRequestProtobuf);
}

uint64_t sub_235ECF334@<X0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  double v6;

  result = type metadata accessor for SecureCloudWithdrawRequestProtobuf();
  v5 = a1 + *(int *)(result + 20);
  v6 = *(double *)v5;
  if (*(_BYTE *)(v5 + 8))
    v6 = 0.0;
  *a2 = v6;
  return result;
}

uint64_t sub_235ECF37C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1;
  result = type metadata accessor for SecureCloudWithdrawRequestProtobuf();
  v5 = a2 + *(int *)(result + 20);
  *(_QWORD *)v5 = v3;
  *(_BYTE *)(v5 + 8) = 0;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SecureCloudWithdrawRequestProtobuf(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_235EE5B90();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
    v12 = (uint64_t *)((char *)a1 + v9);
    v13 = (uint64_t *)((char *)a2 + v9);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SecureCloudWithdrawRequestProtobuf(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_235EE5B90();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SecureCloudWithdrawRequestProtobuf(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;

  v6 = sub_235EE5B90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = (_QWORD *)(a1 + v8);
  v12 = (_QWORD *)(a2 + v8);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SecureCloudWithdrawRequestProtobuf(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;

  v6 = sub_235EE5B90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 8);
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = v10;
  v11 = *(int *)(a3 + 24);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for SecureCloudWithdrawRequestProtobuf(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_235EE5B90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  return a1;
}

uint64_t assignWithTake for SecureCloudWithdrawRequestProtobuf(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_235EE5B90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = (_QWORD *)(a1 + v8);
  v12 = (uint64_t *)(a2 + v8);
  v14 = *v12;
  v13 = v12[1];
  *v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SecureCloudWithdrawRequestProtobuf()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_235ECF6CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_235EE5B90();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for SecureCloudWithdrawRequestProtobuf()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_235ECF764(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_235EE5B90();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = a2;
  return result;
}

uint64_t sub_235ECF7E0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_235EE5B90();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

id CodableProtobuf.value.getter()
{
  id *v0;

  return *v0;
}

uint64_t CodableProtobuf.init(value:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

BOOL sub_235ECF86C()
{
  uint64_t v0;

  v0 = sub_235EE604C();
  swift_bridgeObjectRelease();
  return v0 != 0;
}

uint64_t sub_235ECF8B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x23B7E5230](&unk_235EE9A20, a3);
  return sub_235EE60DC();
}

uint64_t sub_235ECF904(uint64_t a1)
{
  MEMORY[0x23B7E5230](&unk_235EE9A20, a1);
  return sub_235EE5DC4();
}

uint64_t sub_235ECF950()
{
  MEMORY[0x23B7E5230](&unk_235EE9A20);
  return sub_235EE5DDC();
}

uint64_t sub_235ECF9A0()
{
  MEMORY[0x23B7E5230](&unk_235EE9A20);
  return sub_235EE5DD0();
}

BOOL sub_235ECF9F0@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = sub_235ECF86C();
  *a1 = result;
  return result;
}

void sub_235ECFA24(_QWORD *a1@<X8>)
{
  *a1 = 1635017060;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_235ECFA38()
{
  return 1635017060;
}

BOOL sub_235ECFA48@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = sub_235ECF86C();
  *a1 = result;
  return result;
}

uint64_t sub_235ECFA74@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_235E9DC78();
  *a1 = result & 1;
  return result;
}

uint64_t sub_235ECFAA0(uint64_t a1)
{
  MEMORY[0x23B7E5230](&unk_235EE9AC0, a1);
  return sub_235EE6190();
}

uint64_t sub_235ECFAD4(uint64_t a1)
{
  MEMORY[0x23B7E5230](&unk_235EE9AC0, a1);
  return sub_235EE619C();
}

uint64_t CodableProtobuf.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void **v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;

  v6 = type metadata accessor for CodableProtobuf.CodingKeys(255, *(_QWORD *)(a2 + 16), a3, a4);
  MEMORY[0x23B7E5230](&unk_235EE9AC0, v6);
  v7 = sub_235EE60AC();
  v18 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v17 - v8;
  v10 = *v4;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_235EE6184();
  v11 = objc_msgSend(v10, sel_data);
  if (v11)
  {
    v12 = v11;
    v13 = sub_235EE5AB8();
    v15 = v14;

  }
  else
  {
    v13 = 0;
    v15 = 0xF000000000000000;
  }
  v19 = v13;
  v20 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25429CCB8);
  sub_235ECFC8C();
  sub_235EE60A0();
  sub_235E90940(v13, v15);
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v9, v7);
}

uint64_t type metadata accessor for CodableProtobuf.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CodableProtobuf.CodingKeys);
}

unint64_t sub_235ECFC8C()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_25638D098;
  if (!qword_25638D098)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25429CCB8);
    v2 = sub_235E94A34();
    result = MEMORY[0x23B7E5230](MEMORY[0x24BEE4AA8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_25638D098);
  }
  return result;
}

uint64_t CodableProtobuf.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  _BYTE *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;

  v20 = a5;
  v6 = type metadata accessor for CodableProtobuf.CodingKeys(255, a2, a3, a4);
  MEMORY[0x23B7E5230](&unk_235EE9AC0, v6);
  v7 = sub_235EE607C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v19 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v11 = v23;
  sub_235EE6178();
  if (!v11)
  {
    v12 = v8;
    sub_235E949F0();
    sub_235EE6070();
    v13 = v7;
    v23 = v10;
    v14 = v21;
    v15 = v22;
    sub_235E90998(v21, v22);
    v16 = sub_235ECFED8(v14, v15);
    sub_235E90954(v14, v15);
    if (v16)
    {
      sub_235E90954(v14, v15);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v23, v13);
      *v20 = v16;
    }
    else
    {
      sub_235ECFF60();
      swift_allocError();
      *v18 = 0;
      swift_willThrow();
      sub_235E90954(v14, v15);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v23, v13);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

id sub_235ECFED8(uint64_t a1, unint64_t a2)
{
  void *v2;
  id v5;

  if (a2 >> 60 == 15)
  {
    v2 = 0;
  }
  else
  {
    sub_235E90998(a1, a2);
    v2 = (void *)sub_235EE5AAC();
    sub_235E90940(a1, a2);
  }
  v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithData_, v2);

  return v5;
}

unint64_t sub_235ECFF60()
{
  unint64_t result;

  result = qword_25638D0A0[0];
  if (!qword_25638D0A0[0])
  {
    result = MEMORY[0x23B7E5230](&unk_235EE8C8C, &type metadata for CodableError);
    atomic_store(result, qword_25638D0A0);
  }
  return result;
}

uint64_t sub_235ECFFA4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  return CodableProtobuf.init(from:)(a1, *(_QWORD *)(a2 + 16), a3, a4, a5);
}

uint64_t sub_235ECFFBC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return CodableProtobuf.encode(to:)(a1, a2, a3, a4);
}

uint64_t sub_235ECFFD0()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t type metadata accessor for CodableProtobuf(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CodableProtobuf);
}

uint64_t sub_235ECFFE4()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_235ECFFEC(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_235ED002C + 4 * byte_235EE9900[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_235ED004C + 4 * byte_235EE9905[v4]))();
}

_BYTE *sub_235ED002C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_235ED004C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_235ED0054(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_235ED005C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_235ED0064(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_235ED006C(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_235ED0078()
{
  JUMPOUT(0x23B7E5230);
}

void sub_235ED0088()
{
  JUMPOUT(0x23B7E5230);
}

void sub_235ED0098()
{
  JUMPOUT(0x23B7E5230);
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x23B7E51D0](a1, v6, a5);
}

uint64_t storeEnumTagSinglePayload for TransportError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_235ED0120 + 4 * byte_235EE9B15[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_235ED0154 + 4 * byte_235EE9B10[v4]))();
}

uint64_t sub_235ED0154(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_235ED015C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x235ED0164);
  return result;
}

uint64_t sub_235ED0170(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x235ED0178);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_235ED017C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_235ED0184(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TransportError()
{
  return &type metadata for TransportError;
}

unint64_t sub_235ED01A4()
{
  unint64_t result;

  result = qword_25638D1A8;
  if (!qword_25638D1A8)
  {
    result = MEMORY[0x23B7E5230](&unk_235EE9B88, &type metadata for TransportError);
    atomic_store(result, (unint64_t *)&qword_25638D1A8);
  }
  return result;
}

uint64_t XPCClient.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  XPCClient.init()();
  return v0;
}

uint64_t sub_235ED021C(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t XPCClient.deinit()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 112);
  objc_msgSend(v1, sel_setInterruptionHandler_, 0);
  objc_msgSend(v1, sel_setInvalidationHandler_, 0);
  objc_msgSend(v1, sel_invalidate);

  swift_unknownObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t XPCClient.__deallocating_deinit()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 112);
  objc_msgSend(v1, sel_setInterruptionHandler_, 0);
  objc_msgSend(v1, sel_setInvalidationHandler_, 0);
  objc_msgSend(v1, sel_invalidate);

  swift_unknownObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

void sub_235ED0320(void *a1, uint64_t a2)
{
  uint64_t v4;
  id v5;
  id v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  NSObject *oslog;
  uint64_t v18;

  if (qword_25429CF60 != -1)
    swift_once();
  v4 = sub_235EE5CF8();
  __swift_project_value_buffer(v4, (uint64_t)qword_25429CF70);
  swift_retain();
  v5 = a1;
  swift_retain();
  v6 = a1;
  oslog = sub_235EE5CE0();
  v7 = sub_235EE5ECC();
  if (os_log_type_enabled(oslog, v7))
  {
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v18 = v9;
    *(_DWORD *)v8 = 136446466;
    v10 = objc_msgSend(*(id *)(a2 + 112), sel_serviceName);
    if (v10)
    {
      v11 = v10;
      v12 = sub_235EE5D40();
      v14 = v13;

    }
    else
    {
      v14 = 0xE900000000000029;
      v12 = 0x6E776F6E6B6E7528;
    }
    sub_235E911D4(v12, v14, &v18);
    sub_235EE5F2C();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2082;
    swift_getErrorValue();
    v15 = sub_235EE610C();
    sub_235E911D4(v15, v16, &v18);
    sub_235EE5F2C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_235E8C000, oslog, v7, "Error on remote object proxy from %{public}s: %{public}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B7E529C](v9, -1, -1);
    MEMORY[0x23B7E529C](v8, -1, -1);

  }
  else
  {
    swift_release_n();

  }
}

void sub_235ED05A8(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t XPCClient.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t XPCClient.activate()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 64) = v0;
  return swift_task_switch();
}

void sub_235ED061C()
{
  uint64_t v0;
  os_log_type_t v1;
  uint8_t *v2;
  NSObject *oslog;

  if (qword_25429CF60 != -1)
    swift_once();
  v0 = sub_235EE5CF8();
  __swift_project_value_buffer(v0, (uint64_t)qword_25429CF70);
  oslog = sub_235EE5CE0();
  v1 = sub_235EE5ECC();
  if (os_log_type_enabled(oslog, v1))
  {
    v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v2 = 0;
    _os_log_impl(&dword_235E8C000, oslog, v1, "XPC connection interrupted", v2, 2u);
    MEMORY[0x23B7E529C](v2, -1, -1);
  }

}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t sub_235ED06F0()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25429CDD0);
  MEMORY[0x24BDAC7A8]();
  v1 = (char *)&v10 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25429CF60 != -1)
    swift_once();
  v2 = sub_235EE5CF8();
  __swift_project_value_buffer(v2, (uint64_t)qword_25429CF70);
  v3 = sub_235EE5CE0();
  v4 = sub_235EE5ECC();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_235E8C000, v3, v4, "XPC connection invalidated", v5, 2u);
    MEMORY[0x23B7E529C](v5, -1, -1);
  }

  v6 = sub_235EE5E90();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v1, 1, 1, v6);
  v7 = swift_allocObject();
  swift_weakInit();
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = v7;
  sub_235ED3204((uint64_t)v1, (uint64_t)&unk_25638D240, (uint64_t)v8);
  return swift_release();
}

uint64_t sub_235ED0880()
{
  return sub_235ED06F0();
}

uint64_t sub_235ED0888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 40) = a1;
  *(_QWORD *)(v4 + 48) = a4;
  return swift_task_switch();
}

uint64_t sub_235ED08A0()
{
  uint64_t v0;
  uint64_t Strong;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 56) = Strong;
  if (Strong)
    return swift_task_switch();
  **(_BYTE **)(v0 + 40) = 1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235ED0920()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(v0 + 56);
  if (*(_BYTE *)(v1 + 128) != 2)
  {
    *(_BYTE *)(v1 + 128) = 2;
    v2 = *(void **)(v1 + 112);
    objc_msgSend(v2, sel_setInterruptionHandler_, 0);
    objc_msgSend(v2, sel_setInvalidationHandler_, 0);
    objc_msgSend(v2, sel_invalidate);
  }
  swift_release();
  return swift_task_switch();
}

uint64_t sub_235ED09C4()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 40) = *(_QWORD *)(v0 + 56) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t XPCClient.invalidate()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_235ED09F8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(v0 + 16);
  if (*(_BYTE *)(v1 + 128) != 2)
  {
    *(_BYTE *)(v1 + 128) = 2;
    v2 = *(void **)(v1 + 112);
    objc_msgSend(v2, sel_setInterruptionHandler_, 0);
    objc_msgSend(v2, sel_setInvalidationHandler_, 0);
    objc_msgSend(v2, sel_invalidate);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t XPCClient.sendItem(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 120) = a1;
  *(_QWORD *)(v2 + 128) = v1;
  return swift_task_switch();
}

uint64_t sub_235ED0A8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = sub_235E90070();
  *(_QWORD *)(v0 + 136) = v1;
  if (!v1)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v2 = *(_QWORD *)(v0 + 120);
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_235ED0B68;
  v3 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
  v4 = (_QWORD *)(v0 + 80);
  v4[1] = 0x40000000;
  v4[2] = sub_235EBD174;
  v4[3] = &block_descriptor_5_0;
  v4[4] = v3;
  objc_msgSend((id)swift_unknownObjectRetain(), sel_transportMessage_completionHandler_, v2, v4);
  return swift_continuation_await();
}

uint64_t sub_235ED0B68()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 144) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_235ED0BC8()
{
  uint64_t v0;

  swift_unknownObjectRelease_n();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235ED0C00()
{
  uint64_t v0;

  swift_willThrow();
  swift_unknownObjectRelease_n();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t XPCClient.sendItem<A>(_:payload:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v5[18] = a4;
  v5[19] = v4;
  v5[16] = a2;
  v5[17] = a3;
  v5[15] = a1;
  v6 = sub_235EE5F14();
  v5[20] = v6;
  v5[21] = *(_QWORD *)(v6 - 8);
  v5[22] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_235ED0CB4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v12;

  v1 = (void *)sub_235E90070();
  v2 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 136);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 16))(v2, *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 160));
  v4 = *(_QWORD *)(v3 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 160));
    v5 = 0;
    v6 = 0xF000000000000000;
    if (v1)
      goto LABEL_3;
  }
  else
  {
    v5 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v0 + 144) + 8))(*(_QWORD *)(v0 + 136));
    v6 = v12;
    (*(void (**)(_QWORD, _QWORD))(v4 + 8))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 136));
    if (v1)
    {
      if (v6 >> 60 != 15)
      {
        swift_unknownObjectRetain();
        sub_235E9083C(v5, v6);
        v7 = sub_235EE5AAC();
        sub_235E90940(v5, v6);
        goto LABEL_4;
      }
LABEL_3:
      swift_unknownObjectRetain();
      v7 = 0;
LABEL_4:
      *(_QWORD *)(v0 + 200) = v6;
      *(_QWORD *)(v0 + 208) = v7;
      *(_QWORD *)(v0 + 184) = v1;
      *(_QWORD *)(v0 + 192) = v5;
      v8 = *(_QWORD *)(v0 + 120);
      *(_QWORD *)(v0 + 16) = v0;
      *(_QWORD *)(v0 + 24) = sub_235ED0EC4;
      v9 = swift_continuation_init();
      *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
      v10 = (_QWORD *)(v0 + 80);
      v10[1] = 0x40000000;
      v10[2] = sub_235EBD174;
      v10[3] = &block_descriptor_7;
      v10[4] = v9;
      objc_msgSend(v1, sel_transportMessage_data_completionHandler_, v8, v7, v10);
      return swift_continuation_await();
    }
  }
  sub_235E90940(v5, v6);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235ED0EC4()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 216) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_235ED0F24()
{
  uint64_t v0;
  unint64_t v1;
  void *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 200);
  v2 = *(void **)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 192);
  swift_unknownObjectRelease();
  sub_235E90940(v3, v1);
  swift_unknownObjectRelease();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235ED0F88()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(void **)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 200);
  swift_willThrow();
  swift_unknownObjectRelease();
  sub_235E90940(v2, v3);
  swift_unknownObjectRelease();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235ED101C()
{
  uint64_t v0;

  swift_willThrow();
  swift_unknownObjectRelease_n();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235ED1068()
{
  uint64_t v0;

  swift_willThrow();
  swift_unknownObjectRelease_n();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t XPCClient.sendItem<A, B>(_:payload:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v8[23] = a7;
  v8[24] = v7;
  v8[21] = a5;
  v8[22] = a6;
  v8[19] = a3;
  v8[20] = a4;
  v8[17] = a1;
  v8[18] = a2;
  v9 = sub_235EE5F14();
  v8[25] = v9;
  v8[26] = *(_QWORD *)(v9 - 8);
  v8[27] = swift_task_alloc();
  return swift_task_switch();
}

{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v8[23] = a7;
  v8[24] = v7;
  v8[21] = a5;
  v8[22] = a6;
  v8[19] = a3;
  v8[20] = a4;
  v8[17] = a1;
  v8[18] = a2;
  v9 = sub_235EE5F14();
  v8[25] = v9;
  v8[26] = *(_QWORD *)(v9 - 8);
  v8[27] = swift_task_alloc();
  v10 = sub_235EE5F14();
  v8[28] = v10;
  v8[29] = *(_QWORD *)(v10 - 8);
  v8[30] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_235ED112C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v13;

  v1 = sub_235E90070();
  *(_QWORD *)(v0 + 224) = v1;
  v2 = (void *)v1;
  v3 = *(_QWORD *)(v0 + 216);
  v4 = *(_QWORD *)(v0 + 160);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 16))(v3, *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 200));
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 8))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 200));
    v6 = 0;
    v7 = 0xF000000000000000;
    if (v2)
      goto LABEL_3;
  }
  else
  {
    v6 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v0 + 176) + 8))(*(_QWORD *)(v0 + 160));
    v7 = v13;
    (*(void (**)(_QWORD, _QWORD))(v5 + 8))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 160));
    if (v2)
    {
      if (v7 >> 60 != 15)
      {
        swift_unknownObjectRetain();
        sub_235E9083C(v6, v7);
        v8 = sub_235EE5AAC();
        sub_235E90940(v6, v7);
        goto LABEL_4;
      }
LABEL_3:
      swift_unknownObjectRetain();
      v8 = 0;
LABEL_4:
      *(_QWORD *)(v0 + 256) = v7;
      *(_QWORD *)(v0 + 264) = v8;
      *(_QWORD *)(v0 + 240) = v2;
      *(_QWORD *)(v0 + 248) = v6;
      *(_QWORD *)(v0 + 232) = 0;
      v9 = *(_QWORD *)(v0 + 144);
      *(_QWORD *)(v0 + 56) = v0 + 120;
      *(_QWORD *)(v0 + 16) = v0;
      *(_QWORD *)(v0 + 24) = sub_235ED13A0;
      v10 = swift_continuation_init();
      *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
      v11 = (_QWORD *)(v0 + 80);
      v11[1] = 0x40000000;
      v11[2] = sub_235E8E3F4;
      v11[3] = &block_descriptor_13;
      v11[4] = v10;
      objc_msgSend(v2, sel_transportRequest_data_completionHandler_, v9, v8, v11);
      return swift_continuation_await();
    }
  }
  (*(void (**)(_QWORD, unint64_t))(*(_QWORD *)(v0 + 184) + 16))(0, 0xF000000000000000);
  sub_235E90940(v6, v7);
  swift_unknownObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235ED13A0()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 272) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_235ED1400()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v1 = *(void **)(v0 + 264);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 128);
  swift_unknownObjectRelease();

  v5 = *(_QWORD *)(v0 + 248);
  v4 = *(_QWORD *)(v0 + 256);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 184) + 16))(v2, v3);
  sub_235E90940(v5, v4);
  swift_unknownObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235ED14C8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(void **)(v0 + 264);
  v2 = *(_QWORD *)(v0 + 248);
  v3 = *(_QWORD *)(v0 + 256);
  swift_willThrow();
  swift_unknownObjectRelease();
  sub_235E90940(v2, v3);
  swift_unknownObjectRelease();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235ED15DC()
{
  uint64_t v0;
  uint64_t v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(_QWORD, unint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;

  v1 = sub_235E90070();
  *(_QWORD *)(v0 + 248) = v1;
  v3 = (void *)v1;
  v4 = *(_QWORD *)(v0 + 240);
  v5 = *(_QWORD *)(v0 + 160);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 232) + 16))(v4, *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 224));
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 232) + 8))(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 224));
    v7 = 0;
    v8 = 0xF000000000000000;
    if (v3)
      goto LABEL_5;
  }
  else
  {
    v7 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v0 + 176) + 8))(*(_QWORD *)(v0 + 160));
    v8 = v13;
    (*(void (**)(_QWORD, _QWORD))(v6 + 8))(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 160));
    if (v3)
    {
      if (v8 >> 60 != 15)
      {
        swift_unknownObjectRetain();
        sub_235E9083C(v7, v8);
        v9 = sub_235EE5AAC();
        sub_235E90940(v7, v8);
        goto LABEL_6;
      }
LABEL_5:
      swift_unknownObjectRetain();
      v9 = 0;
LABEL_6:
      *(_QWORD *)(v0 + 280) = v8;
      *(_QWORD *)(v0 + 288) = v9;
      *(_QWORD *)(v0 + 264) = v3;
      *(_QWORD *)(v0 + 272) = v7;
      *(_QWORD *)(v0 + 256) = 0;
      v10 = *(_QWORD *)(v0 + 144);
      *(_QWORD *)(v0 + 56) = v0 + 120;
      *(_QWORD *)(v0 + 16) = v0;
      *(_QWORD *)(v0 + 24) = sub_235ED1954;
      v11 = swift_continuation_init();
      *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
      v12 = (_QWORD *)(v0 + 80);
      v12[1] = 0x40000000;
      v12[2] = sub_235E8E3F4;
      v12[3] = &block_descriptor_15;
      v12[4] = v11;
      objc_msgSend(v3, sel_transportRequest_data_completionHandler_, v10, v9, v12);
      return swift_continuation_await();
    }
  }
  v14 = *(_QWORD *)(v0 + 184);
  v15 = *(_QWORD *)(v0 + 168);
  v16 = *(void (**)(_QWORD, unint64_t, uint64_t, uint64_t))(v14 + 16);
  sub_235E9083C(0, 0xF000000000000000);
  v16(0, 0xF000000000000000, v15, v14);
  v17 = *(_QWORD *)(v0 + 216);
  v18 = *(_QWORD *)(v0 + 168);
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 208) + 8))(v17, *(_QWORD *)(v0 + 200));
    sub_235E9A644();
    swift_allocError();
    *v20 = 1;
    swift_willThrow();
    sub_235E90940(0, 0xF000000000000000);
    sub_235E90940(v7, v8);
    swift_unknownObjectRelease();
  }
  else
  {
    v21 = *(_QWORD *)(v0 + 136);
    swift_unknownObjectRelease();
    sub_235E90940(v7, v8);
    sub_235E90940(0, 0xF000000000000000);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v21, v17, v18);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235ED1954()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 296) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_235ED19B4()
{
  _QWORD *v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t (*v14)(void);
  uint64_t v15;

  v1 = (void *)v0[36];
  v3 = v0[15];
  v2 = v0[16];
  swift_unknownObjectRelease();

  v5 = v0[34];
  v4 = v0[35];
  v6 = v0[32];
  v7 = v0[23];
  v8 = v0[21];
  v9 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v7 + 16);
  sub_235E9083C(v3, v2);
  v9(v3, v2, v8, v7);
  if (v6)
  {
    swift_unknownObjectRelease();
    sub_235E90940(v5, v4);
    sub_235E90940(v3, v2);
  }
  else
  {
    v10 = v0[27];
    v11 = v0[21];
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
    {
      v15 = v0[17];
      swift_unknownObjectRelease();
      sub_235E90940(v5, v4);
      sub_235E90940(v3, v2);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v15, v10, v11);
      swift_task_dealloc();
      swift_task_dealloc();
      v14 = (uint64_t (*)(void))v0[1];
      return v14();
    }
    (*(void (**)(uint64_t, _QWORD))(v0[26] + 8))(v10, v0[25]);
    sub_235E9A644();
    swift_allocError();
    *v13 = 1;
    swift_willThrow();
    sub_235E90940(v3, v2);
    sub_235E90940(v5, v4);
    swift_unknownObjectRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_235ED1B78()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(void **)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 280);
  swift_willThrow();
  swift_unknownObjectRelease();
  sub_235E90940(v2, v3);
  swift_unknownObjectRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235ED1BF8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *v0;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_235E8E458;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t sub_235ED1C58(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_235E8E458;
  v5[15] = a1;
  v5[16] = v4;
  return swift_task_switch();
}

uint64_t sub_235ED1CBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_235E8E458;
  return XPCClient.sendItem<A>(_:payload:)(a1, a2, a3, a4);
}

uint64_t sub_235ED1D34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;

  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_235E8E458;
  return XPCClient.sendItem<A, B>(_:payload:)(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_235ED1DD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;

  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_235E8E5E8;
  return XPCClient.sendItem<A, B>(_:payload:)(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t method lookup function for XPCClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of XPCClient.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t storeEnumTagSinglePayload for XPCClient.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_235ED1ED4 + 4 * byte_235EE9C05[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_235ED1F08 + 4 * byte_235EE9C00[v4]))();
}

uint64_t sub_235ED1F08(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_235ED1F10(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x235ED1F18);
  return result;
}

uint64_t sub_235ED1F24(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x235ED1F2CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_235ED1F30(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_235ED1F38(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for XPCClient.State()
{
  return &type metadata for XPCClient.State;
}

unint64_t sub_235ED1F58()
{
  unint64_t result;

  result = qword_25638D230;
  if (!qword_25638D230)
  {
    result = MEMORY[0x23B7E5230](&unk_235EE9CE0, &type metadata for XPCClient.State);
    atomic_store(result, &qword_25638D230);
  }
  return result;
}

void sub_235ED1F9C(void *a1)
{
  uint64_t v1;

  sub_235ED0320(a1, v1);
}

uint64_t sub_235ED1FA4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_235ED1FC8()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_235ED1FF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 32);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_235E8E5E8;
  v5[5] = a1;
  v5[6] = v4;
  return swift_task_switch();
}

uint64_t SecureCloudPingResponseProtobuf.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for SecureCloudPingResponseProtobuf() + 20));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t type metadata accessor for SecureCloudPingResponseProtobuf()
{
  uint64_t result;

  result = qword_25638D2C8;
  if (!qword_25638D2C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t SecureCloudPingResponseProtobuf.requestIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for SecureCloudPingResponseProtobuf() + 24));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t SecureCloudPingResponseProtobuf.identifier.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SecureCloudPingResponseProtobuf() + 20));
  if (v1[1])
    v2 = *v1;
  else
    v2 = 0;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t SecureCloudPingResponseProtobuf.requestIdentifier.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SecureCloudPingResponseProtobuf() + 24));
  if (v1[1])
    v2 = *v1;
  else
    v2 = 0;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_235ED21CC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SecureCloudPingResponseProtobuf() + 20));
  v4 = v3[1];
  if (v4)
  {
    v5 = *v3;
    v6 = v4;
  }
  else
  {
    v5 = 0;
    v6 = 0xE000000000000000;
  }
  *a2 = v5;
  a2[1] = v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_235ED221C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(a2 + *(int *)(type metadata accessor for SecureCloudPingResponseProtobuf() + 20));
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *v4 = v3;
  v4[1] = v2;
  return result;
}

uint64_t (*SecureCloudPingResponseProtobuf.identifier.modify(uint64_t a1))(uint64_t *, char)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudPingResponseProtobuf() + 20);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v1 + v3);
  v5 = v4[1];
  if (v5)
  {
    v6 = *v4;
    v7 = v5;
  }
  else
  {
    v6 = 0;
    v7 = 0xE000000000000000;
  }
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_235E952D0;
}

BOOL SecureCloudPingResponseProtobuf.hasIdentifier.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudPingResponseProtobuf() + 20) + 8) != 0;
}

Swift::Void __swiftcall SecureCloudPingResponseProtobuf.clearIdentifier()()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudPingResponseProtobuf() + 20));
  swift_bridgeObjectRelease();
  *v1 = 0;
  v1[1] = 0;
}

uint64_t sub_235ED2334@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SecureCloudPingResponseProtobuf() + 24));
  v4 = v3[1];
  if (v4)
  {
    v5 = *v3;
    v6 = v4;
  }
  else
  {
    v5 = 0;
    v6 = 0xE000000000000000;
  }
  *a2 = v5;
  a2[1] = v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_235ED2384(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(a2 + *(int *)(type metadata accessor for SecureCloudPingResponseProtobuf() + 24));
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *v4 = v3;
  v4[1] = v2;
  return result;
}

uint64_t (*SecureCloudPingResponseProtobuf.requestIdentifier.modify(uint64_t a1))(uint64_t *, char)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudPingResponseProtobuf() + 24);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v1 + v3);
  v5 = v4[1];
  if (v5)
  {
    v6 = *v4;
    v7 = v5;
  }
  else
  {
    v6 = 0;
    v7 = 0xE000000000000000;
  }
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_235E952D0;
}

BOOL SecureCloudPingResponseProtobuf.hasRequestIdentifier.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudPingResponseProtobuf() + 24) + 8) != 0;
}

Swift::Void __swiftcall SecureCloudPingResponseProtobuf.clearRequestIdentifier()()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudPingResponseProtobuf() + 24));
  swift_bridgeObjectRelease();
  *v1 = 0;
  v1[1] = 0;
}

uint64_t SecureCloudPingResponseProtobuf.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_235EE5B90();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t SecureCloudPingResponseProtobuf.unknownFields.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_235EE5B90();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*SecureCloudPingResponseProtobuf.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t SecureCloudPingResponseProtobuf.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  _QWORD *v3;
  _QWORD *v4;

  sub_235EE5B84();
  result = type metadata accessor for SecureCloudPingResponseProtobuf();
  v3 = (_QWORD *)(a1 + *(int *)(result + 20));
  *v3 = 0;
  v3[1] = 0;
  v4 = (_QWORD *)(a1 + *(int *)(result + 24));
  *v4 = 0;
  v4[1] = 0;
  return result;
}

unint64_t static SecureCloudPingResponseProtobuf.protoMessageName.getter()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_235ED2578()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_235EE5CD4();
  __swift_allocate_value_buffer(v0, qword_25638D248);
  __swift_project_value_buffer(v0, (uint64_t)qword_25638D248);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25638B600);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638B608);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_235EE7AF0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "identifier";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_235EE5CBC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "requestIdentifier";
  *((_QWORD *)v11 + 1) = 17;
  v11[16] = 2;
  v10();
  return sub_235EE5CC8();
}

uint64_t static SecureCloudPingResponseProtobuf._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_25638B538 != -1)
    swift_once();
  v2 = sub_235EE5CD4();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_25638D248);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t SecureCloudPingResponseProtobuf.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  while (1)
  {
    result = sub_235EE5BD8();
    if (v0 || (v2 & 1) != 0)
      break;
    if (result == 2 || result == 1)
    {
      type metadata accessor for SecureCloudPingResponseProtobuf();
      sub_235EE5C08();
    }
    v0 = 0;
  }
  return result;
}

uint64_t SecureCloudPingResponseProtobuf.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for SecureCloudPingResponseProtobuf();
  if (!*(_QWORD *)(v0 + *(int *)(v2 + 20) + 8) || (result = sub_235EE5C98(), !v1))
  {
    if (!*(_QWORD *)(v0 + *(int *)(v2 + 24) + 8))
      return sub_235EE5B78();
    result = sub_235EE5C98();
    if (!v1)
      return sub_235EE5B78();
  }
  return result;
}

uint64_t SecureCloudPingResponseProtobuf.hashValue.getter()
{
  sub_235EE6154();
  type metadata accessor for SecureCloudPingResponseProtobuf();
  sub_235E930EC(&qword_25638D260, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudPingResponseProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudPingResponseProtobuf);
  sub_235EE5D1C();
  return sub_235EE616C();
}

uint64_t sub_235ED291C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;

  result = sub_235EE5B84();
  v5 = *(int *)(a1 + 24);
  v6 = (_QWORD *)(a2 + *(int *)(a1 + 20));
  *v6 = 0;
  v6[1] = 0;
  v7 = (_QWORD *)(a2 + v5);
  *v7 = 0;
  v7[1] = 0;
  return result;
}

unint64_t sub_235ED2954()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_235ED2970()
{
  return SecureCloudPingResponseProtobuf.decodeMessage<A>(decoder:)();
}

uint64_t sub_235ED2984()
{
  return SecureCloudPingResponseProtobuf.traverse<A>(visitor:)();
}

uint64_t sub_235ED2998()
{
  sub_235E930EC(&qword_25638D308, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudPingResponseProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudPingResponseProtobuf);
  return sub_235EE5BC0();
}

uint64_t sub_235ED29E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_25638B538 != -1)
    swift_once();
  v2 = sub_235EE5CD4();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_25638D248);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_235ED2A58()
{
  sub_235E930EC(&qword_25638B8F0, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudPingResponseProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudPingResponseProtobuf);
  return sub_235EE5C50();
}

uint64_t sub_235ED2A98()
{
  sub_235E930EC(&qword_25638B8F0, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudPingResponseProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudPingResponseProtobuf);
  return sub_235EE5C5C();
}

uint64_t _s21ActivitySharingClient31SecureCloudPingResponseProtobufV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  BOOL v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  void (*v25)(char *, uint64_t, uint64_t);
  void (*v26)(char *, uint64_t);
  uint64_t v28;

  v4 = sub_235EE5B90();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v28 - v9;
  v11 = type metadata accessor for SecureCloudPingResponseProtobuf();
  v12 = *(int *)(v11 + 20);
  v13 = (_QWORD *)(a1 + v12);
  v14 = *(_QWORD *)(a1 + v12 + 8);
  v15 = (_QWORD *)(a2 + v12);
  v16 = v15[1];
  if (!v14)
  {
    if (v16)
      goto LABEL_19;
    goto LABEL_10;
  }
  if (!v16)
    goto LABEL_19;
  v17 = *v13 == *v15 && v14 == v16;
  if (v17 || (v18 = 0, (sub_235EE60D0() & 1) != 0))
  {
LABEL_10:
    v19 = *(int *)(v11 + 24);
    v20 = (_QWORD *)(a1 + v19);
    v21 = *(_QWORD *)(a1 + v19 + 8);
    v22 = (_QWORD *)(a2 + v19);
    v23 = v22[1];
    if (v21)
    {
      if (v23)
      {
        if (*v20 != *v22 || v21 != v23)
        {
          v18 = 0;
          if ((sub_235EE60D0() & 1) == 0)
            return v18 & 1;
        }
LABEL_20:
        v25 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
        v25(v10, a1, v4);
        v25(v8, a2, v4);
        sub_235E930EC(&qword_25638B5F8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v18 = sub_235EE5D28();
        v26 = *(void (**)(char *, uint64_t))(v5 + 8);
        v26(v8, v4);
        v26(v10, v4);
        return v18 & 1;
      }
    }
    else if (!v23)
    {
      goto LABEL_20;
    }
LABEL_19:
    v18 = 0;
  }
  return v18 & 1;
}

uint64_t sub_235ED2C98()
{
  return sub_235E930EC(&qword_25638D268, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudPingResponseProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudPingResponseProtobuf);
}

uint64_t sub_235ED2CC4()
{
  return sub_235E930EC(&qword_25638B8F0, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudPingResponseProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudPingResponseProtobuf);
}

uint64_t sub_235ED2CF0()
{
  return sub_235E930EC(&qword_25638D260, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudPingResponseProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudPingResponseProtobuf);
}

uint64_t sub_235ED2D1C()
{
  return sub_235E930EC(&qword_25638B8F8, (uint64_t (*)(uint64_t))type metadata accessor for SecureCloudPingResponseProtobuf, (uint64_t)&protocol conformance descriptor for SecureCloudPingResponseProtobuf);
}

uint64_t *initializeBufferWithCopyOfBuffer for SecureCloudPingResponseProtobuf(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_235EE5B90();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SecureCloudPingResponseProtobuf(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_235EE5B90();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SecureCloudPingResponseProtobuf(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  v6 = sub_235EE5B90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SecureCloudPingResponseProtobuf(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v6 = sub_235EE5B90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 24);
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for SecureCloudPingResponseProtobuf(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_235EE5B90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for SecureCloudPingResponseProtobuf(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_235EE5B90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = *(int *)(a3 + 24);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SecureCloudPingResponseProtobuf()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_235ED307C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_235EE5B90();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for SecureCloudPingResponseProtobuf()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_235ED3114(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_235EE5B90();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  return result;
}

uint64_t sub_235ED3190()
{
  uint64_t result;
  unint64_t v1;

  result = sub_235EE5B90();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_235ED3204(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_235EE5E90();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_235EE5E84();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_235E9196C(a1);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_235EE5E60();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25638D3C8);
  return swift_task_create();
}

uint64_t sub_235ED3350(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_235EE5E90();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_235EE5E84();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_235E9196C(a1);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_235EE5E60();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

char *ActivitySharingFriendQuery.__allocating_init(activitySharingClient:updateHandler:)(void *a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  return ActivitySharingFriendQuery.init(activitySharingClient:updateHandler:)(a1, a2, a3);
}

uint64_t sub_235ED3588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t sub_235ED35A0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v1;
  *v1 = v0;
  v1[1] = sub_235ED35F4;
  return sub_235E91E24();
}

uint64_t sub_235ED35F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 32) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 40) = a1;
  return swift_task_switch();
}

uint64_t sub_235ED3668()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 16) + OBJC_IVAR____ASActivitySharingFriendQuery_updateHandler))(*(_QWORD *)(v0 + 40), 0);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235ED36BC()
{
  uint64_t v0;
  void *v1;
  void (*v2)(_QWORD, void *);
  id v3;

  v1 = *(void **)(v0 + 32);
  v2 = *(void (**)(_QWORD, void *))(*(_QWORD *)(v0 + 16)
                                             + OBJC_IVAR____ASActivitySharingFriendQuery_updateHandler);
  v3 = v1;
  v2(0, v1);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

id ActivitySharingFriendQuery.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ActivitySharingFriendQuery.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ActivitySharingFriendQuery.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivitySharingFriendQuery();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for ActivitySharingFriendQuery()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ActivitySharingFriendQuery.__allocating_init(activitySharingClient:updateHandler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_235ED3880()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_235ED38A4()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_235ED38D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_235E8E5E8;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t sub_235ED3930(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_235E8E458;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_25638D3A8 + dword_25638D3A8))(a1, v4);
}

uint64_t sub_235ED39A0(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_235ED3A08;
  return v5(v2 + 32);
}

uint64_t sub_235ED3A08()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_BYTE **)(*v0 + 16);
  v4 = *v0;
  swift_task_dealloc();
  *v2 = *(_BYTE *)(v1 + 32);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_235ED3A58()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_235ED3A7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_235E8E5E8;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_25638D3B8 + dword_25638D3B8))(a1, v4);
}

void __swiftcall SendFriendInviteTransportItem.init(destination:callerID:serviceIdentifier:)(ActivitySharingClient::SendFriendInviteTransportItem *__return_ptr retstr, Swift::String destination, Swift::String callerID, Swift::String serviceIdentifier)
{
  retstr->destination = destination;
  retstr->callerID = callerID;
  retstr->serviceIdentifier = serviceIdentifier;
}

uint64_t SendFriendInviteTransportItem.destination.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SendFriendInviteTransportItem.callerID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SendFriendInviteTransportItem.serviceIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SendFriendInviteTransportItem.description.getter()
{
  sub_235EE5FB0();
  sub_235EE5D7C();
  sub_235EE5D7C();
  swift_bridgeObjectRetain();
  sub_235EE5D7C();
  swift_bridgeObjectRelease();
  sub_235EE5D7C();
  swift_bridgeObjectRetain();
  sub_235EE5D7C();
  swift_bridgeObjectRelease();
  sub_235EE5D7C();
  swift_bridgeObjectRetain();
  sub_235EE5D7C();
  swift_bridgeObjectRelease();
  sub_235EE5D7C();
  return 0;
}

uint64_t sub_235ED3CEC()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x444972656C6C6163;
  if (*v0 != 1)
    v1 = 0xD000000000000011;
  if (*v0)
    return v1;
  else
    return 0x74616E6974736564;
}

uint64_t sub_235ED3D54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_235ED4588(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_235ED3D78()
{
  sub_235ED3F30();
  return sub_235EE6190();
}

uint64_t sub_235ED3DA0()
{
  sub_235ED3F30();
  return sub_235EE619C();
}

uint64_t SendFriendInviteTransportItem.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[6];
  char v12;
  char v13;
  char v14;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638D3D0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[2];
  v11[3] = v1[3];
  v11[4] = v7;
  v8 = v1[4];
  v11[1] = v1[5];
  v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_235ED3F30();
  sub_235EE6184();
  v14 = 0;
  v9 = v11[5];
  sub_235EE6088();
  if (!v9)
  {
    v13 = 1;
    sub_235EE6088();
    v12 = 2;
    sub_235EE6088();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_235ED3F30()
{
  unint64_t result;

  result = qword_25638D3D8;
  if (!qword_25638D3D8)
  {
    result = MEMORY[0x23B7E5230](&unk_235EEA0DC, &type metadata for SendFriendInviteTransportItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25638D3D8);
  }
  return result;
}

uint64_t SendFriendInviteTransportItem.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638D3E0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_235ED3F30();
  sub_235EE6178();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v27 = 0;
  v9 = sub_235EE6058();
  v11 = v10;
  v24 = v9;
  v26 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_235EE6058();
  v14 = v13;
  v22 = v12;
  v25 = 2;
  swift_bridgeObjectRetain();
  v23 = v14;
  v15 = sub_235EE6058();
  v17 = v16;
  v18 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = v23;
  *a2 = v24;
  a2[1] = v11;
  a2[2] = v22;
  a2[3] = v19;
  a2[4] = v18;
  a2[5] = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_235ED41B0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return SendFriendInviteTransportItem.init(from:)(a1, a2);
}

uint64_t sub_235ED41C4(_QWORD *a1)
{
  return SendFriendInviteTransportItem.encode(to:)(a1);
}

uint64_t destroy for SendFriendInviteTransportItem()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for SendFriendInviteTransportItem(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SendFriendInviteTransportItem(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for SendFriendInviteTransportItem(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SendFriendInviteTransportItem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SendFriendInviteTransportItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SendFriendInviteTransportItem()
{
  return &type metadata for SendFriendInviteTransportItem;
}

uint64_t storeEnumTagSinglePayload for SendFriendInviteTransportItem.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_235ED4430 + 4 * byte_235EE9F35[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_235ED4464 + 4 * byte_235EE9F30[v4]))();
}

uint64_t sub_235ED4464(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_235ED446C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x235ED4474);
  return result;
}

uint64_t sub_235ED4480(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x235ED4488);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_235ED448C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_235ED4494(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SendFriendInviteTransportItem.CodingKeys()
{
  return &type metadata for SendFriendInviteTransportItem.CodingKeys;
}

unint64_t sub_235ED44B4()
{
  unint64_t result;

  result = qword_25638D3E8;
  if (!qword_25638D3E8)
  {
    result = MEMORY[0x23B7E5230](&unk_235EEA0B4, &type metadata for SendFriendInviteTransportItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25638D3E8);
  }
  return result;
}

unint64_t sub_235ED44FC()
{
  unint64_t result;

  result = qword_25638D3F0;
  if (!qword_25638D3F0)
  {
    result = MEMORY[0x23B7E5230](&unk_235EEA024, &type metadata for SendFriendInviteTransportItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25638D3F0);
  }
  return result;
}

unint64_t sub_235ED4544()
{
  unint64_t result;

  result = qword_25638D3F8;
  if (!qword_25638D3F8)
  {
    result = MEMORY[0x23B7E5230](&unk_235EEA04C, &type metadata for SendFriendInviteTransportItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25638D3F8);
  }
  return result;
}

uint64_t sub_235ED4588(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x74616E6974736564 && a2 == 0xEB000000006E6F69;
  if (v2 || (sub_235EE60D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x444972656C6C6163 && a2 == 0xE800000000000000 || (sub_235EE60D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000235EEB8F0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_235EE60D0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

ValueMetadata *type metadata accessor for VoidTransportSerializable()
{
  return &type metadata for VoidTransportSerializable;
}

uint64_t sub_235ED4700()
{
  return 0;
}

uint64_t sub_235ED470C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

void sub_235ED4738(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_235ED4744()
{
  sub_235ED487C();
  return sub_235EE6190();
}

uint64_t sub_235ED476C()
{
  sub_235ED487C();
  return sub_235EE619C();
}

uint64_t sub_235ED4794(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_235ED47B8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638D400);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_235ED487C();
  sub_235EE6184();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_235ED487C()
{
  unint64_t result;

  result = qword_25638D408;
  if (!qword_25638D408)
  {
    result = MEMORY[0x23B7E5230](&unk_235EEA228, &type metadata for VoidTransportSerializable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25638D408);
  }
  return result;
}

ValueMetadata *type metadata accessor for VoidTransportSerializable.CodingKeys()
{
  return &type metadata for VoidTransportSerializable.CodingKeys;
}

unint64_t sub_235ED48D4()
{
  unint64_t result;

  result = qword_25638D410;
  if (!qword_25638D410)
  {
    result = MEMORY[0x23B7E5230](&unk_235EEA1D8, &type metadata for VoidTransportSerializable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25638D410);
  }
  return result;
}

unint64_t sub_235ED491C()
{
  unint64_t result;

  result = qword_25638D418;
  if (!qword_25638D418)
  {
    result = MEMORY[0x23B7E5230](&unk_235EEA200, &type metadata for VoidTransportSerializable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25638D418);
  }
  return result;
}

ActivitySharingClient::SetMuteEnabledTransportItem __swiftcall SetMuteEnabledTransportItem.init(isMuteEnabled:friendUUID:)(Swift::Bool isMuteEnabled, Swift::String friendUUID)
{
  uint64_t v2;
  ActivitySharingClient::SetMuteEnabledTransportItem result;

  *(_BYTE *)v2 = isMuteEnabled;
  *(Swift::String *)(v2 + 8) = friendUUID;
  result.friendUUID = friendUUID;
  result.isMuteEnabled = isMuteEnabled;
  return result;
}

uint64_t SetMuteEnabledTransportItem.isMuteEnabled.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t SetMuteEnabledTransportItem.friendUUID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t SetMuteEnabledTransportItem.description.getter()
{
  sub_235EE5FB0();
  swift_bridgeObjectRelease();
  sub_235EE5D7C();
  swift_bridgeObjectRelease();
  sub_235EE5D7C();
  swift_bridgeObjectRetain();
  sub_235EE5D7C();
  swift_bridgeObjectRelease();
  sub_235EE5D7C();
  return 0xD00000000000002BLL;
}

uint64_t sub_235ED4AA0()
{
  _BYTE *v0;

  if (*v0)
    return 0x5555646E65697266;
  else
    return 0x6E456574754D7369;
}

uint64_t sub_235ED4AEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_235ED5000(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_235ED4B10()
{
  sub_235ED4C88();
  return sub_235EE6190();
}

uint64_t sub_235ED4B38()
{
  sub_235ED4C88();
  return sub_235EE619C();
}

uint64_t SetMuteEnabledTransportItem.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];
  char v11;
  char v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638D420);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + 8);
  v10[0] = *(_QWORD *)(v1 + 16);
  v10[1] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_235ED4C88();
  sub_235EE6184();
  v12 = 0;
  sub_235EE6094();
  if (!v2)
  {
    v11 = 1;
    sub_235EE6088();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_235ED4C88()
{
  unint64_t result;

  result = qword_25638D428;
  if (!qword_25638D428)
  {
    result = MEMORY[0x23B7E5230](&unk_235EEA430, &type metadata for SetMuteEnabledTransportItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25638D428);
  }
  return result;
}

uint64_t SetMuteEnabledTransportItem.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638D430);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_235ED4C88();
  sub_235EE6178();
  if (!v2)
  {
    v16 = 0;
    v9 = sub_235EE6064();
    v15 = 1;
    v11 = sub_235EE6058();
    v13 = v12;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_BYTE *)a2 = v9 & 1;
    *(_QWORD *)(a2 + 8) = v11;
    *(_QWORD *)(a2 + 16) = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_235ED4E20@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SetMuteEnabledTransportItem.init(from:)(a1, a2);
}

uint64_t sub_235ED4E34(_QWORD *a1)
{
  return SetMuteEnabledTransportItem.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for SetMuteEnabledTransportItem()
{
  return &type metadata for SetMuteEnabledTransportItem;
}

uint64_t storeEnumTagSinglePayload for SetMuteEnabledTransportItem.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_235ED4EA8 + 4 * byte_235EEA295[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_235ED4EDC + 4 * byte_235EEA290[v4]))();
}

uint64_t sub_235ED4EDC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_235ED4EE4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x235ED4EECLL);
  return result;
}

uint64_t sub_235ED4EF8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x235ED4F00);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_235ED4F04(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_235ED4F0C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SetMuteEnabledTransportItem.CodingKeys()
{
  return &type metadata for SetMuteEnabledTransportItem.CodingKeys;
}

unint64_t sub_235ED4F2C()
{
  unint64_t result;

  result = qword_25638D438;
  if (!qword_25638D438)
  {
    result = MEMORY[0x23B7E5230](&unk_235EEA408, &type metadata for SetMuteEnabledTransportItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25638D438);
  }
  return result;
}

unint64_t sub_235ED4F74()
{
  unint64_t result;

  result = qword_25638D440;
  if (!qword_25638D440)
  {
    result = MEMORY[0x23B7E5230](&unk_235EEA378, &type metadata for SetMuteEnabledTransportItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25638D440);
  }
  return result;
}

unint64_t sub_235ED4FBC()
{
  unint64_t result;

  result = qword_25638D448;
  if (!qword_25638D448)
  {
    result = MEMORY[0x23B7E5230](&unk_235EEA3A0, &type metadata for SetMuteEnabledTransportItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25638D448);
  }
  return result;
}

uint64_t sub_235ED5000(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E456574754D7369 && a2 == 0xED000064656C6261;
  if (v2 || (sub_235EE60D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x5555646E65697266 && a2 == 0xEA00000000004449)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_235EE60D0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_235ED5120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 8) + *(_QWORD *)(a5 + 8));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_235EB947C;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t sub_235ED51B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[13] = a2;
  v3[14] = a3;
  v3[12] = a1;
  return swift_task_switch();
}

uint64_t sub_235ED51CC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  v1 = *(_QWORD **)(v0 + 112);
  v2 = v1[2];
  *(_QWORD *)(v0 + 120) = v2;
  if (!v2)
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(MEMORY[0x24BEE4AF8]);
  v3 = *(int **)(v0 + 96);
  v4 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 128) = 0;
  *(_QWORD *)(v0 + 136) = v4;
  v6 = v1[4];
  v5 = v1[5];
  swift_bridgeObjectRetain();
  *(_QWORD *)(v0 + 80) = v6;
  *(_QWORD *)(v0 + 88) = v5;
  v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v3 + *v3);
  swift_bridgeObjectRetain();
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v7;
  *v7 = v0;
  v7[1] = sub_235ED52A8;
  return v9(v0 + 16, v0 + 80);
}

uint64_t sub_235ED52A8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_235ED5314()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  _QWORD *v16;
  __int128 v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 32);
    v18 = *(_QWORD *)(v0 + 64);
    v4 = *(_QWORD *)(v0 + 72);
    v17 = *(_OWORD *)(v0 + 40);
    v5 = *(_BYTE *)(v0 + 56);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v7 = *(_QWORD **)(v0 + 136);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v7 = sub_235EB05F0(0, v7[2] + 1, 1, *(_QWORD **)(v0 + 136));
    v9 = v7[2];
    v8 = v7[3];
    if (v9 >= v8 >> 1)
      v7 = sub_235EB05F0((_QWORD *)(v8 > 1), v9 + 1, 1, v7);
    v7[2] = v9 + 1;
    v10 = &v7[8 * v9];
    v10[4] = v1;
    v10[5] = v2;
    v10[6] = v3;
    *(_OWORD *)(v10 + 7) = v17;
    *((_BYTE *)v10 + 72) = v5;
    v10[10] = v18;
    v10[11] = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v7 = *(_QWORD **)(v0 + 136);
  }
  v11 = *(_QWORD *)(v0 + 128) + 1;
  if (v11 == *(_QWORD *)(v0 + 120))
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(_QWORD *))(v0 + 8))(v7);
  }
  else
  {
    *(_QWORD *)(v0 + 128) = v11;
    *(_QWORD *)(v0 + 136) = v7;
    v13 = *(_QWORD *)(v0 + 112);
    v14 = *(int **)(v0 + 96);
    v15 = *(_QWORD *)(v13 + 16 * v11 + 40);
    *(_QWORD *)(v0 + 80) = *(_QWORD *)(v13 + 16 * v11 + 32);
    *(_QWORD *)(v0 + 88) = v15;
    v19 = (uint64_t (*)(uint64_t, uint64_t))((char *)v14 + *v14);
    swift_bridgeObjectRetain();
    v16 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 144) = v16;
    *v16 = v0;
    v16[1] = sub_235ED52A8;
    return v19(v0 + 16, v0 + 80);
  }
}

uint64_t sub_235ED54C0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235ED5500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[5] = a2;
  v3[6] = a3;
  v3[4] = a1;
  return swift_task_switch();
}

uint64_t sub_235ED551C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t (*v9)(_QWORD *);
  uint64_t (*v11)(_QWORD *);

  v1 = (_QWORD *)v0[6];
  v2 = v1[2];
  v0[7] = v2;
  if (v2)
  {
    v3 = (int *)v0[4];
    v4 = MEMORY[0x24BEE4AF8];
    v0[8] = 0;
    v0[9] = v4;
    v6 = v1[4];
    v5 = v1[5];
    swift_bridgeObjectRetain();
    v0[2] = v6;
    v0[3] = v5;
    v11 = (uint64_t (*)(_QWORD *))((char *)v3 + *v3);
    swift_bridgeObjectRetain();
    v7 = (_QWORD *)swift_task_alloc();
    v0[10] = v7;
    *v7 = v0;
    v7[1] = sub_235ED55D8;
    v8 = v0 + 2;
    v9 = v11;
  }
  else
  {
    v9 = (uint64_t (*)(_QWORD *))v0[1];
    v8 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v9(v8);
}

uint64_t sub_235ED55D8(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 88) = v1;
  swift_task_dealloc();
  if (v1)
    swift_bridgeObjectRelease();
  else
    *(_BYTE *)(v4 + 96) = a1 & 1;
  return swift_task_switch();
}

uint64_t sub_235ED5658()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(_QWORD *);
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t (*v18)(_QWORD *);

  if (*(_BYTE *)(v0 + 96) == 1)
  {
    v2 = *(_QWORD *)(v0 + 16);
    v1 = *(_QWORD *)(v0 + 24);
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v4 = *(_QWORD **)(v0 + 72);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v4 = sub_235EB04E4(0, v4[2] + 1, 1, *(_QWORD **)(v0 + 72));
    v6 = v4[2];
    v5 = v4[3];
    if (v6 >= v5 >> 1)
      v4 = sub_235EB04E4((_QWORD *)(v5 > 1), v6 + 1, 1, v4);
    v4[2] = v6 + 1;
    v7 = &v4[2 * v6];
    v7[4] = v2;
    v7[5] = v1;
  }
  else
  {
    v4 = *(_QWORD **)(v0 + 72);
  }
  v9 = *(_QWORD *)(v0 + 56);
  v8 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRelease();
  if (v8 + 1 == v9)
  {
    swift_bridgeObjectRelease();
    v10 = *(uint64_t (**)(_QWORD *))(v0 + 8);
    v11 = v4;
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 64) + 1;
    *(_QWORD *)(v0 + 64) = v12;
    *(_QWORD *)(v0 + 72) = v4;
    v13 = *(_QWORD *)(v0 + 48);
    v14 = *(int **)(v0 + 32);
    v15 = *(_QWORD *)(v13 + 16 * v12 + 40);
    *(_QWORD *)(v0 + 16) = *(_QWORD *)(v13 + 16 * v12 + 32);
    *(_QWORD *)(v0 + 24) = v15;
    v18 = (uint64_t (*)(_QWORD *))((char *)v14 + *v14);
    swift_bridgeObjectRetain();
    v16 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v16;
    *v16 = v0;
    v16[1] = sub_235ED55D8;
    v11 = (_QWORD *)(v0 + 16);
    v10 = v18;
  }
  return v10(v11);
}

uint64_t sub_235ED57B0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235ED57F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  return swift_task_switch();
}

uint64_t sub_235ED580C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t *v2;
  _QWORD *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char isUniquelyReferenced_nonNull_native;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 24) + 16);
  if (!v1)
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(MEMORY[0x24BEE4AF8]);
  v2 = (unint64_t *)(swift_bridgeObjectRetain() + 40);
  v3 = (_QWORD *)MEMORY[0x24BEE4B00];
  v29 = v0;
  while (1)
  {
    v5 = *(v2 - 1);
    v4 = *v2;
    swift_bridgeObjectRetain();
    v6 = sub_235ED5B94(v5, v4);
    if (v7)
      break;
    swift_bridgeObjectRelease();
LABEL_4:
    *(_QWORD *)(v0 + 56) = v3;
    v2 += 2;
    if (!--v1)
    {
      v25 = *(_QWORD *)(v0 + 32);
      v26 = *(_QWORD *)(v0 + 40);
      swift_bridgeObjectRelease();
      v27 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 64) = v27;
      v27[2] = v3;
      v27[3] = v25;
      v27[4] = v26;
      v28 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 72) = v28;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25638D498);
      *v28 = v0;
      v28[1] = sub_235ED5AE4;
      return sub_235EE60E8();
    }
  }
  v8 = v6;
  v9 = v7;
  v30 = v5;
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v12 = sub_235EA721C(v8, v9);
  v13 = v3[2];
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (!__OFADD__(v13, v14))
  {
    v16 = v11;
    if (v3[3] < result)
    {
      sub_235EDDC80(result, isUniquelyReferenced_nonNull_native);
      result = sub_235EA721C(v8, v9);
      if ((v16 & 1) != (v17 & 1))
        return sub_235EE6100();
      v12 = result;
      v18 = v30;
      if ((v16 & 1) == 0)
        goto LABEL_15;
LABEL_13:
      v19 = (uint64_t *)(v3[7] + 16 * v12);
      swift_bridgeObjectRelease();
      *v19 = v18;
      v19[1] = v4;
LABEL_17:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v0 = v29;
      goto LABEL_4;
    }
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v18 = v30;
      if ((v11 & 1) != 0)
        goto LABEL_13;
    }
    else
    {
      result = (uint64_t)sub_235EA898C();
      v18 = v30;
      if ((v16 & 1) != 0)
        goto LABEL_13;
    }
LABEL_15:
    v3[(v12 >> 6) + 8] |= 1 << v12;
    v20 = (uint64_t *)(v3[6] + 16 * v12);
    *v20 = v8;
    v20[1] = v9;
    v21 = (uint64_t *)(v3[7] + 16 * v12);
    *v21 = v18;
    v21[1] = v4;
    v22 = v3[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_22;
    v3[2] = v24;
    swift_bridgeObjectRetain();
    goto LABEL_17;
  }
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_235ED5AE4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_235ED5B58()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235ED5B94(uint64_t a1, unint64_t a2)
{
  void *v4;
  int IsEmail;
  void *v6;
  void *v7;
  int IsPhoneNumber;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v17;

  v4 = (void *)sub_235EE5D34();
  IsEmail = ASDestinationIsEmail();

  v6 = (void *)sub_235EE5D34();
  if (IsEmail)
  {
    v7 = (void *)MEMORY[0x23B7E4DC8]();

    if (!v7)
      return 0;
  }
  else
  {
    IsPhoneNumber = ASDestinationIsPhoneNumber();

    if (!IsPhoneNumber)
    {
      if (qword_25638B4D0 != -1)
        swift_once();
      v11 = sub_235EE5CF8();
      __swift_project_value_buffer(v11, (uint64_t)qword_256393B50);
      swift_bridgeObjectRetain_n();
      v12 = sub_235EE5CE0();
      v13 = sub_235EE5ECC();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc();
        v15 = swift_slowAlloc();
        v17 = v15;
        *(_DWORD *)v14 = 136315138;
        swift_bridgeObjectRetain();
        sub_235E911D4(a1, a2, &v17);
        sub_235EE5F2C();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_235E8C000, v12, v13, "Unknown destination type %s", v14, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B7E529C](v15, -1, -1);
        MEMORY[0x23B7E529C](v14, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      return 0;
    }
    v9 = (void *)sub_235EE5D34();
    v7 = (void *)IDSCopyIDForPhoneNumber();

    if (!v7)
      return 0;
  }
  v10 = sub_235EE5D40();

  return v10;
}

void sub_235ED5DC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  void *v21;
  id v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  _BYTE *v32;
  _QWORD v33[2];
  void *v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  _QWORD aBlock[6];

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638D4A0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  if (v39)
  {
    v12 = swift_bridgeObjectRetain();
    v13 = sub_235ED867C(v12);
    swift_bridgeObjectRelease();
    sub_235ED615C((uint64_t)v13);
    swift_release();
    v38 = sub_235EE5DF4();
    swift_bridgeObjectRelease();
    v37 = sub_235EE5D34();
    v36 = objc_msgSend((id)objc_opt_self(), sel_refreshIDInfo);
    v35 = sub_235EE5D34();
    sub_235E8EC68(0, &qword_25638D4A8);
    v14 = sub_235EE5EF0();
    v33[1] = a1;
    v34 = (void *)v14;
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
    v15 = a3;
    v16 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v17 = (v10 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
    v18 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v18 + v16, v11, v8);
    *(_QWORD *)(v18 + v17) = a2;
    v19 = (_QWORD *)(v18 + ((v17 + 15) & 0xFFFFFFFFFFFFFFF8));
    *v19 = v15;
    v19[1] = a4;
    aBlock[4] = sub_235ED8800;
    aBlock[5] = v18;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_235ED7528;
    aBlock[3] = &block_descriptor_4;
    v20 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_release();
    v21 = (void *)v38;
    v22 = v39;
    v24 = v36;
    v23 = (void *)v37;
    v26 = v34;
    v25 = (void *)v35;
    LOBYTE(v17) = objc_msgSend(v39, sel_idInfoForDestinations_service_infoTypes_options_listenerID_queue_completionBlock_, v38, v37, 1, v36, v35, v34, v20);
    _Block_release(v20);

    if ((v17 & 1) == 0)
    {
      if (qword_25638B4D0 != -1)
        swift_once();
      v27 = sub_235EE5CF8();
      __swift_project_value_buffer(v27, (uint64_t)qword_256393B50);
      v28 = sub_235EE5CE0();
      v29 = sub_235EE5ECC();
      if (os_log_type_enabled(v28, v29))
      {
        v30 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v30 = 0;
        _os_log_impl(&dword_235E8C000, v28, v29, "IDS identity query failed to initiate", v30, 2u);
        MEMORY[0x23B7E529C](v30, -1, -1);
      }

      sub_235ED887C();
      v31 = swift_allocError();
      *v32 = 0;
      aBlock[0] = v31;
      sub_235EE5E6C();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_235ED615C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v8;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v9 = MEMORY[0x24BEE4AF8];
    sub_235EDE2D8(0, v1, 0);
    v2 = v9;
    v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_235EDE2D8(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v9;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_235EDE2D8(v5 > 1, v6 + 1, 1);
        v2 = v9;
      }
      v4 += 16;
      *(_QWORD *)(v2 + 16) = v6 + 1;
      sub_235ED8F28(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_235ED6280(uint64_t a1, id a2)
{
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;

  if (a2)
  {
    v3 = a2;
    if (qword_25638B4D0 != -1)
      swift_once();
    v4 = sub_235EE5CF8();
    __swift_project_value_buffer(v4, (uint64_t)qword_256393B50);
    v5 = a2;
    v6 = a2;
    v7 = sub_235EE5CE0();
    v8 = sub_235EE5ECC();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      v10 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v9 = 138412290;
      v11 = a2;
      v26 = _swift_stdlib_bridgeErrorToNSError();
      sub_235EE5F2C();
      *v10 = v26;

      _os_log_impl(&dword_235E8C000, v7, v8, "IDS identity query returned an error: %@", v9, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25429C8D0);
      swift_arrayDestroy();
      MEMORY[0x23B7E529C](v10, -1, -1);
      MEMORY[0x23B7E529C](v9, -1, -1);
    }
    else
    {

    }
    v26 = (uint64_t)a2;
  }
  else
  {
    if (a1)
    {
      v12 = sub_235ED668C(a1);
      if (v12)
      {
        v13 = MEMORY[0x24BDAC7A8](v12);
        sub_235ED8AC8(v13, (void (*)(void **__return_ptr, id, id))sub_235ED88C0);
        v15 = v14;
        swift_bridgeObjectRelease();
        v26 = v15;
        __swift_instantiateConcreteTypeFromMangledName(&qword_25638D4A0);
        return sub_235EE5E78();
      }
    }
    if (qword_25638B4D0 != -1)
      swift_once();
    v17 = sub_235EE5CF8();
    __swift_project_value_buffer(v17, (uint64_t)qword_256393B50);
    swift_bridgeObjectRetain_n();
    v18 = sub_235EE5CE0();
    v19 = sub_235EE5ECC();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      v26 = v21;
      *(_DWORD *)v20 = 136315138;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_25638D4B8);
      v22 = sub_235EE5D4C();
      sub_235E911D4(v22, v23, &v26);
      sub_235EE5F2C();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_235E8C000, v18, v19, "Invalid results from IDS identity query: %s", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B7E529C](v21, -1, -1);
      MEMORY[0x23B7E529C](v20, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_235ED887C();
    v24 = swift_allocError();
    *v25 = 1;
    v26 = v24;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25638D4A0);
  return sub_235EE5E6C();
}

uint64_t sub_235ED668C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30[32];
  _OWORD v31[2];
  _OWORD v32[2];
  uint64_t v33;
  _OWORD v34[2];
  _OWORD v35[2];
  uint64_t v36;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25638D4D8);
    v2 = sub_235EE6034();
  }
  else
  {
    v2 = MEMORY[0x24BEE4B00];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = (v5 - 1) & v5;
      v12 = __clz(__rbit64(v5)) | (v8 << 6);
      v13 = v8;
      goto LABEL_28;
    }
    v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
    if (v14 >= v27)
      goto LABEL_42;
    v15 = *(_QWORD *)(v28 + 8 * v14);
    v13 = v8 + 1;
    if (!v15)
    {
      v13 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_42;
      v15 = *(_QWORD *)(v28 + 8 * v13);
      if (!v15)
      {
        v13 = v8 + 3;
        if (v8 + 3 >= v27)
          goto LABEL_42;
        v15 = *(_QWORD *)(v28 + 8 * v13);
        if (!v15)
        {
          v13 = v8 + 4;
          if (v8 + 4 >= v27)
            goto LABEL_42;
          v15 = *(_QWORD *)(v28 + 8 * v13);
          if (!v15)
            break;
        }
      }
    }
LABEL_27:
    v11 = (v15 - 1) & v15;
    v12 = __clz(__rbit64(v15)) + (v13 << 6);
LABEL_28:
    sub_235ED8EAC(*(_QWORD *)(a1 + 48) + 40 * v12, (uint64_t)v34);
    sub_235E912A4(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v35 + 8);
    v32[0] = v35[0];
    v32[1] = v35[1];
    v33 = v36;
    v31[0] = v34[0];
    v31[1] = v34[1];
    v17 = (void *)sub_235EE5F8C();
    objc_opt_self();
    v18 = swift_dynamicCastObjCClass();
    if (!v18)
    {

      sub_235ED8EE8((uint64_t)v31);
      swift_release();
      goto LABEL_41;
    }
    v19 = v18;
    sub_235E912A4((uint64_t)v32 + 8, (uint64_t)v30);
    sub_235ED8EE8((uint64_t)v31);
    sub_235E8EC68(0, &qword_25638D4C8);
    if ((swift_dynamicCast() & 1) == 0)
    {

      swift_release();
LABEL_41:
      sub_235ED8EA4();
      swift_release();
      return 0;
    }
    result = sub_235EE5F08();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = 8 * v9;
    *(_QWORD *)(*(_QWORD *)(v2 + 48) + v10) = v19;
    *(_QWORD *)(*(_QWORD *)(v2 + 56) + v10) = v29;
    ++*(_QWORD *)(v2 + 16);
    v8 = v13;
    v5 = v11;
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_42:
    swift_release();
    sub_235ED8EA4();
    return v2;
  }
  v15 = *(_QWORD *)(v28 + 8 * v16);
  if (v15)
  {
    v13 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v13 >= v27)
      goto LABEL_42;
    v15 = *(_QWORD *)(v28 + 8 * v13);
    ++v16;
    if (v15)
      goto LABEL_27;
  }
LABEL_45:
  __break(1u);
  return result;
}

void sub_235ED6A88(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, _OWORD *a5@<X8>)
{
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  void *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint8_t *v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  _BOOL8 v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _OWORD *v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  os_log_type_t v55;
  uint64_t v56;
  _QWORD *v57;
  _OWORD *v58;
  id v59;
  uint64_t v60;
  id v61;
  os_log_type_t v62;
  uint8_t *v63;
  _QWORD *v64;
  _OWORD *v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  uint8_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v82;
  unint64_t v83;
  uint8_t *buf;
  unint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;

  v9 = sub_235EE5D40();
  v11 = v10;
  if (!*(_QWORD *)(a2 + 16))
    goto LABEL_20;
  swift_bridgeObjectRetain();
  v12 = sub_235EA721C(v9, v11);
  if ((v13 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_20:
    if (qword_25638B4D0 != -1)
      swift_once();
    v43 = sub_235EE5CF8();
    __swift_project_value_buffer(v43, (uint64_t)qword_256393B50);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v44 = sub_235EE5CE0();
    v45 = sub_235EE5ECC();
    if (!os_log_type_enabled(v44, v45))
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      goto LABEL_26;
    }
    v46 = swift_slowAlloc();
    v47 = swift_slowAlloc();
    v87 = (_QWORD *)v47;
    *(_DWORD *)v46 = 136315394;
    swift_bridgeObjectRetain();
    v88 = sub_235E911D4(v9, v11, (uint64_t *)&v87);
    sub_235EE5F2C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v46 + 12) = 2080;
    swift_bridgeObjectRetain();
    v48 = sub_235EE5D10();
    v49 = a5;
    v51 = v50;
    swift_bridgeObjectRelease();
    v88 = sub_235E911D4(v48, v51, (uint64_t *)&v87);
    sub_235EE5F2C();
    swift_bridgeObjectRelease_n();
    a5 = v49;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_235E8C000, v44, v45, "Failed to map result destination to raw destination %s, %s", (uint8_t *)v46, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B7E529C](v47, -1, -1);
    v52 = v46;
LABEL_24:
    MEMORY[0x23B7E529C](v52, -1, -1);

LABEL_26:
    a5[2] = 0u;
    a5[3] = 0u;
    *a5 = 0u;
    a5[1] = 0u;
    return;
  }
  v78 = a3;
  v79 = v9;
  v14 = (uint64_t *)(*(_QWORD *)(a2 + 56) + 16 * v12);
  v15 = *v14;
  v16 = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = objc_msgSend(a1, sel_status);
  if ((unint64_t)v17 >= 3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_25638B4D0 != -1)
      swift_once();
    v53 = sub_235EE5CF8();
    __swift_project_value_buffer(v53, (uint64_t)qword_256393B50);
    v54 = a1;
    v44 = sub_235EE5CE0();
    v55 = sub_235EE5ECC();
    if (!os_log_type_enabled(v44, v55))
    {

      goto LABEL_26;
    }
    v56 = swift_slowAlloc();
    v57 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v56 = 134218242;
    objc_msgSend(v54, sel_status);
    sub_235EE5F2C();
    *(_WORD *)(v56 + 12) = 2112;
    v87 = v54;
    v58 = a5;
    v59 = v54;
    sub_235EE5F2C();
    *v57 = v54;

    a5 = v58;
    _os_log_impl(&dword_235E8C000, v44, v55, "Failed to parse reachability %ld, %@", (uint8_t *)v56, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25429C8D0);
    swift_arrayDestroy();
    MEMORY[0x23B7E529C](v57, -1, -1);
    v52 = v56;
    goto LABEL_24;
  }
  v18 = (uint64_t)v17;
  v80 = v11;
  v19 = objc_msgSend(a1, sel_endpoints);
  if (!v19)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_25638B4D0 == -1)
    {
LABEL_33:
      v60 = sub_235EE5CF8();
      __swift_project_value_buffer(v60, (uint64_t)qword_256393B50);
      v61 = a1;
      v44 = sub_235EE5CE0();
      v62 = sub_235EE5ECC();
      if (!os_log_type_enabled(v44, v62))
      {

        goto LABEL_26;
      }
      v63 = (uint8_t *)swift_slowAlloc();
      v64 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v63 = 138412290;
      v87 = v61;
      v65 = a5;
      v66 = v61;
      sub_235EE5F2C();
      *v64 = v61;

      a5 = v65;
      _os_log_impl(&dword_235E8C000, v44, v62, "IDS identity query didn't return any endpoints: %@", v63, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25429C8D0);
      swift_arrayDestroy();
      MEMORY[0x23B7E529C](v64, -1, -1);
      v52 = (uint64_t)v63;
      goto LABEL_24;
    }
LABEL_45:
    swift_once();
    goto LABEL_33;
  }
  v20 = v19;
  v75 = v15;
  v76 = v18;
  sub_235E8EC68(0, &qword_25638D4D0);
  v21 = sub_235EE5E00();

  if (v21 >> 62)
  {
    swift_bridgeObjectRetain();
    v22 = sub_235EE6010();
    swift_bridgeObjectRelease();
  }
  else
  {
    v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v23 = a4;
  v77 = (uint64_t *)a5;
  if (v22)
  {
    v87 = (_QWORD *)MEMORY[0x24BEE4AF8];
    sub_235EDE2F4(0, v22 & ~(v22 >> 63), 0);
    if ((v22 & 0x8000000000000000) == 0)
    {
      v24 = 0;
      v83 = v21 & 0xC000000000000001;
      v82 = *MEMORY[0x24BE4FDC8];
      buf = (uint8_t *)v22;
      v85 = v21;
      do
      {
        if (v83)
          v25 = (id)MEMORY[0x23B7E4BA0](v24, v21);
        else
          v25 = *(id *)(v21 + 8 * (_QWORD)v24 + 32);
        v26 = v25;
        v27 = objc_msgSend(v25, sel_capabilities);
        v28 = objc_msgSend(v27, sel_valueForCapability_, v82);

        v29 = v28 == (id)1;
        v30 = objc_msgSend(v26, sel_pushToken);
        v31 = sub_235EE5AB8();
        v33 = v32;

        v34 = objc_msgSend(v26, sel_URI);
        v35 = objc_msgSend(v34, sel_prefixedURI);

        v36 = sub_235EE5D40();
        v38 = v37;

        v39 = (uint64_t)v87;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_235EDE2F4(0, v87[2] + 1, 1);
          v39 = (uint64_t)v87;
        }
        v41 = *(_QWORD *)(v39 + 16);
        v40 = *(_QWORD *)(v39 + 24);
        if (v41 >= v40 >> 1)
        {
          sub_235EDE2F4(v40 > 1, v41 + 1, 1);
          v39 = (uint64_t)v87;
        }
        ++v24;
        *(_QWORD *)(v39 + 16) = v41 + 1;
        v42 = (_QWORD *)(v39 + 40 * v41);
        v42[4] = v29;
        v42[5] = v31;
        v42[6] = v33;
        v42[7] = v36;
        v42[8] = v38;
        v21 = v85;
      }
      while (buf != v24);
      swift_bridgeObjectRelease();
      v23 = a4;
      goto LABEL_36;
    }
    __break(1u);
    goto LABEL_45;
  }
  swift_bridgeObjectRelease();
  v39 = MEMORY[0x24BEE4AF8];
LABEL_36:
  v67 = qword_25638B4D0;
  swift_bridgeObjectRetain();
  if (v67 != -1)
    swift_once();
  v68 = sub_235EE5CF8();
  __swift_project_value_buffer(v68, (uint64_t)qword_256393B50);
  v69 = v80;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v70 = sub_235EE5CE0();
  v71 = sub_235EE5ED8();
  if (os_log_type_enabled(v70, v71))
  {
    v72 = (uint8_t *)swift_slowAlloc();
    v86 = swift_slowAlloc();
    v88 = v86;
    *(_DWORD *)v72 = 136315138;
    v73 = v75;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_235EE5D7C();
    swift_bridgeObjectRetain();
    v74 = v78;
    sub_235EE5D7C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v87 = (_QWORD *)sub_235E911D4(v75, v16, &v88);
    sub_235EE5F2C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v69 = v80;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_235E8C000, v70, v71, "Found invitation destination: %s", v72, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B7E529C](v86, -1, -1);
    MEMORY[0x23B7E529C](v72, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v74 = v78;
    v73 = v75;
  }
  *v77 = v79;
  v77[1] = v69;
  v77[2] = v73;
  v77[3] = v16;
  v77[4] = v39;
  v77[5] = v76;
  v77[6] = v74;
  v77[7] = v23;
}

uint64_t sub_235ED7528(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v4)(uint64_t, void *);
  uint64_t v5;
  id v6;

  v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
    v5 = sub_235EE5D04();
  else
    v5 = 0;
  swift_retain();
  v6 = a3;
  v4(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_235ED75BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[16] = a3;
  v4[17] = v3;
  v4[14] = a1;
  v4[15] = a2;
  return swift_task_switch();
}

uint64_t sub_235ED75D8()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;

  if (qword_25429CF60 != -1)
    swift_once();
  v1 = sub_235EE5CF8();
  v0[18] = __swift_project_value_buffer(v1, (uint64_t)qword_25429CF70);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v2 = sub_235EE5CE0();
  v3 = sub_235EE5ED8();
  v4 = os_log_type_enabled(v2, v3);
  v5 = v0[16];
  if (v4)
  {
    v17 = v0[15];
    v6 = swift_slowAlloc();
    v18 = swift_slowAlloc();
    v20 = v18;
    *(_DWORD *)v6 = 136315394;
    v7 = swift_bridgeObjectRetain();
    v8 = MEMORY[0x23B7E49E4](v7, MEMORY[0x24BEE0D00]);
    v10 = v9;
    swift_bridgeObjectRelease();
    v0[12] = sub_235E911D4(v8, v10, &v20);
    sub_235EE5F2C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v6 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[13] = sub_235E911D4(v17, v5, &v20);
    sub_235EE5F2C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_235E8C000, v2, v3, "Querying destinations %s on service %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B7E529C](v18, -1, -1);
    MEMORY[0x23B7E529C](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  v12 = v0[16];
  v11 = v0[17];
  v13 = v0[15];
  v14 = (_QWORD *)swift_task_alloc();
  v0[19] = v14;
  v14[2] = v11;
  v14[3] = v13;
  v14[4] = v12;
  v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_25638D470 + dword_25638D470);
  v15 = (_QWORD *)swift_task_alloc();
  v0[20] = v15;
  *v15 = v0;
  v15[1] = sub_235ED7880;
  return v19((uint64_t)&unk_25638D468, (uint64_t)v14, v0[14]);
}

uint64_t sub_235ED7880(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 168) = a1;
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_235ED78E4()
{
  _QWORD *v0;
  NSObject *v1;
  os_log_type_t v2;
  _BOOL4 v3;
  uint64_t v4;
  uint8_t *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint8_t *v24;
  NSObject *v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  swift_bridgeObjectRetain_n();
  v1 = sub_235EE5CE0();
  v2 = sub_235EE5ED8();
  v3 = os_log_type_enabled(v1, v2);
  v4 = v0[21];
  if (v3)
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v26 = swift_slowAlloc();
    v28 = v26;
    *(_DWORD *)v5 = 136315138;
    v6 = *(_QWORD *)(v4 + 16);
    v7 = MEMORY[0x24BEE4AF8];
    if (v6)
    {
      v24 = v5;
      v25 = v1;
      v8 = v0[21];
      v29 = MEMORY[0x24BEE4AF8];
      sub_235EDE2BC(0, v6, 0);
      v7 = v29;
      v9 = (uint64_t *)(v8 + 48);
      do
      {
        v10 = v9[1];
        v30 = *v9;
        v31 = v10;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        sub_235EE5D7C();
        swift_bridgeObjectRetain();
        sub_235EE5D7C();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_235EE5D7C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v11 = v30;
        v29 = v7;
        v13 = *(_QWORD *)(v7 + 16);
        v12 = *(_QWORD *)(v7 + 24);
        if (v13 >= v12 >> 1)
        {
          sub_235EDE2BC(v12 > 1, v13 + 1, 1);
          v7 = v29;
        }
        *(_QWORD *)(v7 + 16) = v13 + 1;
        v14 = v7 + 16 * v13;
        *(_QWORD *)(v14 + 32) = v11;
        *(_QWORD *)(v14 + 40) = v10;
        v9 += 8;
        --v6;
      }
      while (v6);
      v5 = v24;
      v1 = v25;
    }
    v15 = MEMORY[0x23B7E49E4](v7, MEMORY[0x24BEE0D00]);
    v17 = v16;
    swift_bridgeObjectRelease();
    v0[11] = sub_235E911D4(v15, v17, &v28);
    sub_235EE5F2C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_235E8C000, v1, v2, "Found cached results %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B7E529C](v26, -1, -1);
    MEMORY[0x23B7E529C](v5, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v19 = v0[16];
  v18 = v0[17];
  v20 = v0[15];
  v21 = (_QWORD *)swift_task_alloc();
  v0[22] = v21;
  v21[2] = v18;
  v21[3] = v20;
  v21[4] = v19;
  v27 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_25638D488 + dword_25638D488);
  v22 = (_QWORD *)swift_task_alloc();
  v0[23] = v22;
  *v22 = v0;
  v22[1] = sub_235ED7C2C;
  return v27((uint64_t)&unk_25638D480, (uint64_t)v21, v0[14]);
}

uint64_t sub_235ED7C2C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v6 = *v1;
  *(_QWORD *)(v6 + 192) = a1;
  swift_task_dealloc();
  swift_task_dealloc();
  v3 = swift_task_alloc();
  *(_QWORD *)(v6 + 200) = v3;
  *(_QWORD *)v3 = v6;
  *(_QWORD *)(v3 + 8) = sub_235ED7CC8;
  v4 = *(_QWORD *)(v6 + 120);
  *(_OWORD *)(v3 + 40) = *(_OWORD *)(v6 + 128);
  *(_QWORD *)(v3 + 24) = a1;
  *(_QWORD *)(v3 + 32) = v4;
  return swift_task_switch();
}

uint64_t sub_235ED7CC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 208) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (!v1)
    return swift_task_switch();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_235ED7D58()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  _BOOL4 v3;
  uint64_t v4;
  uint8_t *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint8_t *v31;
  NSObject *v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  swift_bridgeObjectRetain_n();
  v1 = sub_235EE5CE0();
  v2 = sub_235EE5ED8();
  v3 = os_log_type_enabled(v1, v2);
  v4 = *(_QWORD *)(v0 + 208);
  if (v3)
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v35 = swift_slowAlloc();
    v38 = v35;
    *(_DWORD *)v5 = 136315138;
    v6 = *(_QWORD *)(v4 + 16);
    v7 = MEMORY[0x24BEE4AF8];
    if (v6)
    {
      v31 = v5;
      v32 = v1;
      v8 = *(_QWORD *)(v0 + 208);
      v39 = MEMORY[0x24BEE4AF8];
      sub_235EDE2BC(0, v6, 0);
      v7 = v39;
      v9 = (uint64_t *)(v8 + 48);
      do
      {
        v10 = v9[1];
        v40 = *v9;
        v41 = v10;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        sub_235EE5D7C();
        swift_bridgeObjectRetain();
        sub_235EE5D7C();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_235EE5D7C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v11 = v40;
        v39 = v7;
        v13 = *(_QWORD *)(v7 + 16);
        v12 = *(_QWORD *)(v7 + 24);
        if (v13 >= v12 >> 1)
        {
          sub_235EDE2BC(v12 > 1, v13 + 1, 1);
          v7 = v39;
        }
        *(_QWORD *)(v7 + 16) = v13 + 1;
        v14 = v7 + 16 * v13;
        *(_QWORD *)(v14 + 32) = v11;
        *(_QWORD *)(v14 + 40) = v10;
        v9 += 8;
        --v6;
      }
      while (v6);
      v5 = v31;
      v1 = v32;
    }
    v15 = MEMORY[0x23B7E49E4](v7, MEMORY[0x24BEE0D00]);
    v17 = v16;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 80) = sub_235E911D4(v15, v17, &v38);
    sub_235EE5F2C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_235E8C000, v1, v2, "Fetched new results %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B7E529C](v35, -1, -1);
    MEMORY[0x23B7E529C](v5, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v18 = *(_QWORD *)(v0 + 208);
  v19 = *(_QWORD *)(v18 + 16);
  *(_QWORD *)(v0 + 216) = v19;
  if (v19)
  {
    v20 = *(_QWORD **)(v0 + 136);
    *(_QWORD *)(v0 + 224) = 0;
    v21 = *(_QWORD *)(v18 + 32);
    v22 = *(_QWORD *)(v18 + 40);
    *(_QWORD *)(v0 + 232) = v22;
    v23 = *(_QWORD *)(v18 + 56);
    v34 = *(_QWORD *)(v18 + 48);
    v36 = v21;
    *(_QWORD *)(v0 + 240) = v23;
    v24 = *(_QWORD *)(v18 + 64);
    *(_QWORD *)(v0 + 248) = v24;
    v33 = *(_BYTE *)(v18 + 72);
    v25 = *(_QWORD *)(v18 + 80);
    v26 = *(_QWORD *)(v18 + 88);
    *(_QWORD *)(v0 + 256) = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v28 = v20[3];
    v27 = v20[4];
    swift_bridgeObjectRetain();
    __swift_project_boxed_opaque_existential_1(v20, v28);
    *(_QWORD *)(v0 + 16) = v36;
    *(_QWORD *)(v0 + 24) = v22;
    *(_QWORD *)(v0 + 32) = v34;
    *(_QWORD *)(v0 + 40) = v23;
    *(_QWORD *)(v0 + 48) = v24;
    *(_BYTE *)(v0 + 56) = v33;
    *(_QWORD *)(v0 + 64) = v25;
    *(_QWORD *)(v0 + 72) = v26;
    v37 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v27 + 8)
                                                                                                + *(_QWORD *)(v27 + 8));
    v29 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 264) = v29;
    *v29 = v0;
    v29[1] = sub_235ED8170;
    return v37(v0 + 16, v34, v23, v25, v26, v28, v27);
  }
  else
  {
    v40 = *(_QWORD *)(v0 + 168);
    sub_235EDB7F8(v18);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v40);
  }
}

uint64_t sub_235ED8170()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_235ED81C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v20;

  v2 = *(_QWORD *)(v0 + 216);
  v1 = *(_QWORD *)(v0 + 224);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v1 + 1 == v2)
  {
    swift_bridgeObjectRelease();
    v20 = *(_QWORD *)(v0 + 168);
    sub_235EDB7F8(*(_QWORD *)(v0 + 208));
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v20);
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 224) + 1;
    *(_QWORD *)(v0 + 224) = v4;
    v5 = *(_QWORD **)(v0 + 136);
    v6 = *(_QWORD *)(v0 + 208) + (v4 << 6);
    v7 = *(_QWORD *)(v6 + 32);
    v8 = *(_QWORD *)(v6 + 40);
    *(_QWORD *)(v0 + 232) = v8;
    v9 = *(_QWORD *)(v6 + 56);
    v17 = *(_QWORD *)(v6 + 48);
    v18 = v7;
    *(_QWORD *)(v0 + 240) = v9;
    v10 = *(_QWORD *)(v6 + 64);
    *(_QWORD *)(v0 + 248) = v10;
    v16 = *(_BYTE *)(v6 + 72);
    v11 = *(_QWORD *)(v6 + 80);
    v12 = *(_QWORD *)(v6 + 88);
    *(_QWORD *)(v0 + 256) = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13 = v5[3];
    v14 = v5[4];
    __swift_project_boxed_opaque_existential_1(v5, v13);
    *(_QWORD *)(v0 + 16) = v18;
    *(_QWORD *)(v0 + 24) = v8;
    *(_QWORD *)(v0 + 32) = v17;
    *(_QWORD *)(v0 + 40) = v9;
    *(_QWORD *)(v0 + 48) = v10;
    *(_BYTE *)(v0 + 56) = v16;
    *(_QWORD *)(v0 + 64) = v11;
    *(_QWORD *)(v0 + 72) = v12;
    v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v14 + 8)
                                                                                                + *(_QWORD *)(v14 + 8));
    v15 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 264) = v15;
    *v15 = v0;
    v15[1] = sub_235ED8170;
    return v19(v0 + 16, v17, v9, v11, v12, v13, v14);
  }
}

uint64_t sub_235ED8374(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[4] = a4;
  v5[5] = a5;
  v5[2] = a1;
  v5[3] = a3;
  v6 = a2[1];
  v5[6] = *a2;
  v5[7] = v6;
  return swift_task_switch();
}

uint64_t sub_235ED8398()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);

  v1 = (_QWORD *)v0[3];
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v6 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v3 + 16)
                                                                                        + *(_QWORD *)(v3 + 16));
  v4 = (_QWORD *)swift_task_alloc();
  v0[8] = v4;
  *v4 = v0;
  v4[1] = sub_235ED8420;
  return v6(v0[2], v0[6], v0[7], v0[4], v0[5], v2, v3);
}

uint64_t sub_235ED8420()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_235ED846C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[2] = a2;
  v4[3] = a3;
  v5 = *a1;
  v6 = a1[1];
  v4[4] = a4;
  v4[5] = v5;
  v4[6] = v6;
  return swift_task_switch();
}

uint64_t sub_235ED8490()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);

  v1 = (_QWORD *)v0[2];
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v6 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v3 + 24)
                                                                                + *(_QWORD *)(v3 + 24));
  v4 = (_QWORD *)swift_task_alloc();
  v0[7] = v4;
  *v4 = v0;
  v4[1] = sub_235ED8514;
  return v6(v0[5], v0[6], v0[3], v0[4], v2, v3);
}

uint64_t sub_235ED8514(char a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(BOOL))(v4 + 8))((a1 & 1) == 0);
}

uint64_t sub_235ED856C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;

  v11 = *(_OWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 32);
  v7 = swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *(_QWORD *)v7 = v3;
  *(_QWORD *)(v7 + 8) = sub_235E8E5E8;
  *(_OWORD *)(v7 + 24) = v11;
  *(_QWORD *)(v7 + 16) = a1;
  v8 = *a2;
  v9 = a2[1];
  *(_QWORD *)(v7 + 40) = v6;
  *(_QWORD *)(v7 + 48) = v8;
  *(_QWORD *)(v7 + 56) = v9;
  return swift_task_switch();
}

uint64_t sub_235ED85F8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;

  v9 = *(_OWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_235EB947C;
  *(_OWORD *)(v5 + 16) = v9;
  v6 = *a1;
  v7 = a1[1];
  *(_QWORD *)(v5 + 32) = v4;
  *(_QWORD *)(v5 + 40) = v6;
  *(_QWORD *)(v5 + 48) = v7;
  return swift_task_switch();
}

_QWORD *sub_235ED867C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25429C940);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 17;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  v6 = sub_235ED88CC((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_235ED8EA4();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

void sub_235ED8760(uint64_t a1)
{
  uint64_t *v1;

  sub_235ED5DC4(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_235ED876C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638D4A0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_235ED8800(uint64_t a1, void *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_25638D4A0);
  return sub_235ED6280(a1, a2);
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

unint64_t sub_235ED887C()
{
  unint64_t result;

  result = qword_25638D4B0;
  if (!qword_25638D4B0)
  {
    result = MEMORY[0x23B7E5230](&protocol conformance descriptor for InvitationDestinationError, &type metadata for InvitationDestinationError);
    atomic_store(result, (unint64_t *)&qword_25638D4B0);
  }
  return result;
}

void sub_235ED88C0(void *a1@<X1>, _OWORD *a2@<X8>)
{
  uint64_t *v2;

  sub_235ED6A88(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_235ED88CC(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

void sub_235ED8AC8(unint64_t a1, void (*a2)(void **__return_ptr, id, id))
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  void *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  _QWORD *v33;
  int64_t v34;
  unint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  if ((a1 & 0xC000000000000001) != 0)
  {
    v35 = 0;
    v3 = 0;
    v4 = 0;
    v5 = sub_235EE5FEC() | 0x8000000000000000;
  }
  else
  {
    v6 = -1 << *(_BYTE *)(a1 + 32);
    v3 = ~v6;
    v35 = a1 + 64;
    v7 = -v6;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v4 = v8 & *(_QWORD *)(a1 + 64);
    v5 = a1;
  }
  swift_bridgeObjectRetain();
  v9 = 0;
  v33 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v34 = (unint64_t)(v3 + 64) >> 6;
LABEL_8:
  v10 = v9;
  v11 = v4;
  while (1)
  {
    if ((v5 & 0x8000000000000000) != 0)
    {
      v20 = sub_235EE5FF8();
      if (!v20)
        goto LABEL_39;
      v22 = v21;
      v43 = v20;
      sub_235E8EC68(0, &qword_25638D4C0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v15 = v36;
      swift_unknownObjectRelease();
      v43 = v22;
      sub_235E8EC68(0, &qword_25638D4C8);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v16 = v36;
      swift_unknownObjectRelease();
      v9 = v10;
      v4 = v11;
      if (!v15)
        goto LABEL_39;
      goto LABEL_11;
    }
    if (!v11)
      break;
    v4 = (v11 - 1) & v11;
    v12 = __clz(__rbit64(v11)) | (v10 << 6);
    v9 = v10;
LABEL_10:
    v13 = 8 * v12;
    v14 = *(void **)(*(_QWORD *)(v5 + 56) + v13);
    v15 = *(id *)(*(_QWORD *)(v5 + 48) + v13);
    v16 = v14;
    if (!v15)
      goto LABEL_39;
LABEL_11:
    a2(&v36, v15, v16);

    v17 = v37;
    v10 = v9;
    v11 = v4;
    if (v37)
    {
      v24 = v36;
      v25 = v38;
      v29 = v39;
      v31 = v41;
      v32 = v40;
      v30 = v42;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v33 = sub_235EB05F0(0, v33[2] + 1, 1, v33);
      v27 = v33[2];
      v26 = v33[3];
      if (v27 >= v26 >> 1)
        v33 = sub_235EB05F0((_QWORD *)(v26 > 1), v27 + 1, 1, v33);
      v33[2] = v27 + 1;
      v28 = &v33[8 * v27];
      v28[4] = v24;
      v28[5] = v17;
      v28[6] = v25;
      *(_OWORD *)(v28 + 7) = v29;
      *((_BYTE *)v28 + 72) = v32;
      v28[10] = v31;
      v28[11] = v30;
      goto LABEL_8;
    }
  }
  v9 = v10 + 1;
  if (!__OFADD__(v10, 1))
  {
    if (v9 >= v34)
      goto LABEL_39;
    v18 = *(_QWORD *)(v35 + 8 * v9);
    if (!v18)
    {
      v19 = v10 + 2;
      if (v10 + 2 >= v34)
        goto LABEL_39;
      v18 = *(_QWORD *)(v35 + 8 * v19);
      if (v18)
        goto LABEL_23;
      v19 = v10 + 3;
      if (v10 + 3 >= v34)
        goto LABEL_39;
      v18 = *(_QWORD *)(v35 + 8 * v19);
      if (v18)
        goto LABEL_23;
      v19 = v10 + 4;
      if (v10 + 4 >= v34)
        goto LABEL_39;
      v18 = *(_QWORD *)(v35 + 8 * v19);
      if (v18)
      {
LABEL_23:
        v9 = v19;
      }
      else
      {
        v9 = v10 + 5;
        if (v10 + 5 >= v34)
          goto LABEL_39;
        v18 = *(_QWORD *)(v35 + 8 * v9);
        if (!v18)
        {
          v23 = v10 + 6;
          while (v34 != v23)
          {
            v18 = *(_QWORD *)(v35 + 8 * v23++);
            if (v18)
            {
              v9 = v23 - 1;
              goto LABEL_24;
            }
          }
LABEL_39:
          sub_235ED8EA4();
          return;
        }
      }
    }
LABEL_24:
    v4 = (v18 - 1) & v18;
    v12 = __clz(__rbit64(v18)) + (v9 << 6);
    goto LABEL_10;
  }
  __break(1u);
}

uint64_t sub_235ED8EA4()
{
  return swift_release();
}

uint64_t sub_235ED8EAC(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_235ED8EE8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638D4E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_235ED8F28(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

ValueMetadata *type metadata accessor for InvitationDestinationQuery()
{
  return &type metadata for InvitationDestinationQuery;
}

ActivitySharingClient::InvitationDestinationReachability_optional __swiftcall InvitationDestinationReachability.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 3;
  if ((unint64_t)rawValue < 3)
    v2 = rawValue;
  *v1 = v2;
  return (ActivitySharingClient::InvitationDestinationReachability_optional)rawValue;
}

uint64_t InvitationDestinationReachability.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

unint64_t sub_235ED8F68()
{
  unint64_t result;

  result = qword_25638D4E8;
  if (!qword_25638D4E8)
  {
    result = MEMORY[0x23B7E5230](&protocol conformance descriptor for InvitationDestinationReachability, &type metadata for InvitationDestinationReachability);
    atomic_store(result, (unint64_t *)&qword_25638D4E8);
  }
  return result;
}

ActivitySharingClient::InvitationDestinationReachability_optional sub_235ED8FAC(Swift::Int *a1)
{
  return InvitationDestinationReachability.init(rawValue:)(*a1);
}

uint64_t sub_235ED8FB4()
{
  sub_235ED9128();
  return sub_235EE5DE8();
}

uint64_t sub_235ED9010()
{
  sub_235ED9128();
  return sub_235EE5DB8();
}

uint64_t storeEnumTagSinglePayload for InvitationDestinationReachability(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_235ED90A8 + 4 * byte_235EEA505[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_235ED90DC + 4 * asc_235EEA500[v4]))();
}

uint64_t sub_235ED90DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_235ED90E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x235ED90ECLL);
  return result;
}

uint64_t sub_235ED90F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x235ED9100);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_235ED9104(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_235ED910C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InvitationDestinationReachability()
{
  return &type metadata for InvitationDestinationReachability;
}

unint64_t sub_235ED9128()
{
  unint64_t result;

  result = qword_25638D4F0;
  if (!qword_25638D4F0)
  {
    result = MEMORY[0x23B7E5230](&protocol conformance descriptor for InvitationDestinationReachability, &type metadata for InvitationDestinationReachability);
    atomic_store(result, (unint64_t *)&qword_25638D4F0);
  }
  return result;
}

uint64_t SecureCloudClient.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for XPCClient();
  swift_allocObject();
  result = XPCClient.init()();
  a1[3] = v2;
  a1[4] = (uint64_t)&protocol witness table for XPCClient;
  *a1 = result;
  return result;
}

uint64_t SecureCloudClient.activate()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t SecureCloudClient.acceptInvite(from:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  return swift_task_switch();
}

uint64_t sub_235ED91F4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD, _UNKNOWN **, uint64_t, uint64_t);

  v2 = v0[5];
  v1 = (_QWORD *)v0[6];
  v3 = v0[4];
  v4 = v1[3];
  v5 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v4);
  v0[2] = v3;
  v0[3] = v2;
  v8 = (uint64_t (*)(uint64_t, _QWORD *, _QWORD, _UNKNOWN **, uint64_t, uint64_t))(**(int **)(v5 + 32)
                                                                                        + *(_QWORD *)(v5 + 32));
  v6 = (_QWORD *)swift_task_alloc();
  v0[7] = v6;
  *v6 = v0;
  v6[1] = sub_235ED92A0;
  return v8(1105, v0 + 2, MEMORY[0x24BEE0D00], &protocol witness table for String, v4, v5);
}

uint64_t sub_235ED92A0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t SecureCloudClient.withdrawInvite(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  return swift_task_switch();
}

uint64_t sub_235ED9328()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD, _UNKNOWN **, uint64_t, uint64_t);

  v2 = v0[5];
  v1 = (_QWORD *)v0[6];
  v3 = v0[4];
  v4 = v1[3];
  v5 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v4);
  v0[2] = v3;
  v0[3] = v2;
  v8 = (uint64_t (*)(uint64_t, _QWORD *, _QWORD, _UNKNOWN **, uint64_t, uint64_t))(**(int **)(v5 + 32)
                                                                                        + *(_QWORD *)(v5 + 32));
  v6 = (_QWORD *)swift_task_alloc();
  v0[7] = v6;
  *v6 = v0;
  v6[1] = sub_235ED93D4;
  return v8(1106, v0 + 2, MEMORY[0x24BEE0D00], &protocol witness table for String, v4, v5);
}

uint64_t sub_235ED93D4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t SecureCloudClient.ignoreInvite(from:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  return swift_task_switch();
}

uint64_t sub_235ED945C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD, _UNKNOWN **, uint64_t, uint64_t);

  v2 = v0[5];
  v1 = (_QWORD *)v0[6];
  v3 = v0[4];
  v4 = v1[3];
  v5 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v4);
  v0[2] = v3;
  v0[3] = v2;
  v8 = (uint64_t (*)(uint64_t, _QWORD *, _QWORD, _UNKNOWN **, uint64_t, uint64_t))(**(int **)(v5 + 32)
                                                                                        + *(_QWORD *)(v5 + 32));
  v6 = (_QWORD *)swift_task_alloc();
  v0[7] = v6;
  *v6 = v0;
  v6[1] = sub_235ED93D4;
  return v8(1107, v0 + 2, MEMORY[0x24BEE0D00], &protocol witness table for String, v4, v5);
}

uint64_t SecureCloudClient.setMuteEnabled(setMuteEnabledTransportItem:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v2 + 80) = *(_BYTE *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(v2 + 40) = v1;
  *(_QWORD *)(v2 + 48) = v3;
  *(_QWORD *)(v2 + 56) = v4;
  return swift_task_switch();
}

uint64_t sub_235ED9530()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t);

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v3 = *(unsigned __int8 *)(v0 + 80);
  v4 = *(_QWORD **)(v0 + 40);
  v5 = v4[3];
  v6 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v5);
  *(_QWORD *)(v0 + 16) = v3;
  *(_QWORD *)(v0 + 24) = v2;
  *(_QWORD *)(v0 + 32) = v1;
  v9 = (uint64_t (*)(uint64_t, uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(**(int **)(v6 + 32)
                                                                                                + *(_QWORD *)(v6 + 32));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v7;
  *v7 = v0;
  v7[1] = sub_235ED95E4;
  return v9(1158, v0 + 16, &type metadata for SetMuteEnabledTransportItem, &protocol witness table for SetMuteEnabledTransportItem, v5, v6);
}

uint64_t sub_235ED95E4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t SecureCloudClient.setActivityDataVisible(setActivityDataVisibleTransportItem:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v2 + 80) = *(_BYTE *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(v2 + 40) = v1;
  *(_QWORD *)(v2 + 48) = v3;
  *(_QWORD *)(v2 + 56) = v4;
  return swift_task_switch();
}

uint64_t sub_235ED9678()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t);

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v3 = *(unsigned __int8 *)(v0 + 80);
  v4 = *(_QWORD **)(v0 + 40);
  v5 = v4[3];
  v6 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v5);
  *(_QWORD *)(v0 + 16) = v3;
  *(_QWORD *)(v0 + 24) = v2;
  *(_QWORD *)(v0 + 32) = v1;
  v9 = (uint64_t (*)(uint64_t, uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(**(int **)(v6 + 32)
                                                                                                + *(_QWORD *)(v6 + 32));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v7;
  *v7 = v0;
  v7[1] = sub_235ED972C;
  return v9(1159, v0 + 16, &type metadata for SetActivityDataVisibleTransportItem, &protocol witness table for SetActivityDataVisibleTransportItem, v5, v6);
}

uint64_t sub_235ED972C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t SecureCloudClient.removeFriend(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  return swift_task_switch();
}

uint64_t sub_235ED97B4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD, _UNKNOWN **, uint64_t, uint64_t);

  v2 = v0[5];
  v1 = (_QWORD *)v0[6];
  v3 = v0[4];
  v4 = v1[3];
  v5 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v4);
  v0[2] = v3;
  v0[3] = v2;
  v8 = (uint64_t (*)(uint64_t, _QWORD *, _QWORD, _UNKNOWN **, uint64_t, uint64_t))(**(int **)(v5 + 32)
                                                                                        + *(_QWORD *)(v5 + 32));
  v6 = (_QWORD *)swift_task_alloc();
  v0[7] = v6;
  *v6 = v0;
  v6[1] = sub_235ED93D4;
  return v8(1157, v0 + 2, MEMORY[0x24BEE0D00], &protocol witness table for String, v4, v5);
}

uint64_t SecureCloudClient.invalidate()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t SecureCloudClient.pushData()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_235ED9890()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD **)(v0 + 16);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v3 + 24) + *(_QWORD *)(v3 + 24));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v4;
  *v4 = v0;
  v4[1] = sub_235EA1020;
  return v6(1101, v2, v3);
}

uint64_t SecureCloudClient.fetchData()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_235ED9924()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD **)(v0 + 16);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v3 + 24) + *(_QWORD *)(v3 + 24));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v4;
  *v4 = v0;
  v4[1] = sub_235EA1DAC;
  return v6(1102, v2, v3);
}

uint64_t SecureCloudClient.sendInvitation(destination:callerIdentifier:serviceIdentifier:additionalServiceIdentifiers:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;

  v8[15] = a7;
  v8[16] = v7;
  v8[13] = a5;
  v8[14] = a6;
  v8[11] = a3;
  v8[12] = a4;
  v8[9] = a1;
  v8[10] = a2;
  return swift_task_switch();
}

uint64_t sub_235ED99C4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, _QWORD *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v13;

  v2 = v0[15];
  v1 = (_QWORD *)v0[16];
  v4 = v0[13];
  v3 = v0[14];
  v6 = v0[11];
  v5 = v0[12];
  v8 = v0[9];
  v7 = v0[10];
  v9 = v1[4];
  v13 = v1[3];
  __swift_project_boxed_opaque_existential_1(v1, v13);
  v0[2] = v8;
  v0[3] = v7;
  v0[4] = v6;
  v0[5] = v5;
  v0[6] = v4;
  v0[7] = v3;
  v0[8] = v2;
  v12 = (uint64_t (*)(uint64_t, _QWORD *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(**(int **)(v9 + 32)
                                                                                                  + *(_QWORD *)(v9 + 32));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10 = (_QWORD *)swift_task_alloc();
  v0[17] = v10;
  *v10 = v0;
  v10[1] = sub_235ED9AB0;
  return v12(1103, v0 + 2, &type metadata for InvitationRequestItem, &protocol witness table for InvitationRequestItem, v13, v9);
}

uint64_t sub_235ED9AB0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 144) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_235ED9B60()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t SecureCloudClient.pingDestination(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  return swift_task_switch();
}

uint64_t sub_235ED9B88()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD, _UNKNOWN **, uint64_t, uint64_t);

  v2 = v0[5];
  v1 = (_QWORD *)v0[6];
  v3 = v0[4];
  v4 = v1[3];
  v5 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v4);
  v0[2] = v3;
  v0[3] = v2;
  v8 = (uint64_t (*)(uint64_t, _QWORD *, _QWORD, _UNKNOWN **, uint64_t, uint64_t))(**(int **)(v5 + 32)
                                                                                        + *(_QWORD *)(v5 + 32));
  v6 = (_QWORD *)swift_task_alloc();
  v0[7] = v6;
  *v6 = v0;
  v6[1] = sub_235ED93D4;
  return v8(1150, v0 + 2, MEMORY[0x24BEE0D00], &protocol witness table for String, v4, v5);
}

uint64_t SecureCloudClient.upgradeFriend(friendIdentifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  return swift_task_switch();
}

uint64_t sub_235ED9C50()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD, _UNKNOWN **, uint64_t, uint64_t);

  v2 = v0[5];
  v1 = (_QWORD *)v0[6];
  v3 = v0[4];
  v4 = v1[3];
  v5 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v4);
  v0[2] = v3;
  v0[3] = v2;
  v8 = (uint64_t (*)(uint64_t, _QWORD *, _QWORD, _UNKNOWN **, uint64_t, uint64_t))(**(int **)(v5 + 32)
                                                                                        + *(_QWORD *)(v5 + 32));
  v6 = (_QWORD *)swift_task_alloc();
  v0[7] = v6;
  *v6 = v0;
  v6[1] = sub_235ED93D4;
  return v8(1108, v0 + 2, MEMORY[0x24BEE0D00], &protocol witness table for String, v4, v5);
}

uint64_t SecureCloudClient.migrateFriend(friendIdentifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  return swift_task_switch();
}

uint64_t sub_235ED9D18()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD, _UNKNOWN **, uint64_t, uint64_t);

  v2 = v0[5];
  v1 = (_QWORD *)v0[6];
  v3 = v0[4];
  v4 = v1[3];
  v5 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v4);
  v0[2] = v3;
  v0[3] = v2;
  v8 = (uint64_t (*)(uint64_t, _QWORD *, _QWORD, _UNKNOWN **, uint64_t, uint64_t))(**(int **)(v5 + 32)
                                                                                        + *(_QWORD *)(v5 + 32));
  v6 = (_QWORD *)swift_task_alloc();
  v0[7] = v6;
  *v6 = v0;
  v6[1] = sub_235ED93D4;
  return v8(1110, v0 + 2, MEMORY[0x24BEE0D00], &protocol witness table for String, v4, v5);
}

uint64_t SecureCloudClient.fetchCloudDevices()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch();
}

uint64_t sub_235ED9DDC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD **)(v0 + 24);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(**(int **)(v3 + 48)
                                                                                             + *(_QWORD *)(v3 + 48));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638D570);
  v6 = sub_235ED9EF4();
  *v4 = v0;
  v4[1] = sub_235ED9E90;
  return v8(v0 + 16, 1111, v5, v6, v2, v3);
}

uint64_t sub_235ED9E90()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

unint64_t sub_235ED9EF4()
{
  unint64_t result;
  uint64_t v1;
  _UNKNOWN **v2;

  result = qword_25638D578;
  if (!qword_25638D578)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25638D570);
    v2 = &protocol witness table for ASCloudDevice;
    result = MEMORY[0x23B7E5230](&protocol conformance descriptor for <A> [A], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_25638D578);
  }
  return result;
}

uint64_t SecureCloudClient.requestDowngrade(friendIdentifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  return swift_task_switch();
}

uint64_t sub_235ED9F6C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD, _UNKNOWN **, uint64_t, uint64_t);

  v2 = v0[5];
  v1 = (_QWORD *)v0[6];
  v3 = v0[4];
  v4 = v1[3];
  v5 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v4);
  v0[2] = v3;
  v0[3] = v2;
  v8 = (uint64_t (*)(uint64_t, _QWORD *, _QWORD, _UNKNOWN **, uint64_t, uint64_t))(**(int **)(v5 + 32)
                                                                                        + *(_QWORD *)(v5 + 32));
  v6 = (_QWORD *)swift_task_alloc();
  v0[7] = v6;
  *v6 = v0;
  v6[1] = sub_235ED93D4;
  return v8(1153, v0 + 2, MEMORY[0x24BEE0D00], &protocol witness table for String, v4, v5);
}

uint64_t SecureCloudClient.acknowledgeDowngradeRequest(friendIdentifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  return swift_task_switch();
}

uint64_t sub_235EDA034()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD, _UNKNOWN **, uint64_t, uint64_t);

  v2 = v0[5];
  v1 = (_QWORD *)v0[6];
  v3 = v0[4];
  v4 = v1[3];
  v5 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v4);
  v0[2] = v3;
  v0[3] = v2;
  v8 = (uint64_t (*)(uint64_t, _QWORD *, _QWORD, _UNKNOWN **, uint64_t, uint64_t))(**(int **)(v5 + 32)
                                                                                        + *(_QWORD *)(v5 + 32));
  v6 = (_QWORD *)swift_task_alloc();
  v0[7] = v6;
  *v6 = v0;
  v6[1] = sub_235ED93D4;
  return v8(1156, v0 + 2, MEMORY[0x24BEE0D00], &protocol witness table for String, v4, v5);
}

uint64_t SecureCloudClient.repairFriend(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  return swift_task_switch();
}

uint64_t sub_235EDA0FC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD, _UNKNOWN **, uint64_t, uint64_t);

  v2 = v0[5];
  v1 = (_QWORD *)v0[6];
  v3 = v0[4];
  v4 = v1[3];
  v5 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v4);
  v0[2] = v3;
  v0[3] = v2;
  v8 = (uint64_t (*)(uint64_t, _QWORD *, _QWORD, _UNKNOWN **, uint64_t, uint64_t))(**(int **)(v5 + 32)
                                                                                        + *(_QWORD *)(v5 + 32));
  v6 = (_QWORD *)swift_task_alloc();
  v0[7] = v6;
  *v6 = v0;
  v6[1] = sub_235ED93D4;
  return v8(1160, v0 + 2, MEMORY[0x24BEE0D00], &protocol witness table for String, v4, v5);
}

ValueMetadata *type metadata accessor for SecureCloudClient()
{
  return &type metadata for SecureCloudClient;
}

void __swiftcall InvitationRequestItem.init(destination:localCallerIdentifier:preferredServiceIdentifier:additionalServiceIdentifiers:)(ActivitySharingClient::InvitationRequestItem *__return_ptr retstr, Swift::String destination, Swift::String localCallerIdentifier, Swift::String preferredServiceIdentifier, Swift::OpaquePointer additionalServiceIdentifiers)
{
  retstr->destination = destination;
  retstr->localCallerIdentifier = localCallerIdentifier;
  retstr->preferredServiceIdentifier = preferredServiceIdentifier;
  retstr->additionalServiceIdentifiers = additionalServiceIdentifiers;
}

uint64_t InvitationRequestItem.destination.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InvitationRequestItem.localCallerIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InvitationRequestItem.preferredServiceIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InvitationRequestItem.additionalServiceIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_235EDA258(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_235EDA294 + 4 * byte_235EEA6C0[a1]))(0x74616E6974736564, 0xEB000000006E6F69);
}

unint64_t sub_235EDA294()
{
  return 0xD000000000000015;
}

unint64_t sub_235EDA2B0()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_235EDA2E8()
{
  unsigned __int8 *v0;

  return sub_235EDA258(*v0);
}

uint64_t sub_235EDA2F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_235EDACD4(a1, a2);
  *a3 = result;
  return result;
}

void sub_235EDA314(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_235EDA320()
{
  sub_235EDA544();
  return sub_235EE6190();
}

uint64_t sub_235EDA348()
{
  sub_235EDA544();
  return sub_235EE619C();
}

uint64_t InvitationRequestItem.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  char v23;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638D598);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[2];
  v16 = v1[3];
  v17 = v7;
  v8 = v1[4];
  v14 = v1[5];
  v15 = v8;
  v13 = v1[6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_235EDA544();
  sub_235EE6184();
  v23 = 0;
  v9 = v18;
  sub_235EE6088();
  if (!v9)
  {
    v10 = v13;
    v22 = 1;
    sub_235EE6088();
    v21 = 2;
    sub_235EE6088();
    v19 = v10;
    v20 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25638BF00);
    sub_235EB157C(&qword_25638BFA8, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
    sub_235EE60A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_235EDA544()
{
  unint64_t result;

  result = qword_25638D5A0;
  if (!qword_25638D5A0)
  {
    result = MEMORY[0x23B7E5230](&unk_235EEA83C, &type metadata for InvitationRequestItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25638D5A0);
  }
  return result;
}

uint64_t InvitationRequestItem.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  char v29;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25638D5A8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_235EDA544();
  sub_235EE6178();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v29 = 0;
  v9 = sub_235EE6058();
  v11 = v10;
  v28 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_235EE6058();
  v24 = v13;
  v21 = v12;
  v22 = v9;
  v27 = 2;
  swift_bridgeObjectRetain();
  v23 = 0;
  v20 = sub_235EE6058();
  v15 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25638BF00);
  v26 = 3;
  sub_235EB157C(&qword_25638BF08, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
  swift_bridgeObjectRetain();
  sub_235EE6070();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v17 = v25;
  swift_bridgeObjectRetain();
  v18 = v15;
  v19 = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *a2 = v22;
  a2[1] = v11;
  a2[2] = v21;
  a2[3] = v19;
  a2[4] = v20;
  a2[5] = v18;
  a2[6] = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_235EDA8A4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return InvitationRequestItem.init(from:)(a1, a2);
}

uint64_t sub_235EDA8B8(_QWORD *a1)
{
  return InvitationRequestItem.encode(to:)(a1);
}

uint64_t destroy for InvitationRequestItem()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for InvitationRequestItem(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for InvitationRequestItem(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for InvitationRequestItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InvitationRequestItem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InvitationRequestItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for InvitationRequestItem()
{
  return &type metadata for InvitationRequestItem;
}

uint64_t storeEnumTagSinglePayload for InvitationRequestItem.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_235EDAB7C + 4 * byte_235EEA6C9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_235EDABB0 + 4 * byte_235EEA6C4[v4]))();
}

uint64_t sub_235EDABB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_235EDABB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x235EDABC0);
  return result;
}

uint64_t sub_235EDABCC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x235EDABD4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_235EDABD8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_235EDABE0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InvitationRequestItem.CodingKeys()
{
  return &type metadata for InvitationRequestItem.CodingKeys;
}

unint64_t sub_235EDAC00()
{
  unint64_t result;

  result = qword_25638D5B0;
  if (!qword_25638D5B0)
  {
    result = MEMORY[0x23B7E5230](&unk_235EEA814, &type metadata for InvitationRequestItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25638D5B0);
  }
  return result;
}

unint64_t sub_235EDAC48()
{
  unint64_t result;

  result = qword_25638D5B8;
  if (!qword_25638D5B8)
  {
    result = MEMORY[0x23B7E5230](&unk_235EEA784, &type metadata for InvitationRequestItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25638D5B8);
  }
  return result;
}

unint64_t sub_235EDAC90()
{
  unint64_t result;

  result = qword_25638D5C0;
  if (!qword_25638D5C0)
  {
    result = MEMORY[0x23B7E5230](&unk_235EEA7AC, &type metadata for InvitationRequestItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25638D5C0);
  }
  return result;
}

uint64_t sub_235EDACD4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x74616E6974736564 && a2 == 0xEB000000006E6F69;
  if (v2 || (sub_235EE60D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000235EEC6A0 || (sub_235EE60D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000235EEC6C0 || (sub_235EE60D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000235EEC6E0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_235EE60D0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_235EDAE8C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = (uint64_t *)(a1 + 32);
    do
    {
      v7 = *v5++;
      v6 = v7;
      if ((v7 & ~v4) == 0)
        v6 = 0;
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    v4 = 0;
  }
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t InvitationDestinationEndpointCapabilities.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

ActivitySharingClient::InvitationDestinationEndpointCapabilities __swiftcall InvitationDestinationEndpointCapabilities.init(rawValue:)(ActivitySharingClient::InvitationDestinationEndpointCapabilities rawValue)
{
  ActivitySharingClient::InvitationDestinationEndpointCapabilities *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

unint64_t sub_235EDAEF4()
{
  unint64_t result;

  result = qword_25638D5C8;
  if (!qword_25638D5C8)
  {
    result = MEMORY[0x23B7E5230](&protocol conformance descriptor for InvitationDestinationEndpointCapabilities, &type metadata for InvitationDestinationEndpointCapabilities);
    atomic_store(result, (unint64_t *)&qword_25638D5C8);
  }
  return result;
}

unint64_t sub_235EDAF3C()
{
  unint64_t result;

  result = qword_25638D5D0;
  if (!qword_25638D5D0)
  {
    result = MEMORY[0x23B7E5230](&protocol conformance descriptor for InvitationDestinationEndpointCapabilities, &type metadata for InvitationDestinationEndpointCapabilities);
    atomic_store(result, (unint64_t *)&qword_25638D5D0);
  }
  return result;
}

unint64_t sub_235EDAF84()
{
  unint64_t result;

  result = qword_25638D5D8;
  if (!qword_25638D5D8)
  {
    result = MEMORY[0x23B7E5230](&protocol conformance descriptor for InvitationDestinationEndpointCapabilities, &type metadata for InvitationDestinationEndpointCapabilities);
    atomic_store(result, (unint64_t *)&qword_25638D5D8);
  }
  return result;
}

unint64_t sub_235EDAFCC()
{
  unint64_t result;

  result = qword_25638D5E0;
  if (!qword_25638D5E0)
  {
    result = MEMORY[0x23B7E5230](&protocol conformance descriptor for InvitationDestinationEndpointCapabilities, &type metadata for InvitationDestinationEndpointCapabilities);
    atomic_store(result, (unint64_t *)&qword_25638D5E0);
  }
  return result;
}

_QWORD *sub_235EDB010@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_235EDB024@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_235EDB038@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_235EDB04C(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_235EDB07C@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_235EDB0A8@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_235EDB0CC(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_235EDB0E0(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

_QWORD *sub_235EDB0F4(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_235EDB108@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_235EDB11C(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_235EDB130(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_235EDB144(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_235EDB158()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_235EDB168()
{
  return sub_235EE5F74();
}

_QWORD *sub_235EDB180(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

_QWORD *sub_235EDB194@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_235EDB1A8()
{
  sub_235EDAEF4();
  return sub_235EE5DE8();
}

uint64_t sub_235EDB204()
{
  sub_235EDAEF4();
  return sub_235EE5DB8();
}

ValueMetadata *type metadata accessor for InvitationDestinationEndpointCapabilities()
{
  return &type metadata for InvitationDestinationEndpointCapabilities;
}

uint64_t sub_235EDB264(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(_QWORD *);
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  _QWORD v23[3];
  __int128 v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v17 = (uint64_t (*)(_QWORD *))result;
  v16 = *(_QWORD *)(a3 + 16);
  if (v16)
  {
    v5 = 0;
    v6 = (uint64_t *)(a3 + 48);
    v7 = MEMORY[0x24BEE4AF8];
    while (v5 < *(_QWORD *)(a3 + 16))
    {
      v8 = *(v6 - 1);
      v22 = *(_OWORD *)(v6 + 1);
      v9 = *((_BYTE *)v6 + 24);
      v10 = v6[4];
      v11 = v6[5];
      v20 = *v6;
      v21 = *(v6 - 2);
      v23[0] = v21;
      v23[1] = v8;
      v23[2] = v20;
      v24 = v22;
      v19 = v9;
      v25 = v9;
      v18 = v10;
      v26 = v10;
      v27 = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v12 = v17(v23);
      if (v3)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      if ((v12 & 1) != 0)
      {
        result = swift_isUniquelyReferenced_nonNull_native();
        v28 = v7;
        if ((result & 1) == 0)
        {
          result = sub_235EDE310(0, *(_QWORD *)(v7 + 16) + 1, 1);
          v7 = v28;
        }
        v14 = *(_QWORD *)(v7 + 16);
        v13 = *(_QWORD *)(v7 + 24);
        v3 = 0;
        if (v14 >= v13 >> 1)
        {
          result = sub_235EDE310(v13 > 1, v14 + 1, 1);
          v3 = 0;
          v7 = v28;
        }
        *(_QWORD *)(v7 + 16) = v14 + 1;
        v15 = v7 + (v14 << 6);
        *(_QWORD *)(v15 + 32) = v21;
        *(_QWORD *)(v15 + 40) = v8;
        *(_QWORD *)(v15 + 48) = v20;
        *(_OWORD *)(v15 + 56) = v22;
        *(_BYTE *)(v15 + 72) = v19;
        *(_QWORD *)(v15 + 80) = v18;
        *(_QWORD *)(v15 + 88) = v11;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        v3 = 0;
      }
      ++v5;
      v6 += 8;
      if (v16 == v5)
        goto LABEL_16;
    }
    __break(1u);
  }
  else
  {
    v7 = MEMORY[0x24BEE4AF8];
LABEL_16:
    swift_bridgeObjectRelease();
    return v7;
  }
  return result;
}

uint64_t sub_235EDB488(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  unint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v11 = MEMORY[0x24BEE4AF8];
    sub_235EDE32C(0, v1, 0);
    v2 = v11;
    v4 = (unint64_t *)(a1 + 48);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      sub_235E90998(v5, *v4);
      v8 = *(_QWORD *)(v11 + 16);
      v7 = *(_QWORD *)(v11 + 24);
      if (v8 >= v7 >> 1)
        sub_235EDE32C(v7 > 1, v8 + 1, 1);
      v4 += 5;
      *(_QWORD *)(v11 + 16) = v8 + 1;
      v9 = v11 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v5;
      *(_QWORD *)(v9 + 40) = v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_235EDB560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  return swift_task_switch();
}

uint64_t sub_235EDB57C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  *(_QWORD *)(v0 + 32) = MEMORY[0x24BEE4AF8];
  v1 = *(_QWORD **)(v0 + 64);
  v2 = v1[2];
  *(_QWORD *)(v0 + 72) = v2;
  if (!v2)
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(MEMORY[0x24BEE4AF8]);
  v3 = *(int **)(v0 + 48);
  *(_QWORD *)(v0 + 80) = 0;
  v5 = v1[4];
  v4 = v1[5];
  swift_bridgeObjectRetain();
  *(_QWORD *)(v0 + 16) = v5;
  *(_QWORD *)(v0 + 24) = v4;
  v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)v3 + *v3);
  swift_bridgeObjectRetain();
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v6;
  *v6 = v0;
  v6[1] = sub_235EDB660;
  return v8(v0 + 40, v0 + 16);
}

uint64_t sub_235EDB660()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_235EDB6CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v9)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80) + 1;
  sub_235EDB7F8(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease();
  if (v2 == v1)
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 32));
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 80) + 1;
    *(_QWORD *)(v0 + 80) = v4;
    v5 = *(_QWORD *)(v0 + 64);
    v6 = *(int **)(v0 + 48);
    v7 = *(_QWORD *)(v5 + 16 * v4 + 40);
    *(_QWORD *)(v0 + 16) = *(_QWORD *)(v5 + 16 * v4 + 32);
    *(_QWORD *)(v0 + 24) = v7;
    v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
    swift_bridgeObjectRetain();
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v8;
    *v8 = v0;
    v8[1] = sub_235EDB660;
    return v9(v0 + 40, v0 + 16);
  }
}

uint64_t sub_235EDB7B8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EDB7F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_235EB05F0(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[8 * v8 + 4];
  if (a1 + 32 < v9 + (v2 << 6) && v9 < a1 + 32 + (v2 << 6))
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_235EE6040();
  __break(1u);
  return result;
}

uint64_t InvitationDestinationService.init(cache:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_235EB8C3C(a1, a2);
}

uint64_t sub_235EDB950(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[10] = a1;
  v4[11] = a3;
  v5 = *a2;
  v6 = a2[1];
  v4[12] = a4;
  v4[13] = v5;
  v4[14] = v6;
  return swift_task_switch();
}

uint64_t sub_235EDB974()
{
  uint64_t *v0;
  _QWORD *v1;

  sub_235EC9660(v0[11], (uint64_t)(v0 + 2));
  v1 = (_QWORD *)swift_task_alloc();
  v0[15] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_235EDB9D4;
  return sub_235ED75BC(v0[12], v0[13], v0[14]);
}

uint64_t sub_235EDB9D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 128) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 136) = a1;
  return swift_task_switch();
}

uint64_t sub_235EDBA48()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD **)(v0 + 80);
  sub_235EE3604(v0 + 16);
  *v2 = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EDBA88()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;

  sub_235EE3604(v0 + 16);
  if (qword_25638B4D0 != -1)
    swift_once();
  v1 = *(void **)(v0 + 128);
  v2 = sub_235EE5CF8();
  __swift_project_value_buffer(v2, (uint64_t)qword_256393B50);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v3 = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v4 = v1;
  v5 = sub_235EE5CE0();
  v6 = sub_235EE5ECC();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 128);
  v9 = *(_QWORD *)(v0 + 112);
  if (v7)
  {
    v19 = *(_QWORD *)(v0 + 104);
    v10 = swift_slowAlloc();
    v20 = (_QWORD *)swift_slowAlloc();
    v21 = swift_slowAlloc();
    v22 = v21;
    *(_DWORD *)v10 = 136315650;
    v11 = swift_bridgeObjectRetain();
    v12 = MEMORY[0x23B7E49E4](v11, MEMORY[0x24BEE0D00]);
    v14 = v13;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 56) = sub_235E911D4(v12, v14, &v22);
    sub_235EE5F2C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v10 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 64) = sub_235E911D4(v19, v9, &v22);
    sub_235EE5F2C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v10 + 22) = 2112;
    v15 = v8;
    v16 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 72) = v16;
    sub_235EE5F2C();
    *v20 = v16;

    _os_log_impl(&dword_235E8C000, v5, v6, "Failed to query destinations %s on service identifier %s, error: %@", (uint8_t *)v10, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25429C8D0);
    swift_arrayDestroy();
    MEMORY[0x23B7E529C](v20, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B7E529C](v21, -1, -1);
    MEMORY[0x23B7E529C](v10, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

  }
  v17 = *(_QWORD **)(v0 + 80);

  *v17 = MEMORY[0x24BEE4AF8];
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_235EDBDB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19[16];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v5 = a3;
  v20 = a3;
  v21 = a4;
  swift_bridgeObjectRetain();
  v22 = sub_235EDB264((uint64_t)sub_235EE34BC, (uint64_t)v19, v5);
  swift_bridgeObjectRetain();
  sub_235EDEA6C(&v22);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v22 + 16))
  {
    v9 = *(_QWORD *)(v22 + 40);
    v10 = *(_QWORD *)(v22 + 56);
    v16 = *(_QWORD *)(v22 + 48);
    v17 = *(_QWORD *)(v22 + 32);
    v11 = *(_QWORD *)(v22 + 64);
    v18 = *(unsigned __int8 *)(v22 + 72);
    v13 = *(_QWORD *)(v22 + 80);
    v12 = *(_QWORD *)(v22 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_release();
    *a5 = a1;
    a5[1] = a2;
    a5[2] = v17;
    a5[3] = v9;
    a5[4] = v16;
    a5[5] = v10;
    a5[6] = v11;
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    v15 = v18;
  }
  else
  {
    result = swift_release();
    v15 = 0;
    v13 = 0;
    v12 = 0;
    v5 = 0;
    a5[6] = 0;
    *((_OWORD *)a5 + 1) = 0u;
    *((_OWORD *)a5 + 2) = 0u;
    *(_OWORD *)a5 = 0u;
  }
  a5[7] = v15;
  a5[8] = v13;
  a5[9] = v12;
  a5[10] = v5;
  return result;
}

uint64_t sub_235EDBF00(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  unint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v22;
  uint64_t v23;
  char v25;
  uint64_t v26;
  NSObject *v27;
  uint64_t v28;
  os_log_type_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  char type;
  __int128 v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;

  if (*((_BYTE *)a1 + 40) != 1)
    goto LABEL_36;
  v2 = a1[1];
  v42 = *a1;
  v4 = a1[2];
  v3 = a1[3];
  v5 = a1[4];
  v7 = a1[6];
  v6 = a1[7];
  if ((v7 != 0xD00000000000002ELL || v6 != 0x8000000235EEB280) && (sub_235EE60D0() & 1) == 0)
  {
    if (sub_235EE5D40() == v7 && v20 == v6)
      goto LABEL_30;
    v22 = sub_235EE60D0();
    swift_bridgeObjectRelease();
    if ((v22 & 1) != 0)
    {
LABEL_29:
      v19 = 1;
      return v19 & 1;
    }
    if (sub_235EE5D40() == v7 && v23 == v6)
    {
LABEL_30:
      swift_bridgeObjectRelease();
      v19 = 1;
      return v19 & 1;
    }
    v25 = sub_235EE60D0();
    swift_bridgeObjectRelease();
    if ((v25 & 1) != 0)
      goto LABEL_29;
    v39 = v4;
    v41 = v7;
    if (qword_25638B4D0 != -1)
      swift_once();
    v26 = sub_235EE5CF8();
    __swift_project_value_buffer(v26, (uint64_t)qword_256393B50);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v27 = sub_235EE5CE0();
    v28 = v3;
    v29 = sub_235EE5ECC();
    if (os_log_type_enabled(v27, v29))
    {
      v30 = v6;
      v31 = swift_slowAlloc();
      v48 = swift_slowAlloc();
      v56 = v48;
      *(_DWORD *)v31 = 136315394;
      swift_bridgeObjectRetain();
      sub_235E911D4(v41, v30, &v56);
      sub_235EE5F2C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 12) = 2080;
      *((_QWORD *)&v49 + 1) = v2;
      v50 = v39;
      v51 = v28;
      v52 = v5;
      v53 = 1;
      v54 = v41;
      v55 = v30;
      v32 = InvitationDestination.description.getter();
      *(_QWORD *)&v49 = sub_235E911D4(v32, v33, &v56);
      sub_235EE5F2C();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_235E8C000, v27, v29, "Unexpected service %s for %s", (uint8_t *)v31, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B7E529C](v48, -1, -1);
      MEMORY[0x23B7E529C](v31, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
LABEL_36:
    v19 = 0;
    return v19 & 1;
  }
  v38 = v4;
  v40 = v7;
  v37 = v6;
  v8 = *(_QWORD *)(a2 + 16);
  if (v8)
  {
    v35 = v5;
    v36 = v2;
    v9 = swift_bridgeObjectRetain() + 48;
    v10 = MEMORY[0x24BEE4AF8];
    do
    {
      v16 = *(_QWORD *)(v9 - 8);
      v17 = *(_QWORD *)(v9 + 32);
      v18 = *(_QWORD *)(v9 + 40);
      if (v17 != 0xD00000000000002ELL || v18 != 0x8000000235EEB280)
      {
        type = *(_BYTE *)(v9 + 24);
        v44 = *(_QWORD *)v9;
        v45 = *(_QWORD *)(v9 - 16);
        v47 = *(_OWORD *)(v9 + 8);
        if ((sub_235EE60D0() & 1) == 0)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          *(_QWORD *)&v49 = v10;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_235EDE310(0, *(_QWORD *)(v10 + 16) + 1, 1);
            v10 = v49;
          }
          v11 = type;
          v13 = *(_QWORD *)(v10 + 16);
          v12 = *(_QWORD *)(v10 + 24);
          v14 = v47;
          if (v13 >= v12 >> 1)
          {
            sub_235EDE310(v12 > 1, v13 + 1, 1);
            v11 = type;
            v14 = v47;
            v10 = v49;
          }
          *(_QWORD *)(v10 + 16) = v13 + 1;
          v15 = v10 + (v13 << 6);
          *(_QWORD *)(v15 + 32) = v45;
          *(_QWORD *)(v15 + 40) = v16;
          *(_QWORD *)(v15 + 48) = v44;
          *(_OWORD *)(v15 + 56) = v14;
          *(_BYTE *)(v15 + 72) = v11;
          *(_QWORD *)(v15 + 80) = v17;
          *(_QWORD *)(v15 + 88) = v18;
        }
      }
      v9 += 64;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
    v2 = v36;
    v5 = v35;
  }
  else
  {
    v10 = MEMORY[0x24BEE4AF8];
  }
  *(_QWORD *)&v49 = v42;
  *((_QWORD *)&v49 + 1) = v2;
  v50 = v38;
  v51 = v3;
  v52 = v5;
  v53 = 1;
  v54 = v40;
  v55 = v37;
  v19 = sub_235EDC464(&v49, v10);
  swift_release();
  return v19 & 1;
}

uint64_t sub_235EDC464(__int128 *a1, uint64_t a2)
{
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;

  v2 = a2;
  v3 = a1[3];
  v45 = a1[2];
  v46 = v3;
  v4 = a1[1];
  v43 = *a1;
  v44 = v4;
  v5 = *(_QWORD *)(v45 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain_n();
    v6 = 0;
    while (1)
    {
      v7 = (uint64_t *)(v45 + 32 + 40 * v6);
      v8 = *v7;
      v9 = v7[1];
      v10 = v7[2];
      sub_235E90998(v9, v10);
      v11 = qword_25638B4C8;
      swift_bridgeObjectRetain();
      if (v11 != -1)
        swift_once();
      v12 = *(_QWORD *)(qword_256393B48 + 16);
      if (v12)
        break;
LABEL_3:
      ++v6;
      sub_235E90954(v9, v10);
      swift_bridgeObjectRelease();
      if (v6 == v5)
      {
        swift_bridgeObjectRelease_n();
        v2 = a2;
        goto LABEL_19;
      }
    }
    v13 = (uint64_t *)(qword_256393B48 + 32);
    while (1)
    {
      v14 = *v13++;
      if ((v14 & ~v8) != 0)
        break;
      if (!--v12)
        goto LABEL_3;
    }
    sub_235E90954(v9, v10);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    if (qword_25638B4D0 != -1)
      swift_once();
    v15 = sub_235EE5CF8();
    __swift_project_value_buffer(v15, (uint64_t)qword_256393B50);
    sub_235EC6784((uint64_t)&v43);
    sub_235EC6784((uint64_t)&v43);
    v16 = sub_235EE5CE0();
    v17 = sub_235EE5ECC();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v42 = v19;
      *(_DWORD *)v18 = 136315138;
      v38 = *((_QWORD *)&v43 + 1);
      v39 = v44;
      v40 = v45;
      v41 = v46;
      v20 = InvitationDestination.description.getter();
      v37 = sub_235E911D4(v20, v21, &v42);
      sub_235EE5F2C();
      swift_bridgeObjectRelease();
      sub_235EE34D8((uint64_t)&v43);
      sub_235EE34D8((uint64_t)&v43);
      _os_log_impl(&dword_235E8C000, v16, v17, "Some endpoints on invitation destination are missing capabilities %s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B7E529C](v19, -1, -1);
      MEMORY[0x23B7E529C](v18, -1, -1);
    }
    else
    {
      sub_235EE34D8((uint64_t)&v43);
      sub_235EE34D8((uint64_t)&v43);
    }

    return 0;
  }
LABEL_19:
  v23 = swift_bridgeObjectRetain();
  v24 = sub_235EDB488(v23);
  swift_bridgeObjectRelease();
  v25 = sub_235EE3528(v24);
  swift_bridgeObjectRelease();
  v26 = *(_QWORD *)(v2 + 16);
  if (v26)
  {
    swift_bridgeObjectRetain();
    v27 = (uint64_t *)(v2 + 48);
    while (1)
    {
      v28 = v27[4];
      v29 = v27[5];
      v30 = *((_BYTE *)v27 + 24);
      v32 = v27[1];
      v31 = v27[2];
      v34 = *(v27 - 1);
      v33 = *v27;
      v37 = *(v27 - 2);
      v38 = v34;
      *(_QWORD *)&v39 = v33;
      *((_QWORD *)&v39 + 1) = v32;
      *(_QWORD *)&v40 = v31;
      BYTE8(v40) = v30;
      *(_QWORD *)&v41 = v28;
      *((_QWORD *)&v41 + 1) = v29;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v35 = sub_235EDC830(&v37, v25, (uint64_t)&v43);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v35 & 1) == 0)
        break;
      v27 += 8;
      if (!--v26)
      {
        swift_bridgeObjectRelease();
        goto LABEL_24;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_24:
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_235EDC830(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  os_log_type_t type;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v5 = a1[3];
  v6 = a1[7];
  v30 = a1[2];
  v31 = a1[6];
  v7 = swift_bridgeObjectRetain();
  v8 = sub_235EDB488(v7);
  swift_bridgeObjectRelease();
  v9 = sub_235EE3528(v8);
  swift_bridgeObjectRelease();
  v10 = sub_235EE2638(a2, v9);
  swift_bridgeObjectRelease();
  if ((v10 & 1) == 0)
  {
    v28 = a3;
    if (qword_25638B4D0 != -1)
      swift_once();
    v11 = sub_235EE5CF8();
    __swift_project_value_buffer(v11, (uint64_t)qword_256393B50);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = sub_235EE5CE0();
    type = sub_235EE5ED8();
    v29 = v10;
    if (os_log_type_enabled(v12, type))
    {
      v13 = swift_slowAlloc();
      v14 = swift_slowAlloc();
      v33 = v14;
      *(_DWORD *)v13 = 136315394;
      swift_bridgeObjectRetain();
      sub_235E911D4(v30, v5, &v33);
      sub_235EE5F2C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2080;
      swift_bridgeObjectRetain();
      sub_235E911D4(v31, v6, &v33);
      sub_235EE5F2C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_235E8C000, v12, type, "Invite service missing endpoints from %s - %s", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B7E529C](v14, -1, -1);
      MEMORY[0x23B7E529C](v13, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_235EC6784(a3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_235EC6784(a3);
    v15 = sub_235EE5CE0();
    v16 = sub_235EE5ED8();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = swift_slowAlloc();
      v32 = swift_slowAlloc();
      v33 = v32;
      *(_DWORD *)v17 = 136315394;
      v18 = swift_bridgeObjectRetain();
      v19 = MEMORY[0x23B7E49E4](v18, &type metadata for InvitationDestinationEndpoint);
      v21 = v20;
      swift_bridgeObjectRelease();
      sub_235E911D4(v19, v21, &v33);
      sub_235EE5F2C();
      swift_bridgeObjectRelease();
      sub_235EE34D8(v28);
      sub_235EE34D8(v28);
      *(_WORD *)(v17 + 12) = 2080;
      v22 = swift_bridgeObjectRetain();
      v23 = MEMORY[0x23B7E49E4](v22, &type metadata for InvitationDestinationEndpoint);
      v25 = v24;
      swift_bridgeObjectRelease();
      sub_235E911D4(v23, v25, &v33);
      sub_235EE5F2C();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_235E8C000, v15, v16, "Invite service endpoints: %s, other endpoints: %s", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B7E529C](v32, -1, -1);
      MEMORY[0x23B7E529C](v17, -1, -1);

    }
    else
    {
      sub_235EE34D8(a3);
      sub_235EE34D8(a3);

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    v10 = v29;
  }
  return v10 & 1;
}

uint64_t InvitationDestinationService.fetchInvitationDestinationGroups(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_235EDCD64()
{
  int8x16_t *v0;
  uint64_t v1;
  uint64_t v2;
  int8x16_t *v3;
  _QWORD *v4;
  int8x16_t v6;

  if (qword_25429CF60 != -1)
    swift_once();
  v1 = sub_235EE5CF8();
  __swift_project_value_buffer(v1, (uint64_t)qword_25429CF70);
  sub_235E9105C(0xD00000000000007ALL, 0x8000000235EEC700, 0xD000000000000026, 0x8000000235EEC780);
  if (qword_25638B4C0 != -1)
    swift_once();
  v2 = qword_256393B40;
  v6 = v0[1];
  sub_235E9105C(0xD00000000000007ALL, 0x8000000235EEC700, 0xD000000000000033, 0x8000000235EEC7B0);
  v3 = (int8x16_t *)swift_task_alloc();
  v0[2].i64[0] = (uint64_t)v3;
  v3[1] = vextq_s8(v6, v6, 8uLL);
  v6.i64[0] = (uint64_t)&dword_25638D600 + dword_25638D600;
  v4 = (_QWORD *)swift_task_alloc();
  v0[2].i64[1] = (uint64_t)v4;
  *v4 = v0;
  v4[1] = sub_235EDCED4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6.i64[0])((uint64_t)&unk_25638D5F8, (uint64_t)v3, v2);
}

uint64_t sub_235EDCED4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 48) = a1;
  *(_QWORD *)(v3 + 56) = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_235EDCF38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  char v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  char isUniquelyReferenced_nonNull_native;
  char v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  uint64_t result;
  char v24;
  char v25;
  uint64_t *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  __int128 v36;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 48) + 16);
  if (!v1)
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_27:
    v30 = *(_QWORD *)(v0 + 24);
    swift_bridgeObjectRelease();
    *(_QWORD *)(swift_task_alloc() + 16) = v30;
    v31 = sub_235EE3184((uint64_t)v3, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))sub_235EDE2B4);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v31);
  }
  v2 = swift_bridgeObjectRetain();
  v3 = (_QWORD *)MEMORY[0x24BEE4B00];
  v4 = v2 + 48;
  while (1)
  {
    v7 = *(_QWORD *)(v4 - 16);
    v6 = *(_QWORD *)(v4 - 8);
    v8 = *(_QWORD *)v4;
    v36 = *(_OWORD *)(v4 + 8);
    v9 = *(_BYTE *)(v4 + 24);
    v10 = *(_QWORD *)(v4 + 40);
    v34 = *(_QWORD *)(v4 + 32);
    v11 = v3[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v33 = v1;
    v35 = v9;
    if (v11)
    {
      swift_bridgeObjectRetain();
      v12 = sub_235EA721C(v8, v36);
      v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
      if ((v14 & 1) != 0)
      {
        v13 = *(_QWORD **)(v3[7] + 8 * v12);
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v13 = sub_235EB05F0(0, v13[2] + 1, 1, v13);
    v16 = v13[2];
    v15 = v13[3];
    if (v16 >= v15 >> 1)
      v13 = sub_235EB05F0((_QWORD *)(v15 > 1), v16 + 1, 1, v13);
    v13[2] = v16 + 1;
    v17 = &v13[8 * v16];
    v17[4] = v7;
    v17[5] = v6;
    v17[6] = v8;
    *(_OWORD *)(v17 + 7) = v36;
    *((_BYTE *)v17 + 72) = v35;
    v17[10] = v34;
    v17[11] = v10;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v20 = sub_235EA721C(v8, v36);
    v21 = v3[2];
    v22 = (v19 & 1) == 0;
    result = v21 + v22;
    if (__OFADD__(v21, v22))
      break;
    v24 = v19;
    if (v3[3] >= result)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v19 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        result = (uint64_t)sub_235EA8B44();
        if ((v24 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_235EDDFA4(result, isUniquelyReferenced_nonNull_native, &qword_25638BCD8);
      result = sub_235EA721C(v8, v36);
      if ((v24 & 1) != (v25 & 1))
        return sub_235EE6100();
      v20 = result;
      if ((v24 & 1) != 0)
      {
LABEL_3:
        v5 = v3[7];
        swift_bridgeObjectRelease();
        *(_QWORD *)(v5 + 8 * v20) = v13;
        goto LABEL_4;
      }
    }
    v3[(v20 >> 6) + 8] |= 1 << v20;
    v26 = (uint64_t *)(v3[6] + 16 * v20);
    *v26 = v8;
    v26[1] = v36;
    *(_QWORD *)(v3[7] + 8 * v20) = v13;
    v27 = v3[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (v28)
      goto LABEL_30;
    v3[2] = v29;
    swift_bridgeObjectRetain();
LABEL_4:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v4 += 64;
    v1 = v33 - 1;
    if (v33 == 1)
    {
      v0 = v32;
      swift_bridgeObjectRelease();
      goto LABEL_27;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_235EDD2EC(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;

  v6 = swift_task_alloc();
  v7 = *(_OWORD *)(v2 + 16);
  *(_QWORD *)(v3 + 16) = v6;
  *(_QWORD *)v6 = v3;
  *(_QWORD *)(v6 + 8) = sub_235E8E5E8;
  *(_OWORD *)(v6 + 88) = v7;
  *(_QWORD *)(v6 + 80) = a1;
  v8 = a2[1];
  *(_QWORD *)(v6 + 104) = *a2;
  *(_QWORD *)(v6 + 112) = v8;
  return swift_task_switch();
}

uint64_t sub_235EDD368(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_235ECDA00;
  v4[2] = a1;
  v4[3] = v1;
  return swift_task_switch();
}

void sub_235EDD3C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_235EDD428(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  BOOL *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  __int16 v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v42 = v39;
  v43 = v40;
  v44 = BYTE2(v40);
  v45 = BYTE3(v40);
  v46 = BYTE4(v40);
  v47 = BYTE5(v40);
  if (!v38)
  {
    __break(1u);
    JUMPOUT(0x235EDD60CLL);
  }
  result = memcmp(v38, &v42, BYTE6(v40));
  *v37 = (_DWORD)result == 0;
  return result;
}

uint64_t sub_235EDD630(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  __int128 v30;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25429C8C0);
  result = sub_235EE6028();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v29 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v8 << 6);
      }
      else
      {
        v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v20 >= v12)
          goto LABEL_33;
        v21 = v29[v20];
        ++v8;
        if (!v21)
        {
          v8 = v20 + 1;
          if (v20 + 1 >= v12)
            goto LABEL_33;
          v21 = v29[v8];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v12)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v28 = 1 << *(_BYTE *)(v5 + 32);
              if (v28 >= 64)
                bzero(v29, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v29 = -1 << v28;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v21 = v29[v22];
            if (!v21)
            {
              while (1)
              {
                v8 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_42;
                if (v8 >= v12)
                  goto LABEL_33;
                v21 = v29[v8];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v8 = v22;
          }
        }
LABEL_30:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      v27 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v19);
      v30 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + 16 * v19);
      if ((a2 & 1) == 0)
        swift_retain();
      sub_235EE6154();
      sub_235EE6160();
      result = sub_235EE616C();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v25 = v16 == v24;
          if (v16 == v24)
            v16 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v26 == -1);
        v17 = __clz(__rbit64(~v26)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v17) = v27;
      *(_OWORD *)(*(_QWORD *)(v7 + 56) + 16 * v17) = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_235EDD904(uint64_t a1, char a2)
{
  return sub_235EDDFA4(a1, a2, &qword_25638BCE8);
}

uint64_t sub_235EDD910(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t i;
  char v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  __int128 v44;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25638BCF0);
  v40 = a2;
  v6 = sub_235EE6028();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v38 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v37 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    for (i = v5; ; v5 = i)
    {
      if (v10)
      {
        v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v21 = v20 | (v13 << 6);
      }
      else
      {
        v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37)
          goto LABEL_33;
        v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          v13 = v22 + 1;
          if (v22 + 1 >= v37)
            goto LABEL_33;
          v23 = v38[v13];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v40 & 1) != 0)
              {
                v36 = 1 << *(_BYTE *)(v5 + 32);
                if (v36 >= 64)
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v38 = -1 << v36;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                v13 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_40;
                if (v13 >= v37)
                  goto LABEL_33;
                v23 = v38[v13];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v13 = v24;
          }
        }
LABEL_30:
        v10 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
      v31 = *v29;
      v30 = v29[1];
      v32 = *(_QWORD *)(v5 + 56) + (v21 << 6);
      v33 = *(_QWORD *)v32;
      v34 = *(_QWORD *)(v32 + 8);
      v43 = *(_QWORD *)(v32 + 16);
      v44 = *(_OWORD *)(v32 + 24);
      v42 = *(_BYTE *)(v32 + 40);
      v35 = *(_QWORD *)(v32 + 56);
      v41 = *(_QWORD *)(v32 + 48);
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_235EE6154();
      sub_235EE5D64();
      result = sub_235EE616C();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v16 == v26;
          if (v16 == v26)
            v16 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
      *v18 = v31;
      v18[1] = v30;
      v19 = *(_QWORD *)(v7 + 56) + (v17 << 6);
      *(_QWORD *)v19 = v33;
      *(_QWORD *)(v19 + 8) = v34;
      *(_QWORD *)(v19 + 16) = v43;
      *(_OWORD *)(v19 + 24) = v44;
      *(_BYTE *)(v19 + 40) = v42;
      *(_QWORD *)(v19 + 48) = v41;
      *(_QWORD *)(v19 + 56) = v35;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_235EDDC80(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  uint64_t v41;
  char v42;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25638BCE0);
  v42 = a2;
  v6 = sub_235EE6028();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v41 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v39 = v2;
  v40 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      v13 = v23 + 1;
      if (v23 + 1 >= v40)
        goto LABEL_33;
      v25 = *(_QWORD *)(v41 + 8 * v13);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          v3 = v39;
          if ((v42 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v13 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v13 >= v40)
              goto LABEL_33;
            v25 = *(_QWORD *)(v41 + 8 * v13);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v13 = v26;
      }
    }
LABEL_30:
    v10 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    v31 = 16 * v22;
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v31);
    v34 = *v32;
    v33 = v32[1];
    v35 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v31);
    v36 = *v35;
    v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_235EE6154();
    sub_235EE5D64();
    result = sub_235EE616C();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v16 == v28;
        if (v16 == v28)
          v16 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = 16 * v17;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v19 = v34;
    v19[1] = v33;
    v20 = (_QWORD *)(*(_QWORD *)(v7 + 56) + v18);
    *v20 = v36;
    v20[1] = v37;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v39;
  v24 = (_QWORD *)(v5 + 64);
  if ((v42 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v38 = 1 << *(_BYTE *)(v5 + 32);
  if (v38 >= 64)
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v38;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_235EDDFA4(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v37 = a2;
  v7 = sub_235EE6028();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v36 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v35 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v35)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_235EE6154();
    sub_235EE5D64();
    result = sub_235EE616C();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v23 = (_QWORD *)(v6 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v6 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_235EDE2B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;

  return sub_235EDBDB0(a1, a2, a3, *(_QWORD *)(v4 + 16), a4);
}

uint64_t sub_235EDE2BC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_235EDE348(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_235EDE2D8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_235EDE4B0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_235EDE2F4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_235EDE61C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_235EDE310(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_235EDE79C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_235EDE32C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_235EDE904(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_235EDE348(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25429C940);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_235EE6040();
  __break(1u);
  return result;
}

uint64_t sub_235EDE4B0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25638D640);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_235EE6040();
  __break(1u);
  return result;
}

uint64_t sub_235EDE61C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25638D638);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8])
      memmove(v12, v13, 40 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_235EE6040();
  __break(1u);
  return result;
}

uint64_t sub_235EDE79C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25638BF88);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 + 31;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 6);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[64 * v8])
      memmove(v13, v14, v8 << 6);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[64 * v8] || v13 >= &v14[64 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_235EE6040();
  __break(1u);
  return result;
}

uint64_t sub_235EDE904(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25638D620);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_235EE6040();
  __break(1u);
  return result;
}

uint64_t sub_235EDEA6C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_235EE3170(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_235EDEAD4(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_235EDEAD4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  _BOOL4 v32;
  _QWORD *v33;
  uint64_t v34;
  char v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  char v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  BOOL v55;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  char v62;
  _QWORD *v63;
  uint64_t v64;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _OWORD *v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  char *v86;
  char *v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  BOOL v99;
  unint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  BOOL v109;
  uint64_t v110;
  char v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  BOOL v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  char *v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  BOOL v144;
  BOOL v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  _QWORD *v150;
  uint64_t v151;
  char v153;
  uint64_t v154;
  _QWORD *v155;
  uint64_t v156;
  uint64_t v157;
  char v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char v166;
  __int128 v167;
  __int128 v168;
  char *v169;
  uint64_t v170;
  unint64_t v171;
  char *v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  char *v177;
  unint64_t v178;
  uint64_t *v179;
  uint64_t v180;
  uint64_t v181;
  char *__dst;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  _QWORD *v197;
  _QWORD *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  _BOOL4 v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;

  v2 = v1;
  v4 = a1[1];
  result = sub_235EE60B8();
  if (result >= v4)
  {
    if (v4 < 0)
      goto LABEL_271;
    if (v4)
      return sub_235EDFAE0(0, v4, 1, a1);
    return result;
  }
  v181 = result;
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
    goto LABEL_279;
  v185 = v4;
  v179 = a1;
  if (v4 < 2)
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
    v9 = (char *)(MEMORY[0x24BEE4AF8] + 32);
    v180 = MEMORY[0x24BEE4AF8];
    if (v4 != 1)
    {
      v192 = v1;
      v85 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_235:
      if (v85 >= 2)
      {
        v170 = *v179;
        do
        {
          v171 = v85 - 2;
          if (v85 < 2)
            goto LABEL_264;
          if (!v170)
            goto LABEL_278;
          v172 = v10;
          v173 = v10 + 32;
          v174 = *(_QWORD *)&v10[16 * v171 + 32];
          v175 = *(_QWORD *)&v10[16 * v85 + 24];
          v176 = v9;
          sub_235EDFF60((char *)(v170 + (v174 << 6)), (char *)(v170 + (*(_QWORD *)&v173[16 * v85 - 16] << 6)), (char *)(v170 + (v175 << 6)), v9);
          if (v192)
            break;
          if (v175 < v174)
            goto LABEL_266;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v172 = sub_235EE0A78((uint64_t)v172);
          if (v171 >= *((_QWORD *)v172 + 2))
            goto LABEL_267;
          v177 = &v172[16 * v171 + 32];
          *(_QWORD *)v177 = v174;
          *((_QWORD *)v177 + 1) = v175;
          v178 = *((_QWORD *)v172 + 2);
          if (v85 > v178)
            goto LABEL_268;
          v10 = v172;
          memmove(&v172[16 * v85 + 16], &v172[16 * v85 + 32], 16 * (v178 - v85));
          *((_QWORD *)v172 + 2) = v178 - 1;
          v85 = v178 - 1;
          v9 = v176;
        }
        while (v178 > 2);
      }
LABEL_246:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v180 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v7 = v6 >> 1;
    v8 = sub_235EE5E24();
    *(_QWORD *)(v8 + 16) = v7;
    v180 = v8;
    v9 = (char *)(v8 + 32);
  }
  __dst = v9;
  v11 = 0;
  v12 = *a1;
  v10 = (char *)MEMORY[0x24BEE4AF8];
  v13 = v185;
  v195 = *a1;
  while (1)
  {
    v183 = v10;
    v14 = v11;
    v15 = v11 + 1;
    v16 = v13;
    v202 = v11;
    if (v11 + 1 >= v13)
      goto LABEL_120;
    v187 = v11 + 1;
    v190 = v2;
    v17 = v12 + (v15 << 6);
    v19 = *(_QWORD *)(v17 + 48);
    v18 = *(_QWORD *)(v17 + 56);
    v20 = v12 + (v11 << 6);
    v21 = *(_QWORD *)(v20 + 56);
    v207 = *(_QWORD *)(v20 + 48);
    v22 = qword_25638B4C0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v23 = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v22 != -1)
      swift_once();
    v24 = qword_256393B40;
    v25 = *(_QWORD *)(qword_256393B40 + 16);
    if (!v25)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v32 = 0;
      v14 = v202;
      goto LABEL_55;
    }
    v27 = *(_QWORD *)(qword_256393B40 + 32);
    v26 = *(_QWORD *)(qword_256393B40 + 40);
    v28 = v23;
    if (v27 == v19 && v26 == v23)
    {
      v30 = 0;
      if (v19 == v207 && v28 == v21)
      {
        v31 = 0;
        goto LABEL_53;
      }
LABEL_40:
      if ((sub_235EE60D0() & 1) != 0)
      {
        v31 = 0;
        goto LABEL_53;
      }
      if (v25 <= 1)
        v37 = 1;
      else
        v37 = v25;
      v38 = (_QWORD *)(v24 + 56);
      v39 = 1;
      while (v25 != v39)
      {
        v31 = v39;
        if (v37 == v39)
          goto LABEL_269;
        if (*(v38 - 1) != v207 || v21 != *v38)
        {
          v41 = sub_235EE60D0();
          v39 = v31 + 1;
          v38 += 2;
          if ((v41 & 1) == 0)
            continue;
        }
        goto LABEL_53;
      }
LABEL_232:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v32 = 0;
      goto LABEL_54;
    }
    if ((sub_235EE60D0() & 1) == 0)
    {
      v200 = v26;
      v33 = (_QWORD *)(v24 + 56);
      v34 = 1;
      while (v25 != v34)
      {
        v30 = v34;
        if (*(v33 - 1) != v19 || *v33 != v28)
        {
          v36 = sub_235EE60D0();
          v34 = v30 + 1;
          v33 += 2;
          if ((v36 & 1) == 0)
            continue;
        }
        if (v27 == v207 && v200 == v21)
        {
          v31 = 0;
          goto LABEL_53;
        }
        goto LABEL_40;
      }
      goto LABEL_232;
    }
    v30 = 0;
    if (v27 != v207 || v26 != v21)
      goto LABEL_40;
    v31 = 0;
LABEL_53:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v32 = v31 >= v30;
LABEL_54:
    v2 = v190;
    v16 = v185;
    v14 = v202;
LABEL_55:
    v42 = v14 + 2;
    v12 = v195;
    v43 = v187;
    if (v14 + 2 < v16)
    {
      v191 = v2;
      v44 = *(_QWORD *)(qword_256393B40 + 16);
      if (v44 <= 1)
        v45 = 1;
      else
        v45 = *(_QWORD *)(qword_256393B40 + 16);
      v208 = v45;
      v206 = qword_256393B40;
      v204 = qword_256393B40 + 56;
      v205 = v32;
      while (1)
      {
        if (!v44)
        {
          if (v32)
            goto LABEL_230;
          goto LABEL_61;
        }
        v46 = v12 + (v42 << 6);
        v47 = *(_QWORD *)(v46 + 48);
        v48 = *(_QWORD *)(v46 + 56);
        v49 = v12 + (v43 << 6);
        v50 = *(_QWORD *)(v49 + 48);
        v51 = *(_QWORD *)(v49 + 56);
        v52 = *(_QWORD *)(v206 + 32);
        if (v52 == v47 && *(_QWORD *)(v206 + 40) == v48)
        {
          if (v47 == v50 && v48 == v51)
            goto LABEL_80;
        }
        else
        {
          v54 = *(_QWORD *)(v206 + 40);
          if ((sub_235EE60D0() & 1) == 0)
          {
            v203 = v54;
            v59 = (_QWORD *)v204;
            v60 = 1;
            do
            {
              if (v44 == v60)
              {
                v16 = v185;
                v12 = v195;
                v14 = v202;
                v32 = v205;
                if (!v205)
                  goto LABEL_61;
                goto LABEL_230;
              }
              v57 = v60;
              if (*(v59 - 1) == v47 && *v59 == v48)
                break;
              v62 = sub_235EE60D0();
              v60 = v57 + 1;
              v59 += 2;
            }
            while ((v62 & 1) == 0);
            if (v52 != v50)
            {
              v16 = v185;
              v14 = v202;
              goto LABEL_78;
            }
            v16 = v185;
            v14 = v202;
            if (v203 != v51)
              goto LABEL_78;
            v12 = v195;
            v32 = v205;
            if (v205)
              goto LABEL_109;
            goto LABEL_61;
          }
          v55 = v52 == v50 && v54 == v51;
          v12 = v195;
          if (v55)
          {
LABEL_80:
            v16 = v185;
            v14 = v202;
            if (!v32)
            {
              v15 = v42;
              v2 = v191;
              goto LABEL_120;
            }
            goto LABEL_61;
          }
        }
        v57 = 0;
        v16 = v185;
        v14 = v202;
LABEL_78:
        if ((sub_235EE60D0() & 1) != 0)
        {
          v58 = 0;
LABEL_101:
          v32 = v205;
          v12 = v195;
          if (((v205 ^ (v58 < v57)) & 1) == 0)
            goto LABEL_109;
        }
        else
        {
          v63 = (_QWORD *)v204;
          v64 = 1;
          while (v44 != v64)
          {
            v58 = v64;
            if (v208 == v64)
              goto LABEL_252;
            if (*(v63 - 1) != v50 || v51 != *v63)
            {
              v66 = sub_235EE60D0();
              v64 = v58 + 1;
              v63 += 2;
              if ((v66 & 1) == 0)
                continue;
            }
            goto LABEL_101;
          }
          v12 = v195;
          v32 = v205;
          if (v205)
          {
LABEL_230:
            v2 = v191;
            if (v42 < v14)
              goto LABEL_272;
LABEL_112:
            if (v14 < v42)
            {
              v67 = v42 << 6;
              v68 = v14 << 6;
              v69 = v42;
              v70 = v14;
              do
              {
                if (v70 != --v69)
                {
                  if (!v12)
                    goto LABEL_277;
                  v71 = (_OWORD *)(v12 + v68);
                  v72 = *(_OWORD *)(v12 + v68);
                  v73 = v12 + v67;
                  v74 = *(_QWORD *)(v12 + v68 + 16);
                  v75 = *(_BYTE *)(v12 + v68 + 40);
                  v76 = *(_QWORD *)(v12 + v68 + 48);
                  v77 = *(_QWORD *)(v12 + v68 + 56);
                  v78 = *(_OWORD *)(v12 + v68 + 24);
                  v79 = *(_OWORD *)(v12 + v67 - 16);
                  v81 = *(_OWORD *)(v12 + v67 - 64);
                  v80 = *(_OWORD *)(v12 + v67 - 48);
                  v71[2] = *(_OWORD *)(v12 + v67 - 32);
                  v71[3] = v79;
                  *v71 = v81;
                  v71[1] = v80;
                  *(_OWORD *)(v73 - 64) = v72;
                  *(_QWORD *)(v73 - 48) = v74;
                  *(_OWORD *)(v73 - 40) = v78;
                  *(_BYTE *)(v73 - 24) = v75;
                  *(_QWORD *)(v73 - 16) = v76;
                  *(_QWORD *)(v73 - 8) = v77;
                }
                ++v70;
                v67 -= 64;
                v68 += 64;
              }
              while (v70 < v69);
            }
            v15 = v42;
            goto LABEL_120;
          }
        }
LABEL_61:
        v43 = v42++;
        if (v42 == v16)
        {
          v42 = v16;
LABEL_109:
          v2 = v191;
          break;
        }
      }
    }
    v15 = v42;
    if (v32)
    {
      if (v42 < v14)
        goto LABEL_272;
      goto LABEL_112;
    }
LABEL_120:
    v192 = v2;
    if (v15 >= v16)
      goto LABEL_128;
    if (__OFSUB__(v15, v14))
      goto LABEL_270;
    if (v15 - v14 >= v181)
      goto LABEL_128;
    v82 = v14 + v181;
    if (__OFADD__(v14, v181))
      goto LABEL_273;
    if (v82 >= v16)
      v82 = v16;
    if (v82 < v14)
      break;
    v184 = v82;
    if (v15 != v82)
    {
      do
      {
        v135 = v12 + (v15 << 6);
        v137 = *(_QWORD *)(v135 + 48);
        v136 = *(_QWORD *)(v135 + 56);
        v189 = v15;
        while (1)
        {
          v199 = v15;
          v138 = v15 - 1;
          v197 = (_QWORD *)(v12 + ((v15 - 1) << 6) + 32);
          v139 = v12 + ((v15 - 1) << 6);
          v201 = *(_QWORD *)(v139 + 48);
          v198 = (_QWORD *)(v139 + 48);
          v196 = v139;
          v140 = *(_QWORD *)(v139 + 56);
          v141 = qword_25638B4C0;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v141 != -1)
            swift_once();
          v142 = qword_256393B40;
          v143 = *(_QWORD *)(qword_256393B40 + 16);
          if (!v143)
          {
LABEL_175:
            v14 = v202;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v12 = v195;
            goto LABEL_176;
          }
          v144 = *(_QWORD *)(qword_256393B40 + 32) == v137 && *(_QWORD *)(qword_256393B40 + 40) == v136;
          v145 = !v144;
          v14 = v202;
          v193 = *(_QWORD *)(qword_256393B40 + 40);
          v194 = v138;
          if (v144)
          {
            v148 = 0;
            v147 = v201;
            if (v137 == v201 && v136 == v140)
              goto LABEL_204;
          }
          else
          {
            v146 = *(_QWORD *)(qword_256393B40 + 32);
            v147 = v201;
            if ((sub_235EE60D0() & 1) != 0)
            {
              v148 = 0;
              if (v146 == v201)
              {
                v14 = v202;
                if (v193 == v140)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  v12 = v195;
                  v149 = v199;
                  goto LABEL_222;
                }
              }
              else
              {
                v14 = v202;
              }
            }
            else
            {
              v186 = v146;
              v150 = (_QWORD *)(v142 + 56);
              v151 = 1;
              do
              {
                if (v143 == v151)
                  goto LABEL_175;
                v148 = v151;
                if (*(v150 - 1) == v137 && *v150 == v136)
                  break;
                v153 = sub_235EE60D0();
                v151 = v148 + 1;
                v150 += 2;
              }
              while ((v153 & 1) == 0);
              v14 = v202;
              if (v186 == v201 && v193 == v140)
              {
LABEL_204:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v12 = v195;
                v149 = v199;
                if (!v145)
                  goto LABEL_222;
                goto LABEL_176;
              }
            }
          }
          if ((sub_235EE60D0() & 1) != 0)
            break;
          if (v143 <= 1)
            v154 = 1;
          else
            v154 = v143;
          v155 = (_QWORD *)(v142 + 56);
          v156 = 1;
          do
          {
            if (v143 == v156)
              goto LABEL_175;
            v157 = v156;
            if (v154 == v156)
            {
              __break(1u);
LABEL_248:
              __break(1u);
LABEL_249:
              __break(1u);
LABEL_250:
              __break(1u);
LABEL_251:
              __break(1u);
LABEL_252:
              __break(1u);
LABEL_253:
              __break(1u);
LABEL_254:
              __break(1u);
LABEL_255:
              __break(1u);
LABEL_256:
              __break(1u);
LABEL_257:
              __break(1u);
LABEL_258:
              __break(1u);
LABEL_259:
              __break(1u);
LABEL_260:
              __break(1u);
LABEL_261:
              __break(1u);
LABEL_262:
              __break(1u);
LABEL_263:
              __break(1u);
LABEL_264:
              __break(1u);
LABEL_265:
              __break(1u);
LABEL_266:
              __break(1u);
LABEL_267:
              __break(1u);
LABEL_268:
              __break(1u);
LABEL_269:
              __break(1u);
LABEL_270:
              __break(1u);
LABEL_271:
              __break(1u);
LABEL_272:
              __break(1u);
LABEL_273:
              __break(1u);
              goto LABEL_274;
            }
            if (*(v155 - 1) == v147 && v140 == *v155)
              break;
            v159 = sub_235EE60D0();
            v156 = v157 + 1;
            v155 += 2;
          }
          while ((v159 & 1) == 0);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v12 = v195;
          v14 = v202;
          v149 = v199;
          if (v157 < v148)
            goto LABEL_176;
LABEL_222:
          if (!v12)
            goto LABEL_275;
          v160 = v12 + (v149 << 6);
          v162 = *(_QWORD *)v160;
          v161 = *(_QWORD *)(v160 + 8);
          v163 = *(_QWORD *)(v160 + 16);
          v164 = *(_QWORD *)(v160 + 24);
          v165 = *(_QWORD *)(v160 + 32);
          v166 = *(_BYTE *)(v160 + 40);
          v137 = *(_QWORD *)(v160 + 48);
          v136 = *(_QWORD *)(v160 + 56);
          v167 = *(_OWORD *)(v196 + 16);
          *(_OWORD *)v160 = *(_OWORD *)v196;
          *(_OWORD *)(v160 + 16) = v167;
          v168 = *(_OWORD *)(v196 + 48);
          *(_OWORD *)(v160 + 32) = *(_OWORD *)(v196 + 32);
          *(_OWORD *)(v160 + 48) = v168;
          *(_QWORD *)v196 = v162;
          *(_QWORD *)(v196 + 8) = v161;
          *(_QWORD *)(v196 + 16) = v163;
          *(_QWORD *)(v196 + 24) = v164;
          *v197 = v165;
          *(_BYTE *)(v196 + 40) = v166;
          v15 = v194;
          *v198 = v137;
          v198[1] = v136;
          if (v194 == v14)
            goto LABEL_176;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v12 = v195;
        v149 = v199;
        if (v148 <= 0)
          goto LABEL_222;
LABEL_176:
        v15 = v189 + 1;
      }
      while (v189 + 1 != v184);
      v15 = v184;
      if (v184 < v14)
        goto LABEL_265;
      goto LABEL_129;
    }
LABEL_128:
    if (v15 < v14)
      goto LABEL_265;
LABEL_129:
    v188 = v15;
    v10 = v183;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_235EE08D8(0, *((_QWORD *)v183 + 2) + 1, 1, v183);
    v11 = v188;
    v9 = __dst;
    v84 = *((_QWORD *)v10 + 2);
    v83 = *((_QWORD *)v10 + 3);
    v85 = v84 + 1;
    v12 = v195;
    if (v84 >= v83 >> 1)
    {
      v169 = sub_235EE08D8((char *)(v83 > 1), v84 + 1, 1, v10);
      v9 = __dst;
      v11 = v188;
      v10 = v169;
      v12 = v195;
    }
    *((_QWORD *)v10 + 2) = v85;
    v86 = v10 + 32;
    v87 = &v10[16 * v84 + 32];
    *(_QWORD *)v87 = v14;
    *((_QWORD *)v87 + 1) = v11;
    if (v84)
    {
      while (1)
      {
        v88 = v85 - 1;
        if (v85 >= 4)
        {
          v93 = &v86[16 * v85];
          v94 = *((_QWORD *)v93 - 8);
          v95 = *((_QWORD *)v93 - 7);
          v99 = __OFSUB__(v95, v94);
          v96 = v95 - v94;
          if (v99)
            goto LABEL_253;
          v98 = *((_QWORD *)v93 - 6);
          v97 = *((_QWORD *)v93 - 5);
          v99 = __OFSUB__(v97, v98);
          v91 = v97 - v98;
          v92 = v99;
          if (v99)
            goto LABEL_254;
          v100 = v85 - 2;
          v101 = &v86[16 * v85 - 32];
          v103 = *(_QWORD *)v101;
          v102 = *((_QWORD *)v101 + 1);
          v99 = __OFSUB__(v102, v103);
          v104 = v102 - v103;
          if (v99)
            goto LABEL_256;
          v99 = __OFADD__(v91, v104);
          v105 = v91 + v104;
          if (v99)
            goto LABEL_259;
          if (v105 >= v96)
          {
            v123 = &v86[16 * v88];
            v125 = *(_QWORD *)v123;
            v124 = *((_QWORD *)v123 + 1);
            v99 = __OFSUB__(v124, v125);
            v126 = v124 - v125;
            if (v99)
              goto LABEL_263;
            v116 = v91 < v126;
            goto LABEL_165;
          }
        }
        else
        {
          if (v85 != 3)
          {
            v117 = *((_QWORD *)v10 + 4);
            v118 = *((_QWORD *)v10 + 5);
            v99 = __OFSUB__(v118, v117);
            v110 = v118 - v117;
            v111 = v99;
            goto LABEL_159;
          }
          v90 = *((_QWORD *)v10 + 4);
          v89 = *((_QWORD *)v10 + 5);
          v99 = __OFSUB__(v89, v90);
          v91 = v89 - v90;
          v92 = v99;
        }
        if ((v92 & 1) != 0)
          goto LABEL_255;
        v100 = v85 - 2;
        v106 = &v86[16 * v85 - 32];
        v108 = *(_QWORD *)v106;
        v107 = *((_QWORD *)v106 + 1);
        v109 = __OFSUB__(v107, v108);
        v110 = v107 - v108;
        v111 = v109;
        if (v109)
          goto LABEL_258;
        v112 = &v86[16 * v88];
        v114 = *(_QWORD *)v112;
        v113 = *((_QWORD *)v112 + 1);
        v99 = __OFSUB__(v113, v114);
        v115 = v113 - v114;
        if (v99)
          goto LABEL_261;
        if (__OFADD__(v110, v115))
          goto LABEL_262;
        if (v110 + v115 >= v91)
        {
          v116 = v91 < v115;
LABEL_165:
          if (v116)
            v88 = v100;
          goto LABEL_167;
        }
LABEL_159:
        if ((v111 & 1) != 0)
          goto LABEL_257;
        v119 = &v86[16 * v88];
        v121 = *(_QWORD *)v119;
        v120 = *((_QWORD *)v119 + 1);
        v99 = __OFSUB__(v120, v121);
        v122 = v120 - v121;
        if (v99)
          goto LABEL_260;
        if (v122 < v110)
          goto LABEL_226;
LABEL_167:
        v127 = v88 - 1;
        if (v88 - 1 >= v85)
          goto LABEL_248;
        if (!v12)
          goto LABEL_276;
        v128 = v10;
        v129 = &v86[16 * v127];
        v130 = *(_QWORD *)v129;
        v131 = &v86[16 * v88];
        v132 = *((_QWORD *)v131 + 1);
        v133 = v9;
        sub_235EDFF60((char *)(v12 + (*(_QWORD *)v129 << 6)), (char *)(v12 + (*(_QWORD *)v131 << 6)), (char *)(v12 + (v132 << 6)), v9);
        if (v192)
          goto LABEL_246;
        if (v132 < v130)
          goto LABEL_249;
        if (v88 > *((_QWORD *)v128 + 2))
          goto LABEL_250;
        *(_QWORD *)v129 = v130;
        *(_QWORD *)&v86[16 * v127 + 8] = v132;
        v134 = *((_QWORD *)v128 + 2);
        if (v88 >= v134)
          goto LABEL_251;
        v10 = v128;
        v85 = v134 - 1;
        memmove(&v86[16 * v88], v131 + 16, 16 * (v134 - 1 - v88));
        *((_QWORD *)v128 + 2) = v134 - 1;
        v12 = v195;
        v11 = v188;
        v9 = v133;
        if (v134 <= 2)
          goto LABEL_226;
      }
    }
    v85 = 1;
LABEL_226:
    v13 = v185;
    v2 = v192;
    if (v11 >= v185)
      goto LABEL_235;
  }
LABEL_274:
  __break(1u);
LABEL_275:
  __break(1u);
LABEL_276:
  __break(1u);
LABEL_277:
  __break(1u);
LABEL_278:
  __break(1u);
LABEL_279:
  result = sub_235EE6004();
  __break(1u);
  return result;
}

uint64_t sub_235EDFAE0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  BOOL v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  char v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  __int128 v35;
  __int128 v36;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v41 = result;
  if (a3 != a2)
  {
    v4 = *a4;
    v42 = *a4;
LABEL_6:
    v5 = v4 + (a3 << 6);
    v7 = *(_QWORD *)(v5 + 48);
    v6 = *(_QWORD *)(v5 + 56);
    v39 = a3;
    while (1)
    {
      v44 = a3 - 1;
      v45 = a3;
      v43 = v4 + ((a3 - 1) << 6);
      v8 = *(_QWORD *)(v43 + 48);
      v9 = *(_QWORD *)(v43 + 56);
      v10 = qword_25638B4C0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v11 = v9;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v10 != -1)
        swift_once();
      v12 = qword_256393B40;
      v13 = *(_QWORD *)(qword_256393B40 + 16);
      if (!v13)
        goto LABEL_4;
      v14 = *(_QWORD *)(qword_256393B40 + 32);
      v15 = v14 == v7 && *(_QWORD *)(qword_256393B40 + 40) == v6;
      v16 = !v15;
      if (v15)
      {
        v18 = 0;
        if (v7 == v8 && v6 == v11)
        {
LABEL_34:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          result = swift_bridgeObjectRelease();
          v4 = v42;
          v19 = v45;
          if ((v16 & 1) != 0)
            goto LABEL_5;
          goto LABEL_51;
        }
      }
      else
      {
        v40 = v16;
        v17 = *(_QWORD *)(qword_256393B40 + 40);
        if ((sub_235EE60D0() & 1) == 0)
        {
          v38 = v14;
          v20 = (_QWORD *)(v12 + 56);
          v21 = 1;
          while (v13 != v21)
          {
            v18 = v21;
            if (*(v20 - 1) != v7 || *v20 != v6)
            {
              v23 = sub_235EE60D0();
              v21 = v18 + 1;
              v20 += 2;
              if ((v23 & 1) == 0)
                continue;
            }
            if (v38 == v8)
            {
              v15 = v17 == v11;
              v16 = v40;
              if (v15)
                goto LABEL_34;
            }
            goto LABEL_36;
          }
          goto LABEL_4;
        }
        v18 = 0;
        if (v14 == v8 && v17 == v11)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          result = swift_bridgeObjectRelease();
          v4 = v42;
          v19 = v45;
          goto LABEL_51;
        }
      }
LABEL_36:
      result = sub_235EE60D0();
      if ((result & 1) == 0)
      {
        if (v13 <= 1)
          v24 = 1;
        else
          v24 = v13;
        v25 = (_QWORD *)(v12 + 56);
        v26 = 1;
        while (v13 != v26)
        {
          v27 = v26;
          if (v24 == v26)
          {
            __break(1u);
            goto LABEL_55;
          }
          if (*(v25 - 1) != v8 || v11 != *v25)
          {
            result = sub_235EE60D0();
            v26 = v27 + 1;
            v25 += 2;
            if ((result & 1) == 0)
              continue;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          result = swift_bridgeObjectRelease();
          v4 = v42;
          v19 = v45;
          if (v27 < v18)
            goto LABEL_5;
          goto LABEL_51;
        }
LABEL_4:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        v4 = v42;
LABEL_5:
        a3 = v39 + 1;
        if (v39 + 1 == a2)
          return result;
        goto LABEL_6;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      v4 = v42;
      v19 = v45;
      if (v18 > 0)
        goto LABEL_5;
LABEL_51:
      if (!v4)
      {
LABEL_55:
        __break(1u);
        return result;
      }
      v29 = (uint64_t *)(v4 + (v19 << 6));
      v30 = *v29;
      result = v29[1];
      v31 = v29[2];
      v32 = v29[3];
      v33 = v29[4];
      v34 = *((_BYTE *)v29 + 40);
      v7 = v29[6];
      v6 = v29[7];
      v35 = *(_OWORD *)(v43 + 16);
      *(_OWORD *)v29 = *(_OWORD *)v43;
      *((_OWORD *)v29 + 1) = v35;
      v36 = *(_OWORD *)(v43 + 48);
      *((_OWORD *)v29 + 2) = *(_OWORD *)(v43 + 32);
      *((_OWORD *)v29 + 3) = v36;
      *(_QWORD *)v43 = v30;
      *(_QWORD *)(v43 + 8) = result;
      *(_QWORD *)(v43 + 16) = v31;
      *(_QWORD *)(v43 + 24) = v32;
      *(_QWORD *)(v43 + 32) = v33;
      *(_BYTE *)(v43 + 40) = v34;
      a3 = v44;
      *(_QWORD *)(v43 + 48) = v7;
      *(_QWORD *)(v43 + 56) = v6;
      if (v44 == v41)
        goto LABEL_5;
    }
  }
  return result;
}

uint64_t sub_235EDFF60(char *__src, char *a2, char *a3, char *__dst)
{
  char *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  BOOL v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  char v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  char v36;
  char *v37;
  unint64_t v38;
  char *v39;
  char *v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  char *v44;
  char *v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  BOOL v56;
  char v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  char v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  char v68;
  char *v69;
  unint64_t v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  uint64_t result;
  char v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  char v80;
  char *v81;
  char *v82;
  char *v83;
  char *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  char *v88;
  char *v89;
  char *v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;

  v4 = __dst;
  v5 = a3;
  v6 = __src;
  v7 = a2 - __src;
  v8 = a2 - __src + 63;
  if (a2 - __src >= 0)
    v8 = a2 - __src;
  v9 = v8 >> 6;
  v10 = a3 - a2;
  v11 = a3 - a2 + 63;
  if (a3 - a2 >= 0)
    v11 = a3 - a2;
  v12 = v11 >> 6;
  v94 = __src;
  v93 = __dst;
  if (v9 >= v11 >> 6)
  {
    if (v10 < -63)
      goto LABEL_136;
    if (__dst != a2 || &a2[64 * v12] <= __dst)
    {
      v44 = a2;
      memmove(__dst, a2, v12 << 6);
      a2 = v44;
    }
    v45 = &v4[64 * v12];
    v92 = v45;
    v94 = a2;
    if (v6 >= a2 || v10 < 64)
    {
LABEL_133:
      sub_235EE09D0((void **)&v94, (const void **)&v93, &v92);
      return 1;
    }
    v87 = v6;
    v79 = v4;
    while (1)
    {
      v50 = *((_QWORD *)v45 - 2);
      v49 = *((_QWORD *)v45 - 1);
      v82 = v45;
      v51 = *((_QWORD *)a2 - 1);
      v85 = *((_QWORD *)a2 - 2);
      v91 = a2;
      v52 = qword_25638B4C0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v52 != -1)
        swift_once();
      v89 = v5;
      v83 = v5 - 64;
      v53 = qword_256393B40;
      v54 = *(_QWORD *)(qword_256393B40 + 16);
      if (!v54)
        goto LABEL_125;
      v55 = *(_QWORD *)(qword_256393B40 + 32);
      v56 = v55 == v50 && *(_QWORD *)(qword_256393B40 + 40) == v49;
      v57 = !v56;
      if (v56)
      {
        v58 = 0;
        if (v50 == v85 && v49 == v51)
        {
LABEL_105:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v57 & 1) == 0)
            goto LABEL_122;
          goto LABEL_126;
        }
      }
      else
      {
        v77 = *(_QWORD *)(qword_256393B40 + 40);
        if ((sub_235EE60D0() & 1) == 0)
        {
          v75 = v57;
          v59 = (_QWORD *)(v53 + 56);
          v60 = 1;
          while (v54 != v60)
          {
            v58 = v60;
            if (*(v59 - 1) != v50 || *v59 != v49)
            {
              v62 = sub_235EE60D0();
              v60 = v58 + 1;
              v59 += 2;
              if ((v62 & 1) == 0)
                continue;
            }
            v57 = v75;
            if (v55 != v85 || v77 != v51)
              goto LABEL_107;
            goto LABEL_105;
          }
          goto LABEL_125;
        }
        v58 = 0;
        if (v55 == v85 && v77 == v51)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_122:
          v69 = v91 - 64;
          v70 = (unint64_t)v87;
          v5 = v83;
          v45 = v82;
          if (v89 != v91 || v83 >= v91)
          {
            v46 = *(_OWORD *)v69;
            v47 = *((_OWORD *)v91 - 3);
            v48 = *((_OWORD *)v91 - 1);
            *((_OWORD *)v83 + 2) = *((_OWORD *)v91 - 2);
            *((_OWORD *)v83 + 3) = v48;
            *(_OWORD *)v83 = v46;
            *((_OWORD *)v83 + 1) = v47;
          }
          v94 = v91 - 64;
          if (v82 <= v79)
            goto LABEL_133;
          goto LABEL_78;
        }
      }
LABEL_107:
      if ((sub_235EE60D0() & 1) == 0)
      {
        if (v54 <= 1)
          v63 = 1;
        else
          v63 = v54;
        v64 = (_QWORD *)(v53 + 56);
        v65 = 1;
        while (v54 != v65)
        {
          v66 = v65;
          if (v63 == v65)
          {
            __break(1u);
LABEL_135:
            __break(1u);
            goto LABEL_136;
          }
          if (*(v64 - 1) != v85 || v51 != *v64)
          {
            v68 = sub_235EE60D0();
            v65 = v66 + 1;
            v64 += 2;
            if ((v68 & 1) == 0)
              continue;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v66 < v58)
            goto LABEL_126;
          goto LABEL_122;
        }
LABEL_125:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_126;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v58 <= 0)
        goto LABEL_122;
LABEL_126:
      v45 = v82 - 64;
      v92 = v82 - 64;
      v70 = (unint64_t)v87;
      v5 = v83;
      if (v89 < v82 || v83 >= v82 || v89 != v82)
      {
        v71 = *(_OWORD *)v45;
        v72 = *((_OWORD *)v82 - 3);
        v73 = *((_OWORD *)v82 - 1);
        *((_OWORD *)v83 + 2) = *((_OWORD *)v82 - 2);
        *((_OWORD *)v83 + 3) = v73;
        *(_OWORD *)v83 = v71;
        *((_OWORD *)v83 + 1) = v72;
      }
      v69 = v91;
      if (v45 <= v79)
        goto LABEL_133;
LABEL_78:
      a2 = v69;
      if ((unint64_t)v69 <= v70)
        goto LABEL_133;
    }
  }
  if (v7 >= -63)
  {
    if (__dst != __src || &__src[64 * v9] <= __dst)
    {
      v13 = a2;
      memmove(__dst, __src, v9 << 6);
      a2 = v13;
    }
    v81 = &v4[64 * v9];
    v92 = v81;
    if (a2 < v5 && v7 >= 64)
    {
      v14 = v4;
      v88 = v5;
      while (1)
      {
        v78 = v4;
        v86 = v6;
        v16 = *((_QWORD *)a2 + 6);
        v15 = *((_QWORD *)a2 + 7);
        v90 = a2;
        v18 = *((_QWORD *)v14 + 6);
        v17 = *((_QWORD *)v14 + 7);
        v84 = v14;
        v19 = qword_25638B4C0;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v19 != -1)
          swift_once();
        v20 = qword_256393B40;
        v21 = *(_QWORD *)(qword_256393B40 + 16);
        if (!v21)
          goto LABEL_60;
        v22 = *(_QWORD *)(qword_256393B40 + 32);
        v23 = v22 == v16 && *(_QWORD *)(qword_256393B40 + 40) == v15;
        v24 = !v23;
        if (v23)
        {
          v26 = 0;
          if (v16 == v18 && v15 == v17)
          {
LABEL_40:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v24 & 1) != 0)
              goto LABEL_61;
            goto LABEL_57;
          }
        }
        else
        {
          v80 = v24;
          v25 = *(_QWORD *)(qword_256393B40 + 40);
          if ((sub_235EE60D0() & 1) == 0)
          {
            v76 = v22;
            v27 = (_QWORD *)(v20 + 56);
            v28 = 1;
            while (v21 != v28)
            {
              v26 = v28;
              if (*(v27 - 1) != v16 || *v27 != v15)
              {
                v30 = sub_235EE60D0();
                v28 = v26 + 1;
                v27 += 2;
                if ((v30 & 1) == 0)
                  continue;
              }
              if (v76 == v18)
              {
                v23 = v25 == v17;
                v24 = v80;
                if (v23)
                  goto LABEL_40;
              }
              goto LABEL_42;
            }
            goto LABEL_60;
          }
          v26 = 0;
          if (v22 == v18 && v25 == v17)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_57;
          }
        }
LABEL_42:
        if ((sub_235EE60D0() & 1) == 0)
        {
          if (v21 <= 1)
            v31 = 1;
          else
            v31 = v21;
          v32 = (_QWORD *)(v20 + 56);
          v33 = 1;
          while (v21 != v33)
          {
            v34 = v33;
            if (v31 == v33)
              goto LABEL_135;
            if (*(v32 - 1) != v18 || v17 != *v32)
            {
              v36 = sub_235EE60D0();
              v33 = v34 + 1;
              v32 += 2;
              if ((v36 & 1) == 0)
                continue;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v34 < v26)
              goto LABEL_61;
            goto LABEL_57;
          }
LABEL_60:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_61:
          v37 = v84;
          v4 = v84 + 64;
          v40 = v86;
          v38 = (unint64_t)v88;
          v39 = v90;
          v14 = v84 + 64;
          if (v86 == v84 && v86 < v4)
            goto LABEL_66;
          goto LABEL_65;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v26 > 0)
          goto LABEL_61;
LABEL_57:
        v38 = (unint64_t)v88;
        v37 = v90;
        v39 = v90 + 64;
        v40 = v86;
        v14 = v84;
        if (v86 == v90)
        {
          v4 = v78;
          if (v86 < v39)
            goto LABEL_66;
        }
        else
        {
          v4 = v78;
        }
LABEL_65:
        v41 = *(_OWORD *)v37;
        v42 = *((_OWORD *)v37 + 1);
        v43 = *((_OWORD *)v37 + 3);
        *((_OWORD *)v40 + 2) = *((_OWORD *)v37 + 2);
        *((_OWORD *)v40 + 3) = v43;
        *(_OWORD *)v40 = v41;
        *((_OWORD *)v40 + 1) = v42;
LABEL_66:
        v6 = v40 + 64;
        if (v14 < v81)
        {
          a2 = v39;
          if ((unint64_t)v39 < v38)
            continue;
        }
        v93 = v4;
        v94 = v6;
        goto LABEL_133;
      }
    }
    goto LABEL_133;
  }
LABEL_136:
  result = sub_235EE6040();
  __break(1u);
  return result;
}

char *sub_235EE08D8(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25638D618);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_235EE09D0(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 63;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -64)
  {
    result = (char *)sub_235EE6040();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 6;
    if (result != v3 || result >= &v3[64 * v7])
      return (char *)memmove(result, v3, v7 << 6);
  }
  return result;
}

char *sub_235EE0A78(uint64_t a1)
{
  return sub_235EE08D8(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_235EE0A8C(uint64_t *a1, uint64_t a2, unint64_t a3)
{
  uint64_t *v3;
  uint64_t v6;
  unint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v10;
  uint64_t __s1;

  v6 = *v3;
  sub_235EE6154();
  swift_bridgeObjectRetain();
  sub_235EE5AC4();
  v7 = sub_235EE616C() & ~(-1 << *(_BYTE *)(v6 + 32));
  if (((*(_QWORD *)(v6 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
    __asm { BR              X8 }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  __s1 = *v10;
  *v10 = 0x8000000000000000;
  sub_235E90998(a2, a3);
  sub_235EE1794(a2, a3, v7, isUniquelyReferenced_nonNull_native);
  *v10 = __s1;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_235EE14B8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25638D630);
  v3 = sub_235EE5FA4();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_235EE6154();
      sub_235EE5AC4();
      result = sub_235EE616C();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_235EE1794(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v7 = result;
  v8 = *(_QWORD *)(*v4 + 16);
  v9 = *(_QWORD *)(*v4 + 24);
  if (v9 <= v8 || (a4 & 1) == 0)
  {
    if ((a4 & 1) != 0)
    {
      sub_235EE14B8();
    }
    else
    {
      if (v9 > v8)
      {
        result = (uint64_t)sub_235EE21D8();
        goto LABEL_10;
      }
      sub_235EE2388();
    }
    v10 = *v4;
    sub_235EE6154();
    sub_235EE5AC4();
    result = sub_235EE616C();
    a3 = result & ~(-1 << *(_BYTE *)(v10 + 32));
    if (((*(_QWORD *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
      __asm { BR              X8 }
  }
LABEL_10:
  v11 = *v4;
  *(_QWORD *)(*v4 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v12 = (uint64_t *)(*(_QWORD *)(v11 + 48) + 16 * a3);
  *v12 = v7;
  v12[1] = a2;
  v13 = *(_QWORD *)(v11 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
  {
    __break(1u);
    JUMPOUT(0x235EE20FCLL);
  }
  *(_QWORD *)(v11 + 16) = v15;
  return result;
}

void *sub_235EE21D8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25638D630);
  v2 = *v0;
  v3 = sub_235EE5F98();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_28;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
      {
        v9 = v18 + 2;
        if (v18 + 2 >= v13)
          goto LABEL_28;
        v19 = *(_QWORD *)(v6 + 8 * v9);
        if (!v19)
          break;
      }
    }
LABEL_27:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = *(_OWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_OWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = (void *)sub_235E90998(v17, *((unint64_t *)&v17 + 1));
  }
  v20 = v18 + 3;
  if (v20 >= v13)
    goto LABEL_28;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_235EE2388()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  uint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25638D630);
  v3 = sub_235EE5FA4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_235EE6154();
    sub_235E90998(v20, v21);
    sub_235EE5AC4();
    result = sub_235EE616C();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_235EE2638(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v18;
  _QWORD *v19;

  if (*(_QWORD *)(a1 + 16) >= *(_QWORD *)(a2 + 16))
  {
    v19 = (_QWORD *)(a2 + 56);
    v5 = -1 << *(_BYTE *)(a2 + 32);
    if (-v5 < 64)
      v6 = ~(-1 << -(char)v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(a2 + 56);
    v18 = (unint64_t)(63 - v5) >> 6;
    v8 = a1 + 56;
    swift_bridgeObjectRetain();
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      if (!*(_QWORD *)(a1 + 16))
        goto LABEL_27;
      goto LABEL_22;
    }
    if (v18 > 1)
    {
      v10 = v19[1];
      v11 = 1;
      if (v10)
        goto LABEL_21;
      v11 = 2;
      if (v18 > 2)
      {
        v10 = v19[2];
        if (v10)
          goto LABEL_21;
        v11 = 3;
        if (v18 > 3)
        {
          v10 = v19[3];
          if (v10)
            goto LABEL_21;
          v12 = 4;
          if (v18 > 4)
          {
            v10 = v19[4];
            if (v10)
            {
              v11 = 4;
LABEL_21:
              v9 = __clz(__rbit64(v10)) + (v11 << 6);
              if (!*(_QWORD *)(a1 + 16))
              {
LABEL_27:
                v2 = 0;
LABEL_25:
                sub_235ED8EA4();
                return v2;
              }
LABEL_22:
              v13 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v9);
              v15 = *v13;
              v14 = v13[1];
              sub_235EE6154();
              sub_235E90998(v15, v14);
              sub_235EE5AC4();
              v16 = sub_235EE616C() & ~(-1 << *(_BYTE *)(a1 + 32));
              if (((*(_QWORD *)(v8 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
                __asm { BR              X8 }
              sub_235E90954(v15, v14);
              v2 = 0;
              goto LABEL_25;
            }
            while (1)
            {
              v11 = v12 + 1;
              if (__OFADD__(v12, 1))
                __break(1u);
              if (v11 >= v18)
                break;
              v10 = v19[v11];
              ++v12;
              if (v10)
                goto LABEL_21;
            }
          }
        }
      }
    }
    v2 = 1;
    goto LABEL_25;
  }
  return 0;
}

uint64_t sub_235EE3170(uint64_t a1)
{
  return sub_235EDE79C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_235EE3184(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  _QWORD *v43;

  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  v43 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (!v7)
    goto LABEL_7;
LABEL_4:
  v11 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v19)) + (v10 << 6))
  {
    v13 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v14 = *v13;
    v15 = v13[1];
    v16 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a2(&v34, v14, v15, v16);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    v17 = v35;
    if (v35)
    {
      v28 = v37;
      v29 = v36;
      v26 = v34;
      v27 = v38;
      v30 = v39;
      v33 = v40;
      v31 = v41;
      v32 = v42;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_235EB06FC(0, v43[2] + 1, 1, v43);
        v43 = (_QWORD *)result;
      }
      v22 = v43[2];
      v21 = v43[3];
      v23 = v22 + 1;
      if (v22 >= v21 >> 1)
      {
        result = (uint64_t)sub_235EB06FC((_QWORD *)(v21 > 1), v22 + 1, 1, v43);
        v23 = v22 + 1;
        v43 = (_QWORD *)result;
      }
      v24 = v43;
      v43[2] = v23;
      v25 = &v24[11 * v22];
      v25[4] = v26;
      v25[5] = v17;
      v25[6] = v29;
      v25[7] = v28;
      v25[8] = v27;
      *(_OWORD *)(v25 + 9) = v30;
      *((_BYTE *)v25 + 88) = v33;
      v25[12] = v31;
      *(_OWORD *)(v25 + 13) = v32;
      if (v7)
        goto LABEL_4;
    }
    else if (v7)
    {
      goto LABEL_4;
    }
LABEL_7:
    v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v18 >= v8)
      goto LABEL_29;
    v19 = *(_QWORD *)(v4 + 8 * v18);
    ++v10;
    if (!v19)
    {
      v10 = v18 + 1;
      if (v18 + 1 >= v8)
        goto LABEL_29;
      v19 = *(_QWORD *)(v4 + 8 * v10);
      if (!v19)
      {
        v10 = v18 + 2;
        if (v18 + 2 >= v8)
          goto LABEL_29;
        v19 = *(_QWORD *)(v4 + 8 * v10);
        if (!v19)
        {
          v10 = v18 + 3;
          if (v18 + 3 >= v8)
            goto LABEL_29;
          v19 = *(_QWORD *)(v4 + 8 * v10);
          if (!v19)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v19 - 1) & v19;
  }
  v20 = v18 + 4;
  if (v20 >= v8)
  {
LABEL_29:
    swift_release();
    return (uint64_t)v43;
  }
  v19 = *(_QWORD *)(v4 + 8 * v20);
  if (v19)
  {
    v10 = v20;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v10 >= v8)
      goto LABEL_29;
    v19 = *(_QWORD *)(v4 + 8 * v10);
    ++v20;
    if (v19)
      goto LABEL_22;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t dispatch thunk of InvitationDestinationServiceProtocol.fetchInvitationDestinationGroups(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 8) + *(_QWORD *)(a3 + 8));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_235EB947C;
  return v9(a1, a2, a3);
}

ValueMetadata *type metadata accessor for InvitationDestinationService()
{
  return &type metadata for InvitationDestinationService;
}

uint64_t sub_235EE34BC(uint64_t *a1)
{
  uint64_t v1;

  return sub_235EDBF00(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_235EE34D8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_235EE3528(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  unint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7[2];
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  sub_235EE35C0();
  result = sub_235EE5EC0();
  v8 = result;
  if (v2)
  {
    v4 = (unint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      sub_235E90998(v5, *v4);
      sub_235EE0A8C(v7, v5, v6);
      sub_235E90954(v7[0], v7[1]);
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

unint64_t sub_235EE35C0()
{
  unint64_t result;

  result = qword_25638D628;
  if (!qword_25638D628)
  {
    result = MEMORY[0x23B7E5230](MEMORY[0x24BDCDE08], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_25638D628);
  }
  return result;
}

uint64_t sub_235EE3604(uint64_t a1)
{
  destroy for TestClient();
  return a1;
}

BOOL static SecureCloudRepairMessage.MessageType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t SecureCloudRepairMessage.MessageType.hash(into:)()
{
  return sub_235EE6160();
}

uint64_t SecureCloudRepairMessage.MessageType.hashValue.getter()
{
  sub_235EE6154();
  sub_235EE6160();
  return sub_235EE616C();
}

uint64_t SecureCloudRepairMessage.buildNumber.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SecureCloudRepairMessage.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SecureCloudRepairMessage() + 20);
  v4 = sub_235EE5B0C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for SecureCloudRepairMessage()
{
  uint64_t result;

  result = qword_25429CB98;
  if (!qword_25429CB98)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t SecureCloudRepairMessage.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudRepairMessage() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

id SecureCloudRepairMessage.secureCloudShareItem.getter()
{
  uint64_t v0;

  return *(id *)(v0 + *(int *)(type metadata accessor for SecureCloudRepairMessage() + 28));
}

uint64_t SecureCloudRepairMessage.type.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SecureCloudRepairMessage();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t SecureCloudRepairMessage.version.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudRepairMessage() + 36));
}

uint64_t SecureCloudRepairMessage.init(buildNumber:date:identifier:secureCloudShareItem:type:version:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  char v15;
  int *v16;
  char *v17;
  uint64_t v18;
  uint64_t result;
  _QWORD *v20;

  v15 = *a7;
  *a9 = a1;
  a9[1] = a2;
  v16 = (int *)type metadata accessor for SecureCloudRepairMessage();
  v17 = (char *)a9 + v16[5];
  v18 = sub_235EE5B0C();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17, a3, v18);
  v20 = (_QWORD *)((char *)a9 + v16[6]);
  *v20 = a4;
  v20[1] = a5;
  *(_QWORD *)((char *)a9 + v16[7]) = a6;
  *((_BYTE *)a9 + v16[8]) = v15;
  *(_QWORD *)((char *)a9 + v16[9]) = a8;
  return result;
}

uint64_t SecureCloudRepairMessage.protobuf()()
{
  type metadata accessor for SecureCloudRepairMessageProtobuf();
  sub_235EE3F84(&qword_25638B9C0, (uint64_t)&protocol conformance descriptor for SecureCloudRepairMessageProtobuf);
  return sub_235EE5C68();
}

uint64_t sub_235EE3940(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;

  v5 = *a2;
  v4 = a2[1];
  v6 = (int *)type metadata accessor for SecureCloudRepairMessageProtobuf();
  v7 = (_QWORD *)(a1 + v6[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *v7 = v5;
  v7[1] = v4;
  v8 = (int *)type metadata accessor for SecureCloudRepairMessage();
  sub_235EE5ADC();
  v9 = a1 + v6[6];
  *(_QWORD *)v9 = v10;
  *(_BYTE *)(v9 + 8) = 0;
  v11 = (_QWORD *)((char *)a2 + v8[6]);
  v13 = *v11;
  v12 = v11[1];
  v14 = (_QWORD *)(a1 + v6[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *v14 = v13;
  v14[1] = v12;
  v15 = objc_msgSend(*(id *)((char *)a2 + v8[7]), sel_codableShareItem);
  if (v15 && (v16 = v15, v17 = objc_msgSend(v15, sel_data), v16, v17))
  {
    v18 = sub_235EE5AB8();
    v20 = v19;

    v21 = a1 + v6[8];
    result = sub_235E90940(*(_QWORD *)v21, *(_QWORD *)(v21 + 8));
    *(_QWORD *)v21 = v18;
    *(_QWORD *)(v21 + 8) = v20;
    v23 = *(_QWORD *)((char *)a2 + v8[9]);
    if ((v23 & 0x8000000000000000) != 0 || HIDWORD(v23))
    {
      result = sub_235EE6004();
      __break(1u);
    }
    else
    {
      v24 = a1 + v6[10];
      *(_DWORD *)v24 = v23;
      *(_BYTE *)(v24 + 4) = 0;
      v25 = a1 + v6[9];
      *(_QWORD *)v25 = (*((_BYTE *)a2 + v8[8]) & 1) != 0;
      *(_WORD *)(v25 + 8) = 1;
    }
  }
  else
  {
    sub_235E9A644();
    swift_allocError();
    *v26 = 1;
    return swift_willThrow();
  }
  return result;
}

uint64_t SecureCloudRepairMessage.init(_:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t *v8;
  unint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  unsigned int *v12;
  uint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  uint64_t v24;
  BOOL v25;
  _BYTE *v26;
  uint64_t result;
  _BYTE *v28;
  int *v29;
  _QWORD *v30;
  uint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v39 = a2;
  v4 = sub_235EE5B0C();
  v43 = *(_QWORD *)(v4 - 8);
  v44 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)type metadata accessor for SecureCloudRepairMessageProtobuf();
  v8 = (uint64_t *)(a1 + v7[5]);
  v9 = v8[1];
  if (v9)
  {
    v38 = *v8;
    v42 = v9;
  }
  else
  {
    v38 = 0;
    v42 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  sub_235EE5AD0();
  v10 = (uint64_t *)(a1 + v7[7]);
  v11 = v10[1];
  v40 = v2;
  if (v11)
  {
    v37 = *v10;
    v41 = v11;
  }
  else
  {
    v37 = 0;
    v41 = 0xE000000000000000;
  }
  v12 = (unsigned int *)(a1 + v7[10]);
  if (*((_BYTE *)v12 + 4))
    v13 = 0;
  else
    v13 = *v12;
  v36 = v13;
  v14 = (uint64_t *)(a1 + v7[8]);
  v16 = *v14;
  v15 = v14[1];
  if (v15 >> 60 == 15)
    v17 = 0;
  else
    v17 = *v14;
  if (v15 >> 60 == 15)
    v18 = 0xC000000000000000;
  else
    v18 = v14[1];
  v19 = objc_allocWithZone(MEMORY[0x24BE01F10]);
  swift_bridgeObjectRetain();
  sub_235E9083C(v16, v15);
  v20 = (void *)sub_235EE5AAC();
  sub_235E90954(v17, v18);
  v21 = objc_msgSend(v19, sel_initWithData_, v20);

  if (!v21)
    goto LABEL_21;
  v22 = objc_msgSend((id)objc_opt_self(), sel_shareItemWithCodableShareItem_, v21);
  if (!v22)
  {

LABEL_21:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_235E9A644();
    swift_allocError();
    *v26 = 1;
    swift_willThrow();
    goto LABEL_22;
  }
  v23 = v22;
  v24 = a1 + v7[9];
  if ((*(_BYTE *)(v24 + 9) & 1) == 0)
  {
    if ((*(_BYTE *)(v24 + 8) & 1) != 0)
    {
      v25 = *(_QWORD *)v24 != 0;
      goto LABEL_26;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_235E9A644();
    swift_allocError();
    *v28 = 1;
    swift_willThrow();

LABEL_22:
    sub_235EE3EB8(a1);
    return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v6, v44);
  }
  v25 = 0;
LABEL_26:

  sub_235EE3EB8(a1);
  v29 = (int *)type metadata accessor for SecureCloudRepairMessage();
  v30 = v39;
  result = (*(uint64_t (**)(char *, char *, uint64_t))(v43 + 32))((char *)v39 + v29[5], v6, v44);
  v31 = v37;
  v32 = v42;
  *v30 = v38;
  v30[1] = v32;
  v33 = (_QWORD *)((char *)v30 + v29[6]);
  v34 = v41;
  *v33 = v31;
  v33[1] = v34;
  *(_QWORD *)((char *)v30 + v29[7]) = v23;
  *((_BYTE *)v30 + v29[8]) = v25;
  *(_QWORD *)((char *)v30 + v29[9]) = v36;
  return result;
}

uint64_t sub_235EE3EB8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SecureCloudRepairMessageProtobuf();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_235EE3EF8()
{
  unint64_t result;

  result = qword_25638D648;
  if (!qword_25638D648)
  {
    result = MEMORY[0x23B7E5230](&protocol conformance descriptor for SecureCloudRepairMessage.MessageType, &type metadata for SecureCloudRepairMessage.MessageType);
    atomic_store(result, (unint64_t *)&qword_25638D648);
  }
  return result;
}

uint64_t sub_235EE3F3C()
{
  return sub_235EE3F84(&qword_25638B9C0, (uint64_t)&protocol conformance descriptor for SecureCloudRepairMessageProtobuf);
}

uint64_t sub_235EE3F60()
{
  return sub_235EE3F84(&qword_25638C6E8, (uint64_t)&protocol conformance descriptor for SecureCloudRepairMessageProtobuf);
}

uint64_t sub_235EE3F84(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for SecureCloudRepairMessageProtobuf();
    result = MEMORY[0x23B7E5230](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_235EE3FC4()
{
  type metadata accessor for SecureCloudRepairMessageProtobuf();
  sub_235EE3F84(&qword_25638B9C0, (uint64_t)&protocol conformance descriptor for SecureCloudRepairMessageProtobuf);
  return sub_235EE5C68();
}

uint64_t sub_235EE403C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return SecureCloudRepairMessage.init(_:)(a1, a2);
}

_QWORD *initializeBufferWithCopyOfBuffer for SecureCloudRepairMessage(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_235EE5B0C();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = a3[7];
    v15 = (_QWORD *)((char *)v4 + v13);
    v16 = (_QWORD *)((char *)a2 + v13);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = *(void **)((char *)a2 + v14);
    *(_QWORD *)((char *)v4 + v14) = v18;
    v19 = a3[9];
    *((_BYTE *)v4 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    *(_QWORD *)((char *)v4 + v19) = *(_QWORD *)((char *)a2 + v19);
    swift_bridgeObjectRetain();
    v20 = v18;
  }
  return v4;
}

void destroy for SecureCloudRepairMessage(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_235EE5B0C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();

}

_QWORD *initializeWithCopy for SecureCloudRepairMessage(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_235EE5B0C();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = a3[7];
  v14 = (_QWORD *)((char *)a1 + v12);
  v15 = (_QWORD *)((char *)a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = *(void **)((char *)a2 + v13);
  *(_QWORD *)((char *)a1 + v13) = v17;
  v18 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *(_QWORD *)((char *)a1 + v18) = *(_QWORD *)((char *)a2 + v18);
  swift_bridgeObjectRetain();
  v19 = v17;
  return a1;
}

_QWORD *assignWithCopy for SecureCloudRepairMessage(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_235EE5B0C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = *(void **)((char *)a2 + v13);
  v15 = *(void **)((char *)a1 + v13);
  *(_QWORD *)((char *)a1 + v13) = v14;
  v16 = v14;

  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  return a1;
}

_OWORD *initializeWithTake for SecureCloudRepairMessage(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_235EE5B0C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v10) = *(_QWORD *)((char *)a2 + v10);
  v11 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *(_QWORD *)((char *)a1 + v11) = *(_QWORD *)((char *)a2 + v11);
  return a1;
}

_QWORD *assignWithTake for SecureCloudRepairMessage(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_235EE5B0C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  v16 = a3[7];
  v17 = *(void **)((char *)a1 + v16);
  *(_QWORD *)((char *)a1 + v16) = *(_QWORD *)((char *)a2 + v16);

  v18 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *(_QWORD *)((char *)a1 + v18) = *(_QWORD *)((char *)a2 + v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for SecureCloudRepairMessage()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_235EE4490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_235EE5B0C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for SecureCloudRepairMessage()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_235EE4518(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_235EE5B0C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_235EE458C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_235EE5B0C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SecureCloudRepairMessage.MessageType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_235EE4674 + 4 * byte_235EEAB85[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_235EE46A8 + 4 * asc_235EEAB80[v4]))();
}

uint64_t sub_235EE46A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_235EE46B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x235EE46B8);
  return result;
}

uint64_t sub_235EE46C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x235EE46CCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_235EE46D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_235EE46D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SecureCloudRepairMessage.MessageType()
{
  return &type metadata for SecureCloudRepairMessage.MessageType;
}

uint64_t sub_235EE46F4(uint64_t a1)
{
  return sub_235EA0BCC(a1);
}

void destroy for TransportMetadata(uint64_t a1)
{
  sub_235EA8D60(*(void **)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s21ActivitySharingClient17TransportMetadataOwCP_0(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  char v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_235EA8D38(*(void **)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for TransportMetadata(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  char v5;
  void *v6;
  uint64_t v7;
  char v8;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_235EA8D38(*(void **)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_235EA8D60(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for TransportMetadata(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_235EA8D60(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for TransportMetadata(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TransportMetadata(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_235EE489C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_235EE48A4(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for TransportMetadata()
{
  return &type metadata for TransportMetadata;
}

uint64_t CodableObjectArray.init(value:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_235EE5DF4();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t CodableObjectArray.value.getter()
{
  void **v0;
  void *v1;
  id v2;
  uint64_t v4;

  v1 = *v0;
  sub_235E8EC68(0, (unint64_t *)&unk_25638D680);
  sub_235EE5E48();
  v2 = v1;
  if (swift_dynamicCast())
    return v4;
  else
    return sub_235EE5E18();
}

id CodableObject.value.getter()
{
  id *v0;

  return *v0;
}

uint64_t CodableObject.init(value:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

BOOL sub_235EE49A4()
{
  return sub_235EE5008();
}

uint64_t sub_235EE49B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x23B7E5230](&unk_235EEAF00, a3);
  return sub_235EE60DC();
}

uint64_t sub_235EE4A04(uint64_t a1)
{
  MEMORY[0x23B7E5230](&unk_235EEAF00, a1);
  return sub_235EE5DC4();
}

uint64_t sub_235EE4A50()
{
  MEMORY[0x23B7E5230](&unk_235EEAF00);
  return sub_235EE5DDC();
}

uint64_t sub_235EE4AA0()
{
  MEMORY[0x23B7E5230](&unk_235EEAF00);
  return sub_235EE5DD0();
}

BOOL sub_235EE4AF0@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = sub_235EE5008();
  *a1 = result;
  return result;
}

BOOL sub_235EE4B2C@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = sub_235EE5008();
  *a1 = result;
  return result;
}

uint64_t sub_235EE4B60(uint64_t a1)
{
  MEMORY[0x23B7E5230](&unk_235EEB0E0, a1);
  return sub_235EE6190();
}

uint64_t sub_235EE4B94(uint64_t a1)
{
  MEMORY[0x23B7E5230](&unk_235EEB0E0, a1);
  return sub_235EE619C();
}

uint64_t CodableObject.encode(to:)(_QWORD *a1, uint64_t a2)
{
  return sub_235EE52E4(a1, a2, (uint64_t (*)(uint64_t, _QWORD))type metadata accessor for CodableObject.CodingKeys, (uint64_t)&unk_235EEB0E0);
}

uint64_t CodableObject.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  char *v16;
  uint64_t v17;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  id v34;
  _BYTE *v35;
  id v36;
  char *v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  id v43[5];

  v40 = a5;
  v43[4] = *(id *)MEMORY[0x24BDAC8D0];
  v7 = type metadata accessor for CodableObject.CodingKeys(255, a2, a3, a4);
  MEMORY[0x23B7E5230](&unk_235EEB0E0, v7);
  v8 = sub_235EE607C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v36 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v12 = v41;
  sub_235EE6178();
  if (!v12)
  {
    v38 = a2;
    v39 = a1;
    v13 = v40;
    v41 = v9;
    sub_235E949F0();
    sub_235EE6070();
    v14 = v8;
    v20 = v43[0];
    v19 = v43[1];
    __swift_instantiateConcreteTypeFromMangledName(&qword_25638D640);
    v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_235EE6BA0;
    v22 = v38;
    *(_QWORD *)(v21 + 56) = swift_getMetatypeMetadata();
    *(_QWORD *)(v21 + 32) = v22;
    sub_235E8EC68(0, (unint64_t *)&unk_25638D6A0);
    v23 = (void *)MEMORY[0x23B7E4AD4](v21);
    v43[0] = 0;
    sub_235EE5EA8();
    if (v43[0])
    {
      v36 = v23;
      v37 = v11;
      v24 = (uint64_t)v20;
      v25 = (void *)objc_opt_self();
      v26 = (void *)sub_235EE5E9C();
      swift_bridgeObjectRelease();
      v27 = (void *)sub_235EE5AAC();
      v43[0] = 0;
      v28 = objc_msgSend(v25, sel__strictlyUnarchivedObjectOfClasses_fromData_error_, v26, v27, v43);

      if (v28)
      {
        v29 = v43[0];
        sub_235EE5F68();
        swift_unknownObjectRelease();
        v30 = swift_dynamicCast();
        v31 = v41;
        if ((v30 & 1) != 0)
        {

          sub_235E90954(v24, (unint64_t)v19);
          v32 = v42;
          (*(void (**)(char *, uint64_t))(v31 + 8))(v37, v14);
          *v13 = v32;
          v17 = (uint64_t)v39;
          return __swift_destroy_boxed_opaque_existential_1(v17);
        }
        sub_235ECFF60();
        swift_allocError();
        *v35 = 1;
        swift_willThrow();

        sub_235E90954(v24, (unint64_t)v19);
        v15 = *(void (**)(char *, uint64_t))(v31 + 8);
      }
      else
      {
        v34 = v43[0];
        sub_235EE5AA0();

        swift_willThrow();
        sub_235E90954(v24, (unint64_t)v19);
        v15 = *(void (**)(char *, uint64_t))(v41 + 8);
      }
      v16 = v37;
    }
    else
    {
      sub_235ECFF60();
      swift_allocError();
      *v33 = 3;
      swift_willThrow();

      sub_235E90954((uint64_t)v20, (unint64_t)v19);
      v15 = *(void (**)(char *, uint64_t))(v41 + 8);
      v16 = v11;
    }
    v15(v16, v14);
    a1 = v39;
  }
  v17 = (uint64_t)a1;
  return __swift_destroy_boxed_opaque_existential_1(v17);
}

BOOL sub_235EE4FFC()
{
  return sub_235EE5008();
}

BOOL sub_235EE5008()
{
  uint64_t v0;

  v0 = sub_235EE604C();
  swift_bridgeObjectRelease();
  return v0 != 0;
}

uint64_t sub_235EE5048@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  return CodableObject.init(from:)(a1, *(_QWORD *)(a2 + 16), a3, a4, a5);
}

uint64_t sub_235EE5060(_QWORD *a1, uint64_t a2)
{
  return CodableObject.encode(to:)(a1, a2);
}

uint64_t sub_235EE5074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x23B7E5230](&unk_235EEAFF0, a3);
  return sub_235EE60DC();
}

uint64_t sub_235EE50C8(uint64_t a1)
{
  MEMORY[0x23B7E5230](&unk_235EEAFF0, a1);
  return sub_235EE5DC4();
}

uint64_t sub_235EE5114()
{
  MEMORY[0x23B7E5230](&unk_235EEAFF0);
  return sub_235EE5DDC();
}

uint64_t sub_235EE5164()
{
  MEMORY[0x23B7E5230](&unk_235EEAFF0);
  return sub_235EE5DD0();
}

BOOL sub_235EE51B4@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = sub_235EE5008();
  *a1 = result;
  return result;
}

BOOL sub_235EE51F0@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = sub_235EE5008();
  *a1 = result;
  return result;
}

uint64_t sub_235EE5224(uint64_t a1)
{
  MEMORY[0x23B7E5230](&unk_235EEB090, a1);
  return sub_235EE6190();
}

uint64_t sub_235EE5258(uint64_t a1)
{
  MEMORY[0x23B7E5230](&unk_235EEB090, a1);
  return sub_235EE619C();
}

uint64_t CodableObjectArray.encode(to:)(_QWORD *a1, uint64_t a2)
{
  return sub_235EE52E4(a1, a2, (uint64_t (*)(uint64_t, _QWORD))type metadata accessor for CodableObjectArray.CodingKeys, (uint64_t)&unk_235EEB090);
}

uint64_t sub_235EE52E4(_QWORD *a1, uint64_t a2, uint64_t (*a3)(uint64_t, _QWORD), uint64_t a4)
{
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23[3];

  v23[2] = *(id *)MEMORY[0x24BDAC8D0];
  v7 = a3(255, *(_QWORD *)(a2 + 16));
  MEMORY[0x23B7E5230](a4, v7);
  v22 = sub_235EE60AC();
  v8 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v10 = (char *)&v21 - v9;
  v11 = *v4;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_235EE6184();
  v12 = (void *)objc_opt_self();
  v23[0] = 0;
  v13 = objc_msgSend(v12, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v11, 1, v23);
  v14 = v23[0];
  if (v13)
  {
    v15 = (void *)sub_235EE5AB8();
    v17 = v16;

    v23[0] = v15;
    v23[1] = v17;
    sub_235E94A34();
    v18 = v22;
    sub_235EE60A0();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v18);
    return sub_235E90954((uint64_t)v15, (unint64_t)v17);
  }
  else
  {
    v20 = v14;
    sub_235EE5AA0();

    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v22);
  }
}

uint64_t CodableObjectArray.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  _BYTE *v30;
  id v31;
  _BYTE *v32;
  id v33;
  char *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t *v37;
  uint64_t v38;
  id v39[5];

  v37 = a5;
  v39[4] = *(id *)MEMORY[0x24BDAC8D0];
  v7 = type metadata accessor for CodableObjectArray.CodingKeys(255, a2, a3, a4);
  MEMORY[0x23B7E5230](&unk_235EEB090, v7);
  v8 = sub_235EE607C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v33 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v12 = v38;
  sub_235EE6178();
  if (!v12)
  {
    v35 = a2;
    v36 = a1;
    v13 = v37;
    v38 = v9;
    sub_235E949F0();
    sub_235EE6070();
    v14 = v8;
    v18 = v39[0];
    v17 = v39[1];
    __swift_instantiateConcreteTypeFromMangledName(&qword_25638D640);
    v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_235EE7AF0;
    v20 = sub_235E8EC68(0, (unint64_t *)&unk_25638D680);
    *(_QWORD *)(v19 + 56) = __swift_instantiateConcreteTypeFromMangledName(qword_25638D6B0);
    *(_QWORD *)(v19 + 32) = v20;
    v21 = v35;
    *(_QWORD *)(v19 + 88) = swift_getMetatypeMetadata();
    *(_QWORD *)(v19 + 64) = v21;
    sub_235E8EC68(0, (unint64_t *)&unk_25638D6A0);
    v22 = (void *)MEMORY[0x23B7E4AD4](v19);
    v39[0] = 0;
    sub_235EE5EA8();
    if (v39[0])
    {
      v33 = v22;
      v34 = v11;
      v23 = (void *)objc_opt_self();
      v24 = (uint64_t)v18;
      v25 = (void *)sub_235EE5E9C();
      swift_bridgeObjectRelease();
      v26 = (void *)sub_235EE5AAC();
      v39[0] = 0;
      v27 = objc_msgSend(v23, sel__strictlyUnarchivedObjectOfClasses_fromData_error_, v25, v26, v39);

      if (v27)
      {
        v28 = v39[0];
        sub_235EE5F68();
        swift_unknownObjectRelease();
        sub_235EE5E48();
        if ((swift_dynamicCast() & 1) != 0)
        {
          v29 = sub_235EE5DF4();

          swift_bridgeObjectRelease();
          sub_235E90954(v24, (unint64_t)v17);
          (*(void (**)(char *, uint64_t))(v38 + 8))(v34, v14);
          *v13 = v29;
          v15 = (uint64_t)v36;
          return __swift_destroy_boxed_opaque_existential_1(v15);
        }
        sub_235ECFF60();
        swift_allocError();
        *v32 = 2;
      }
      else
      {
        v31 = v39[0];
        sub_235EE5AA0();

      }
      swift_willThrow();

      sub_235E90954(v24, (unint64_t)v17);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v34, v14);
    }
    else
    {
      sub_235ECFF60();
      swift_allocError();
      *v30 = 3;
      swift_willThrow();

      sub_235E90954((uint64_t)v18, (unint64_t)v17);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v11, v14);
    }
    a1 = v36;
  }
  v15 = (uint64_t)a1;
  return __swift_destroy_boxed_opaque_existential_1(v15);
}

uint64_t sub_235EE58D0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return CodableObjectArray.init(from:)(a1, *(_QWORD *)(a2 + 16), a3, a4, a5);
}

uint64_t sub_235EE58E8(_QWORD *a1, uint64_t a2)
{
  return CodableObjectArray.encode(to:)(a1, a2);
}

uint64_t type metadata accessor for CodableObject.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CodableObject.CodingKeys);
}

uint64_t type metadata accessor for CodableObjectArray.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CodableObjectArray.CodingKeys);
}

uint64_t type metadata accessor for CodableObject(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CodableObject);
}

uint64_t type metadata accessor for CodableObjectArray(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CodableObjectArray);
}

uint64_t sub_235EE5934(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_235EE5974 + 4 * byte_235EEAD20[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_235EE5994 + 4 * byte_235EEAD25[v4]))();
}

_BYTE *sub_235EE5974(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_235EE5994(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_235EE599C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_235EE59A4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_235EE59AC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_235EE59B4(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_235EE59C0()
{
  JUMPOUT(0x23B7E5230);
}

void sub_235EE59D0()
{
  JUMPOUT(0x23B7E5230);
}

void sub_235EE59E0()
{
  JUMPOUT(0x23B7E5230);
}

void sub_235EE59F0()
{
  JUMPOUT(0x23B7E5230);
}

void sub_235EE5A00()
{
  JUMPOUT(0x23B7E5230);
}

void sub_235EE5A10()
{
  JUMPOUT(0x23B7E5230);
}

uint64_t sub_235EE5A28()
{
  return MEMORY[0x24BDCB220]();
}

uint64_t sub_235EE5A34()
{
  return MEMORY[0x24BDCB260]();
}

uint64_t sub_235EE5A40()
{
  return MEMORY[0x24BDCB268]();
}

uint64_t sub_235EE5A4C()
{
  return MEMORY[0x24BDCB3B8]();
}

uint64_t sub_235EE5A58()
{
  return MEMORY[0x24BDCB400]();
}

uint64_t sub_235EE5A64()
{
  return MEMORY[0x24BDCB410]();
}

uint64_t sub_235EE5A70()
{
  return MEMORY[0x24BDCBBC8]();
}

uint64_t sub_235EE5A7C()
{
  return MEMORY[0x24BDCBBD8]();
}

uint64_t sub_235EE5A88()
{
  return MEMORY[0x24BDCBBF0]();
}

uint64_t sub_235EE5A94()
{
  return MEMORY[0x24BDCD2F0]();
}

uint64_t sub_235EE5AA0()
{
  return MEMORY[0x24BDCD2F8]();
}

uint64_t sub_235EE5AAC()
{
  return MEMORY[0x24BDCDCA0]();
}

uint64_t sub_235EE5AB8()
{
  return MEMORY[0x24BDCDCE0]();
}

uint64_t sub_235EE5AC4()
{
  return MEMORY[0x24BDCDCF8]();
}

uint64_t sub_235EE5AD0()
{
  return MEMORY[0x24BDCDE78]();
}

uint64_t sub_235EE5ADC()
{
  return MEMORY[0x24BDCDE90]();
}

uint64_t sub_235EE5AE8()
{
  return MEMORY[0x24BDCE878]();
}

uint64_t sub_235EE5AF4()
{
  return MEMORY[0x24BDCE898]();
}

uint64_t sub_235EE5B00()
{
  return MEMORY[0x24BDCE8F8]();
}

uint64_t sub_235EE5B0C()
{
  return MEMORY[0x24BDCE900]();
}

uint64_t sub_235EE5B18()
{
  return MEMORY[0x24BDCE9B0]();
}

uint64_t sub_235EE5B24()
{
  return MEMORY[0x24BDCEA40]();
}

uint64_t sub_235EE5B30()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_235EE5B3C()
{
  return MEMORY[0x24BDCEEA8]();
}

uint64_t sub_235EE5B48()
{
  return MEMORY[0x24BDCF160]();
}

uint64_t sub_235EE5B54()
{
  return MEMORY[0x24BDCF1B0]();
}

uint64_t sub_235EE5B60()
{
  return MEMORY[0x24BDCF290]();
}

uint64_t sub_235EE5B6C()
{
  return MEMORY[0x24BDCF2D8]();
}

uint64_t sub_235EE5B78()
{
  return MEMORY[0x24BE5BF00]();
}

uint64_t sub_235EE5B84()
{
  return MEMORY[0x24BE5BF08]();
}

uint64_t sub_235EE5B90()
{
  return MEMORY[0x24BE5BF10]();
}

uint64_t sub_235EE5B9C()
{
  return MEMORY[0x24BE5BFC0]();
}

uint64_t sub_235EE5BA8()
{
  return MEMORY[0x24BE5BFC8]();
}

uint64_t sub_235EE5BB4()
{
  return MEMORY[0x24BE5C008]();
}

uint64_t sub_235EE5BC0()
{
  return MEMORY[0x24BE5C010]();
}

uint64_t sub_235EE5BCC()
{
  return MEMORY[0x24BE5C018]();
}

uint64_t sub_235EE5BD8()
{
  return MEMORY[0x24BE5C038]();
}

uint64_t sub_235EE5BE4()
{
  return MEMORY[0x24BE5C070]();
}

uint64_t sub_235EE5BF0()
{
  return MEMORY[0x24BE5C0A0]();
}

uint64_t sub_235EE5BFC()
{
  return MEMORY[0x24BE5C100]();
}

uint64_t sub_235EE5C08()
{
  return MEMORY[0x24BE5C118]();
}

uint64_t sub_235EE5C14()
{
  return MEMORY[0x24BE5C128]();
}

uint64_t sub_235EE5C20()
{
  return MEMORY[0x24BE5C160]();
}

uint64_t sub_235EE5C2C()
{
  return MEMORY[0x24BE5C1B0]();
}

uint64_t sub_235EE5C38()
{
  return MEMORY[0x24BE5C1B8]();
}

uint64_t sub_235EE5C44()
{
  return MEMORY[0x24BE5C1C0]();
}

uint64_t sub_235EE5C50()
{
  return MEMORY[0x24BE5C1D0]();
}

uint64_t sub_235EE5C5C()
{
  return MEMORY[0x24BE5C1E8]();
}

uint64_t sub_235EE5C68()
{
  return MEMORY[0x24BE5C1F0]();
}

uint64_t sub_235EE5C74()
{
  return MEMORY[0x24BE5C278]();
}

uint64_t sub_235EE5C80()
{
  return MEMORY[0x24BE5C298]();
}

uint64_t sub_235EE5C8C()
{
  return MEMORY[0x24BE5C2D8]();
}

uint64_t sub_235EE5C98()
{
  return MEMORY[0x24BE5C2E8]();
}

uint64_t sub_235EE5CA4()
{
  return MEMORY[0x24BE5C2F0]();
}

uint64_t sub_235EE5CB0()
{
  return MEMORY[0x24BE5C310]();
}

uint64_t sub_235EE5CBC()
{
  return MEMORY[0x24BE5C330]();
}

uint64_t sub_235EE5CC8()
{
  return MEMORY[0x24BE5C340]();
}

uint64_t sub_235EE5CD4()
{
  return MEMORY[0x24BE5C350]();
}

uint64_t sub_235EE5CE0()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_235EE5CEC()
{
  return MEMORY[0x24BEE78C0]();
}

uint64_t sub_235EE5CF8()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_235EE5D04()
{
  return MEMORY[0x24BDCF830]();
}

uint64_t sub_235EE5D10()
{
  return MEMORY[0x24BEE0270]();
}

uint64_t sub_235EE5D1C()
{
  return MEMORY[0x24BEE0618]();
}

uint64_t sub_235EE5D28()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_235EE5D34()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_235EE5D40()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_235EE5D4C()
{
  return MEMORY[0x24BEE09F0]();
}

uint64_t sub_235EE5D58()
{
  return MEMORY[0x24BEE0A50]();
}

uint64_t sub_235EE5D64()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_235EE5D70()
{
  return MEMORY[0x24BEE0B70]();
}

uint64_t sub_235EE5D7C()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_235EE5D88()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_235EE5D94()
{
  return MEMORY[0x24BEE0D98]();
}

uint64_t sub_235EE5DA0()
{
  return MEMORY[0x24BEE0DE0]();
}

uint64_t sub_235EE5DAC()
{
  return MEMORY[0x24BEE0DE8]();
}

uint64_t sub_235EE5DB8()
{
  return MEMORY[0x24BEE1018]();
}

uint64_t sub_235EE5DC4()
{
  return MEMORY[0x24BEE1068]();
}

uint64_t sub_235EE5DD0()
{
  return MEMORY[0x24BEE1070]();
}

uint64_t sub_235EE5DDC()
{
  return MEMORY[0x24BEE1078]();
}

uint64_t sub_235EE5DE8()
{
  return MEMORY[0x24BEE1098]();
}

uint64_t sub_235EE5DF4()
{
  return MEMORY[0x24BDCFBA8]();
}

uint64_t sub_235EE5E00()
{
  return MEMORY[0x24BDCFBC8]();
}

uint64_t sub_235EE5E0C()
{
  return MEMORY[0x24BEE1120]();
}

uint64_t sub_235EE5E18()
{
  return MEMORY[0x24BEE1180]();
}

uint64_t sub_235EE5E24()
{
  return MEMORY[0x24BEE1190]();
}

uint64_t sub_235EE5E30()
{
  return MEMORY[0x24BEE11F0]();
}

uint64_t sub_235EE5E3C()
{
  return MEMORY[0x24BEE11F8]();
}

uint64_t sub_235EE5E48()
{
  return MEMORY[0x24BEE1250]();
}

uint64_t sub_235EE5E54()
{
  return MEMORY[0x24BDCFC08]();
}

uint64_t sub_235EE5E60()
{
  return MEMORY[0x24BEE6800]();
}

uint64_t sub_235EE5E6C()
{
  return MEMORY[0x24BEE6820]();
}

uint64_t sub_235EE5E78()
{
  return MEMORY[0x24BEE6828]();
}

uint64_t sub_235EE5E84()
{
  return MEMORY[0x24BEE6988]();
}

uint64_t sub_235EE5E90()
{
  return MEMORY[0x24BEE6990]();
}

uint64_t sub_235EE5E9C()
{
  return MEMORY[0x24BDCFCC0]();
}

uint64_t sub_235EE5EA8()
{
  return MEMORY[0x24BDCFCD0]();
}

uint64_t sub_235EE5EB4()
{
  return MEMORY[0x24BDCFCE8]();
}

uint64_t sub_235EE5EC0()
{
  return MEMORY[0x24BEE15D8]();
}

uint64_t sub_235EE5ECC()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_235EE5ED8()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t sub_235EE5EE4()
{
  return MEMORY[0x24BDCFFB0]();
}

uint64_t sub_235EE5EF0()
{
  return MEMORY[0x24BEE5770]();
}

uint64_t sub_235EE5EFC()
{
  return MEMORY[0x24BDD00E8]();
}

uint64_t sub_235EE5F08()
{
  return MEMORY[0x24BEE5BB8]();
}

uint64_t sub_235EE5F14()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_235EE5F20()
{
  return MEMORY[0x24BEE1E70]();
}

uint64_t sub_235EE5F2C()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_235EE5F38()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_235EE5F44()
{
  return MEMORY[0x24BDD04C8]();
}

uint64_t sub_235EE5F50()
{
  return MEMORY[0x24BDD0620]();
}

uint64_t sub_235EE5F5C()
{
  return MEMORY[0x24BDD0638]();
}

uint64_t sub_235EE5F68()
{
  return MEMORY[0x24BEE20A8]();
}

uint64_t sub_235EE5F74()
{
  return MEMORY[0x24BEE22B0]();
}

uint64_t sub_235EE5F80()
{
  return MEMORY[0x24BEE22D0]();
}

uint64_t sub_235EE5F8C()
{
  return MEMORY[0x24BDD0698]();
}

uint64_t sub_235EE5F98()
{
  return MEMORY[0x24BEE24B8]();
}

uint64_t sub_235EE5FA4()
{
  return MEMORY[0x24BEE24C0]();
}

uint64_t sub_235EE5FB0()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_235EE5FBC()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_235EE5FC8()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t sub_235EE5FD4()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_235EE5FE0()
{
  return MEMORY[0x24BEE2BE0]();
}

uint64_t sub_235EE5FEC()
{
  return MEMORY[0x24BEE2EA8]();
}

uint64_t sub_235EE5FF8()
{
  return MEMORY[0x24BEE2F18]();
}

uint64_t sub_235EE6004()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_235EE6010()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t sub_235EE601C()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_235EE6028()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_235EE6034()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_235EE6040()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_235EE604C()
{
  return MEMORY[0x24BEE3290]();
}

uint64_t sub_235EE6058()
{
  return MEMORY[0x24BEE3350]();
}

uint64_t sub_235EE6064()
{
  return MEMORY[0x24BEE3358]();
}

uint64_t sub_235EE6070()
{
  return MEMORY[0x24BEE3380]();
}

uint64_t sub_235EE607C()
{
  return MEMORY[0x24BEE33E0]();
}

uint64_t sub_235EE6088()
{
  return MEMORY[0x24BEE34A0]();
}

uint64_t sub_235EE6094()
{
  return MEMORY[0x24BEE34A8]();
}

uint64_t sub_235EE60A0()
{
  return MEMORY[0x24BEE34D0]();
}

uint64_t sub_235EE60AC()
{
  return MEMORY[0x24BEE3520]();
}

uint64_t sub_235EE60B8()
{
  return MEMORY[0x24BEE3548]();
}

uint64_t sub_235EE60C4()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_235EE60D0()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_235EE60DC()
{
  return MEMORY[0x24BEE3BB8]();
}

uint64_t sub_235EE60E8()
{
  return MEMORY[0x24BEE70E0]();
}

uint64_t sub_235EE60F4()
{
  return MEMORY[0x24BEE3ED0]();
}

uint64_t sub_235EE6100()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_235EE610C()
{
  return MEMORY[0x24BDD0708]();
}

uint64_t sub_235EE6118()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t sub_235EE6124()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t sub_235EE6130()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t sub_235EE613C()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t sub_235EE6148()
{
  return MEMORY[0x24BDD0758]();
}

uint64_t sub_235EE6154()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_235EE6160()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_235EE616C()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_235EE6178()
{
  return MEMORY[0x24BEE4608]();
}

uint64_t sub_235EE6184()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t sub_235EE6190()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t sub_235EE619C()
{
  return MEMORY[0x24BEE4A10]();
}

uint64_t sub_235EE61A8()
{
  return MEMORY[0x24BEE4A98]();
}

uint64_t ASActivitySharingDaemonEnabled()
{
  return MEMORY[0x24BE01CF8]();
}

uint64_t ASDestinationIsEmail()
{
  return MEMORY[0x24BE01E18]();
}

uint64_t ASDestinationIsPhoneNumber()
{
  return MEMORY[0x24BE01E20]();
}

uint64_t ASFriendsFromCodableFriendList()
{
  return MEMORY[0x24BE01E58]();
}

uint64_t ASSecureCloudEnabled()
{
  return MEMORY[0x24BE01EC0]();
}

uint64_t IDSCopyIDForEmailAddress()
{
  return MEMORY[0x24BE4F980]();
}

uint64_t IDSCopyIDForPhoneNumber()
{
  return MEMORY[0x24BE4F988]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x24BEE4B30]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x24BEE4B38]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x24BDAEE78](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x24BEDCF68](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x24BEDCF88]();
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x24BEDCFE8]();
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

void objc_storeStrong(id *location, id obj)
{
  MEMORY[0x24BEDD410](location, obj);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

mach_port_t pthread_mach_thread_np(pthread_t a1)
{
  return MEMORY[0x24BDAF8A8](a1);
}

pthread_t pthread_self(void)
{
  return (pthread_t)MEMORY[0x24BDAF978]();
}

uint64_t swift_allocBox()
{
  return MEMORY[0x24BEE4B58]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x24BEE4B80]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_continuation_await()
{
  return MEMORY[0x24BEE71B8]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x24BEE71C0]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x24BEE71D0]();
}

uint64_t swift_continuation_throwingResumeWithError()
{
  return MEMORY[0x24BEE71D8]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x24BEE4C18]();
}

uint64_t swift_defaultActor_deallocate()
{
  return MEMORY[0x24BEE71E0]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x24BEE71E8]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x24BEE71F0]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x24BEE4C60]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x24BEE4CD0]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x24BEE4CD8]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x24BEE4D18]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x24BEE4D98]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x24BEE4DA0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x24BEE4EA8]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x24BEE7228]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x24BEE7230]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x24BEE7238]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x24BEE7278]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x24BEE4F78]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x24BEE5028]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x24BEE5030]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x24BEE5038]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x24BEE5050]();
}

