int8x16_t Main_theDots43_graph_5FFFB499_88F0_4B6A_BCBA_6EF5652B911B(int8x16_t result, uint64_t a2, uint64_t a3, int8x16_t *a4)
{
  result.i64[1] = vextq_s8(*a4, *a4, 8uLL).u64[0];
  *a4 = result;
  return result;
}

int8x16_t __vfx_script_theDots43_graph_5FFFB499_88F0_4B6A_BCBA_6EF5652B911B()
{
  uint64_t arguments_buffer;
  int8x16_t *v1;
  int8x16_t result;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(int8x16_t **)(arguments_buffer + 24);
  result.i64[0] = **(_QWORD **)(arguments_buffer + 16);
  result.i64[1] = vextq_s8(*v1, *v1, 8uLL).u64[0];
  *v1 = result;
  return result;
}

void Main_theDots43_graph_36CA844C_8E91_48B8_A106_31932436F98D(double a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  *a4 = *(unint64_t *)&a1;
}

__n128 __vfx_script_theDots43_graph_36CA844C_8E91_48B8_A106_31932436F98D()
{
  uint64_t arguments_buffer;
  __n128 result;

  arguments_buffer = vfx_script_get_arguments_buffer();
  result.n128_u64[0] = **(_QWORD **)(arguments_buffer + 16);
  result.n128_u32[3] = 1.0;
  *(__n128 *)*(_QWORD *)(arguments_buffer + 24) = result;
  return result;
}

void Spawn_theDots43_graph_2D76B3B9_EBB8_405E_8D64_86B1CBD816F5(const void *a1, unsigned int a2, float a3, uint64_t a4, float a5, float a6, float *a7, float *a8, float *a9, float *a10)
{
  int v10;
  unint64_t v11;
  float v12;
  int v13;
  BOOL v14;
  int v15;
  float v16;
  float v17;
  float v18;
  float v19;

  v10 = 0;
  v11 = (unint64_t)(float)(a3 * 40.0);
  v12 = a3 * 30.0;
  v13 = 0;
  v14 = a4 == 3 || a4 == 0;
  v15 = v14;
  v16 = (float)v11;
  if (v14)
    v10 = 1;
  if (v14)
    v13 = 1;
  v17 = (float)(unint64_t)v12;
  v18 = (float)(unint64_t)(float)(a5 * a6);
  if (v10)
    v16 = 0.0;
  *a7 = v16;
  if (v13)
    v17 = 0.0;
  *a8 = v17;
  *a9 = v17;
  if (v15)
    v19 = 0.0;
  else
    v19 = v18;
  *a10 = v19;
}

uint64_t __vfx_script_theDots43_graph_2D76B3B9_EBB8_405E_8D64_86B1CBD816F5()
{
  uint64_t result;
  float *v1;
  float *v2;
  float *v3;
  float v4;
  uint64_t v5;
  _BOOL4 v7;
  float v8;
  float v9;
  unint64_t v10;
  float v11;

  result = vfx_script_get_arguments_buffer();
  v1 = *(float **)(result + 56);
  v2 = *(float **)(result + 64);
  v3 = *(float **)(result + 72);
  v4 = **(float **)(result + 16);
  v5 = **(_QWORD **)(result + 24);
  v7 = v5 == 3 || v5 == 0;
  v8 = (float)(unint64_t)(float)(v4 * 40.0);
  v9 = (float)(unint64_t)(float)(v4 * 30.0);
  v10 = (unint64_t)(float)(**(float **)(result + 32) * **(float **)(result + 40));
  if (v7)
    v8 = 0.0;
  **(float **)(result + 48) = v8;
  if (v7)
    v9 = 0.0;
  *v1 = v9;
  *v2 = v9;
  if (v7)
    v11 = 0.0;
  else
    v11 = (float)v10;
  *v3 = v11;
  return result;
}

float Init_theDots43_graph_BCD27D5D_75F7_4364_B275_47FF3D6A254D(float a1, float a2, __n128 a3, uint64_t a4, uint64_t a5, float *a6, __int128 *a7, __n128 *a8, __int128 *a9, __int128 *a10, __int128 *a11, int32x4_t *a12, __n128 *a13)
{
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __n128 v19;
  __n128 v20;
  float v21;
  float result;

  v15 = *a9;
  v16 = *a10;
  v17 = *a11;
  v18 = *a7;
  *(float *)&v13 = -1.03 * a3.n128_f32[0];
  *(float *)&v14 = 1.03 * a3.n128_f32[0];
  v19 = a3;
  v19.n128_u32[1] = a13->n128_u32[1];
  v20 = a3;
  v20.n128_u32[1] = a8->n128_u32[1];
  *a12 = vdupq_lane_s32((int32x2_t)a3.n128_u64[0], 1);
  v21 = fminf(a1, a2);
  result = fmaxf(a1, a2);
  *a6 = v21;
  a6[1] = result;
  DWORD1(v13) = DWORD1(v15);
  DWORD2(v13) = DWORD2(v15);
  *a9 = v13;
  DWORD2(v16) = a3.n128_u32[1];
  *a10 = v16;
  DWORD1(v14) = DWORD1(v17);
  DWORD2(v14) = DWORD2(v17);
  *a11 = v14;
  v19.n128_u32[2] = a3.n128_u32[1];
  *a13 = v19;
  DWORD2(v18) = vmuls_lane_f32(-1.01, (float32x2_t)a3.n128_u64[0], 1);
  *a7 = v18;
  v20.n128_u32[2] = a3.n128_u32[1];
  *a8 = v20;
  return result;
}

float __vfx_script_theDots43_graph_BCD27D5D_75F7_4364_B275_47FF3D6A254D()
{
  _QWORD *arguments_buffer;
  float *v1;
  float *v2;
  float32x2_t *v3;
  float *v4;
  __int128 *v5;
  uint64_t v6;
  __int128 *v7;
  __int128 *v8;
  __int128 *v9;
  int32x4_t *v10;
  uint64_t v11;
  float v12;
  float v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  float v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  float v24;
  float result;

  arguments_buffer = (_QWORD *)vfx_script_get_arguments_buffer();
  v1 = (float *)arguments_buffer[2];
  v2 = (float *)arguments_buffer[3];
  v3 = (float32x2_t *)arguments_buffer[4];
  v4 = (float *)arguments_buffer[5];
  v5 = (__int128 *)arguments_buffer[6];
  v6 = arguments_buffer[7];
  v7 = (__int128 *)arguments_buffer[8];
  v8 = (__int128 *)arguments_buffer[9];
  v9 = (__int128 *)arguments_buffer[10];
  v10 = (int32x4_t *)arguments_buffer[11];
  v11 = arguments_buffer[12];
  v12 = *v1;
  v13 = *v2;
  *(float32x2_t *)&v14 = *v3;
  v15 = *v7;
  v16 = *v8;
  v17 = *v9;
  v18 = *v5;
  v19 = vmuls_lane_f32(-1.01, *v3, 1);
  *(float *)&v20 = -1.03 * COERCE_FLOAT(*v3);
  v21 = v14;
  DWORD1(v21) = *(_DWORD *)(v11 + 4);
  *(float *)&v22 = 1.03 * COERCE_FLOAT(*v3);
  v23 = v14;
  DWORD1(v23) = *(_DWORD *)(v6 + 4);
  *v10 = vdupq_lane_s32((int32x2_t)*v3, 1);
  v24 = fminf(v12, v13);
  result = fmaxf(v12, v13);
  *v4 = v24;
  v4[1] = result;
  DWORD1(v20) = DWORD1(v15);
  DWORD2(v20) = DWORD2(v15);
  *v7 = v20;
  DWORD2(v16) = DWORD1(v14);
  *v8 = v16;
  DWORD1(v22) = DWORD1(v17);
  DWORD2(v22) = DWORD2(v17);
  DWORD2(v21) = DWORD1(v14);
  *v9 = v22;
  *(_OWORD *)v11 = v21;
  *((float *)&v18 + 2) = v19;
  DWORD2(v23) = DWORD1(v14);
  *v5 = v18;
  *(_OWORD *)v6 = v23;
  *((_DWORD *)v5 + 3) = 1065353216;
  *((_DWORD *)v7 + 3) = 1065353216;
  *((_DWORD *)v9 + 3) = 1065353216;
  return result;
}

__n128 Update_theDots43_graph_5084D6A9_79BC_4F64_86C8_E5E14A582B60(uint64_t a1, uint64_t a2, uint64_t a3, float *a4, __int128 *a5)
{
  float v7;
  __int128 v8;
  __n128 result;
  __int128 v10;

  v10 = *a5;
  if (a3)
    v7 = 0.2;
  else
    v7 = 0.0;
  vfx_script_clock_time();
  *(float *)&v8 = *(double *)&v8;
  *(float *)&v8 = *(float *)&v8 * 0.01;
  *a4 = v7;
  *(_QWORD *)((char *)&v8 + 4) = *(_QWORD *)((char *)&v10 + 4);
  *a5 = v8;
  result.n128_u64[0] = v8;
  result.n128_u32[2] = DWORD2(v8);
  return result;
}

__n128 __vfx_script_theDots43_graph_5084D6A9_79BC_4F64_86C8_E5E14A582B60()
{
  uint64_t arguments_buffer;
  float *v1;
  __n128 *v2;
  float v3;
  double v4;
  __n128 result;
  __n128 v11;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(float **)(arguments_buffer + 24);
  v2 = *(__n128 **)(arguments_buffer + 32);
  v11 = *v2;
  if (**(_QWORD **)(arguments_buffer + 16))
    v3 = 0.2;
  else
    v3 = 0.0;
  vfx_script_clock_time();
  *(float *)&v4 = v4;
  __asm { FMOV            V1.4S, #1.0 }
  _Q1.n128_f32[0] = *(float *)&v4 * 0.01;
  *v1 = v3;
  result = v11;
  *(unint64_t *)((char *)_Q1.n128_u64 + 4) = *(unint64_t *)((char *)v11.n128_u64 + 4);
  *v2 = _Q1;
  return result;
}

__n128 Render_theDots43_graph_22359051_1A50_4A9E_9C98_BE787048611B(__n128 a1, uint64_t a2, uint64_t a3, __n128 *a4)
{
  __n128 result;

  a1.n128_u32[1] = HIDWORD(a4->n128_u64[0]);
  a1.n128_u32[2] = a4->n128_u64[1];
  *a4 = a1;
  result.n128_u64[0] = a1.n128_u64[0];
  result.n128_u32[2] = a1.n128_u32[2];
  return result;
}

__n128 __vfx_script_theDots43_graph_22359051_1A50_4A9E_9C98_BE787048611B()
{
  uint64_t arguments_buffer;
  _QWORD *v1;
  __n128 result;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(_QWORD **)(arguments_buffer + 24);
  __asm { FMOV            V0.4S, #1.0 }
  LODWORD(_Q0) = **(_DWORD **)(arguments_buffer + 16);
  DWORD1(_Q0) = HIDWORD(*v1);
  DWORD2(_Q0) = v1[1];
  *(_OWORD *)v1 = _Q0;
  result.n128_u64[0] = _Q0;
  result.n128_u32[2] = DWORD2(_Q0);
  return result;
}

float Spawn_theDots43_graph_DE046CD1_7FE7_4906_B9F1_F72E3C619103(const void *a1, unsigned int a2, float a3, uint64_t a4, float *a5)
{
  unint64_t v5;
  float result;

  v5 = (unint64_t)a3;
  if (a4)
    v5 = 0;
  result = (float)v5;
  *a5 = (float)v5;
  return result;
}

float __vfx_script_theDots43_graph_DE046CD1_7FE7_4906_B9F1_F72E3C619103()
{
  uint64_t arguments_buffer;
  unint64_t v1;
  float result;

  arguments_buffer = vfx_script_get_arguments_buffer();
  if (**(_QWORD **)(arguments_buffer + 24))
    v1 = 0;
  else
    v1 = (unint64_t)**(float **)(arguments_buffer + 16);
  result = (float)v1;
  **(float **)(arguments_buffer + 32) = (float)v1;
  return result;
}

float Init_theDots43_graph_7305A5D5_5654_4FA6_A663_A585F6E30B0D(float a1, float a2, __n128 a3, uint64_t a4, uint64_t a5, float *a6, __n128 *a7)
{
  float result;

  a3.n128_u32[1] = a7->n128_u32[1];
  *a6 = fminf(a1, a2);
  a6[1] = fmaxf(a1, a2);
  result = 5.0;
  a3.n128_u32[2] = 5.0;
  *a7 = a3;
  return result;
}

float __vfx_script_theDots43_graph_7305A5D5_5654_4FA6_A663_A585F6E30B0D()
{
  uint64_t arguments_buffer;
  float *v1;
  uint64_t v2;
  float v3;
  float v4;
  __int128 v5;
  float result;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(float **)(arguments_buffer + 40);
  v2 = *(_QWORD *)(arguments_buffer + 48);
  v3 = **(float **)(arguments_buffer + 16);
  v4 = **(float **)(arguments_buffer + 24);
  *(_QWORD *)&v5 = **(_QWORD **)(arguments_buffer + 32);
  DWORD1(v5) = *(_DWORD *)(v2 + 4);
  *v1 = fminf(v3, v4);
  v1[1] = fmaxf(v3, v4);
  result = 5.0;
  DWORD2(v5) = 5.0;
  *(_OWORD *)v2 = v5;
  return result;
}

void Update_theDots43_graph_2B30E278_AC76_44BE_AB61_653374A3FC69(const void *a1, unsigned int a2, uint64_t a3, float a4, float a5, float *a6)
{
  BOOL v6;
  float v7;

  v6 = (float)(a4 - a5) > 1.0 && a3 == 0;
  v7 = 0.4;
  if (!v6)
    v7 = 0.0;
  *a6 = v7;
}

uint64_t __vfx_script_theDots43_graph_2B30E278_AC76_44BE_AB61_653374A3FC69()
{
  uint64_t result;
  BOOL v1;
  float v2;

  result = vfx_script_get_arguments_buffer();
  v1 = (float)(**(float **)(result + 24) - **(float **)(result + 32)) > 1.0 && **(_QWORD **)(result + 16) == 0;
  v2 = 0.4;
  if (!v1)
    v2 = 0.0;
  **(float **)(result + 40) = v2;
  return result;
}

float Main_theDots43_graph_CE4C8270_6015_4AB6_BEA3_093561972C9B(const void *a1, unsigned int a2, uint64_t a3, float a4, float a5, int a6, const void *a7, float a8, const void *a9, float a10, float a11, float a12, float a13, BOOL *a14, float *a15, float *a16, float *a17, float *a18, float *a19, float *a20,float *a21,float *a22,float *a23,float *a24)
{
  float v28;
  _BOOL4 v30;
  float v31;
  float v32;
  float v33;
  float v34;
  unint64_t v35;
  float v36;
  float v37;
  float v38;
  float result;
  float v40;
  float v41;
  float v42;

  v28 = a5;
  v30 = a3 == 2;
  if (a6)
    a5 = a4;
  v42 = a5;
  v41 = fminf(fmaxf((float)(v28 - a4) / 1.8, 0.0), 1.0);
  vfx_script_texture_sample1d();
  v40 = 0.09 * v31;
  vfx_script_texture_sample1d();
  v33 = powf(v32, 0.454);
  v34 = fminf(fmaxf((float)(v28 - a11) * 0.5, 0.0), 1.0);
  if (a3 != 3)
    a11 = v28;
  v35 = a3 - 1;
  if (v35)
    a12 = v28;
  vfx_script_clock_delta_time();
  v37 = a10 - v36;
  if ((v30 & (a6 ^ 1)) != 0)
    v37 = 1.5;
  if (v35 >= 2)
    v38 = v28;
  else
    v38 = a13;
  *a14 = v30;
  *a15 = v42;
  *a16 = v41;
  *a17 = v40;
  *a18 = v33;
  *a19 = v34;
  *a20 = a11;
  *a21 = a12;
  *a22 = v37;
  result = (float)(fminf(fmaxf((float)(v28 - a13) / 3.0, 0.0), 1.0) * -210.0) + 300.0;
  *a23 = v38;
  *a24 = result;
  return result;
}

float __vfx_script_theDots43_graph_CE4C8270_6015_4AB6_BEA3_093561972C9B()
{
  uint64_t arguments_buffer;
  float *v1;
  float *v2;
  float *v3;
  float *v4;
  float *v5;
  float *v6;
  float *v7;
  uint64_t v8;
  float v9;
  _BOOL4 v10;
  _BOOL4 v11;
  float v12;
  float v13;
  float v14;
  float v15;
  float v16;
  float v17;
  float v18;
  float v19;
  float v20;
  float v21;
  float v22;
  float v23;
  float result;
  float v25;
  float v26;
  float v27;
  float *v28;
  float *v29;
  float *v30;
  float *v31;
  float *v32;
  _BYTE *v33;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(float **)(arguments_buffer + 24);
  v2 = *(float **)(arguments_buffer + 32);
  v32 = *(float **)(arguments_buffer + 112);
  v33 = *(_BYTE **)(arguments_buffer + 104);
  v3 = *(float **)(arguments_buffer + 128);
  v4 = *(float **)(arguments_buffer + 136);
  v5 = *(float **)(arguments_buffer + 144);
  v6 = *(float **)(arguments_buffer + 152);
  v7 = *(float **)(arguments_buffer + 160);
  v30 = *(float **)(arguments_buffer + 168);
  v31 = *(float **)(arguments_buffer + 120);
  v28 = *(float **)(arguments_buffer + 184);
  v29 = *(float **)(arguments_buffer + 176);
  v8 = **(_QWORD **)(arguments_buffer + 16);
  v9 = *v2;
  v10 = v8 == 2;
  v11 = **(unsigned __int8 **)(arguments_buffer + 40) == 0;
  v12 = **(float **)(arguments_buffer + 72);
  v13 = **(float **)(arguments_buffer + 80);
  v14 = **(float **)(arguments_buffer + 88);
  v15 = **(float **)(arguments_buffer + 96);
  if (**(_BYTE **)(arguments_buffer + 40))
    v16 = *v1;
  else
    v16 = *v2;
  v27 = v16;
  v26 = fminf(fmaxf((float)(v9 - *v1) / 1.8, 0.0), 1.0);
  vfx_script_texture_sample1d();
  v25 = 0.09 * v17;
  vfx_script_texture_sample1d();
  v19 = powf(v18, 0.454);
  v20 = fminf(fmaxf((float)(v9 - v13) * 0.5, 0.0), 1.0);
  if (v8 != 3)
    v13 = v9;
  if (v8 != 1)
    v14 = v9;
  vfx_script_clock_delta_time();
  v22 = v12 - v21;
  if (v10 && v11)
    v22 = 1.5;
  if ((unint64_t)(v8 - 1) >= 2)
    v23 = v9;
  else
    v23 = v15;
  *v33 = v10;
  *v32 = v27;
  *v31 = v26;
  *v3 = v25;
  *v4 = v19;
  *v5 = v20;
  *v6 = v13;
  *v7 = v14;
  *v30 = v22;
  result = (float)(fminf(fmaxf((float)(v9 - v15) / 3.0, 0.0), 1.0) * -210.0) + 300.0;
  *v29 = v23;
  *v28 = result;
  return result;
}

float32x2_t Main_theDots43_graph_A0481AEC_B1D8_4B78_9EBF_4FDAD85966B8(float32x2_t a1, float a2, float32x2_t a3, float32x2_t a4, uint64_t a5, uint64_t a6, float32x2_t *a7, float32x2_t *a8, float32x2_t *a9)
{
  float32x2_t result;

  *a7 = vmul_n_f32(vmul_f32(a1, (float32x2_t)vdup_n_s32(0x3F99999Au)), a2);
  result = vmul_n_f32(a4, a2);
  *a8 = vmul_n_f32(a3, a2);
  *a9 = result;
  return result;
}

float32x2_t __vfx_script_theDots43_graph_A0481AEC_B1D8_4B78_9EBF_4FDAD85966B8()
{
  uint64_t arguments_buffer;
  float *v1;
  float32x2_t *v2;
  float32x2_t *v3;
  float32x2_t result;
  float32x2_t v5;
  float32x2_t v6;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(float **)(arguments_buffer + 24);
  v2 = *(float32x2_t **)(arguments_buffer + 56);
  v3 = *(float32x2_t **)(arguments_buffer + 64);
  result = vmul_n_f32(vmul_f32(**(float32x2_t **)(arguments_buffer + 16), (float32x2_t)vdup_n_s32(0x3F99999Au)), *v1);
  v5 = vmul_n_f32(**(float32x2_t **)(arguments_buffer + 32), *v1);
  v6 = vmul_n_f32(**(float32x2_t **)(arguments_buffer + 40), *v1);
  **(float32x2_t **)(arguments_buffer + 48) = result;
  *v2 = v5;
  *v3 = v6;
  return result;
}

void Render_theDots43_graph_A8A6477D_6307_4242_B152_EF604169D0BD(double a1, double a2, uint64_t a3, uint64_t a4, _OWORD *a5, _OWORD *a6)
{
  *a5 = *(unint64_t *)&a1;
  *a6 = *(unint64_t *)&a2;
}

double __vfx_script_theDots43_graph_A8A6477D_6307_4242_B152_EF604169D0BD()
{
  uint64_t arguments_buffer;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(_QWORD *)(arguments_buffer + 32);
  v2 = *(_QWORD *)(arguments_buffer + 40);
  *(_QWORD *)&v3 = **(_QWORD **)(arguments_buffer + 16);
  *(_QWORD *)&v4 = **(_QWORD **)(arguments_buffer + 24);
  *(_OWORD *)v1 = v3;
  *(_OWORD *)v2 = v4;
  *(_DWORD *)(v1 + 12) = 1065353216;
  *(_DWORD *)(v2 + 12) = 1065353216;
  return *(double *)&v3;
}

uint64_t Main_theDots43_graph_5872B619_3E0E_483F_A17A_9A51AC199048(double a1, uint64_t a2, uint64_t a3, uint64_t a4, _OWORD *a5, float *a6)
{
  float v9;
  float v10;
  float v11;

  vfx_script_curve_create();
  vfx_script_curve_evaluate();
  v10 = v9 * 30.0;
  if (a4 == 3)
    v11 = 1.0;
  else
    v11 = 0.0;
  *a5 = *(unint64_t *)&a1;
  *a6 = v11 * v10;
  return vfx_script_curve_destroy();
}

uint64_t __vfx_script_theDots43_graph_5872B619_3E0E_483F_A17A_9A51AC199048()
{
  uint64_t arguments_buffer;
  uint64_t v1;
  float *v2;
  __int128 v3;
  uint64_t v4;
  float v5;
  float v6;
  float v7;
  uint64_t result;
  __int128 v9;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(_QWORD *)(arguments_buffer + 40);
  v2 = *(float **)(arguments_buffer + 48);
  *(_QWORD *)&v3 = **(_QWORD **)(arguments_buffer + 16);
  v9 = v3;
  v4 = **(_QWORD **)(arguments_buffer + 32);
  vfx_script_curve_create();
  vfx_script_curve_evaluate();
  v6 = v5 * 30.0;
  if (v4 == 3)
    v7 = 1.0;
  else
    v7 = 0.0;
  *(_OWORD *)v1 = v9;
  *v2 = v7 * v6;
  result = vfx_script_curve_destroy();
  *(_DWORD *)(v1 + 12) = 1065353216;
  return result;
}

float32x2_t Main_theDots43_graph_ADCAE428_080C_4109_8059_A0751E5A7216(float32x2_t a1, float a2, uint64_t a3, uint64_t a4, float32x2_t *a5)
{
  float32x2_t result;

  result = vmul_n_f32(a1, a2);
  *a5 = result;
  return result;
}

float32x2_t __vfx_script_theDots43_graph_ADCAE428_080C_4109_8059_A0751E5A7216()
{
  uint64_t arguments_buffer;
  float32x2_t result;

  arguments_buffer = vfx_script_get_arguments_buffer();
  result = vmul_n_f32(**(float32x2_t **)(arguments_buffer + 16), **(float **)(arguments_buffer + 24));
  **(float32x2_t **)(arguments_buffer + 32) = result;
  return result;
}

float Init_theDots43_graph_4C67E203_F67A_42BD_B2F6_DCD0D0603B38(float a1, float a2, uint64_t a3, uint64_t a4, float *a5)
{
  float v5;
  float result;

  v5 = fminf(a1, a2);
  result = fmaxf(a1, a2);
  *a5 = v5;
  a5[1] = result;
  return result;
}

float __vfx_script_theDots43_graph_4C67E203_F67A_42BD_B2F6_DCD0D0603B38()
{
  _QWORD *arguments_buffer;
  float *v1;
  float *v2;
  float *v3;
  float result;

  arguments_buffer = (_QWORD *)vfx_script_get_arguments_buffer();
  v1 = (float *)arguments_buffer[2];
  v2 = (float *)arguments_buffer[3];
  v3 = (float *)arguments_buffer[4];
  result = fmaxf(*v1, *v2);
  *v3 = fminf(*v1, *v2);
  v3[1] = result;
  return result;
}

__n128 Update_theDots43_graph_ADD6D082_79B4_45F8_8A33_ED8E6F591675(double a1, float a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, float *a7, __n128 *a8)
{
  float v12;
  __n128 v13;
  __n128 result;
  __n128 v15;

  v15 = *a8;
  vfx_script_texture_sample1d();
  if (a6 != 3)
    v12 = 0.0;
  v13.n128_f32[0] = a2 * 0.01;
  *a7 = v12;
  result = v15;
  *(unint64_t *)((char *)v13.n128_u64 + 4) = *(unint64_t *)((char *)v15.n128_u64 + 4);
  *a8 = v13;
  return result;
}

__n128 __vfx_script_theDots43_graph_ADD6D082_79B4_45F8_8A33_ED8E6F591675()
{
  uint64_t arguments_buffer;
  float *v1;
  __n128 *v2;
  uint64_t v3;
  float v4;
  float v5;
  __n128 result;
  __n128 v12;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(float **)(arguments_buffer + 48);
  v2 = *(__n128 **)(arguments_buffer + 56);
  v3 = **(_QWORD **)(arguments_buffer + 32);
  v4 = **(float **)(arguments_buffer + 40);
  v12 = *v2;
  vfx_script_texture_sample1d();
  if (v3 != 3)
    v5 = 0.0;
  __asm { FMOV            V2.4S, #1.0 }
  _Q2.n128_f32[0] = v4 * 0.01;
  *v1 = v5;
  result = v12;
  *(unint64_t *)((char *)_Q2.n128_u64 + 4) = *(unint64_t *)((char *)v12.n128_u64 + 4);
  *v2 = _Q2;
  return result;
}

void Main_theDots43_graph_7BFB6AE5_BE7F_4222_9EC8_BDCE36619F0E(double a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  *a4 = *(unint64_t *)&a1;
}

__n128 __vfx_script_theDots43_graph_7BFB6AE5_BE7F_4222_9EC8_BDCE36619F0E()
{
  uint64_t arguments_buffer;
  __n128 result;

  arguments_buffer = vfx_script_get_arguments_buffer();
  result.n128_u64[0] = **(_QWORD **)(arguments_buffer + 16);
  result.n128_u32[3] = 1.0;
  *(__n128 *)*(_QWORD *)(arguments_buffer + 24) = result;
  return result;
}

float Spawn_theDots43_graph_16212ED8_D4BB_4BC2_BDD7_69D537B91698(const void *a1, unsigned int a2, const void *a3, float a4, unint64_t a5, float *a6)
{
  float v8;
  float v9;
  float v10;
  float result;

  vfx_script_texture_sample1d();
  v9 = 10000.0 * v8;
  v10 = 0.0;
  if ((unint64_t)(float)a5 == 2)
    v10 = 1.0;
  result = v10 * v9;
  *a6 = result;
  return result;
}

float __vfx_script_theDots43_graph_16212ED8_D4BB_4BC2_BDD7_69D537B91698()
{
  uint64_t arguments_buffer;
  float *v1;
  unint64_t v2;
  float v3;
  float v4;
  float v5;
  float result;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(float **)(arguments_buffer + 40);
  v2 = **(_QWORD **)(arguments_buffer + 32);
  vfx_script_texture_sample1d();
  v4 = 10000.0 * v3;
  v5 = 0.0;
  if ((unint64_t)(float)v2 == 2)
    v5 = 1.0;
  result = v4 * v5;
  *v1 = result;
  return result;
}

int32x4_t Init_theDots43_graph_54EAFB11_761C_4522_A4C8_96D05E554BDA(float a1, float a2, __n128 a3, int32x4_t a4, uint64_t a5, uint64_t a6, float *a7, __n128 *a8, int32x4_t *a9)
{
  __n128 v9;
  int32x4_t v10;
  int32x4_t result;

  v9 = *a8;
  v10 = *a9;
  *a7 = fminf(a1, a2);
  a7[1] = fmaxf(a1, a2);
  a3.n128_u32[1] = v9.n128_u32[1];
  a3.n128_u32[2] = v9.n128_u32[2];
  *a8 = a3;
  result = (int32x4_t)vextq_s8((int8x16_t)vzip1q_s32(v10, a4), (int8x16_t)v10, 4uLL);
  *a9 = result;
  return result;
}

int32x4_t __vfx_script_theDots43_graph_54EAFB11_761C_4522_A4C8_96D05E554BDA()
{
  uint64_t arguments_buffer;
  float *v1;
  __int128 *v2;
  int32x4_t *v3;
  float v4;
  float v5;
  __int128 v6;
  int32x4_t v7;
  __int128 v8;
  int32x4_t v9;
  int32x4_t result;

  arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(float **)(arguments_buffer + 48);
  v2 = *(__int128 **)(arguments_buffer + 56);
  v3 = *(int32x4_t **)(arguments_buffer + 64);
  v4 = **(float **)(arguments_buffer + 16);
  v5 = **(float **)(arguments_buffer + 24);
  LODWORD(v6) = **(_DWORD **)(arguments_buffer + 32);
  v7.i64[0] = **(_QWORD **)(arguments_buffer + 40);
  v8 = *v2;
  v9 = *v3;
  *v1 = fminf(v4, v5);
  v1[1] = fmaxf(v4, v5);
  DWORD1(v6) = DWORD1(v8);
  DWORD2(v6) = DWORD2(v8);
  *v2 = v6;
  result = (int32x4_t)vextq_s8((int8x16_t)vzip1q_s32(v9, v7), (int8x16_t)v9, 4uLL);
  *v3 = result;
  *((_DWORD *)v2 + 3) = 1065353216;
  return result;
}

void Update_theDots43_graph_9806A27E_9136_41EF_9897_C1BDF928916A(const void *a1, unsigned int a2, int a3, float *a4)
{
  float v4;

  v4 = 0.0;
  if (a3)
    v4 = 1.0;
  *a4 = v4;
}

uint64_t __vfx_script_theDots43_graph_9806A27E_9136_41EF_9897_C1BDF928916A()
{
  uint64_t result;
  float v1;

  result = vfx_script_get_arguments_buffer();
  v1 = 1.0;
  if (!**(_BYTE **)(result + 16))
    v1 = 0.0;
  **(float **)(result + 24) = v1;
  return result;
}

float ParticleInit_theDots43_particleInit_5(__n128 a1, __n128 a2, uint64_t a3, uint64_t a4, __int128 *a5, __n128 *a6, __n128 *a7)
{
  __int128 v7;
  float result;

  v7 = *a5;
  *a6 = a1;
  result = 1.0;
  a2.n128_u32[3] = 1.0;
  *a7 = a2;
  DWORD1(v7) = 0;
  *a5 = v7;
  return result;
}

uint64_t __vfx_script_theDots43_particleInit_5()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

__n128 ParticleInit_theDots43_particleInit_127(double a1, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6, _OWORD *a7, _OWORD *a8)
{
  int v11;
  __int32 v12;
  int v13;
  int32x2_t v14;
  int8x8_t v15;
  uint32x2_t v16;
  float32x2_t v22;
  __int128 v24;
  __int128 v25;
  __n128 result;
  float32x2_t v27;
  unsigned int v28;
  __n128 v29;

  v29.n128_f64[0] = a1;
  v28 = *(_DWORD *)(a6 + 8);
  v11 = a4 + a3;
  v12 = a4 + a3 + vfx_script_clock_simulation_index();
  v13 = vfx_script_clock_simulation_index();
  v14.i32[0] = v12;
  v14.i32[1] = v11 + v13;
  v15 = (int8x8_t)vmla_s32((int32x2_t)0xF46964429B4474D8, v14, vdup_n_s32(0x2C9277B5u));
  v16 = (uint32x2_t)vmul_s32((int32x2_t)veor_s8((int8x8_t)vshl_u32((uint32x2_t)v15, (uint32x2_t)vsub_s32((int32x2_t)0x300000003, (int32x2_t)vshr_n_u32((uint32x2_t)v15, 0x1CuLL))), v15), vdup_n_s32(0x108EF2D9u));
  __asm { FMOV            V1.2S, #1.0 }
  v22 = (float32x2_t)vorr_s8(veor_s8((int8x8_t)vshl_u32(v16, (uint32x2_t)0xFFFFFFE1FFFFFFF7), (int8x8_t)vshl_u32(v16, (uint32x2_t)0xFFFFFFF7FFFFFFE1)), _D1);
  __asm { FMOV            V1.2S, #-1.0 }
  v27 = vmla_f32((float32x2_t)0x3F80000000000000, (float32x2_t)0x3ECCCCCC3DCCCCCDLL, vadd_f32(v22, _D1));
  vfx_script_texture_sample1d();
  *a7 = v24;
  *a8 = v24;
  *(float32x2_t *)&v25 = v27;
  *((_QWORD *)&v25 + 1) = __PAIR64__(v29.n128_u32[0], v28);
  result = v29;
  *(_OWORD *)a6 = v25;
  return result;
}

uint64_t __vfx_script_theDots43_particleInit_127()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

float ParticleInit_theDots43_particleInit_120(float32x4_t a1, float32_t a2, __n128 a3, float a4, __n128 a5, uint64_t a6, int a7, int a8, float32x4_t *a9, __n128 *a10, __int128 *a11, float32x4_t *a12, __n128 *a13)
{
  int v21;
  int v22;
  unsigned int v23;
  float v24;
  int v25;
  unsigned int v26;
  __float2 v27;
  unint64_t v28;
  float32x4_t v29;
  float32x4_t v30;
  int v36;
  unsigned int v37;
  float v38;
  float32x4_t v39;
  __n128 v40;
  __int128 v41;
  float32x4_t v44;
  float32x4_t v46;
  __int128 v47;

  v47 = *a11;
  v21 = vfx_script_clock_simulation_index();
  v22 = a8 + a7;
  v23 = 277803737
      * (((747796405 * (v22 + v21) - 1537097584) >> (((747796405 * (v22 + v21) - 1537097584) >> 28)
                                                                 + 4)) ^ (747796405 * (v22 + v21) - 1537097584));
  v24 = sqrtf(COERCE_FLOAT((v23 >> 31) ^ (v23 >> 9) | 0x3F800000) + -1.0);
  v25 = vfx_script_clock_simulation_index();
  v26 = 277803737
      * (((747796405 * (v22 + v25) - 2093082855) >> (((747796405 * (v22 + v25) - 2093082855) >> 28)
                                                                 + 4)) ^ (747796405 * (v22 + v25) - 2093082855));
  v27 = __sincosf_stret((float)(COERCE_FLOAT((v26 >> 31) ^ (v26 >> 9) | 0x3F800000) + -1.0) * 6.2832);
  *(float *)&v28 = v24 * v27.__cosval;
  *((float *)&v28 + 1) = v24 * v27.__sinval;
  v29 = a1;
  v29.i32[2] = 0;
  v44 = vmulq_f32((float32x4_t)v28, (float32x4_t)vdupq_n_s32(0x3E99999Au));
  v30 = vaddq_f32(v29, v44);
  __asm { FMOV            V1.4S, #1.0 }
  _Q1.f32[0] = a2;
  v46 = vmulq_f32(_Q1, v30);
  v36 = vfx_script_clock_simulation_index();
  v38 = 0.0;
  if (sqrtf(vaddv_f32((float32x2_t)*(_OWORD *)&vmulq_f32(v44, v44))) > 0.15)
    v38 = a4;
  v39 = v46;
  v39.i32[3] = 1.0;
  *a9 = v39;
  *a12 = v46;
  *a13 = a5;
  v40 = a3;
  v37 = 277803737
      * (((747796405 * (v22 + v36) - 2015290331) >> (((747796405 * (v22 + v36) - 2015290331) >> 28)
                                                                 + 4)) ^ (747796405 * (v22 + v36) - 2015290331));
  v40.n128_f32[3] = COERCE_FLOAT((v37 >> 31) ^ (v37 >> 9) | 0x3F800000) + -1.0;
  *a10 = v40;
  v41 = v47;
  *(float *)&v41 = v38;
  *a11 = v41;
  return *(float *)&v41;
}

uint64_t __vfx_script_theDots43_particleInit_120()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

double ParticleUpdate_theDots43_particleUpdate_29(float32x4_t a1, float32x4_t a2, float32x4_t a3, float32x4_t a4, float32x4_t a5, float32x4_t a6, float a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, __int128 *a12, float32x4_t *a13, double a14, float a15, float a16, double a17, double a18, double a19, float a20)
{
  float32x4_t v23;
  float32x4_t v24;
  float32x4_t v25;
  float32x4_t v26;
  float32x4_t v27;
  __int128 v28;
  float v30;
  float v31;
  float32x4_t v32;
  __int128 v33;

  v33 = *a12;
  v31 = a5.f32[2];
  a6.i32[2] = 0;
  v23 = vsubq_f32(vmlaq_n_f32(vmlaq_lane_f32(vmlaq_laneq_f32(a4, a3, a5, 2), a2, *(float32x2_t *)a5.f32, 1), a1, a5.f32[0]), a6);
  v24 = vmulq_f32(v23, v23);
  v30 = (float)(fminf(fmaxf(sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v24, 2), vaddq_f32(v24, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v24.f32, 1))).f32[0])/ 0.8, 0.0), 1.0)+ 0.0)* a7;
  vfx_script_texture_sample1d();
  v32 = vmulq_n_f32(vmulq_n_f32(v25, v30), 1.0 - fminf(fmaxf((float)(v31 - a16) / (float)((float)(a16 + 0.5) - a16), 0.0), 1.0));
  vfx_script_texture_sample1d();
  v27 = vmulq_f32(v26, v32);
  *a13 = vmlaq_n_f32(v27, vsubq_f32(vmulq_f32(v32, (float32x4_t)xmmword_22F990870), v27), a20);
  v28 = v33;
  DWORD1(v28) = 0;
  *a12 = v28;
  return *(double *)&v28;
}

uint64_t __vfx_script_theDots43_particleUpdate_29()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

double ParticleUpdate_theDots43_particleUpdate_107(int32x4_t a1, float32x4_t a2, float a3, float a4, float32x2_t a5, float32x4_t a6, int32x4_t a7, uint64_t a8, uint64_t a9, uint64_t a10, float32x4_t *a11)
{
  float32x4_t v15;
  float32x4_t v16;
  float32x4_t v17;
  float32x4_t v18;
  float32x4_t v19;
  float32x4_t v20;
  int32x4_t v21;
  float32x4_t v22;
  float v23;
  float32x4_t v24;
  float v26;
  float32x4_t v27;

  a7.i32[0] = vadd_f32(*(float32x2_t *)a1.i8, 0).u32[0];
  __asm { FMOV            V7.2S, #-4.0 }
  *(float32x2_t *)a1.i8 = vmul_f32(*(float32x2_t *)a1.i8, _D7);
  a7.i32[1] = a1.i32[1];
  v15 = (float32x4_t)vzip1q_s32(a7, a1);
  v15.i32[1] = 0;
  v16 = vsubq_f32(v15, a2);
  v17 = vmulq_f32(v16, v16);
  v17.i64[0] = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v17, 2), vaddq_f32(v17, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v17.f32, 1))).u64[0];
  v18 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v17.f32, 0);
  v18.i32[3] = 0;
  v19 = vrsqrteq_f32(v18);
  v20 = vmulq_f32(v19, vrsqrtsq_f32(v18, vmulq_f32(v19, v19)));
  v21 = vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vdup_n_s16(v17.f32[0] != 0.0)), 0x1FuLL));
  v21.i32[3] = 0;
  v22 = (float32x4_t)vbslq_s8((int8x16_t)vcltzq_s32(v21), (int8x16_t)vmulq_f32(v16, vmulq_f32(v20, vrsqrtsq_f32(v18, vmulq_f32(v20, v20)))), (int8x16_t)v16);
  *(float *)v21.i32 = a3 - a4;
  v23 = fminf(fmaxf((float)(a3 - a4) / 0.6, 0.0), 1.0);
  v24 = vmulq_n_f32(v22, (float)(v23 * (float)(v23 * (float)(v23 * v23))) * 0.4);
  if (*(float *)v21.i32 > 0.0 && a10 == 1)
    v26 = 1.0;
  else
    v26 = 0.0;
  v27 = vaddq_f32(a6, vmulq_n_f32(v24, vmuls_lane_f32(v26, a5, 1)));
  v27.i32[1] = 0;
  *a11 = v27;
  return *(double *)v27.i64;
}

uint64_t __vfx_script_theDots43_particleUpdate_107()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

int8x8_t ParticleUpdate_theDots43_particleUpdate_24(int8x8_t a1, int8x8_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int8x8_t *a6)
{
  int8x8_t result;

  result = vbsl_s8((int8x8_t)vceqd_s64(a5, 2), (int8x8_t)vdup_n_s32(0x3DCCCCCDu), vbsl_s8((int8x8_t)vceqd_s64(a5, 1), a1, a2));
  *a6 = result;
  return result;
}

uint64_t __vfx_script_theDots43_particleUpdate_24()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

__n128 ParticleUpdate_theDots43_particleUpdate_85(int64x2_t a1, int64x2_t a2, __n128 a3, float a4, float a5, float32x4_t a6, int8x16_t a7, int8x16_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, __n128 *a13, float32x4_t *a14, int8x16_t *a15, float *a16, float a17, int64x2_t *a18)
{
  int64x2_t v26;
  float32x4_t v27;
  float v28;
  float v29;
  float v30;
  float v31;
  float v32;
  float v33;
  float32x4_t v34;
  float v35;
  float v36;
  float v37;
  int64x2_t v38;
  __n128 v39;
  __n128 result;
  float32x4_t v41;
  float32x4_t v42;
  int8x16_t v43;
  int64x2_t v46;

  v26 = *a18;
  v46 = *a18;
  v42 = (float32x4_t)a2;
  if (a11 != 3)
    a1 = a2;
  v26.i64[0] = a11;
  a2.i64[0] = 3;
  v43 = vbslq_s8((int8x16_t)vdupq_lane_s64(vceqq_s64(v26, a2).i64[0], 0), a7, a8);
  vfx_script_texture_sample1d();
  v41 = v27;
  vfx_script_clock_delta_time();
  v28 = vmuls_lane_f32(0.3, v42, 3) + a5;
  v30 = (float)(v42.f32[3] + 1.0) * (float)(v29 * a4);
  vfx_script_clock_delta_time();
  if (v28 <= 0.5)
    v32 = 0.0;
  else
    v32 = v30;
  v33 = fminf(fmaxf(a3.n128_f32[2] + v32, 0.0), 1.0);
  v34 = vmulq_f32(vmulq_n_f32(v41, 1.0 - v33), a6);
  v35 = (float)(v42.f32[3] + 1.0) * (float)(v31 * a17);
  if (v28 <= 0.5)
    v35 = 0.0;
  v36 = fminf(fmaxf(a3.n128_f32[1] + v35, 0.0), 1.0);
  v37 = (float)(1.0 - v36) * a3.n128_f32[0];
  if (a11 != 3)
  {
    v37 = 0.0;
    v36 = 0.0;
    v33 = 0.0;
  }
  *a14 = v34;
  *a15 = v43;
  *a16 = v37;
  v38.i64[0] = __PAIR64__(LODWORD(v36), v46.u32[0]);
  v38.i64[1] = __PAIR64__(v46.u32[3], LODWORD(v33));
  *a18 = v38;
  v39 = (__n128)a1;
  v39.n128_u32[2] = 0;
  *a13 = v39;
  result.n128_u64[0] = v39.n128_u64[0];
  result.n128_u32[2] = v39.n128_u32[2];
  return result;
}

uint64_t __vfx_script_theDots43_particleUpdate_85()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

float32x4_t ParticleUpdate_theDots43_particleUpdate_70(float32x4_t a1, float32x4_t a2, float32x4_t a3, float32x4_t a4, float32x4_t a5, float32x4_t a6, float32x4_t a7, uint64_t a8, uint64_t a9, __int128 *a10, float32x4_t *a11)
{
  __int128 v11;
  float32x4_t v12;
  float32x4_t v13;
  float32x4_t result;

  v11 = *a10;
  a6.i32[2] = 0;
  v12 = vsubq_f32(vmlaq_n_f32(vmlaq_lane_f32(vmlaq_laneq_f32(a4, a3, a5, 2), a2, *(float32x2_t *)a5.f32, 1), a1, a5.f32[0]), a6);
  v13 = vmulq_f32(v12, v12);
  result = vmulq_n_f32(a7, fminf(fmaxf(sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v13, 2), vaddq_f32(v13, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v13.f32, 1))).f32[0]), 0.0), 1.0));
  *a11 = result;
  DWORD1(v11) = 0;
  *a10 = v11;
  return result;
}

uint64_t __vfx_script_theDots43_particleUpdate_70()
{
  vfx_script_get_iteration_range();
  return vfx_script_get_arguments_buffer();
}

char **__vfx_get_script_table_theDots43()
{
  return &__vfx_get_script_table_theDots43::scriptTable;
}

uint64_t type metadata accessor for TapViewController(uint64_t a1)
{
  return sub_22F8612B0(a1, (uint64_t *)&unk_255E1DC68);
}

uint64_t sub_22F8611CC()
{
  return sub_22F8612F0();
}

void sub_22F8611D8()
{
  sub_22F98F394();
  __break(1u);
}

id sub_22F861230()
{
  return sub_22F86138C(type metadata accessor for TapViewController);
}

void sub_22F86123C()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_22F861268()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_22F861294()
{
  return type metadata accessor for TapViewController(0);
}

uint64_t type metadata accessor for PINViewController(uint64_t a1)
{
  return sub_22F8612B0(a1, (uint64_t *)&unk_255E1DCB8);
}

uint64_t sub_22F8612B0(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22F8612E4()
{
  return sub_22F8612F0();
}

uint64_t sub_22F8612F0()
{
  return swift_initClassMetadata2();
}

void sub_22F861328()
{
  sub_22F98F394();
  __break(1u);
}

id sub_22F861380()
{
  return sub_22F86138C(type metadata accessor for PINViewController);
}

id sub_22F86138C(uint64_t (*a1)(_QWORD))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

void sub_22F8613C4()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_22F8613F0()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_22F86141C()
{
  return type metadata accessor for PINViewController(0);
}

uint64_t initializeBufferWithCopyOfBuffer for AudioElement(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for BlurAndMoveModifier(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for BlurAndMoveModifier(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for UIRectCornerRadii(uint64_t a1)
{
  sub_22F862E2C(a1, &qword_255E1DD08);
}

void type metadata accessor for UIRectCorner(uint64_t a1)
{
  sub_22F862E2C(a1, &qword_255E1DD10);
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_22F862E2C(a1, &qword_255E1DD18);
}

void type metadata accessor for IOHIDEventSystemClient(uint64_t a1)
{
  sub_22F862E2C(a1, &qword_255E1DD20);
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_22F86150C(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_22F86152C(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_22F862E2C(a1, &qword_255E1DD28);
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_22F862E2C(a1, &qword_255E1DD30);
}

void type metadata accessor for PKAuthenticatorCoachingState(uint64_t a1)
{
  sub_22F862E2C(a1, &qword_255E1DD38);
}

void type metadata accessor for BSDeviceOrientation(uint64_t a1)
{
  sub_22F862E2C(a1, &qword_255E1DD40);
}

uint64_t sub_22F8615A4()
{
  return sub_22F862548(&qword_255E1DE08, (uint64_t (*)(uint64_t))type metadata accessor for BSDeviceOrientation, (uint64_t)&unk_22F990A34);
}

uint64_t sub_22F8615D0()
{
  sub_22F862548(&qword_255E1E0D0, (uint64_t (*)(uint64_t))type metadata accessor for LAError, (uint64_t)&unk_22F99115C);
  return sub_22F98F490();
}

uint64_t sub_22F861610()
{
  sub_22F862548(&qword_255E1E0D0, (uint64_t (*)(uint64_t))type metadata accessor for LAError, (uint64_t)&unk_22F99115C);
  return sub_22F98F484();
}

uint64_t sub_22F861654()
{
  sub_22F862548((unint64_t *)&qword_255E28530, (uint64_t (*)(uint64_t))type metadata accessor for LAError, (uint64_t)&unk_22F9919CC);
  return sub_22F98D258();
}

uint64_t sub_22F861694@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

void sub_22F86169C(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_22F8616A4@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_22F8616B8@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

_QWORD *sub_22F8616CC@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_22F8616F8@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_22F86171C(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_22F861730@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_22F861744(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_22F861758(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_22F86176C(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_22F861780()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_22F861790()
{
  return sub_22F98F268();
}

_QWORD *sub_22F8617A8(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

uint64_t sub_22F8617BC()
{
  sub_22F98F4FC();
  sub_22F98F508();
  return sub_22F98F520();
}

uint64_t sub_22F861800()
{
  return sub_22F98F508();
}

uint64_t sub_22F861828()
{
  sub_22F98F4FC();
  sub_22F98F508();
  return sub_22F98F520();
}

uint64_t sub_22F861868(uint64_t a1, uint64_t a2)
{
  return sub_22F862670(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

_QWORD *sub_22F861880@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_22F861890(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

_QWORD *sub_22F86189C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

BOOL sub_22F8618B0(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_22F8618E0(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_22F8618F4(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

uint64_t sub_22F861908()
{
  sub_22F862548(&qword_255E1E040, (uint64_t (*)(uint64_t))type metadata accessor for SPRXPCError, (uint64_t)&unk_22F9916A4);
  return sub_22F98F490();
}

uint64_t sub_22F861948()
{
  sub_22F862548(&qword_255E1E040, (uint64_t (*)(uint64_t))type metadata accessor for SPRXPCError, (uint64_t)&unk_22F9916A4);
  return sub_22F98F484();
}

uint64_t sub_22F861988()
{
  sub_22F862548(&qword_255E1E078, (uint64_t (*)(uint64_t))type metadata accessor for SPRXPCError, (uint64_t)&unk_22F9916E8);
  return sub_22F98D258();
}

id sub_22F8619C8()
{
  id *v0;

  return *v0;
}

uint64_t sub_22F8619D0(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_22F98EDA0();
  *a2 = 0;
  return result;
}

uint64_t sub_22F861A44(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_22F98EDAC();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_22F861AC0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_22F98EDB8();
  v2 = sub_22F98ED94();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_22F861B08@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_22F98EDB8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_22F861B30()
{
  return sub_22F98EDB8();
}

uint64_t sub_22F861B40()
{
  sub_22F862548((unint64_t *)&qword_255E28530, (uint64_t (*)(uint64_t))type metadata accessor for LAError, (uint64_t)&unk_22F9919CC);
  return sub_22F98D2A0();
}

uint64_t sub_22F861B80()
{
  sub_22F862548((unint64_t *)&qword_255E28530, (uint64_t (*)(uint64_t))type metadata accessor for LAError, (uint64_t)&unk_22F9919CC);
  return sub_22F98D270();
}

uint64_t sub_22F861BC0(void *a1)
{
  id v2;

  sub_22F862548((unint64_t *)&qword_255E28530, (uint64_t (*)(uint64_t))type metadata accessor for LAError, (uint64_t)&unk_22F9919CC);
  v2 = a1;
  return sub_22F98D264();
}

uint64_t sub_22F861C24()
{
  sub_22F862548((unint64_t *)&qword_255E28530, (uint64_t (*)(uint64_t))type metadata accessor for LAError, (uint64_t)&unk_22F9919CC);
  return sub_22F98D294();
}

uint64_t sub_22F861C78@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_22F879934();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

_QWORD *sub_22F861CB4@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_22F861CC0()
{
  sub_22F862548(&qword_255E1E0B0, (uint64_t (*)(uint64_t))type metadata accessor for PINControllerError, (uint64_t)&unk_22F9917F8);
  return sub_22F98D2A0();
}

uint64_t sub_22F861D00()
{
  sub_22F862548(&qword_255E1E0B0, (uint64_t (*)(uint64_t))type metadata accessor for PINControllerError, (uint64_t)&unk_22F9917F8);
  return sub_22F98D270();
}

uint64_t sub_22F861D40(void *a1)
{
  id v2;

  sub_22F862548(&qword_255E1E0B0, (uint64_t (*)(uint64_t))type metadata accessor for PINControllerError, (uint64_t)&unk_22F9917F8);
  v2 = a1;
  return sub_22F98D264();
}

uint64_t sub_22F861DA4()
{
  sub_22F862548(&qword_255E1E0B0, (uint64_t (*)(uint64_t))type metadata accessor for PINControllerError, (uint64_t)&unk_22F9917F8);
  return sub_22F98D294();
}

uint64_t sub_22F861DF4()
{
  return sub_22F98EDB8();
}

uint64_t sub_22F861E04()
{
  sub_22F862548(&qword_255E1E078, (uint64_t (*)(uint64_t))type metadata accessor for SPRXPCError, (uint64_t)&unk_22F9916E8);
  return sub_22F98D2A0();
}

uint64_t sub_22F861E44()
{
  sub_22F862548(&qword_255E1E078, (uint64_t (*)(uint64_t))type metadata accessor for SPRXPCError, (uint64_t)&unk_22F9916E8);
  return sub_22F98D270();
}

uint64_t sub_22F861E84(void *a1)
{
  id v2;

  sub_22F862548(&qword_255E1E078, (uint64_t (*)(uint64_t))type metadata accessor for SPRXPCError, (uint64_t)&unk_22F9916E8);
  v2 = a1;
  return sub_22F98D264();
}

uint64_t sub_22F861EE8()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = *v0;
  v2 = sub_22F98F1B4();

  return v2;
}

uint64_t sub_22F861F1C()
{
  sub_22F862548(&qword_255E1E078, (uint64_t (*)(uint64_t))type metadata accessor for SPRXPCError, (uint64_t)&unk_22F9916E8);
  return sub_22F98D294();
}

uint64_t sub_22F861F6C()
{
  sub_22F98F4FC();
  sub_22F98ED34();
  return sub_22F98F520();
}

BOOL sub_22F861FC8(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_22F861FE0()
{
  sub_22F862548((unint64_t *)&qword_255E28530, (uint64_t (*)(uint64_t))type metadata accessor for LAError, (uint64_t)&unk_22F9919CC);
  return sub_22F98D27C();
}

uint64_t sub_22F86203C()
{
  sub_22F862548(&qword_255E1E118, (uint64_t (*)(uint64_t))type metadata accessor for VNBarcodeSymbology, (uint64_t)&unk_22F990F9C);
  sub_22F862548(&qword_255E1E120, (uint64_t (*)(uint64_t))type metadata accessor for VNBarcodeSymbology, (uint64_t)&unk_22F990F3C);
  return sub_22F98F3F4();
}

uint64_t sub_22F8620C0()
{
  sub_22F862548(&qword_255E1E0F8, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_22F9913F0);
  sub_22F862548((unint64_t *)&unk_255E1E100, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_22F991390);
  return sub_22F98F3F4();
}

uint64_t sub_22F862144()
{
  sub_22F862548(&qword_255E1E080, (uint64_t (*)(uint64_t))type metadata accessor for PINControllerError, (uint64_t)&unk_22F991578);
  return sub_22F98F490();
}

uint64_t sub_22F862184()
{
  sub_22F862548(&qword_255E1E080, (uint64_t (*)(uint64_t))type metadata accessor for PINControllerError, (uint64_t)&unk_22F991578);
  return sub_22F98F484();
}

uint64_t sub_22F8621C4()
{
  sub_22F862548(&qword_255E1E0B0, (uint64_t (*)(uint64_t))type metadata accessor for PINControllerError, (uint64_t)&unk_22F9917F8);
  return sub_22F98D258();
}

uint64_t sub_22F862204()
{
  sub_22F862548(&qword_255E1E0B0, (uint64_t (*)(uint64_t))type metadata accessor for PINControllerError, (uint64_t)&unk_22F9917F8);
  return sub_22F98D27C();
}

uint64_t sub_22F86225C()
{
  sub_22F862548(&qword_255E1E078, (uint64_t (*)(uint64_t))type metadata accessor for SPRXPCError, (uint64_t)&unk_22F9916E8);
  return sub_22F98D27C();
}

uint64_t sub_22F8622B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_22F98ED94();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_22F8622F8()
{
  sub_22F862548((unint64_t *)&unk_255E267B0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_22F991908);
  sub_22F862548(&qword_255E1E110, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_22F99127C);
  return sub_22F98F3F4();
}

void type metadata accessor for Code(uint64_t a1)
{
  sub_22F862E2C(a1, &qword_255E1DF30);
}

void type metadata accessor for SPRXPCError(uint64_t a1)
{
  sub_22F862E2C(a1, &qword_255E1DF38);
}

void type metadata accessor for PINControllerError(uint64_t a1)
{
  sub_22F862E2C(a1, &qword_255E1DF40);
}

void type metadata accessor for Name(uint64_t a1)
{
  sub_22F862E2C(a1, &qword_255E1DF48);
}

void type metadata accessor for IOHIDEvent(uint64_t a1)
{
  sub_22F862E2C(a1, &qword_255E1DF50);
}

__n128 __swift_memcpy20_4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u32[0] = a2[1].n128_u32[0];
  *a1 = result;
  return result;
}

uint64_t sub_22F8623F4(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 20))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_22F862414(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_DWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 20) = v3;
  return result;
}

void type metadata accessor for Decimal(uint64_t a1)
{
  sub_22F862E2C(a1, &qword_255E1DF58);
}

void type metadata accessor for Key(uint64_t a1)
{
  sub_22F862E2C(a1, &qword_255E1DF60);
}

void _s3__C4CodeOMa_0(uint64_t a1)
{
  sub_22F862E2C(a1, &qword_255E1DF68);
}

void type metadata accessor for LAError(uint64_t a1)
{
  sub_22F862E2C(a1, &qword_255E1DF70);
}

void type metadata accessor for PKAuthenticatorESBiometricAnnotation(uint64_t a1)
{
  sub_22F862E2C(a1, &qword_255E1DF78);
}

void type metadata accessor for PKAuthenticatorEvaluationState(uint64_t a1)
{
  sub_22F862E2C(a1, &qword_255E1DF80);
}

void type metadata accessor for LABiometryType(uint64_t a1)
{
  sub_22F862E2C(a1, &qword_255E1DF88);
}

void type metadata accessor for VNBarcodeSymbology(uint64_t a1)
{
  sub_22F862E2C(a1, &qword_255E1DF90);
}

void type metadata accessor for Direction(uint64_t a1)
{
  sub_22F862E2C(a1, &qword_255E1DF98);
}

void type metadata accessor for PKGlyphViewColorMode(uint64_t a1)
{
  sub_22F862E2C(a1, &qword_255E1DFA0);
}

void type metadata accessor for PKGlyphViewState(uint64_t a1)
{
  sub_22F862E2C(a1, &qword_255E1DFA8);
}

uint64_t sub_22F86251C()
{
  return sub_22F862548(&qword_255E1DFB0, (uint64_t (*)(uint64_t))type metadata accessor for Direction, (uint64_t)&unk_22F990D5C);
}

uint64_t sub_22F862548(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x2348A6784](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22F862588()
{
  return sub_22F862548(&qword_255E1DFB8, (uint64_t (*)(uint64_t))type metadata accessor for Direction, (uint64_t)&unk_22F990D28);
}

uint64_t sub_22F8625B4()
{
  return sub_22F862548(&qword_255E1DFC0, (uint64_t (*)(uint64_t))type metadata accessor for Direction, (uint64_t)&unk_22F990D88);
}

uint64_t sub_22F8625E0()
{
  return sub_22F862548(&qword_255E1DFC8, (uint64_t (*)(uint64_t))type metadata accessor for Direction, (uint64_t)&unk_22F990DC4);
}

uint64_t sub_22F86260C()
{
  return sub_22F862548(&qword_255E1DFD0, (uint64_t (*)(uint64_t))type metadata accessor for VNBarcodeSymbology, (uint64_t)&unk_22F990F00);
}

uint64_t sub_22F862638()
{
  return sub_22F862548(&qword_255E1DFD8, (uint64_t (*)(uint64_t))type metadata accessor for VNBarcodeSymbology, (uint64_t)&unk_22F990ED4);
}

uint64_t sub_22F862664(uint64_t a1, uint64_t a2)
{
  return sub_22F862670(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BEE0CD8]);
}

uint64_t sub_22F862670(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_22F98EDB8();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_22F8626AC()
{
  sub_22F98EDB8();
  sub_22F98EE6C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22F8626EC()
{
  uint64_t v0;

  sub_22F98EDB8();
  sub_22F98F4FC();
  sub_22F98EE6C();
  v0 = sub_22F98F520();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_22F86275C()
{
  return sub_22F862548(&qword_255E1DFE0, (uint64_t (*)(uint64_t))type metadata accessor for VNBarcodeSymbology, (uint64_t)&unk_22F990F70);
}

uint64_t sub_22F862788()
{
  return sub_22F862548(&qword_255E1DFE8, (uint64_t (*)(uint64_t))type metadata accessor for LAError, (uint64_t)&unk_22F9910B8);
}

uint64_t sub_22F8627B4()
{
  return sub_22F862548(&qword_255E1DFF0, (uint64_t (*)(uint64_t))type metadata accessor for LAError, (uint64_t)&unk_22F991988);
}

uint64_t sub_22F8627E0()
{
  return sub_22F862548(&qword_255E1DFF8, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_22F991240);
}

uint64_t sub_22F86280C()
{
  return sub_22F862548(&qword_255E1E000, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_22F991214);
}

uint64_t sub_22F862838()
{
  return sub_22F862548(&qword_255E1E008, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_22F991354);
}

uint64_t sub_22F862864()
{
  return sub_22F862548(&qword_255E1E010, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_22F991328);
}

uint64_t sub_22F862890()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_22F98EDB8();
  v2 = v1;
  if (v0 == sub_22F98EDB8() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_22F98F430();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_22F862918()
{
  return sub_22F862548(&qword_255E1E018, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_22F9913C4);
}

uint64_t sub_22F862944()
{
  return sub_22F862548(&qword_255E1E020, (uint64_t (*)(uint64_t))type metadata accessor for PINControllerError, (uint64_t)&unk_22F991490);
}

uint64_t sub_22F862970()
{
  return sub_22F862548(&qword_255E1E028, (uint64_t (*)(uint64_t))type metadata accessor for PINControllerError, (uint64_t)&unk_22F9914BC);
}

uint64_t sub_22F86299C()
{
  return sub_22F862548(&qword_255E1E030, (uint64_t (*)(uint64_t))type metadata accessor for SPRXPCError, (uint64_t)&unk_22F9915BC);
}

uint64_t sub_22F8629C8()
{
  return sub_22F862548(&qword_255E1E038, (uint64_t (*)(uint64_t))type metadata accessor for SPRXPCError, (uint64_t)&unk_22F9915E8);
}

uint64_t sub_22F8629F4()
{
  return sub_22F862548(&qword_255E1E040, (uint64_t (*)(uint64_t))type metadata accessor for SPRXPCError, (uint64_t)&unk_22F9916A4);
}

uint64_t sub_22F862A20()
{
  return sub_22F862548(&qword_255E1E048, (uint64_t (*)(uint64_t))type metadata accessor for SPRXPCError, (uint64_t)&unk_22F991670);
}

uint64_t sub_22F862A4C()
{
  return sub_22F862548(&qword_255E1E050, (uint64_t (*)(uint64_t))type metadata accessor for SPRXPCError, (uint64_t)&unk_22F99162C);
}

uint64_t sub_22F862A78()
{
  return sub_22F862548(&qword_255E1E058, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_22F9917BC);
}

uint64_t sub_22F862AA4()
{
  return sub_22F862548(&qword_255E1E060, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_22F991780);
}

unint64_t sub_22F862AD4()
{
  unint64_t result;

  result = qword_255E1E068;
  if (!qword_255E1E068)
  {
    result = MEMORY[0x2348A6784](MEMORY[0x24BEE17C8], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_255E1E068);
  }
  return result;
}

uint64_t sub_22F862B18()
{
  return sub_22F862548(&qword_255E1E070, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_22F991754);
}

uint64_t sub_22F862B44()
{
  return sub_22F862548(&qword_255E1E078, (uint64_t (*)(uint64_t))type metadata accessor for SPRXPCError, (uint64_t)&unk_22F9916E8);
}

uint64_t sub_22F862B70()
{
  return sub_22F862548(&qword_255E1E080, (uint64_t (*)(uint64_t))type metadata accessor for PINControllerError, (uint64_t)&unk_22F991578);
}

uint64_t sub_22F862B9C()
{
  return sub_22F862548(&qword_255E1E088, (uint64_t (*)(uint64_t))type metadata accessor for PINControllerError, (uint64_t)&unk_22F991544);
}

uint64_t sub_22F862BC8()
{
  return sub_22F862548(&qword_255E1E090, (uint64_t (*)(uint64_t))type metadata accessor for PINControllerError, (uint64_t)&unk_22F991500);
}

uint64_t sub_22F862BF4()
{
  return sub_22F862548(&qword_255E1E098, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_22F9918A0);
}

void _s3__C4CodeOMa_1(uint64_t a1)
{
  sub_22F862E2C(a1, &qword_255E1E128);
}

uint64_t sub_22F862C34()
{
  return sub_22F862548(&qword_255E1E0A0, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_22F991864);
}

uint64_t sub_22F862C60()
{
  return sub_22F862548(&qword_255E1E0A8, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_22F9918DC);
}

uint64_t sub_22F862C8C()
{
  return sub_22F862548(&qword_255E1E0B0, (uint64_t (*)(uint64_t))type metadata accessor for PINControllerError, (uint64_t)&unk_22F9917F8);
}

uint64_t sub_22F862CB8()
{
  return sub_22F862548(&qword_255E1E0B8, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_22F9912B0);
}

uint64_t sub_22F862CE4()
{
  return sub_22F862548((unint64_t *)&unk_255E1E0C0, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_0, (uint64_t)&unk_22F9911A0);
}

uint64_t sub_22F862D10()
{
  return sub_22F862548((unint64_t *)&qword_255E28530, (uint64_t (*)(uint64_t))type metadata accessor for LAError, (uint64_t)&unk_22F9919CC);
}

uint64_t sub_22F862D3C()
{
  return sub_22F862548(&qword_255E1E0D0, (uint64_t (*)(uint64_t))type metadata accessor for LAError, (uint64_t)&unk_22F99115C);
}

uint64_t sub_22F862D68()
{
  return sub_22F862548(&qword_255E1E0D8, (uint64_t (*)(uint64_t))type metadata accessor for LAError, (uint64_t)&unk_22F991128);
}

uint64_t sub_22F862D94()
{
  return sub_22F862548((unint64_t *)&unk_255E1E0E0, (uint64_t (*)(uint64_t))type metadata accessor for LAError, (uint64_t)&unk_22F9910E4);
}

uint64_t sub_22F862DC0()
{
  return sub_22F862548(&qword_255E267A0, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_0, (uint64_t)&unk_22F99194C);
}

uint64_t sub_22F862DEC()
{
  return sub_22F862548(&qword_255E1E0F0, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_0, (uint64_t)&unk_22F9911CC);
}

void type metadata accessor for CFString(uint64_t a1)
{
  sub_22F862E2C(a1, (unint64_t *)&unk_255E1E130);
}

void sub_22F862E2C(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for XmarkButton(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for XmarkButton()
{
  return swift_release();
}

_QWORD *assignWithCopy for XmarkButton(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for XmarkButton(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for XmarkButton(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for XmarkButton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for XmarkButton()
{
  return &type metadata for XmarkButton;
}

uint64_t sub_22F862FEC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22F863004()
{
  return sub_22F98E644();
}

double sub_22F86301C@<D0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  sub_22F98EA4C();
  MEMORY[0x24BDAC7A8]();
  v4 = *v1;
  v3 = v1[1];
  swift_retain();
  v5 = sub_22F98E83C();
  sub_22F98EA1C();
  v6 = sub_22F98DD08();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = 0x6B72616D78;
  *(_QWORD *)(a1 + 24) = 0xE500000000000000;
  *(_QWORD *)(a1 + 32) = 0xD000000000000018;
  *(_QWORD *)(a1 + 40) = 0x800000022F99D210;
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = v6;
  result = 3.52473076e16;
  *(_OWORD *)(a1 + 64) = xmmword_22F991A80;
  *(_QWORD *)(a1 + 80) = 0x4050800000000000;
  return result;
}

unint64_t sub_22F863108()
{
  unint64_t result;

  result = qword_255E1E260;
  if (!qword_255E1E260)
  {
    result = MEMORY[0x2348A6784](&unk_22F994994, &type metadata for CircularButton);
    atomic_store(result, (unint64_t *)&qword_255E1E260);
  }
  return result;
}

uint64_t sub_22F863150()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  __swift_allocate_value_buffer(v0, qword_255E29580);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_255E29580);
  sub_22F98DA98();
  v2 = sub_22F98DAA4();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t sub_22F8631E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  __swift_allocate_value_buffer(v0, qword_255E29598);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_255E29598);
  sub_22F98DA98();
  v2 = sub_22F98DAA4();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t sub_22F86327C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  __swift_allocate_value_buffer(v0, qword_255E295B0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_255E295B0);
  sub_22F98DA98();
  v2 = sub_22F98DAA4();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t sub_22F863314()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  __swift_allocate_value_buffer(v0, qword_255E295C8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_255E295C8);
  sub_22F98DA98();
  v2 = sub_22F98DAA4();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t sub_22F8633AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  __swift_allocate_value_buffer(v0, qword_255E295E0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_255E295E0);
  sub_22F98DA98();
  v2 = sub_22F98DAA4();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t sub_22F863450()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  __swift_allocate_value_buffer(v0, qword_255E295F8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_255E295F8);
  sub_22F98DA98();
  v2 = sub_22F98DAA4();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t sub_22F8634EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  __swift_allocate_value_buffer(v0, qword_255E29610);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_255E29610);
  sub_22F98DA98();
  v2 = sub_22F98DAA4();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t sub_22F863588()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  __swift_allocate_value_buffer(v0, qword_255E29628);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_255E29628);
  sub_22F98DA98();
  v2 = sub_22F98DAA4();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t sub_22F86362C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  __swift_allocate_value_buffer(v0, qword_255E29640);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_255E29640);
  sub_22F98DA98();
  v2 = sub_22F98DAA4();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t sub_22F8636CC()
{
  uint64_t result;

  result = MCGestaltIsInternalBuild();
  byte_255E29658 = result;
  return result;
}

uint64_t sub_22F8636E8()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PRLoggers()
{
  return objc_opt_self();
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x2348A676C]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

unint64_t sub_22F8637B0(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  char v4;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0)
      v3 = HIBYTE(a3) & 0xF;
    else
      v3 = a2 & 0xFFFFFFFFFFFFLL;
    result = sub_22F98EE84();
    if ((v4 & 1) != 0)
      result = 15;
    if (4 * v3 >= result >> 14)
      return sub_22F98EF14();
  }
  __break(1u);
  return result;
}

void sub_22F863858(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;

  if (qword_255E1DB38 != -1)
    swift_once();
  if (byte_255E29658 == 1)
  {
    v9 = HIBYTE(a5) & 0xF;
    if ((a5 & 0x2000000000000000) == 0)
      v9 = a4 & 0xFFFFFFFFFFFFLL;
    if (v9)
    {
      v30 = a2;
      v31 = a3;
      swift_bridgeObjectRetain();
      sub_22F98EE9C();
      sub_22F98EE9C();
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    v30 = sub_22F98ED64();
    v31 = v10;
    sub_22F863BF8();
    v11 = sub_22F98F22C();
    v13 = v12;
    swift_bridgeObjectRelease();
    v14 = sub_22F8637B0(8uLL, v11, v13);
    v16 = v15;
    v29 = v17;
    v19 = v18;
    swift_bridgeObjectRelease();
    swift_unknownObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20 = sub_22F98DA8C();
    v21 = sub_22F98F070();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc();
      v28 = swift_slowAlloc();
      v30 = v28;
      *(_DWORD *)v22 = 136381187;
      swift_getObjectType();
      __swift_instantiateConcreteTypeFromMangledName(&qword_255E1E308);
      v23 = sub_22F98EE18();
      sub_22F878880(v23, v24, &v30);
      sub_22F98F208();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2081;
      swift_bridgeObjectRetain();
      v25 = MEMORY[0x2348A5A10](v14, v16, v29, v19);
      v27 = v26;
      swift_bridgeObjectRelease();
      sub_22F878880(v25, v27, &v30);
      sub_22F98F208();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 22) = 2081;
      swift_bridgeObjectRetain();
      sub_22F878880(a2, a3, &v30);
      sub_22F98F208();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_22F85B000, v20, v21, "(o)%{private}s-%{private}s.%{private}s", (uint8_t *)v22, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2348A6838](v28, -1, -1);
      MEMORY[0x2348A6838](v22, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_unknownObjectRelease_n();
    }

  }
}

unint64_t sub_22F863BF8()
{
  unint64_t result;

  result = qword_255E1E300;
  if (!qword_255E1E300)
  {
    result = MEMORY[0x2348A6784](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_255E1E300);
  }
  return result;
}

uint64_t sub_22F863C3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[5];

  if (*(_QWORD *)(v0 + 80))
  {
    v1 = *(_QWORD *)(v0 + 80);
  }
  else
  {
    sub_22F87A750(v0 + 40, (uint64_t)v5);
    v2 = *(_QWORD *)(v0 + 88);
    if (v2)
      v3 = *(_QWORD *)(v2 + 88);
    else
      v3 = 0;
    v1 = sub_22F96FE84(v5, v3, v2 == 0);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v5);
    *(_QWORD *)(v0 + 80) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_22F863CD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(v0 + 120))
  {
    v1 = *(_QWORD *)(v0 + 120);
  }
  else
  {
    v2 = v0;
    type metadata accessor for FineRotationManager(0);
    swift_allocObject();
    v1 = sub_22F88BB9C();
    *(_QWORD *)(v2 + 120) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_22F863D44()
{
  return sub_22F864050();
}

uint64_t sub_22F863D58()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_22F863DC8()
{
  return sub_22F864050();
}

uint64_t sub_22F863DDC()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_22F863E4C()
{
  return sub_22F864050();
}

uint64_t sub_22F863E60()
{
  return sub_22F864050();
}

uint64_t sub_22F863E74()
{
  return sub_22F864050();
}

uint64_t sub_22F863E88()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  return v1;
}

double sub_22F863EF8@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  result = *(double *)&v3;
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  return result;
}

uint64_t sub_22F863F80()
{
  return sub_22F864050();
}

uint64_t sub_22F863F94()
{
  return sub_22F864050();
}

uint64_t sub_22F863FA8()
{
  return sub_22F864050();
}

double sub_22F863FBC@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  result = *(double *)&v3;
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  return result;
}

uint64_t sub_22F86403C()
{
  return sub_22F864050();
}

uint64_t sub_22F864050()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_22F8640B8()
{
  return sub_22F8640E0();
}

uint64_t sub_22F8640CC()
{
  return sub_22F8640E0();
}

uint64_t sub_22F8640E0()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  return v1;
}

BOOL sub_22F864148(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_22F864160()
{
  return sub_22F98F508();
}

BOOL sub_22F864198(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_22F8641B0()
{
  sub_22F98F4FC();
  sub_22F98F508();
  return sub_22F98F520();
}

uint64_t sub_22F8641F4()
{
  sub_22F98F4FC();
  sub_22F98F508();
  return sub_22F98F520();
}

uint64_t sub_22F864234@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_22F879938(a1);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_22F864270(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v15;
  uint64_t v16;
  _QWORD aBlock[6];

  v3 = sub_22F98EB84();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v16 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8]();
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_22F98EB9C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8]();
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22F879058();
  v11 = (void *)sub_22F98F0F4();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v1;
  *(_BYTE *)(v12 + 24) = a1;
  aBlock[4] = sub_22F879970;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22F8644F0;
  aBlock[3] = &block_descriptor_30;
  v13 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_22F98EB90();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_22F862548((unint64_t *)&qword_255E22DA0, v4, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E22070);
  sub_22F87AA84((unint64_t *)&qword_255E22DB0, (uint64_t *)&unk_255E22070, MEMORY[0x24BEE12C8]);
  sub_22F98F274();
  MEMORY[0x2348A5CD4](0, v10, v6, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v16 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_22F864480()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_22F98DBAC();
}

uint64_t sub_22F8644F0(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_22F86451C()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_22F86458C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1ED78);
  v78 = *(_QWORD *)(v1 - 8);
  v79 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v77 = (char *)&v58 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1ED80);
  v75 = *(_QWORD *)(v3 - 8);
  v76 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v74 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1ED88);
  v72 = *(_QWORD *)(v5 - 8);
  v73 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v71 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1ED90);
  v69 = *(_QWORD *)(v70 - 8);
  MEMORY[0x24BDAC7A8](v70);
  v68 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1ED98);
  v66 = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67);
  v65 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EDA0);
  v63 = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64);
  v62 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EDA8);
  v60 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v59 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EDB0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22E10);
  v16 = *(_QWORD *)(v15 - 8);
  v58 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for VoiceOverStatusObserver();
  *(_QWORD *)(v0 + 24) = 0;
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 16) = 0;
  *(_OWORD *)(v0 + 80) = 0u;
  *(_OWORD *)(v0 + 96) = 0u;
  v19 = (_QWORD *)swift_allocObject();
  v20 = MEMORY[0x24BEE4AF8];
  v19[3] = 0;
  v19[4] = 0;
  v19[2] = v20;
  *(_QWORD *)(v0 + 112) = v19;
  *(_OWORD *)(v0 + 120) = 0u;
  *(_OWORD *)(v0 + 136) = 0u;
  *(_OWORD *)(v0 + 152) = 0u;
  *(_OWORD *)(v0 + 168) = 0u;
  *(_BYTE *)(v0 + 184) = UIAccessibilityIsVoiceOverRunning();
  *(_BYTE *)(v0 + 185) = 0;
  *(_BYTE *)(v0 + 186) = UIAccessibilityIsVoiceOverRunning();
  *(_BYTE *)(v0 + 187) = 0;
  v21 = v0 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel__voiceOverEnabled;
  LOBYTE(v80) = UIAccessibilityIsVoiceOverRunning();
  sub_22F98DB7C();
  v22 = *(void (**)(uint64_t, char *, uint64_t))(v16 + 32);
  v22(v21, v18, v15);
  v23 = v0 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel__showProgress;
  LOBYTE(v80) = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1E438);
  sub_22F98DB7C();
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v23, v14, v11);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_pinEntryTimer) = 0;
  v24 = OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_tapCounterTimer;
  type metadata accessor for GestureTimer();
  v25 = swift_allocObject();
  *(_WORD *)(v25 + 24) = 0;
  v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCF40]), sel_init);
  *(_QWORD *)(v25 + 40) = 0;
  *(_QWORD *)(v25 + 48) = v26;
  *(_QWORD *)(v25 + 16) = 0x3FF0000000000000;
  *(_QWORD *)(v25 + 32) = nullsub_1;
  *(_QWORD *)(v0 + v24) = v25;
  v27 = OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_removeDigitTimer;
  v28 = swift_allocObject();
  *(_WORD *)(v28 + 24) = 0;
  v29 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCF40]), sel_init);
  *(_QWORD *)(v28 + 40) = 0;
  *(_QWORD *)(v28 + 48) = v29;
  *(_QWORD *)(v28 + 16) = 0x3FF0000000000000;
  *(_QWORD *)(v28 + 32) = nullsub_1;
  *(_QWORD *)(v0 + v27) = v28;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_instructionsTimer) = 0;
  v30 = v0 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel__pinUIIsPresented;
  LOBYTE(v80) = 0;
  sub_22F98DB7C();
  v31 = v58;
  v22(v30, v18, v58);
  v32 = v0 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel__pinEntryMode;
  LOBYTE(v80) = 0;
  v33 = v59;
  sub_22F98DB7C();
  (*(void (**)(uint64_t, char *, uint64_t))(v60 + 32))(v32, v33, v61);
  v34 = v0 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel__disableAXButton;
  LOBYTE(v80) = 0;
  sub_22F98DB7C();
  v22(v34, v18, v31);
  v35 = v0 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel__readingVOInstructions;
  LOBYTE(v80) = 0;
  sub_22F98DB7C();
  v22(v35, v18, v31);
  v36 = v0 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel__inhibitsGestures;
  LOBYTE(v80) = 0;
  sub_22F98DB7C();
  v37 = v31;
  v22(v36, v18, v31);
  v38 = v0 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel__pinLength;
  *(_QWORD *)&v80 = 0;
  v39 = v62;
  sub_22F98DB7C();
  (*(void (**)(uint64_t, char *, uint64_t))(v63 + 32))(v38, v39, v64);
  v40 = v0 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel__pinUIError;
  v84 = 0u;
  v85 = 0u;
  v82 = 0u;
  v83 = 0u;
  v80 = 0u;
  v81 = 0u;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1E458);
  v41 = v65;
  sub_22F98DB7C();
  (*(void (**)(uint64_t, char *, uint64_t))(v66 + 32))(v40, v41, v67);
  v42 = v0 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel__presentAuth;
  LOBYTE(v80) = 0;
  sub_22F98DB7C();
  v22(v42, v18, v37);
  v43 = v0 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel__showLockOnStatusBar;
  LOBYTE(v80) = 0;
  sub_22F98DB7C();
  v22(v43, v18, v37);
  v44 = v0 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel__cancelUnlockInstruction;
  LOBYTE(v80) = 0;
  sub_22F98DB7C();
  v22(v44, v18, v37);
  v45 = v0 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel__topBarModel;
  v82 = 0u;
  v83 = 0u;
  v80 = 0u;
  v81 = 0u;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1E468);
  v46 = v68;
  sub_22F98DB7C();
  (*(void (**)(uint64_t, char *, uint64_t))(v69 + 32))(v45, v46, v70);
  v47 = OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_context;
  *(_QWORD *)(v0 + v47) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDA938]), sel_init);
  *(_BYTE *)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_evaluating) = 0;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_pinCardRequest) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_subscribers) = MEMORY[0x24BEE4AF8];
  *(_BYTE *)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_drawNumberAllowed) = 1;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_isPINPrivacyLockEnabled) = 0;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_didMerchantAuthorize) = 0;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_incomingCallAccepted) = 0;
  sub_22F8E45C8((uint64_t *)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_pinController));
  *(_QWORD *)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_accessibilityEntryType) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_drawNumberFailures) = 0;
  v48 = v0 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel__presentingPasscode;
  LOBYTE(v80) = 0;
  sub_22F98DB7C();
  v22(v48, v18, v37);
  v49 = v0 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel__authWrapper;
  *(_QWORD *)&v80 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1E478);
  v50 = v71;
  sub_22F98DB7C();
  (*(void (**)(uint64_t, char *, uint64_t))(v72 + 32))(v49, v50, v73);
  v51 = v0 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel__authModel;
  *(_QWORD *)&v80 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1E488);
  v52 = v74;
  sub_22F98DB7C();
  (*(void (**)(uint64_t, char *, uint64_t))(v75 + 32))(v51, v52, v76);
  v53 = v0 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_bsActionContinuity;
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1E498);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v53, 1, 1, v54);
  *(_BYTE *)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_pinCaptureState) = 0;
  v55 = v0 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel__pinState;
  LOBYTE(v80) = 0;
  v56 = v77;
  sub_22F98DB7C();
  (*(void (**)(uint64_t, char *, uint64_t))(v78 + 32))(v55, v56, v79);
  if (qword_255E1DC50 != -1)
    swift_once();
  sub_22F87A750((uint64_t)&qword_255E298B8, v0 + 40);
  return v0;
}

uint64_t sub_22F864EBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB00 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_255E295B0);
  sub_22F87ABDC(v5, (uint64_t)v4, (uint64_t *)&unk_255E206E0);
  v6 = sub_22F98DAA4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_22F87AC20((uint64_t)v4, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    v8 = sub_22F98DA8C();
    v9 = sub_22F98F0A0();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_22F85B000, v8, v9, "PINViewModel: destroyed", v10, 2u);
      MEMORY[0x2348A6838](v10, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  sub_22F8656BC();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v1 + 40);
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_22F87AC20(v1 + 144, &qword_255E1ED70);
  v11 = v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel__voiceOverEnabled;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22E10);
  v13 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
  v13(v11, v12);
  v14 = v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel__showProgress;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EDB0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);

  swift_release();
  swift_release();

  v13(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel__pinUIIsPresented, v12);
  v16 = v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel__pinEntryMode;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EDA8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
  v13(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel__disableAXButton, v12);
  v13(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel__readingVOInstructions, v12);
  v13(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel__inhibitsGestures, v12);
  v18 = v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel__pinLength;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EDA0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
  v20 = v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel__pinUIError;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1ED98);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
  v13(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel__presentAuth, v12);
  v13(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel__showLockOnStatusBar, v12);
  v13(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel__cancelUnlockInstruction, v12);
  v22 = v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel__topBarModel;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1ED90);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_pinController);
  v13(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel__presentingPasscode, v12);
  v24 = v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel__authWrapper;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1ED88);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
  v26 = v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel__authModel;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1ED80);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v26, v27);
  sub_22F87AC20(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_bsActionContinuity, &qword_255E1EDB8);
  v28 = v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel__pinState;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1ED78);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v28, v29);
  return v1;
}

uint64_t sub_22F865350()
{
  sub_22F864EBC();
  return swift_deallocClassInstance();
}

uint64_t sub_22F865374()
{
  return type metadata accessor for PINViewModel();
}

uint64_t type metadata accessor for PINViewModel()
{
  uint64_t result;

  result = qword_255E1E418;
  if (!qword_255E1E418)
    return swift_getSingletonMetadata();
  return result;
}

void sub_22F8653B8()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  sub_22F8687C4(319, (unint64_t *)&qword_255E1E428);
  if (v0 <= 0x3F)
  {
    sub_22F86876C(319, &qword_255E1E430, &qword_255E1E438, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
    if (v1 <= 0x3F)
    {
      sub_22F8687C4(319, &qword_255E1E440);
      if (v2 <= 0x3F)
      {
        sub_22F8687C4(319, &qword_255E1E448);
        if (v3 <= 0x3F)
        {
          sub_22F86876C(319, &qword_255E1E450, &qword_255E1E458, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
          if (v4 <= 0x3F)
          {
            sub_22F86876C(319, &qword_255E1E460, &qword_255E1E468, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
            if (v5 <= 0x3F)
            {
              sub_22F86876C(319, &qword_255E1E470, &qword_255E1E478, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
              if (v6 <= 0x3F)
              {
                sub_22F86876C(319, &qword_255E1E480, &qword_255E1E488, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
                if (v7 <= 0x3F)
                {
                  sub_22F86876C(319, &qword_255E1E490, &qword_255E1E498, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
                  if (v8 <= 0x3F)
                  {
                    sub_22F8687C4(319, qword_255E1E4A0);
                    if (v9 <= 0x3F)
                      swift_updateClassMetadata2();
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_22F8656BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  void *v43;
  void *v44;
  _QWORD v45[3];
  uint64_t v46;
  uint64_t v47;
  char *v48;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v45 - v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E21AB0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_22F8BD08C();
  swift_release();
  v11 = *(_QWORD *)(v0 + 104);
  if (v11)
  {
    v12 = sub_22F98EFD4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v10, 1, 1, v12);
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = 0;
    v13[3] = 0;
    v13[4] = v11;
    swift_retain_n();
    sub_22F8847CC((uint64_t)v10, (uint64_t)&unk_255E1EE48, (uint64_t)v13);
    swift_release();
    sub_22F9773E0();
    swift_release();
  }
  *(_QWORD *)(v1 + 104) = 0;
  swift_release();
  v14 = OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_pinCaptureState;
  if (*(unsigned __int8 *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_pinCaptureState) - 1 > 1)
  {
    if (*(_BYTE *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_isPINPrivacyLockEnabled) == 1)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      sub_22F98DBA0();
      swift_release();
      swift_release();
      if (LOBYTE(v45[0]) == 1
        && (*(_BYTE *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_didMerchantAuthorize) & 1) == 0
        && *(_BYTE *)(v1 + v14) != 5)
      {
        if (qword_255E1DB00 != -1)
          swift_once();
        v18 = __swift_project_value_buffer(v2, (uint64_t)qword_255E295B0);
        sub_22F87ABDC(v18, (uint64_t)v5, (uint64_t *)&unk_255E206E0);
        v19 = sub_22F98DAA4();
        v20 = *(_QWORD *)(v19 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v5, 1, v19) == 1)
        {
          sub_22F87AC20((uint64_t)v5, (uint64_t *)&unk_255E206E0);
        }
        else
        {
          v40 = sub_22F98DA8C();
          v41 = sub_22F98F0A0();
          if (os_log_type_enabled(v40, v41))
          {
            v42 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v42 = 0;
            _os_log_impl(&dword_22F85B000, v40, v41, "Handling unauthorized termination during cleanup", v42, 2u);
            MEMORY[0x2348A6838](v42, -1, -1);
          }

          (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v19);
        }
        swift_getKeyPath();
        swift_getKeyPath();
        LOBYTE(v45[0]) = 0;
        swift_retain();
        sub_22F98DBAC();
        sub_22F864270(5);
        *(_BYTE *)(v1 + v14) = 5;
        v43 = *(void **)(v1 + 16);
        if (v43)
        {
          swift_unknownObjectRetain();
          sub_22F98D978();
          v44 = (void *)sub_22F98ED94();
          swift_bridgeObjectRelease();
          objc_msgSend(v43, sel_pinAuthResultWithError_cancelsFlow_, v44, 1);

          swift_unknownObjectRelease();
        }
      }
    }
  }
  else
  {
    if (qword_255E1DB00 != -1)
      swift_once();
    v15 = __swift_project_value_buffer(v2, (uint64_t)qword_255E295B0);
    sub_22F87ABDC(v15, (uint64_t)v7, (uint64_t *)&unk_255E206E0);
    v16 = sub_22F98DAA4();
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v7, 1, v16) == 1)
    {
      sub_22F87AC20((uint64_t)v7, (uint64_t *)&unk_255E206E0);
    }
    else
    {
      v21 = sub_22F98DA8C();
      v22 = sub_22F98F0A0();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v23 = 0;
        _os_log_impl(&dword_22F85B000, v21, v22, "Cancelling capturePIN during cleanup", v23, 2u);
        MEMORY[0x2348A6838](v23, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v17 + 8))(v7, v16);
    }
    sub_22F864270(5);
    *(_BYTE *)(v1 + v14) = 5;
    v24 = *(void **)(v1 + 16);
    if (v24)
    {
      v25 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_pinCardRequest);
      swift_getKeyPath();
      swift_getKeyPath();
      swift_unknownObjectRetain();
      sub_22F98DBA0();
      swift_release();
      swift_release();
      if ((unint64_t)(*(_QWORD *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_accessibilityEntryType)
                            - 1) >= 3)
        v26 = 0;
      else
        v26 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_accessibilityEntryType);
      objc_msgSend(v24, sel_reportPINErrorWithError_isCardRequest_isAccessibilityEnabled_accessibilityEntryType_drawNumberFailures_, 29, v25, LOBYTE(v45[0]), v26, *(_QWORD *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_drawNumberFailures));
      swift_unknownObjectRelease();
    }
    sub_22F865E54();
    v27 = v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_pinController;
    sub_22F87A750(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_pinController, (uint64_t)v45);
    v28 = v46;
    v29 = v47;
    __swift_project_boxed_opaque_existential_1(v45, v46);
    (*(void (**)(uint64_t, uint64_t))(v29 + 56))(v28, v29);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v45);
    sub_22F87A750(v27, (uint64_t)v45);
    v30 = v46;
    v31 = v47;
    __swift_project_boxed_opaque_existential_1(v45, v46);
    v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 8))(v30, v31);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v45);
    if ((v32 & 1) != 0)
    {
      sub_22F864270(5);
      *(_BYTE *)(v1 + v14) = 5;
    }
  }
  if (qword_255E1DB70 != -1)
    swift_once();
  swift_beginAccess();
  v33 = off_255E211B8;
  swift_beginAccess();
  v34 = v33[4];
  v33[4] = 0;
  v33[5] = 0;
  swift_retain();
  sub_22F87A9B8(v34);
  v35 = (_QWORD *)((char *)v33 + OBJC_IVAR____TtC19ContactlessReaderUI10AppManager_animatedClose);
  v36 = *(_QWORD *)((char *)v33 + OBJC_IVAR____TtC19ContactlessReaderUI10AppManager_animatedClose);
  *v35 = 0;
  v35[1] = 0;
  sub_22F87A9B8(v36);
  swift_beginAccess();
  v37 = v33[2];
  v33[2] = 0;
  v33[3] = 0;
  sub_22F87A9B8(v37);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  v38 = v48;
  if (v48)
  {
    sub_22F970464();

  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  v39 = v48;
  if (v48)
  {
    *(_QWORD *)&v48[OBJC_IVAR____TtC19ContactlessReaderUI27PrivacyAuthenticatorWrapper_delegate + 8] = 0;
    swift_unknownObjectWeakAssign();

  }
}

void sub_22F865E54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v3 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v20 - v6;
  if (qword_255E1DB00 != -1)
    swift_once();
  v8 = __swift_project_value_buffer(v2, (uint64_t)qword_255E295B0);
  sub_22F87ABDC(v8, (uint64_t)v7, (uint64_t *)&unk_255E206E0);
  v9 = sub_22F98DAA4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v7, 1, v9) == 1)
  {
    sub_22F87AC20((uint64_t)v7, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858(v1, 0xD000000000000010, 0x800000022F99D750, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
  }
  v12 = OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_pinEntryTimer;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_pinEntryTimer), sel_invalidate);
  v13 = *(void **)(v1 + v12);
  *(_QWORD *)(v1 + v12) = 0;

  v14 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_tapCounterTimer);
  v15 = *(void **)(v14 + 48);
  swift_retain();
  objc_msgSend(v15, sel_invalidate);
  *(_BYTE *)(v14 + 24) = 0;
  swift_release();
  v16 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_removeDigitTimer);
  v17 = *(void **)(v16 + 48);
  swift_retain();
  objc_msgSend(v17, sel_invalidate);
  *(_BYTE *)(v16 + 24) = 0;
  swift_release();
  sub_22F87ABDC(v8, (uint64_t)v5, (uint64_t *)&unk_255E206E0);
  if (v11(v5, 1, v9) == 1)
  {
    sub_22F87AC20((uint64_t)v5, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858(v1, 0xD000000000000017, 0x800000022F99D730, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v5, v9);
  }
  v18 = OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_instructionsTimer;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_instructionsTimer), sel_invalidate);
  v19 = *(void **)(v1 + v18);
  *(_QWORD *)(v1 + v18) = 0;

}

uint64_t sub_22F8660D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  unsigned int v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  _QWORD *v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  _QWORD *v50;
  uint64_t result;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  void *v61;
  uint64_t v62;
  id v63;
  id v64;
  char *v65;
  int v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unsigned int (*v76)(char *, uint64_t, uint64_t);
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  _OWORD v85[4];

  v1 = v0;
  v2 = sub_22F98D5A0();
  v77 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v80 = (char *)&v76 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E21AB0);
  MEMORY[0x24BDAC7A8](v4);
  v78 = (char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EDF0);
  MEMORY[0x24BDAC7A8](v6);
  v82 = (uint64_t)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v81 = (uint64_t)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v76 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v76 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v76 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v76 - v20;
  if (qword_255E1DB00 != -1)
    swift_once();
  v22 = __swift_project_value_buffer(v8, (uint64_t)qword_255E295B0);
  sub_22F87ABDC(v22, (uint64_t)v21, (uint64_t *)&unk_255E206E0);
  v23 = sub_22F98DAA4();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
  if (v25(v21, 1, v23) == 1)
  {
    sub_22F87AC20((uint64_t)v21, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858(v1, 0x72756769666E6F63, 0xEB00000000292865, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v21, v23);
  }
  sub_22F87ABDC(v22, (uint64_t)v19, (uint64_t *)&unk_255E206E0);
  v26 = v25(v19, 1, v23);
  v83 = v13;
  v79 = v2;
  if (v26 == 1)
  {
    sub_22F87AC20((uint64_t)v19, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    v27 = sub_22F98DA8C();
    v28 = sub_22F98F0A0();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v29 = 67109120;
      if (qword_255E1DB80 != -1)
        swift_once();
      LODWORD(v85[0]) = byte_255E29730;
      sub_22F98F208();
      _os_log_impl(&dword_22F85B000, v27, v28, "deviceSupportsDynamicIsland = %{BOOL}d", v29, 8u);
      MEMORY[0x2348A6838](v29, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v24 + 8))(v19, v23);
  }
  if (qword_255E1DB70 != -1)
    swift_once();
  swift_beginAccess();
  v30 = off_255E211B8;
  *(_QWORD *)(v1 + 16) = *((_QWORD *)off_255E211B8 + 6);
  swift_retain();
  swift_retain();
  swift_unknownObjectRelease();
  if (v30[6])
    swift_unknownObjectWeakAssign();
  sub_22F87ABDC(v22, (uint64_t)v16, (uint64_t *)&unk_255E206E0);
  if (v25(v16, 1, v23) == 1)
  {
    sub_22F87AC20((uint64_t)v16, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    v31 = sub_22F98DA8C();
    v32 = sub_22F98F0A0();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      v76 = v25;
      v34 = v33;
      *(_WORD *)v33 = 0;
      _os_log_impl(&dword_22F85B000, v31, v32, "registering inCallHandler for PINUI", v33, 2u);
      v25 = v76;
      MEMORY[0x2348A6838](v34, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v24 + 8))(v16, v23);
  }
  v35 = (uint64_t)v83;
  swift_beginAccess();
  v36 = v30[2];
  v30[2] = &unk_255E1EE00;
  v30[3] = v1;
  swift_retain();
  sub_22F87A9B8(v36);
  sub_22F87ABDC(v22, v35, (uint64_t *)&unk_255E206E0);
  if (v25((char *)v35, 1, v23) == 1)
  {
    v37 = v24;
    sub_22F87AC20(v35, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    v38 = sub_22F98DA8C();
    v39 = sub_22F98F0A0();
    if (os_log_type_enabled(v38, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v40 = 0;
      _os_log_impl(&dword_22F85B000, v38, v39, "registering homeButtonHandler for PINUI", v40, 2u);
      v41 = v40;
      v35 = (uint64_t)v83;
      MEMORY[0x2348A6838](v41, -1, -1);
    }

    v37 = v24;
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v35, v23);
  }
  swift_beginAccess();
  v42 = v30[4];
  v30[4] = &unk_255E1EE10;
  v30[5] = v1;
  swift_retain();
  sub_22F87A9B8(v42);
  v43 = (uint64_t)v30 + OBJC_IVAR____TtC19ContactlessReaderUI10AppManager_transactionContext;
  swift_beginAccess();
  v44 = v82;
  sub_22F87ABDC(v43, v82, &qword_255E1EDF0);
  v45 = type metadata accessor for TransactionContext(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 48))(v44, 1, v45))
  {
    sub_22F87AC20(v44, &qword_255E1EDF0);
LABEL_29:
    v46 = v81;
    sub_22F87ABDC(v22, v81, (uint64_t *)&unk_255E206E0);
    if (v25((char *)v46, 1, v23) == 1)
    {
      sub_22F87AC20(v46, (uint64_t *)&unk_255E206E0);
    }
    else
    {
      v47 = sub_22F98DA8C();
      v48 = sub_22F98F088();
      if (os_log_type_enabled(v47, v48))
      {
        v49 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v49 = 0;
        _os_log_impl(&dword_22F85B000, v47, v48, "AppManager's transactionContext or pinContext is nil", v49, 2u);
        MEMORY[0x2348A6838](v49, -1, -1);
      }

      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v46, v23);
    }
    objc_msgSend((id)v1, sel_closePINUI);
    return swift_release();
  }
  v50 = *(_QWORD **)(v44 + *(int *)(v45 + 20));
  swift_retain();
  sub_22F87AC20(v44, &qword_255E1EDF0);
  if (!v50)
    goto LABEL_29;
  *(_QWORD *)(v1 + 88) = v50;
  swift_retain();
  result = swift_release();
  v52 = *(_QWORD **)(v1 + 88);
  if (v52)
  {
    v53 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    swift_retain();
    sub_22F986030(v52, (uint64_t)sub_22F87AC5C, v53, v85);
    swift_release();
    swift_release_n();
    v54 = sub_22F98EFD4();
    v55 = (uint64_t)v78;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v78, 1, 1, v54);
    sub_22F98EFBC();
    swift_retain();
    sub_22F87AC64((uint64_t)v85);
    v56 = sub_22F98EFB0();
    v57 = swift_allocObject();
    v58 = MEMORY[0x24BEE6930];
    *(_QWORD *)(v57 + 16) = v56;
    *(_QWORD *)(v57 + 24) = v58;
    *(_QWORD *)(v57 + 32) = v1;
    v59 = v85[1];
    *(_OWORD *)(v57 + 40) = v85[0];
    *(_OWORD *)(v57 + 56) = v59;
    v60 = v85[3];
    *(_OWORD *)(v57 + 72) = v85[2];
    *(_OWORD *)(v57 + 88) = v60;
    sub_22F884920(v55, (uint64_t)&unk_255E1EE20, v57);
    sub_22F87AD80((uint64_t)v85);
    swift_release();
    *(_BYTE *)(v1 + 187) = 0;
    v61 = *(void **)((char *)v30 + OBJC_IVAR____TtC19ContactlessReaderUI10AppManager_interruptionMonitor);
    v62 = v79;
    if (*((_BYTE *)v50 + OBJC_IVAR____TtC19ContactlessReaderUI10PINContext_issuerPIN) == 1)
    {
      if (v61)
      {
        v63 = v61;
        sub_22F894F68();

      }
      sub_22F98D4E0();
    }
    else
    {
      if (v61)
      {
        v64 = v61;
        sub_22F894D90(1);

      }
      swift_getKeyPath();
      swift_getKeyPath();
      LOBYTE(v84) = 1;
      swift_retain();
      sub_22F98DBAC();
      sub_22F98D540();
    }
    v65 = v80;
    sub_22F98D57C();
    (*(void (**)(char *, uint64_t))(v77 + 8))(v65, v62);
    v66 = *((unsigned __int8 *)v50 + OBJC_IVAR____TtC19ContactlessReaderUI10PINContext_privacyLock);
    *(_BYTE *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_isPINPrivacyLockEnabled) = v66;
    if (v66 == 1)
    {
      type metadata accessor for PrivacyAuthenticatorModel();
      swift_allocObject();
      v67 = sub_22F8C5B48();
      v68 = objc_allocWithZone((Class)type metadata accessor for PrivacyAuthenticatorWrapper());
      v69 = swift_retain();
      v70 = sub_22F971114(v69, 0, 0);
      swift_getKeyPath();
      swift_getKeyPath();
      v84 = (uint64_t)v70;
      swift_retain();
      sub_22F98DBAC();
      swift_getKeyPath();
      swift_getKeyPath();
      v84 = v67;
      swift_retain();
      sub_22F98DBAC();
    }
    *(_QWORD *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_accessibilityEntryType) = 0;
    *(_QWORD *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_drawNumberFailures) = 0;
    v71 = v50[4];
    v72 = v50[5];
    v73 = v50[2];
    v74 = v50[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_22F867518(v71, v72, v73, v74);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22F867B78();
    v75 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    swift_retain();
    sub_22F8BD1A4((uint64_t)sub_22F87ADDC, v75);
    swift_release();
    swift_release_n();
    UIAccessibilityPostNotification(*MEMORY[0x24BEBDEC8], 0);
    *(_QWORD *)(v1 + 104) = *(_QWORD *)((char *)v30 + OBJC_IVAR____TtC19ContactlessReaderUI10AppManager_audioManager);
    swift_retain();
    swift_release();
    if (*(_QWORD *)(v1 + 104))
    {
      swift_retain();
      sub_22F9757BC(0);
      swift_release();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_22F98DBA0();
    swift_release();
    swift_release();
    if (v84 == 1)
      sub_22F86772C();
    swift_release();
    return swift_release();
  }
  __break(1u);
  return result;
}

uint64_t sub_22F866D30()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22F866D78;
  return sub_22F866DD4();
}

uint64_t sub_22F866D78(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  swift_task_dealloc();
  if (v1)
    v5 = 0;
  else
    v5 = a1 & 1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t sub_22F866DD4()
{
  uint64_t v0;
  _QWORD *v1;

  v1[5] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EDB8);
  v1[6] = swift_task_alloc();
  v1[7] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v1[8] = swift_task_alloc();
  v1[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22F866E68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t);
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;

  if (qword_255E1DB00 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 72);
  v2 = __swift_project_value_buffer(*(_QWORD *)(v0 + 56), (uint64_t)qword_255E295B0);
  sub_22F87ABDC(v2, v1, (uint64_t *)&unk_255E206E0);
  v3 = sub_22F98DAA4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  v6 = v5(v1, 1, v3);
  v7 = *(_QWORD *)(v0 + 72);
  if (v6 == 1)
  {
    sub_22F87AC20(*(_QWORD *)(v0 + 72), (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858(*(_QWORD *)(v0 + 40), 0x61486C6C61436E69, 0xEF292872656C646ELL, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  }
  v8 = *(_QWORD *)(v0 + 48);
  v9 = *(_QWORD *)(v0 + 40) + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_bsActionContinuity;
  swift_beginAccess();
  sub_22F87ABDC(v9, v8, &qword_255E1EDB8);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1E498);
  LODWORD(v9) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v8, 1, v10);
  sub_22F87AC20(v8, &qword_255E1EDB8);
  if ((_DWORD)v9 == 1)
  {
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v11;
    *v11 = v0;
    v11[1] = sub_22F867170;
    return sub_22F98F448();
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 64);
    sub_22F87ABDC(v2, v13, (uint64_t *)&unk_255E206E0);
    if (v5(v13, 1, v3) == 1)
    {
      sub_22F87AC20(*(_QWORD *)(v0 + 64), (uint64_t *)&unk_255E206E0);
    }
    else
    {
      v14 = sub_22F98DA8C();
      v15 = sub_22F98F0A0();
      if (os_log_type_enabled(v14, v15))
      {
        v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_22F85B000, v14, v15, "bsAction already being processed", v16, 2u);
        MEMORY[0x2348A6838](v16, -1, -1);
      }
      v17 = *(_QWORD *)(v0 + 64);

      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v17, v3);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
}

uint64_t sub_22F867170()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22F8671D4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(v0 + 96);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_22F86722C()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_22F867278()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22F87B610;
  return sub_22F8672C0();
}

uint64_t sub_22F8672C0()
{
  uint64_t v0;
  _QWORD *v1;

  v1[2] = v0;
  v1[3] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v1[4] = swift_task_alloc();
  v1[5] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22F867330()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t);
  int v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;

  if (qword_255E1DB00 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 40);
  v2 = __swift_project_value_buffer(*(_QWORD *)(v0 + 24), (uint64_t)qword_255E295B0);
  sub_22F87ABDC(v2, v1, (uint64_t *)&unk_255E206E0);
  v3 = sub_22F98DAA4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  v6 = v5(v1, 1, v3);
  v7 = *(_QWORD *)(v0 + 40);
  if (v6 == 1)
  {
    sub_22F87AC20(*(_QWORD *)(v0 + 40), (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858(*(_QWORD *)(v0 + 16), 0xD000000000000013, 0x800000022F99DF80, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  }
  v8 = *(_QWORD *)(v0 + 32);
  sub_22F87ABDC(v2, v8, (uint64_t *)&unk_255E206E0);
  if (v5(v8, 1, v3) == 1)
  {
    sub_22F87AC20(*(_QWORD *)(v0 + 32), (uint64_t *)&unk_255E206E0);
  }
  else
  {
    v9 = sub_22F98DA8C();
    v10 = sub_22F98F0A0();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_22F85B000, v9, v10, "don't handle and SB will also ignore", v11, 2u);
      MEMORY[0x2348A6838](v11, -1, -1);
    }
    v12 = *(_QWORD *)(v0 + 32);

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v12, v3);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_22F867518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v22;

  v5 = v4;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E21AB0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB00 != -1)
    swift_once();
  v16 = __swift_project_value_buffer(v13, (uint64_t)qword_255E295B0);
  sub_22F87ABDC(v16, (uint64_t)v15, (uint64_t *)&unk_255E206E0);
  v17 = sub_22F98DAA4();
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v15, 1, v17) == 1)
  {
    sub_22F87AC20((uint64_t)v15, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858(v5, 0xD00000000000001ALL, 0x800000022F99DEC0, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v15, v17);
  }
  *(_BYTE *)(v5 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_pinCardRequest) = a4 == 0;
  v19 = sub_22F98EFD4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v12, 1, 1, v19);
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = 0;
  v20[3] = 0;
  v20[4] = v5;
  v20[5] = a1;
  v20[6] = a2;
  v20[7] = a3;
  v20[8] = a4;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_22F884920((uint64_t)v12, (uint64_t)&unk_255E1EE30, (uint64_t)v20);
  return swift_release();
}

uint64_t sub_22F86772C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  void *v18;
  void *v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t aBlock;
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  void *v28;
  uint64_t (*v29)();
  uint64_t v30;

  v1 = v0;
  v2 = sub_22F98EB84();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_22F98EB9C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB00 != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v10, (uint64_t)qword_255E295B0);
  sub_22F87ABDC(v13, (uint64_t)v12, (uint64_t *)&unk_255E206E0);
  v14 = sub_22F98DAA4();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14) == 1)
  {
    sub_22F87AC20((uint64_t)v12, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858(v1, 0xD00000000000001ELL, 0x800000022F99DEA0, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  v16 = v30;
  result = sub_22F87A26C(aBlock, v26, (uint64_t)v27, (uint64_t)v28, (uint64_t)v29, v30);
  if (!v16)
  {
    sub_22F879058();
    v24 = sub_22F98F0F4();
    v29 = sub_22F87ADE4;
    v30 = v1;
    aBlock = MEMORY[0x24BDAC760];
    v26 = 1107296256;
    v27 = sub_22F8644F0;
    v28 = &block_descriptor_224;
    v18 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    sub_22F98EB90();
    aBlock = MEMORY[0x24BEE4AF8];
    sub_22F862548((unint64_t *)&qword_255E22DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    v23 = v6;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E22070);
    sub_22F87AA84((unint64_t *)&qword_255E22DB0, (uint64_t *)&unk_255E22070, MEMORY[0x24BEE12C8]);
    sub_22F98F274();
    v19 = (void *)v24;
    MEMORY[0x2348A5CD4](0, v9, v5, v18);
    _Block_release(v18);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v23);
    if (*(_QWORD *)(v1 + 104))
    {
      type metadata accessor for AudioFactory();
      v20 = *(_BYTE *)(v1 + 186);
      swift_retain();
      sub_22F8D7394(3, v20, (uint64_t)&aBlock);
      v21 = swift_allocObject();
      swift_weakInit();
      __swift_instantiateConcreteTypeFromMangledName(&qword_255E1ED38);
      v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_22F991B40;
      sub_22F87ABDC((uint64_t)&aBlock, v22 + 32, &qword_255E1ED48);
      swift_retain();
      sub_22F975EF4(v22, 2, (void (*)(uint64_t))sub_22F87AE0C, v21);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      sub_22F87AC20((uint64_t)&aBlock, &qword_255E1ED48);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_22F867B78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v11;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E22DF0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EDD8);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_22F991B40;
  if (qword_255E1DB70 != -1)
    swift_once();
  swift_beginAccess();
  v7 = *(void **)((char *)off_255E211B8 + OBJC_IVAR____TtC19ContactlessReaderUI10AppManager_interruptionMonitor);
  if (v7)
  {
    swift_beginAccess();
    v8 = v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EDE0);
    sub_22F98DB88();
    swift_endAccess();

    swift_allocObject();
    swift_weakInit();
    sub_22F87AA84(&qword_255E1EDE8, (uint64_t *)&unk_255E22DF0, MEMORY[0x24BDB9EE8]);
    v9 = sub_22F98DBC4();
    swift_release();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    v9 = 0;
  }
  *(_QWORD *)(v6 + 32) = v9;
  v11 = v6;
  sub_22F98EF5C();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_subscribers) = v11;
  return swift_bridgeObjectRelease();
}

uint64_t sub_22F867D64(unsigned __int8 *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint8_t *v16;
  uint64_t result;
  uint64_t v18;
  char v19;
  uint8_t *v20;
  int v21;
  uint64_t v22;
  uint64_t v23[3];

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *a1;
  if (qword_255E1DB00 != -1)
    swift_once();
  v6 = __swift_project_value_buffer(v2, (uint64_t)qword_255E295B0);
  sub_22F87ABDC(v6, (uint64_t)v4, (uint64_t *)&unk_255E206E0);
  v7 = sub_22F98DAA4();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v4, 1, v7) == 1)
  {
    sub_22F87AC20((uint64_t)v4, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    v9 = sub_22F98DA8C();
    v10 = sub_22F98F0A0();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = swift_slowAlloc();
      v21 = v5;
      v12 = (uint8_t *)v11;
      v13 = swift_slowAlloc();
      v23[0] = v13;
      *(_DWORD *)v12 = 136315138;
      v20 = v12 + 4;
      LOBYTE(v22) = v21;
      __swift_instantiateConcreteTypeFromMangledName(&qword_255E20610);
      v14 = sub_22F98EE18();
      v22 = sub_22F878880(v14, v15, v23);
      sub_22F98F208();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22F85B000, v9, v10, "interruption: %s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348A6838](v13, -1, -1);
      v16 = v12;
      v5 = v21;
      MEMORY[0x2348A6838](v16, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v4, v7);
  }
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v18 = result;
    if (v5)
    {
      v19 = *(_BYTE *)(result + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_isPINPrivacyLockEnabled);
      swift_getKeyPath();
      swift_getKeyPath();
      LOBYTE(v22) = v19;
      swift_retain();
      sub_22F98DBAC();
      *(_BYTE *)(v18 + 187) = 0;
      if (*(_QWORD *)(v18 + 104))
      {
        swift_retain();
        sub_22F975CE8(1);
LABEL_14:
        swift_release();
      }
    }
    else
    {
      swift_getKeyPath();
      swift_getKeyPath();
      LOBYTE(v22) = 0;
      swift_retain();
      sub_22F98DBAC();
      *(_BYTE *)(v18 + 187) = 1;
      if (*(_QWORD *)(v18 + 104))
      {
        swift_retain();
        sub_22F975CC4(1);
        goto LABEL_14;
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_22F8680A4()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_22F8680FC(0);
    return swift_release();
  }
  return result;
}

id sub_22F8680FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  id result;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  result = (id)MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_pinCaptureState;
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_pinCaptureState) == 1)
  {
    if (a1)
    {
      if (a1 == 1)
      {
        return sub_22F869030();
      }
      else if (a1 == 2)
      {
        return (id)sub_22F869864();
      }
      else
      {
        return (id)sub_22F86A0C0(a1);
      }
    }
    else
    {
      return (id)sub_22F86890C();
    }
  }
  else
  {
    if (qword_255E1DB38 != -1)
      result = (id)swift_once();
    if (byte_255E29658 == 1)
    {
      v25 = a1;
      sub_22F8712EC(a1);
      v8 = sub_22F98EE18();
      v10 = v9;
      LOBYTE(v25) = *(_BYTE *)(v1 + v7);
      v11 = sub_22F98EE18();
      v13 = v12;
      if (qword_255E1DB00 != -1)
        swift_once();
      v14 = __swift_project_value_buffer(v3, (uint64_t)qword_255E295B0);
      sub_22F87ABDC(v14, (uint64_t)v6, (uint64_t *)&unk_255E206E0);
      v15 = sub_22F98DAA4();
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v6, 1, v15) == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return (id)sub_22F87AC20((uint64_t)v6, (uint64_t *)&unk_255E206E0);
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v17 = sub_22F98DA8C();
        v18 = sub_22F98F088();
        if (os_log_type_enabled(v17, v18))
        {
          v19 = swift_slowAlloc();
          v22 = v11;
          v20 = v19;
          v23 = swift_slowAlloc();
          v25 = v23;
          *(_DWORD *)v20 = 136315394;
          swift_bridgeObjectRetain();
          v24 = sub_22F878880(v8, v10, &v25);
          sub_22F98F208();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v20 + 12) = 2080;
          swift_bridgeObjectRetain();
          v24 = sub_22F878880(v22, v13, &v25);
          sub_22F98F208();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_22F85B000, v17, v18, "PINViewModel: cannot execute action [%s] in state [%s]", (uint8_t *)v20, 0x16u);
          v21 = v23;
          swift_arrayDestroy();
          MEMORY[0x2348A6838](v21, -1, -1);
          MEMORY[0x2348A6838](v20, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
        }

        return (id)(*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v6, v15);
      }
    }
  }
  return result;
}

uint64_t sub_22F8684C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  __int128 v6;

  *(_QWORD *)(v5 + 80) = a4;
  *(_QWORD *)(v5 + 88) = a5;
  *(_QWORD *)(v5 + 96) = *(_QWORD *)a5;
  *(_OWORD *)(v5 + 104) = *(_OWORD *)(a5 + 8);
  *(_QWORD *)(v5 + 120) = *(_QWORD *)(a5 + 24);
  v6 = *(_OWORD *)(a5 + 48);
  *(_OWORD *)(v5 + 128) = *(_OWORD *)(a5 + 32);
  *(_OWORD *)(v5 + 144) = v6;
  sub_22F98EFBC();
  *(_QWORD *)(v5 + 160) = sub_22F98EFB0();
  sub_22F98EF8C();
  return swift_task_switch();
}

uint64_t sub_22F868550()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 144);
  v6 = *(_OWORD *)(v0 + 112);
  v7 = *(_OWORD *)(v0 + 128);
  v5 = *(_OWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  *(_OWORD *)(v0 + 16) = v5;
  *(_OWORD *)(v0 + 32) = v6;
  *(_OWORD *)(v0 + 48) = v7;
  *(_QWORD *)(v0 + 64) = v2;
  *(_QWORD *)(v0 + 72) = v1;
  sub_22F87AC64(v3);
  swift_retain();
  sub_22F98DBAC();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22F868614()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  char v3;
  char v4;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  result = swift_release();
  if (v4 == 1)
  {
    *(_BYTE *)(v0 + 186) = 2;
    if (!*(_QWORD *)(v0 + 104))
      return result;
    swift_retain();
    v2 = 1;
    goto LABEL_8;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  result = swift_release();
  if (v3 == 1)
  {
    *(_BYTE *)(v0 + 186) = v3;
    return result;
  }
  *(_BYTE *)(v0 + 186) = 0;
  if (*(_QWORD *)(v0 + 104))
  {
    swift_retain();
    v2 = 0;
LABEL_8:
    sub_22F9757BC(v2);
    return swift_release();
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x2348A6778](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

void sub_22F86876C(uint64_t a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

void sub_22F8687C4(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_22F98DBB8();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t sub_22F868808@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for PINViewModel();
  result = sub_22F98DB70();
  *a1 = result;
  return result;
}

void sub_22F868844()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v2[48];

  if (*(_QWORD *)(v0 + 104))
  {
    type metadata accessor for AudioFactory();
    swift_retain();
    sub_22F8D7394(0, 1u, (uint64_t)v2);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E1ED38);
    v1 = swift_allocObject();
    *(_OWORD *)(v1 + 16) = xmmword_22F991B40;
    sub_22F87ABDC((uint64_t)v2, v1 + 32, &qword_255E1ED48);
    sub_22F975EF4(v1, 2, 0, 0);
    swift_release();
    swift_bridgeObjectRelease();
    sub_22F87AC20((uint64_t)v2, &qword_255E1ED48);
  }
}

uint64_t sub_22F86890C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(_QWORD, _QWORD);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id (*v19)();
  void *v20;
  void *v21;
  id (*v22)();
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  unsigned __int8 v32;
  uint64_t v33;
  _QWORD *v34;
  void *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  _QWORD *v39;
  void *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v45;
  void (*v46)(_QWORD, _QWORD);
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  _QWORD aBlock[3];
  void *v56;
  id (*v57)();
  _QWORD *v58;

  v1 = v0;
  v50 = sub_22F98EB84();
  v54 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v53 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_22F98EB9C();
  v51 = *(_QWORD *)(v3 - 8);
  v52 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v49 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_22F98EBC0();
  v5 = *(void (**)(_QWORD, _QWORD))(v48 - 8);
  v6 = MEMORY[0x24BDAC7A8](v48);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v47 = (char *)&v45 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB00 != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v10, (uint64_t)qword_255E295B0);
  sub_22F87ABDC(v13, (uint64_t)v12, (uint64_t *)&unk_255E206E0);
  v14 = sub_22F98DAA4();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14) == 1)
  {
    sub_22F87AC20((uint64_t)v12, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858(v1, 0x4365747563657865, 0xEF29286C65636E61, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
  }
  v16 = swift_allocObject();
  *(_BYTE *)(v16 + 16) = 0;
  v17 = swift_allocObject();
  *(_BYTE *)(v17 + 16) = 0;
  swift_getKeyPath();
  swift_getKeyPath();
  LOBYTE(aBlock[0]) = 0;
  swift_retain();
  sub_22F98DBAC();
  sub_22F865E54();
  v18 = v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_pinController;
  sub_22F87A750(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_pinController, (uint64_t)aBlock);
  v20 = v56;
  v19 = v57;
  __swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v56);
  (*((void (**)(void *, id (*)()))v19 + 7))(v20, v19);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)aBlock);
  sub_22F87A750(v18, (uint64_t)aBlock);
  v21 = v56;
  v22 = v57;
  __swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v56);
  LOBYTE(v21) = (*((uint64_t (**)(void *, id (*)()))v22 + 1))(v21, v22);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)aBlock);
  if ((v21 & 1) != 0)
  {
    sub_22F864270(5);
    *(_BYTE *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_pinCaptureState) = 5;
  }
  v23 = *(void **)(v1 + 16);
  if (v23)
  {
    v24 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_pinCardRequest);
    swift_getKeyPath();
    swift_getKeyPath();
    swift_unknownObjectRetain();
    sub_22F98DBA0();
    swift_release();
    swift_release();
    if ((unint64_t)(*(_QWORD *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_accessibilityEntryType)
                          - 1) >= 3)
      v25 = 0;
    else
      v25 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_accessibilityEntryType);
    objc_msgSend(v23, sel_reportPINErrorWithError_isCardRequest_isAccessibilityEnabled_accessibilityEntryType_drawNumberFailures_, 29, v24, LOBYTE(aBlock[0]), v25, *(_QWORD *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_drawNumberFailures));
    swift_unknownObjectRelease();
  }
  if (*(_QWORD *)(v1 + 104))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E1ED38);
    v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_22F991B50;
    type metadata accessor for AudioFactory();
    v46 = v5;
    v27 = *(_BYTE *)(v1 + 187);
    v28 = v8;
    v29 = v17;
    v30 = v16;
    v31 = *(_BYTE *)(v1 + 186);
    swift_retain();
    v32 = v31;
    v16 = v30;
    v17 = v29;
    v8 = v28;
    sub_22F8D7854(2, v32, v27, (_OWORD *)(v26 + 32));
    sub_22F8D7394(2, *(_BYTE *)(v1 + 186), v26 + 80);
    v33 = swift_allocObject();
    swift_weakInit();
    v34 = (_QWORD *)swift_allocObject();
    v34[2] = v17;
    v34[3] = v16;
    v34[4] = v33;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_22F975EF4(v26, 2, (void (*)(uint64_t))sub_22F879004, (uint64_t)v34);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    v5 = v46;
    swift_release();
  }
  v45 = v16;
  swift_getKeyPath();
  swift_getKeyPath();
  LOBYTE(aBlock[0]) = 1;
  swift_retain();
  sub_22F98DBAC();
  sub_22F879058();
  v35 = (void *)sub_22F98F0F4();
  sub_22F98EBB4();
  v36 = v47;
  MEMORY[0x2348A57D0](v8, 2.0);
  v46 = (void (*)(_QWORD, _QWORD))*((_QWORD *)v5 + 1);
  v37 = v8;
  v38 = v48;
  v46(v37, v48);
  v39 = (_QWORD *)swift_allocObject();
  v39[2] = v16;
  v39[3] = v17;
  v39[4] = v1;
  v57 = sub_22F8790CC;
  v58 = v39;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22F8644F0;
  v56 = &block_descriptor;
  v40 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  v41 = v49;
  sub_22F98EB90();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_22F862548((unint64_t *)&qword_255E22DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E22070);
  sub_22F87AA84((unint64_t *)&qword_255E22DB0, (uint64_t *)&unk_255E22070, MEMORY[0x24BEE12C8]);
  v42 = v53;
  v43 = v50;
  sub_22F98F274();
  MEMORY[0x2348A5CA4](v36, v41, v42, v40);
  _Block_release(v40);

  (*(void (**)(char *, uint64_t))(v54 + 8))(v42, v43);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v41, v52);
  v46(v36, v38);
  swift_release();
  return swift_release();
}

id sub_22F869030()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  unsigned int v20;
  id result;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 v34;
  void *v35;
  char *v36;
  _QWORD v37[2];
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43[3];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v1 = v0;
  v2 = sub_22F98D5A0();
  v42 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v41 = (char *)v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)v37 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)v37 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v37 - v14;
  if (qword_255E1DB00 != -1)
    swift_once();
  v16 = __swift_project_value_buffer(v4, (uint64_t)qword_255E295B0);
  sub_22F87ABDC(v16, (uint64_t)v15, (uint64_t *)&unk_255E206E0);
  v17 = sub_22F98DAA4();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  if (v19(v15, 1, v17) == 1)
  {
    sub_22F87AC20((uint64_t)v15, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858(v1, 0xD000000000000013, 0x800000022F99D770, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v15, v17);
  }
  if (sub_22F86C050())
  {
    v40 = v7;
    sub_22F864270(2);
    *(_BYTE *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_pinCaptureState) = 2;
    sub_22F865E54();
    sub_22F87ABDC(v16, (uint64_t)v13, (uint64_t *)&unk_255E206E0);
    v20 = v19(v13, 1, v17);
    v39 = v2;
    if (v20 == 1)
    {
      sub_22F87AC20((uint64_t)v13, (uint64_t *)&unk_255E206E0);
    }
    else
    {
      v38 = v18;
      v22 = sub_22F98DA8C();
      v23 = sub_22F98F07C();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = (uint8_t *)swift_slowAlloc();
        v25 = swift_slowAlloc();
        v43[0] = v25;
        *(_DWORD *)v24 = 136315138;
        v37[1] = v24 + 4;
        v46 = sub_22F878880(0xD000000000000013, 0x800000022F99D770, v43);
        sub_22F98F208();
        _os_log_impl(&dword_22F85B000, v22, v23, "%s - accepted", v24, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2348A6838](v25, -1, -1);
        MEMORY[0x2348A6838](v24, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v38 + 8))(v13, v17);
    }
    sub_22F87A750(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_pinController, (uint64_t)v43);
    v26 = v44;
    v27 = v45;
    __swift_project_boxed_opaque_existential_1(v43, v44);
    v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 48))(v26, v27);
    v35 = *(void **)(v1 + 96);
    *(_QWORD *)(v1 + 96) = v28;

    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v43);
    v36 = v41;
    sub_22F98D4F8();
    sub_22F98D588();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v36, v39);
    result = *(id *)(v1 + 16);
    if (result)
      return objc_msgSend(result, sel_pinValidateSession);
    return result;
  }
  sub_22F87ABDC(v16, (uint64_t)v10, (uint64_t *)&unk_255E206E0);
  if (v19(v10, 1, v17) == 1)
  {
    result = (id)sub_22F87AC20((uint64_t)v10, (uint64_t *)&unk_255E206E0);
    if (!*(_QWORD *)(v1 + 104))
      return result;
LABEL_19:
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E1ED38);
    v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_22F991B50;
    type metadata accessor for AudioFactory();
    v34 = *(_BYTE *)(v1 + 186);
    swift_retain();
    sub_22F8D75F8(3, v34, v33 + 32);
    sub_22F8D7854(5, *(_BYTE *)(v1 + 186), *(_BYTE *)(v1 + 187), (_OWORD *)(v33 + 80));
    sub_22F975EF4(v33, 2, 0, 0);
    swift_release();
    return (id)swift_bridgeObjectRelease();
  }
  v29 = sub_22F98DA8C();
  v30 = sub_22F98F07C();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc();
    v32 = swift_slowAlloc();
    v43[0] = v32;
    *(_DWORD *)v31 = 136315138;
    v46 = sub_22F878880(0xD000000000000013, 0x800000022F99D770, v43);
    sub_22F98F208();
    _os_log_impl(&dword_22F85B000, v29, v30, "%s - not enough digits", v31, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348A6838](v32, -1, -1);
    MEMORY[0x2348A6838](v31, -1, -1);
  }

  result = (id)(*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v10, v17);
  if (*(_QWORD *)(v1 + 104))
    goto LABEL_19;
  return result;
}

uint64_t sub_22F869864()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 v26;
  uint64_t v27;
  uint64_t v29[3];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v29 - v5;
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v29 - v7;
  if (qword_255E1DB00 != -1)
    swift_once();
  v9 = __swift_project_value_buffer(v2, (uint64_t)qword_255E295B0);
  sub_22F87ABDC(v9, (uint64_t)v8, (uint64_t *)&unk_255E206E0);
  v10 = sub_22F98DAA4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v8, 1, v10) == 1)
  {
    sub_22F87AC20((uint64_t)v8, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858(v1, 0xD000000000000014, 0x800000022F99D810, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  if (v29[0] < 1)
  {
    sub_22F87ABDC(v9, (uint64_t)v6, (uint64_t *)&unk_255E206E0);
    if (v12(v6, 1, v10) == 1)
    {
      sub_22F87AC20((uint64_t)v6, (uint64_t *)&unk_255E206E0);
    }
    else
    {
      v21 = sub_22F98DA8C();
      v22 = sub_22F98F07C();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = (uint8_t *)swift_slowAlloc();
        v24 = swift_slowAlloc();
        v29[0] = v24;
        *(_DWORD *)v23 = 136315138;
        v32 = sub_22F878880(0xD000000000000014, 0x800000022F99D810, v29);
        sub_22F98F208();
        _os_log_impl(&dword_22F85B000, v21, v22, "%s - no digit to erase", v23, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2348A6838](v24, -1, -1);
        MEMORY[0x2348A6838](v23, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v11 + 8))(v6, v10);
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_22F98DBA0();
    swift_release();
    result = swift_release();
    if (LOBYTE(v29[0]) == 1)
    {
      if (*(_QWORD *)(v1 + 32))
      {
        return sub_22F86BA9C();
      }
      else if (*(_QWORD *)(v1 + 104))
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_255E1ED38);
        v25 = swift_allocObject();
        *(_OWORD *)(v25 + 16) = xmmword_22F991B50;
        type metadata accessor for AudioFactory();
        v26 = *(_BYTE *)(v1 + 186);
        swift_retain();
        sub_22F8D75F8(1, v26, v25 + 32);
        sub_22F8D7854(5, *(_BYTE *)(v1 + 186), *(_BYTE *)(v1 + 187), (_OWORD *)(v25 + 80));
        v27 = swift_allocObject();
        swift_weakInit();
        swift_retain();
        sub_22F975EF4(v25, 2, (void (*)(uint64_t))sub_22F87A4DC, v27);
        swift_release();
        swift_bridgeObjectRelease();
        return swift_release_n();
      }
    }
  }
  else
  {
    sub_22F87A750(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_pinController, (uint64_t)v29);
    v13 = v30;
    v14 = v31;
    __swift_project_boxed_opaque_existential_1(v29, v30);
    (*(void (**)(uint64_t, uint64_t))(v14 + 32))(v13, v14);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v29);
    sub_22F98EAE8();
    sub_22F98DE10();
    swift_release();
    if (*(_QWORD *)(v1 + 104))
    {
      type metadata accessor for AudioFactory();
      v15 = *(_BYTE *)(v1 + 186);
      swift_retain();
      sub_22F8D75F8(10, v15, (uint64_t)v29);
      __swift_instantiateConcreteTypeFromMangledName(&qword_255E1ED38);
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_22F991B40;
      sub_22F87ABDC((uint64_t)v29, v16 + 32, &qword_255E1ED48);
      sub_22F975EF4(v16, 2, 0, 0);
      swift_release();
      swift_bridgeObjectRelease();
      sub_22F87AC20((uint64_t)v29, &qword_255E1ED48);
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_22F98DBA0();
    swift_release();
    result = swift_release();
    if (LOBYTE(v29[0]) == 1)
    {
      swift_retain();
      swift_retain();
      sub_22F89160C((uint64_t)sub_22F87A514, v1);
      swift_release();
      result = swift_release();
      v18 = *(_QWORD *)(v1 + 32);
      v19 = __OFADD__(v18, 1);
      v20 = v18 + 1;
      if (v19)
      {
        __break(1u);
      }
      else
      {
        *(_QWORD *)(v1 + 32) = v20;
        return sub_22F86BD38();
      }
    }
  }
  return result;
}

uint64_t sub_22F86A0C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint8_t *v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 *v39;
  uint64_t v40;
  unsigned int v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  unsigned __int8 v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  unsigned __int8 *v51;
  unsigned int v52;
  uint64_t v53;
  unsigned __int8 *v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned __int8 v59;
  unsigned __int8 *v60;
  unsigned int v61;
  NSObject *v62;
  os_log_type_t v63;
  uint8_t *v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(char *, uint64_t, uint64_t);
  _QWORD v69[3];
  uint64_t v70;
  uint64_t v71;

  v2 = v1;
  v4 = sub_22F98EE00();
  MEMORY[0x24BDAC7A8](v4);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v65 - v8;
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v65 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v65 - v13;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  if (v69[0] > 11)
  {
    if (qword_255E1DB00 != -1)
      swift_once();
    v18 = __swift_project_value_buffer(v5, (uint64_t)qword_255E295B0);
    sub_22F87ABDC(v18, (uint64_t)v9, (uint64_t *)&unk_255E206E0);
    v19 = sub_22F98DAA4();
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v9, 1, v19) == 1)
    {
      result = sub_22F87AC20((uint64_t)v9, (uint64_t *)&unk_255E206E0);
      if (!*(_QWORD *)(v2 + 104))
        return result;
    }
    else
    {
      v42 = sub_22F98DA8C();
      v43 = sub_22F98F07C();
      if (os_log_type_enabled(v42, v43))
      {
        v44 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v44 = 0;
        _os_log_impl(&dword_22F85B000, v42, v43, "PINViewModel: digitPressed - maxDigitReached", v44, 2u);
        MEMORY[0x2348A6838](v44, -1, -1);
      }

      result = (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v9, v19);
      if (!*(_QWORD *)(v2 + 104))
        return result;
    }
    type metadata accessor for AudioFactory();
    v45 = *(_BYTE *)(v2 + 186);
    swift_retain();
    sub_22F8D75F8(5, v45, (uint64_t)v69);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E1ED38);
    v46 = swift_allocObject();
    v47 = v46;
    v48 = xmmword_22F991B40;
LABEL_29:
    *(_OWORD *)(v46 + 16) = v48;
    sub_22F87ABDC((uint64_t)v69, v46 + 32, &qword_255E1ED48);
    sub_22F975EF4(v47, 2, 0, 0);
    swift_release();
    swift_bridgeObjectRelease();
    return sub_22F87AC20((uint64_t)v69, &qword_255E1ED48);
  }
  if (qword_255E1DB00 != -1)
    swift_once();
  v67 = __swift_project_value_buffer(v5, (uint64_t)qword_255E295B0);
  sub_22F87ABDC(v67, (uint64_t)v14, (uint64_t *)&unk_255E206E0);
  v15 = sub_22F98DAA4();
  v16 = *(_QWORD *)(v15 - 8);
  v68 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v17 = v68(v14, 1, v15);
  v66 = v16;
  if (v17 == 1)
  {
    sub_22F87AC20((uint64_t)v14, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    v22 = sub_22F98DA8C();
    v23 = sub_22F98F07C();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_QWORD *)&v65 = a1;
      v25 = v16;
      v26 = v24;
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_22F85B000, v22, v23, "PINViewModel: digitPressed", v24, 2u);
      v27 = v26;
      v16 = v25;
      a1 = v65;
      MEMORY[0x2348A6838](v27, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v16 + 8))(v14, v15);
  }
  sub_22F98EAE8();
  sub_22F98DE10();
  swift_release();
  v28 = *(_QWORD *)(v2 + 64);
  v29 = *(_QWORD *)(v2 + 72);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + 40), v28);
  v30 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 24))(a1, v28, v29);
  if (!*(_QWORD *)(v30 + 16))
    goto LABEL_30;
  v31 = *(_BYTE *)(v30 + 32);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1ED50);
  v32 = swift_allocObject();
  v65 = xmmword_22F991B40;
  *(_OWORD *)(v32 + 16) = xmmword_22F991B40;
  *(_BYTE *)(v32 + 32) = v31;
  v69[0] = v32;
  sub_22F98EDF4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1ED58);
  sub_22F87AA84((unint64_t *)&qword_255E1ED60, &qword_255E1ED58, MEMORY[0x24BEE12C8]);
  v33 = sub_22F98EDC4();
  v35 = v34;
  swift_bridgeObjectRelease();
  if (!v35)
    goto LABEL_69;
  v36 = HIBYTE(v35) & 0xF;
  v37 = v33 & 0xFFFFFFFFFFFFLL;
  if (!((v35 & 0x2000000000000000) != 0 ? HIBYTE(v35) & 0xF : v33 & 0xFFFFFFFFFFFFLL))
  {
LABEL_30:
    swift_bridgeObjectRelease();
    goto LABEL_69;
  }
  if ((v35 & 0x1000000000000000) == 0)
  {
    if ((v35 & 0x2000000000000000) == 0)
    {
      if ((v33 & 0x1000000000000000) != 0)
        v39 = (unsigned __int8 *)((v35 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v39 = (unsigned __int8 *)sub_22F98F340();
      v40 = (uint64_t)sub_22F8791D0(v39, v37, 10);
      v41 = (v40 >> 8) & 1;
LABEL_59:
      swift_bridgeObjectRelease();
      if (!v41)
        goto LABEL_60;
LABEL_69:
      sub_22F87ABDC(v67, (uint64_t)v12, (uint64_t *)&unk_255E206E0);
      if (v68(v12, 1, v15) == 1)
      {
        sub_22F87AC20((uint64_t)v12, (uint64_t *)&unk_255E206E0);
      }
      else
      {
        v62 = sub_22F98DA8C();
        v63 = sub_22F98F088();
        if (os_log_type_enabled(v62, v63))
        {
          v64 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v64 = 0;
          _os_log_impl(&dword_22F85B000, v62, v63, "digitPressed - failed to retrieve digit", v64, 2u);
          MEMORY[0x2348A6838](v64, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v66 + 8))(v12, v15);
      }
      swift_getKeyPath();
      swift_getKeyPath();
      sub_22F98DBA0();
      swift_release();
      swift_release();
      return sub_22F879ED0(0);
    }
    v69[0] = v33;
    v69[1] = v35 & 0xFFFFFFFFFFFFFFLL;
    v49 = v33;
    if (v33 == 43)
    {
      if (v36)
      {
        if (v36 != 1)
        {
          v40 = (v33 >> 8) - 48;
          if (v40 <= 9u)
          {
            v53 = v36 - 2;
            if (v53)
            {
              v54 = (unsigned __int8 *)v69 + 2;
              while (1)
              {
                v55 = *v54 - 48;
                if (v55 > 9)
                  goto LABEL_56;
                if (((10 * v40) & 0xF00) != 0)
                  goto LABEL_56;
                v40 = (10 * v40) + v55;
                if (((v40 >> 8) & 1) != 0)
                  goto LABEL_56;
                v41 = 0;
                ++v54;
                if (!--v53)
                  goto LABEL_59;
              }
            }
            goto LABEL_58;
          }
        }
        goto LABEL_56;
      }
    }
    else
    {
      if (v33 != 45)
      {
        if (v36)
        {
          v40 = (v33 - 48);
          if (v40 <= 9u)
          {
            v56 = v36 - 1;
            if (v56)
            {
              v60 = (unsigned __int8 *)v69 + 1;
              while (1)
              {
                v61 = *v60 - 48;
                if (v61 > 9)
                  goto LABEL_56;
                if (((10 * v40) & 0xF00) != 0)
                  goto LABEL_56;
                v40 = (10 * v40) + v61;
                if (((v40 >> 8) & 1) != 0)
                  goto LABEL_56;
                v41 = 0;
                ++v60;
                if (!--v56)
                  goto LABEL_59;
              }
            }
            goto LABEL_58;
          }
        }
        goto LABEL_56;
      }
      if (v36)
      {
        if (v36 != 1 && (BYTE1(v33) - 48) <= 9u)
        {
          v49 = 0;
          v40 = -(BYTE1(v33) - 48);
          if ((v40 & 0xFFFFFF00) == 0)
          {
            v50 = v36 - 2;
            if (v50)
            {
              v51 = (unsigned __int8 *)v69 + 2;
              while (1)
              {
                v52 = *v51 - 48;
                if (v52 > 9)
                  goto LABEL_56;
                if (((10 * v40) & 0xF00) != 0)
                  goto LABEL_56;
                v40 = (10 * v40) - v52;
                if ((v40 & 0xFFFFFF00) != 0)
                  goto LABEL_56;
                v41 = 0;
                ++v51;
                if (!--v50)
                  goto LABEL_59;
              }
            }
LABEL_58:
            v41 = 0;
            goto LABEL_59;
          }
LABEL_79:
          v41 = 1;
          v40 = v49;
          goto LABEL_59;
        }
LABEL_56:
        v40 = 0;
        v41 = 1;
        goto LABEL_59;
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_79;
  }
  v40 = sub_22F8790F0(v33, v35, 10);
  swift_bridgeObjectRelease();
  if ((v40 & 0x100) != 0)
    goto LABEL_69;
LABEL_60:
  sub_22F87A750(v2 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_pinController, (uint64_t)v69);
  v57 = v70;
  v58 = v71;
  __swift_project_boxed_opaque_existential_1(v69, v70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 24))(v40, v57, v58);
  result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v69);
  if (*(_QWORD *)(v2 + 104))
  {
    type metadata accessor for AudioFactory();
    v59 = *(_BYTE *)(v2 + 186);
    swift_retain();
    sub_22F8D75F8(9, v59, (uint64_t)v69);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E1ED38);
    v46 = swift_allocObject();
    v47 = v46;
    v48 = v65;
    goto LABEL_29;
  }
  return result;
}

void sub_22F86AC60(unint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  unsigned __int8 *v26;
  uint64_t v27;
  unsigned int v28;
  _QWORD *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint8_t *v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  unsigned __int8 v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  unsigned __int8 *v50;
  unsigned int v51;
  uint64_t v52;
  unsigned __int8 *v53;
  unsigned int v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  int v58;
  _QWORD *v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  uint64_t v63;
  uint8_t *v64;
  uint8_t *v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(uint64_t *, _QWORD);
  uint64_t *v69;
  id v70;
  id v71;
  NSObject *v72;
  os_log_type_t v73;
  uint64_t v74;
  uint8_t *v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint8_t *v79;
  unsigned __int8 *v80;
  unsigned int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  NSObject *v85;
  os_log_type_t v86;
  uint8_t *v87;
  uint64_t v88;
  void *v89;
  uint8_t *v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93[3];
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;

  v2 = v1;
  KeyPath = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v5 = MEMORY[0x24BDAC7A8](KeyPath);
  v7 = (char *)&v89 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v89 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v89 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v89 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v89 - v17;
  v19 = OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_pinCaptureState;
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_pinCaptureState) == 1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_22F98DBA0();
    swift_release();
    swift_release();
    if (v93[0] > 11)
    {
      swift_bridgeObjectRelease();
      if (qword_255E1DB00 != -1)
        swift_once();
      v35 = __swift_project_value_buffer(KeyPath, (uint64_t)qword_255E295B0);
      sub_22F87ABDC(v35, (uint64_t)v13, (uint64_t *)&unk_255E206E0);
      v36 = sub_22F98DAA4();
      v37 = *(_QWORD *)(v36 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v13, 1, v36) == 1)
      {
        sub_22F87AC20((uint64_t)v13, (uint64_t *)&unk_255E206E0);
        if (!*(_QWORD *)(v2 + 104))
          goto LABEL_97;
      }
      else
      {
        v43 = sub_22F98DA8C();
        v44 = sub_22F98F07C();
        if (os_log_type_enabled(v43, v44))
        {
          v45 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v45 = 0;
          _os_log_impl(&dword_22F85B000, v43, v44, "PINViewModel: digitPressed - maxDigitReached", v45, 2u);
          MEMORY[0x2348A6838](v45, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v37 + 8))(v13, v36);
        if (!*(_QWORD *)(v2 + 104))
          goto LABEL_97;
      }
      type metadata accessor for AudioFactory();
      v46 = *(_BYTE *)(v2 + 186);
      swift_retain();
      v47 = 5;
LABEL_96:
      sub_22F8D75F8(v47, v46, (uint64_t)v93);
      __swift_instantiateConcreteTypeFromMangledName(&qword_255E1ED38);
      v88 = swift_allocObject();
      *(_OWORD *)(v88 + 16) = xmmword_22F991B40;
      sub_22F87ABDC((uint64_t)v93, v88 + 32, &qword_255E1ED48);
      sub_22F975EF4(v88, 2, 0, 0);
      swift_release();
      swift_bridgeObjectRelease();
      sub_22F87AC20((uint64_t)v93, &qword_255E1ED48);
LABEL_97:
      *a1 = 42;
      a1[1] = 0xE100000000000000;
      return;
    }
    v20 = *a1;
    v21 = a1[1];
    v22 = HIBYTE(v21) & 0xF;
    v23 = *a1 & 0xFFFFFFFFFFFFLL;
    if ((v21 & 0x2000000000000000) != 0)
      v24 = HIBYTE(v21) & 0xF;
    else
      v24 = *a1 & 0xFFFFFFFFFFFFLL;
    if (v24)
    {
      v25 = 0;
      if ((v21 & 0x1000000000000000) == 0)
      {
        if ((v21 & 0x2000000000000000) == 0)
        {
          if ((v20 & 0x1000000000000000) != 0)
            v26 = (unsigned __int8 *)((v21 & 0xFFFFFFFFFFFFFFFLL) + 32);
          else
            v26 = (unsigned __int8 *)sub_22F98F340();
          v27 = (uint64_t)sub_22F8791D0(v26, v23, 10);
          v28 = (v27 >> 8) & 1;
LABEL_60:
          while (1)
          {
            swift_bridgeObjectRelease();
            if (v28)
              goto LABEL_87;
LABEL_61:
            *a1 = 42;
            a1[1] = 0xE100000000000000;
            if (qword_255E1DB00 != -1)
              swift_once();
            v16 = (char *)__swift_project_value_buffer(KeyPath, (uint64_t)qword_255E295B0);
            sub_22F87ABDC((uint64_t)v16, (uint64_t)v18, (uint64_t *)&unk_255E206E0);
            v56 = (_QWORD *)sub_22F98DAA4();
            v57 = *(v56 - 1);
            v92 = *(_QWORD **)(v57 + 48);
            v58 = ((uint64_t (*)(char *, uint64_t, _QWORD *))v92)(v18, 1, v56);
            v91 = v57;
            if (v58 == 1)
            {
              sub_22F87AC20((uint64_t)v18, (uint64_t *)&unk_255E206E0);
            }
            else
            {
              v90 = (uint8_t *)v16;
              v59 = v56;
              v60 = sub_22F98DA8C();
              v61 = sub_22F98F07C();
              if (os_log_type_enabled(v60, v61))
              {
                v62 = (uint8_t *)swift_slowAlloc();
                v89 = v25;
                v63 = v57;
                v64 = v62;
                *(_WORD *)v62 = 0;
                _os_log_impl(&dword_22F85B000, v60, v61, "PINViewModel: digitPressed", v62, 2u);
                v65 = v64;
                v57 = v63;
                v25 = v89;
                MEMORY[0x2348A6838](v65, -1, -1);
              }

              v56 = v59;
              (*(void (**)(char *, _QWORD *))(v57 + 8))(v18, v59);
              v16 = (char *)v90;
            }
            sub_22F98EAE8();
            sub_22F98DE10();
            swift_release();
            swift_bridgeObjectRelease();
            sub_22F87A750(v2 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_pinController, (uint64_t)v93);
            v66 = v94;
            v67 = v95;
            __swift_project_boxed_opaque_existential_1(v93, v94);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 24))(v27, v66, v67);
            if (!v25)
            {
              __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v93);
              if (!*(_QWORD *)(v2 + 104))
                goto LABEL_97;
              type metadata accessor for AudioFactory();
              v46 = *(_BYTE *)(v2 + 186);
              swift_retain();
              v47 = 9;
              goto LABEL_96;
            }
            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v93);
            KeyPath = swift_getKeyPath();
            v18 = (char *)swift_getKeyPath();
            v68 = (void (*)(uint64_t *, _QWORD))sub_22F98DB94();
            v48 = *v69 - 1;
            if (!__OFSUB__(*v69, 1))
            {
              *v69 = v48;
              v68(v93, 0);
              swift_release();
              swift_release();
              sub_22F87ABDC((uint64_t)v16, (uint64_t)v7, (uint64_t *)&unk_255E206E0);
              if (((unsigned int (*)(char *, uint64_t, _QWORD *))v92)(v7, 1, v56) == 1)
              {
                sub_22F87AC20((uint64_t)v7, (uint64_t *)&unk_255E206E0);
              }
              else
              {
                v70 = v25;
                v71 = v25;
                v72 = sub_22F98DA8C();
                v73 = sub_22F98F088();
                if (os_log_type_enabled(v72, v73))
                {
                  v74 = swift_slowAlloc();
                  v92 = v56;
                  v75 = (uint8_t *)v74;
                  v76 = swift_slowAlloc();
                  v93[0] = v76;
                  *(_DWORD *)v75 = 136315138;
                  v90 = v75 + 4;
                  swift_getErrorValue();
                  v77 = sub_22F98F49C();
                  v96 = sub_22F878880(v77, v78, v93);
                  sub_22F98F208();
                  swift_bridgeObjectRelease();

                  _os_log_impl(&dword_22F85B000, v72, v73, "digitPressed - SPR error: %s", v75, 0xCu);
                  swift_arrayDestroy();
                  MEMORY[0x2348A6838](v76, -1, -1);
                  v79 = v75;
                  v56 = v92;
                  MEMORY[0x2348A6838](v79, -1, -1);

                }
                else
                {

                }
                (*(void (**)(char *, _QWORD *))(v91 + 8))(v7, v56);
              }
              swift_getKeyPath();
              swift_getKeyPath();
              sub_22F98DBA0();
              swift_release();
              swift_release();
              sub_22F879ED0(0);

              goto LABEL_97;
            }
            __break(1u);
LABEL_101:
            __break(1u);
LABEL_102:
            __break(1u);
LABEL_103:
            v28 = 1;
            v27 = v48;
          }
        }
        v93[0] = *a1;
        v93[1] = v21 & 0xFFFFFFFFFFFFFFLL;
        v48 = v20;
        if (v20 == 43)
        {
          if (!v22)
            goto LABEL_102;
          if (v22 == 1)
            goto LABEL_57;
          v27 = (v20 >> 8) - 48;
          if ((BYTE1(v20) - 48) > 9u)
            goto LABEL_57;
          v52 = v22 - 2;
          if (!v52)
            goto LABEL_59;
          v53 = (unsigned __int8 *)v93 + 2;
          while (1)
          {
            v54 = *v53 - 48;
            if (v54 > 9)
              break;
            if (((10 * v27) & 0xF00) != 0)
              break;
            v27 = (10 * v27) + v54;
            if (((v27 >> 8) & 1) != 0)
              break;
            v28 = 0;
            ++v53;
            if (!--v52)
              goto LABEL_60;
          }
        }
        else
        {
          if (v20 == 45)
          {
            if (!v22)
              goto LABEL_101;
            if (v22 == 1 || (BYTE1(v20) - 48) > 9u)
              goto LABEL_57;
            v48 = 0;
            v27 = -(BYTE1(v20) - 48);
            if ((v27 & 0xFFFFFF00) != 0)
              goto LABEL_103;
            v49 = v22 - 2;
            if (v49)
            {
              v50 = (unsigned __int8 *)v93 + 2;
              while (1)
              {
                v51 = *v50 - 48;
                if (v51 > 9)
                  goto LABEL_57;
                if (((10 * v27) & 0xF00) != 0)
                  goto LABEL_57;
                v27 = (10 * v27) - v51;
                if ((v27 & 0xFFFFFF00) != 0)
                  goto LABEL_57;
                v28 = 0;
                ++v50;
                if (!--v49)
                  goto LABEL_60;
              }
            }
LABEL_59:
            v28 = 0;
            goto LABEL_60;
          }
          if (!v22)
            goto LABEL_57;
          v27 = (v20 - 48);
          if ((v20 - 48) > 9u)
            goto LABEL_57;
          v55 = v22 - 1;
          if (!v55)
            goto LABEL_59;
          v80 = (unsigned __int8 *)v93 + 1;
          while (1)
          {
            v81 = *v80 - 48;
            if (v81 > 9)
              break;
            if (((10 * v27) & 0xF00) != 0)
              break;
            v27 = (10 * v27) + v81;
            if (((v27 >> 8) & 1) != 0)
              break;
            v28 = 0;
            ++v80;
            if (!--v55)
              goto LABEL_60;
          }
        }
LABEL_57:
        v27 = 0;
        v28 = 1;
        goto LABEL_60;
      }
      v27 = sub_22F8790F0(v20, a1[1], 10);
      swift_bridgeObjectRelease();
      if ((v27 & 0x100) == 0)
        goto LABEL_61;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
LABEL_87:
    if (qword_255E1DB00 != -1)
      swift_once();
    v82 = __swift_project_value_buffer(KeyPath, (uint64_t)qword_255E295B0);
    sub_22F87ABDC(v82, (uint64_t)v16, (uint64_t *)&unk_255E206E0);
    v83 = sub_22F98DAA4();
    v84 = *(_QWORD *)(v83 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48))(v16, 1, v83) == 1)
    {
      sub_22F87AC20((uint64_t)v16, (uint64_t *)&unk_255E206E0);
      if (!*(_QWORD *)(v2 + 104))
        goto LABEL_97;
    }
    else
    {
      v85 = sub_22F98DA8C();
      v86 = sub_22F98F07C();
      if (os_log_type_enabled(v85, v86))
      {
        v87 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v87 = 0;
        _os_log_impl(&dword_22F85B000, v85, v86, "PINViewModel: digitPressed - non-numeric digit", v87, 2u);
        MEMORY[0x2348A6838](v87, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v84 + 8))(v16, v83);
      if (!*(_QWORD *)(v2 + 104))
        goto LABEL_97;
    }
    type metadata accessor for AudioFactory();
    v46 = *(_BYTE *)(v2 + 186);
    swift_retain();
    v47 = 2;
    goto LABEL_96;
  }
  if (qword_255E1DB38 != -1)
    swift_once();
  if (byte_255E29658 == 1)
  {
    LOBYTE(v93[0]) = *(_BYTE *)(v2 + v19);
    v29 = (_QWORD *)sub_22F98EE18();
    v31 = v30;
    if (qword_255E1DB00 != -1)
      swift_once();
    v32 = __swift_project_value_buffer(KeyPath, (uint64_t)qword_255E295B0);
    sub_22F87ABDC(v32, (uint64_t)v10, (uint64_t *)&unk_255E206E0);
    v33 = sub_22F98DAA4();
    v34 = *(_QWORD *)(v33 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v10, 1, v33) == 1)
    {
      swift_bridgeObjectRelease();
      sub_22F87AC20((uint64_t)v10, (uint64_t *)&unk_255E206E0);
    }
    else
    {
      swift_bridgeObjectRetain();
      v38 = sub_22F98DA8C();
      v39 = sub_22F98F088();
      if (os_log_type_enabled(v38, v39))
      {
        v40 = swift_slowAlloc();
        v92 = v29;
        v41 = (uint8_t *)v40;
        v42 = swift_slowAlloc();
        v93[0] = v42;
        *(_DWORD *)v41 = 136315138;
        swift_bridgeObjectRetain();
        v96 = sub_22F878880((uint64_t)v92, v31, v93);
        sub_22F98F208();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_22F85B000, v38, v39, "PINViewModel: AX digit cannot be added in state [%s]", v41, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2348A6838](v42, -1, -1);
        MEMORY[0x2348A6838](v41, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      (*(void (**)(char *, uint64_t))(v34 + 8))(v10, v33);
    }
  }
}

void (*sub_22F86B964())(uint64_t *, _QWORD)
{
  void (*result)(uint64_t *, _QWORD);
  _QWORD *v1;
  uint64_t v2;

  swift_getKeyPath();
  swift_getKeyPath();
  result = (void (*)(uint64_t *, _QWORD))sub_22F98DB94();
  if (__OFADD__(*v1, 1))
  {
    __break(1u);
  }
  else
  {
    ++*v1;
    result(&v2, 0);
    swift_release();
    return (void (*)(uint64_t *, _QWORD))swift_release();
  }
  return result;
}

void (*sub_22F86BA00())(uint64_t *, _QWORD)
{
  void (*result)(uint64_t *, _QWORD);
  _QWORD *v1;
  uint64_t v2;

  swift_getKeyPath();
  swift_getKeyPath();
  result = (void (*)(uint64_t *, _QWORD))sub_22F98DB94();
  if (__OFSUB__(*v1, 1))
  {
    __break(1u);
  }
  else
  {
    --*v1;
    result(&v2, 0);
    swift_release();
    return (void (*)(uint64_t *, _QWORD))swift_release();
  }
  return result;
}

uint64_t sub_22F86BA9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _OWORD v13[3];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB00 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_255E295B0);
  sub_22F87ABDC(v5, (uint64_t)v4, (uint64_t *)&unk_255E206E0);
  v6 = sub_22F98DAA4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_22F87AC20((uint64_t)v4, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858(v1, 0xD000000000000022, 0x800000022F99D880, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_removeDigitTimer);
  v9 = *(void **)(v8 + 48);
  swift_retain();
  objc_msgSend(v9, sel_invalidate);
  *(_BYTE *)(v8 + 24) = 0;
  result = swift_release();
  if (*(_QWORD *)(v1 + 104))
  {
    type metadata accessor for AudioFactory();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_22F98DBA0();
    swift_release();
    swift_release();
    sub_22F8D7854(1, *(_BYTE *)(v1 + 186), *(_BYTE *)(v1 + 187), v13);
    v11 = swift_allocObject();
    swift_weakInit();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E1ED38);
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_22F991B40;
    sub_22F87ABDC((uint64_t)v13, v12 + 32, &qword_255E1ED48);
    swift_retain();
    sub_22F975EF4(v12, 2, (void (*)(uint64_t))sub_22F87A4DC, v11);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_22F87AC20((uint64_t)v13, &qword_255E1ED48);
    result = swift_release();
  }
  *(_QWORD *)(v1 + 32) = 0;
  return result;
}

uint64_t sub_22F86BD38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v16 - v6;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  result = swift_release();
  if (v17 == 1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_22F98DBA0();
    swift_release();
    result = swift_release();
    if (v16 >= 4 && (*(_BYTE *)(v1 + 185) & 1) == 0)
    {
      if (qword_255E1DB00 != -1)
        swift_once();
      v9 = __swift_project_value_buffer(v2, (uint64_t)qword_255E295B0);
      sub_22F87ABDC(v9, (uint64_t)v7, (uint64_t *)&unk_255E206E0);
      v10 = sub_22F98DAA4();
      v11 = *(_QWORD *)(v10 - 8);
      v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
      if (v12(v7, 1, v10) == 1)
      {
        sub_22F87AC20((uint64_t)v7, (uint64_t *)&unk_255E206E0);
      }
      else
      {
        sub_22F863858(v1, 0xD000000000000017, 0x800000022F99D730, 0, 0xE000000000000000);
        (*(void (**)(char *, uint64_t))(v11 + 8))(v7, v10);
      }
      v13 = OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_instructionsTimer;
      objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_instructionsTimer), sel_invalidate);
      v14 = *(void **)(v1 + v13);
      *(_QWORD *)(v1 + v13) = 0;

      sub_22F87ABDC(v9, (uint64_t)v5, (uint64_t *)&unk_255E206E0);
      if (v12(v5, 1, v10) == 1)
      {
        result = sub_22F87AC20((uint64_t)v5, (uint64_t *)&unk_255E206E0);
        if (*(_QWORD *)(v1 + v13))
          return result;
      }
      else
      {
        sub_22F863858(v1, 0xD000000000000024, 0x800000022F99D830, 0, 0xE000000000000000);
        result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v5, v10);
        if (*(_QWORD *)(v1 + v13))
          return result;
      }
      sub_22F98DA50();
      v15 = swift_allocObject();
      *(_QWORD *)(v15 + 16) = v1;
      *(_OWORD *)(v15 + 24) = xmmword_22F991B60;
      *(_BYTE *)(v15 + 40) = 4;
      swift_retain();
      sub_22F98DA38();
      return swift_release();
    }
  }
  return result;
}

BOOL sub_22F86C050()
{
  uint64_t v0;
  uint64_t v1;
  _BOOL8 result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  result = 1;
  if (v3 <= 3)
  {
    v1 = *(_QWORD *)(v0 + 88);
    if (!v1)
      return 0;
    if (*(_BYTE *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI10PINContext_allowPINBypass) != 1)
      return 0;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_22F98DBA0();
    swift_release();
    swift_release();
    if (v3)
      return 0;
  }
  return result;
}

uint64_t sub_22F86C140(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v2 = v1;
  v4 = sub_22F98EB84();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v23 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_22F98EB9C();
  v8 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22F86C508(a1);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  if (aBlock[0])
    v11 = 3;
  else
    v11 = 4;
  sub_22F864270(v11);
  v21[1] = OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_pinCaptureState;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_pinCaptureState) = v11;
  sub_22F879058();
  v12 = (void *)sub_22F98F0F4();
  v13 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_22F87A950;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22F8644F0;
  aBlock[3] = &block_descriptor_186;
  v14 = _Block_copy(aBlock);
  swift_release();
  sub_22F98EB90();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_22F862548((unint64_t *)&qword_255E22DA0, v5, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E22070);
  sub_22F87AA84((unint64_t *)&qword_255E22DB0, (uint64_t *)&unk_255E22070, MEMORY[0x24BEE12C8]);
  sub_22F98F274();
  MEMORY[0x2348A5CD4](0, v10, v7, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v22);
  type metadata accessor for DelayCallManager();
  v15 = swift_allocObject();
  *(_WORD *)(v15 + 16) = 0;
  *(_QWORD *)(v15 + 24) = 0;
  *(_QWORD *)(v15 + 32) = 0;
  sub_22F8D5BDC();
  if (*(_QWORD *)(v2 + 104))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E1ED38);
    v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_22F991B50;
    type metadata accessor for AudioFactory();
    v17 = *(_BYTE *)(v2 + 186);
    swift_retain();
    sub_22F8D75F8(11, v17, v16 + 32);
    sub_22F8D7854(2, *(_BYTE *)(v2 + 186), *(_BYTE *)(v2 + 187), (_OWORD *)(v16 + 80));
    v18 = swift_allocObject();
    swift_weakInit();
    v19 = swift_allocObject();
    *(_QWORD *)(v19 + 16) = v18;
    *(_QWORD *)(v19 + 24) = v15;
    swift_retain();
    swift_retain();
    sub_22F975EF4(v16, 2, (void (*)(uint64_t))sub_22F87A9A0, v19);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
  return swift_release();
}

uint64_t sub_22F86C508(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  id v17;
  NSObject *v18;
  int v19;
  uint8_t *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint8_t *v28;
  os_log_t v29;
  uint64_t v30;
  uint64_t result;
  void *v32;
  id v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  os_log_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint8_t *v48;
  uint64_t v49;
  int v50;
  char *v51;
  os_log_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  os_log_t v57;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v47 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v47 - v11;
  if (qword_255E1DB00 != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v4, (uint64_t)qword_255E295B0);
  sub_22F87ABDC(v13, (uint64_t)v12, (uint64_t *)&unk_255E206E0);
  v14 = sub_22F98DAA4();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v12, 1, v14) == 1)
  {
    sub_22F87AC20((uint64_t)v12, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858(v2, 0xD000000000000015, 0x800000022F99DDB0, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
  }
  sub_22F87ABDC(v13, (uint64_t)v10, (uint64_t *)&unk_255E206E0);
  if (v16(v10, 1, v14) == 1)
  {
    sub_22F87AC20((uint64_t)v10, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    v54 = v15;
    v17 = a1;
    v18 = sub_22F98DA8C();
    v19 = sub_22F98F0A0();
    if (os_log_type_enabled(v18, (os_log_type_t)v19))
    {
      v50 = v19;
      v51 = v7;
      v52 = v18;
      v53 = v2;
      v55 = a1;
      v20 = (uint8_t *)swift_slowAlloc();
      v49 = swift_slowAlloc();
      v57 = (os_log_t)v49;
      v48 = v20;
      *(_DWORD *)v20 = 136380675;
      sub_22F98D8F4();
      v21 = sub_22F98D330();
      v23 = v22;
      swift_bridgeObjectRelease();
      if (v23 >> 60 == 15)
      {
        v24 = 0;
        v25 = 0xE000000000000000;
      }
      else
      {
        v47 = v21;
        sub_22F92E28C(v21, v23);
        v56 = v26;
        __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EDC8);
        sub_22F87AA84((unint64_t *)&qword_255E1EDD0, &qword_255E1EDC8, MEMORY[0x24BEE12B0]);
        v24 = sub_22F98ED4C();
        v25 = v27;
        swift_bridgeObjectRelease();
        sub_22F87A9E0(v47, v23);
      }
      v28 = v48;
      v56 = sub_22F878880(v24, v25, (uint64_t *)&v57);
      sub_22F98F208();

      swift_bridgeObjectRelease();
      v29 = v52;
      _os_log_impl(&dword_22F85B000, v52, (os_log_type_t)v50, "pinCipherBlob = %{private}s", v28, 0xCu);
      v30 = v49;
      swift_arrayDestroy();
      MEMORY[0x2348A6838](v30, -1, -1);
      MEMORY[0x2348A6838](v28, -1, -1);

      a1 = v55;
      v2 = v53;
      v7 = v51;
    }
    else
    {

    }
    v15 = v54;
    (*(void (**)(char *, uint64_t))(v54 + 8))(v10, v14);
  }
  sub_22F87ABDC(v13, (uint64_t)v7, (uint64_t *)&unk_255E206E0);
  if (v16(v7, 1, v14) == 1)
  {
    result = sub_22F87AC20((uint64_t)v7, (uint64_t *)&unk_255E206E0);
    v32 = *(void **)(v2 + 16);
    if (!v32)
      return result;
    goto LABEL_25;
  }
  v55 = a1;
  v33 = a1;
  v34 = sub_22F98DA8C();
  v35 = sub_22F98F0A0();
  if (os_log_type_enabled(v34, v35))
  {
    v53 = v2;
    v54 = v15;
    v36 = (uint8_t *)swift_slowAlloc();
    v52 = (os_log_t)swift_slowAlloc();
    v57 = v52;
    *(_DWORD *)v36 = 136380675;
    sub_22F98D8E8();
    v37 = sub_22F98D330();
    v39 = v38;
    swift_bridgeObjectRelease();
    if (v39 >> 60 == 15)
    {
      v40 = 0;
      v41 = 0xE000000000000000;
    }
    else
    {
      sub_22F92E28C(v37, v39);
      v51 = (char *)v37;
      v56 = v42;
      __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EDC8);
      sub_22F87AA84((unint64_t *)&qword_255E1EDD0, &qword_255E1EDC8, MEMORY[0x24BEE12B0]);
      v40 = sub_22F98ED4C();
      v41 = v43;
      swift_bridgeObjectRelease();
      sub_22F87A9E0((uint64_t)v51, v39);
    }
    v56 = sub_22F878880(v40, v41, (uint64_t *)&v57);
    sub_22F98F208();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22F85B000, v34, v35, "pinKeyBlob = %{private}s", v36, 0xCu);
    v44 = v52;
    swift_arrayDestroy();
    MEMORY[0x2348A6838](v44, -1, -1);
    MEMORY[0x2348A6838](v36, -1, -1);

    v2 = v53;
    v15 = v54;
  }
  else
  {

  }
  result = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v7, v14);
  a1 = v55;
  v32 = *(void **)(v2 + 16);
  if (v32)
  {
LABEL_25:
    v45 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_pinCardRequest);
    swift_getKeyPath();
    swift_getKeyPath();
    swift_unknownObjectRetain();
    sub_22F98DBA0();
    swift_release();
    swift_release();
    if ((unint64_t)(*(_QWORD *)(v2 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_accessibilityEntryType)
                          - 1) >= 3)
      v46 = 0;
    else
      v46 = *(_QWORD *)(v2 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_accessibilityEntryType);
    objc_msgSend(v32, sel_pinDataReceivedWithPinData_isCardRequest_isAccessibilityEnabled_accessibilityEntryType_drawNumberFailures_, a1, v45, v57, v46, *(_QWORD *)(v2 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_drawNumberFailures));
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_22F86CBE0()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    return sub_22F98DBAC();
  }
  return result;
}

uint64_t sub_22F86CC6C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  void *v4;
  uint64_t v5;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v4 = (void *)result;
    *(_BYTE *)(a2 + 17) = 1;
    v5 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a2 + 24) = sub_22F87A9A8;
    *(_QWORD *)(a2 + 32) = result;
    swift_retain_n();
    sub_22F87A9B8(v5);
    if (*(_BYTE *)(a2 + 16) == 1)
      objc_msgSend(v4, sel_closePINUI);
    return swift_release_n();
  }
  return result;
}

void *sub_22F86CD14(uint64_t a1, uint64_t a2)
{
  void *result;

  swift_beginAccess();
  *(_BYTE *)(a1 + 16) = 1;
  result = (void *)swift_beginAccess();
  if (*(_BYTE *)(a2 + 16) == 1)
  {
    swift_beginAccess();
    result = (void *)swift_weakLoadStrong();
    if (result)
    {
      objc_msgSend(result, sel_closePINUI);
      return (void *)swift_release();
    }
  }
  return result;
}

id sub_22F86CDCC(uint64_t a1, uint64_t a2, void *a3)
{
  id result;

  swift_beginAccess();
  *(_BYTE *)(a1 + 16) = 1;
  result = (id)swift_beginAccess();
  if (*(_BYTE *)(a2 + 16) == 1)
    return objc_msgSend(a3, sel_closePINUI);
  return result;
}

uint64_t sub_22F86CE58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  _QWORD v23[9];
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = (char *)v23 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v23 - v9;
  if (qword_255E1DB00 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v2, (uint64_t)qword_255E295B0);
  sub_22F87ABDC(v11, (uint64_t)v10, (uint64_t *)&unk_255E206E0);
  v12 = sub_22F98DAA4();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v14(v10, 1, v12) == 1)
  {
    sub_22F87AC20((uint64_t)v10, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858(v1, 0xD000000000000014, 0x800000022F99DC10, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  if (v24[0] >= 1 && *(_BYTE *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_pinCaptureState) == 1)
  {
    v23[2] = v5;
    sub_22F87A750(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_pinController, (uint64_t)v24);
    v15 = v25;
    v16 = v26;
    __swift_project_boxed_opaque_existential_1(v24, v25);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_22F98DBA0();
    swift_release();
    swift_release();
    v17 = v23[8];
    v18 = *(void (**)(uint64_t, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v16 + 40);
    swift_retain();
    v18(v17, sub_22F87A710, v1, v15, v16);
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v24);
  }
  else
  {
    sub_22F87ABDC(v11, (uint64_t)v8, (uint64_t *)&unk_255E206E0);
    if (v14(v8, 1, v12) == 1)
    {
      return sub_22F87AC20((uint64_t)v8, (uint64_t *)&unk_255E206E0);
    }
    else
    {
      v19 = sub_22F98DA8C();
      v20 = sub_22F98F07C();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v21 = 0;
        _os_log_impl(&dword_22F85B000, v19, v20, "no digit to erase", v21, 2u);
        MEMORY[0x2348A6838](v21, -1, -1);
      }

      return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v8, v12);
    }
  }
}

uint64_t sub_22F86D3B8()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v12;
  uint64_t v13;
  _QWORD aBlock[6];

  v0 = sub_22F98EB84();
  v1 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v13 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_22F98EB9C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22F879058();
  v8 = (void *)sub_22F98F0F4();
  v9 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_22F87A718;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22F8644F0;
  aBlock[3] = &block_descriptor_146;
  v10 = _Block_copy(aBlock);
  swift_release();
  sub_22F98EB90();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_22F862548((unint64_t *)&qword_255E22DA0, v1, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E22070);
  sub_22F87AA84((unint64_t *)&qword_255E22DB0, (uint64_t *)&unk_255E22070, MEMORY[0x24BEE12C8]);
  sub_22F98F274();
  MEMORY[0x2348A5CD4](0, v7, v3, v10);
  _Block_release(v10);

  (*(void (**)(char *, uint64_t))(v13 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void (*sub_22F86D5C0())(_BYTE *, _QWORD)
{
  void (*result)(_BYTE *, _QWORD);
  _QWORD *v1;
  _BYTE v2[32];

  swift_beginAccess();
  result = (void (*)(_BYTE *, _QWORD))swift_weakLoadStrong();
  if (result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    result = (void (*)(_BYTE *, _QWORD))sub_22F98DB94();
    if (__OFSUB__(*v1, 1))
    {
      __break(1u);
    }
    else
    {
      --*v1;
      result(v2, 0);
      swift_release();
      swift_release();
      return (void (*)(_BYTE *, _QWORD))swift_release();
    }
  }
  return result;
}

uint64_t sub_22F86D688()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_22F98DBAC();
}

uint64_t sub_22F86D6F8()
{
  uint64_t result;
  int v1;
  void *v2;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = *(unsigned __int8 *)(result + 184);
    result = swift_release();
    if (v1 == 1)
    {
      swift_beginAccess();
      result = swift_weakLoadStrong();
      if (result)
      {
        v2 = *(void **)(result + 16);
        swift_unknownObjectRetain();
        result = swift_release();
        if (v2)
        {
          objc_msgSend(v2, sel_setVoiceOverWithEnabled_, 1);
          return swift_unknownObjectRelease();
        }
      }
    }
  }
  return result;
}

uint64_t sub_22F86D7A4()
{
  uint64_t v0;

  if (qword_255E1DB70 != -1)
    swift_once();
  swift_beginAccess();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  v0 = sub_22F98DBAC();
  MEMORY[0x24BDAC7A8](v0);
  sub_22F98EAF4();
  sub_22F98DE10();
  return swift_release();
}

uint64_t sub_22F86D8B8(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v6;
  _BYTE v7[96];

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_BYTE *)(v4 + 24) = a2;
  swift_retain();
  sub_22F916ED0(a2, (uint64_t)sub_22F87A3A0, v4, (uint64_t)v7);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F87B2B4((uint64_t)v7, (uint64_t)&v6, &qword_255E1E458);
  swift_retain();
  return sub_22F98DBAC();
}

id sub_22F86D988(char a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _BYTE v16[32];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_255E1DB00 != -1)
    swift_once();
  v7 = __swift_project_value_buffer(v4, (uint64_t)qword_255E295B0);
  sub_22F87ABDC(v7, (uint64_t)v6, (uint64_t *)&unk_255E206E0);
  v8 = sub_22F98DAA4();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
  {
    sub_22F87AC20((uint64_t)v6, (uint64_t *)&unk_255E206E0);
    v10 = (void *)v2[2];
    if (!v10)
      goto LABEL_14;
  }
  else
  {
    sub_22F863858((uint64_t)v2, 0xD000000000000012, 0x800000022F99D7F0, 0, 0xE000000000000000);
    (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v6, v8);
    v10 = (void *)v2[2];
    if (!v10)
      goto LABEL_14;
  }
  if (a1 == 2)
    v11 = 28;
  else
    v11 = 26;
  v12 = *((unsigned __int8 *)v2 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_pinCardRequest);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_unknownObjectRetain();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  if ((unint64_t)(*(_QWORD *)((char *)v2
                                    + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_accessibilityEntryType)
                        - 1) >= 3)
    v13 = 0;
  else
    v13 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_accessibilityEntryType);
  objc_msgSend(v10, sel_reportPINErrorWithError_isCardRequest_isAccessibilityEnabled_accessibilityEntryType_drawNumberFailures_, v11, v12, v16[31], v13, *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_drawNumberFailures));
  swift_unknownObjectRelease();
LABEL_14:
  sub_22F98EAF4();
  sub_22F98DE10();
  swift_release();
  if (a1 == 2)
    v14 = 6;
  else
    v14 = 7;
  sub_22F864270(v14);
  *((_BYTE *)v2 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_pinCaptureState) = v14;
  swift_getKeyPath();
  swift_getKeyPath();
  v16[15] = 1;
  swift_retain();
  sub_22F98DBAC();
  return objc_msgSend(v2, sel_closePINUI);
}

uint64_t sub_22F86DC34()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_22F98DBAC();
}

uint64_t sub_22F86DCA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  unint64_t v15;
  int v16;
  uint64_t v17;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v2);
  v7 = (char *)&v25 - v6;
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v25 - v8;
  if (qword_255E1DB00 != -1)
    swift_once();
  v10 = __swift_project_value_buffer(v1, (uint64_t)qword_255E295B0);
  sub_22F87ABDC(v10, (uint64_t)v9, (uint64_t *)&unk_255E206E0);
  v11 = sub_22F98DAA4();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v13(v9, 1, v11) == 1)
  {
    sub_22F87AC20((uint64_t)v9, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    v14 = sub_22F98D750();
    sub_22F863858(v0, 0xD000000000000015, 0x800000022F99DE80, v14, v15);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
  }
  v16 = 1 << *(_BYTE *)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_pinCaptureState);
  if ((v16 & 7) != 0)
    return sub_22F879ED0(0);
  if ((v16 & 0x38) != 0)
  {
    sub_22F87ABDC(v10, (uint64_t)v4, (uint64_t *)&unk_255E206E0);
    if (v13(v4, 1, v11) == 1)
    {
      v17 = (uint64_t)v4;
      return sub_22F87AC20(v17, (uint64_t *)&unk_255E206E0);
    }
    v19 = sub_22F98DA8C();
    v20 = sub_22F98F070();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v21 = 0;
      _os_log_impl(&dword_22F85B000, v19, v20, "PIN already in final state with automatic close, ignoring daemon error.", v21, 2u);
      MEMORY[0x2348A6838](v21, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v4, v11);
  }
  else
  {
    sub_22F87ABDC(v10, (uint64_t)v7, (uint64_t *)&unk_255E206E0);
    if (v13(v7, 1, v11) == 1)
    {
      v17 = (uint64_t)v7;
      return sub_22F87AC20(v17, (uint64_t *)&unk_255E206E0);
    }
    v22 = sub_22F98DA8C();
    v23 = sub_22F98F070();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_22F85B000, v22, v23, "Already in error state, ignoring daemon error.", v24, 2u);
      MEMORY[0x2348A6838](v24, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v7, v11);
  }
}

uint64_t sub_22F86DFE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a5;
  v8[4] = a6;
  v8[2] = a4;
  return swift_task_switch();
}

uint64_t sub_22F86E008()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 40);
  v1 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  sub_22F87AF60();
  sub_22F86E064(v4, v3, v2, v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22F86E064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  double v20;
  double v21;
  double v22;
  double v23;
  uint64_t v24;
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;

  v5 = v4;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v26 - v12 + 56;
  sub_22F87A750(v5 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_pinController, (uint64_t)v26);
  v14 = v27;
  v15 = v28;
  __swift_project_boxed_opaque_existential_1(v26, v27);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 16))(a1, a2, a3, a4, v14, v15);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v26);
  sub_22F864270(1);
  *(_BYTE *)(v5 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_pinCaptureState) = 1;
  if (qword_255E1DB00 != -1)
    swift_once();
  v16 = __swift_project_value_buffer(v10, (uint64_t)qword_255E295B0);
  sub_22F87ABDC(v16, (uint64_t)v13, (uint64_t *)&unk_255E206E0);
  v17 = sub_22F98DAA4();
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v13, 1, v17) == 1)
  {
    result = sub_22F87AC20((uint64_t)v13, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858(v5, 0xD000000000000021, 0x800000022F99DF10, 0, 0xE000000000000000);
    result = (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v13, v17);
  }
  if (!*(_QWORD *)(v5 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_pinEntryTimer))
  {
    sub_22F98D9E4();
    v21 = v20;
    sub_22F98DA20();
    v23 = v21 - v22;
    sub_22F98DA50();
    v24 = swift_allocObject();
    *(_QWORD *)(v24 + 16) = v5;
    *(double *)(v24 + 24) = v23;
    swift_retain();
    sub_22F98DA38();
    return swift_release();
  }
  return result;
}

id sub_22F86E548(uint64_t a1)
{
  id result;

  if (qword_255E1DB70 != -1)
    swift_once();
  swift_beginAccess();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_22F98DBAC();
  *(_BYTE *)(a1 + 186) = UIAccessibilityIsVoiceOverRunning();
  UIAccessibilityIsVoiceOverRunning();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_22F98DBAC();
  sub_22F868614();
  sub_22F98EAF4();
  sub_22F98DE10();
  swift_release();
  result = *(id *)(a1 + 16);
  if (result)
    return objc_msgSend(result, sel_pinUIDidLoad);
  return result;
}

uint64_t sub_22F86E698()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  int v9;
  uint8_t *v10;
  uint8_t *v11;
  uint64_t v13;
  int v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  LOBYTE(v15) = 1;
  swift_retain();
  sub_22F98DBAC();
  if (qword_255E1DB00 != -1)
    swift_once();
  v4 = __swift_project_value_buffer(v1, (uint64_t)qword_255E295B0);
  sub_22F87ABDC(v4, (uint64_t)v3, (uint64_t *)&unk_255E206E0);
  v5 = sub_22F98DAA4();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v3, 1, v5) == 1)
  {
    sub_22F87AC20((uint64_t)v3, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    swift_retain_n();
    v7 = sub_22F98DA8C();
    v8 = sub_22F98F07C();
    v9 = v8;
    if (os_log_type_enabled(v7, v8))
    {
      v14 = v9;
      v10 = (uint8_t *)swift_slowAlloc();
      v21 = v0;
      v11 = v10;
      *(_DWORD *)v10 = 67109120;
      swift_getKeyPath();
      swift_getKeyPath();
      sub_22F98DBA0();
      swift_release();
      swift_release();
      swift_release();
      LODWORD(v15) = v15;
      sub_22F98F208();
      swift_release();
      _os_log_impl(&dword_22F85B000, v7, (os_log_type_t)v14, "pinUIIsPresented: %{BOOL}d", v11, 8u);
      MEMORY[0x2348A6838](v11, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v3, v5);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  v19 = 0u;
  v20 = 0u;
  v17 = 0u;
  v18 = 0u;
  v15 = 0u;
  v16 = 0u;
  swift_retain();
  return sub_22F98DBAC();
}

id sub_22F86E964()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  id result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  _QWORD v33[2];
  uint64_t v34[3];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v1 = v0;
  v33[0] = sub_22F98D5A0();
  v2 = *(_QWORD *)(v33[0] - 8);
  MEMORY[0x24BDAC7A8](v33[0]);
  v4 = (char *)v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v33 - v9;
  if (qword_255E1DB00 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v5, (uint64_t)qword_255E295B0);
  sub_22F87ABDC(v11, (uint64_t)v10, (uint64_t *)&unk_255E206E0);
  v12 = sub_22F98DAA4();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v14(v10, 1, v12) == 1)
  {
    sub_22F87AC20((uint64_t)v10, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858(v1, 0x4E495065736F6C63, 0xEC00000029284955, 0xD000000000000013, 0x800000022F99DE20);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  v15 = v37;
  sub_22F87A26C(v34[0], v34[1], v34[2], v35, v36, v37);
  if (v15)
  {
    sub_22F87ABDC(v11, (uint64_t)v8, (uint64_t *)&unk_255E206E0);
    if (v14(v8, 1, v12) == 1)
    {
      result = (id)sub_22F87AC20((uint64_t)v8, (uint64_t *)&unk_255E206E0);
      if (!*(_QWORD *)(v1 + 104))
        return result;
LABEL_35:
      swift_retain();
      sub_22F9762D4();
      return (id)swift_release();
    }
    v29 = sub_22F98DA8C();
    v30 = sub_22F98F070();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      v32 = swift_slowAlloc();
      v34[0] = v32;
      *(_DWORD *)v31 = 136315138;
      v33[1] = sub_22F878880(0x4E495065736F6C63, 0xEC00000029284955, v34);
      sub_22F98F208();
      _os_log_impl(&dword_22F85B000, v29, v30, "%s - error displayed, ignoring closePINUI request", v31, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348A6838](v32, -1, -1);
      MEMORY[0x2348A6838](v31, -1, -1);
    }

    result = (id)(*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v8, v12);
    if (*(_QWORD *)(v1 + 104))
      goto LABEL_35;
  }
  else
  {
    v17 = *(_QWORD *)(v1 + 88);
    if (v17 && *(_BYTE *)(v17 + OBJC_IVAR____TtC19ContactlessReaderUI10PINContext_issuerPIN) == 1)
    {
      sub_22F98D4D4();
      sub_22F98D588();
      (*(void (**)(char *, _QWORD))(v2 + 8))(v4, v33[0]);
    }
    sub_22F865E54();
    if (*(_QWORD *)(v1 + 104))
    {
      swift_retain();
      sub_22F9762D4();
      swift_release();
    }
    v18 = OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_pinCaptureState;
    if (*(unsigned __int8 *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_pinCaptureState)
       - 1 <= 1)
    {
      v19 = v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_pinController;
      sub_22F87A750(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_pinController, (uint64_t)v34);
      v20 = v35;
      v21 = v36;
      __swift_project_boxed_opaque_existential_1(v34, v35);
      (*(void (**)(uint64_t, uint64_t))(v21 + 56))(v20, v21);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v34);
      sub_22F87A750(v19, (uint64_t)v34);
      v22 = v35;
      v23 = v36;
      __swift_project_boxed_opaque_existential_1(v34, v35);
      v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 8))(v22, v23);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v34);
      if ((v24 & 1) != 0)
      {
        sub_22F864270(5);
        *(_BYTE *)(v1 + v18) = 5;
      }
      v25 = *(void **)(v1 + 16);
      if (v25)
      {
        v26 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_pinCardRequest);
        swift_getKeyPath();
        swift_getKeyPath();
        swift_unknownObjectRetain();
        sub_22F98DBA0();
        swift_release();
        swift_release();
        if ((unint64_t)(*(_QWORD *)(v1
                                          + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_accessibilityEntryType)
                              - 1) >= 3)
          v27 = 0;
        else
          v27 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_accessibilityEntryType);
        objc_msgSend(v25, sel_reportPINErrorWithError_isCardRequest_isAccessibilityEnabled_accessibilityEntryType_drawNumberFailures_, 29, v26, LOBYTE(v34[0]), v27, *(_QWORD *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_drawNumberFailures), v33[0]);
        swift_unknownObjectRelease();
      }
    }
    if (*(_BYTE *)(v1 + 184) == 1)
    {
      v28 = *(void **)(v1 + 16);
      if (v28)
        objc_msgSend(v28, sel_setVoiceOverWithEnabled_, 1);
    }
    if (*(_BYTE *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_isPINPrivacyLockEnabled) == 1)
    {
      if (*(_BYTE *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_incomingCallAccepted) == 1
        && sub_22F8B8134())
      {
        swift_getKeyPath();
        swift_getKeyPath();
        sub_22F98DBA0();
        swift_release();
        swift_release();
        if ((v34[0] & 1) == 0)
          sub_22F86EF98();
        sub_22F86F0E8();
      }
      else
      {
        sub_22F86EF98();
      }
      result = *(id *)(v1 + 16);
      if (result)
        return objc_msgSend(result, sel_pinAuthNeeded);
    }
    else
    {
      return (id)sub_22F86F8AC();
    }
  }
  return result;
}

uint64_t sub_22F86EF98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB28 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_255E29628);
  sub_22F87ABDC(v5, (uint64_t)v4, (uint64_t *)&unk_255E206E0);
  v6 = sub_22F98DAA4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_22F87AC20((uint64_t)v4, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858(v1, 0xD000000000000011, 0x800000022F99DC50, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  sub_22F98DA50();
  swift_retain();
  sub_22F98DA38();
  return swift_release();
}

uint64_t sub_22F86F0E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  void *v27;
  void *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  void *v35;
  uint64_t v36;
  void *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t aBlock;
  uint64_t v65;
  uint64_t (*v66)(uint64_t);
  void *v67;
  uint64_t (*v68)();
  uint64_t v69;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1E498);
  v54 = *(_QWORD *)(v2 - 8);
  v55 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v51 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EDB8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v52 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v53 = (uint64_t)&v49 - v7;
  v62 = sub_22F98EB84();
  v60 = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62);
  v59 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_22F98EB9C();
  v58 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v57 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_22F98EBC0();
  v10 = *(_QWORD *)(v56 - 8);
  v11 = MEMORY[0x24BDAC7A8](v56);
  v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v49 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v49 - v20;
  if (qword_255E1DB28 != -1)
    swift_once();
  v22 = __swift_project_value_buffer(v16, (uint64_t)qword_255E29628);
  sub_22F87ABDC(v22, (uint64_t)v21, (uint64_t *)&unk_255E206E0);
  v23 = sub_22F98DAA4();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
  if (v25(v21, 1, v23) == 1)
  {
    sub_22F87AC20((uint64_t)v21, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858(v1, 0xD00000000000001DLL, 0x800000022F99DE40, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v21, v23);
  }
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_isPINPrivacyLockEnabled) == 1)
  {
    if (*(_BYTE *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_evaluating) == 1)
    {
      sub_22F87ABDC(v22, (uint64_t)v19, (uint64_t *)&unk_255E206E0);
      if (v25(v19, 1, v23) == 1)
      {
        sub_22F87AC20((uint64_t)v19, (uint64_t *)&unk_255E206E0);
      }
      else
      {
        v32 = sub_22F98DA8C();
        v33 = sub_22F98F0A0();
        if (os_log_type_enabled(v32, v33))
        {
          v34 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v34 = 0;
          _os_log_impl(&dword_22F85B000, v32, v33, "PrivacyLock: Evaluating already", v34, 2u);
          MEMORY[0x2348A6838](v34, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v24 + 8))(v19, v23);
      }
      sub_22F879058();
      v35 = (void *)sub_22F98F0F4();
      sub_22F98EBB4();
      MEMORY[0x2348A57D0](v13, 1.0);
      v50 = *(void (**)(char *, uint64_t))(v10 + 8);
      v50(v13, v56);
      v36 = swift_allocObject();
      swift_weakInit();
      v68 = sub_22F87AA6C;
      v69 = v36;
      aBlock = MEMORY[0x24BDAC760];
      v65 = 1107296256;
      v66 = sub_22F8644F0;
      v67 = &block_descriptor_200;
      v37 = _Block_copy(&aBlock);
      swift_release();
      v38 = v57;
      sub_22F98EB90();
      aBlock = MEMORY[0x24BEE4AF8];
      sub_22F862548((unint64_t *)&qword_255E22DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E22070);
      sub_22F87AA84((unint64_t *)&qword_255E22DB0, (uint64_t *)&unk_255E22070, MEMORY[0x24BEE12C8]);
      v39 = v59;
      v40 = v62;
      sub_22F98F274();
      MEMORY[0x2348A5CA4](v15, v38, v39, v37);
      _Block_release(v37);

      (*(void (**)(char *, uint64_t))(v60 + 8))(v39, v40);
      (*(void (**)(char *, uint64_t))(v58 + 8))(v38, v61);
      v50(v15, v56);
      v41 = v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_bsActionContinuity;
      swift_beginAccess();
      v42 = v53;
      sub_22F87ABDC(v41, v53, &qword_255E1EDB8);
      v44 = v54;
      v43 = v55;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48))(v42, 1, v55))
      {
        sub_22F87AC20(v42, &qword_255E1EDB8);
      }
      else
      {
        v45 = v51;
        (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v51, v42, v43);
        sub_22F87AC20(v42, &qword_255E1EDB8);
        sub_22F87A7E4();
        v46 = swift_allocError();
        *v47 = 0;
        v63 = v46;
        sub_22F98EF98();
        (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v43);
      }
      v48 = (uint64_t)v52;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v44 + 56))(v52, 1, 1, v43);
      swift_beginAccess();
      sub_22F87A79C(v48, v41);
      return swift_endAccess();
    }
    else
    {
      sub_22F879058();
      v27 = (void *)sub_22F98F0F4();
      v68 = sub_22F87AA58;
      v69 = v1;
      aBlock = MEMORY[0x24BDAC760];
      v65 = 1107296256;
      v66 = sub_22F8644F0;
      v67 = &block_descriptor_196;
      v28 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      v29 = v57;
      sub_22F98EB90();
      aBlock = MEMORY[0x24BEE4AF8];
      sub_22F862548((unint64_t *)&qword_255E22DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E22070);
      sub_22F87AA84((unint64_t *)&qword_255E22DB0, (uint64_t *)&unk_255E22070, MEMORY[0x24BEE12C8]);
      v30 = v59;
      v31 = v62;
      sub_22F98F274();
      MEMORY[0x2348A5CD4](0, v29, v30, v28);
      _Block_release(v28);

      (*(void (**)(char *, uint64_t))(v60 + 8))(v30, v31);
      return (*(uint64_t (**)(char *, uint64_t))(v58 + 8))(v29, v61);
    }
  }
  else
  {
    *(_BYTE *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_evaluating) = 0;
    return sub_22F86F8AC();
  }
}

uint64_t sub_22F86F8AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v20[24];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1E498);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EDB8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v11 = &v20[-v10];
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = &v20[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_255E1DB28 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v12, (uint64_t)qword_255E29628);
  sub_22F87ABDC(v15, (uint64_t)v14, (uint64_t *)&unk_255E206E0);
  v16 = sub_22F98DAA4();
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16) == 1)
  {
    sub_22F87AC20((uint64_t)v14, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858(v1, 0xD000000000000011, 0x800000022F99DC70, 0, 0xE000000000000000);
    (*(void (**)(_BYTE *, uint64_t))(v17 + 8))(v14, v16);
  }
  sub_22F86FB7C();
  v18 = v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_bsActionContinuity;
  swift_beginAccess();
  sub_22F87ABDC(v18, (uint64_t)v11, &qword_255E1EDB8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v3 + 48))(v11, 1, v2))
  {
    sub_22F87AC20((uint64_t)v11, &qword_255E1EDB8);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 16))(v5, v11, v2);
    sub_22F87AC20((uint64_t)v11, &qword_255E1EDB8);
    v20[0] = 1;
    sub_22F98EFA4();
    (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
  }
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v9, 1, 1, v2);
  swift_beginAccess();
  sub_22F87A79C((uint64_t)v9, v18);
  return swift_endAccess();
}

uint64_t sub_22F86FB7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_22F98EB84();
  v18 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_22F98EB9C();
  v5 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB28 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v8, (uint64_t)qword_255E29628);
  sub_22F87ABDC(v11, (uint64_t)v10, (uint64_t *)&unk_255E206E0);
  v12 = sub_22F98DAA4();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) == 1)
  {
    sub_22F87AC20((uint64_t)v10, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858(v1, 0xD000000000000012, 0x800000022F99DC90, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
  }
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_incomingCallAccepted) == 1)
    *(_BYTE *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_incomingCallAccepted) = 0;
  sub_22F879058();
  v14 = (void *)sub_22F98F0F4();
  aBlock[4] = sub_22F87A870;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22F8644F0;
  aBlock[3] = &block_descriptor_161;
  v15 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_22F98EB90();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_22F862548((unint64_t *)&qword_255E22DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E22070);
  sub_22F87AA84((unint64_t *)&qword_255E22DB0, (uint64_t *)&unk_255E22070, MEMORY[0x24BEE12C8]);
  sub_22F98F274();
  MEMORY[0x2348A5CD4](0, v7, v4, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v18 + 8))(v4, v2);
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v17);
  if (*(_QWORD *)(v1 + 104))
  {
    swift_retain();
    sub_22F9762D4();
    return swift_release();
  }
  return result;
}

void sub_22F86FE98()
{
  sub_22F98EAF4();
  sub_22F98DE10();
  swift_release();
  if (qword_255E1DB78 != -1)
    swift_once();
  BrightnessManager.resetBrightnessToSystemDefault()();
}

uint64_t sub_22F86FF28(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_22F98DBAC();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  result = sub_22F98DBAC();
  v3 = *(_QWORD *)(a1 + 88);
  if (v3 && (*(_BYTE *)(v3 + OBJC_IVAR____TtC19ContactlessReaderUI10PINContext_issuerPIN) & 1) == 0)
  {
    if (qword_255E1DB70 != -1)
      swift_once();
    swift_beginAccess();
    swift_retain();
    sub_22F8A987C();
    return swift_release();
  }
  return result;
}

void sub_22F870054()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  char *v37;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_22F98EB84();
  v33 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_22F98EB9C();
  v31 = *(_QWORD *)(v5 - 8);
  v32 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v30 - v12;
  if (qword_255E1DB00 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v8, (uint64_t)qword_255E295B0);
  sub_22F87ABDC(v14, (uint64_t)v13, (uint64_t *)&unk_255E206E0);
  v15 = sub_22F98DAA4();
  v16 = *(_QWORD *)(v15 - 8);
  v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v17 = v34(v13, 1, v15);
  v36 = v8;
  v37 = v11;
  v35 = v16;
  if (v17 == 1)
  {
    sub_22F87AC20((uint64_t)v13, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858(v1, 0xD000000000000015, 0x800000022F99DE00, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
  }
  sub_22F8656BC();
  sub_22F879058();
  v18 = (void *)sub_22F98F0F4();
  aBlock[4] = sub_22F87AA50;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22F8644F0;
  aBlock[3] = &block_descriptor_193;
  v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_22F98EB90();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_22F862548((unint64_t *)&qword_255E22DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E22070);
  sub_22F87AA84((unint64_t *)&qword_255E22DB0, (uint64_t *)&unk_255E22070, MEMORY[0x24BEE12C8]);
  sub_22F98F274();
  MEMORY[0x2348A5CD4](0, v7, v4, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v33 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v7, v32);
  if (*(_BYTE *)(v1 + 184) == 1)
  {
    v20 = *(void **)(v1 + 16);
    if (v20)
      objc_msgSend(v20, sel_setVoiceOverWithEnabled_, 1);
  }
  v21 = v36;
  if (qword_255E1DB70 != -1)
    swift_once();
  swift_beginAccess();
  v22 = (char *)off_255E211B8;
  v23 = qword_255E1DAF8;
  swift_retain();
  v24 = v23 == -1;
  v25 = v35;
  if (!v24)
    swift_once();
  v26 = __swift_project_value_buffer(v21, (uint64_t)qword_255E29598);
  v27 = (uint64_t)v37;
  sub_22F87ABDC(v26, (uint64_t)v37, (uint64_t *)&unk_255E206E0);
  if (v34((char *)v27, 1, v15) == 1)
  {
    sub_22F87AC20(v27, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858((uint64_t)v22, 0x736F4865736F6C63, 0xEB00000000292874, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v27, v15);
  }
  v28 = (void *)MEMORY[0x2348A68F8](v22 + 56);
  if (v28)
  {
    v29 = v28;
    objc_msgSend(v28, sel_dismissViewControllerAnimated_completion_, 1, 0);
    swift_release();

  }
  else
  {
    swift_release();
  }
}

uint64_t sub_22F8704DC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_22F98DBAC();
}

uint64_t sub_22F870554(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  v4 = swift_retain();
  a3(v4);
  return swift_release();
}

void sub_22F870580()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22F8656BC();
  v4 = *(_QWORD *)(v0 + 88);
  if (v4 && *(_BYTE *)(v4 + OBJC_IVAR____TtC19ContactlessReaderUI10PINContext_issuerPIN) == 1)
  {
    if (qword_255E1DB70 != -1)
      swift_once();
    swift_beginAccess();
    v5 = (char *)off_255E211B8;
    v6 = qword_255E1DAF8;
    swift_retain();
    if (v6 != -1)
      swift_once();
    v7 = __swift_project_value_buffer(v1, (uint64_t)qword_255E29598);
    sub_22F87ABDC(v7, (uint64_t)v3, (uint64_t *)&unk_255E206E0);
    v8 = sub_22F98DAA4();
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v3, 1, v8) == 1)
    {
      sub_22F87AC20((uint64_t)v3, (uint64_t *)&unk_255E206E0);
    }
    else
    {
      sub_22F863858((uint64_t)v5, 0x736F4865736F6C63, 0xEB00000000292874, 0, 0xE000000000000000);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v3, v8);
    }
    v10 = (void *)MEMORY[0x2348A68F8](v5 + 56);
    if (v10)
    {
      v11 = v10;
      objc_msgSend(v10, sel_dismissViewControllerAnimated_completion_, 1, 0);
      swift_release();

    }
    else
    {
      swift_release();
    }
  }
}

uint64_t sub_22F870764(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v2 = v1;
  v4 = sub_22F98EB84();
  v22 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_22F98EB9C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB00 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v11, (uint64_t)qword_255E295B0);
  sub_22F87ABDC(v14, (uint64_t)v13, (uint64_t *)&unk_255E206E0);
  v15 = sub_22F98DAA4();
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15) == 1)
  {
    sub_22F87AC20((uint64_t)v13, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858(v2, 0xD000000000000021, 0x800000022F99DD10, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
  }
  sub_22F879058();
  v17 = (void *)sub_22F98F0F4();
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v2;
  *(_QWORD *)(v18 + 24) = a1;
  aBlock[4] = sub_22F87A930;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22F8644F0;
  aBlock[3] = &block_descriptor_182;
  v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_22F98EB90();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_22F862548((unint64_t *)&qword_255E22DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E22070);
  sub_22F87AA84((unint64_t *)&qword_255E22DB0, (uint64_t *)&unk_255E22070, MEMORY[0x24BEE12C8]);
  sub_22F98F274();
  MEMORY[0x2348A5CD4](0, v10, v6, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_22F870A68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  const char *v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v4 = sub_22F98D5A0();
  v5 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_pinCaptureState) != 5)
  {
    switch(a2)
    {
      case 2:
        v9 = "session invalid - display error";
        break;
      case 1:
        v10 = *(void **)(a1 + 96);
        if (v10)
        {
          v11 = v10;
          sub_22F86C140(v11);

          v12 = *(void **)(a1 + 96);
          *(_QWORD *)(a1 + 96) = 0;

          goto LABEL_13;
        }
        v9 = "pinData invalid - display error";
        break;
      case 0:
        sub_22F98EAF4();
        sub_22F98DE10();
        swift_release();
LABEL_13:
        sub_22F98D4F8();
        sub_22F98D57C();
        return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      default:
        v13 = 0xD00000000000002BLL;
        v14 = 0x800000022F99DD40;
LABEL_12:
        sub_22F870C30(v13, v14);
        goto LABEL_13;
    }
    v14 = (unint64_t)(v9 - 32) | 0x8000000000000000;
    v13 = 0xD00000000000001FLL;
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_22F870BC0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_22F98DBAC();
}

void sub_22F870C30(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB00 != -1)
    swift_once();
  v9 = __swift_project_value_buffer(v6, (uint64_t)qword_255E295B0);
  sub_22F87ABDC(v9, (uint64_t)v8, (uint64_t *)&unk_255E206E0);
  v10 = sub_22F98DAA4();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) == 1)
  {
    sub_22F87AC20((uint64_t)v8, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858(v3, 0xD000000000000021, 0x800000022F99DDD0, a1, a2);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  sub_22F879ED0(0);
  sub_22F98EAF4();
  sub_22F98DE10();
  swift_release();
  v12 = *(void **)(v3 + 96);
  *(_QWORD *)(v3 + 96) = 0;

}

uint64_t sub_22F870E04(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  swift_retain();
  a4(a3);
  return swift_release();
}

ValueMetadata *type metadata accessor for PINViewModel.AccessibilityEntryType()
{
  return &type metadata for PINViewModel.AccessibilityEntryType;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for PINViewModel.PINCaptureState(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PINViewModel.PINCaptureState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_22F870F3C + 4 * byte_22F991B85[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_22F870F70 + 4 * byte_22F991B80[v4]))();
}

uint64_t sub_22F870F70(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22F870F78(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22F870F80);
  return result;
}

uint64_t sub_22F870F8C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22F870F94);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_22F870F98(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22F870FA0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PINViewModel.PINCaptureState()
{
  return &type metadata for PINViewModel.PINCaptureState;
}

uint64_t getEnumTagSinglePayload for AudioManager.Mode(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PINViewModel.PINEntryMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22F87109C + 4 * byte_22F991B8F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22F8710D0 + 4 * byte_22F991B8A[v4]))();
}

uint64_t sub_22F8710D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22F8710D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22F8710E0);
  return result;
}

uint64_t sub_22F8710EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22F8710F4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22F8710F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22F871100(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22F87110C(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_22F871114(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for PINViewModel.PINEntryMode()
{
  return &type metadata for PINViewModel.PINEntryMode;
}

unint64_t sub_22F871134()
{
  unint64_t result;

  result = qword_255E1ED08;
  if (!qword_255E1ED08)
  {
    result = MEMORY[0x2348A6784](&unk_22F991D84, &type metadata for PINViewModel.PINEntryMode);
    atomic_store(result, (unint64_t *)&qword_255E1ED08);
  }
  return result;
}

unint64_t sub_22F87117C()
{
  unint64_t result;

  result = qword_255E1ED10;
  if (!qword_255E1ED10)
  {
    result = MEMORY[0x2348A6784](&unk_22F991DEC, &type metadata for PINViewModel.PINCaptureState);
    atomic_store(result, (unint64_t *)&qword_255E1ED10);
  }
  return result;
}

unint64_t sub_22F8711C4()
{
  unint64_t result;

  result = qword_255E1ED18;
  if (!qword_255E1ED18)
  {
    result = MEMORY[0x2348A6784](&unk_22F991E44, &type metadata for PINViewModel.AccessibilityEntryType);
    atomic_store(result, (unint64_t *)&qword_255E1ED18);
  }
  return result;
}

unint64_t sub_22F87120C()
{
  unint64_t result;

  result = qword_255E1ED20;
  if (!qword_255E1ED20)
  {
    result = MEMORY[0x2348A6784](&unk_22F991E14, &type metadata for PINViewModel.AccessibilityEntryType);
    atomic_store(result, (unint64_t *)&qword_255E1ED20);
  }
  return result;
}

unint64_t sub_22F871254()
{
  unint64_t result;

  result = qword_255E1ED28;
  if (!qword_255E1ED28)
  {
    result = MEMORY[0x2348A6784](&unk_22F991E6C, &type metadata for PINViewModel.AccessibilityEntryType);
    atomic_store(result, (unint64_t *)&qword_255E1ED28);
  }
  return result;
}

unint64_t sub_22F87129C()
{
  unint64_t result;

  result = qword_255E1ED30;
  if (!qword_255E1ED30)
  {
    result = MEMORY[0x2348A6784](&unk_22F991EA4, &type metadata for PINViewModel.AccessibilityEntryType);
    atomic_store(result, (unint64_t *)&qword_255E1ED30);
  }
  return result;
}

uint64_t sub_22F8712E0()
{
  return MEMORY[0x24BDB9D70];
}

unint64_t sub_22F8712EC(unint64_t result)
{
  if (result >= 3)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_22F8712FC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_22F98DBAC();
}

id sub_22F871368(uint64_t a1, _BYTE *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  char v24;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EDB8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v23 - v11;
  a2[OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_incomingCallAccepted] = 1;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1E498);
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v12, a1, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  sub_22F87B2B4((uint64_t)v12, (uint64_t)v10, &qword_255E1EDB8);
  v15 = (uint64_t)&a2[OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_bsActionContinuity];
  swift_beginAccess();
  sub_22F87A79C((uint64_t)v10, v15);
  swift_endAccess();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  if (v24 == 1)
  {
    sub_22F86F0E8();
    if (qword_255E1DB00 != -1)
      swift_once();
    v16 = __swift_project_value_buffer(v4, (uint64_t)qword_255E295B0);
    sub_22F87ABDC(v16, (uint64_t)v6, (uint64_t *)&unk_255E206E0);
    v17 = sub_22F98DAA4();
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v6, 1, v17) == 1)
    {
      return (id)sub_22F87AC20((uint64_t)v6, (uint64_t *)&unk_255E206E0);
    }
    else
    {
      v20 = sub_22F98DA8C();
      v21 = sub_22F98F0A0();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v22 = 0;
        _os_log_impl(&dword_22F85B000, v20, v21, "inCallHandler - privacyAuthenticateIfNeeded returned", v22, 2u);
        MEMORY[0x2348A6838](v22, -1, -1);
      }

      return (id)(*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v6, v17);
    }
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    v24 = 1;
    swift_retain();
    sub_22F98DBAC();
    return objc_msgSend(a2, sel_closePINUI);
  }
}

uint64_t sub_22F871688()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t result;
  uint64_t v10;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB28 != -1)
    swift_once();
  v3 = __swift_project_value_buffer(v0, (uint64_t)qword_255E29628);
  sub_22F87ABDC(v3, (uint64_t)v2, (uint64_t *)&unk_255E206E0);
  v4 = sub_22F98DAA4();
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v4) == 1)
  {
    sub_22F87AC20((uint64_t)v2, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    v6 = sub_22F98DA8C();
    v7 = sub_22F98F0A0();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_22F85B000, v6, v7, "PrivacyLock: Evaluating already released", v8, 2u);
      MEMORY[0x2348A6838](v8, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v2, v4);
  }
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    *(_BYTE *)(result + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_evaluating) = 0;
    return swift_release();
  }
  return result;
}

uint64_t sub_22F871838()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  id v12;
  uint64_t v13;
  char *v14;
  char *v15;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  char *v21;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v20 - v6;
  if (qword_255E1DB28 != -1)
    swift_once();
  v8 = __swift_project_value_buffer(v2, (uint64_t)qword_255E29628);
  sub_22F87ABDC(v8, (uint64_t)v7, (uint64_t *)&unk_255E206E0);
  v9 = sub_22F98DAA4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v7, 1, v9) == 1)
  {
    sub_22F87AC20((uint64_t)v7, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858(v1, 0xD000000000000011, 0x800000022F99DE60, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  if (v21)
  {
    v21[16] = 0;
    v12 = objc_allocWithZone((Class)type metadata accessor for PrivacyAuthenticatorWrapper());
    swift_retain();
    v13 = swift_retain();
    v14 = sub_22F971114(v13, v1, (uint64_t)&off_24FD1E038);
    swift_getKeyPath();
    swift_getKeyPath();
    v21 = v14;
    swift_retain();
    sub_22F98DBAC();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_22F98DBA0();
    swift_release();
    swift_release();
    v15 = v21;
    if (v21)
    {
      sub_22F970778();

    }
    return swift_release();
  }
  else
  {
    sub_22F87ABDC(v8, (uint64_t)v5, (uint64_t *)&unk_255E206E0);
    if (v11(v5, 1, v9) == 1)
    {
      return sub_22F87AC20((uint64_t)v5, (uint64_t *)&unk_255E206E0);
    }
    else
    {
      v17 = sub_22F98DA8C();
      v18 = sub_22F98F0A0();
      if (os_log_type_enabled(v17, v18))
      {
        v19 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v19 = 0;
        _os_log_impl(&dword_22F85B000, v17, v18, "No auth model", v19, 2u);
        MEMORY[0x2348A6838](v19, -1, -1);
      }

      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v5, v9);
    }
  }
}

uint64_t sub_22F871B74()
{
  sub_22F98EAF4();
  sub_22F98DE10();
  return swift_release();
}

uint64_t sub_22F871BCC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_22F98DBAC();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_22F98DBAC();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_22F98DBAC();
  return sub_22F868614();
}

uint64_t sub_22F871CC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  uint64_t v14;
  _QWORD aBlock[6];

  v1 = sub_22F98EB84();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&aBlock[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_22F98EB9C();
  v6 = *(_QWORD *)(v5 - 8);
  result = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_isPINPrivacyLockEnabled) == 1)
  {
    if (qword_255E1DB70 != -1)
      swift_once();
    swift_beginAccess();
    v10 = *(void **)((char *)off_255E211B8 + OBJC_IVAR____TtC19ContactlessReaderUI10AppManager_interruptionMonitor);
    if (!v10
      || (swift_getKeyPath(),
          swift_getKeyPath(),
          v11 = v10,
          sub_22F98DBA0(),
          v11,
          swift_release(),
          result = swift_release(),
          LOBYTE(aBlock[0])))
    {
      sub_22F879058();
      v14 = sub_22F98F0F4();
      aBlock[4] = sub_22F87A644;
      aBlock[5] = v0;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_22F8644F0;
      aBlock[3] = &block_descriptor_121;
      v12 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      sub_22F98EB90();
      aBlock[0] = MEMORY[0x24BEE4AF8];
      sub_22F862548((unint64_t *)&qword_255E22DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E22070);
      sub_22F87AA84((unint64_t *)&qword_255E22DB0, (uint64_t *)&unk_255E22070, MEMORY[0x24BEE12C8]);
      sub_22F98F274();
      v13 = (void *)v14;
      MEMORY[0x2348A5CD4](0, v9, v4, v12);
      _Block_release(v12);

      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    }
  }
  return result;
}

void sub_22F871F70(int a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  void *v19;
  NSObject *v20;
  os_log_type_t v21;
  _DWORD *v22;
  void *v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint8_t *v27;
  uint8_t *v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint8_t *v32;
  uint8_t *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  void *v40;
  uint64_t v41;
  int v42;
  uint64_t v43;

  v4 = v3;
  v41 = a2;
  v42 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v35 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v35 - v13;
  if (qword_255E1DB28 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v6, (uint64_t)qword_255E29628);
  sub_22F87ABDC(v15, (uint64_t)v14, (uint64_t *)&unk_255E206E0);
  v16 = sub_22F98DAA4();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (v18(v14, 1, v16) == 1)
  {
    sub_22F87AC20((uint64_t)v14, (uint64_t *)&unk_255E206E0);
    if ((v42 & 1) == 0)
    {
LABEL_5:
      switch(v41)
      {
        case 5u:
          swift_getKeyPath();
          swift_getKeyPath();
          sub_22F98DBA0();
          swift_release();
          swift_release();
          v23 = (void *)v43;
          if (v43)
          {
            sub_22F970464();

          }
          sub_22F86F8AC();
          break;
        case 4u:
          swift_getKeyPath();
          swift_getKeyPath();
          sub_22F98DBA0();
          swift_release();
          swift_release();
          if ((v43 & 1) == 0)
            sub_22F86EF98();
          sub_22F872668();
          break;
        case 2u:
          if (*(_BYTE *)(v4 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_incomingCallAccepted) == 1)
          {
            swift_getKeyPath();
            swift_getKeyPath();
            sub_22F98DBA0();
            swift_release();
            swift_release();
            if ((v43 & 1) == 0)
              sub_22F86EF98();
          }
          swift_getKeyPath();
          swift_getKeyPath();
          sub_22F98DBA0();
          swift_release();
          swift_release();
          v19 = (void *)v43;
          if (v43)
          {
            sub_22F9705E4();

          }
          break;
        default:
          sub_22F87ABDC(v15, (uint64_t)v9, (uint64_t *)&unk_255E206E0);
          if (v18(v9, 1, v16) == 1)
          {
            sub_22F87AC20((uint64_t)v9, (uint64_t *)&unk_255E206E0);
          }
          else
          {
            v24 = sub_22F98DA8C();
            v25 = sub_22F98F0A0();
            if (os_log_type_enabled(v24, v25))
            {
              v26 = v17;
              v27 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)v27 = 0;
              _os_log_impl(&dword_22F85B000, v24, v25, "didComplete default handling", v27, 2u);
              v28 = v27;
              v17 = v26;
              MEMORY[0x2348A6838](v28, -1, -1);
            }

            (*(void (**)(char *, uint64_t))(v17 + 8))(v9, v16);
          }
          break;
      }
      *(_BYTE *)(v4 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_evaluating) = 0;
      sub_22F872828(a3);
      return;
    }
  }
  else
  {
    v39 = v9;
    v40 = a3;
    v20 = sub_22F98DA8C();
    v21 = sub_22F98F0A0();
    if (os_log_type_enabled(v20, v21))
    {
      v38 = v4;
      v22 = (_DWORD *)swift_slowAlloc();
      v36 = swift_slowAlloc();
      v43 = v36;
      *v22 = 136315138;
      v37 = v17;
      __asm { BR              X10 }
    }

    (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v16);
    v9 = v39;
    a3 = v40;
    if ((v42 & 1) == 0)
      goto LABEL_5;
  }
  sub_22F87ABDC(v15, (uint64_t)v12, (uint64_t *)&unk_255E206E0);
  if (v18(v12, 1, v16) == 1)
  {
    sub_22F87AC20((uint64_t)v12, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    v29 = sub_22F98DA8C();
    v30 = sub_22F98F0A0();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = v17;
      v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v32 = 0;
      _os_log_impl(&dword_22F85B000, v29, v30, "didComplete success", v32, 2u);
      v33 = v32;
      v17 = v31;
      MEMORY[0x2348A6838](v33, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v16);
  }
  *(_BYTE *)(v4 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_didMerchantAuthorize) = 1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  v34 = (void *)v43;
  if (v43)
  {
    sub_22F970464();

  }
  *(_BYTE *)(v4 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_evaluating) = 0;
  sub_22F86F8AC();
}

void sub_22F872668()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  char v10;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB28 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_255E29628);
  sub_22F87ABDC(v5, (uint64_t)v4, (uint64_t *)&unk_255E206E0);
  v6 = sub_22F98DAA4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_22F87AC20((uint64_t)v4, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858(v1, 0xD000000000000014, 0x800000022F99DCB0, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  v10 = 1;
  swift_retain();
  sub_22F98DBAC();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  v8 = v9;
  if (v9)
  {
    sub_22F970CC8();

  }
}

void sub_22F872828(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  id v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  id v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v38 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v38 - v11;
  if (qword_255E1DB00 != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v4, (uint64_t)qword_255E295B0);
  sub_22F87ABDC(v13, (uint64_t)v12, (uint64_t *)&unk_255E206E0);
  v14 = sub_22F98DAA4();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v12, 1, v14) == 1)
  {
    sub_22F87AC20((uint64_t)v12, (uint64_t *)&unk_255E206E0);
    if (a1)
      goto LABEL_5;
LABEL_10:
    v22 = *(void **)(v2 + 16);
    if (v22)
      objc_msgSend(v22, sel_pinAuthResultWithError_cancelsFlow_, 0, 0);
    return;
  }
  sub_22F863858(v2, 0xD000000000000012, 0x800000022F99DCD0, 0, 0xE000000000000000);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
  if (!a1)
    goto LABEL_10;
LABEL_5:
  v41 = (uint64_t)a1;
  v17 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E249C0);
  type metadata accessor for LAError(0);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v18 = (void *)v40;
    sub_22F93328C();
    if (v19)
    {
      v20 = *(void **)(v2 + 16);
      if (v20)
      {
        swift_unknownObjectRetain();
        v21 = (void *)sub_22F98ED94();
        swift_bridgeObjectRelease();
        objc_msgSend(v20, sel_pinAuthResultWithError_cancelsFlow_, v21, 0);

        swift_unknownObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();

      }
      return;
    }
    sub_22F87ABDC(v13, (uint64_t)v10, (uint64_t *)&unk_255E206E0);
    if (v16(v10, 1, v14) == 1)
    {

      v26 = (uint64_t)v10;
      goto LABEL_18;
    }
    v31 = v18;
    v32 = sub_22F98DA8C();
    v33 = sub_22F98F088();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      v39 = swift_slowAlloc();
      v40 = (uint64_t)v31;
      v41 = v39;
      *(_DWORD *)v34 = 136315138;
      v38 = v34 + 4;
      sub_22F862548(&qword_255E1DFF0, (uint64_t (*)(uint64_t))type metadata accessor for LAError, (uint64_t)&unk_22F991988);
      v35 = sub_22F98F49C();
      v40 = sub_22F878880(v35, v36, &v41);
      sub_22F98F208();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22F85B000, v32, v33, "Could not parse LAError error: [%s]", v34, 0xCu);
      v37 = v39;
      swift_arrayDestroy();
      MEMORY[0x2348A6838](v37, -1, -1);
      MEMORY[0x2348A6838](v34, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v14);
  }
  else
  {
    swift_getErrorValue();
    v23 = sub_22F98F49C();
    v25 = v24;
    sub_22F87ABDC(v13, (uint64_t)v7, (uint64_t *)&unk_255E206E0);
    if (v16(v7, 1, v14) == 1)
    {
      swift_bridgeObjectRelease();
      v26 = (uint64_t)v7;
LABEL_18:
      sub_22F87AC20(v26, (uint64_t *)&unk_255E206E0);
      return;
    }
    swift_bridgeObjectRetain();
    v27 = sub_22F98DA8C();
    v28 = sub_22F98F088();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc();
      v30 = swift_slowAlloc();
      v41 = v30;
      *(_DWORD *)v29 = 136315138;
      v39 = (uint64_t)(v29 + 4);
      swift_bridgeObjectRetain();
      v40 = sub_22F878880(v23, v25, &v41);
      sub_22F98F208();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_22F85B000, v27, v28, "Could not cast error to LAError: [%s]", v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348A6838](v30, -1, -1);
      MEMORY[0x2348A6838](v29, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    (*(void (**)(char *, uint64_t))(v15 + 8))(v7, v14);
  }
}

uint64_t sub_22F872DBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  _QWORD v22[3];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1E498);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EDB8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v22 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB28 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v12, (uint64_t)qword_255E29628);
  sub_22F87ABDC(v15, (uint64_t)v14, (uint64_t *)&unk_255E206E0);
  v16 = sub_22F98DAA4();
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16) == 1)
  {
    sub_22F87AC20((uint64_t)v14, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858(v1, 0xD000000000000012, 0x800000022F99DC30, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v16);
  }
  sub_22F98DA50();
  swift_retain();
  sub_22F98DA38();
  swift_release();
  v18 = v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_bsActionContinuity;
  swift_beginAccess();
  sub_22F87ABDC(v18, (uint64_t)v11, &qword_255E1EDB8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v11, 1, v2))
  {
    sub_22F87AC20((uint64_t)v11, &qword_255E1EDB8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v11, v2);
    sub_22F87AC20((uint64_t)v11, &qword_255E1EDB8);
    sub_22F87A7E4();
    v19 = swift_allocError();
    *v20 = 1;
    v22[0] = v19;
    sub_22F98EF98();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v9, 1, 1, v2);
  swift_beginAccess();
  sub_22F87A79C((uint64_t)v9, v18);
  return swift_endAccess();
}

uint64_t sub_22F8730C4(uint64_t result)
{
  char v1;

  if (*(_BYTE *)(result + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_incomingCallAccepted) == 1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_22F98DBA0();
    swift_release();
    result = swift_release();
    if ((v1 & 1) == 0)
      return sub_22F86EF98();
  }
  return result;
}

void sub_22F873154(uint64_t a1, double a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  _QWORD v9[6];

  v4 = (void *)objc_opt_self();
  v5 = swift_allocObject();
  swift_weakInit();
  v9[4] = sub_22F87B25C;
  v9[5] = v5;
  v9[0] = MEMORY[0x24BDAC760];
  v9[1] = 1107296256;
  v9[2] = sub_22F8736DC;
  v9[3] = &block_descriptor_258;
  v6 = _Block_copy(v9);
  swift_release();
  v7 = objc_msgSend(v4, sel_scheduledTimerWithTimeInterval_repeats_block_, 0, v6, a2);
  _Block_release(v6);
  v8 = *(void **)(a1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_pinEntryTimer);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_pinEntryTimer) = v7;

}

uint64_t sub_22F873250(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t Strong;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v15;
  _QWORD aBlock[6];

  v3 = sub_22F98EB84();
  v15 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&aBlock[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_22F98EB9C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v11 = *(void **)(Strong + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_pinEntryTimer);
    *(_QWORD *)(Strong + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_pinEntryTimer) = 0;
    swift_release();

  }
  sub_22F879058();
  v12 = (void *)sub_22F98F0F4();
  aBlock[4] = sub_22F87B264;
  aBlock[5] = a2;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22F8644F0;
  aBlock[3] = &block_descriptor_261;
  v13 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_22F98EB90();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_22F862548((unint64_t *)&qword_255E22DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E22070);
  sub_22F87AA84((unint64_t *)&qword_255E22DB0, (uint64_t *)&unk_255E22070, MEMORY[0x24BEE12C8]);
  sub_22F98F274();
  MEMORY[0x2348A5CD4](0, v9, v5, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_22F873478()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v16[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB00 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_255E295B0);
  sub_22F87ABDC(v5, (uint64_t)v4, (uint64_t *)&unk_255E206E0);
  v6 = sub_22F98DAA4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_22F87AC20((uint64_t)v4, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858(v1, 0xD00000000000001CLL, 0x800000022F99DF40, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  *(_QWORD *)(v1 + 24) = 0;
  v8 = v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_pinController;
  sub_22F87A750(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_pinController, (uint64_t)v16);
  v9 = v17;
  v10 = v18;
  __swift_project_boxed_opaque_existential_1(v16, v17);
  (*(void (**)(uint64_t, uint64_t))(v10 + 56))(v9, v10);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
  sub_22F87A750(v8, (uint64_t)v16);
  v11 = v17;
  v12 = v18;
  __swift_project_boxed_opaque_existential_1(v16, v17);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v12);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
  if ((v13 & 1) != 0)
  {
    sub_22F864270(6);
    *(_BYTE *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_pinCaptureState) = 6;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  v16[0] = 0;
  swift_retain();
  sub_22F98DBAC();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  return sub_22F879984(2);
}

void sub_22F8736DC(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t sub_22F87372C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_22F98DBAC();
}

uint64_t sub_22F8737AC(int a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  const void *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  void (*v27)(char *, uint64_t);
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t (*v30)(void (*)(_QWORD, _QWORD), uint64_t, uint64_t);
  int v31;
  char v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  void *v52;
  void *v53;
  char *v54;
  char *v55;
  uint64_t (*v56)(char *, uint64_t);
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  int v66;
  char *v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t);
  uint64_t aBlock;
  uint64_t v71;
  uint64_t (*v72)(uint64_t);
  void *v73;
  uint64_t (*v74)();
  uint64_t v75;

  v68 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v2 = MEMORY[0x24BDAC7A8](v68);
  v4 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v2);
  v7 = (char *)&v56 - v6;
  MEMORY[0x24BDAC7A8](v5);
  v69 = (void (*)(char *, uint64_t))((char *)&v56 - v8);
  v9 = sub_22F98EB84();
  v67 = *(char **)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_22F98EB9C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v17 = result;
    v64 = v7;
    v63 = v4;
    v62 = sub_22F879058();
    v18 = (void *)sub_22F98F0F4();
    v19 = swift_allocObject();
    *(_QWORD *)(v19 + 16) = v17;
    v66 = a1;
    *(_BYTE *)(v19 + 24) = a1 & 1;
    v74 = sub_22F87AE80;
    v75 = v19;
    aBlock = MEMORY[0x24BDAC760];
    v71 = 1107296256;
    v72 = sub_22F8644F0;
    v73 = &block_descriptor_244;
    v20 = _Block_copy(&aBlock);
    v65 = v17;
    swift_retain();
    swift_release();
    sub_22F98EB90();
    aBlock = MEMORY[0x24BEE4AF8];
    v21 = sub_22F862548((unint64_t *)&qword_255E22DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E22070);
    v23 = sub_22F87AA84((unint64_t *)&qword_255E22DB0, (uint64_t *)&unk_255E22070, MEMORY[0x24BEE12C8]);
    v60 = v22;
    v59 = v23;
    v61 = v21;
    sub_22F98F274();
    MEMORY[0x2348A5CD4](0, v15, v11, v20);
    v24 = v20;
    v25 = v9;
    _Block_release(v24);

    v26 = (void (*)(char *, uint64_t))*((_QWORD *)v67 + 1);
    v67 = v11;
    v26(v11, v9);
    v27 = *(void (**)(char *, uint64_t))(v13 + 8);
    v58 = v15;
    v27(v15, v12);
    if (qword_255E1DB00 != -1)
      swift_once();
    v57 = __swift_project_value_buffer(v68, (uint64_t)qword_255E295B0);
    v28 = v69;
    sub_22F87ABDC(v57, (uint64_t)v69, (uint64_t *)&unk_255E206E0);
    v29 = sub_22F98DAA4();
    v68 = *(_QWORD *)(v29 - 8);
    v30 = *(uint64_t (**)(void (*)(_QWORD, _QWORD), uint64_t, uint64_t))(v68 + 48);
    v31 = v30((void (*)(_QWORD, _QWORD))v28, 1, v29);
    v32 = v66;
    if (v31 == 1)
    {
      sub_22F87AC20((uint64_t)v28, (uint64_t *)&unk_255E206E0);
    }
    else
    {
      v33 = sub_22F98DA8C();
      v34 = sub_22F98F0A0();
      if (os_log_type_enabled(v33, v34))
      {
        v35 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v35 = 67109120;
        v32 = v66;
        LODWORD(aBlock) = v66 & 1;
        sub_22F98F208();
        _os_log_impl(&dword_22F85B000, v33, v34, "VoiceOver running change, running: %{BOOL}d", v35, 8u);
        v36 = v35;
        v25 = v9;
        MEMORY[0x2348A6838](v36, -1, -1);
      }

      (*(void (**)(_QWORD, uint64_t))(v68 + 8))(v69, v29);
    }
    swift_getKeyPath();
    swift_getKeyPath();
    v37 = v65;
    sub_22F98DBA0();
    swift_release();
    swift_release();
    if (aBlock == 1
      && (v32 & 1) != 0
      && (swift_getKeyPath(),
          swift_getKeyPath(),
          sub_22F98DBA0(),
          swift_release(),
          swift_release(),
          v38 = v75,
          sub_22F87A26C(aBlock, v71, (uint64_t)v72, (uint64_t)v73, (uint64_t)v74, v75),
          !v38))
    {
      v39 = v57;
      v40 = (uint64_t)v64;
      sub_22F87ABDC(v57, (uint64_t)v64, (uint64_t *)&unk_255E206E0);
      v41 = v30((void (*)(_QWORD, _QWORD))v40, 1, v29);
      v69 = v26;
      v56 = (uint64_t (*)(char *, uint64_t))v27;
      if (v41 == 1)
      {
        sub_22F87AC20(v40, (uint64_t *)&unk_255E206E0);
      }
      else
      {
        v42 = sub_22F98DA8C();
        v43 = sub_22F98F07C();
        if (os_log_type_enabled(v42, v43))
        {
          v44 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v44 = 0;
          _os_log_impl(&dword_22F85B000, v42, v43, "VO activated from AX: exiting from AX", v44, 2u);
          MEMORY[0x2348A6838](v44, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v68 + 8))(v64, v29);
      }
      v45 = *(_QWORD *)(v37 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_tapCounterTimer);
      *(_BYTE *)(v45 + 25) = 0;
      v46 = *(void **)(v45 + 48);
      swift_retain();
      objc_msgSend(v46, sel_invalidate);
      *(_BYTE *)(v45 + 24) = 0;
      swift_release();
      v47 = *(_QWORD *)(v37 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_removeDigitTimer);
      *(_BYTE *)(v47 + 25) = 0;
      v48 = *(void **)(v47 + 48);
      swift_retain();
      objc_msgSend(v48, sel_invalidate);
      *(_BYTE *)(v47 + 24) = 0;
      swift_release();
      v49 = (uint64_t)v63;
      sub_22F87ABDC(v39, (uint64_t)v63, (uint64_t *)&unk_255E206E0);
      if (v30((void (*)(_QWORD, _QWORD))v49, 1, v29) == 1)
      {
        sub_22F87AC20(v49, (uint64_t *)&unk_255E206E0);
      }
      else
      {
        sub_22F863858(v37, 0xD000000000000017, 0x800000022F99D730, 0, 0xE000000000000000);
        (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v49, v29);
      }
      v50 = OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_instructionsTimer;
      objc_msgSend(*(id *)(v37 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_instructionsTimer), sel_invalidate, v56);
      v51 = *(void **)(v37 + v50);
      *(_QWORD *)(v37 + v50) = 0;

      if (*(_QWORD *)(v37 + 104))
      {
        swift_retain();
        sub_22F9762D4();
        swift_release();
      }
      sub_22F86CE58();
      v52 = (void *)sub_22F98F0F4();
      v74 = sub_22F87AE8C;
      v75 = v37;
      aBlock = MEMORY[0x24BDAC760];
      v71 = 1107296256;
      v72 = sub_22F8644F0;
      v73 = &block_descriptor_247;
      v53 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      v54 = v58;
      sub_22F98EB90();
      aBlock = MEMORY[0x24BEE4AF8];
      v55 = v67;
      sub_22F98F274();
      MEMORY[0x2348A5CD4](0, v54, v55, v53);
      _Block_release(v53);
      swift_release();

      v69(v55, v25);
      return v56(v54, v12);
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_22F873FF4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_22F98DBAC();
  return sub_22F868614();
}

uint64_t sub_22F874068()
{
  sub_22F98EAF4();
  sub_22F98DE10();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_22F98DBAC();
}

uint64_t sub_22F874104()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_22F98DBAC();
  return sub_22F868614();
}

uint64_t sub_22F874174()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _BYTE v9[16];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v9[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_255E1DB00 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_255E295B0);
  sub_22F87ABDC(v5, (uint64_t)v4, (uint64_t *)&unk_255E206E0);
  v6 = sub_22F98DAA4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_22F87AC20((uint64_t)v4, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858(v1, 0xD000000000000019, 0x800000022F99DAF0, 0, 0xE000000000000000);
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v4, v6);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  result = swift_release();
  *(_BYTE *)(v1 + 184) = v9[15];
  *(_BYTE *)(v1 + 185) = 0;
  *(_BYTE *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_tapCounterTimer) + 25) = 1;
  *(_BYTE *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_removeDigitTimer) + 25) = 1;
  *(_QWORD *)(v1 + 32) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_drawNumberFailures) = 0;
  return result;
}

uint64_t sub_22F874320()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  char *v25;
  uint64_t v26;
  uint64_t result;
  char v28;
  unsigned __int8 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  __int128 aBlock;
  uint64_t (*v39)(uint64_t);
  void *v40;
  uint64_t (*v41)();
  uint64_t v42;

  v1 = v0;
  v2 = sub_22F98EB84();
  v36 = *(_QWORD *)(v2 - 8);
  v37 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v35 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_22F98EB9C();
  v33 = *(_QWORD *)(v4 - 8);
  v34 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v32 - v11;
  if (qword_255E1DB00 != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v7, (uint64_t)qword_255E295B0);
  sub_22F87ABDC(v13, (uint64_t)v12, (uint64_t *)&unk_255E206E0);
  v14 = sub_22F98DAA4();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v12, 1, v14) == 1)
  {
    sub_22F87AC20((uint64_t)v12, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858(v1, 0xD000000000000018, 0x800000022F99DBF0, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
  }
  v17 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_tapCounterTimer);
  *(_BYTE *)(v17 + 25) = 0;
  v18 = *(void **)(v17 + 48);
  swift_retain();
  objc_msgSend(v18, sel_invalidate);
  *(_BYTE *)(v17 + 24) = 0;
  swift_release();
  v19 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_removeDigitTimer);
  *(_BYTE *)(v19 + 25) = 0;
  v20 = *(void **)(v19 + 48);
  swift_retain();
  objc_msgSend(v20, sel_invalidate);
  *(_BYTE *)(v19 + 24) = 0;
  swift_release();
  sub_22F87ABDC(v13, (uint64_t)v10, (uint64_t *)&unk_255E206E0);
  if (v16(v10, 1, v14) == 1)
  {
    sub_22F87AC20((uint64_t)v10, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858(v1, 0xD000000000000017, 0x800000022F99D730, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v14);
  }
  v21 = OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_instructionsTimer;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_instructionsTimer), sel_invalidate);
  v22 = *(void **)(v1 + v21);
  *(_QWORD *)(v1 + v21) = 0;

  swift_getKeyPath();
  swift_getKeyPath();
  LOBYTE(aBlock) = 1;
  swift_retain();
  sub_22F98DBAC();
  sub_22F879058();
  v23 = (void *)sub_22F98F0F4();
  v41 = sub_22F87A6A8;
  v42 = v1;
  *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  v39 = sub_22F8644F0;
  v40 = &block_descriptor_138;
  v24 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  sub_22F98EB90();
  *(_QWORD *)&aBlock = MEMORY[0x24BEE4AF8];
  sub_22F862548((unint64_t *)&qword_255E22DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E22070);
  sub_22F87AA84((unint64_t *)&qword_255E22DB0, (uint64_t *)&unk_255E22070, MEMORY[0x24BEE12C8]);
  v25 = v35;
  v26 = v37;
  sub_22F98F274();
  MEMORY[0x2348A5CD4](0, v6, v25, v24);
  _Block_release(v24);

  (*(void (**)(char *, uint64_t))(v36 + 8))(v25, v26);
  result = (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v6, v34);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_accessibilityEntryType) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_drawNumberFailures) = 0;
  if (*(_QWORD *)(v1 + 104))
  {
    type metadata accessor for AudioFactory();
    v28 = *(_BYTE *)(v1 + 187);
    v29 = *(_BYTE *)(v1 + 186);
    swift_retain();
    sub_22F8D7854(6, v29, v28, &aBlock);
    v30 = swift_allocObject();
    swift_weakInit();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E1ED38);
    v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_22F991B40;
    sub_22F87ABDC((uint64_t)&aBlock, v31 + 32, &qword_255E1ED48);
    swift_retain();
    sub_22F975EF4(v31, 2, (void (*)(uint64_t))sub_22F87A6D0, v30);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_22F87AC20((uint64_t)&aBlock, &qword_255E1ED48);
    return swift_release();
  }
  return result;
}

uint64_t sub_22F87488C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t Strong;
  int v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v16;
  uint64_t v17;
  _QWORD aBlock[6];

  v2 = sub_22F98EB84();
  v17 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_22F98EB9C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v10 = *(unsigned __int8 *)(Strong + 184);
    swift_release();
    if (v10 == 1)
    {
      swift_beginAccess();
      v11 = swift_weakLoadStrong();
      if (v11)
      {
        v12 = *(void **)(v11 + 16);
        swift_unknownObjectRetain();
        swift_release();
        if (v12)
        {
          objc_msgSend(v12, sel_setVoiceOverWithEnabled_, 1);
          swift_unknownObjectRelease();
        }
      }
    }
  }
  sub_22F879058();
  v13 = (void *)sub_22F98F0F4();
  aBlock[4] = sub_22F87A6D8;
  aBlock[5] = a1;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22F8644F0;
  aBlock[3] = &block_descriptor_142;
  v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_22F98EB90();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_22F862548((unint64_t *)&qword_255E22DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E22070);
  sub_22F87AA84((unint64_t *)&qword_255E22DB0, (uint64_t *)&unk_255E22070, MEMORY[0x24BEE12C8]);
  sub_22F98F274();
  MEMORY[0x2348A5CD4](0, v8, v4, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v17 + 8))(v4, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_22F874B04()
{
  uint64_t result;

  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_22F98DBAC();
    sub_22F868614();
    swift_release();
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_22F98DBAC();
  }
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    return sub_22F98DBAC();
  }
  return result;
}

void sub_22F874C58(_BYTE *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  void *v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  char v26;
  unsigned __int8 v27;
  uint64_t v28;
  char *v29;
  uint64_t *v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  _OWORD v35[3];
  char v36[8];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v34 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v34 - v11;
  if (qword_255E1DB00 != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v4, (uint64_t)qword_255E295B0);
  sub_22F87ABDC(v13, (uint64_t)v12, (uint64_t *)&unk_255E206E0);
  v14 = sub_22F98DAA4();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v12, 1, v14) == 1)
  {
    sub_22F87AC20((uint64_t)v12, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858(v2, 0xD00000000000001CLL, 0x800000022F99DB10, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  if ((v35[0] & 1) == 0)
  {
    sub_22F87ABDC(v13, (uint64_t)v10, (uint64_t *)&unk_255E206E0);
    if (v16(v10, 1, v14) == 1)
    {
      sub_22F87AC20((uint64_t)v10, (uint64_t *)&unk_255E206E0);
    }
    else
    {
      sub_22F863858(v2, 0xD000000000000017, 0x800000022F99D730, 0, 0xE000000000000000);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v14);
    }
    v17 = OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_instructionsTimer;
    objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_instructionsTimer), sel_invalidate);
    v18 = *(void **)(v2 + v17);
    *(_QWORD *)(v2 + v17) = 0;

    v19 = *a1;
    if (v19 == 6)
    {
      v21 = *(_QWORD *)(v2 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_tapCounterTimer);
      v22 = *(void **)(v21 + 48);
      swift_retain();
      objc_msgSend(v22, sel_invalidate);
      *(_BYTE *)(v21 + 24) = 0;
      swift_release();
      sub_22F87B2B4((uint64_t)(a1 + 8), (uint64_t)v36, &qword_255E1ED68);
      sub_22F87B2B4((uint64_t)v36, (uint64_t)v35, &qword_255E1ED68);
      if (*(_QWORD *)&v35[0] && *(_QWORD *)(*(_QWORD *)&v35[0] + 16))
        v23 = *(_QWORD *)(*(_QWORD *)&v35[0] + 32);
      else
        v23 = 0;
      sub_22F8756CC(v23);
    }
    else
    {
      if (v19 == 2)
      {
        v24 = *(_QWORD *)(v2 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_tapCounterTimer);
        v25 = *(void **)(v24 + 48);
        swift_retain();
        objc_msgSend(v25, sel_invalidate);
        *(_BYTE *)(v24 + 24) = 0;
        swift_release();
        if (!*(_QWORD *)(v2 + 104))
          return;
        type metadata accessor for AudioFactory();
        v26 = *(_BYTE *)(v2 + 187);
        v27 = *(_BYTE *)(v2 + 186);
        swift_retain();
        sub_22F8D7854(4, v27, v26, v35);
        __swift_instantiateConcreteTypeFromMangledName(&qword_255E1ED38);
        v28 = swift_allocObject();
        *(_OWORD *)(v28 + 16) = xmmword_22F991B40;
        sub_22F87ABDC((uint64_t)v35, v28 + 32, &qword_255E1ED48);
        sub_22F975EF4(v28, 2, 0, 0);
        swift_release();
        swift_bridgeObjectRelease();
        v29 = (char *)v35;
        v30 = &qword_255E1ED48;
        goto LABEL_24;
      }
      if (!*a1)
      {
        v20 = *(_QWORD *)(v2 + 104);
        if (v20)
        {
          swift_beginAccess();
          if ((sub_22F976DB4(1, *(_QWORD *)(v20 + 48)) & 1) != 0)
          {
            swift_retain();
            sub_22F9762D4();
            swift_release();
          }
        }
        sub_22F875150();
        return;
      }
      sub_22F87ABDC(v13, (uint64_t)v7, (uint64_t *)&unk_255E206E0);
      if (v16(v7, 1, v14) == 1)
      {
        v30 = (uint64_t *)&unk_255E206E0;
        v29 = v7;
LABEL_24:
        sub_22F87AC20((uint64_t)v29, v30);
        return;
      }
      v31 = sub_22F98DA8C();
      v32 = sub_22F98F07C();
      if (os_log_type_enabled(v31, v32))
      {
        v33 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v33 = 0;
        _os_log_impl(&dword_22F85B000, v31, v32, "executeGesture - unexpected gesture", v33, 2u);
        MEMORY[0x2348A6838](v33, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v15 + 8))(v7, v14);
    }
  }
}

uint64_t sub_22F875150()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  unsigned __int8 v21;
  uint64_t v22;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  unsigned __int8 v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[6];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = (char *)&v32 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v32 - v9;
  if (qword_255E1DB00 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v2, (uint64_t)qword_255E295B0);
  sub_22F87ABDC(v11, (uint64_t)v10, (uint64_t *)&unk_255E206E0);
  v12 = sub_22F98DAA4();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v14(v10, 1, v12) == 1)
  {
    sub_22F87AC20((uint64_t)v10, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858(v1, 0xD000000000000017, 0x800000022F99DB30, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
  }
  v15 = OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_tapCounterTimer;
  if (*(_BYTE *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_tapCounterTimer) + 25) == 1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_22F98DBA0();
    swift_release();
    swift_release();
    if (v34[0] <= 11)
    {
      v16 = *(_QWORD *)(v1 + 24);
      if (v16 > 9)
      {
        if (*(_QWORD *)(v1 + 104))
        {
          type metadata accessor for AudioFactory();
          v27 = *(_BYTE *)(v1 + 186);
          swift_retain();
          sub_22F8D75F8(4, v27, (uint64_t)v34);
          __swift_instantiateConcreteTypeFromMangledName(&qword_255E1ED38);
          v28 = swift_allocObject();
          *(_OWORD *)(v28 + 16) = xmmword_22F991B40;
          sub_22F87ABDC((uint64_t)v34, v28 + 32, &qword_255E1ED48);
          sub_22F975EF4(v28, 0, 0, 0);
          swift_release();
          swift_bridgeObjectRelease();
          sub_22F87AC20((uint64_t)v34, &qword_255E1ED48);
        }
      }
      else
      {
        *(_QWORD *)(v1 + 24) = v16 + 1;
      }
      *(_BYTE *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_drawNumberAllowed) = 0;
      swift_retain();
      swift_retain();
      sub_22F89160C((uint64_t)sub_22F87A610, v1);
      swift_release();
      return swift_release();
    }
    v18 = *(_QWORD *)(v1 + v15);
    v19 = *(void **)(v18 + 48);
    swift_retain();
    objc_msgSend(v19, sel_invalidate);
    *(_BYTE *)(v18 + 24) = 0;
    swift_release();
    *(_BYTE *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_drawNumberAllowed) = 1;
    if (*(_QWORD *)(v1 + 104))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_255E1ED38);
      v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_22F991B50;
      v33 = v13;
      type metadata accessor for AudioFactory();
      v21 = *(_BYTE *)(v1 + 186);
      swift_retain();
      sub_22F8D75F8(5, v21, v20 + 32);
      sub_22F8D7854(5, *(_BYTE *)(v1 + 186), *(_BYTE *)(v1 + 187), (_OWORD *)(v20 + 80));
      v22 = swift_allocObject();
      swift_weakInit();
      swift_retain();
      sub_22F975EF4(v20, 2, (void (*)(uint64_t))sub_22F87A4DC, v22);
      swift_release();
      swift_bridgeObjectRelease();
      v13 = v33;
      swift_release_n();
    }
    sub_22F87ABDC(v11, (uint64_t)v8, (uint64_t *)&unk_255E206E0);
    if (v14(v8, 1, v12) == 1)
    {
      v17 = (uint64_t)v8;
      return sub_22F87AC20(v17, (uint64_t *)&unk_255E206E0);
    }
    v29 = sub_22F98DA8C();
    v30 = sub_22F98F07C();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v31 = 0;
      _os_log_impl(&dword_22F85B000, v29, v30, "digit selection - maxDigitReached", v31, 2u);
      MEMORY[0x2348A6838](v31, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v8, v12);
  }
  else
  {
    sub_22F87ABDC(v11, (uint64_t)v5, (uint64_t *)&unk_255E206E0);
    if (v14(v5, 1, v12) == 1)
    {
      v17 = (uint64_t)v5;
      return sub_22F87AC20(v17, (uint64_t *)&unk_255E206E0);
    }
    v24 = sub_22F98DA8C();
    v25 = sub_22F98F07C();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v26 = 0;
      _os_log_impl(&dword_22F85B000, v24, v25, "digit selection - timer not enabled", v26, 2u);
      MEMORY[0x2348A6838](v26, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v5, v12);
  }
}

void sub_22F8756CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(_BYTE *, uint64_t, uint64_t);
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  unsigned __int8 v18;
  uint64_t v19;
  _BYTE v20[48];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v5);
  v9 = &v20[-v8];
  if (qword_255E1DB00 != -1)
    swift_once();
  v10 = __swift_project_value_buffer(v4, (uint64_t)qword_255E295B0);
  sub_22F87ABDC(v10, (uint64_t)v9, (uint64_t *)&unk_255E206E0);
  v11 = sub_22F98DAA4();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48);
  if (v13(v9, 1, v11) == 1)
  {
    sub_22F87AC20((uint64_t)v9, (uint64_t *)&unk_255E206E0);
    if (a1 != 4)
      goto LABEL_5;
LABEL_9:
    sub_22F876120();
    return;
  }
  sub_22F863858(v2, 0xD000000000000021, 0x800000022F99DBA0, 0, 0xE000000000000000);
  (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v9, v11);
  if (a1 == 4)
    goto LABEL_9;
LABEL_5:
  if (a1 == 2)
  {
    v14 = 2;
    goto LABEL_11;
  }
  if (a1 == 1)
  {
    v14 = 1;
LABEL_11:
    sub_22F8680FC(v14);
    return;
  }
  sub_22F87ABDC(v10, (uint64_t)v7, (uint64_t *)&unk_255E206E0);
  if (v13(v7, 1, v11) == 1)
  {
    sub_22F87AC20((uint64_t)v7, (uint64_t *)&unk_255E206E0);
    if (!*(_QWORD *)(v2 + 104))
      return;
LABEL_18:
    type metadata accessor for AudioFactory();
    v18 = *(_BYTE *)(v2 + 186);
    swift_retain();
    sub_22F8D75F8(0, v18, (uint64_t)v20);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E1ED38);
    v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_22F991B40;
    sub_22F87ABDC((uint64_t)v20, v19 + 32, &qword_255E1ED48);
    sub_22F975EF4(v19, 2, 0, 0);
    swift_release();
    swift_bridgeObjectRelease();
    sub_22F87AC20((uint64_t)v20, &qword_255E1ED48);
    return;
  }
  v15 = sub_22F98DA8C();
  v16 = sub_22F98F07C();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v17 = 0;
    _os_log_impl(&dword_22F85B000, v15, v16, "executeCommandGesture: unexpected gesture direction", v17, 2u);
    MEMORY[0x2348A6838](v17, -1, -1);
  }

  (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v7, v11);
  if (*(_QWORD *)(v2 + 104))
    goto LABEL_18;
}

uint64_t sub_22F8759D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  int v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB00 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_255E295B0);
  sub_22F87ABDC(v5, (uint64_t)v4, (uint64_t *)&unk_255E206E0);
  v6 = sub_22F98DAA4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_22F87AC20((uint64_t)v4, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858(v1, 0xD000000000000021, 0x800000022F99DB50, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_tapCounterTimer);
  v9 = *(void **)(v8 + 48);
  swift_retain();
  objc_msgSend(v9, sel_invalidate);
  *(_BYTE *)(v8 + 24) = 0;
  swift_release();
  swift_beginAccess();
  sub_22F87ABDC(v1 + 144, (uint64_t)&v18, &qword_255E1ED70);
  if (v21)
  {
    sub_22F87A750((uint64_t)&v18, (uint64_t)v16);
    sub_22F87AC20((uint64_t)&v18, &qword_255E1ED70);
    v10 = *(unsigned __int8 *)(*__swift_project_boxed_opaque_existential_1(v16, v17) + 80);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
    if (v10 == 1)
    {
      sub_22F875D14();
      sub_22F87ABDC(v1 + 144, (uint64_t)&v18, &qword_255E1ED70);
      if (v21)
      {
        sub_22F87A750((uint64_t)&v18, (uint64_t)v16);
        sub_22F87AC20((uint64_t)&v18, &qword_255E1ED70);
        __swift_project_boxed_opaque_existential_1(v16, v17);
        sub_22F8CC620();
        result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
      }
      else
      {
        result = sub_22F87AC20((uint64_t)&v18, &qword_255E1ED70);
      }
      goto LABEL_18;
    }
  }
  else
  {
    sub_22F87AC20((uint64_t)&v18, &qword_255E1ED70);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  v12 = v23;
  result = sub_22F87A26C(v18, v19, v20, v21, v22, v23);
  if (!v12)
  {
    v13 = *(_QWORD *)(v1 + 24);
    if (v13 == 10)
      v13 = 0;
    v18 = v13;
    v18 = sub_22F98F418();
    v19 = v14;
    sub_22F86AC60((unint64_t *)&v18);
    swift_bridgeObjectRelease();
    v15 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_accessibilityEntryType);
    if ((v15 & 1) == 0)
      *(_QWORD *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_accessibilityEntryType) = v15 | 1;
    result = sub_22F86BD38();
  }
LABEL_18:
  *(_QWORD *)(v1 + 24) = 0;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_drawNumberAllowed) = 1;
  return result;
}

uint64_t sub_22F875D14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(_BYTE *, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t v24;
  _BYTE v25[16];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = &v25[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v3);
  v7 = &v25[-v6];
  if (qword_255E1DB00 != -1)
    swift_once();
  v8 = __swift_project_value_buffer(v2, (uint64_t)qword_255E295B0);
  sub_22F87ABDC(v8, (uint64_t)v7, (uint64_t *)&unk_255E206E0);
  v9 = sub_22F98DAA4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v7, 1, v9) == 1)
  {
    result = sub_22F87AC20((uint64_t)v7, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858(v1, 0xD00000000000001BLL, 0x800000022F99DB80, 0, 0xE000000000000000);
    result = (*(uint64_t (**)(_BYTE *, uint64_t))(v10 + 8))(v7, v9);
  }
  v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_accessibilityEntryType);
  if ((v13 & 2) == 0)
    *(_QWORD *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_accessibilityEntryType) = v13 | 2;
  v14 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_drawNumberFailures);
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_drawNumberFailures) = v16;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_22F98DBA0();
    swift_release();
    swift_release();
    if (v25[15] == 1
      && (swift_getKeyPath(), swift_getKeyPath(), sub_22F98DBA0(), swift_release(), swift_release(), (v25[14] & 1) == 0))
    {
      v20 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_tapCounterTimer);
      v21 = *(void **)(v20 + 48);
      swift_retain();
      objc_msgSend(v21, sel_invalidate);
      *(_BYTE *)(v20 + 24) = 0;
      result = swift_release();
      *(_BYTE *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_drawNumberAllowed) = 1;
      if (*(_QWORD *)(v1 + 104))
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_255E1ED38);
        v22 = swift_allocObject();
        *(_OWORD *)(v22 + 16) = xmmword_22F991B50;
        type metadata accessor for AudioFactory();
        v23 = *(_BYTE *)(v1 + 186);
        swift_retain();
        sub_22F8D75F8(6, v23, v22 + 32);
        sub_22F8D7854(5, *(_BYTE *)(v1 + 186), 0, (_OWORD *)(v22 + 80));
        v24 = swift_allocObject();
        swift_weakInit();
        swift_retain();
        sub_22F975EF4(v22, 2, (void (*)(uint64_t))sub_22F87A4DC, v24);
        swift_release();
        swift_bridgeObjectRelease();
        return swift_release_n();
      }
    }
    else
    {
      sub_22F87ABDC(v8, (uint64_t)v5, (uint64_t *)&unk_255E206E0);
      if (v11(v5, 1, v9) == 1)
      {
        return sub_22F87AC20((uint64_t)v5, (uint64_t *)&unk_255E206E0);
      }
      else
      {
        v17 = sub_22F98DA8C();
        v18 = sub_22F98F07C();
        if (os_log_type_enabled(v17, v18))
        {
          v19 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v19 = 0;
          _os_log_impl(&dword_22F85B000, v17, v18, "executeDigitNotRecognized: skipped, no longer in PIN AX", v19, 2u);
          MEMORY[0x2348A6838](v19, -1, -1);
        }

        return (*(uint64_t (**)(_BYTE *, uint64_t))(v10 + 8))(v5, v9);
      }
    }
  }
  return result;
}

void sub_22F876120()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _OWORD v3[3];

  if (*(_QWORD *)(v0 + 104))
  {
    type metadata accessor for AudioFactory();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_22F98DBA0();
    swift_release();
    swift_release();
    sub_22F8D7854(0, *(_BYTE *)(v0 + 186), *(_BYTE *)(v0 + 187), v3);
    v1 = swift_allocObject();
    swift_weakInit();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E1ED38);
    v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_22F991B40;
    sub_22F87ABDC((uint64_t)v3, v2 + 32, &qword_255E1ED48);
    swift_retain();
    sub_22F975EF4(v2, 2, (void (*)(uint64_t))sub_22F87A4DC, v1);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_22F87AC20((uint64_t)v3, &qword_255E1ED48);
    swift_release();
  }
}

uint64_t sub_22F876284()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_22F98DBAC();
}

uint64_t sub_22F8762F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t Strong;
  unsigned __int8 v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t aBlock;
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  void *v22;
  uint64_t (*v23)();
  uint64_t v24;

  v2 = sub_22F98EB84();
  v18 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_22F98EB9C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_22F98DBA0();
    swift_release();
    swift_release();
    swift_release();
    v9 = v24;
    sub_22F87A26C(aBlock, v20, (uint64_t)v21, (uint64_t)v22, (uint64_t)v23, v24);
    if (v9)
      goto LABEL_7;
  }
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
LABEL_7:
    sub_22F879058();
    v16 = (void *)sub_22F98F0F4();
    v23 = sub_22F87AE14;
    v24 = a1;
    aBlock = MEMORY[0x24BDAC760];
    v20 = 1107296256;
    v21 = sub_22F8644F0;
    v22 = &block_descriptor_228;
    v17 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    sub_22F98EB90();
    aBlock = MEMORY[0x24BEE4AF8];
    sub_22F862548((unint64_t *)&qword_255E22DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E22070);
    sub_22F87AA84((unint64_t *)&qword_255E22DB0, (uint64_t *)&unk_255E22070, MEMORY[0x24BEE12C8]);
    sub_22F98F274();
    MEMORY[0x2348A5CD4](0, v8, v4, v17);
    _Block_release(v17);

    (*(void (**)(char *, uint64_t))(v18 + 8))(v4, v2);
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    v11 = *(_BYTE *)(Strong + 186);
    swift_release();
    swift_beginAccess();
    result = swift_weakLoadStrong();
    if (result)
    {
      v13 = *(_QWORD *)(result + 104);
      swift_retain();
      result = swift_release();
      if (v13)
      {
        type metadata accessor for AudioFactory();
        sub_22F8D7394(0, v11, (uint64_t)&aBlock);
        v14 = swift_allocObject();
        swift_beginAccess();
        swift_weakLoadStrong();
        swift_weakInit();
        swift_release();
        __swift_instantiateConcreteTypeFromMangledName(&qword_255E1ED38);
        v15 = swift_allocObject();
        *(_OWORD *)(v15 + 16) = xmmword_22F991B40;
        sub_22F87ABDC((uint64_t)&aBlock, v15 + 32, &qword_255E1ED48);
        swift_retain();
        sub_22F975EF4(v15, 2, (void (*)(uint64_t))sub_22F87AE34, v14);
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        sub_22F87AC20((uint64_t)&aBlock, &qword_255E1ED48);
        return swift_release();
      }
    }
  }
  return result;
}

uint64_t sub_22F8766F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  void *v11;
  uint64_t v13;
  uint64_t v14;
  _QWORD aBlock[6];

  v2 = sub_22F98EB84();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v14 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_22F98EB9C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22F879058();
  v10 = (void *)sub_22F98F0F4();
  aBlock[4] = sub_22F87AE14;
  aBlock[5] = a1;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22F8644F0;
  aBlock[3] = &block_descriptor_232;
  v11 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_22F98EB90();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_22F862548((unint64_t *)&qword_255E22DA0, v3, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E22070);
  sub_22F87AA84((unint64_t *)&qword_255E22DB0, (uint64_t *)&unk_255E22070, MEMORY[0x24BEE12C8]);
  sub_22F98F274();
  MEMORY[0x2348A5CD4](0, v9, v5, v11);
  _Block_release(v11);

  (*(void (**)(char *, uint64_t))(v14 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_22F8768E4()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    return sub_22F98DBAC();
  }
  return result;
}

uint64_t sub_22F876970()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t result;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  _BYTE v13[16];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v13[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_255E1DB00 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_255E295B0);
  sub_22F87ABDC(v5, (uint64_t)v4, (uint64_t *)&unk_255E206E0);
  v6 = sub_22F98DAA4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_22F87AC20((uint64_t)v4, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858(v1, 0xD00000000000001CLL, 0x800000022F99DBD0, 0, 0xE000000000000000);
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v4, v6);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  v8 = v13[15];
  swift_getKeyPath();
  swift_getKeyPath();
  v13[14] = 1;
  swift_retain();
  result = sub_22F98DBAC();
  if (*(_QWORD *)(v1 + 104))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E1ED38);
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_22F991B50;
    type metadata accessor for AudioFactory();
    swift_retain();
    if (v8)
      v11 = 1;
    else
      v11 = 2;
    sub_22F8D7394(1, v11, v10 + 32);
    sub_22F8D7854(4, v11, *(_BYTE *)(v1 + 187), (_OWORD *)(v10 + 80));
    v12 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_22F975EF4(v10, 2, (void (*)(uint64_t))sub_22F87A674, v12);
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release_n();
  }
  return result;
}

uint64_t sub_22F876C14(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t Strong;
  void *v10;
  void *v11;
  void *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v20);
  v21 = (uint64_t)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_22F98EB84();
  v23 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_22F98EB9C();
  v6 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_22F98DBA0();
    swift_release();
    swift_release();
    swift_release();
    if (LOBYTE(aBlock[0]) == 1)
    {
      swift_beginAccess();
      Strong = swift_weakLoadStrong();
      if (Strong)
      {
        v10 = *(void **)(Strong + 16);
        swift_unknownObjectRetain();
        swift_release();
        if (v10)
        {
          objc_msgSend(v10, sel_setVoiceOverWithEnabled_, 0, v20);
          swift_unknownObjectRelease();
        }
      }
    }
  }
  sub_22F879058();
  v11 = (void *)sub_22F98F0F4();
  aBlock[4] = sub_22F87A67C;
  aBlock[5] = a1;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22F8644F0;
  aBlock[3] = &block_descriptor_131;
  v12 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_22F98EB90();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_22F862548((unint64_t *)&qword_255E22DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E22070);
  sub_22F87AA84((unint64_t *)&qword_255E22DB0, (uint64_t *)&unk_255E22070, MEMORY[0x24BEE12C8]);
  sub_22F98F274();
  MEMORY[0x2348A5CD4](0, v8, v5, v12);
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v22);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v14 = result;
    if (qword_255E1DB00 != -1)
      swift_once();
    v15 = __swift_project_value_buffer(v20, (uint64_t)qword_255E295B0);
    v16 = v21;
    sub_22F87ABDC(v15, v21, (uint64_t *)&unk_255E206E0);
    v17 = sub_22F98DAA4();
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
    {
      sub_22F87AC20(v16, (uint64_t *)&unk_255E206E0);
    }
    else
    {
      sub_22F863858(v14, 0xD000000000000024, 0x800000022F99D830, 0, 0xE000000000000000);
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
    }
    if (!*(_QWORD *)(v14 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_instructionsTimer))
    {
      sub_22F98DA50();
      v19 = swift_allocObject();
      *(_QWORD *)(v19 + 16) = v14;
      *(_OWORD *)(v19 + 24) = xmmword_22F991B70;
      *(_BYTE *)(v19 + 40) = 4;
      swift_retain();
      sub_22F98DA38();
      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_22F87707C()
{
  uint64_t result;

  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_22F98DBAC();
  }
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    return sub_22F98DBAC();
  }
  return result;
}

void sub_22F877158(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  _QWORD v14[6];

  v8 = (void *)objc_opt_self();
  v9 = swift_allocObject();
  swift_weakInit();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = a2;
  *(_QWORD *)(v10 + 32) = a3;
  *(_BYTE *)(v10 + 40) = a4;
  v14[4] = sub_22F87A528;
  v14[5] = v10;
  v14[0] = MEMORY[0x24BDAC760];
  v14[1] = 1107296256;
  v14[2] = sub_22F8736DC;
  v14[3] = &block_descriptor_84;
  v11 = _Block_copy(v14);
  swift_release();
  v12 = objc_msgSend(v8, sel_scheduledTimerWithTimeInterval_repeats_block_, 0, v11, 10.0);
  _Block_release(v11);
  v13 = *(void **)(a1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_instructionsTimer);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_instructionsTimer) = v12;

}

uint64_t sub_22F87727C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t Strong;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD aBlock[6];

  v32 = a3;
  v33 = a4;
  v7 = sub_22F98EB84();
  v34 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_22F98EB9C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v18 = Strong;
    v31 = v10;
    v19 = a5;
    if (qword_255E1DB00 != -1)
      swift_once();
    v20 = __swift_project_value_buffer(v14, (uint64_t)qword_255E295B0);
    sub_22F87ABDC(v20, (uint64_t)v16, (uint64_t *)&unk_255E206E0);
    v21 = sub_22F98DAA4();
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v16, 1, v21) == 1)
    {
      sub_22F87AC20((uint64_t)v16, (uint64_t *)&unk_255E206E0);
    }
    else
    {
      sub_22F863858(v18, 0xD000000000000017, 0x800000022F99D730, 0, 0xE000000000000000);
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v21);
    }
    a5 = v19;
    v23 = OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_instructionsTimer;
    objc_msgSend(*(id *)(v18 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_instructionsTimer), sel_invalidate);
    v24 = *(void **)(v18 + v23);
    *(_QWORD *)(v18 + v23) = 0;
    swift_release();

    v10 = v31;
  }
  sub_22F879058();
  v25 = (void *)sub_22F98F0F4();
  v26 = swift_allocObject();
  v27 = v32;
  *(_QWORD *)(v26 + 16) = a2;
  *(_QWORD *)(v26 + 24) = v27;
  *(_QWORD *)(v26 + 32) = v33;
  *(_BYTE *)(v26 + 40) = a5;
  aBlock[4] = sub_22F87A538;
  aBlock[5] = v26;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22F8644F0;
  aBlock[3] = &block_descriptor_90;
  v28 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_22F98EB90();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_22F862548((unint64_t *)&qword_255E22DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E22070);
  sub_22F87AA84((unint64_t *)&qword_255E22DB0, (uint64_t *)&unk_255E22070, MEMORY[0x24BEE12C8]);
  sub_22F98F274();
  MEMORY[0x2348A5CD4](0, v13, v9, v28);
  _Block_release(v28);

  (*(void (**)(char *, uint64_t))(v34 + 8))(v9, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_22F8775F8(uint64_t a1, char a2, uint64_t a3, char a4)
{
  uint64_t result;
  unsigned __int8 v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD v11[3];

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v7 = *(_BYTE *)(result + 186);
    swift_release();
    swift_beginAccess();
    result = swift_weakLoadStrong();
    if (result)
    {
      v8 = *(_BYTE *)(result + 187);
      swift_release();
      swift_beginAccess();
      result = swift_weakLoadStrong();
      if (result)
      {
        v9 = *(_QWORD *)(result + 104);
        swift_retain();
        result = swift_release();
        if (v9)
        {
          type metadata accessor for AudioFactory();
          sub_22F8D7854(a4, v7, v8, v11);
          __swift_instantiateConcreteTypeFromMangledName(&qword_255E1ED38);
          v10 = swift_allocObject();
          *(_OWORD *)(v10 + 16) = xmmword_22F991B40;
          sub_22F87ABDC((uint64_t)v11, v10 + 32, &qword_255E1ED48);
          sub_22F975EF4(v10, 2, 0, 0);
          swift_release();
          swift_bridgeObjectRelease();
          result = sub_22F87AC20((uint64_t)v11, &qword_255E1ED48);
        }
      }
      if (a4 == 4 && a2 == 2)
      {
        swift_beginAccess();
        result = swift_weakLoadStrong();
        if (result)
        {
          *(_BYTE *)(result + 185) = 1;
          return swift_release();
        }
      }
    }
  }
  return result;
}

uint64_t sub_22F8777B0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t result;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  unsigned __int8 v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  void *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t aBlock;
  uint64_t v49;
  uint64_t (*v50)(uint64_t);
  void *v51;
  uint64_t (*v52)();
  uint64_t v53;

  v2 = v1;
  v47 = a1;
  v3 = sub_22F98EB84();
  v45 = *(_QWORD *)(v3 - 8);
  v46 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v44 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_22F98EB9C();
  v42 = *(_QWORD *)(v5 - 8);
  v43 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v42 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v42 - v15;
  if (qword_255E1DB00 != -1)
    swift_once();
  v17 = __swift_project_value_buffer(v8, (uint64_t)qword_255E295B0);
  sub_22F87ABDC(v17, (uint64_t)v16, (uint64_t *)&unk_255E206E0);
  v18 = sub_22F98DAA4();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  if (v20(v16, 1, v18) == 1)
  {
    sub_22F87AC20((uint64_t)v16, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858(v2, 0xD00000000000001CLL, 0x800000022F99DCF0, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
  }
  v21 = *(_QWORD *)(v2 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_accessibilityEntryType);
  if ((v21 & 2) == 0)
    *(_QWORD *)(v2 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_accessibilityEntryType) = v21 | 2;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  if (aBlock == 1
    && (swift_getKeyPath(), swift_getKeyPath(), sub_22F98DBA0(), swift_release(), swift_release(), (aBlock & 1) == 0))
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_22F98DBA0();
    swift_release();
    swift_release();
    if (aBlock > 11)
    {
      v27 = v47;
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v2 + 104))
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_255E1ED38);
        v28 = swift_allocObject();
        *(_OWORD *)(v28 + 16) = xmmword_22F991B50;
        v46 = v28 + 32;
        type metadata accessor for AudioFactory();
        v29 = *(_BYTE *)(v2 + 186);
        swift_retain();
        sub_22F8D75F8(5, v29, v46);
        sub_22F8D7854(5, *(_BYTE *)(v2 + 186), 0, (_OWORD *)(v28 + 80));
        swift_retain();
        sub_22F975EF4(v28, 2, (void (*)(uint64_t))sub_22F87A8D8, v2);
        swift_release();
        v27 = v47;
        swift_bridgeObjectRelease();
        swift_release();
      }
      sub_22F87ABDC(v17, (uint64_t)v14, (uint64_t *)&unk_255E206E0);
      if (v20(v14, 1, v18) == 1)
      {
        result = sub_22F87AC20((uint64_t)v14, (uint64_t *)&unk_255E206E0);
      }
      else
      {
        v30 = sub_22F98DA8C();
        v31 = sub_22F98F07C();
        if (os_log_type_enabled(v30, v31))
        {
          v32 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v32 = 0;
          _os_log_impl(&dword_22F85B000, v30, v31, "executeDigitDrawn: maxDigitReached", v32, 2u);
          MEMORY[0x2348A6838](v32, -1, -1);
        }

        result = (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v14, v18);
      }
    }
    else
    {
      swift_getKeyPath();
      swift_getKeyPath();
      sub_22F98DBA0();
      swift_release();
      swift_release();
      v26 = v53;
      sub_22F87A26C(aBlock, v49, (uint64_t)v50, (uint64_t)v51, (uint64_t)v52, v53);
      if (v26)
      {
        v27 = v47;
        result = swift_bridgeObjectRelease();
      }
      else
      {
        v33 = swift_allocObject();
        v34 = v47;
        v35 = v47[1];
        *(_QWORD *)(v33 + 16) = *v47;
        *(_QWORD *)(v33 + 24) = v35;
        sub_22F879058();
        v36 = (void *)sub_22F98F0F4();
        v37 = swift_allocObject();
        *(_QWORD *)(v37 + 16) = v2;
        *(_QWORD *)(v37 + 24) = v33;
        v52 = sub_22F87A904;
        v53 = v37;
        aBlock = MEMORY[0x24BDAC760];
        v49 = 1107296256;
        v50 = sub_22F8644F0;
        v51 = &block_descriptor_176;
        v38 = _Block_copy(&aBlock);
        swift_retain();
        swift_retain();
        swift_release();
        sub_22F98EB90();
        aBlock = MEMORY[0x24BEE4AF8];
        sub_22F862548((unint64_t *)&qword_255E22DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E22070);
        sub_22F87AA84((unint64_t *)&qword_255E22DB0, (uint64_t *)&unk_255E22070, MEMORY[0x24BEE12C8]);
        v39 = v44;
        v40 = v46;
        sub_22F98F274();
        MEMORY[0x2348A5CD4](0, v7, v39, v38);
        _Block_release(v38);

        (*(void (**)(char *, uint64_t))(v45 + 8))(v39, v40);
        v41 = v7;
        v27 = v34;
        (*(void (**)(char *, uint64_t))(v42 + 8))(v41, v43);
        result = swift_release();
      }
    }
    *v27 = 42;
    v27[1] = 0xE100000000000000;
  }
  else
  {
    sub_22F87ABDC(v17, (uint64_t)v11, (uint64_t *)&unk_255E206E0);
    if (v20(v11, 1, v18) == 1)
    {
      return sub_22F87AC20((uint64_t)v11, (uint64_t *)&unk_255E206E0);
    }
    else
    {
      v23 = sub_22F98DA8C();
      v24 = sub_22F98F07C();
      if (os_log_type_enabled(v23, v24))
      {
        v25 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v25 = 0;
        _os_log_impl(&dword_22F85B000, v23, v24, "executeDigitDrawn: skipped, no longer in PIN AX", v25, 2u);
        MEMORY[0x2348A6838](v25, -1, -1);
      }

      return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v11, v18);
    }
  }
  return result;
}

uint64_t sub_22F877F18(uint64_t a1, uint64_t a2)
{
  unint64_t *v2;

  v2 = (unint64_t *)(a2 + 16);
  swift_beginAccess();
  sub_22F86AC60(v2);
  swift_endAccess();
  return sub_22F86BD38();
}

uint64_t sub_22F877F68(uint64_t a1, void (*a2)(void))
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    a2();
    return swift_release();
  }
  return result;
}

void sub_22F877FC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB00 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_255E295B0);
  sub_22F87ABDC(v5, (uint64_t)v4, (uint64_t *)&unk_255E206E0);
  v6 = sub_22F98DAA4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_22F87AC20((uint64_t)v4, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858(v1, 0xD000000000000017, 0x800000022F99D730, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  v8 = OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_instructionsTimer;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_instructionsTimer), sel_invalidate);
  v9 = *(void **)(v1 + v8);
  *(_QWORD *)(v1 + v8) = 0;

  if (*(_QWORD *)(v1 + 104))
  {
    swift_retain();
    sub_22F9762D4();
    swift_release();
  }
}

uint64_t sub_22F878124@<X0>(_BYTE *a1@<X8>)
{
  return sub_22F878708(a1);
}

uint64_t sub_22F878138()
{
  return sub_22F878220();
}

uint64_t sub_22F87814C@<X0>(_BYTE *a1@<X8>)
{
  return sub_22F878708(a1);
}

uint64_t sub_22F878160()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_22F98DBAC();
}

uint64_t sub_22F8781D0@<X0>(_BYTE *a1@<X8>)
{
  return sub_22F878708(a1);
}

uint64_t sub_22F8781E4()
{
  return sub_22F878814();
}

uint64_t sub_22F8781F8@<X0>(_BYTE *a1@<X8>)
{
  return sub_22F878708(a1);
}

uint64_t sub_22F87820C()
{
  return sub_22F878220();
}

uint64_t sub_22F878220()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_22F98DBAC();
  return sub_22F868614();
}

uint64_t sub_22F878290@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_22F87830C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_22F98DBAC();
}

double sub_22F87837C@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  result = *(double *)&v3;
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  return result;
}

uint64_t sub_22F878408(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  v1 = a1[2];
  v6 = a1[1];
  v7 = *a1;
  v2 = a1[3];
  v3 = a1[4];
  v4 = a1[5];
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F87A440(v7, v6, v1, v2, v3, v4);
  swift_retain();
  return sub_22F98DBAC();
}

uint64_t sub_22F8784F0@<X0>(_BYTE *a1@<X8>)
{
  return sub_22F878708(a1);
}

uint64_t sub_22F878504()
{
  return sub_22F878814();
}

uint64_t sub_22F878518@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_22F878594(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  v2 = v1;
  swift_retain();
  return sub_22F98DBAC();
}

uint64_t sub_22F878608@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_22F878684()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_22F98DBAC();
}

uint64_t sub_22F8786F4@<X0>(_BYTE *a1@<X8>)
{
  return sub_22F878708(a1);
}

uint64_t sub_22F878708@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_22F878780(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  v3 = v2;
  return sub_22F98DBAC();
}

uint64_t sub_22F8787EC@<X0>(_BYTE *a1@<X8>)
{
  return sub_22F878708(a1);
}

uint64_t sub_22F878800()
{
  return sub_22F878814();
}

uint64_t sub_22F878814()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_22F98DBAC();
}

uint64_t sub_22F878880(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_22F878950(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_22F87A584((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_22F87A584((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  return v7;
}

uint64_t sub_22F878950(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_22F98F214();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_22F878B08(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_22F98F340();
  if (!v8)
  {
    sub_22F98F388();
    __break(1u);
LABEL_17:
    result = sub_22F98F3D0();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_22F878B08(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_22F878B9C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_22F878DEC(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_22F878DEC(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_22F878B9C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_22F878D10(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_22F98F328();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_22F98F388();
      __break(1u);
LABEL_10:
      v2 = sub_22F98EEA8();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_22F98F3D0();
    __break(1u);
LABEL_14:
    result = sub_22F98F388();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_22F878D10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1ED50);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_22F878D74(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_22F98EEE4();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x2348A5A94](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

uint64_t sub_22F878DEC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E1ED50);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_22F98F3D0();
  __break(1u);
  return result;
}

uint64_t sub_22F878F38()
{
  return swift_deallocObject();
}

uint64_t sub_22F878F48@<X0>(_BYTE *a1@<X8>)
{
  return sub_22F878708(a1);
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_22F878F94@<X0>(_BYTE *a1@<X8>)
{
  return sub_22F878708(a1);
}

uint64_t sub_22F878FB8()
{
  return sub_22F878220();
}

uint64_t sub_22F878FDC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void *sub_22F879004()
{
  uint64_t v0;

  return sub_22F86CD14(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_22F879010@<X0>(_BYTE *a1@<X8>)
{
  return sub_22F878708(a1);
}

uint64_t sub_22F879034()
{
  return sub_22F878814();
}

unint64_t sub_22F879058()
{
  unint64_t result;

  result = qword_255E1ED40;
  if (!qword_255E1ED40)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255E1ED40);
  }
  return result;
}

uint64_t objectdestroy_14Tm()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

id sub_22F8790CC()
{
  uint64_t v0;

  return sub_22F86CDCC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_22F8790F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int16 v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_22F98EF08();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_22F879478();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_22F98F340();
  }
LABEL_7:
  v11 = (unsigned __int16)sub_22F8791D0(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11 & 0x1FF;
}

unsigned __int8 *sub_22F8791D0(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  unsigned __int8 v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned int v8;
  unsigned __int8 *v9;
  unsigned int v10;
  char v11;
  unsigned __int8 v12;
  int v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  unsigned __int8 v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned int v24;
  unsigned int v25;
  char v26;

  v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      v14 = a2 - 1;
      if (a2 != 1)
      {
        v15 = a3 + 87;
        if (a3 > 10)
        {
          v16 = a3 + 55;
        }
        else
        {
          v15 = 97;
          v16 = 65;
        }
        if (a3 <= 10)
          v17 = a3 + 48;
        else
          v17 = 58;
        if (result)
        {
          LOBYTE(v8) = 0;
          v18 = result + 1;
          do
          {
            v19 = *v18;
            if (v19 < 0x30 || v19 >= v17)
            {
              if (v19 < 0x41 || v19 >= v16)
              {
                v12 = 0;
                v13 = 1;
                if (v19 < 0x61 || v19 >= v15)
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                v20 = -87;
              }
              else
              {
                v20 = -55;
              }
            }
            else
            {
              v20 = -48;
            }
            if (((v8 * (unsigned __int16)a3) & 0xFF00) != 0)
              goto LABEL_72;
            v8 = (v8 * a3) + (v19 + v20);
            if (((v8 >> 8) & 1) != 0)
              goto LABEL_72;
            ++v18;
            --v14;
          }
          while (v14);
LABEL_48:
          v13 = 0;
          v12 = v8;
          return (unsigned __int8 *)(v12 | (v13 << 8));
        }
        goto LABEL_71;
      }
LABEL_72:
      v12 = 0;
      v13 = 1;
      return (unsigned __int8 *)(v12 | (v13 << 8));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        v21 = a3 + 87;
        if (a3 > 10)
        {
          v22 = a3 + 55;
        }
        else
        {
          v21 = 97;
          v22 = 65;
        }
        if (a3 <= 10)
          v23 = a3 + 48;
        else
          v23 = 58;
        if (result)
        {
          LOBYTE(v24) = 0;
          do
          {
            v25 = *result;
            if (v25 < 0x30 || v25 >= v23)
            {
              if (v25 < 0x41 || v25 >= v22)
              {
                v12 = 0;
                v13 = 1;
                if (v25 < 0x61 || v25 >= v21)
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                v26 = -87;
              }
              else
              {
                v26 = -55;
              }
            }
            else
            {
              v26 = -48;
            }
            if (((v24 * (unsigned __int16)a3) & 0xFF00) != 0)
              goto LABEL_72;
            v24 = (v24 * a3) + (v25 + v26);
            if (((v24 >> 8) & 1) != 0)
              goto LABEL_72;
            ++result;
            --a2;
          }
          while (a2);
          v13 = 0;
          v12 = v24;
          return (unsigned __int8 *)(v12 | (v13 << 8));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      v4 = a2 - 1;
      if (a2 != 1)
      {
        v5 = a3 + 87;
        if (a3 > 10)
        {
          v6 = a3 + 55;
        }
        else
        {
          v5 = 97;
          v6 = 65;
        }
        if (a3 <= 10)
          v7 = a3 + 48;
        else
          v7 = 58;
        if (result)
        {
          LOBYTE(v8) = 0;
          v9 = result + 1;
          while (1)
          {
            v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                v12 = 0;
                v13 = 1;
                if (v10 < 0x61 || v10 >= v5)
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                v11 = -87;
              }
              else
              {
                v11 = -55;
              }
            }
            else
            {
              v11 = -48;
            }
            if (((v8 * (unsigned __int16)a3) & 0xFF00) != 0)
              goto LABEL_72;
            v8 = (v8 * a3) - (v10 + v11);
            if ((v8 & 0xFFFFFF00) != 0)
              goto LABEL_72;
            ++v9;
            if (!--v4)
              goto LABEL_48;
          }
        }
LABEL_71:
        v12 = 0;
        v13 = 0;
        return (unsigned __int8 *)(v12 | (v13 << 8));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_22F879478()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_22F98EF14();
  v4 = sub_22F8794F4(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_22F8794F4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    v9 = sub_22F879638(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      v11 = sub_22F878D10(v9, 0);
      v12 = sub_22F879724((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    v13 = MEMORY[0x2348A5A34](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x2348A5A34);
LABEL_9:
      sub_22F98F340();
      goto LABEL_12;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x2348A5A34]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_22F879638(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_22F878D74(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_22F878D74(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return sub_22F98EECC();
  }
  __break(1u);
  return result;
}

unint64_t sub_22F879724(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_22F878D74(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = sub_22F98EED8();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = sub_22F98F340();
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_22F878D74(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = sub_22F98EEB4();
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_22F879938(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  result = 0;
  v4 = (uint64_t *)(a1 + 32);
  do
  {
    v6 = *v4++;
    v5 = v6;
    if ((v6 & ~result) == 0)
      v5 = 0;
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_22F879970()
{
  return sub_22F864480();
}

uint64_t sub_22F879984(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  char v23;
  char v24;
  unsigned __int8 v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void (*v29)(char *, uint64_t);
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  __int128 aBlock;
  uint64_t (*v44)(uint64_t);
  void *v45;
  uint64_t (*v46)();
  uint64_t v47;

  v2 = v1;
  v42 = a1;
  v3 = sub_22F98EB84();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v41 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_22F98EB9C();
  v39 = *(_QWORD *)(v6 - 8);
  v40 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_22F98EBC0();
  v9 = *(_QWORD *)(v38 - 8);
  v10 = MEMORY[0x24BDAC7A8](v38);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v36 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB00 != -1)
    swift_once();
  v18 = __swift_project_value_buffer(v15, (uint64_t)qword_255E295B0);
  sub_22F87ABDC(v18, (uint64_t)v17, (uint64_t *)&unk_255E206E0);
  v19 = sub_22F98DAA4();
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v17, 1, v19) == 1)
  {
    sub_22F87AC20((uint64_t)v17, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858(v2, 0xD000000000000025, 0x800000022F99D7C0, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  v21 = v47;
  result = sub_22F87A26C(aBlock, *((uint64_t *)&aBlock + 1), (uint64_t)v44, (uint64_t)v45, (uint64_t)v46, v47);
  v23 = v42;
  if (!v21)
  {
    v36 = v4;
    v37 = v3;
    sub_22F865E54();
    sub_22F98DA50();
    swift_retain();
    sub_22F98DA38();
    swift_release();
    if (*(_QWORD *)(v2 + 104))
    {
      type metadata accessor for AudioFactory();
      v24 = *(_BYTE *)(v2 + 187);
      v25 = *(_BYTE *)(v2 + 186);
      swift_retain();
      sub_22F8D7854(3, v25, v24, &aBlock);
      v26 = swift_allocObject();
      swift_weakInit();
      __swift_instantiateConcreteTypeFromMangledName(&qword_255E1ED38);
      v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_22F991B40;
      sub_22F87ABDC((uint64_t)&aBlock, v27 + 32, &qword_255E1ED48);
      swift_retain();
      sub_22F975EF4(v27, 2, (void (*)(uint64_t))sub_22F87A328, v26);
      swift_release();
      swift_release();
      v23 = v42;
      swift_bridgeObjectRelease();
      sub_22F87AC20((uint64_t)&aBlock, &qword_255E1ED48);
      swift_release();
    }
    sub_22F879058();
    v28 = (void *)sub_22F98F0F4();
    sub_22F98EBB4();
    MEMORY[0x2348A57D0](v12, 0.5);
    v29 = *(void (**)(char *, uint64_t))(v9 + 8);
    v30 = v12;
    v31 = v38;
    v29(v30, v38);
    v32 = swift_allocObject();
    *(_QWORD *)(v32 + 16) = v2;
    *(_BYTE *)(v32 + 24) = v23;
    v46 = sub_22F87A330;
    v47 = v32;
    *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v44 = sub_22F8644F0;
    v45 = &block_descriptor_52;
    v33 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    sub_22F98EB90();
    *(_QWORD *)&aBlock = MEMORY[0x24BEE4AF8];
    sub_22F862548((unint64_t *)&qword_255E22DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E22070);
    sub_22F87AA84((unint64_t *)&qword_255E22DB0, (uint64_t *)&unk_255E22070, MEMORY[0x24BEE12C8]);
    v34 = v41;
    v35 = v37;
    sub_22F98F274();
    MEMORY[0x2348A5CA4](v14, v8, v34, v33);
    _Block_release(v33);

    (*(void (**)(char *, uint64_t))(v36 + 8))(v34, v35);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v8, v40);
    return ((uint64_t (*)(char *, uint64_t))v29)(v14, v31);
  }
  return result;
}

uint64_t sub_22F879ED0(unsigned int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  void *v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t aBlock;
  uint64_t v27;
  uint64_t (*v28)(uint64_t);
  void *v29;
  uint64_t (*v30)();
  uint64_t v31;

  v2 = v1;
  v4 = sub_22F98EB84();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_22F98EB9C();
  v25 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB00 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v11, (uint64_t)qword_255E295B0);
  sub_22F87ABDC(v14, (uint64_t)v13, (uint64_t *)&unk_255E206E0);
  v15 = sub_22F98DAA4();
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15) == 1)
  {
    sub_22F87AC20((uint64_t)v13, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858(v2, 0xD000000000000024, 0x800000022F99D790, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  v17 = v31;
  result = sub_22F87A26C(aBlock, v27, (uint64_t)v28, (uint64_t)v29, (uint64_t)v30, v31);
  if (!v17)
  {
    sub_22F879058();
    v19 = (void *)sub_22F98F0F4();
    v30 = sub_22F87A300;
    v31 = v2;
    aBlock = MEMORY[0x24BDAC760];
    v27 = 1107296256;
    v28 = sub_22F8644F0;
    v29 = &block_descriptor_45;
    v20 = _Block_copy(&aBlock);
    v24 = a1;
    v21 = v20;
    swift_retain();
    swift_release();
    sub_22F98EB90();
    aBlock = MEMORY[0x24BEE4AF8];
    sub_22F862548((unint64_t *)&qword_255E22DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    v23 = v8;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E22070);
    sub_22F87AA84((unint64_t *)&qword_255E22DB0, (uint64_t *)&unk_255E22070, MEMORY[0x24BEE12C8]);
    sub_22F98F274();
    MEMORY[0x2348A5CD4](0, v10, v7, v21);
    _Block_release(v21);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v23);
    sub_22F864270(7);
    *(_BYTE *)(v2 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_pinCaptureState) = 7;
    return sub_22F879984(v24);
  }
  return result;
}

uint64_t sub_22F87A26C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a6)
  {
    sub_22F87A2C4(result, a2);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_22F87A2C4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_22F87A300()
{
  return sub_22F86DC34();
}

uint64_t sub_22F87A308()
{
  return sub_22F871B74();
}

uint64_t sub_22F87A328()
{
  return sub_22F86D6F8();
}

uint64_t sub_22F87A330()
{
  return sub_22F86D7A4();
}

uint64_t sub_22F87A33C@<X0>(_BYTE *a1@<X8>)
{
  return sub_22F878708(a1);
}

uint64_t sub_22F87A360()
{
  return sub_22F878814();
}

uint64_t sub_22F87A384()
{
  uint64_t v0;

  return sub_22F86D8B8(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

id sub_22F87A3A0()
{
  uint64_t v0;

  return sub_22F86D988(*(_BYTE *)(v0 + 24));
}

uint64_t sub_22F87A3C8()
{
  return sub_22F87372C();
}

uint64_t sub_22F87A3E0()
{
  return sub_22F86D688();
}

uint64_t sub_22F87A3F8@<X0>(_BYTE *a1@<X8>)
{
  return sub_22F878708(a1);
}

uint64_t sub_22F87A41C()
{
  return sub_22F878814();
}

uint64_t sub_22F87A440(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a6)
  {
    sub_22F87A498(result, a2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_22F87A498(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_22F87A4DC()
{
  uint64_t v0;

  return sub_22F877F68(v0, (void (*)(void))sub_22F86BD38);
}

void (*sub_22F87A4FC())(uint64_t *, _QWORD)
{
  return sub_22F86BA00();
}

void sub_22F87A518()
{
  uint64_t v0;

  sub_22F877158(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
}

uint64_t sub_22F87A528(uint64_t a1)
{
  uint64_t v1;

  return sub_22F87727C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40));
}

uint64_t sub_22F87A538()
{
  uint64_t v0;

  return sub_22F8775F8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
}

void (*sub_22F87A548())(uint64_t *, _QWORD)
{
  return sub_22F86B964();
}

uint64_t __swift_destroy_boxed_opaque_existential_1Tm(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_22F87A584(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_22F87A5C0@<X0>(_BYTE *a1@<X8>)
{
  return sub_22F878708(a1);
}

uint64_t sub_22F87A5E4()
{
  return sub_22F878220();
}

uint64_t sub_22F87A61C@<X0>(_BYTE *a1@<X8>)
{
  return sub_22F878708(a1);
}

uint64_t sub_22F87A644()
{
  return sub_22F876284();
}

uint64_t sub_22F87A674()
{
  uint64_t v0;

  return sub_22F876C14(v0);
}

uint64_t sub_22F87A67C()
{
  return sub_22F87707C();
}

uint64_t sub_22F87A684()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22F87A6A8()
{
  return sub_22F876284();
}

uint64_t sub_22F87A6D0()
{
  uint64_t v0;

  return sub_22F87488C(v0);
}

uint64_t sub_22F87A6D8()
{
  return sub_22F871B74();
}

uint64_t sub_22F87A6F8()
{
  return sub_22F874B04();
}

uint64_t sub_22F87A710()
{
  return sub_22F86D3B8();
}

uint64_t sub_22F87A718()
{
  return sub_22F871B74();
}

void (*sub_22F87A738())(_BYTE *, _QWORD)
{
  return sub_22F86D5C0();
}

uint64_t sub_22F87A750(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_22F87A794()
{
  uint64_t v0;

  return sub_22F8730C4(v0);
}

uint64_t sub_22F87A79C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EDB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_22F87A7E4()
{
  unint64_t result;

  result = qword_255E1EDC0;
  if (!qword_255E1EDC0)
  {
    result = MEMORY[0x2348A6784](&unk_22F992628, &type metadata for PINViewModel.BSActionError);
    atomic_store(result, (unint64_t *)&qword_255E1EDC0);
  }
  return result;
}

uint64_t sub_22F87A830()
{
  return sub_22F871B74();
}

uint64_t sub_22F87A850()
{
  return sub_22F871BCC();
}

void sub_22F87A870()
{
  sub_22F86FE98();
}

uint64_t sub_22F87A878()
{
  uint64_t v0;

  return sub_22F86FF28(v0);
}

uint64_t sub_22F87A890@<X0>(_BYTE *a1@<X8>)
{
  return sub_22F878708(a1);
}

uint64_t sub_22F87A8B4()
{
  return sub_22F878814();
}

uint64_t sub_22F87A8DC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_22F87A904()
{
  uint64_t v0;

  return sub_22F877F18(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_22F87A90C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22F87A930()
{
  uint64_t v0;

  return sub_22F870A68(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_22F87A938()
{
  return sub_22F870BC0();
}

uint64_t sub_22F87A950()
{
  return sub_22F871B74();
}

uint64_t objectdestroy_172Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22F87A9A0()
{
  uint64_t v0;

  return sub_22F86CC6C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

id sub_22F87A9A8()
{
  void *v0;

  return objc_msgSend(v0, sel_closePINUI);
}

uint64_t sub_22F87A9B8(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_22F87A9C8()
{
  return sub_22F86CBE0();
}

uint64_t sub_22F87A9E0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_22F87A9F4(a1, a2);
  return a1;
}

uint64_t sub_22F87A9F4(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_22F87AA38()
{
  return sub_22F8712FC();
}

uint64_t sub_22F87AA50()
{
  return sub_22F8704DC();
}

uint64_t sub_22F87AA58()
{
  uint64_t v0;

  *(_BYTE *)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_evaluating) = 1;
  return sub_22F871838();
}

uint64_t sub_22F87AA6C()
{
  return sub_22F871688();
}

uint64_t sub_22F87AA7C(unsigned __int8 *a1)
{
  return sub_22F867D64(a1);
}

uint64_t sub_22F87AA84(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x2348A6784](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22F87AAC4()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22F87AB28;
  v2 = (_QWORD *)swift_task_alloc();
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_22F866D78;
  return sub_22F866DD4();
}

uint64_t sub_22F87AB28(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_22F87AB78()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22F87B684;
  v2 = (_QWORD *)swift_task_alloc();
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_22F87B610;
  return sub_22F8672C0();
}

uint64_t sub_22F87ABDC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_22F87AC20(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_22F87AC5C()
{
  return sub_22F8680A4();
}

uint64_t sub_22F87AC64(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_22F87ACB8()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22F87AD04(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_22F87B58C;
  return sub_22F8684C4(a1, v4, v5, v6, (uint64_t)(v1 + 5));
}

uint64_t sub_22F87AD80(uint64_t a1)
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22F87ADDC(int a1)
{
  return sub_22F8737AC(a1);
}

uint64_t sub_22F87ADE4()
{
  return sub_22F876284();
}

uint64_t sub_22F87AE0C()
{
  uint64_t v0;

  return sub_22F8762F0(v0);
}

uint64_t sub_22F87AE14()
{
  return sub_22F871B74();
}

uint64_t sub_22F87AE34()
{
  uint64_t v0;

  return sub_22F8766F4(v0);
}

uint64_t sub_22F87AE3C()
{
  return sub_22F8768E4();
}

uint64_t sub_22F87AE5C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22F87AE80()
{
  return sub_22F873FF4();
}

uint64_t sub_22F87AE8C()
{
  return sub_22F874068();
}

uint64_t sub_22F87AE94()
{
  return sub_22F874104();
}

uint64_t sub_22F87AEAC()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_22F87AEE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;
  __int128 v6;

  v5 = *(_OWORD *)(v0 + 48);
  v6 = *(_OWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_22F87B58C;
  *(_QWORD *)(v3 + 48) = v2;
  *(_OWORD *)(v3 + 16) = v6;
  *(_OWORD *)(v3 + 32) = v5;
  return swift_task_switch();
}

uint64_t sub_22F87AF60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v18;
  uint64_t v19;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_22F98EB84();
  v19 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_22F98EB9C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB00 != -1)
    swift_once();
  v12 = __swift_project_value_buffer(v9, (uint64_t)qword_255E295B0);
  sub_22F87ABDC(v12, (uint64_t)v11, (uint64_t *)&unk_255E206E0);
  v13 = sub_22F98DAA4();
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) == 1)
  {
    sub_22F87AC20((uint64_t)v11, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858(v1, 0xD00000000000001BLL, 0x800000022F99DF60, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
  }
  *(_BYTE *)(v1 + 184) = UIAccessibilityIsVoiceOverRunning();
  sub_22F879058();
  v15 = (void *)sub_22F98F0F4();
  aBlock[4] = sub_22F87B284;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22F8644F0;
  aBlock[3] = &block_descriptor_264;
  v16 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_22F98EB90();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_22F862548((unint64_t *)&qword_255E22DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E22070);
  sub_22F87AA84((unint64_t *)&qword_255E22DB0, (uint64_t *)&unk_255E22070, MEMORY[0x24BEE12C8]);
  sub_22F98F274();
  MEMORY[0x2348A5CD4](0, v8, v4, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v19 + 8))(v4, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_22F87B250()
{
  uint64_t v0;

  sub_22F873154(*(_QWORD *)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t sub_22F87B25C(uint64_t a1)
{
  uint64_t v1;

  return sub_22F873250(a1, v1);
}

uint64_t sub_22F87B264()
{
  uint64_t v0;

  return sub_22F877F68(v0, (void (*)(void))sub_22F873478);
}

id sub_22F87B284()
{
  uint64_t v0;

  return sub_22F86E548(v0);
}

uint64_t sub_22F87B28C()
{
  return sub_22F86E698();
}

id sub_22F87B2AC(uint64_t a1)
{
  _BYTE *v1;

  return sub_22F871368(a1, v1);
}

uint64_t sub_22F87B2B4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_22F87B2F8()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22F87B324(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_22F87B390;
  return sub_22F977318(a1, v4, v5, v6);
}

uint64_t sub_22F87B390()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t getEnumTagSinglePayload for PINViewModel.BSActionError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PINViewModel.BSActionError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_22F87B4B4 + 4 * byte_22F991B9F[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_22F87B4E8 + 4 * byte_22F991B9A[v4]))();
}

uint64_t sub_22F87B4E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22F87B4F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22F87B4F8);
  return result;
}

uint64_t sub_22F87B504(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22F87B50CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_22F87B510(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22F87B518(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_22F87B524(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for PINViewModel.BSActionError()
{
  return &type metadata for PINViewModel.BSActionError;
}

unint64_t sub_22F87B540()
{
  unint64_t result;

  result = qword_255E1EE50;
  if (!qword_255E1EE50)
  {
    result = MEMORY[0x2348A6784](&unk_22F992600, &type metadata for PINViewModel.BSActionError);
    atomic_store(result, (unint64_t *)&qword_255E1EE50);
  }
  return result;
}

uint64_t type metadata accessor for IdentityHostingController()
{
  uint64_t result;

  result = qword_255E1EE58;
  if (!qword_255E1EE58)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22F87B6C4()
{
  return swift_initClassMetadata2();
}

void sub_22F87B700(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  unsigned int v17;
  id v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;

  v4 = type metadata accessor for IdentityView();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22F87BBC4();
  swift_retain();
  sub_22F98E2B4();
  *(_QWORD *)v6 = sub_22F87BBBC;
  *((_QWORD *)v6 + 1) = a1;
  v6[16] = 0;
  *((_QWORD *)v6 + 3) = sub_22F8FC6A4;
  *((_QWORD *)v6 + 4) = 0;
  v6[40] = 0;
  v20 = 0;
  sub_22F98E8F0();
  v7 = v22;
  v6[48] = v21;
  *((_QWORD *)v6 + 7) = v7;
  v20 = 1;
  sub_22F98E8F0();
  v8 = v22;
  v6[64] = v21;
  *((_QWORD *)v6 + 9) = v8;
  v9 = (id)sub_22F98E140();
  v10 = objc_msgSend(v9, sel_view);
  if (!v10)
  {
    __break(1u);
    goto LABEL_8;
  }
  v11 = v10;
  v12 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  objc_msgSend(v11, sel_setBackgroundColor_, v12);

  v13 = objc_msgSend(v9, sel_view);
  if (!v13)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v14 = v13;
  objc_msgSend(v13, sel_setOverrideUserInterfaceStyle_, 2);

  if ((a2 & 1) != 0)
  {

    swift_release();
    return;
  }
  v15 = objc_msgSend(v9, sel_view);

  if (v15)
  {
    v16 = objc_msgSend(v15, sel_layer);
    v17 = objc_msgSend(v16, sel_disableUpdateMask);

    v18 = objc_msgSend(v15, sel_layer);
    objc_msgSend(v18, sel_setDisableUpdateMask_, v17 | 0x12);

    swift_release();
    return;
  }
LABEL_9:
  __break(1u);
}

void sub_22F87B958()
{
  sub_22F98F394();
  __break(1u);
}

id sub_22F87B9B0()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  objc_class *v11;
  objc_super v13;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB30 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_255E29640);
  sub_22F87BC08(v5, (uint64_t)v4);
  v6 = sub_22F98DAA4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_22F87BC50((uint64_t)v4);
  }
  else
  {
    v8 = sub_22F98DA8C();
    v9 = sub_22F98F0A0();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_22F85B000, v8, v9, "IdentityHostingController deinit", v10, 2u);
      MEMORY[0x2348A6838](v10, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  v11 = (objc_class *)type metadata accessor for IdentityHostingController();
  v13.receiver = v1;
  v13.super_class = v11;
  return objc_msgSendSuper2(&v13, sel_dealloc);
}

id sub_22F87BB38(void *a1)
{
  id v1;

  v1 = a1;
  return sub_22F87B9B0();
}

void sub_22F87BB5C()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_22F87BB88()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_22F87BBB4()
{
  return type metadata accessor for IdentityHostingController();
}

uint64_t sub_22F87BBBC()
{
  return swift_retain();
}

unint64_t sub_22F87BBC4()
{
  unint64_t result;

  result = qword_255E1EEA8;
  if (!qword_255E1EEA8)
  {
    result = MEMORY[0x2348A6784](&unk_22F994EF4, &type metadata for AccessibilityFocusRegion);
    atomic_store(result, (unint64_t *)&qword_255E1EEA8);
  }
  return result;
}

uint64_t sub_22F87BC08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22F87BC50(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for MerchantLogo()
{
  return objc_opt_self();
}

id sub_22F87BCB0(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  double v15;
  double v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v33 - v8;
  v10 = objc_msgSend((id)objc_opt_self(), sel_sharedService);
  if (!v10
    || (v11 = v10,
        sub_22F98CC50(a1),
        v12 = (void *)sub_22F98ED94(),
        swift_bridgeObjectRelease(),
        v13 = objc_msgSend(v11, sel_stylingForWalletCategory_, v12),
        v12,
        v11,
        !v13))
  {
    if (qword_255E1DB18 != -1)
      swift_once();
    v19 = __swift_project_value_buffer(v4, (uint64_t)qword_255E295F8);
    sub_22F87BC08(v19, (uint64_t)v7);
    v20 = sub_22F98DAA4();
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v7, 1, v20) != 1)
    {
      v23 = sub_22F98DA8C();
      v24 = sub_22F98F088();
      if (os_log_type_enabled(v23, v24))
      {
        v25 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v25 = 0;
        _os_log_impl(&dword_22F85B000, v23, v24, "Unable to return icon due to invalid stylingInfo", v25, 2u);
        MEMORY[0x2348A6838](v25, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v20);
      return objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD640]), sel_init);
    }
    v22 = (uint64_t)v7;
    goto LABEL_9;
  }
  v14 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v14, sel_scale);
  v16 = v15;

  v17 = objc_msgSend(v13, sel_imageForSize_scale_transparent_, 4, a2 & 1, v16);
  if (!v17)
  {
    if (qword_255E1DB18 != -1)
      swift_once();
    v27 = __swift_project_value_buffer(v4, (uint64_t)qword_255E295F8);
    sub_22F87BC08(v27, (uint64_t)v9);
    v28 = sub_22F98DAA4();
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v9, 1, v28) != 1)
    {
      v30 = sub_22F98DA8C();
      v31 = sub_22F98F088();
      if (os_log_type_enabled(v30, v31))
      {
        v32 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v32 = 0;
        _os_log_impl(&dword_22F85B000, v30, v31, "No icon returned for category", v32, 2u);
        MEMORY[0x2348A6838](v32, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v28);
      return objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD640]), sel_init);
    }

    v22 = (uint64_t)v9;
LABEL_9:
    sub_22F87BC50(v22);
    return objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD640]), sel_init);
  }
  v18 = v17;

  return v18;
}

id sub_22F87C038(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22F98D618();
  sub_22F98D60C();
  v9 = sub_22F98D600();
  v11 = v10;
  swift_release();
  if (v11 >> 60 != 15)
  {
    v13 = objc_allocWithZone(MEMORY[0x24BEBD640]);
    sub_22F87C28C(v9, v11);
    v14 = (void *)sub_22F98D360();
    v12 = objc_msgSend(v13, sel_initWithData_, v14);
    sub_22F87A9E0(v9, v11);

    if (v12)
    {
      sub_22F87A9E0(v9, v11);
      return v12;
    }
    if (qword_255E1DB18 != -1)
      swift_once();
    v16 = __swift_project_value_buffer(v6, (uint64_t)qword_255E295F8);
    sub_22F87BC08(v16, (uint64_t)v8);
    v17 = sub_22F98DAA4();
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v8, 1, v17) == 1)
    {
      sub_22F87A9E0(v9, v11);
      sub_22F87BC50((uint64_t)v8);
    }
    else
    {
      v19 = sub_22F98DA8C();
      v20 = sub_22F98F088();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v21 = 0;
        _os_log_impl(&dword_22F85B000, v19, v20, "logo is not an image, default to category", v21, 2u);
        MEMORY[0x2348A6838](v21, -1, -1);
      }
      sub_22F87A9E0(v9, v11);

      (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v17);
    }
  }
  return sub_22F87BCB0(a3, a4 & 1);
}

uint64_t sub_22F87C28C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_22F87C2D0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v7 = a1;
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)(a1 + v8);
    v10 = (char *)a2 + v8;
    v11 = sub_22F98E308();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_retain();
    swift_retain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF68);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v15 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF70);
    v9[v15[9]] = v10[v15[9]];
    *(_QWORD *)&v9[v15[10]] = *(_QWORD *)&v10[v15[10]];
    v9[v15[11]] = v10[v15[11]];
    v16 = *(int *)(a3 + 24);
    v17 = v7 + v16;
    v18 = (uint64_t)a2 + v16;
    swift_retain();
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF78);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return v7;
}

uint64_t sub_22F87C454(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_22F98E308();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF70);
  swift_release();
  v7 = a1 + *(int *)(a2 + 24);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF78);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t sub_22F87C510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(int *)(a3 + 20);
  v8 = (char *)(a1 + v7);
  v9 = (char *)(a2 + v7);
  v10 = sub_22F98E308();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_retain();
  swift_retain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF68);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF70);
  v8[v14[9]] = v9[v14[9]];
  *(_QWORD *)&v8[v14[10]] = *(_QWORD *)&v9[v14[10]];
  v8[v14[11]] = v9[v14[11]];
  v15 = *(int *)(a3 + 24);
  v16 = a1 + v15;
  v17 = a2 + v15;
  swift_retain();
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t sub_22F87C664(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(a3 + 20);
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = sub_22F98E308();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF68);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF70);
  v7[v15[9]] = v8[v15[9]];
  *(_QWORD *)&v7[v15[10]] = *(_QWORD *)&v8[v15[10]];
  swift_retain();
  swift_release();
  v7[v15[11]] = v8[v15[11]];
  v16 = *(int *)(a3 + 24);
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 24))(v17, v18, v19);
  return a1;
}

uint64_t sub_22F87C820(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(a3 + 20);
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = sub_22F98E308();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF68);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF70);
  v7[v12[9]] = v8[v12[9]];
  *(_QWORD *)&v7[v12[10]] = *(_QWORD *)&v8[v12[10]];
  v7[v12[11]] = v8[v12[11]];
  v13 = *(int *)(a3 + 24);
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  return a1;
}

uint64_t sub_22F87C954(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(a3 + 20);
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = sub_22F98E308();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF68);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF70);
  v7[v15[9]] = v8[v15[9]];
  *(_QWORD *)&v7[v15[10]] = *(_QWORD *)&v8[v15[10]];
  swift_release();
  v7[v15[11]] = v8[v15[11]];
  v16 = *(int *)(a3 + 24);
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, v18, v19);
  return a1;
}

uint64_t sub_22F87CAF8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22F87CB04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF70);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF78);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_22F87CBAC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22F87CBB8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF70);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF78);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for RegisteredDescription()
{
  uint64_t result;

  result = qword_255E1EFD8;
  if (!qword_255E1EFD8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_22F87CC98()
{
  unint64_t v0;
  unint64_t v1;

  sub_22F87CD28();
  if (v0 <= 0x3F)
  {
    sub_22F87CE34();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_22F87CD28()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255E1EFE8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1EFF0);
    sub_22F87CD8C();
    v0 = sub_22F98E2C0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255E1EFE8);
  }
}

unint64_t sub_22F87CD8C()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_255E1EFF8;
  if (!qword_255E1EFF8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1EFF0);
    v2 = sub_22F87CDF0();
    result = MEMORY[0x2348A6784](MEMORY[0x24BEE4AB0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_255E1EFF8);
  }
  return result;
}

unint64_t sub_22F87CDF0()
{
  unint64_t result;

  result = qword_255E1F000;
  if (!qword_255E1F000)
  {
    result = MEMORY[0x2348A6784](&unk_22F997F10, &type metadata for RegFocusRegion);
    atomic_store(result, (unint64_t *)&qword_255E1F000);
  }
  return result;
}

void sub_22F87CE34()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255E1F008)
  {
    sub_22F87CE8C();
    v0 = sub_22F98DCCC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255E1F008);
  }
}

unint64_t sub_22F87CE8C()
{
  unint64_t result;

  result = qword_255E1F010;
  if (!qword_255E1F010)
  {
    result = MEMORY[0x2348A6784](MEMORY[0x24BEE50B8], MEMORY[0x24BEE50B0]);
    atomic_store(result, (unint64_t *)&qword_255E1F010);
  }
  return result;
}

uint64_t sub_22F87CED0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22F87CEE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t OpaqueTypeConformance2;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (**v51)();
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  v71 = a1;
  v2 = type metadata accessor for RegisteredDescription();
  v67 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v68 = v3;
  v70 = (uint64_t)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_22F98E350();
  v57 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60);
  v56 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F048);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255E1F050);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F058);
  v53 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55);
  v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F060);
  v61 = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62);
  v59 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F068);
  v64 = *(_QWORD *)(v66 - 8);
  MEMORY[0x24BDAC7A8](v66);
  v63 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F070);
  MEMORY[0x24BDAC7A8](v58);
  v54 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = v2;
  v69 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF78);
  sub_22F98DCC0();
  LOBYTE(v77) = 1;
  sub_22F98E9B0();
  v16 = v72;
  v17 = v73;
  v18 = v74;
  v19 = &v10[v8[16]];
  v76 = 0;
  sub_22F98E8F0();
  v20 = v78;
  *(_QWORD *)v19 = v77;
  *((_QWORD *)v19 + 1) = v20;
  sub_22F87D568();
  sub_22F87D7B0((uint64_t)&v10[v8[13]]);
  *(_QWORD *)&v10[v8[14]] = 0x4024000000000000;
  *(_QWORD *)&v10[v8[15]] = 0x3FE0000000000000;
  v21 = &v10[v8[17]];
  *(_QWORD *)v21 = v16;
  *((_QWORD *)v21 + 1) = v17;
  v21[16] = v18;
  v22 = *MEMORY[0x24BDECEA0];
  v23 = sub_22F98DE70();
  v24 = (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50];
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v7, v22, v23);
  sub_22F862548(&qword_255E1F078, v24, MEMORY[0x24BDECF78]);
  result = sub_22F98ED70();
  if ((result & 1) != 0)
  {
    v26 = sub_22F87AA84(&qword_255E1F080, &qword_255E1F050, (uint64_t)&unk_22F998CD8);
    v27 = sub_22F87AA84(&qword_255E1F088, &qword_255E1F048, MEMORY[0x24BEE30C8]);
    sub_22F98E668();
    sub_22F87AC20((uint64_t)v7, &qword_255E1F048);
    sub_22F87AC20((uint64_t)v10, &qword_255E1F050);
    v28 = v56;
    sub_22F98E338();
    v72 = v8;
    v73 = v5;
    v74 = v26;
    v75 = v27;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v30 = v59;
    v31 = v55;
    sub_22F98E6D4();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v28, v60);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v12, v31);
    v32 = v69;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF70);
    sub_22F98E2A8();
    LOBYTE(v76) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EFF0);
    v77 = v31;
    v78 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2();
    sub_22F87CD8C();
    v34 = v62;
    v33 = v63;
    sub_22F98E6E0();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v30, v34);
    LOBYTE(OpaqueTypeConformance2) = sub_22F98E428();
    sub_22F98DBF4();
    v36 = v35;
    v38 = v37;
    v40 = v39;
    v42 = v41;
    v43 = v64;
    v44 = (uint64_t)v54;
    v45 = v66;
    (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v54, v33, v66);
    v46 = v44 + *(int *)(v58 + 36);
    *(_BYTE *)v46 = OpaqueTypeConformance2;
    *(_QWORD *)(v46 + 8) = v36;
    *(_QWORD *)(v46 + 16) = v38;
    *(_QWORD *)(v46 + 24) = v40;
    *(_QWORD *)(v46 + 32) = v42;
    *(_BYTE *)(v46 + 40) = 0;
    (*(void (**)(char *, uint64_t))(v43 + 8))(v33, v45);
    v47 = v70;
    sub_22F87DE50(v32, v70);
    v48 = (*(unsigned __int8 *)(v67 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80);
    v49 = swift_allocObject();
    sub_22F87DE98(v47, v49 + v48);
    v50 = v71;
    sub_22F87DEE8(v44, v71);
    v51 = (uint64_t (**)())(v50 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255E1F090) + 36));
    *v51 = sub_22F87DEDC;
    v51[1] = (uint64_t (*)())v49;
    v51[2] = 0;
    v51[3] = 0;
    return sub_22F87AC20(v44, &qword_255E1F070);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_22F87D568()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  sub_22F98E0D4();
  if (qword_255E1DC30 != -1)
    swift_once();
  v0 = (id)qword_255E29840;
  v1 = sub_22F98E5C0();
  v3 = v2;
  v5 = v4 & 1;
  sub_22F98E4D0();
  v6 = sub_22F98E578();
  v8 = v7;
  v10 = v9 & 1;
  sub_22F87E294(v1, v3, v5);
  swift_bridgeObjectRelease();
  sub_22F98E470();
  v11 = sub_22F98E5A8();
  v13 = v12;
  v15 = v14;
  swift_release();
  sub_22F87E294(v6, v8, v10);
  swift_bridgeObjectRelease();
  if (qword_255E1DBE8 != -1)
    swift_once();
  v16 = sub_22F98E590();
  v18 = v17;
  v20 = v19 & 1;
  sub_22F87E294(v11, v13, v15 & 1);
  swift_bridgeObjectRelease();
  sub_22F98E704();
  sub_22F87E294(v16, v18, v20);
  return swift_bridgeObjectRelease();
}

uint64_t sub_22F87D7B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  __int128 v34;
  char v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char v39;
  __int128 v40;

  v20[1] = a1;
  v1 = sub_22F98E098();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEE630];
  v3 = *(_QWORD *)(v1 - 8);
  v4 = MEMORY[0x24BDAC7A8](v1);
  v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v20 - v7;
  v9 = sub_22F98E878();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22F98E86C();
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BDF3FD0], v9);
  v13 = sub_22F98E890();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_22F98E494();
  sub_22F98E4AC();
  v14 = sub_22F98E50C();
  swift_release();
  KeyPath = swift_getKeyPath();
  v16 = sub_22F98E7F4();
  v17 = swift_getKeyPath();
  sub_22F98E08C();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v1);
  sub_22F862548((unint64_t *)&qword_255E1F0A0, v2, MEMORY[0x24BDEE620]);
  v18 = sub_22F98DD80();
  LOBYTE(v21) = 1;
  v35 = 0;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v1);
  LOBYTE(v3) = v21;
  LOBYTE(v8) = v35;
  sub_22F98EA88();
  sub_22F98DCFC();
  v21 = v13;
  v22 = 0;
  v23 = v3;
  v24 = (char)v8;
  v25 = KeyPath;
  v26 = v14;
  v27 = v17;
  v28 = v16;
  v29 = v18;
  v30 = v36;
  v31 = v37;
  v32 = v38;
  v33 = v39;
  v34 = v40;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F0A8);
  sub_22F87E2D8(&qword_255E1F0B0, &qword_255E1F0A8, (uint64_t (*)(void))sub_22F87E0A4, MEMORY[0x24BDEBEE0]);
  sub_22F98E704();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_22F87DACC(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[6];

  v22 = a1;
  v26 = sub_22F98EB84();
  v29 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v2 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_22F98EB9C();
  v27 = *(_QWORD *)(v3 - 8);
  v28 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for RegisteredDescription();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  v9 = sub_22F98EBC0();
  v10 = *(_QWORD *)(v9 - 8);
  v25 = v9;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v22 - v14;
  sub_22F879058();
  v23 = sub_22F98F0F4();
  sub_22F98EBB4();
  MEMORY[0x2348A57D0](v13, 0.3);
  v24 = *(void (**)(char *, uint64_t))(v10 + 8);
  v24(v13, v9);
  sub_22F87DE50(v22, (uint64_t)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v17 = swift_allocObject();
  sub_22F87DE98((uint64_t)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16);
  aBlock[4] = sub_22F87E034;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22F8644F0;
  aBlock[3] = &block_descriptor_0;
  v18 = _Block_copy(aBlock);
  swift_release();
  sub_22F98EB90();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_22F862548((unint64_t *)&qword_255E22DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E22070);
  sub_22F87AA84((unint64_t *)&qword_255E22DB0, (uint64_t *)&unk_255E22070, MEMORY[0x24BEE12C8]);
  v19 = v26;
  sub_22F98F274();
  v20 = (void *)v23;
  MEMORY[0x2348A5CA4](v15, v5, v2, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v2, v19);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v5, v28);
  return ((uint64_t (*)(char *, uint64_t))v24)(v15, v25);
}

uint64_t sub_22F87DDB8()
{
  type metadata accessor for RegisteredDescription();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF70);
  sub_22F98E29C();
  UIAccessibilityPostNotification(*MEMORY[0x24BEBDEC8], 0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F098);
  return sub_22F98E998();
}

uint64_t sub_22F87DE50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RegisteredDescription();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22F87DE98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RegisteredDescription();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22F87DEDC()
{
  return sub_22F87E040(sub_22F87DACC);
}

uint64_t sub_22F87DEE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F070);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t objectdestroyTm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for RegisteredDescription();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_release();
  swift_release();
  v4 = v3 + *(int *)(v1 + 20);
  v5 = sub_22F98E308();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF70);
  swift_release();
  v7 = v3 + *(int *)(v1 + 24);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF78);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  return swift_deallocObject();
}

uint64_t sub_22F87E034()
{
  return sub_22F87E040((uint64_t (*)(uint64_t))sub_22F87DDB8);
}

uint64_t sub_22F87E040(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for RegisteredDescription() - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

unint64_t sub_22F87E0A4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E1F0B8;
  if (!qword_255E1F0B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1F0C0);
    v2[0] = sub_22F87E128();
    v2[1] = sub_22F87AA84(&qword_255E1F118, &qword_255E1F120, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E1F0B8);
  }
  return result;
}

unint64_t sub_22F87E128()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E1F0C8;
  if (!qword_255E1F0C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1F0D0);
    v2[0] = sub_22F87E1AC();
    v2[1] = sub_22F87AA84(&qword_255E1F108, &qword_255E1F110, MEMORY[0x24BDF1028]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E1F0C8);
  }
  return result;
}

unint64_t sub_22F87E1AC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E1F0D8;
  if (!qword_255E1F0D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1F0E0);
    v2[0] = sub_22F87E230();
    v2[1] = sub_22F87AA84(&qword_255E1F0F8, &qword_255E1F100, MEMORY[0x24BDF1028]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E1F0D8);
  }
  return result;
}

unint64_t sub_22F87E230()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E1F0E8;
  if (!qword_255E1F0E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1F0F0);
    v2[0] = MEMORY[0x24BDF40E8];
    v2[1] = MEMORY[0x24BDEEC40];
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E1F0E8);
  }
  return result;
}

uint64_t sub_22F87E294(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release();
  else
    return swift_bridgeObjectRelease();
}

uint64_t sub_22F87E2A4()
{
  return sub_22F87E2D8(&qword_255E1F128, &qword_255E1F090, (uint64_t (*)(void))sub_22F87E340, MEMORY[0x24BDF0910]);
}

uint64_t sub_22F87E2D8(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = a3();
    v9[1] = a4;
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22F87E340()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[6];

  result = qword_255E1F130;
  if (!qword_255E1F130)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1F070);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1F060);
    v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1EFF0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1F058);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1F050);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1F048);
    sub_22F87AA84(&qword_255E1F080, &qword_255E1F050, (uint64_t)&unk_22F998CD8);
    sub_22F87AA84(&qword_255E1F088, &qword_255E1F048, MEMORY[0x24BEE30C8]);
    swift_getOpaqueTypeConformance2();
    v4[2] = v2;
    v4[3] = v3;
    v4[4] = swift_getOpaqueTypeConformance2();
    v4[5] = sub_22F87CD8C();
    v4[0] = swift_getOpaqueTypeConformance2();
    v4[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_255E1F130);
  }
  return result;
}

uint64_t type metadata accessor for MockDaemon()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for TransactionAmountDescriptionTextFactory()
{
  return objc_opt_self();
}

id sub_22F87E4E4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  double v39;
  uint64_t v40;
  id v41;
  void *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  void *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  __int16 v69;
  unsigned __int16 v70;
  unsigned __int16 v71;
  unsigned __int16 v72;
  uint64_t v73;
  unsigned __int16 v74;
  unsigned __int16 v75;
  unsigned __int16 v76;
  int v77;
  unsigned __int16 v78;
  unsigned __int16 v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  void (*v83)(char *, _QWORD, uint64_t, uint64_t);
  void *v84;
  id v85;
  id v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void (*v102)(char *, uint64_t);
  uint64_t v103;
  unsigned __int16 *v104;
  uint64_t v105;
  unint64_t v106;
  unsigned __int16 v107;
  unsigned __int16 v108;
  unsigned __int16 v109;
  unsigned __int16 v110;
  unsigned __int16 v111;
  unsigned __int16 v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  unsigned __int16 v117;
  __int16 v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  unint64_t v122;
  void (*v123)(char *, _QWORD, uint64_t, uint64_t);
  void *v124;
  id v125;
  id v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  int v134;
  unint64_t v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  int v140;
  uint64_t v141;
  char *v142;
  int v143;
  uint64_t v144;
  __int16 v145;
  unsigned __int16 v146;
  unsigned __int16 v147;
  unsigned __int16 v148;
  unsigned __int16 v149;
  unsigned __int16 v150;
  unsigned __int16 v151;
  int v152;
  unsigned __int16 v153;
  unsigned __int16 v154;
  uint64_t v155;
  unint64_t v156;
  unint64_t v157;
  void (*v158)(char *, _QWORD, uint64_t, uint64_t);
  void *v159;
  id v160;
  id v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  const char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  unint64_t v186;
  uint64_t v187;
  void (*v188)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  void (*v198)(char *, uint64_t);
  void (*v199)(char *, uint64_t);
  void (*v200)(char *, uint64_t);
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  unint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  unint64_t v208;
  char *v209;
  uint64_t v210;
  char *v211;
  char *v212;
  __int128 v213;
  char *v214;
  __int128 v215;
  __int128 v216;
  uint64_t v217;
  uint64_t v218;
  int v219;
  __int16 v220;
  __int16 v221;
  unsigned __int16 v222;
  unsigned __int16 v223;
  unsigned __int16 v224;
  __int16 v225;
  unsigned __int16 v226;
  unsigned __int16 v227;

  *(_QWORD *)&v215 = sub_22F98D834();
  *(_QWORD *)&v216 = *(_QWORD *)(v215 - 8);
  v2 = MEMORY[0x24BDAC7A8](v215);
  v4 = (char *)&v201 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v2);
  v7 = (char *)&v201 - v6;
  v8 = MEMORY[0x24BDAC7A8](v5);
  v212 = (char *)&v201 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v214 = (char *)&v201 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E20810);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v201 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_22F98D4B0();
  v217 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v201 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F268);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v201 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_22F98D8AC();
  v218 = *(_QWORD *)(v20 - 8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v201 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v201 - v24;
  *(_QWORD *)&v213 = *a1;
  v26 = sub_22F98D804();
  v28 = 0;
  if (v27 >> 60 != 15)
  {
    v210 = v14;
    v209 = v13;
    v211 = v25;
    v29 = v26;
    v30 = v27;
    sub_22F98D114();
    swift_allocObject();
    sub_22F98D108();
    sub_22F87FCBC();
    v31 = v20;
    sub_22F98D0FC();
    v207 = v29;
    v208 = v30;
    swift_release();
    v33 = v218;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v218 + 56))(v19, 0, 1, v31);
    v34 = v211;
    v35 = v19;
    v36 = v33;
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v211, v35, v31);
    (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v23, v34, v31);
    v37 = (*(uint64_t (**)(char *, uint64_t))(v33 + 88))(v23, v31);
    v38 = v31;
    if (v37 == *MEMORY[0x24BDE48A8])
    {
      (*(void (**)(char *, uint64_t))(v36 + 96))(v23, v31);
      v39 = *(double *)v23;
      v40 = v210;
      if (*(double *)v23 > 0.0 && v39 <= 100.0)
      {
        v206 = v31;
        v41 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16F0]), sel_init);
        objc_msgSend(v41, sel_setNumberStyle_, 3);
        sub_22F87FD48();
        v42 = (void *)sub_22F98F184();
        objc_msgSend(v41, sel_setMultiplier_, v42);

        objc_msgSend(v41, sel_setMinimumFractionDigits_, 0);
        objc_msgSend(v41, sel_setMaximumFractionDigits_, 2);
        v43 = v211;
        if (qword_255E1DB70 != -1)
          swift_once();
        swift_beginAccess();
        v44 = (char *)off_255E211B8 + OBJC_IVAR____TtC19ContactlessReaderUI10AppManager_customerLocale;
        swift_beginAccess();
        v45 = v217;
        (*(void (**)(char *, char *, uint64_t))(v217 + 16))(v16, v44, v40);
        v46 = (void *)sub_22F98D414();
        (*(void (**)(char *, uint64_t))(v45 + 8))(v16, v40);
        objc_msgSend(v41, sel_setLocale_, v46);

        v47 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1518]), sel_initWithDouble_, v39);
        v28 = objc_msgSend(v41, sel_stringFromNumber_, v47);

        if (v28)
        {
          v48 = sub_22F98EDB8();
          v50 = v49;

          v51 = (void *)sub_22F98D414();
          objc_msgSend(v41, sel_setLocale_, v51);

          v52 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, v39);
          v28 = objc_msgSend(v41, sel_stringFromNumber_, v52);

          if (v28)
          {
            *(_QWORD *)&v216 = sub_22F98EDB8();
            *(_QWORD *)&v215 = v53;

            __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F278);
            v28 = (id)swift_allocObject();
            *((_OWORD *)v28 + 1) = xmmword_22F991B50;
            v214 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_255E249D0);
            v54 = swift_allocObject();
            v213 = xmmword_22F991B40;
            *(_OWORD *)(v54 + 16) = xmmword_22F991B40;
            *(_QWORD *)(v54 + 56) = MEMORY[0x24BEE0D00];
            v212 = (char *)sub_22F87FD04();
            *(_QWORD *)(v54 + 64) = v212;
            *(_QWORD *)(v54 + 32) = v48;
            *(_QWORD *)(v54 + 40) = v50;
            sub_22F932EEC(1);
            v55 = (uint64_t)v209;
            sub_22F98D420();
            v217 = *(_QWORD *)(v217 + 56);
            v56 = v210;
            ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v217)(v55, 0, 1, v210);
            swift_bridgeObjectRetain();
            v57 = sub_22F98EDD0();
            v59 = v58;
            swift_bridgeObjectRelease();
            sub_22F87AC20(v55, (uint64_t *)&unk_255E20810);
            swift_bridgeObjectRelease();
            *((_QWORD *)v28 + 4) = v57;
            *((_QWORD *)v28 + 5) = v59;
            v60 = swift_allocObject();
            *(_OWORD *)(v60 + 16) = v213;
            v61 = v212;
            *(_QWORD *)(v60 + 56) = MEMORY[0x24BEE0D00];
            *(_QWORD *)(v60 + 64) = v61;
            v62 = v215;
            *(_QWORD *)(v60 + 32) = v216;
            *(_QWORD *)(v60 + 40) = v62;
            sub_22F932EEC(0);
            sub_22F98D420();
            ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v217)(v55, 0, 1, v56);
            swift_bridgeObjectRetain();
            v63 = sub_22F98EDD0();
            v65 = v64;
            swift_bridgeObjectRelease();
            sub_22F87AC20(v55, (uint64_t *)&unk_255E20810);
            swift_bridgeObjectRelease();
            *((_QWORD *)v28 + 6) = v63;
            *((_QWORD *)v28 + 7) = v65;
            sub_22F87A9E0(v207, v208);

LABEL_19:
            (*(void (**)(char *, uint64_t))(v218 + 8))(v211, v206);
            return v28;
          }
          sub_22F87A9E0(v207, v208);
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_22F87A9E0(v207, v208);
        }

        (*(void (**)(char *, uint64_t))(v36 + 8))(v43, v206);
        return v28;
      }
      (*(void (**)(char *, uint64_t))(v36 + 8))(v211, v31);
      goto LABEL_37;
    }
    if (v37 == *MEMORY[0x24BDE4888])
    {
      v66 = (*(uint64_t (**)(char *, uint64_t))(v36 + 96))(v23, v31);
      v67 = *(_DWORD *)v23;
      v68 = *((unsigned __int16 *)v23 + 2);
      v69 = *((_WORD *)v23 + 3);
      v70 = *((_WORD *)v23 + 4);
      v71 = *((_WORD *)v23 + 5);
      v72 = *((_WORD *)v23 + 6);
      v73 = v31;
      v74 = *((_WORD *)v23 + 7);
      v75 = *((_WORD *)v23 + 8);
      v76 = *((_WORD *)v23 + 9);
      MEMORY[0x2348A5D94](v66, 0.0);
      *(_QWORD *)&v216 = v68;
      v77 = v67;
      v78 = v70;
      if ((sub_22F98F1D8() & 1) != 0)
      {
        v206 = v73;
        LODWORD(v215) = v74;
        v79 = v76;
        v80 = sub_22F98D7D4();
        v82 = v81;
        v83 = (void (*)(char *, _QWORD, uint64_t, uint64_t))sub_22F98D7C8();
        v84 = (void *)sub_22F8B8504(v80, v82, v83);
        swift_bridgeObjectRelease();
        v85 = objc_allocWithZone(MEMORY[0x24BDD1518]);
        v219 = v77;
        v220 = v216;
        v221 = v69;
        v222 = v78;
        v223 = v71;
        v224 = v72;
        v225 = v215;
        v226 = v75;
        v227 = v79;
        v86 = objc_msgSend(v85, sel_initWithDecimal_, &v219);
        v28 = objc_msgSend(v84, sel_stringFromNumber_, v86);

        if (!v28)
        {
LABEL_18:
          sub_22F87A9E0(v207, v208);
          goto LABEL_19;
        }
        v87 = sub_22F98EDB8();
        *(_QWORD *)&v215 = v87;
        v89 = v88;

        __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F278);
        v28 = (id)swift_allocObject();
        *((_OWORD *)v28 + 1) = xmmword_22F991B50;
        __swift_instantiateConcreteTypeFromMangledName(&qword_255E249D0);
        v90 = swift_allocObject();
        v216 = xmmword_22F991B40;
        *(_OWORD *)(v90 + 16) = xmmword_22F991B40;
        *(_QWORD *)(v90 + 56) = MEMORY[0x24BEE0D00];
        v91 = sub_22F87FD04();
        *(_QWORD *)(v90 + 64) = v91;
        *(_QWORD *)(v90 + 32) = v87;
        *(_QWORD *)(v90 + 40) = v89;
        v214 = v89;
        swift_bridgeObjectRetain();
        sub_22F932EEC(1);
        v92 = (uint64_t)v209;
        sub_22F98D420();
        v217 = *(_QWORD *)(v217 + 56);
        v93 = v210;
        ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v217)(v92, 0, 1, v210);
        swift_bridgeObjectRetain();
        v94 = sub_22F98EDD0();
        v96 = v95;
        swift_bridgeObjectRelease();
        sub_22F87AC20(v92, (uint64_t *)&unk_255E20810);
        swift_bridgeObjectRelease();
        *((_QWORD *)v28 + 4) = v94;
        *((_QWORD *)v28 + 5) = v96;
        v97 = swift_allocObject();
        *(_OWORD *)(v97 + 16) = v216;
        *(_QWORD *)(v97 + 56) = MEMORY[0x24BEE0D00];
        *(_QWORD *)(v97 + 64) = v91;
        v98 = v214;
        *(_QWORD *)(v97 + 32) = v215;
        *(_QWORD *)(v97 + 40) = v98;
        sub_22F932EEC(0);
        sub_22F98D420();
        ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v217)(v92, 0, 1, v93);
        swift_bridgeObjectRetain();
        v99 = sub_22F98EDD0();
        v101 = v100;
        swift_bridgeObjectRelease();
        sub_22F87AC20(v92, (uint64_t *)&unk_255E20810);
        swift_bridgeObjectRelease();
        *((_QWORD *)v28 + 6) = v99;
LABEL_17:
        *((_QWORD *)v28 + 7) = v101;
        goto LABEL_18;
      }
    }
    else
    {
      if (v37 == *MEMORY[0x24BDE4898])
      {
        v102 = *(void (**)(char *, uint64_t))(v36 + 96);
        v206 = v31;
        v102(v23, v31);
        v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F288);
        v104 = (unsigned __int16 *)&v23[*(int *)(v103 + 48)];
        v105 = *(unsigned int *)v104;
        v106 = v104[2];
        v205 = v104[3];
        v107 = v104[4];
        v108 = v104[5];
        v109 = v104[6];
        v110 = v104[7];
        v111 = v104[8];
        v112 = v104[9];
        v113 = *(_QWORD *)&v23[*(int *)(v103 + 64)];
        v114 = v23;
        v115 = v215;
        v116 = (*(uint64_t (**)(char *, char *, _QWORD))(v216 + 32))(v214, v114, v215);
        MEMORY[0x2348A5D94](v116, 0.0);
        v203 = v105;
        v204 = v106;
        v117 = v107;
        v118 = v205;
        if ((sub_22F98F1D8() & 1) != 0 && v113 >= 1)
        {
          v119 = v115;
          v202 = v113;
          LODWORD(v205) = v110;
          v120 = sub_22F98D7D4();
          v122 = v121;
          v123 = (void (*)(char *, _QWORD, uint64_t, uint64_t))sub_22F98D7C8();
          v124 = (void *)sub_22F8B8504(v120, v122, v123);
          swift_bridgeObjectRelease();
          v125 = objc_allocWithZone(MEMORY[0x24BDD1518]);
          v219 = v203;
          v220 = v204;
          v221 = v118;
          v222 = v117;
          v223 = v108;
          v224 = v109;
          v225 = v205;
          v226 = v111;
          v227 = v112;
          v126 = objc_msgSend(v125, sel_initWithDecimal_, &v219);
          v28 = objc_msgSend(v124, sel_stringFromNumber_, v126);

          v127 = v211;
          if (!v28)
          {
            sub_22F87A9E0(v207, v208);
            (*(void (**)(char *, uint64_t))(v216 + 8))(v214, v119);
            (*(void (**)(char *, uint64_t))(v218 + 8))(v127, v206);
            return v28;
          }
          v128 = sub_22F98EDB8();
          v130 = v129;

          v131 = v216;
          v132 = v212;
          v133 = v214;
          (*(void (**)(char *, char *, uint64_t))(v216 + 16))(v212, v214, v119);
          v134 = (*(uint64_t (**)(char *, uint64_t))(v131 + 88))(v132, v119);
          if (v134 == *MEMORY[0x24BDE4578])
          {
            v135 = 0xD000000000000026;
            v136 = 0x800000022F99E310;
            v137 = v202;
          }
          else
          {
            v137 = v202;
            if (v134 == *MEMORY[0x24BDE4588])
            {
              v135 = 0xD000000000000027;
              v179 = "PAYMENT_DESCRIPTION_INSTALLMENT_MONTHLY";
            }
            else
            {
              if (v134 != *MEMORY[0x24BDE4580])
              {
                sub_22F87A9E0(v207, v208);
                swift_bridgeObjectRelease();
                v200 = *(void (**)(char *, uint64_t))(v131 + 8);
                v200(v133, v119);
                (*(void (**)(char *, uint64_t))(v218 + 8))(v127, v206);
                v200(v132, v119);
                return 0;
              }
              v135 = 0xD000000000000026;
              v179 = "PAYMENT_DESCRIPTION_INSTALLMENT_YEARLY";
            }
            v136 = (unint64_t)(v179 - 32) | 0x8000000000000000;
          }
          v204 = v135;
          v212 = (char *)v136;
          __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F278);
          v28 = (id)swift_allocObject();
          v213 = xmmword_22F991B50;
          *((_OWORD *)v28 + 1) = xmmword_22F991B50;
          __swift_instantiateConcreteTypeFromMangledName(&qword_255E249D0);
          v184 = swift_allocObject();
          *(_OWORD *)(v184 + 16) = v213;
          v185 = MEMORY[0x24BEE17F0];
          *(_QWORD *)(v184 + 56) = MEMORY[0x24BEE1768];
          *(_QWORD *)(v184 + 64) = v185;
          *(_QWORD *)(v184 + 32) = v137;
          *(_QWORD *)(v184 + 96) = MEMORY[0x24BEE0D00];
          v186 = sub_22F87FD04();
          *(_QWORD *)(v184 + 104) = v186;
          *(_QWORD *)(v184 + 72) = v128;
          *(_QWORD *)(v184 + 80) = v130;
          swift_bridgeObjectRetain();
          sub_22F932EEC(1);
          v205 = v128;
          v187 = (uint64_t)v209;
          sub_22F98D420();
          v188 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v217 + 56);
          v217 = v130;
          v189 = v210;
          v188(v187, 0, 1, v210);
          swift_bridgeObjectRetain();
          v190 = sub_22F98EDD0();
          v192 = v191;
          swift_bridgeObjectRelease();
          sub_22F87AC20(v187, (uint64_t *)&unk_255E20810);
          swift_bridgeObjectRelease();
          *((_QWORD *)v28 + 4) = v190;
          *((_QWORD *)v28 + 5) = v192;
          v193 = swift_allocObject();
          *(_OWORD *)(v193 + 16) = v213;
          *(_QWORD *)(v193 + 56) = MEMORY[0x24BEE1768];
          *(_QWORD *)(v193 + 64) = MEMORY[0x24BEE17F0];
          *(_QWORD *)(v193 + 32) = v202;
          *(_QWORD *)(v193 + 96) = MEMORY[0x24BEE0D00];
          *(_QWORD *)(v193 + 104) = v186;
          v194 = v217;
          *(_QWORD *)(v193 + 72) = v205;
          *(_QWORD *)(v193 + 80) = v194;
          sub_22F932EEC(0);
          sub_22F98D420();
          v188(v187, 0, 1, v189);
          swift_bridgeObjectRetain();
          v195 = sub_22F98EDD0();
          v197 = v196;
          swift_bridgeObjectRelease();
          sub_22F87AC20(v187, (uint64_t *)&unk_255E20810);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *((_QWORD *)v28 + 6) = v195;
          *((_QWORD *)v28 + 7) = v197;
          sub_22F87A9E0(v207, v208);
          (*(void (**)(char *, _QWORD))(v216 + 8))(v214, v215);
          goto LABEL_19;
        }
        sub_22F87A9E0(v207, v208);
        (*(void (**)(char *, uint64_t))(v216 + 8))(v214, v115);
        (*(void (**)(char *, uint64_t))(v218 + 8))(v211, v206);
        return 0;
      }
      v138 = v215;
      v139 = v216;
      if (v37 == *MEMORY[0x24BDE4890])
      {
        (*(void (**)(char *, uint64_t))(v36 + 96))(v23, v38);
        (*(void (**)(char *, char *, uint64_t))(v139 + 32))(v7, v23, v138);
        (*(void (**)(char *, char *, uint64_t))(v139 + 16))(v4, v7, v138);
        v140 = (*(uint64_t (**)(char *, uint64_t))(v139 + 88))(v4, v138);
        if (v140 == *MEMORY[0x24BDE4578])
        {
          v141 = v38;
          v142 = v211;
        }
        else
        {
          v142 = v211;
          if (v140 == *MEMORY[0x24BDE4588])
          {
            v141 = v38;
          }
          else
          {
            if (v140 != *MEMORY[0x24BDE4580])
            {
              sub_22F87A9E0(v207, v208);
              v198 = *(void (**)(char *, uint64_t))(v139 + 8);
              v198(v7, v138);
              (*(void (**)(char *, uint64_t))(v36 + 8))(v142, v38);
              v198(v4, v138);
              return 0;
            }
            v141 = v38;
          }
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F278);
        v28 = (id)swift_allocObject();
        *((_OWORD *)v28 + 1) = xmmword_22F991B50;
        *((_QWORD *)v28 + 4) = sub_22F932EEC(1);
        *((_QWORD *)v28 + 5) = v180;
        v181 = sub_22F932EEC(0);
        v183 = v182;
        swift_bridgeObjectRelease();
        *((_QWORD *)v28 + 6) = v181;
        *((_QWORD *)v28 + 7) = v183;
        sub_22F87A9E0(v207, v208);
        (*(void (**)(char *, uint64_t))(v139 + 8))(v7, v138);
        (*(void (**)(char *, uint64_t))(v36 + 8))(v142, v141);
        return v28;
      }
      if (v37 != *MEMORY[0x24BDE4880])
      {
        v176 = v211;
        if (v37 == *MEMORY[0x24BDE48A0] || v37 == *MEMORY[0x24BDE48B0])
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F278);
          v28 = (id)swift_allocObject();
          *((_OWORD *)v28 + 1) = xmmword_22F991B50;
          *((_QWORD *)v28 + 4) = sub_22F932EEC(1);
          *((_QWORD *)v28 + 5) = v177;
          *((_QWORD *)v28 + 6) = sub_22F932EEC(0);
          *((_QWORD *)v28 + 7) = v178;
          sub_22F87A9E0(v207, v208);
          (*(void (**)(char *, uint64_t))(v36 + 8))(v176, v38);
          return v28;
        }
        v199 = *(void (**)(char *, uint64_t))(v36 + 8);
        v199(v211, v38);
        sub_22F87A9E0(v207, v208);
        v199(v23, v38);
        return 0;
      }
      (*(void (**)(char *, uint64_t))(v36 + 96))(v23, v38);
      v143 = *(_DWORD *)v23;
      v144 = *((unsigned __int16 *)v23 + 2);
      v145 = *((_WORD *)v23 + 3);
      v146 = *((_WORD *)v23 + 4);
      v147 = *((_WORD *)v23 + 5);
      v148 = *((_WORD *)v23 + 6);
      v73 = v38;
      v149 = *((_WORD *)v23 + 7);
      v150 = *((_WORD *)v23 + 8);
      v151 = *((_WORD *)v23 + 9);
      sub_22F98F1CC();
      *(_QWORD *)&v216 = v144;
      v152 = v143;
      v153 = v146;
      if ((sub_22F98F1D8() & 1) != 0)
      {
        v206 = v73;
        LODWORD(v215) = v149;
        v154 = v151;
        v155 = sub_22F98D7D4();
        v157 = v156;
        v158 = (void (*)(char *, _QWORD, uint64_t, uint64_t))sub_22F98D7C8();
        v159 = (void *)sub_22F8B8504(v155, v157, v158);
        swift_bridgeObjectRelease();
        v160 = objc_allocWithZone(MEMORY[0x24BDD1518]);
        v219 = v152;
        v220 = v216;
        v221 = v145;
        v222 = v153;
        v223 = v147;
        v224 = v148;
        v225 = v215;
        v226 = v150;
        v227 = v154;
        v161 = objc_msgSend(v160, sel_initWithDecimal_, &v219);
        v28 = objc_msgSend(v159, sel_stringFromNumber_, v161);

        if (!v28)
          goto LABEL_18;
        v162 = sub_22F98EDB8();
        v214 = (char *)v162;
        v164 = v163;

        __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F278);
        v28 = (id)swift_allocObject();
        *((_OWORD *)v28 + 1) = xmmword_22F991B50;
        *(_QWORD *)&v216 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E249D0);
        v165 = swift_allocObject();
        v215 = xmmword_22F991B40;
        *(_OWORD *)(v165 + 16) = xmmword_22F991B40;
        *(_QWORD *)(v165 + 56) = MEMORY[0x24BEE0D00];
        v166 = sub_22F87FD04();
        *(_QWORD *)(v165 + 64) = v166;
        *(_QWORD *)(v165 + 32) = v162;
        *(_QWORD *)(v165 + 40) = v164;
        *(_QWORD *)&v213 = v164;
        swift_bridgeObjectRetain();
        sub_22F932EEC(1);
        v167 = (uint64_t)v209;
        sub_22F98D420();
        v217 = *(_QWORD *)(v217 + 56);
        v168 = v210;
        ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v217)(v167, 0, 1, v210);
        swift_bridgeObjectRetain();
        v169 = sub_22F98EDD0();
        v171 = v170;
        swift_bridgeObjectRelease();
        sub_22F87AC20(v167, (uint64_t *)&unk_255E20810);
        swift_bridgeObjectRelease();
        *((_QWORD *)v28 + 4) = v169;
        *((_QWORD *)v28 + 5) = v171;
        v172 = swift_allocObject();
        *(_OWORD *)(v172 + 16) = v215;
        *(_QWORD *)(v172 + 56) = MEMORY[0x24BEE0D00];
        *(_QWORD *)(v172 + 64) = v166;
        v173 = v213;
        *(_QWORD *)(v172 + 32) = v214;
        *(_QWORD *)(v172 + 40) = v173;
        sub_22F932EEC(0);
        sub_22F98D420();
        ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v217)(v167, 0, 1, v168);
        swift_bridgeObjectRetain();
        v174 = sub_22F98EDD0();
        v101 = v175;
        swift_bridgeObjectRelease();
        sub_22F87AC20(v167, (uint64_t *)&unk_255E20810);
        swift_bridgeObjectRelease();
        *((_QWORD *)v28 + 6) = v174;
        goto LABEL_17;
      }
    }
    (*(void (**)(char *, uint64_t))(v218 + 8))(v211, v73);
LABEL_37:
    sub_22F87A9E0(v207, v208);
    return 0;
  }
  return v28;
}

unint64_t sub_22F87FCBC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255E1F270;
  if (!qword_255E1F270)
  {
    v1 = sub_22F98D8AC();
    result = MEMORY[0x2348A6784](MEMORY[0x24BDE48C8], v1);
    atomic_store(result, (unint64_t *)&qword_255E1F270);
  }
  return result;
}

unint64_t sub_22F87FD04()
{
  unint64_t result;

  result = qword_255E1F280;
  if (!qword_255E1F280)
  {
    result = MEMORY[0x2348A6784](MEMORY[0x24BDCFB50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_255E1F280);
  }
  return result;
}

unint64_t sub_22F87FD48()
{
  unint64_t result;

  result = qword_255E1F290;
  if (!qword_255E1F290)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255E1F290);
  }
  return result;
}

uint64_t sub_22F87FD84@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;
  int *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  ValueMetadata *v24;
  char v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  ValueMetadata *v29;
  char *v30;
  uint64_t v31;
  ValueMetadata *v32;
  char *v33;
  uint64_t *v34;
  uint64_t v35;
  ValueMetadata *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  ValueMetadata *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t result;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  ValueMetadata *v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;

  v2 = (_QWORD *)v1;
  v68 = a1;
  v3 = (int *)type metadata accessor for IdentityCenterView();
  v60 = *((_QWORD *)v3 - 1);
  MEMORY[0x24BDAC7A8](v3);
  v61 = v4;
  v59 = (uint64_t)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F370);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F378);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F380);
  MEMORY[0x24BDAC7A8](v57);
  v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F388);
  MEMORY[0x24BDAC7A8](v58);
  v14 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F390);
  MEMORY[0x24BDAC7A8](v69);
  v70 = (uint64_t)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F398);
  v66 = *(_QWORD *)(v16 - 8);
  v67 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v65 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3A0);
  v63 = *(_QWORD *)(v18 - 8);
  v64 = v18;
  MEMORY[0x24BDAC7A8](v18);
  v62 = (char *)&v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v7 = sub_22F98E128();
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = 1;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3A8);
  sub_22F8804A8(v1, (uint64_t)&v7[*(int *)(v20 + 44)]);
  if (qword_255E1DC58 != -1)
    swift_once();
  v21 = qword_255E298E0;
  v22 = v1 + v3[11];
  v23 = *(_BYTE *)v22;
  v24 = *(ValueMetadata **)(v22 + 8);
  LOBYTE(v71) = v23;
  v72 = v24;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3B0);
  sub_22F98E8FC();
  v25 = v75;
  sub_22F87ABDC((uint64_t)v7, (uint64_t)v10, &qword_255E1F370);
  v26 = &v10[*(int *)(v8 + 36)];
  *(_QWORD *)v26 = v21;
  v26[8] = v25;
  sub_22F87AC20((uint64_t)v7, &qword_255E1F370);
  sub_22F98EB0C();
  v27 = sub_22F98EAD0();
  swift_release();
  v28 = v1 + v3[8];
  v29 = *(ValueMetadata **)(v28 + 8);
  LOBYTE(v71) = *(_BYTE *)v28;
  v72 = v29;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3B8);
  sub_22F98E8FC();
  LOBYTE(v21) = v75 == 2;
  sub_22F87ABDC((uint64_t)v10, (uint64_t)v12, &qword_255E1F378);
  v30 = &v12[*(int *)(v57 + 36)];
  *(_QWORD *)v30 = v27;
  v30[8] = v21;
  sub_22F87AC20((uint64_t)v10, &qword_255E1F378);
  v31 = sub_22F98EAF4();
  v32 = *(ValueMetadata **)(v28 + 8);
  LOBYTE(v71) = *(_BYTE *)v28;
  v72 = v32;
  sub_22F98E8FC();
  LOBYTE(v28) = v75 == 4;
  sub_22F87ABDC((uint64_t)v12, (uint64_t)v14, &qword_255E1F380);
  v33 = &v14[*(int *)(v58 + 36)];
  *(_QWORD *)v33 = v31;
  v33[8] = v28;
  sub_22F87AC20((uint64_t)v12, &qword_255E1F380);
  v58 = (uint64_t)v3;
  v34 = (uint64_t *)(v1 + v3[9]);
  v35 = *v34;
  v36 = (ValueMetadata *)v34[1];
  v71 = v35;
  v72 = v36;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3C0);
  sub_22F98E8FC();
  v37 = v75;
  v38 = v59;
  sub_22F883670(v1, v59);
  v39 = (*(unsigned __int8 *)(v60 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
  v40 = swift_allocObject();
  sub_22F8836B8(v38, v40 + v39);
  v41 = v70;
  sub_22F87ABDC((uint64_t)v14, v70, &qword_255E1F388);
  v42 = (_QWORD *)(v41 + *(int *)(v69 + 36));
  *v42 = v37;
  v42[1] = v37;
  v42[2] = sub_22F8836FC;
  v42[3] = v40;
  sub_22F87AC20((uint64_t)v14, &qword_255E1F388);
  if (*v2)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_22F98DBA0();
    swift_release();
    swift_release();
    swift_release();
    sub_22F883670((uint64_t)v2, v38);
    v43 = swift_allocObject();
    sub_22F8836B8(v38, v43 + v39);
    v44 = sub_22F883720();
    v45 = sub_22F8838F8();
    v46 = v65;
    v61 = v39;
    v48 = v69;
    v47 = v70;
    sub_22F98E7A0();
    swift_release();
    sub_22F87AC20(v47, &qword_255E1F390);
    v49 = (char *)v2 + *(int *)(v58 + 24);
    v50 = *(_QWORD *)v49;
    v51 = (ValueMetadata *)*((_QWORD *)v49 + 1);
    LOBYTE(v49) = v49[16];
    v71 = v50;
    v72 = v51;
    LOBYTE(v73) = (_BYTE)v49;
    v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F418);
    MEMORY[0x2348A5560](&v75, v52);
    sub_22F883670((uint64_t)v2, v38);
    v53 = swift_allocObject();
    sub_22F8836B8(v38, v53 + v61);
    v71 = v48;
    v72 = &type metadata for PhoneOrientation;
    v73 = v44;
    v74 = v45;
    swift_getOpaqueTypeConformance2();
    sub_22F88398C();
    v54 = v62;
    v55 = v67;
    sub_22F98E794();
    swift_release();
    (*(void (**)(char *, uint64_t))(v66 + 8))(v46, v55);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v63 + 32))(v68, v54, v64);
  }
  else
  {
    type metadata accessor for FineRotationManager(0);
    sub_22F862548(&qword_255E1F3C8, type metadata accessor for FineRotationManager, (uint64_t)&unk_22F992D8C);
    result = sub_22F98DF54();
    __break(1u);
  }
  return result;
}

uint64_t sub_22F8804A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (**v50)();
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;

  v4 = type metadata accessor for IdentityCenterView();
  v71 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v72 = v5;
  v73 = (uint64_t)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_22F98E350();
  v6 = *(_QWORD *)(v59 - 8);
  MEMORY[0x24BDAC7A8](v59);
  v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F430);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F438);
  v61 = *(_QWORD *)(v12 - 8);
  v62 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F440);
  MEMORY[0x24BDAC7A8](v63);
  v60 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F448);
  v66 = *(_QWORD *)(v69 - 8);
  MEMORY[0x24BDAC7A8](v69);
  v65 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F450);
  MEMORY[0x24BDAC7A8](v64);
  v70 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F458);
  v74 = *(_QWORD *)(v18 - 8);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v68 = (uint64_t)&v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v67 = (uint64_t)&v56 - v21;
  v22 = a1 + *(int *)(v4 + 44);
  v23 = *(_BYTE *)v22;
  v24 = *(_QWORD *)(v22 + 8);
  LOBYTE(v75) = v23;
  *((_QWORD *)&v75 + 1) = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3B0);
  sub_22F98E8FC();
  v25 = 1;
  if (v77 == 1)
  {
    v57 = v18;
    v58 = a2;
    *(_QWORD *)v11 = sub_22F98E128();
    *((_QWORD *)v11 + 1) = 0;
    v11[16] = 1;
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F460);
    sub_22F880AF8(a1, &v11[*(int *)(v26 + 44)]);
    sub_22F98E32C();
    v27 = a1;
    v28 = sub_22F87AA84(&qword_255E1F468, &qword_255E1F430, MEMORY[0x24BDF4700]);
    v56 = v14;
    sub_22F98E6D4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v59);
    sub_22F87AC20((uint64_t)v11, &qword_255E1F430);
    __swift_instantiateConcreteTypeFromMangledName(qword_255E1F298);
    sub_22F98E290();
    v29 = v9;
    if (v75 == 5)
    {
      v30 = v27 + *(int *)(v4 + 56);
      v31 = *(_OWORD *)v30;
      v32 = *(_QWORD *)(v30 + 16);
      v75 = v31;
      v76 = v32;
      __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F428);
      sub_22F98E8FC();
      v33 = v77;
      v34 = v78;
    }
    else
    {
      v33 = 0;
      v34 = 0xE000000000000000;
    }
    *(_QWORD *)&v75 = v33;
    *((_QWORD *)&v75 + 1) = v34;
    sub_22F863BF8();
    v35 = sub_22F98E5CC();
    v37 = v36;
    v39 = v38 & 1;
    *(_QWORD *)&v75 = v29;
    *((_QWORD *)&v75 + 1) = v28;
    swift_getOpaqueTypeConformance2();
    v40 = (uint64_t)v60;
    v41 = v62;
    v42 = v56;
    sub_22F98E68C();
    sub_22F87E294(v35, v37, v39);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v42, v41);
    sub_22F98E2A8();
    LOBYTE(v77) = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F310);
    sub_22F883A00();
    sub_22F8835F8();
    v43 = v65;
    sub_22F98E6E0();
    swift_release();
    swift_release();
    sub_22F87AC20(v40, &qword_255E1F440);
    v44 = v73;
    sub_22F883670(v27, v73);
    v45 = (*(unsigned __int8 *)(v71 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80);
    v46 = swift_allocObject();
    sub_22F8836B8(v44, v46 + v45);
    v47 = v66;
    v49 = v69;
    v48 = (uint64_t)v70;
    (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v70, v43, v69);
    v50 = (uint64_t (**)())(v48 + *(int *)(v64 + 36));
    *v50 = sub_22F883AD0;
    v50[1] = (uint64_t (*)())v46;
    v50[2] = 0;
    v50[3] = 0;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v43, v49);
    sub_22F883670(v27, v44);
    v51 = swift_allocObject();
    sub_22F8836B8(v44, v51 + v45);
    v52 = v68;
    sub_22F87ABDC(v48, v68, &qword_255E1F450);
    v18 = v57;
    v53 = (_QWORD *)(v52 + *(int *)(v57 + 36));
    *v53 = 0;
    v53[1] = 0;
    v53[2] = sub_22F883AE0;
    v53[3] = v51;
    sub_22F87AC20(v48, &qword_255E1F450);
    v54 = v67;
    sub_22F87B2B4(v52, v67, &qword_255E1F458);
    a2 = v58;
    sub_22F87B2B4(v54, v58, &qword_255E1F458);
    v25 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v74 + 56))(a2, v25, 1, v18);
}

uint64_t *sub_22F880AF8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE v63[216];
  __int128 v64;
  _OWORD v65[13];
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  char v82;
  char v83;
  _OWORD v84[18];
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  uint64_t v106;

  v54 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F480);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (uint64_t *)((char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F488);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F490);
  MEMORY[0x24BDAC7A8](v50);
  v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F498);
  v11 = MEMORY[0x24BDAC7A8](v53);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v52 = (uint64_t)&v45 - v14;
  v15 = sub_22F98EA88();
  v17 = v16;
  sub_22F8810C0(a1, (uint64_t)&v85);
  sub_22F87B2B4((uint64_t)&v85, (uint64_t)v63, &qword_255E1F4A0);
  *(_QWORD *)&v64 = v15;
  *((_QWORD *)&v64 + 1) = v17;
  sub_22F87B2B4((uint64_t)v63, (uint64_t)v65, &qword_255E1F4A0);
  v79 = v65[11];
  v80 = v65[12];
  v81 = v66;
  v75 = v65[7];
  v76 = v65[8];
  v77 = v65[9];
  v78 = v65[10];
  v71 = v65[3];
  v72 = v65[4];
  v73 = v65[5];
  v74 = v65[6];
  v67 = v64;
  v68 = v65[0];
  v69 = v65[1];
  v70 = v65[2];
  v85 = xmmword_22F992800;
  v86 = xmmword_22F992810;
  v84[0] = 0uLL;
  __asm { FMOV            V0.2D, #1.0 }
  v55 = _Q0;
  v56 = xmmword_22F992810;
  v84[1] = _Q0;
  sub_22F883CC8();
  v51 = sub_22F98DD68();
  type metadata accessor for IdentityCenterView();
  sub_22F98EA88();
  sub_22F98DCFC();
  v23 = v57;
  v48 = v61;
  v49 = v59;
  v46 = v57;
  v47 = v62;
  v83 = v58;
  v82 = v60;
  *v5 = sub_22F98EA88();
  v5[1] = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F4B0);
  sub_22F881318();
  v25 = sub_22F98EA88();
  sub_22F8F89FC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v8, 0.0, 1, 0.0, 1, v25, v26);
  sub_22F87AC20((uint64_t)v5, &qword_255E1F480);
  LOBYTE(v5) = sub_22F98E428();
  sub_22F98DBF4();
  v28 = v27;
  v30 = v29;
  v32 = v31;
  v34 = v33;
  sub_22F87ABDC((uint64_t)v8, (uint64_t)v10, &qword_255E1F488);
  v35 = &v10[*(int *)(v50 + 36)];
  *v35 = (char)v5;
  *((_QWORD *)v35 + 1) = v28;
  *((_QWORD *)v35 + 2) = v30;
  *((_QWORD *)v35 + 3) = v32;
  *((_QWORD *)v35 + 4) = v34;
  v35[40] = 0;
  sub_22F87AC20((uint64_t)v8, &qword_255E1F488);
  v85 = xmmword_22F992820;
  v86 = v56;
  v84[0] = 0uLL;
  v84[1] = v55;
  sub_22F98DD68();
  v85 = xmmword_22F992830;
  v86 = v56;
  v84[0] = 0uLL;
  v84[1] = v55;
  sub_22F98DD68();
  v36 = sub_22F98DD14();
  swift_release();
  swift_release();
  sub_22F87ABDC((uint64_t)v10, (uint64_t)v13, &qword_255E1F490);
  *(_QWORD *)&v13[*(int *)(v53 + 36)] = v36;
  sub_22F87AC20((uint64_t)v10, &qword_255E1F490);
  v37 = v52;
  sub_22F87B2B4((uint64_t)v13, v52, &qword_255E1F498);
  LOBYTE(v8) = v83;
  LOBYTE(v5) = v82;
  sub_22F87ABDC(v37, (uint64_t)v13, &qword_255E1F498);
  v84[12] = v79;
  v84[13] = v80;
  v84[8] = v75;
  v84[9] = v76;
  v84[11] = v78;
  v84[10] = v77;
  v84[4] = v71;
  v84[5] = v72;
  v84[6] = v73;
  v84[7] = v74;
  v84[0] = v67;
  v84[1] = v68;
  v84[2] = v69;
  v84[3] = v70;
  *(_QWORD *)&v84[14] = v81;
  v38 = v51;
  *((_QWORD *)&v84[14] + 1) = v51;
  *(_QWORD *)&v84[15] = v23;
  BYTE8(v84[15]) = (_BYTE)v8;
  v39 = v48;
  v40 = v49;
  *(_QWORD *)&v84[16] = v49;
  BYTE8(v84[16]) = (_BYTE)v5;
  *(_QWORD *)&v84[17] = v48;
  v41 = v47;
  *((_QWORD *)&v84[17] + 1) = v47;
  v42 = v54;
  memcpy(v54, v84, 0x120uLL);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F4B8);
  sub_22F87ABDC((uint64_t)v13, (uint64_t)v42 + *(int *)(v43 + 48), &qword_255E1F498);
  sub_22F883D0C((uint64_t *)v84);
  sub_22F87AC20(v37, &qword_255E1F498);
  sub_22F87AC20((uint64_t)v13, &qword_255E1F498);
  v97 = v79;
  v98 = v80;
  v93 = v75;
  v94 = v76;
  v96 = v78;
  v95 = v77;
  v89 = v71;
  v90 = v72;
  v92 = v74;
  v91 = v73;
  v85 = v67;
  v86 = v68;
  v88 = v70;
  v87 = v69;
  v99 = v81;
  v100 = v38;
  v101 = v46;
  v102 = (char)v8;
  v103 = v40;
  v104 = (char)v5;
  v105 = v39;
  v106 = v41;
  return sub_22F883E14((uint64_t *)&v85);
}

uint64_t sub_22F8810C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int *v4;
  char *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  _OWORD v27[8];
  uint64_t v28;
  char v29;
  char v30;
  _OWORD v31[8];
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v4 = (int *)type metadata accessor for IdentityCenterView();
  v5 = (char *)(a1 + v4[8]);
  v6 = *v5;
  v7 = *((_QWORD *)v5 + 1);
  LOBYTE(v48) = *v5;
  v49 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3B8);
  sub_22F98E8FC();
  if (LOBYTE(v31[0]))
  {
    LOBYTE(v48) = v6;
    v49 = v7;
    sub_22F98E8FC();
    sub_22F98E818();
    sub_22F9412B4(v31[0], (uint64_t)v27);
    sub_22F98EA88();
    sub_22F98DCFC();
    v25 = v44;
    v26 = v42;
    v8 = v46;
    v9 = v47;
    v30 = v43;
    v29 = v45;
    v10 = (uint64_t *)(a1 + v4[10]);
    v11 = *v10;
    v12 = v10[1];
    v48 = v11;
    v49 = v12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3C0);
    sub_22F98E8FC();
    v13 = *(double *)v31 * 0.0174532925;
    sub_22F98EB6C();
    v15 = v14;
    v17 = v16;
    v18 = a2;
    v19 = v30;
    v20 = v29;
    v21 = (uint64_t *)(a1 + v4[9]);
    v22 = *v21;
    v23 = v21[1];
    v48 = v22;
    v49 = v23;
    sub_22F98E8FC();
    v31[6] = v27[6];
    v31[7] = v27[7];
    v31[2] = v27[2];
    v31[3] = v27[3];
    v31[4] = v27[4];
    v31[5] = v27[5];
    v31[0] = v27[0];
    v31[1] = v27[1];
    v32 = v28;
    v33 = v26;
    v34 = v19;
    a2 = v18;
    v35 = v25;
    v36 = v20;
    v37 = v8;
    v38 = v9;
    v39 = v13;
    v40 = v15;
    v41 = v17;
    nullsub_1(v31);
  }
  else
  {
    sub_22F883FC0((uint64_t)v31);
  }
  sub_22F87B2B4((uint64_t)v31, (uint64_t)&v48, &qword_255E1F4A0);
  return sub_22F87B2B4((uint64_t)&v48, a2, &qword_255E1F4A0);
}

uint64_t sub_22F881318()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;

  type metadata accessor for IdentityCenterView();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F428);
  sub_22F98E8FC();
  sub_22F98E0D4();
  if (qword_255E1DC30 != -1)
    swift_once();
  v0 = (id)qword_255E29840;
  v1 = sub_22F98E5C0();
  v3 = v2;
  v5 = v4 & 1;
  sub_22F98E4F4();
  v6 = sub_22F98E5A8();
  v8 = v7;
  v10 = v9;
  swift_release();
  sub_22F87E294(v1, v3, v5);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3C0);
  sub_22F98E8FC();
  sub_22F98EB6C();
  sub_22F98E8FC();
  __asm { FMOV            V0.2D, #1.0 }
  sub_22F883CC8();
  sub_22F98DD68();
  sub_22F98E8FC();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F4C0);
  sub_22F883F24();
  sub_22F98E704();
  sub_22F87E294(v6, v8, v10 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_22F881620(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD aBlock[6];

  v2 = sub_22F98EB84();
  v16 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_22F98EB9C();
  v5 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for IdentityCenterView();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  sub_22F879058();
  v11 = (void *)sub_22F98F0F4();
  sub_22F883670(a1, (uint64_t)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v13 = swift_allocObject();
  sub_22F8836B8((uint64_t)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12);
  aBlock[4] = sub_22F883C80;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22F8644F0;
  aBlock[3] = &block_descriptor_23;
  v14 = _Block_copy(aBlock);
  swift_release();
  sub_22F98EB90();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_22F862548((unint64_t *)&qword_255E22DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E22070);
  sub_22F87AA84((unint64_t *)&qword_255E22DB0, (uint64_t *)&unk_255E22070, MEMORY[0x24BEE12C8]);
  sub_22F98F274();
  MEMORY[0x2348A5CD4](0, v7, v4, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v16 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v15);
  UIAccessibilityPostNotification(*MEMORY[0x24BEBDEC8], 0);
}

uint64_t sub_22F881884()
{
  type metadata accessor for IdentityCenterView();
  __swift_instantiateConcreteTypeFromMangledName(qword_255E1F298);
  return sub_22F98E29C();
}

uint64_t sub_22F8818D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v16;
  uint64_t v17;
  _QWORD aBlock[6];

  v2 = sub_22F98EB84();
  v17 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_22F98EB9C();
  v5 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for IdentityCenterView();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  sub_22F879058();
  v11 = (void *)sub_22F98F0F4();
  sub_22F883670(a1, (uint64_t)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v13 = swift_allocObject();
  sub_22F8836B8((uint64_t)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12);
  aBlock[4] = sub_22F883AF0;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22F8644F0;
  aBlock[3] = &block_descriptor_1;
  v14 = _Block_copy(aBlock);
  swift_release();
  sub_22F98EB90();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_22F862548((unint64_t *)&qword_255E22DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E22070);
  sub_22F87AA84((unint64_t *)&qword_255E22DB0, (uint64_t *)&unk_255E22070, MEMORY[0x24BEE12C8]);
  sub_22F98F274();
  MEMORY[0x2348A5CD4](0, v7, v4, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v17 + 8))(v4, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v16);
}

uint64_t sub_22F881B28()
{
  type metadata accessor for IdentityCenterView();
  __swift_instantiateConcreteTypeFromMangledName(qword_255E1F298);
  return sub_22F98E29C();
}

uint64_t sub_22F881B7C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t result;

  if (*a1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_22F98DBA0();
    swift_release();
    swift_release();
    swift_release();
    type metadata accessor for IdentityCenterView();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3C0);
    sub_22F98E908();
    v1 = sub_22F98EAE8();
    MEMORY[0x24BDAC7A8](v1);
    sub_22F98DE10();
    return swift_release();
  }
  else
  {
    type metadata accessor for FineRotationManager(0);
    sub_22F862548(&qword_255E1F3C8, type metadata accessor for FineRotationManager, (uint64_t)&unk_22F992D8C);
    result = sub_22F98DF54();
    __break(1u);
  }
  return result;
}

uint64_t sub_22F881CFC()
{
  type metadata accessor for IdentityCenterView();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3C0);
  return sub_22F98E908();
}

uint64_t sub_22F881D6C()
{
  sub_22F98EAE8();
  sub_22F98DE10();
  return swift_release();
}

uint64_t sub_22F881DD8()
{
  type metadata accessor for IdentityCenterView();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3C0);
  return sub_22F98E908();
}

uint64_t sub_22F881E44(uint64_t a1, _BYTE *a2)
{
  switch(*a2)
  {
    case 3:
    case 7:
    case 9:
      type metadata accessor for IdentityCenterView();
      __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3B0);
      sub_22F98E908();
      __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3B8);
      sub_22F98E908();
      __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F428);
      sub_22F98E908();
      sub_22F932EEC(0);
      break;
    case 0xB:
    case 0xD:
      type metadata accessor for IdentityCenterView();
      __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3B0);
      sub_22F98E908();
      __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3B8);
      sub_22F98E908();
      __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F428);
      break;
    default:
      type metadata accessor for IdentityCenterView();
      __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3B0);
      sub_22F98E908();
      __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3B8);
      sub_22F98E908();
      __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F428);
      sub_22F98E908();
      break;
  }
  return sub_22F98E908();
}

double sub_22F88243C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, _QWORD *a7@<X8>)
{
  int *v12;
  char *v13;
  char *v14;
  _OWORD *v15;
  _OWORD *v16;
  char *v17;
  _OWORD *v18;
  char *v19;
  char *v20;
  double result;
  __int128 v22;
  uint64_t v23;

  *a7 = a1;
  a7[1] = a2;
  v12 = (int *)type metadata accessor for IdentityCenterView();
  sub_22F87B2B4(a3, (uint64_t)a7 + v12[5], qword_255E1F298);
  v13 = (char *)a7 + v12[6];
  *(_QWORD *)v13 = a4;
  *((_QWORD *)v13 + 1) = a5;
  v13[16] = a6;
  *(double *)((char *)a7 + v12[7]) = *(double *)&qword_255E270F0 * 62.0;
  v14 = (char *)a7 + v12[8];
  sub_22F98E8F0();
  *v14 = v22;
  *((_QWORD *)v14 + 1) = *((_QWORD *)&v22 + 1);
  v15 = (_OWORD *)((char *)a7 + v12[9]);
  sub_22F98E8F0();
  *v15 = v22;
  v16 = (_OWORD *)((char *)a7 + v12[10]);
  sub_22F98E8F0();
  *v16 = v22;
  v17 = (char *)a7 + v12[11];
  sub_22F98E8F0();
  *v17 = v22;
  *((_QWORD *)v17 + 1) = *((_QWORD *)&v22 + 1);
  v18 = (_OWORD *)((char *)a7 + v12[12]);
  sub_22F98E8F0();
  *v18 = v22;
  v19 = (char *)a7 + v12[13];
  sub_22F98E8F0();
  *(_OWORD *)v19 = v22;
  *((_QWORD *)v19 + 2) = v23;
  v20 = (char *)a7 + v12[14];
  sub_22F98E8F0();
  result = *(double *)&v22;
  *(_OWORD *)v20 = v22;
  *((_QWORD *)v20 + 2) = v23;
  return result;
}

uint64_t type metadata accessor for IdentityCenterView()
{
  uint64_t result;

  result = qword_255E1F2F8;
  if (!qword_255E1F2F8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t *sub_22F8826AC(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    v7 = a1;
    a1[1] = a2[1];
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_22F98E308();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_retain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF68);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v15 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_255E1F298);
    v9[v15[9]] = v10[v15[9]];
    *(_QWORD *)&v9[v15[10]] = *(_QWORD *)&v10[v15[10]];
    v9[v15[11]] = v10[v15[11]];
    v16 = a3[6];
    v17 = a3[7];
    v18 = (char *)v7 + v16;
    v19 = (char *)a2 + v16;
    v47 = *((_QWORD *)v19 + 1);
    *(_QWORD *)v18 = *(_QWORD *)v19;
    *((_QWORD *)v18 + 1) = v47;
    v18[16] = v19[16];
    *(uint64_t *)((char *)v7 + v17) = *(uint64_t *)((char *)a2 + v17);
    v20 = a3[8];
    v21 = a3[9];
    v22 = (char *)v7 + v20;
    v23 = (char *)a2 + v20;
    *v22 = *v23;
    *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
    v24 = (uint64_t *)((char *)v7 + v21);
    v25 = (uint64_t *)((char *)a2 + v21);
    v46 = v25[1];
    *v24 = *v25;
    v24[1] = v46;
    v26 = a3[10];
    v27 = a3[11];
    v28 = (uint64_t *)((char *)v7 + v26);
    v29 = (uint64_t *)((char *)a2 + v26);
    v30 = v29[1];
    *v28 = *v29;
    v28[1] = v30;
    v31 = (char *)v7 + v27;
    v32 = (char *)a2 + v27;
    *v31 = *v32;
    *((_QWORD *)v31 + 1) = *((_QWORD *)v32 + 1);
    v33 = a3[12];
    v34 = a3[13];
    v35 = (uint64_t *)((char *)v7 + v33);
    v36 = (uint64_t *)((char *)a2 + v33);
    v37 = v36[1];
    *v35 = *v36;
    v35[1] = v37;
    v38 = (uint64_t *)((char *)v7 + v34);
    v39 = (uint64_t *)((char *)a2 + v34);
    v40 = v39[1];
    *v38 = *v39;
    v38[1] = v40;
    v38[2] = v39[2];
    v41 = a3[14];
    v42 = (uint64_t *)((char *)v7 + v41);
    v43 = (uint64_t *)((char *)a2 + v41);
    v44 = v43[1];
    *v42 = *v43;
    v42[1] = v44;
    v42[2] = v43[2];
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v7;
}

uint64_t sub_22F882914(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_22F98E308();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  __swift_instantiateConcreteTypeFromMangledName(qword_255E1F298);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

_QWORD *sub_22F882A38(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v46;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_22F98E308();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_retain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF68);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_255E1F298);
  v8[v14[9]] = v9[v14[9]];
  *(_QWORD *)&v8[v14[10]] = *(_QWORD *)&v9[v14[10]];
  v8[v14[11]] = v9[v14[11]];
  v15 = a3[6];
  v16 = a3[7];
  v17 = (char *)a1 + v15;
  v18 = (char *)a2 + v15;
  v46 = *((_QWORD *)v18 + 1);
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *((_QWORD *)v17 + 1) = v46;
  v17[16] = v18[16];
  *(_QWORD *)((char *)a1 + v16) = *(_QWORD *)((char *)a2 + v16);
  v19 = a3[8];
  v20 = a3[9];
  v21 = (char *)a1 + v19;
  v22 = (char *)a2 + v19;
  *v21 = *v22;
  *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
  v23 = (_QWORD *)((char *)a1 + v20);
  v24 = (_QWORD *)((char *)a2 + v20);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  v26 = a3[10];
  v27 = a3[11];
  v28 = (_QWORD *)((char *)a1 + v26);
  v29 = (_QWORD *)((char *)a2 + v26);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  v31 = (char *)a1 + v27;
  v32 = (char *)a2 + v27;
  *v31 = *v32;
  *((_QWORD *)v31 + 1) = *((_QWORD *)v32 + 1);
  v33 = a3[12];
  v34 = a3[13];
  v35 = (_QWORD *)((char *)a1 + v33);
  v36 = (_QWORD *)((char *)a2 + v33);
  v37 = v36[1];
  *v35 = *v36;
  v35[1] = v37;
  v38 = (_QWORD *)((char *)a1 + v34);
  v39 = (_QWORD *)((char *)a2 + v34);
  v40 = v39[1];
  *v38 = *v39;
  v38[1] = v40;
  v38[2] = v39[2];
  v41 = a3[14];
  v42 = (_QWORD *)((char *)a1 + v41);
  v43 = (_QWORD *)((char *)a2 + v41);
  v44 = v43[1];
  *v42 = *v43;
  v42[1] = v44;
  v42[2] = v43[2];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

_QWORD *sub_22F882C74(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  char *v36;
  uint64_t v37;
  _QWORD *v38;
  char *v39;

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_22F98E308();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF68);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_255E1F298);
  v7[v15[9]] = v8[v15[9]];
  *(_QWORD *)&v7[v15[10]] = *(_QWORD *)&v8[v15[10]];
  swift_retain();
  swift_release();
  v7[v15[11]] = v8[v15[11]];
  v16 = a3[6];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  *(_QWORD *)((char *)a1 + v16) = *(_QWORD *)((char *)a2 + v16);
  swift_retain();
  swift_release();
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  swift_retain();
  swift_release();
  v17[16] = v18[16];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  v19 = a3[8];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  *v20 = *v21;
  *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
  swift_retain();
  swift_release();
  v22 = a3[9];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  *v23 = *v24;
  v23[1] = v24[1];
  swift_retain();
  swift_release();
  v25 = a3[10];
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (_QWORD *)((char *)a2 + v25);
  *v26 = *v27;
  v26[1] = v27[1];
  swift_retain();
  swift_release();
  v28 = a3[11];
  v29 = (char *)a1 + v28;
  v30 = (char *)a2 + v28;
  *v29 = *v30;
  *((_QWORD *)v29 + 1) = *((_QWORD *)v30 + 1);
  swift_retain();
  swift_release();
  v31 = a3[12];
  v32 = (_QWORD *)((char *)a1 + v31);
  v33 = (_QWORD *)((char *)a2 + v31);
  *v32 = *v33;
  v32[1] = v33[1];
  swift_retain();
  swift_release();
  v34 = a3[13];
  v35 = (_QWORD *)((char *)a1 + v34);
  v36 = (char *)a2 + v34;
  *v35 = *(_QWORD *)((char *)a2 + v34);
  v35[1] = *(_QWORD *)((char *)a2 + v34 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v35[2] = *((_QWORD *)v36 + 2);
  swift_retain();
  swift_release();
  v37 = a3[14];
  v38 = (_QWORD *)((char *)a1 + v37);
  v39 = (char *)a2 + v37;
  *v38 = *(_QWORD *)((char *)a2 + v37);
  v38[1] = *(_QWORD *)((char *)a2 + v37 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v38[2] = *((_QWORD *)v39 + 2);
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_22F882F9C(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_22F98E308();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF68);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_255E1F298);
  v7[v12[9]] = v8[v12[9]];
  *(_QWORD *)&v7[v12[10]] = *(_QWORD *)&v8[v12[10]];
  v7[v12[11]] = v8[v12[11]];
  v13 = a3[6];
  v14 = a3[7];
  v15 = (char *)a1 + v13;
  v16 = (char *)a2 + v13;
  *(_OWORD *)v15 = *(_OWORD *)v16;
  v15[16] = v16[16];
  *(_QWORD *)((char *)a1 + v14) = *(_QWORD *)((char *)a2 + v14);
  v17 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v17) = *(_OWORD *)((char *)a2 + v17);
  v18 = a3[11];
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  *(_OWORD *)((char *)a1 + v18) = *(_OWORD *)((char *)a2 + v18);
  v19 = a3[13];
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)((char *)a2 + a3[12]);
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *((_QWORD *)v20 + 2) = *((_QWORD *)v21 + 2);
  v22 = a3[14];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = *(_OWORD *)v24;
  *((_QWORD *)v23 + 2) = *((_QWORD *)v24 + 2);
  *(_OWORD *)v23 = v25;
  return a1;
}

_QWORD *sub_22F883124(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;

  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_22F98E308();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF68);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_255E1F298);
  v7[v15[9]] = v8[v15[9]];
  *(_QWORD *)&v7[v15[10]] = *(_QWORD *)&v8[v15[10]];
  swift_release();
  v7[v15[11]] = v8[v15[11]];
  v16 = a3[6];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  *(_QWORD *)((char *)a1 + v16) = *(_QWORD *)((char *)a2 + v16);
  swift_release();
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  swift_release();
  v17[16] = v18[16];
  v19 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  *v20 = *v21;
  *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
  swift_release();
  v22 = a3[9];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  *v23 = *v24;
  v23[1] = v24[1];
  swift_release();
  v25 = a3[10];
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (_QWORD *)((char *)a2 + v25);
  *v26 = *v27;
  v26[1] = v27[1];
  swift_release();
  v28 = a3[11];
  v29 = (char *)a1 + v28;
  v30 = (char *)a2 + v28;
  *v29 = *v30;
  *((_QWORD *)v29 + 1) = *((_QWORD *)v30 + 1);
  swift_release();
  v31 = a3[12];
  v32 = (_QWORD *)((char *)a1 + v31);
  v33 = (_QWORD *)((char *)a2 + v31);
  *v32 = *v33;
  v32[1] = v33[1];
  swift_release();
  v34 = a3[13];
  v35 = (_QWORD *)((char *)a1 + v34);
  v36 = (char *)a2 + v34;
  v37 = *(_QWORD *)((char *)a2 + v34 + 8);
  *v35 = *(_QWORD *)((char *)a2 + v34);
  v35[1] = v37;
  swift_bridgeObjectRelease();
  v35[2] = *((_QWORD *)v36 + 2);
  swift_release();
  v38 = a3[14];
  v39 = (_QWORD *)((char *)a1 + v38);
  v40 = (_QWORD *)((char *)a2 + v38);
  v41 = v40[1];
  *v39 = *v40;
  v39[1] = v41;
  swift_bridgeObjectRelease();
  v39[2] = v40[2];
  swift_release();
  return a1;
}

uint64_t sub_22F8833D0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22F8833DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_255E1F298);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_22F883464()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22F883470(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(qword_255E1F298);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

void sub_22F8834F4()
{
  unint64_t v0;

  sub_22F883594();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_22F883594()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255E1F308)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1F310);
    sub_22F8835F8();
    v0 = sub_22F98E2C0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255E1F308);
  }
}

unint64_t sub_22F8835F8()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_255E1F318[0];
  if (!qword_255E1F318[0])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1F310);
    v2 = sub_22F87BBC4();
    result = MEMORY[0x2348A6784](MEMORY[0x24BEE4AB0], v1, &v2);
    atomic_store(result, qword_255E1F318);
  }
  return result;
}

uint64_t sub_22F88365C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22F883670(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for IdentityCenterView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22F8836B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for IdentityCenterView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22F8836FC()
{
  return sub_22F883C8C((uint64_t (*)(uint64_t))sub_22F881B7C);
}

uint64_t sub_22F883714()
{
  return sub_22F883C8C((uint64_t (*)(uint64_t))sub_22F881D6C);
}

unint64_t sub_22F883720()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E1F3D0;
  if (!qword_255E1F3D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1F390);
    v2[0] = sub_22F8837BC(&qword_255E1F3D8, &qword_255E1F388, sub_22F883840);
    v2[1] = sub_22F87AA84(&qword_255E1F408, &qword_255E1F410, (uint64_t)&unk_22F99C190);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E1F3D0);
  }
  return result;
}

uint64_t sub_22F8837BC(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = a3();
    v7[1] = sub_22F87AA84(&qword_255E1F3F8, &qword_255E1F400, MEMORY[0x24BDEEC10]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22F883840()
{
  return sub_22F8837BC(&qword_255E1F3E0, &qword_255E1F380, (uint64_t (*)(void))sub_22F88385C);
}

unint64_t sub_22F88385C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E1F3E8;
  if (!qword_255E1F3E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1F378);
    v2[0] = sub_22F87AA84(&qword_255E1F3F0, &qword_255E1F370, MEMORY[0x24BDF4700]);
    v2[1] = sub_22F87AA84(&qword_255E1F3F8, &qword_255E1F400, MEMORY[0x24BDEEC10]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E1F3E8);
  }
  return result;
}

unint64_t sub_22F8838F8()
{
  unint64_t result;

  result = qword_255E1FD10;
  if (!qword_255E1FD10)
  {
    result = MEMORY[0x2348A6784](&unk_22F992D64, &type metadata for PhoneOrientation);
    atomic_store(result, (unint64_t *)&qword_255E1FD10);
  }
  return result;
}

uint64_t sub_22F883940(uint64_t a1, _BYTE *a2)
{
  type metadata accessor for IdentityCenterView();
  return sub_22F881E44(a1, a2);
}

unint64_t sub_22F88398C()
{
  unint64_t result;

  result = qword_255E1F420;
  if (!qword_255E1F420)
  {
    result = MEMORY[0x2348A6784](&unk_22F999560, &type metadata for IdentityUIState);
    atomic_store(result, (unint64_t *)&qword_255E1F420);
  }
  return result;
}

uint64_t sub_22F8839D0()
{
  return sub_22F881DD8();
}

uint64_t sub_22F8839E8()
{
  return sub_22F881CFC();
}

unint64_t sub_22F883A00()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_255E1F470;
  if (!qword_255E1F470)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1F440);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1F430);
    v2[3] = sub_22F87AA84(&qword_255E1F468, &qword_255E1F430, MEMORY[0x24BDF4700]);
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_22F862548((unint64_t *)&qword_255E1F478, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E1F470);
  }
  return result;
}

uint64_t sub_22F883AD0()
{
  return sub_22F883C8C((uint64_t (*)(uint64_t))sub_22F881620);
}

uint64_t sub_22F883AE0()
{
  return sub_22F883C8C(sub_22F8818D8);
}

uint64_t sub_22F883AF0()
{
  return sub_22F883C8C((uint64_t (*)(uint64_t))sub_22F881B28);
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t objectdestroyTm_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for IdentityCenterView();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  v3 = v0 + ((v2 + 16) & ~v2) + *(int *)(v1 + 20);
  v4 = sub_22F98E308();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  __swift_instantiateConcreteTypeFromMangledName(qword_255E1F298);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22F883C80()
{
  return sub_22F883C8C((uint64_t (*)(uint64_t))sub_22F881884);
}

uint64_t sub_22F883C8C(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IdentityCenterView() - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

unint64_t sub_22F883CC8()
{
  unint64_t result;

  result = qword_255E1F4A8;
  if (!qword_255E1F4A8)
  {
    result = MEMORY[0x2348A6784](&unk_22F993D84, &type metadata for BlurAndMoveModifier);
    atomic_store(result, (unint64_t *)&qword_255E1F4A8);
  }
  return result;
}

uint64_t *sub_22F883D0C(uint64_t *a1)
{
  sub_22F883D84(a1[2], a1[3], a1[4], a1[5], a1[6], a1[7]);
  swift_retain();
  return a1;
}

uint64_t sub_22F883D84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;

  if (a6)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t *sub_22F883E14(uint64_t *a1)
{
  sub_22F883E8C(a1[2], a1[3], a1[4], a1[5], a1[6], a1[7]);
  swift_release();
  return a1;
}

uint64_t sub_22F883E8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;

  if (a6)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

unint64_t sub_22F883F24()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E1F4C8;
  if (!qword_255E1F4C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1F4C0);
    v2[0] = sub_22F87AA84(&qword_255E1F4D0, &qword_255E1F4D8, MEMORY[0x24BDF44C8]);
    v2[1] = sub_22F87AA84(&qword_255E1F4E0, &qword_255E1F4E8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E1F4C8);
  }
  return result;
}

double sub_22F883FC0(uint64_t a1)
{
  double result;

  *(_QWORD *)(a1 + 208) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

uint64_t sub_22F883FE8()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1F398);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1F390);
  sub_22F883720();
  sub_22F8838F8();
  swift_getOpaqueTypeConformance2();
  sub_22F88398C();
  return swift_getOpaqueTypeConformance2();
}

uint64_t dispatch thunk of Suppressible.start()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of Suppressible.stop()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_22F8840A4(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t inited;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t result;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint8_t *v25;
  int v26;
  uint64_t v27;
  uint64_t aBlock[6];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB10 != -1)
    swift_once();
  v7 = __swift_project_value_buffer(v4, (uint64_t)qword_255E295E0);
  sub_22F87BC08(v7, (uint64_t)v6);
  v8 = sub_22F98DAA4();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
  {
    sub_22F87BC50((uint64_t)v6);
  }
  else
  {
    v10 = sub_22F98DA8C();
    v11 = sub_22F98F0A0();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = swift_slowAlloc();
      v26 = a1;
      v13 = (uint8_t *)v12;
      v14 = swift_slowAlloc();
      aBlock[0] = v14;
      *(_DWORD *)v13 = 136315138;
      v25 = v13 + 4;
      LODWORD(v27) = v26;
      v15 = sub_22F98F418();
      v27 = sub_22F878880(v15, v16, aBlock);
      sub_22F98F208();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22F85B000, v10, v11, "SystemSoundPlayer: play starting - id = %s", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348A6838](v14, -1, -1);
      MEMORY[0x2348A6838](v13, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F5F8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22F991B40;
  *(_QWORD *)(inited + 32) = sub_22F98EDB8();
  *(_QWORD *)(inited + 40) = v18;
  *(_BYTE *)(inited + 48) = *(_BYTE *)(v2 + 32);
  sub_22F8AC874(inited);
  v19 = (void *)sub_22F98ED10();
  swift_bridgeObjectRelease();
  aBlock[4] = (uint64_t)sub_22F88478C;
  aBlock[5] = v2;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_22F8644F0;
  aBlock[3] = (uint64_t)&block_descriptor_2;
  v20 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  AudioServicesPlaySystemSoundWithOptions();
  _Block_release(v20);

  result = MEMORY[0x2348A68F8](v2 + 16);
  if (result)
  {
    v22 = result;
    v23 = (uint64_t *)(result + 48);
    swift_beginAccess();
    v24 = *(_QWORD *)(v22 + 48);
    result = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v22 + 48) = v24;
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_22F8B2BD4(v24);
      v24 = result;
      *v23 = result;
    }
    if (*(_QWORD *)(v24 + 16) < 2uLL)
    {
      __break(1u);
    }
    else
    {
      *(_BYTE *)(v24 + 33) = 1;
      swift_endAccess();
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_22F88442C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t result;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E21AB0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB10 != -1)
    swift_once();
  v8 = __swift_project_value_buffer(v5, (uint64_t)qword_255E295E0);
  sub_22F87BC08(v8, (uint64_t)v7);
  v9 = sub_22F98DAA4();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9) == 1)
  {
    sub_22F87BC50((uint64_t)v7);
  }
  else
  {
    v11 = sub_22F98DA8C();
    v12 = sub_22F98F0A0();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_22F85B000, v11, v12, "SystemSoundPlayer: play ended / didFinish", v13, 2u);
      MEMORY[0x2348A6838](v13, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
  }
  result = MEMORY[0x2348A68F8](v1 + 16);
  if (result)
  {
    v15 = result;
    v16 = (uint64_t *)(result + 48);
    swift_beginAccess();
    v17 = *(_QWORD *)(v15 + 48);
    result = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v15 + 48) = v17;
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_22F8B2BD4(v17);
      v17 = result;
      *v16 = result;
    }
    if (*(_QWORD *)(v17 + 16) < 2uLL)
    {
      __break(1u);
    }
    else
    {
      *(_BYTE *)(v17 + 33) = 0;
      swift_endAccess();
      v18 = sub_22F98EFD4();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v4, 1, 1, v18);
      v19 = (_QWORD *)swift_allocObject();
      v19[2] = 0;
      v19[3] = 0;
      v19[4] = v15;
      swift_retain();
      sub_22F884920((uint64_t)v4, (uint64_t)&unk_255E1F5F0, (uint64_t)v19);
      swift_release();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_22F8846B0()
{
  uint64_t v0;

  sub_22F8847A8(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SystemSoundPlayer()
{
  return objc_opt_self();
}

uint64_t sub_22F8846F4()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22F884720(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_22F87B390;
  return sub_22F978320(a1, v4, v5, v6);
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t sub_22F8847A8(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

uint64_t sub_22F8847CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_22F98EFD4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_22F98EFC8();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_22F87AC20(a1, (uint64_t *)&unk_255E21AB0);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_22F98EF8C();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F6F0);
  return swift_task_create();
}

uint64_t sub_22F884920(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22F88495C(a1, a2, a3);
}

uint64_t sub_22F884940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22F88495C(a1, a2, a3);
}

uint64_t sub_22F88495C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_22F98EFD4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_22F98EFC8();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_22F87AC20(a1, (uint64_t *)&unk_255E21AB0);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_22F98EF8C();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t WalletSuppressor.__allocating_init()()
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  return result;
}

uint64_t WalletSuppressor.init()()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  *(_QWORD *)(v0 + 16) = 0;
  return result;
}

uint64_t WalletSuppressor.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v13;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(void **)(v1 + 16);
  if (v5)
  {
    *(_QWORD *)(v1 + 16) = 0;
    objc_msgSend(v5, sel_invalidate);
    if (qword_255E1DB18 != -1)
      swift_once();
    v6 = __swift_project_value_buffer(v2, (uint64_t)qword_255E295F8);
    sub_22F87BC08(v6, (uint64_t)v4);
    v7 = sub_22F98DAA4();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v4, 1, v7) == 1)
    {

      sub_22F87AC20((uint64_t)v4, (uint64_t *)&unk_255E206E0);
    }
    else
    {
      v9 = sub_22F98DA8C();
      v10 = sub_22F98F0A0();
      if (os_log_type_enabled(v9, v10))
      {
        v11 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v11 = 0;
        _os_log_impl(&dword_22F85B000, v9, v10, "WalletSuppressor - ending NFC detect suppression", v11, 2u);
        MEMORY[0x2348A6838](v11, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v8 + 8))(v4, v7);
    }
  }

  return v1;
}

uint64_t WalletSuppressor.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v13;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(void **)(v1 + 16);
  if (v5)
  {
    *(_QWORD *)(v1 + 16) = 0;
    objc_msgSend(v5, sel_invalidate);
    if (qword_255E1DB18 != -1)
      swift_once();
    v6 = __swift_project_value_buffer(v2, (uint64_t)qword_255E295F8);
    sub_22F87BC08(v6, (uint64_t)v4);
    v7 = sub_22F98DAA4();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v4, 1, v7) == 1)
    {

      sub_22F87AC20((uint64_t)v4, (uint64_t *)&unk_255E206E0);
    }
    else
    {
      v9 = sub_22F98DA8C();
      v10 = sub_22F98F0A0();
      if (os_log_type_enabled(v9, v10))
      {
        v11 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v11 = 0;
        _os_log_impl(&dword_22F85B000, v9, v10, "WalletSuppressor - ending NFC detect suppression", v11, 2u);
        MEMORY[0x2348A6838](v11, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v8 + 8))(v4, v7);
    }
  }

  return swift_deallocClassInstance();
}

uint64_t sub_22F884E28()
{
  uint64_t v0;
  _QWORD *v1;

  v1[21] = v0;
  v1[22] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v1[23] = swift_task_alloc();
  v1[24] = swift_task_alloc();
  v1[25] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22F884EA4()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = (void *)objc_opt_self();
  v2 = sub_22F98ED94();
  v0[26] = v2;
  v0[7] = v0 + 18;
  v0[2] = v0;
  v0[3] = sub_22F884F78;
  v3 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v4 = v0 + 10;
  v4[1] = 0x40000000;
  v4[2] = sub_22F8854D0;
  v4[3] = &block_descriptor_3;
  v4[4] = v3;
  objc_msgSend(v1, sel_acquireAssertionOfType_withReason_completion_, 0, v2, v4);
  return swift_continuation_await();
}

uint64_t sub_22F884F78()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 216) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_22F884FD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 144);

  if (v1)
  {
    if (qword_255E1DB18 != -1)
      swift_once();
    v2 = *(_QWORD *)(v0 + 200);
    v3 = __swift_project_value_buffer(*(_QWORD *)(v0 + 176), (uint64_t)qword_255E295F8);
    sub_22F87BC08(v3, v2);
    v4 = sub_22F98DAA4();
    v5 = *(_QWORD *)(v4 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v2, 1, v4) == 1)
    {
      sub_22F87AC20(*(_QWORD *)(v0 + 200), (uint64_t *)&unk_255E206E0);
    }
    else
    {
      v10 = sub_22F98DA8C();
      v11 = sub_22F98F0A0();
      if (os_log_type_enabled(v10, v11))
      {
        v12 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v12 = 0;
        _os_log_impl(&dword_22F85B000, v10, v11, "WalletSuppressor - PassKit suppress success", v12, 2u);
        MEMORY[0x2348A6838](v12, -1, -1);
      }
      v13 = *(_QWORD *)(v0 + 200);

      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v13, v4);
    }
    v14 = *(_QWORD *)(v0 + 168);
    v15 = *(void **)(v14 + 16);
    *(_QWORD *)(v14 + 16) = v1;

  }
  else
  {
    if (qword_255E1DB18 != -1)
      swift_once();
    v6 = *(_QWORD *)(v0 + 192);
    v7 = __swift_project_value_buffer(*(_QWORD *)(v0 + 176), (uint64_t)qword_255E295F8);
    sub_22F87BC08(v7, v6);
    v8 = sub_22F98DAA4();
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
    {
      sub_22F87AC20(*(_QWORD *)(v0 + 192), (uint64_t *)&unk_255E206E0);
    }
    else
    {
      v16 = sub_22F98DA8C();
      v17 = sub_22F98F088();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v18 = 0;
        _os_log_impl(&dword_22F85B000, v16, v17, "WalletSuppressor - could not acquire assertion for NFC detect suppression", v18, 2u);
        MEMORY[0x2348A6838](v18, -1, -1);
      }
      v19 = *(_QWORD *)(v0 + 192);

      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v19, v8);
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22F88525C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  _BOOL4 v13;
  void *v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;

  v1 = *(void **)(v0 + 208);
  swift_willThrow();

  if (qword_255E1DB18 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 184);
  v3 = __swift_project_value_buffer(*(_QWORD *)(v0 + 176), (uint64_t)qword_255E295F8);
  sub_22F87BC08(v3, v2);
  v4 = sub_22F98DAA4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v2, 1, v4);
  v7 = *(void **)(v0 + 216);
  v8 = *(_QWORD *)(v0 + 184);
  if (v6 == 1)
  {

    sub_22F87AC20(v8, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    v9 = v7;
    v10 = v7;
    v11 = sub_22F98DA8C();
    v12 = sub_22F98F088();
    v13 = os_log_type_enabled(v11, v12);
    v14 = *(void **)(v0 + 216);
    if (v13)
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v20 = v16;
      *(_DWORD *)v15 = 136446210;
      swift_getErrorValue();
      v17 = sub_22F98F49C();
      *(_QWORD *)(v0 + 160) = sub_22F878880(v17, v18, &v20);
      sub_22F98F208();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22F85B000, v11, v12, "WalletSuppressor - error requesting NFC detect suppression: [ %{public}s ]", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348A6838](v16, -1, -1);
      MEMORY[0x2348A6838](v15, -1, -1);

    }
    else
    {

    }
    (*(void (**)(_QWORD, uint64_t))(v5 + 8))(*(_QWORD *)(v0 + 184), v4);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22F8854D0(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  _QWORD *v5;
  id v6;
  uint64_t v8;
  id v9;
  void *v10;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E249C0);
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    v10 = a2;
    v8 = *(_QWORD *)(*(_QWORD *)(v3 + 64) + 40);
    v9 = a2;
    sub_22F886054((uint64_t)&v10, v8);
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_22F885570()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E21AB0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend((id)objc_opt_self(), sel_isPassLibraryAvailable))
  {
    v7 = sub_22F98EFD4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
    v8 = (_QWORD *)swift_allocObject();
    v8[2] = 0;
    v8[3] = 0;
    v8[4] = v0;
    swift_retain();
    sub_22F88495C((uint64_t)v6, (uint64_t)&unk_255E1F608, (uint64_t)v8);
    return swift_release();
  }
  else
  {
    if (qword_255E1DB18 != -1)
      swift_once();
    v10 = __swift_project_value_buffer(v1, (uint64_t)qword_255E295F8);
    sub_22F87BC08(v10, (uint64_t)v3);
    v11 = sub_22F98DAA4();
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v3, 1, v11) == 1)
    {
      return sub_22F87AC20((uint64_t)v3, (uint64_t *)&unk_255E206E0);
    }
    else
    {
      v13 = sub_22F98DA8C();
      v14 = sub_22F98F0A0();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v15 = 0;
        _os_log_impl(&dword_22F85B000, v13, v14, "WalletSuppressor - library not available", v15, 2u);
        MEMORY[0x2348A6838](v15, -1, -1);
      }

      return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v3, v11);
    }
  }
}

uint64_t sub_22F8857B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[15] = a4;
  v4[16] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v4[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22F885810()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v6;

  v1 = *(void **)(v0[15] + 16);
  v0[18] = v1;
  if (v1)
  {
    v2 = (void *)objc_opt_self();
    v0[7] = v0 + 20;
    v0[2] = v0;
    v0[3] = sub_22F885908;
    v3 = swift_continuation_init();
    v0[10] = MEMORY[0x24BDAC760];
    v4 = v0 + 10;
    v4[1] = 0x40000000;
    v4[2] = sub_22F885B40;
    v4[3] = &block_descriptor_17;
    v4[4] = v3;
    objc_msgSend(v2, sel_isAssertionValid_completion_, v1, v4);
    return swift_continuation_await();
  }
  else
  {
    v6 = (_QWORD *)swift_task_alloc();
    v0[19] = v6;
    *v6 = v0;
    v6[1] = sub_22F885AF4;
    return sub_22F884E28();
  }
}

uint64_t sub_22F885908()
{
  return swift_task_switch();
}

uint64_t sub_22F885954()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  void *v12;

  if (*(_BYTE *)(v0 + 160) == 1)
  {
    if (qword_255E1DB18 != -1)
      swift_once();
    v1 = *(_QWORD *)(v0 + 136);
    v2 = __swift_project_value_buffer(*(_QWORD *)(v0 + 128), (uint64_t)qword_255E295F8);
    sub_22F87BC08(v2, v1);
    v3 = sub_22F98DAA4();
    v4 = *(_QWORD *)(v3 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3) == 1)
    {
      v5 = *(_QWORD *)(v0 + 136);

      sub_22F87AC20(v5, (uint64_t *)&unk_255E206E0);
    }
    else
    {
      v8 = sub_22F98DA8C();
      v9 = sub_22F98F0A0();
      if (os_log_type_enabled(v8, v9))
      {
        v10 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v10 = 0;
        _os_log_impl(&dword_22F85B000, v8, v9, "WalletSuppressor - PassKit suppress success", v10, 2u);
        MEMORY[0x2348A6838](v10, -1, -1);
      }
      v11 = *(_QWORD *)(v0 + 136);
      v12 = *(void **)(v0 + 144);

      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v11, v3);
    }
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {

    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v6;
    *v6 = v0;
    v6[1] = sub_22F885AF4;
    return sub_22F884E28();
  }
}

uint64_t sub_22F885AF4()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_22F885B40(uint64_t a1, char a2)
{
  **(_BYTE **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 64) + 40) = a2;
  return swift_continuation_resume();
}

uint64_t sub_22F885B54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  char *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  result = MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(void **)(v0 + 16);
  if (v5)
  {
    *(_QWORD *)(v0 + 16) = 0;
    objc_msgSend(v5, sel_invalidate);
    if (qword_255E1DB18 != -1)
      swift_once();
    v6 = __swift_project_value_buffer(v1, (uint64_t)qword_255E295F8);
    sub_22F87BC08(v6, (uint64_t)v4);
    v7 = sub_22F98DAA4();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v4, 1, v7) == 1)
    {

      return sub_22F87AC20((uint64_t)v4, (uint64_t *)&unk_255E206E0);
    }
    else
    {
      v9 = sub_22F98DA8C();
      v10 = sub_22F98F0A0();
      if (os_log_type_enabled(v9, v10))
      {
        v11 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v11 = 0;
        _os_log_impl(&dword_22F85B000, v9, v10, "WalletSuppressor - ending NFC detect suppression", v11, 2u);
        MEMORY[0x2348A6838](v11, -1, -1);
      }

      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v4, v7);
    }
  }
  return result;
}

uint64_t sub_22F885CE8()
{
  return sub_22F885570();
}

uint64_t sub_22F885D08()
{
  return sub_22F885B54();
}

uint64_t sub_22F885D28()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22F885D54(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_22F87B390;
  return sub_22F8857B0(a1, v4, v5, v6);
}

uint64_t type metadata accessor for WalletSuppressor()
{
  return objc_opt_self();
}

uint64_t method lookup function for WalletSuppressor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WalletSuppressor.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of WalletSuppressor.start()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of WalletSuppressor.stop()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t sub_22F885E0C(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_22F885E70;
  return v6(a1);
}

uint64_t sub_22F885E70()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_22F885EBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_22F87B58C;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_255E28908 + dword_255E28908))(a1, v4);
}

uint64_t sub_22F885F2C(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_22F885F94;
  return v5(v2 + 32);
}

uint64_t sub_22F885F94()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_BYTE **)(*v0 + 16);
  v4 = *v0;
  swift_task_dealloc();
  *v2 = *(_BYTE *)(v1 + 32);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_22F885FE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_22F87B390;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_255E1F6F8 + dword_255E1F6F8))(a1, v4);
}

uint64_t sub_22F886054(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F708);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22F88609C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22F8860C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_22F87B58C;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_255E1F710 + dword_255E1F710))(a1, v4);
}

uint64_t sub_22F886138@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (**v35)();
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  double *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  double v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  double *v74;
  uint64_t result;
  uint64_t v76;
  char *v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  double v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;

  v2 = v1;
  v95 = a1;
  v96 = type metadata accessor for MerchantDetailsView();
  v3 = *(_QWORD *)(v96 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v96);
  v5 = (char *)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F7F0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F7F8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F800);
  v82 = *(_QWORD *)(v83 - 8);
  MEMORY[0x24BDAC7A8](v83);
  v78 = (char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F808);
  MEMORY[0x24BDAC7A8](v80);
  v79 = (char *)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F810);
  MEMORY[0x24BDAC7A8](v84);
  v81 = (uint64_t)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F818);
  MEMORY[0x24BDAC7A8](v86);
  v85 = (uint64_t)&v76 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F820);
  MEMORY[0x24BDAC7A8](v87);
  v77 = (char *)&v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F828);
  v93 = *(_QWORD *)(v94 - 8);
  MEMORY[0x24BDAC7A8](v94);
  v92 = (char *)&v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F830);
  MEMORY[0x24BDAC7A8](v90);
  v91 = (char *)&v76 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v8 = sub_22F98E128();
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 1;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F838);
  sub_22F886A50(v2, (uint64_t)&v8[*(int *)(v19 + 44)]);
  sub_22F98EA88();
  sub_22F98DF3C();
  sub_22F87ABDC((uint64_t)v8, (uint64_t)v11, &qword_255E1F7F0);
  v20 = &v11[*(int *)(v9 + 36)];
  v21 = v106;
  *((_OWORD *)v20 + 4) = v105;
  *((_OWORD *)v20 + 5) = v21;
  *((_OWORD *)v20 + 6) = v107;
  v22 = v102;
  *(_OWORD *)v20 = v101;
  *((_OWORD *)v20 + 1) = v22;
  v23 = v104;
  *((_OWORD *)v20 + 2) = v103;
  *((_OWORD *)v20 + 3) = v23;
  sub_22F87AC20((uint64_t)v8, &qword_255E1F7F0);
  sub_22F889F68(v2, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for MerchantDetailsView);
  v24 = *(unsigned __int8 *)(v3 + 80);
  v25 = (v24 + 16) & ~v24;
  v26 = v24 | 7;
  v27 = swift_allocObject();
  sub_22F889C5C((uint64_t)v5, v27 + v25);
  sub_22F889CAC();
  v28 = v78;
  sub_22F98E638();
  swift_release();
  sub_22F87AC20((uint64_t)v11, &qword_255E1F7F8);
  sub_22F889F68(v2, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for MerchantDetailsView);
  v89 = v25 + v4;
  v88 = v26;
  v29 = v25;
  v30 = (uint64_t)v5;
  v31 = swift_allocObject();
  sub_22F889C5C((uint64_t)v5, v31 + v29);
  v32 = v82;
  v33 = (uint64_t)v79;
  v34 = v83;
  (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v79, v28, v83);
  v35 = (uint64_t (**)())(v33 + *(int *)(v80 + 36));
  *v35 = sub_22F889D34;
  v35[1] = (uint64_t (*)())v31;
  v35[2] = 0;
  v35[3] = 0;
  v36 = (uint64_t)v77;
  (*(void (**)(char *, uint64_t))(v32 + 8))(v28, v34);
  v37 = v96;
  v38 = (uint64_t *)(v2 + *(int *)(v96 + 40));
  v39 = *v38;
  v40 = v38[1];
  v97 = v39;
  v98 = v40;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3C0);
  sub_22F98E8FC();
  v42 = v100;
  sub_22F98EB6C();
  v44 = v43;
  v46 = v45;
  v47 = v81;
  sub_22F87ABDC(v33, v81, &qword_255E1F808);
  v48 = (double *)(v47 + *(int *)(v84 + 36));
  *v48 = v42;
  v48[1] = v42;
  *((_QWORD *)v48 + 2) = v44;
  *((_QWORD *)v48 + 3) = v46;
  sub_22F87AC20(v33, &qword_255E1F808);
  v49 = (uint64_t *)(v2 + *(int *)(v37 + 36));
  v50 = *v49;
  v51 = v49[1];
  v97 = v50;
  v98 = v51;
  v84 = v41;
  sub_22F98E8FC();
  v52 = v100 * 0.0174532925;
  sub_22F98EB6C();
  v54 = v53;
  v56 = v55;
  v57 = v85;
  sub_22F87ABDC(v47, v85, &qword_255E1F810);
  v58 = v57 + *(int *)(v86 + 36);
  *(double *)v58 = v52;
  *(_QWORD *)(v58 + 8) = v54;
  *(_QWORD *)(v58 + 16) = v56;
  sub_22F87AC20(v47, &qword_255E1F810);
  v59 = sub_22F98EB24();
  v60 = *(_QWORD *)(v2 + 24);
  v61 = *(_BYTE *)(v2 + 32);
  v97 = *(_QWORD *)(v2 + 16);
  v98 = v60;
  v99 = v61;
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F418);
  MEMORY[0x2348A5560](&v100, v62);
  LODWORD(v31) = (LOBYTE(v100) < 0xBuLL) & (0x447u >> SLOBYTE(v100));
  sub_22F87ABDC(v57, v36, &qword_255E1F818);
  v63 = v36 + *(int *)(v87 + 36);
  *(_QWORD *)v63 = v59;
  *(_BYTE *)(v63 + 8) = v31;
  sub_22F87AC20(v57, &qword_255E1F818);
  if (*(_QWORD *)v2)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_22F98DBA0();
    swift_release();
    swift_release();
    swift_release();
    sub_22F889F68(v2, v30, (uint64_t (*)(_QWORD))type metadata accessor for MerchantDetailsView);
    v64 = swift_allocObject();
    sub_22F889C5C(v30, v64 + v29);
    sub_22F889D84();
    sub_22F8838F8();
    v65 = v92;
    sub_22F98E7A0();
    swift_release();
    sub_22F87AC20(v36, &qword_255E1F820);
    v66 = (uint64_t *)(v2 + *(int *)(v96 + 44));
    v67 = *v66;
    v68 = v66[1];
    v97 = v67;
    v98 = v68;
    sub_22F98E8FC();
    v69 = v100;
    sub_22F889F68(v2, v30, (uint64_t (*)(_QWORD))type metadata accessor for MerchantDetailsView);
    v70 = swift_allocObject();
    sub_22F889C5C(v30, v70 + v29);
    v71 = v93;
    v72 = (uint64_t)v91;
    v73 = v94;
    (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v91, v65, v94);
    v74 = (double *)(v72 + *(int *)(v90 + 36));
    *v74 = v69;
    v74[1] = v69;
    *((_QWORD *)v74 + 2) = sub_22F889EE4;
    *((_QWORD *)v74 + 3) = v70;
    (*(void (**)(char *, uint64_t))(v71 + 8))(v65, v73);
    return sub_22F87B2B4(v72, v95, &qword_255E1F830);
  }
  else
  {
    type metadata accessor for FineRotationManager(0);
    sub_22F862548(&qword_255E1F3C8, type metadata accessor for FineRotationManager, (uint64_t)&unk_22F992D8C);
    result = sub_22F98DF54();
    __break(1u);
  }
  return result;
}

uint64_t sub_22F886A50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char *v43;
  char *v44;
  char v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  int64x2_t *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)@<X0>(uint64_t@<X0>, uint64_t *@<X8>);
  uint64_t (*v61)@<X0>(uint64_t@<X0>, uint64_t *@<X8>);
  uint64_t v62;
  uint64_t (**v63)@<X0>(uint64_t@<X0>, uint64_t *@<X8>);
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int64x2_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  __int128 v93;
  uint64_t v94;
  uint64_t v95;

  v90 = a2;
  v3 = type metadata accessor for MerchantDetailsView();
  v85 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v86 = v4;
  v87 = (uint64_t)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = sub_22F98DF00();
  MEMORY[0x24BDAC7A8](v83);
  v84 = (int64x2_t *)((char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v81 = sub_22F98EA4C();
  v78 = *(_QWORD *)(v81 - 8);
  MEMORY[0x24BDAC7A8](v81);
  v77 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F878);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F880);
  MEMORY[0x24BDAC7A8](v70);
  v11 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F888);
  MEMORY[0x24BDAC7A8](v12);
  v73 = (uint64_t)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F890);
  MEMORY[0x24BDAC7A8](v71);
  v15 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F898);
  MEMORY[0x24BDAC7A8](v72);
  v75 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F8A0);
  MEMORY[0x24BDAC7A8](v74);
  v79 = (char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F8A8);
  MEMORY[0x24BDAC7A8](v82);
  v80 = (uint64_t)&v68 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F8B0);
  v88 = *(_QWORD *)(v19 - 8);
  v89 = v19;
  MEMORY[0x24BDAC7A8](v19);
  v76 = (char *)&v68 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F730);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v68 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_22F98D888();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v68 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = *(_QWORD *)(a1 + 24);
  v29 = *(_BYTE *)(a1 + 32);
  v91 = *(_QWORD *)(a1 + 16);
  v92 = v28;
  LOBYTE(v93) = v29;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F418);
  MEMORY[0x2348A5560](&v94, v30);
  if (v94 > 0xAu || ((1 << v94) & 0x447) == 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v88 + 56))(v90, 1, 1, v89);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F720);
  MEMORY[0x2348A5560](v31);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24) == 1)
  {
    sub_22F87AC20((uint64_t)v23, &qword_255E1F730);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v88 + 56))(v90, 1, 1, v89);
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v27, v23, v24);
  v32 = a1 + *(int *)(v3 + 28);
  v33 = *(_QWORD *)(v32 + 8);
  v91 = *(_QWORD *)v32;
  v92 = v33;
  v93 = *(_OWORD *)(v32 + 16);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F8B8);
  MEMORY[0x2348A5560](&v94, v34);
  v35 = v95;
  if (!v95)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v88 + 56))(v90, 1, 1, v89);
  }
  v36 = v94;
  *(_QWORD *)v9 = sub_22F98E128();
  *((_QWORD *)v9 + 1) = 0;
  v9[16] = 0;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F8C0);
  sub_22F8872A8(a1, (uint64_t)v27, v36, v35, (uint64_t)&v9[*(int *)(v37 + 44)]);
  swift_bridgeObjectRelease();
  v69 = v27;
  if (qword_255E1DB50 != -1)
    swift_once();
  v38 = qword_255E296D0;
  sub_22F87ABDC((uint64_t)v9, (uint64_t)v11, &qword_255E1F878);
  *(_QWORD *)&v11[*(int *)(v70 + 36)] = v38;
  swift_retain();
  sub_22F87AC20((uint64_t)v9, &qword_255E1F878);
  v39 = sub_22F98EA88();
  v40 = v73;
  sub_22F8F8A60(0.0, 1, 0.0, 1, 342.0, 0, 0.0, 1, v73, 0.0, 1, 0.0, 1, v39, v41);
  sub_22F87AC20((uint64_t)v11, &qword_255E1F880);
  v42 = sub_22F98E41C();
  sub_22F87ABDC(v40, (uint64_t)v15, &qword_255E1F888);
  v43 = &v15[*(int *)(v71 + 36)];
  *v43 = v42;
  *(_OWORD *)(v43 + 8) = xmmword_22F992A80;
  *(_OWORD *)(v43 + 24) = xmmword_22F992A90;
  v43[40] = 0;
  sub_22F87AC20(v40, &qword_255E1F888);
  v44 = v77;
  sub_22F98EA28();
  v45 = sub_22F98E41C();
  v46 = (uint64_t)v75;
  v47 = &v75[*(int *)(v72 + 36)];
  v48 = v78;
  v49 = v81;
  (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v47, v44, v81);
  v47[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255E1F8C8) + 36)] = v45;
  sub_22F87ABDC((uint64_t)v15, v46, &qword_255E1F890);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v44, v49);
  sub_22F87AC20((uint64_t)v15, &qword_255E1F890);
  v50 = v84;
  v51 = &v84->i8[*(int *)(v83 + 20)];
  v52 = *MEMORY[0x24BDEEB68];
  v53 = sub_22F98E0EC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 104))(v51, v52, v53);
  *v50 = vdupq_n_s64(0x4043000000000000uLL);
  v54 = (uint64_t)v79;
  v55 = (uint64_t)&v79[*(int *)(v74 + 36)];
  sub_22F889F68((uint64_t)v50, v55, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
  *(_WORD *)(v55 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255E1F8D0) + 36)) = 256;
  sub_22F87ABDC(v46, v54, &qword_255E1F898);
  sub_22F889FAC((uint64_t)v50);
  sub_22F87AC20(v46, &qword_255E1F898);
  v56 = v87;
  sub_22F889F68(a1, v87, (uint64_t (*)(_QWORD))type metadata accessor for MerchantDetailsView);
  v57 = (*(unsigned __int8 *)(v85 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80);
  v58 = swift_allocObject();
  sub_22F889C5C(v56, v58 + v57);
  v59 = sub_22F98EA88();
  v61 = v60;
  v62 = v80;
  sub_22F87ABDC(v54, v80, &qword_255E1F8A0);
  v63 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))(v62 + *(int *)(v82 + 36));
  *v63 = sub_22F88A158;
  v63[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))v58;
  v63[2] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))v59;
  v63[3] = v61;
  sub_22F87AC20(v54, &qword_255E1F8A0);
  sub_22F88A1A4();
  v64 = v76;
  sub_22F98E6BC();
  sub_22F87AC20(v62, &qword_255E1F8A8);
  v65 = (uint64_t)v64;
  v66 = v90;
  sub_22F87B2B4(v65, v90, &qword_255E1F8B0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v88 + 56))(v66, 0, 1, v89);
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v69, v24);
}

uint64_t sub_22F8872A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t KeyPath;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  char v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  char v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char v114;
  char v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char v130;
  char v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char v135;
  char v136;
  char v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char v141;
  char v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char v148;
  char v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  __int128 v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  char v208;
  _BYTE v209[7];
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  char v214;
  uint64_t v215;
  char v216;
  uint64_t v217;
  char v218;
  uint64_t v219;
  uint64_t v220;
  char v221;
  _DWORD v222[2];
  int v223;
  __int16 v224;
  _DWORD v225[2];
  char v226;
  _BYTE v227[7];
  char v228;
  int v229;
  __int16 v230;
  char v231;

  v187 = a3;
  v188 = a4;
  v182 = a2;
  v191 = a5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F938);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v192 = (uint64_t)&v161 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v190 = (char *)&v161 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E20810);
  MEMORY[0x24BDAC7A8](v10);
  v162 = (char *)&v161 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F940);
  v168 = *(_QWORD *)(v12 - 8);
  v169 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v166 = (char *)&v161 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F948);
  MEMORY[0x24BDAC7A8](v163);
  v167 = (char *)&v161 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v164 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F950);
  MEMORY[0x24BDAC7A8](v164);
  v170 = (uint64_t)&v161 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v165 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F958);
  MEMORY[0x24BDAC7A8](v165);
  v172 = (uint64_t)&v161 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v174 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F960);
  MEMORY[0x24BDAC7A8](v174);
  v173 = (uint64_t)&v161 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v186 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F968);
  v18 = MEMORY[0x24BDAC7A8](v186);
  v171 = (char *)&v161 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v175 = (uint64_t)&v161 - v20;
  v183 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F970);
  MEMORY[0x24BDAC7A8](v183);
  v185 = (uint64_t)&v161 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v184 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F978);
  MEMORY[0x24BDAC7A8](v184);
  v161 = (char *)&v161 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F980);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v189 = (uint64_t)&v161 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v195 = (uint64_t)&v161 - v26;
  v27 = sub_22F98E098();
  v28 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEE630];
  v29 = *(_QWORD *)(v27 - 8);
  v30 = MEMORY[0x24BDAC7A8](v27);
  v32 = (char *)&v161 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30);
  v34 = (char *)&v161 - v33;
  v35 = sub_22F98E878();
  v36 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v38 = (char *)&v161 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v181 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F988);
  v39 = MEMORY[0x24BDAC7A8](v181);
  v180 = (char *)&v161 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = MEMORY[0x24BDAC7A8](v39);
  v194 = (uint64_t)&v161 - v42;
  MEMORY[0x24BDAC7A8](v41);
  v193 = (uint64_t)&v161 - v43;
  v44 = (uint64_t *)(a1 + *(int *)(type metadata accessor for MerchantDetailsView() + 48));
  v46 = *v44;
  v45 = v44[1];
  v197 = v46;
  v198 = v45;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F870);
  sub_22F98E8FC();
  sub_22F98E860();
  (*(void (**)(char *, _QWORD, uint64_t))(v36 + 104))(v38, *MEMORY[0x24BDF3FD0], v35);
  *(_QWORD *)&v179 = sub_22F98E890();
  swift_release();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v35);
  sub_22F98EA88();
  sub_22F98DCFC();
  v47 = v215;
  LOBYTE(a1) = v216;
  LOBYTE(v36) = v218;
  v178 = v219;
  v176 = v217;
  v177 = v220;
  sub_22F98E08C();
  (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v32, v34, v27);
  sub_22F862548((unint64_t *)&qword_255E1F0A0, v28, MEMORY[0x24BDEE620]);
  v48 = sub_22F98DD80();
  LOBYTE(v197) = 1;
  v227[0] = 0;
  LOBYTE(v225[0]) = a1;
  LOBYTE(v222[0]) = v36;
  LOBYTE(v229) = 0;
  LOBYTE(v223) = 1;
  (*(void (**)(char *, uint64_t))(v29 + 8))(v34, v27);
  LOBYTE(v34) = v197;
  LOBYTE(v27) = v227[0];
  LOBYTE(v36) = v225[0];
  LOBYTE(v29) = v222[0];
  LOBYTE(v28) = v229;
  LOBYTE(v38) = v223;
  LOBYTE(a1) = sub_22F98E434();
  sub_22F98DBF4();
  v231 = (char)v34;
  v228 = v36;
  v226 = v29;
  v221 = 0;
  v197 = v179;
  v198 = 0;
  LOBYTE(v199) = (_BYTE)v34;
  BYTE1(v199) = v27;
  *(_DWORD *)((char *)&v199 + 2) = v229;
  HIWORD(v199) = v230;
  v200 = v47;
  LOBYTE(v201) = v36;
  *(_DWORD *)((char *)&v201 + 1) = *(_DWORD *)v227;
  HIDWORD(v201) = *(_DWORD *)&v227[3];
  v202 = v176;
  LOBYTE(v203) = v29;
  HIDWORD(v203) = *(_DWORD *)((char *)v225 + 3);
  *(_DWORD *)((char *)&v203 + 1) = v225[0];
  v204 = v178;
  v205 = v177;
  LOBYTE(v206) = (_BYTE)v28;
  BYTE1(v206) = (_BYTE)v38;
  HIWORD(v206) = v224;
  *(_DWORD *)((char *)&v206 + 2) = v223;
  v207 = v48;
  v208 = a1;
  *(_DWORD *)&v209[3] = *(_DWORD *)((char *)v222 + 3);
  *(_DWORD *)v209 = v222[0];
  v210 = v49;
  v211 = v50;
  v212 = v51;
  v213 = v52;
  v214 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F990);
  sub_22F87E2D8(&qword_255E1F998, &qword_255E1F990, (uint64_t (*)(void))sub_22F88A614, MEMORY[0x24BDECC60]);
  v53 = (uint64_t)v180;
  sub_22F98E6BC();
  swift_release();
  swift_release();
  v54 = v194;
  sub_22F98DEB8();
  sub_22F87AC20(v53, &qword_255E1F988);
  sub_22F87B2B4(v54, v193, &qword_255E1F988);
  v55 = sub_22F98D870();
  v57 = v56;
  swift_bridgeObjectRelease();
  v58 = HIBYTE(v57) & 0xF;
  if ((v57 & 0x2000000000000000) == 0)
    v58 = v55 & 0xFFFFFFFFFFFFLL;
  if (v58)
  {
    v180 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_255E249D0);
    v59 = swift_allocObject();
    v179 = xmmword_22F991B40;
    *(_OWORD *)(v59 + 16) = xmmword_22F991B40;
    v60 = sub_22F98D870();
    v62 = v61;
    *(_QWORD *)(v59 + 56) = MEMORY[0x24BEE0D00];
    v63 = sub_22F87FD04();
    *(_QWORD *)(v59 + 64) = v63;
    *(_QWORD *)(v59 + 32) = v60;
    *(_QWORD *)(v59 + 40) = v62;
    sub_22F932EEC(0);
    v64 = (uint64_t)v162;
    sub_22F98D420();
    v65 = sub_22F98D4B0();
    v66 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56);
    v66(v64, 0, 1, v65);
    swift_bridgeObjectRetain();
    v181 = sub_22F98EDD0();
    v68 = v67;
    swift_bridgeObjectRelease();
    sub_22F87AC20(v64, (uint64_t *)&unk_255E20810);
    swift_bridgeObjectRelease();
    v69 = swift_allocObject();
    *(_OWORD *)(v69 + 16) = v179;
    v70 = sub_22F98D870();
    *(_QWORD *)(v69 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v69 + 64) = v63;
    *(_QWORD *)(v69 + 32) = v70;
    *(_QWORD *)(v69 + 40) = v71;
    sub_22F932EEC(0);
    sub_22F98D420();
    v66(v64, 0, 1, v65);
    swift_bridgeObjectRetain();
    v72 = sub_22F98EDD0();
    v74 = v73;
    swift_bridgeObjectRelease();
    sub_22F87AC20(v64, (uint64_t *)&unk_255E20810);
    swift_bridgeObjectRelease();
    v196 = 0;
    sub_22F98E8F0();
    v75 = v197;
    v76 = v198;
    v77 = sub_22F98E500();
    KeyPath = swift_getKeyPath();
    v197 = v181;
    v198 = v68;
    v199 = v72;
    v200 = v74;
    LOBYTE(v201) = v75;
    v202 = v76;
    v203 = KeyPath;
    v204 = v77;
    sub_22F98E4D0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F9E0);
    sub_22F88A744();
    v79 = v166;
    sub_22F98E614();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    v80 = sub_22F98E83C();
    v81 = swift_getKeyPath();
    v83 = (uint64_t)v167;
    v82 = v168;
    v84 = v169;
    (*(void (**)(char *, char *, uint64_t))(v168 + 16))(v167, v79, v169);
    v85 = (uint64_t *)(v83 + *(int *)(v163 + 36));
    *v85 = v81;
    v85[1] = v80;
    (*(void (**)(char *, uint64_t))(v82 + 8))(v79, v84);
    v86 = swift_getKeyPath();
    v87 = v170;
    sub_22F87ABDC(v83, v170, &qword_255E1F948);
    v88 = (uint64_t *)(v87 + *(int *)(v164 + 36));
    *v88 = v86;
    v88[1] = 0x3FE0000000000000;
    sub_22F87AC20(v83, &qword_255E1F948);
    v89 = swift_getKeyPath();
    v90 = v172;
    sub_22F87ABDC(v87, v172, &qword_255E1F950);
    v91 = v90 + *(int *)(v165 + 36);
    *(_QWORD *)v91 = v89;
    *(_BYTE *)(v91 + 8) = 1;
    sub_22F87AC20(v87, &qword_255E1F950);
    v92 = swift_getKeyPath();
    v93 = v173;
    sub_22F87ABDC(v90, v173, &qword_255E1F958);
    v94 = v93 + *(int *)(v174 + 36);
    *(_QWORD *)v94 = v92;
    *(_QWORD *)(v94 + 8) = 3;
    *(_BYTE *)(v94 + 16) = 0;
    sub_22F87AC20(v90, &qword_255E1F958);
    sub_22F88A82C();
    v95 = (uint64_t)v171;
    sub_22F98E704();
    sub_22F87AC20(v93, &qword_255E1F960);
    v96 = &qword_255E1F968;
    v97 = v175;
    sub_22F87B2B4(v95, v175, &qword_255E1F968);
    sub_22F87ABDC(v97, v185, &qword_255E1F968);
    swift_storeEnumTagMultiPayload();
    sub_22F88AA64();
    sub_22F88AC10();
    sub_22F98E1E8();
    v98 = v97;
  }
  else
  {
    sub_22F98E0D4();
    if (qword_255E1DC30 != -1)
      swift_once();
    v99 = (id)qword_255E29840;
    v100 = sub_22F98E5C0();
    v102 = v101;
    v104 = v103 & 1;
    sub_22F98E500();
    v105 = sub_22F98E5A8();
    v107 = v106;
    v109 = v108;
    swift_release();
    v110 = v109 & 1;
    sub_22F87E294(v100, v102, v104);
    swift_bridgeObjectRelease();
    sub_22F98E4D0();
    v111 = sub_22F98E578();
    v113 = v112;
    v115 = v114 & 1;
    sub_22F87E294(v105, v107, v110);
    swift_bridgeObjectRelease();
    sub_22F98E83C();
    v116 = sub_22F98E590();
    v118 = v117;
    LOBYTE(v105) = v119;
    v121 = v120;
    v182 = v120;
    swift_release();
    v122 = v105 & 1;
    sub_22F87E294(v111, v113, v115);
    swift_bridgeObjectRelease();
    v123 = swift_getKeyPath();
    v124 = swift_getKeyPath();
    v125 = swift_getKeyPath();
    v197 = v116;
    v198 = v118;
    LOBYTE(v199) = v122;
    v200 = v121;
    v201 = v123;
    v202 = 0x3FE0000000000000;
    v203 = v124;
    LOBYTE(v204) = 1;
    v205 = v125;
    v206 = 3;
    LOBYTE(v207) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E1FA48);
    sub_22F88AAE8();
    v126 = (uint64_t)v161;
    sub_22F98E704();
    sub_22F87E294(v116, v118, v122);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    v96 = &qword_255E1F978;
    sub_22F87ABDC(v126, v185, &qword_255E1F978);
    swift_storeEnumTagMultiPayload();
    sub_22F88AA64();
    sub_22F88AC10();
    sub_22F98E1E8();
    v98 = v126;
  }
  sub_22F87AC20(v98, v96);
  v197 = v187;
  v198 = v188;
  sub_22F863BF8();
  swift_bridgeObjectRetain();
  v127 = sub_22F98E5CC();
  v129 = v128;
  v131 = v130 & 1;
  sub_22F98E83C();
  v132 = sub_22F98E590();
  v134 = v133;
  v136 = v135;
  swift_release();
  v137 = v136 & 1;
  sub_22F87E294(v127, v129, v131);
  swift_bridgeObjectRelease();
  sub_22F98E470();
  v138 = sub_22F98E5A8();
  v140 = v139;
  v142 = v141;
  swift_release();
  LOBYTE(v127) = v142 & 1;
  sub_22F87E294(v132, v134, v137);
  swift_bridgeObjectRelease();
  sub_22F98E4AC();
  v143 = sub_22F98E578();
  v145 = v144;
  v147 = v146;
  v149 = v148 & 1;
  sub_22F87E294(v138, v140, v127);
  swift_bridgeObjectRelease();
  v150 = swift_getKeyPath();
  v151 = swift_getKeyPath();
  v197 = v143;
  v198 = v145;
  LOBYTE(v199) = v149;
  v200 = v147;
  v201 = v150;
  v202 = 1;
  LOBYTE(v203) = 0;
  v204 = v151;
  v205 = 0x3FD3333333333333;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1FA78);
  sub_22F88AC94();
  v152 = (uint64_t)v190;
  sub_22F98E704();
  sub_22F87E294(v143, v145, v149);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v153 = v193;
  v154 = v194;
  sub_22F87ABDC(v193, v194, &qword_255E1F988);
  v155 = v195;
  v156 = v189;
  sub_22F87ABDC(v195, v189, &qword_255E1F980);
  v157 = v192;
  sub_22F87ABDC(v152, v192, &qword_255E1F938);
  v158 = v191;
  sub_22F87ABDC(v154, v191, &qword_255E1F988);
  v159 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1FA98);
  sub_22F87ABDC(v156, v158 + *(int *)(v159 + 48), &qword_255E1F980);
  sub_22F87ABDC(v157, v158 + *(int *)(v159 + 64), &qword_255E1F938);
  sub_22F87AC20(v152, &qword_255E1F938);
  sub_22F87AC20(v155, &qword_255E1F980);
  sub_22F87AC20(v153, &qword_255E1F988);
  sub_22F87AC20(v157, &qword_255E1F938);
  sub_22F87AC20(v156, &qword_255E1F980);
  return sub_22F87AC20(v154, &qword_255E1F988);
}

uint64_t sub_22F888434@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;

  v6 = type metadata accessor for MerchantDetailsView();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  v9 = sub_22F98DDC8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v17 = sub_22F98E818();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  sub_22F889F68(a2, (uint64_t)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for MerchantDetailsView);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (v11 + *(unsigned __int8 *)(v7 + 80) + v12) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v14 + v12, (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  result = sub_22F889C5C((uint64_t)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13);
  *a3 = v17;
  a3[1] = (uint64_t)sub_22F88A5B4;
  a3[3] = 0;
  a3[4] = 0;
  a3[2] = v14;
  return result;
}

uint64_t sub_22F88858C()
{
  uint64_t result;
  double v1;
  double v2;

  result = sub_22F98DDB0();
  if (v2 != 0.0 || v1 != 0.0)
  {
    sub_22F98DDB0();
    type metadata accessor for MerchantDetailsView();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F930);
    return sub_22F98E998();
  }
  return result;
}

uint64_t sub_22F88861C(_QWORD *a1)
{
  uint64_t result;

  if (*a1)
  {
    *(_BYTE *)(*a1 + OBJC_IVAR____TtC19ContactlessReaderUI19FineRotationManager_orientationOverride) = (*(_BYTE *)(*a1 + OBJC_IVAR____TtC19ContactlessReaderUI19FineRotationManager_orientationOverride) & 1) == 0;
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_22F98DBA0();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    return sub_22F98DBAC();
  }
  else
  {
    type metadata accessor for FineRotationManager(0);
    sub_22F862548(&qword_255E1F3C8, type metadata accessor for FineRotationManager, (uint64_t)&unk_22F992D8C);
    result = sub_22F98DF54();
    __break(1u);
  }
  return result;
}

uint64_t sub_22F888738()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  void *v16;
  id v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;

  v1 = v0;
  v2 = sub_22F98D888();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F730);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MerchantDetailsView();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F720);
  MEMORY[0x2348A5560](v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2))
    return sub_22F87AC20((uint64_t)v8, &qword_255E1F730);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
  sub_22F87AC20((uint64_t)v8, &qword_255E1F730);
  v12 = sub_22F98D87C();
  v14 = v13;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if ((v14 & 0x2000000000000000) != 0)
  {
    v21 = sub_22F87BCB0(v12, 0);
    v22 = (uint64_t *)(v0 + *(int *)(v9 + 48));
    v24 = *v22;
    v23 = v22[1];
    v27 = v24;
    v28 = v23;
    v26 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F870);
    return sub_22F98E908();
  }
  else
  {
    v15 = objc_allocWithZone(MEMORY[0x24BEBD640]);
    sub_22F87C28C(v12, v14);
    v16 = (void *)sub_22F98D360();
    v17 = objc_msgSend(v15, sel_initWithData_, v16);

    if (!v17)
      v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD640]), sel_init);
    v18 = (uint64_t *)(v1 + *(int *)(v9 + 48));
    v20 = *v18;
    v19 = v18[1];
    v27 = v20;
    v28 = v19;
    v26 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F870);
    sub_22F98E908();
    sub_22F889F5C(v12, v14);
    return sub_22F889F5C(v12, v14);
  }
}

uint64_t sub_22F88896C()
{
  sub_22F98EAE8();
  sub_22F98DE10();
  return swift_release();
}

uint64_t sub_22F8889D8()
{
  type metadata accessor for MerchantDetailsView();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3C0);
  return sub_22F98E908();
}

uint64_t sub_22F888A44(_QWORD *a1)
{
  uint64_t v1;
  uint64_t result;

  if (*a1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_22F98DBA0();
    swift_release();
    swift_release();
    swift_release();
    type metadata accessor for MerchantDetailsView();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3C0);
    sub_22F98E908();
    v1 = sub_22F98EAE8();
    MEMORY[0x24BDAC7A8](v1);
    sub_22F98DE10();
    return swift_release();
  }
  else
  {
    type metadata accessor for FineRotationManager(0);
    sub_22F862548(&qword_255E1F3C8, type metadata accessor for FineRotationManager, (uint64_t)&unk_22F992D8C);
    result = sub_22F98DF54();
    __break(1u);
  }
  return result;
}

uint64_t sub_22F888BC4()
{
  type metadata accessor for MerchantDetailsView();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3C0);
  return sub_22F98E908();
}

uint64_t sub_22F888C34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  int *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;

  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_BYTE *)(a9 + 32) = a5;
  v21 = (int *)type metadata accessor for MerchantDetailsView();
  sub_22F87B2B4(a6, a9 + v21[6], &qword_255E1F720);
  v22 = (_QWORD *)(a9 + v21[7]);
  *v22 = a7;
  v22[1] = a8;
  v22[2] = a12;
  v22[3] = a13;
  v23 = a9 + v21[8];
  *(_QWORD *)v23 = a14;
  *(_QWORD *)(v23 + 8) = a15;
  *(double *)(v23 + 16) = a10;
  *(double *)(v23 + 24) = a11;
  v24 = (_QWORD *)(a9 + v21[9]);
  sub_22F98E8F0();
  *v24 = v29;
  v24[1] = v30;
  v25 = (_QWORD *)(a9 + v21[10]);
  sub_22F98E8F0();
  *v25 = v29;
  v25[1] = v30;
  v26 = (_QWORD *)(a9 + v21[11]);
  sub_22F98E8F0();
  *v26 = v29;
  v26[1] = v30;
  v27 = (_QWORD *)(a9 + v21[12]);
  sub_22F888E00();
  result = sub_22F98E8F0();
  *v27 = v29;
  v27[1] = v30;
  return result;
}

uint64_t type metadata accessor for MerchantDetailsView()
{
  uint64_t result;

  result = qword_255E1F790;
  if (!qword_255E1F790)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_22F888E00()
{
  unint64_t result;

  result = qword_255E1F728;
  if (!qword_255E1F728)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255E1F728);
  }
  return result;
}

uint64_t sub_22F888E3C(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  id v45;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
  }
  else
  {
    v7 = a1;
    v8 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    v9 = a3[6];
    v10 = (_QWORD *)(a1 + v9);
    v11 = (uint64_t)a2 + v9;
    v12 = *(uint64_t *)((char *)a2 + v9 + 8);
    *v10 = *(uint64_t *)((char *)a2 + v9);
    v10[1] = v12;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v13 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255E1F720) + 32);
    v14 = (char *)v10 + v13;
    v15 = (const void *)(v11 + v13);
    v16 = sub_22F98D888();
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F730);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    v19 = a3[7];
    v20 = a3[8];
    v21 = (_QWORD *)(v7 + v19);
    v22 = (uint64_t *)((char *)a2 + v19);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    v24 = v22[3];
    v21[2] = v22[2];
    v21[3] = v24;
    v25 = v7 + v20;
    v26 = (uint64_t)a2 + v20;
    v27 = *(_QWORD *)(v26 + 8);
    *(_QWORD *)v25 = *(_QWORD *)v26;
    *(_QWORD *)(v25 + 8) = v27;
    *(_OWORD *)(v25 + 16) = *(_OWORD *)(v26 + 16);
    v28 = a3[9];
    v29 = a3[10];
    v30 = (_QWORD *)(v7 + v28);
    v31 = (uint64_t *)((char *)a2 + v28);
    v32 = v31[1];
    *v30 = *v31;
    v30[1] = v32;
    v33 = (_QWORD *)(v7 + v29);
    v34 = (uint64_t *)((char *)a2 + v29);
    v35 = v34[1];
    *v33 = *v34;
    v33[1] = v35;
    v36 = a3[11];
    v37 = a3[12];
    v38 = (_QWORD *)(v7 + v36);
    v39 = (uint64_t *)((char *)a2 + v36);
    v40 = v39[1];
    *v38 = *v39;
    v38[1] = v40;
    v41 = (_QWORD *)(v7 + v37);
    v42 = (uint64_t)a2 + v37;
    v43 = *(void **)v42;
    v44 = *(_QWORD *)(v42 + 8);
    *v41 = *(_QWORD *)v42;
    v41[1] = v44;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v45 = v43;
  }
  swift_retain();
  return v7;
}

uint64_t sub_22F889054(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_release();
  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 24);
  swift_release();
  swift_release();
  v5 = v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255E1F720) + 32);
  v6 = sub_22F98D888();
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_22F88917C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v8);
  v10 = a2 + v8;
  v11 = *(_QWORD *)(a2 + v8 + 8);
  *v9 = *(_QWORD *)(a2 + v8);
  v9[1] = v11;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255E1F720) + 32);
  v13 = (char *)v9 + v12;
  v14 = (const void *)(v10 + v12);
  v15 = sub_22F98D888();
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F730);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v18 = a3[7];
  v19 = a3[8];
  v20 = (_QWORD *)(a1 + v18);
  v21 = (_QWORD *)(a2 + v18);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v23 = v21[3];
  v20[2] = v21[2];
  v20[3] = v23;
  v24 = a1 + v19;
  v25 = a2 + v19;
  v26 = *(_QWORD *)(v25 + 8);
  *(_QWORD *)v24 = *(_QWORD *)v25;
  *(_QWORD *)(v24 + 8) = v26;
  *(_OWORD *)(v24 + 16) = *(_OWORD *)(v25 + 16);
  v27 = a3[9];
  v28 = a3[10];
  v29 = (_QWORD *)(a1 + v27);
  v30 = (_QWORD *)(a2 + v27);
  v31 = v30[1];
  *v29 = *v30;
  v29[1] = v31;
  v32 = (_QWORD *)(a1 + v28);
  v33 = (_QWORD *)(a2 + v28);
  v34 = v33[1];
  *v32 = *v33;
  v32[1] = v34;
  v35 = a3[11];
  v36 = a3[12];
  v37 = (_QWORD *)(a1 + v35);
  v38 = (_QWORD *)(a2 + v35);
  v39 = v38[1];
  *v37 = *v38;
  v37[1] = v39;
  v40 = (_QWORD *)(a1 + v36);
  v41 = a2 + v36;
  v43 = *(void **)v41;
  v42 = *(_QWORD *)(v41 + 8);
  *v40 = *(_QWORD *)v41;
  v40[1] = v42;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v44 = v43;
  swift_retain();
  return a1;
}

uint64_t sub_22F889368(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  id v38;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_QWORD *)(a1 + v6) = *(_QWORD *)(a2 + v6);
  swift_retain();
  swift_release();
  *(_QWORD *)(v7 + 8) = *(_QWORD *)(v8 + 8);
  swift_retain();
  swift_release();
  v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255E1F720) + 32);
  v10 = (void *)(v7 + v9);
  v11 = (void *)(v8 + v9);
  v12 = sub_22F98D888();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 24))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F730);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  v18 = a3[7];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  *(_QWORD *)(a1 + v18) = *(_QWORD *)(a2 + v18);
  swift_retain();
  swift_release();
  v19[1] = v20[1];
  swift_retain();
  swift_release();
  v19[2] = v20[2];
  v19[3] = v20[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = a3[8];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (_QWORD *)(a2 + v21);
  *(_QWORD *)(a1 + v21) = *(_QWORD *)(a2 + v21);
  swift_retain();
  swift_release();
  v22[1] = v23[1];
  swift_retain();
  swift_release();
  v22[2] = v23[2];
  v22[3] = v23[3];
  v24 = a3[9];
  v25 = (_QWORD *)(a1 + v24);
  v26 = (_QWORD *)(a2 + v24);
  *v25 = *v26;
  v25[1] = v26[1];
  swift_retain();
  swift_release();
  v27 = a3[10];
  v28 = (_QWORD *)(a1 + v27);
  v29 = (_QWORD *)(a2 + v27);
  *v28 = *v29;
  v28[1] = v29[1];
  swift_retain();
  swift_release();
  v30 = a3[11];
  v31 = (_QWORD *)(a1 + v30);
  v32 = (_QWORD *)(a2 + v30);
  *v31 = *v32;
  v31[1] = v32[1];
  swift_retain();
  swift_release();
  v33 = a3[12];
  v34 = a1 + v33;
  v35 = a2 + v33;
  v36 = *(void **)(a2 + v33);
  v37 = *(void **)v34;
  *(_QWORD *)v34 = v36;
  v38 = v36;

  *(_QWORD *)(v34 + 8) = *(_QWORD *)(v35 + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_22F88967C(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  _OWORD *v21;
  _OWORD *v22;
  _OWORD *v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = a3[6];
  v8 = (_QWORD *)(a1 + v7);
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *v8 = *(_QWORD *)(a2 + v7);
  v8[1] = v10;
  v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255E1F720) + 32);
  v12 = (char *)v8 + v11;
  v13 = (const void *)(v9 + v11);
  v14 = sub_22F98D888();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F730);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v17 = a3[7];
  v18 = a3[8];
  v19 = *(_OWORD *)(a2 + v17);
  v20 = *(_OWORD *)(a2 + v17 + 16);
  v21 = (_OWORD *)(a1 + v17);
  *v21 = v19;
  v21[1] = v20;
  v22 = (_OWORD *)(a1 + v18);
  v23 = (_OWORD *)(a2 + v18);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  v25 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v25) = *(_OWORD *)(a2 + v25);
  v26 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  *(_OWORD *)(a1 + v26) = *(_OWORD *)(a2 + v26);
  return a1;
}

uint64_t sub_22F8897BC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  void *v38;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_release();
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  swift_release();
  v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255E1F720) + 32);
  v11 = (void *)(v8 + v10);
  v12 = (void *)(v9 + v10);
  v13 = sub_22F98D888();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 40))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F730);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 32))(v11, v12, v13);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_7:
  v19 = a3[7];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (_QWORD *)(a2 + v19);
  *(_QWORD *)(a1 + v19) = *(_QWORD *)(a2 + v19);
  swift_release();
  v20[1] = v21[1];
  swift_release();
  v22 = v21[3];
  v20[2] = v21[2];
  v20[3] = v22;
  swift_bridgeObjectRelease();
  v23 = a3[8];
  v24 = a1 + v23;
  v25 = a2 + v23;
  *(_QWORD *)(a1 + v23) = *(_QWORD *)(a2 + v23);
  swift_release();
  *(_QWORD *)(v24 + 8) = *(_QWORD *)(v25 + 8);
  swift_release();
  *(_OWORD *)(v24 + 16) = *(_OWORD *)(v25 + 16);
  v26 = a3[9];
  v27 = (_QWORD *)(a1 + v26);
  v28 = (_QWORD *)(a2 + v26);
  *v27 = *v28;
  v27[1] = v28[1];
  swift_release();
  v29 = a3[10];
  v30 = (_QWORD *)(a1 + v29);
  v31 = (_QWORD *)(a2 + v29);
  *v30 = *v31;
  v30[1] = v31[1];
  swift_release();
  v32 = a3[11];
  v33 = (_QWORD *)(a1 + v32);
  v34 = (_QWORD *)(a2 + v32);
  *v33 = *v34;
  v33[1] = v34[1];
  swift_release();
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = (_QWORD *)(a2 + v35);
  v38 = *(void **)(a1 + v35);
  *(_QWORD *)(a1 + v35) = *v37;

  *(_QWORD *)(v36 + 8) = v37[1];
  swift_release();
  return a1;
}

uint64_t sub_22F889A44()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22F889A50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F720);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_22F889AD0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22F889ADC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F720);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_22F889B54()
{
  unint64_t v0;

  sub_22F889BEC();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_22F889BEC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255E1F7A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1F730);
    v0 = sub_22F98E9BC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255E1F7A0);
  }
}

uint64_t sub_22F889C44()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22F889C5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MerchantDetailsView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22F889CA0()
{
  return sub_22F889EF0((uint64_t (*)(uint64_t))sub_22F88861C);
}

unint64_t sub_22F889CAC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E1F840;
  if (!qword_255E1F840)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1F7F8);
    v2[0] = sub_22F87AA84(&qword_255E1F848, &qword_255E1F7F0, MEMORY[0x24BDF4700]);
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E1F840);
  }
  return result;
}

uint64_t sub_22F889D34()
{
  type metadata accessor for MerchantDetailsView();
  return sub_22F888738();
}

uint64_t sub_22F889D78()
{
  return sub_22F889EF0((uint64_t (*)(uint64_t))sub_22F88896C);
}

unint64_t sub_22F889D84()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E1F850;
  if (!qword_255E1F850)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1F820);
    v2[0] = sub_22F87E2D8(&qword_255E1F858, &qword_255E1F818, sub_22F889E28, MEMORY[0x24BDED5D8]);
    v2[1] = sub_22F87AA84(&qword_255E1F3F8, &qword_255E1F400, MEMORY[0x24BDEEC10]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E1F850);
  }
  return result;
}

uint64_t sub_22F889E28()
{
  return sub_22F87E2D8(&qword_255E1F860, &qword_255E1F810, (uint64_t (*)(void))sub_22F889E4C, MEMORY[0x24BDEBF50]);
}

unint64_t sub_22F889E4C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_255E1F868;
  if (!qword_255E1F868)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1F808);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1F7F8);
    v2[3] = sub_22F889CAC();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = MEMORY[0x24BDF0910];
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E1F868);
  }
  return result;
}

uint64_t sub_22F889EE4()
{
  return sub_22F889EF0((uint64_t (*)(uint64_t))sub_22F888A44);
}

uint64_t sub_22F889EF0(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MerchantDetailsView() - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

uint64_t sub_22F889F2C()
{
  return sub_22F888BC4();
}

uint64_t sub_22F889F44()
{
  return sub_22F8889D8();
}

uint64_t sub_22F889F5C(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x2000000000000000) == 0)
    return sub_22F87A9F4(a1, a2);
  return a1;
}

uint64_t sub_22F889F68(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_22F889FAC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_22F98DF00();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t objectdestroyTm_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for MerchantDetailsView();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_release();
  swift_release();
  swift_release();
  v4 = v3 + *(int *)(v1 + 24);
  swift_release();
  swift_release();
  v5 = v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255E1F720) + 32);
  v6 = sub_22F98D888();
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22F88A158@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MerchantDetailsView() - 8) + 80);
  return sub_22F888434(a1, v2 + ((v5 + 16) & ~v5), a2);
}

unint64_t sub_22F88A1A4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E1F8D8;
  if (!qword_255E1F8D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1F8A8);
    v2[0] = sub_22F88A228();
    v2[1] = sub_22F87AA84(&qword_255E1F920, &qword_255E1F928, MEMORY[0x24BDEF370]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E1F8D8);
  }
  return result;
}

unint64_t sub_22F88A228()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E1F8E0;
  if (!qword_255E1F8E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1F8A0);
    v2[0] = sub_22F88A2AC();
    v2[1] = sub_22F87AA84(&qword_255E1F918, &qword_255E1F8D0, MEMORY[0x24BDEB950]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E1F8E0);
  }
  return result;
}

unint64_t sub_22F88A2AC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E1F8E8;
  if (!qword_255E1F8E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1F898);
    v2[0] = sub_22F87E2D8(&qword_255E1F8F0, &qword_255E1F890, sub_22F88A350, MEMORY[0x24BDECC60]);
    v2[1] = sub_22F87AA84(&qword_255E1F910, &qword_255E1F8C8, MEMORY[0x24BDF06D0]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E1F8E8);
  }
  return result;
}

uint64_t sub_22F88A350()
{
  return sub_22F87E2D8(&qword_255E1F8F8, &qword_255E1F888, (uint64_t (*)(void))sub_22F88A374, MEMORY[0x24BDEDBB8]);
}

unint64_t sub_22F88A374()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E1F900;
  if (!qword_255E1F900)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1F880);
    v2[0] = sub_22F87AA84(&qword_255E1F908, &qword_255E1F878, MEMORY[0x24BDF4700]);
    v2[1] = sub_22F87AA84(&qword_255E1F118, &qword_255E1F120, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E1F900);
  }
  return result;
}

uint64_t sub_22F88A410()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = sub_22F98DDC8();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = type metadata accessor for MerchantDetailsView();
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  v7 = v0 + ((v3 + v4 + v6) & ~v6);
  swift_release();
  swift_release();
  swift_release();
  v8 = v7 + *(int *)(v5 + 24);
  swift_release();
  swift_release();
  v9 = v8 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255E1F720) + 32);
  v10 = sub_22F98D888();
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22F88A5B4()
{
  sub_22F98DDC8();
  type metadata accessor for MerchantDetailsView();
  return sub_22F88858C();
}

unint64_t sub_22F88A614()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E1F9A0;
  if (!qword_255E1F9A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1F9A8);
    v2[0] = sub_22F88A698();
    v2[1] = sub_22F87AA84(&qword_255E1F118, &qword_255E1F120, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E1F9A0);
  }
  return result;
}

unint64_t sub_22F88A698()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E1F9B0;
  if (!qword_255E1F9B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1F9B8);
    v2[0] = sub_22F87E2D8((unint64_t *)&qword_255E1F9C0, &qword_255E1F9C8, (uint64_t (*)(void))sub_22F87E230, MEMORY[0x24BDEBEE0]);
    v2[1] = sub_22F87AA84(&qword_255E1F9D0, &qword_255E1F9D8, MEMORY[0x24BDEB950]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E1F9B0);
  }
  return result;
}

unint64_t sub_22F88A744()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E1F9E8;
  if (!qword_255E1F9E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1F9E0);
    v2[0] = sub_22F88A7C8();
    v2[1] = sub_22F87AA84(&qword_255E1F0F8, &qword_255E1F100, MEMORY[0x24BDF1028]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E1F9E8);
  }
  return result;
}

unint64_t sub_22F88A7C8()
{
  unint64_t result;

  result = qword_255E1F9F0;
  if (!qword_255E1F9F0)
  {
    result = MEMORY[0x2348A6784](&unk_22F9946C4, &type metadata for AutoLinebreakText);
    atomic_store(result, (unint64_t *)&qword_255E1F9F0);
  }
  return result;
}

unint64_t sub_22F88A82C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E1F9F8;
  if (!qword_255E1F9F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1F960);
    v2[0] = sub_22F88A8B0();
    v2[1] = sub_22F87AA84(&qword_255E1FA28, &qword_255E1FA30, MEMORY[0x24BDF1028]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E1F9F8);
  }
  return result;
}

unint64_t sub_22F88A8B0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E1FA00;
  if (!qword_255E1FA00)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1F958);
    v2[0] = sub_22F88A934();
    v2[1] = sub_22F87AA84(&qword_255E1F4E0, &qword_255E1F4E8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E1FA00);
  }
  return result;
}

unint64_t sub_22F88A934()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E1FA08;
  if (!qword_255E1FA08)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1F950);
    v2[0] = sub_22F88A9B8();
    v2[1] = sub_22F87AA84(&qword_255E1FA18, &qword_255E1FA20, MEMORY[0x24BDF1028]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E1FA08);
  }
  return result;
}

unint64_t sub_22F88A9B8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_255E1FA10;
  if (!qword_255E1FA10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1F948);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1F9E0);
    v2[3] = sub_22F88A744();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_22F87AA84(&qword_255E1F108, &qword_255E1F110, MEMORY[0x24BDF1028]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E1FA10);
  }
  return result;
}

unint64_t sub_22F88AA64()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E1FA38;
  if (!qword_255E1FA38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1F978);
    v2[0] = sub_22F88AAE8();
    v2[1] = sub_22F862548((unint64_t *)&qword_255E1F478, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E1FA38);
  }
  return result;
}

unint64_t sub_22F88AAE8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E1FA40;
  if (!qword_255E1FA40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1FA48);
    v2[0] = sub_22F88AB6C();
    v2[1] = sub_22F87AA84(&qword_255E1FA28, &qword_255E1FA30, MEMORY[0x24BDF1028]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E1FA40);
  }
  return result;
}

unint64_t sub_22F88AB6C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E1FA50;
  if (!qword_255E1FA50)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1FA58);
    v2[0] = sub_22F88AD38((unint64_t *)&qword_255E1FA60, &qword_255E1FA68, &qword_255E1FA18, &qword_255E1FA20);
    v2[1] = sub_22F87AA84(&qword_255E1F4E0, &qword_255E1F4E8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E1FA50);
  }
  return result;
}

unint64_t sub_22F88AC10()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E1FA70;
  if (!qword_255E1FA70)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1F968);
    v2[0] = sub_22F88A82C();
    v2[1] = sub_22F862548((unint64_t *)&qword_255E1F478, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E1FA70);
  }
  return result;
}

unint64_t sub_22F88AC94()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E1FA80;
  if (!qword_255E1FA80)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1FA78);
    v2[0] = sub_22F88AD38((unint64_t *)&qword_255E1FA88, &qword_255E1FA90, &qword_255E1FA28, &qword_255E1FA30);
    v2[1] = sub_22F87AA84(&qword_255E1FA18, &qword_255E1FA20, MEMORY[0x24BDF1028]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E1FA80);
  }
  return result;
}

uint64_t sub_22F88AD38(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = sub_22F87AA84(a3, a4, MEMORY[0x24BDF1028]);
    v10[0] = MEMORY[0x24BDF1F80];
    v10[1] = v9;
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v8, v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22F88ADBC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = qword_255E1FAA0;
  if (!qword_255E1FAA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1F830);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1F820);
    v2[3] = &type metadata for PhoneOrientation;
    v2[4] = sub_22F889D84();
    v2[5] = sub_22F8838F8();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_22F87AA84(&qword_255E1F408, &qword_255E1F410, (uint64_t)&unk_22F99C190);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E1FAA0);
  }
  return result;
}

uint64_t sub_22F88AE84()
{
  return sub_22F864050();
}

id sub_22F88AE98()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  id v8;
  id v9;
  objc_class *v10;
  id v11;
  uint64_t v13;
  objc_super v14;
  char v15;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1FD28);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = &v0[OBJC_IVAR____TtC19ContactlessReaderUI21CoarseRotationManager__orientation];
  v15 = 0;
  v6 = v0;
  sub_22F98DB7C();
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, v4, v1);
  v7 = OBJC_IVAR____TtC19ContactlessReaderUI21CoarseRotationManager_orientations;
  *(_QWORD *)&v6[v7] = sub_22F8AD1C0((uint64_t)&unk_24FD1BC78);
  *(_QWORD *)&v6[OBJC_IVAR____TtC19ContactlessReaderUI21CoarseRotationManager_deviceOrientation] = 0;
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE0B650]), sel_init);
  *(_QWORD *)&v6[OBJC_IVAR____TtC19ContactlessReaderUI21CoarseRotationManager_accelerometer] = v8;
  v9 = v8;

  v10 = (objc_class *)type metadata accessor for CoarseRotationManager(0);
  v14.receiver = v6;
  v14.super_class = v10;
  v11 = objc_msgSendSuper2(&v14, sel_init);
  objc_msgSend(v9, sel_setDelegate_, v11);

  return v11;
}

id sub_22F88AFF0()
{
  char *v0;
  objc_super v2;

  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC19ContactlessReaderUI21CoarseRotationManager_accelerometer], sel_setOrientationEventsEnabled_, 0);
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CoarseRotationManager(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_22F88B108()
{
  return type metadata accessor for CoarseRotationManager(0);
}

uint64_t type metadata accessor for CoarseRotationManager(uint64_t a1)
{
  return sub_22F8612B0(a1, (uint64_t *)&unk_255E1FB58);
}

void sub_22F88B180()
{
  unint64_t v0;

  sub_22F88B214();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_22F88B214()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255E1FB68)
  {
    v0 = sub_22F98DBB8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255E1FB68);
  }
}

uint64_t sub_22F88B268()
{
  return sub_22F864050();
}

uint64_t sub_22F88B27C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for CoarseRotationManager(0);
  result = sub_22F98DB70();
  *a1 = result;
  return result;
}

uint64_t sub_22F88B2B8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI19FineRotationManager_motionManager);
  objc_msgSend(v1, sel_stopDeviceMotionUpdates);
  v2 = v0 + OBJC_IVAR____TtC19ContactlessReaderUI19FineRotationManager__orientation;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1FD28);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);

  return swift_deallocClassInstance();
}

uint64_t sub_22F88B334()
{
  return type metadata accessor for FineRotationManager(0);
}

uint64_t type metadata accessor for FineRotationManager(uint64_t a1)
{
  return sub_22F8612B0(a1, qword_255E1FBB0);
}

void sub_22F88B350()
{
  unint64_t v0;

  sub_22F88B214();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_22F88B3E8(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    if (qword_255E1DAF8 != -1)
      swift_once();
    v7 = __swift_project_value_buffer(v4, (uint64_t)qword_255E29598);
    sub_22F87BC08(v7, (uint64_t)v6);
    v8 = sub_22F98DAA4();
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
    {
      sub_22F87BC50((uint64_t)v6);
    }
    else
    {
      v10 = a2;
      v11 = a2;
      v12 = sub_22F98DA8C();
      v13 = sub_22F98F088();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc();
        v15 = swift_slowAlloc();
        v20 = (uint64_t)a2;
        v21 = v15;
        *(_DWORD *)v14 = 136446210;
        v19 = v14 + 4;
        __swift_instantiateConcreteTypeFromMangledName(&qword_255E1FD20);
        v16 = sub_22F98F1E4();
        v20 = sub_22F878880(v16, v17, &v21);
        sub_22F98F208();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_22F85B000, v12, v13, "Motion reading error: %{public}s", v14, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2348A6838](v15, -1, -1);
        MEMORY[0x2348A6838](v14, -1, -1);

      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
    }
  }
  else if (a1)
  {
    v19 = a1;
    sub_22F88B8D4(v19);

  }
}

void sub_22F88B674(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  _QWORD v10[6];

  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v6 = *(void **)(v2 + OBJC_IVAR____TtC19ContactlessReaderUI19FineRotationManager_motionManager);
  swift_retain();
  objc_msgSend(v6, sel_setDeviceMotionUpdateInterval_, 0.03);
  v7 = objc_msgSend((id)objc_opt_self(), sel_mainQueue);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v2;
  *(_QWORD *)(v8 + 24) = v5;
  v10[4] = sub_22F88BD50;
  v10[5] = v8;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_22F8FC608;
  v10[3] = &block_descriptor_4;
  v9 = _Block_copy(v10);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v6, sel_startDeviceMotionUpdatesToQueue_withHandler_, v7, v9);
  _Block_release(v9);
  swift_release();

}

uint64_t sub_22F88B7BC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  void (*v8)(_BOOL8);
  void (*v9)(_BOOL8);
  id v10;
  _BOOL8 v11;
  uint64_t v12;

  v7 = a4 + 16;
  objc_msgSend(*(id *)(a3 + OBJC_IVAR____TtC19ContactlessReaderUI19FineRotationManager_motionManager), sel_stopDeviceMotionUpdates);
  if (a1 && !a2)
  {
    swift_beginAccess();
    v9 = *(void (**)(_BOOL8))v7;
    if (*(_QWORD *)v7)
    {
      v10 = a1;
      sub_22F88BD70((uint64_t)v9);
      v11 = sub_22F88BA20(v10);
      v9(v11);
      sub_22F87A9B8((uint64_t)v9);

    }
  }
  else
  {
    swift_beginAccess();
    v8 = *(void (**)(_BOOL8))v7;
    if (*(_QWORD *)v7)
    {
      swift_retain();
      v8(0);
      sub_22F87A9B8((uint64_t)v8);
    }
  }
  swift_beginAccess();
  v12 = *(_QWORD *)(a4 + 16);
  *(_QWORD *)v7 = 0;
  *(_QWORD *)(v7 + 8) = 0;
  return sub_22F87A9B8(v12);
}

uint64_t sub_22F88B8D4(void *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v2 = sub_22F88BA20(a1);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  result = swift_release();
  if (v11 == v2)
  {
    v4 = OBJC_IVAR____TtC19ContactlessReaderUI19FineRotationManager_orientationOverride;
    if (*(_BYTE *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI19FineRotationManager_orientationOverride) == 1)
    {
      v5 = OBJC_IVAR____TtC19ContactlessReaderUI19FineRotationManager_orientationOverrideReversal;
      v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI19FineRotationManager_orientationOverrideReversal);
      v7 = __OFADD__(v6, 1);
      v8 = v6 + 1;
      if (!v7)
      {
        *(_QWORD *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI19FineRotationManager_orientationOverrideReversal) = v8;
        if (v8 > 6)
        {
          *(_BYTE *)(v1 + v4) = 0;
          *(_QWORD *)(v1 + v5) = 0;
        }
        goto LABEL_9;
      }
LABEL_14:
      __break(1u);
      return result;
    }
    *(_QWORD *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI19FineRotationManager_orientationConfirmation) = 0;
  }
  else
  {
    v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI19FineRotationManager_orientationConfirmation);
    v7 = __OFADD__(v9, 1);
    v10 = v9 + 1;
    if (v7)
    {
      __break(1u);
      goto LABEL_14;
    }
    *(_QWORD *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI19FineRotationManager_orientationConfirmation) = v10;
  }
LABEL_9:
  if (*(uint64_t *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI19FineRotationManager_orientationConfirmation) >= 6
    && (*(_BYTE *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI19FineRotationManager_orientationOverride) & 1) == 0)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    return sub_22F98DBAC();
  }
  return result;
}

BOOL sub_22F88BA20(void *a1)
{
  double v2;
  char v4;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  objc_msgSend(a1, sel_gravity);
  if (v4)
    return v2 >= -0.1;
  else
    return v2 > 0.1;
}

uint64_t storeEnumTagSinglePayload for PhoneOrientation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22F88BB18 + 4 * byte_22F992CB5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22F88BB4C + 4 * byte_22F992CB0[v4]))();
}

uint64_t sub_22F88BB4C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22F88BB54(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22F88BB5CLL);
  return result;
}

uint64_t sub_22F88BB68(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22F88BB70);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22F88BB74(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22F88BB7C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PhoneOrientation()
{
  return &type metadata for PhoneOrientation;
}

uint64_t sub_22F88BB9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[16];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1FD28);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = &v8[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = v0 + OBJC_IVAR____TtC19ContactlessReaderUI19FineRotationManager__orientation;
  v8[15] = 0;
  sub_22F98DB7C();
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v2 + 32))(v5, v4, v1);
  *(_BYTE *)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI19FineRotationManager_orientationOverride) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI19FineRotationManager_counterThreshold) = 6;
  v6 = OBJC_IVAR____TtC19ContactlessReaderUI19FineRotationManager_motionManager;
  *(_QWORD *)(v0 + v6) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDC1400]), sel_init);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI19FineRotationManager_toleranceAngle) = 0x3FB999999999999ALL;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI19FineRotationManager_orientationConfirmation) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI19FineRotationManager_orientationOverrideReversal) = 0;
  return v0;
}

uint64_t sub_22F88BCB4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for FineRotationManager(0);
  result = sub_22F98DB70();
  *a1 = result;
  return result;
}

uint64_t sub_22F88BCF8()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_22F88BD24()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22F88BD50(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_22F88B7BC(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t sub_22F88BD70(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

unint64_t sub_22F88BD88(unint64_t result)
{
  char *v1;
  char v2;
  char *v3;

  if (*(_QWORD *)&v1[OBJC_IVAR____TtC19ContactlessReaderUI21CoarseRotationManager_deviceOrientation] != result)
  {
    *(_QWORD *)&v1[OBJC_IVAR____TtC19ContactlessReaderUI21CoarseRotationManager_deviceOrientation] = result;
    if (*(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC19ContactlessReaderUI21CoarseRotationManager_orientations] + 16))
    {
      result = sub_22F979F44(result);
      if ((v2 & 1) != 0)
      {
        swift_getKeyPath();
        swift_getKeyPath();
        v3 = v1;
        return sub_22F98DBAC();
      }
    }
  }
  return result;
}

uint64_t sub_22F88BE2C()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StringMasker()
{
  return objc_opt_self();
}

uint64_t sub_22F88BE5C()
{
  return 0;
}

uint64_t sub_22F88BE64(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  swift_retain();
  v4 = sub_22F88CE54(a1, v3);
  swift_release();
  return v4;
}

uint64_t sub_22F88BEC0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = sub_22F98EE00();
  MEMORY[0x24BDAC7A8](v3);
  v4 = *v1;
  swift_retain();
  sub_22F88CE54(a1, v4);
  swift_release();
  sub_22F98EDF4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1ED58);
  sub_22F88CF24();
  v5 = sub_22F98EDC4();
  v7 = v6;
  swift_bridgeObjectRelease();
  if (v7)
    return v5;
  else
    return 0;
}

uint64_t sub_22F88BFA0(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = 0;
    v3 = swift_bridgeObjectRetain() + 31;
    v4 = MEMORY[0x24BEE4AF8];
    v5 = (char *)MEMORY[0x24BEE4AF8];
    do
    {
      v6 = *(_BYTE *)(v3 + v1);
      if (v2 > 1)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          v10 = (char *)v4;
        else
          v10 = sub_22F97962C(0, *(_QWORD *)(v4 + 16) + 1, 1, (char *)v4);
        v8 = *((_QWORD *)v10 + 2);
        v11 = *((_QWORD *)v10 + 3);
        v9 = v8 + 1;
        if (v8 >= v11 >> 1)
          v10 = sub_22F97962C((char *)(v11 > 1), v8 + 1, 1, v10);
        v4 = (uint64_t)v10;
      }
      else
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v5 = sub_22F97962C(0, *((_QWORD *)v5 + 2) + 1, 1, v5);
        v8 = *((_QWORD *)v5 + 2);
        v7 = *((_QWORD *)v5 + 3);
        v9 = v8 + 1;
        if (v8 >= v7 >> 1)
        {
          v10 = sub_22F97962C((char *)(v7 > 1), v8 + 1, 1, v5);
          v5 = v10;
        }
        else
        {
          v10 = v5;
        }
      }
      ++v2;
      --v3;
      *((_QWORD *)v10 + 2) = v9;
      v10[v8 + 32] = v6;
    }
    while (v1 != v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = MEMORY[0x24BEE4AF8];
    v5 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = sub_22F88C210(v4);
  if (!*((_QWORD *)v5 + 2))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v5 = sub_22F97962C(0, 1, 1, v5);
    v14 = *((_QWORD *)v5 + 2);
    v13 = *((_QWORD *)v5 + 3);
    if (v14 >= v13 >> 1)
      v5 = sub_22F97962C((char *)(v13 > 1), v14 + 1, 1, v5);
    *((_QWORD *)v5 + 2) = v14 + 1;
    v5[v14 + 32] = 0;
  }
  swift_retain();
  v15 = swift_bridgeObjectRetain();
  sub_22F88CF70(v15);
  swift_bridgeObjectRelease();
  v16 = swift_release();
  MEMORY[0x24BDAC7A8](v16);
  v17 = sub_22F88D044(v12, (uint64_t (*)(uint64_t, _QWORD))sub_22F88D03C);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_22F88C210(uint64_t result)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t i;
  unint64_t v6;
  char v7;
  char v8;

  v1 = result;
  v2 = *(_QWORD *)(result + 16);
  if (v2 < 2)
    return v1;
  v3 = 0;
  v4 = v2 >> 1;
  for (i = v2 + 31; ; --i)
  {
    if (v3 == i - 32)
      goto LABEL_5;
    v6 = *(_QWORD *)(v1 + 16);
    if (v3 >= v6)
      break;
    if (i - 32 >= v6)
      goto LABEL_12;
    v7 = *(_BYTE *)(v1 + v3 + 32);
    v8 = *(_BYTE *)(v1 + i);
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_22F8B2BC0(v1);
      v1 = result;
    }
    *(_BYTE *)(v1 + v3 + 32) = v8;
    *(_BYTE *)(v1 + i) = v7;
LABEL_5:
    if (v4 == ++v3)
      return v1;
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_22F88C2C8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  unsigned __int8 *v6;
  int v7;
  uint64_t result;

  v3 = *(_QWORD *)(a3 + 16);
  if (!v3)
    return a2;
  if ((a1 & 0x8000000000000000) == 0 && a1 <= 0xFF)
  {
    v4 = *(unsigned __int8 *)(a3 + 32) + a1;
    if (((v4 >> 8) & 1) != 0)
    {
LABEL_10:
      __break(1u);
    }
    else
    {
      v5 = v3 - 1;
      v6 = (unsigned __int8 *)(a3 + 33);
      while (1)
      {
        if ((_BYTE)v4 == 0xFF)
          v4 = 0;
        a2 = v4 ^ a2;
        if (!v5)
          break;
        v7 = *v6++;
        v4 = v7 + a1;
        --v5;
        if (((v4 >> 8) & 1) != 0)
          goto LABEL_10;
      }
    }
    return a2;
  }
  result = sub_22F98F388();
  __break(1u);
  return result;
}

uint64_t sub_22F88C3C0()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for XORComplexStringMasker()
{
  return objc_opt_self();
}

uint64_t sub_22F88C3F0()
{
  return 2;
}

uint64_t sub_22F88C3F8(uint64_t a1)
{
  return sub_22F88BFA0(a1);
}

uint64_t sub_22F88C418(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = sub_22F98EE00();
  MEMORY[0x24BDAC7A8](v2);
  sub_22F88BFA0(a1);
  sub_22F98EDF4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1ED58);
  sub_22F88CF24();
  v3 = sub_22F98EDC4();
  v5 = v4;
  swift_bridgeObjectRelease();
  if (v5)
    return v3;
  else
    return 0;
}

uint64_t sub_22F88C4DC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_22F88C568(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_22F88C4F8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_22F88C748(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_22F88C514(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_22F88C8B0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_22F88C530(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_22F88C9FC(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_22F88C54C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_22F88CCF8(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_22F88C568(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1FEB0);
  v10 = *(_QWORD *)(sub_22F98D4B0() - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_34;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(sub_22F98D4B0() - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (char *)v13 + v17;
  v19 = (char *)a4 + v17;
  if ((a1 & 1) != 0)
  {
    if (v13 < a4 || v18 >= &v19[*(_QWORD *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v20 = *(_QWORD *)(v16 + 72) * v8;
  v21 = &v18[v20];
  v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  result = sub_22F98F3D0();
  __break(1u);
  return result;
}

uint64_t sub_22F88C748(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F278);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_22F98F3D0();
  __break(1u);
  return result;
}

uint64_t sub_22F88C8B0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E1ED50);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_22F98F3D0();
  __break(1u);
  return result;
}

uint64_t sub_22F88C9FC(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E249D0);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8)
      memmove(v10 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E1FEC8);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_22F98F3D0();
  __break(1u);
  return result;
}

uint64_t sub_22F88CB9C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E1FEB8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 29;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8])
      memmove(v13, v14, 4 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_22F98F3D0();
  __break(1u);
  return result;
}

uint64_t sub_22F88CCF8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E1FEC0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    memcpy(v13, v14, 16 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_22F98F3D0();
  __break(1u);
  return result;
}

uint64_t sub_22F88CE54(uint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t result;
  char *v6;
  char v7;
  char v8;
  char v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v3)
  {
    v12 = MEMORY[0x24BEE4AF8];
    sub_22F88C514(0, v3, 0);
    result = v12;
    v6 = (char *)(a1 + 32);
    v7 = *(_BYTE *)(a2 + 24);
    do
    {
      v9 = *v6++;
      v8 = v9;
      v13 = result;
      v11 = *(_QWORD *)(result + 16);
      v10 = *(_QWORD *)(result + 24);
      if (v11 >= v10 >> 1)
      {
        sub_22F88C514(v10 > 1, v11 + 1, 1);
        result = v13;
      }
      *(_QWORD *)(result + 16) = v11 + 1;
      *(_BYTE *)(result + v11 + 32) = v8 ^ v7;
      --v3;
    }
    while (v3);
  }
  return result;
}

unint64_t sub_22F88CF24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255E1ED60;
  if (!qword_255E1ED60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1ED58);
    result = MEMORY[0x2348A6784](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_255E1ED60);
  }
  return result;
}

uint64_t sub_22F88CF70(uint64_t a1)
{
  int64_t v2;
  uint64_t result;
  char *v4;
  char v5;
  char v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v9 = MEMORY[0x24BEE4AF8];
    sub_22F88C514(0, v2, 0);
    result = v9;
    v4 = (char *)(a1 + 32);
    do
    {
      v6 = *v4++;
      v5 = v6;
      v10 = result;
      v8 = *(_QWORD *)(result + 16);
      v7 = *(_QWORD *)(result + 24);
      if (v8 >= v7 >> 1)
      {
        sub_22F88C514(v7 > 1, v8 + 1, 1);
        result = v10;
      }
      *(_QWORD *)(result + 16) = v8 + 1;
      *(_BYTE *)(result + v8 + 32) = v5 ^ 0xDA;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_22F88D03C(unint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_22F88C2C8(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_22F88D044(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v11;

  v11 = MEMORY[0x24BEE4AF8];
  sub_22F88C514(0, 0, 0);
  v4 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v4)
  {
    v5 = 0;
    v6 = a1 + 32;
    do
    {
      v7 = a2(v5, *(unsigned __int8 *)(v6 + v5));
      v9 = *(_QWORD *)(v11 + 16);
      v8 = *(_QWORD *)(v11 + 24);
      if (v9 >= v8 >> 1)
        sub_22F88C514(v8 > 1, v9 + 1, 1);
      ++v5;
      *(_QWORD *)(v11 + 16) = v9 + 1;
      *(_BYTE *)(v11 + v9 + 32) = v7;
    }
    while (v4 != v5);
  }
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t *sub_22F88D144(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    v7 = a1;
    a1[1] = a2[1];
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_22F98E308();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_retain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF68);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v15 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_255E1F298);
    v9[v15[9]] = v10[v15[9]];
    *(_QWORD *)&v9[v15[10]] = *(_QWORD *)&v10[v15[10]];
    v9[v15[11]] = v10[v15[11]];
    v16 = a3[6];
    v17 = (char *)v7 + v16;
    v18 = (char *)a2 + v16;
    swift_retain();
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF78);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[7];
    v21 = (uint64_t *)((char *)v7 + v20);
    v22 = (uint64_t *)((char *)a2 + v20);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
  }
  swift_retain();
  return v7;
}

uint64_t sub_22F88D2CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_22F98E308();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  __swift_instantiateConcreteTypeFromMangledName(qword_255E1F298);
  swift_release();
  v7 = a1 + *(int *)(a2 + 24);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF78);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  return swift_release();
}

_QWORD *sub_22F88D390(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_22F98E308();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_retain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF68);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_255E1F298);
  v8[v14[9]] = v9[v14[9]];
  *(_QWORD *)&v8[v14[10]] = *(_QWORD *)&v9[v14[10]];
  v8[v14[11]] = v9[v14[11]];
  v15 = a3[6];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  swift_retain();
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF78);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[7];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  swift_retain();
  return a1;
}

_QWORD *sub_22F88D4EC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_22F98E308();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF68);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_255E1F298);
  v7[v15[9]] = v8[v15[9]];
  *(_QWORD *)&v7[v15[10]] = *(_QWORD *)&v8[v15[10]];
  swift_retain();
  swift_release();
  v7[v15[11]] = v8[v15[11]];
  v16 = a3[6];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF78);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 24))(v17, v18, v19);
  v20 = a3[7];
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (_QWORD *)((char *)a2 + v20);
  *v21 = *v22;
  v21[1] = v22[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_22F88D6BC(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_22F98E308();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF68);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_255E1F298);
  v7[v12[9]] = v8[v12[9]];
  *(_QWORD *)&v7[v12[10]] = *(_QWORD *)&v8[v12[10]];
  v7[v12[11]] = v8[v12[11]];
  v13 = a3[6];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF78);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  return a1;
}

_QWORD *sub_22F88D7F4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;

  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_22F98E308();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF68);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_255E1F298);
  v7[v15[9]] = v8[v15[9]];
  *(_QWORD *)&v7[v15[10]] = *(_QWORD *)&v8[v15[10]];
  swift_release();
  v7[v15[11]] = v8[v15[11]];
  v16 = a3[6];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF78);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, v18, v19);
  v20 = a3[7];
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (_QWORD *)((char *)a2 + v20);
  v24 = *v22;
  v23 = v22[1];
  *v21 = v24;
  v21[1] = v23;
  swift_release();
  return a1;
}

uint64_t sub_22F88D9A4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22F88D9B0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v12;

  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_255E1F298);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF78);
  v7 = *(_QWORD *)(v10 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v10;
    v9 = a3[6];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v12 = *(_QWORD *)(a1 + a3[7] + 8);
  if (v12 >= 0xFFFFFFFF)
    LODWORD(v12) = -1;
  return (v12 + 1);
}

uint64_t sub_22F88DA60()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22F88DA6C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v8 = __swift_instantiateConcreteTypeFromMangledName(qword_255E1F298);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = a4[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF78);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = a4[6];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  *(_QWORD *)(a1 + a4[7] + 8) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for PINPrivacyLockView()
{
  uint64_t result;

  result = qword_255E1FF28;
  if (!qword_255E1FF28)
    return swift_getSingletonMetadata();
  return result;
}

void sub_22F88DB54()
{
  unint64_t v0;
  unint64_t v1;

  sub_22F883594();
  if (v0 <= 0x3F)
  {
    sub_22F87CE34();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_22F88DBEC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22F88DBFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t (**v39)();
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE v56[128];
  _QWORD v57[16];
  _OWORD v58[8];
  _OWORD v59[2];
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;

  v55 = a2;
  v3 = type metadata accessor for PINPrivacyLockView();
  v51 = *(_QWORD *)(v3 - 8);
  v52 = *(_QWORD *)(v51 + 64);
  *(_QWORD *)&v53 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v50 = (uint64_t)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1FF70);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1FF78);
  MEMORY[0x24BDAC7A8](v46);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1FF80);
  MEMORY[0x24BDAC7A8](v47);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1FF88);
  MEMORY[0x24BDAC7A8](v48);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1FF90);
  v14 = MEMORY[0x24BDAC7A8](v49);
  v54 = (uint64_t)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v45 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v45 - v19;
  *(_QWORD *)v7 = sub_22F98E128();
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = 0;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1FF98);
  sub_22F88E15C(a1, (uint64_t)&v7[*(int *)(v21 + 44)]);
  v22 = sub_22F98E410();
  sub_22F98DBF4();
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v30 = v29;
  sub_22F87ABDC((uint64_t)v7, (uint64_t)v9, &qword_255E1FF70);
  v31 = &v9[*(int *)(v46 + 36)];
  *v31 = v22;
  *((_QWORD *)v31 + 1) = v24;
  *((_QWORD *)v31 + 2) = v26;
  *((_QWORD *)v31 + 3) = v28;
  *((_QWORD *)v31 + 4) = v30;
  v31[40] = 0;
  sub_22F87AC20((uint64_t)v7, &qword_255E1FF70);
  v32 = sub_22F98DEDC();
  v33 = sub_22F98E41C();
  sub_22F87ABDC((uint64_t)v9, (uint64_t)v11, &qword_255E1FF78);
  v34 = &v11[*(int *)(v47 + 36)];
  *(_QWORD *)v34 = v32;
  v34[8] = v33;
  v35 = (uint64_t)v20;
  sub_22F87AC20((uint64_t)v9, &qword_255E1FF78);
  v36 = v50;
  sub_22F890480(a1, v50);
  v37 = (*(unsigned __int8 *)(v51 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  v38 = swift_allocObject();
  sub_22F8904C8(v36, v38 + v37);
  sub_22F87ABDC((uint64_t)v11, (uint64_t)v13, &qword_255E1FF80);
  v39 = (uint64_t (**)())&v13[*(int *)(v48 + 36)];
  *v39 = sub_22F89050C;
  v39[1] = (uint64_t (*)())v38;
  v39[2] = 0;
  v39[3] = 0;
  sub_22F87AC20((uint64_t)v11, &qword_255E1FF80);
  sub_22F87ABDC((uint64_t)v13, (uint64_t)v18, &qword_255E1FF88);
  *(_QWORD *)&v18[*(int *)(v49 + 36)] = 0x3FF0000000000000;
  sub_22F87AC20((uint64_t)v13, &qword_255E1FF88);
  sub_22F87B2B4((uint64_t)v18, v35, &qword_255E1FF90);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  swift_release();
  if ((_QWORD)v61)
  {
    v40 = *((_QWORD *)&v62 + 1);
    v59[0] = v61;
    v59[1] = v62;
    v60 = v63;
    v53 = v61;
    sub_22F88FE5C((uint64_t)v59, (uint64_t)&v61);
    swift_release();

    sub_22F87A9B8(v40);
    v58[4] = v65;
    v58[5] = v66;
    v58[6] = v67;
    v58[7] = v68;
    v58[0] = v61;
    v58[1] = v62;
    v58[2] = v63;
    v58[3] = v64;
    nullsub_1(v58);
  }
  else
  {
    sub_22F890520(v58);
  }
  sub_22F87B2B4((uint64_t)v58, (uint64_t)&v61, &qword_255E1FFA0);
  v41 = v54;
  sub_22F87ABDC(v35, v54, &qword_255E1FF90);
  sub_22F87B2B4((uint64_t)&v61, (uint64_t)v56, &qword_255E1FFA0);
  v42 = v55;
  sub_22F87ABDC(v41, v55, &qword_255E1FF90);
  v43 = v42 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255E1FFA8) + 48);
  sub_22F87B2B4((uint64_t)v56, (uint64_t)v57, &qword_255E1FFA0);
  sub_22F87B2B4((uint64_t)v57, v43, &qword_255E1FFA0);
  sub_22F8905F0(v57, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22F890538);
  sub_22F87AC20(v35, &qword_255E1FF90);
  sub_22F87B2B4((uint64_t)v56, (uint64_t)v58, &qword_255E1FFA0);
  sub_22F8905F0(v58, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22F89064C);
  return sub_22F87AC20(v41, &qword_255E1FF90);
}

uint64_t sub_22F88E15C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  char v83;
  uint64_t v84;
  int v85;
  _BYTE *v86;
  _BYTE *v87;
  uint64_t v88;
  uint64_t v89;
  _BYTE *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t KeyPath;
  uint64_t v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  _BYTE *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char v126;
  char v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char v131;
  char v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char v136;
  char v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  _BYTE *v142;
  _BYTE *v143;
  _BYTE *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  _BYTE *v153;
  uint64_t v154;
  uint64_t v155;
  _BYTE *v156;
  uint64_t v157;
  unint64_t v158;
  _BYTE *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  _BYTE *v171;
  _BYTE *v172;
  _BYTE *v173;
  _BYTE *v174;
  _BYTE *v175;
  uint64_t v176;
  uint64_t v177;
  _BYTE *v178;
  _BYTE *v179;
  uint64_t v180;
  int *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t result;
  _BYTE v185[12];
  int v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  __int128 v191;
  uint64_t OpaqueTypeConformance2;
  void (*v193)(_BYTE *, _BYTE *, uint64_t);
  void (*v194)(_BYTE *, uint64_t);
  _BYTE *v195;
  unint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  _BYTE *v201;
  _BYTE *v202;
  _BYTE *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  _BYTE *v209;
  uint64_t v210;
  _BYTE *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  _BYTE *v215;
  uint64_t v216;
  uint64_t v217;
  _BYTE *v218;
  _BYTE *v219;
  _BYTE *v220;
  uint64_t v221;
  _BYTE *v222;
  _BYTE *v223;
  _BYTE *v224;
  uint64_t v225;
  uint64_t v226;
  _BYTE *v227;
  uint64_t v228;
  _BYTE *v229;
  _BYTE *v230;
  _BYTE *v231;
  _BYTE *v232;
  _BYTE *v233;
  uint64_t v234;
  _BYTE *v235;
  _BYTE *v236;
  _BYTE *v237;
  _QWORD *v238;
  _BYTE *v239;
  __int128 v240;
  __int128 v241;
  __int128 v242;
  __int128 v243;
  __int128 v244;
  __int128 v245;
  __int128 v246;
  __int128 v247;
  __int128 v248;
  __int128 v249;
  __int128 v250;
  __int128 v251;
  _OWORD v252[4];
  __int128 v253;
  __int128 v254;
  __int128 v255;
  __int128 v256;
  __int128 v257;
  __int128 v258;
  __int128 v259;
  __int128 v260;
  __int128 v261;
  _BYTE v262[7];
  char v263;
  __int128 v264;
  __int128 v265;
  __int128 v266;
  __int128 v267;
  __int128 v268;
  __int128 v269;
  __int128 v270;
  __int128 v271;
  __int128 v272;
  __int128 v273;
  _OWORD v274[2];
  _OWORD v275[3];
  char v276;
  _BYTE v277[7];
  _BYTE v278[7];
  _BYTE v279[7];
  char v280;
  _DWORD v281[2];
  _DWORD v282[2];
  char v283;
  uint64_t v284;
  char v285;
  uint64_t v286;
  char v287;
  uint64_t v288;
  uint64_t v289;

  v221 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1FFB8);
  v212 = *(_QWORD *)(v3 - 8);
  v213 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v211 = &v185[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1FFC0);
  v216 = *(_QWORD *)(v5 - 8);
  v217 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v215 = &v185[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1FFC8);
  MEMORY[0x24BDAC7A8](v7);
  v218 = &v185[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v214 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1FFD0);
  v9 = MEMORY[0x24BDAC7A8](v214);
  v220 = &v185[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v9);
  v219 = &v185[-v11];
  v210 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1FFD8);
  v12 = MEMORY[0x24BDAC7A8](v210);
  v209 = &v185[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = MEMORY[0x24BDAC7A8](v12);
  v239 = &v185[-v15];
  MEMORY[0x24BDAC7A8](v14);
  v233 = &v185[-v16];
  v234 = type metadata accessor for PINPrivacyLockView();
  v207 = *(_QWORD *)(v234 - 8);
  MEMORY[0x24BDAC7A8](v234);
  v208 = v17;
  v18 = &v185[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = sub_22F98E098();
  v198 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v21 = &v185[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v225 = sub_22F98DE40();
  v197 = *(_QWORD *)(v225 - 8);
  MEMORY[0x24BDAC7A8](v225);
  v224 = &v185[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1FFE0);
  v199 = *(_QWORD *)(v23 - 8);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v223 = &v185[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v24);
  v222 = &v185[-v26];
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1FFE8);
  MEMORY[0x24BDAC7A8](v27);
  v195 = &v185[-((v28 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v200 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1FFF0);
  MEMORY[0x24BDAC7A8](v200);
  v201 = &v185[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v206 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1FFF8);
  v204 = *(_QWORD *)(v206 - 8);
  MEMORY[0x24BDAC7A8](v206);
  v202 = &v185[-((v30 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v205 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20000);
  MEMORY[0x24BDAC7A8](v205);
  v203 = &v185[-((v31 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20008);
  v33 = MEMORY[0x24BDAC7A8](v32);
  v35 = &v185[-((v34 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v33);
  v37 = &v185[-v36];
  v196 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20010);
  MEMORY[0x24BDAC7A8](v196);
  v39 = &v185[-((v38 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20018);
  v41 = MEMORY[0x24BDAC7A8](v40);
  v237 = &v185[-((v42 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v41);
  v236 = &v185[-v43];
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20020);
  v45 = MEMORY[0x24BDAC7A8](v44);
  v230 = &v185[-((v46 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v45);
  v235 = &v185[-v47];
  if (qword_255E1DB80 != -1)
    swift_once();
  v231 = v37;
  v232 = v35;
  v238 = (_QWORD *)a1;
  v228 = v19;
  v229 = v18;
  v226 = v23;
  v227 = v21;
  if ((byte_255E29730 & 1) != 0)
  {
    v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20060);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v235, 1, 1, v48);
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_22F98DBA0();
    swift_release();
    swift_release();
    swift_release();
    OpaqueTypeConformance2 = *((_QWORD *)&v264 + 1);
    v193 = (void (*)(_BYTE *, _BYTE *, uint64_t))v264;
    *(_QWORD *)&v191 = *((_QWORD *)&v265 + 1);
    v49 = v265;
    v194 = (void (*)(_BYTE *, uint64_t))v265;
    sub_22F98EA88();
    sub_22F98DCFC();
    v50 = v284;
    v51 = v285;
    v52 = v286;
    v53 = v287;
    v54 = v288;
    v55 = v289;
    v56 = sub_22F98E428();
    sub_22F98DBF4();
    LOBYTE(v240) = 1;
    LOBYTE(v253) = v51;
    LOBYTE(v282[0]) = v53;
    LOBYTE(v281[0]) = 0;
    *(_QWORD *)&v264 = v193;
    *((_QWORD *)&v264 + 1) = OpaqueTypeConformance2;
    *(_QWORD *)&v265 = v49;
    *((_QWORD *)&v265 + 1) = v191;
    *(_QWORD *)&v266 = 0;
    WORD4(v266) = 1;
    *(_QWORD *)&v267 = v50;
    BYTE8(v267) = v51;
    *(_QWORD *)&v268 = v52;
    BYTE8(v268) = v53;
    *(_QWORD *)&v269 = v54;
    *((_QWORD *)&v269 + 1) = v55;
    LOBYTE(v270) = v56;
    *((_QWORD *)&v270 + 1) = v57;
    *(_QWORD *)&v271 = v58;
    *((_QWORD *)&v271 + 1) = v59;
    *(_QWORD *)&v272 = v60;
    BYTE8(v272) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E20028);
    sub_22F87E2D8(&qword_255E20030, &qword_255E20028, sub_22F89084C, MEMORY[0x24BDECC60]);
    v61 = v235;
    sub_22F98E704();
    sub_22F87A9B8((uint64_t)v194);
    v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20060);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v61, 0, 1, v62);
  }
  *(_QWORD *)v39 = sub_22F98E128();
  *((_QWORD *)v39 + 1) = 0;
  v39[16] = 1;
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20068);
  sub_22F88F7B4((uint64_t)&v39[*(int *)(v63 + 44)]);
  sub_22F87AA84(&qword_255E20070, &qword_255E20010, MEMORY[0x24BDF4700]);
  v64 = v237;
  sub_22F98E6BC();
  sub_22F87AC20((uint64_t)v39, &qword_255E20010);
  sub_22F87B2B4((uint64_t)v64, (uint64_t)v236, &qword_255E20018);
  sub_22F8B9AFC();
  v65 = sub_22F932EEC(0);
  v67 = v66;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v264 = v65;
  *((_QWORD *)&v264 + 1) = v67;
  v196 = sub_22F863BF8();
  v68 = sub_22F98E5CC();
  v70 = v69;
  v72 = v71;
  if (qword_255E1DBE0 != -1)
    swift_once();
  v73 = sub_22F98E590();
  v75 = v74;
  v77 = v76 & 1;
  sub_22F87E294(v68, v70, v72 & 1);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF78);
  sub_22F98DCC0();
  sub_22F98E4D0();
  v78 = sub_22F98E4A0();
  v79 = (uint64_t)v195;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 56))(v195, 1, 1, v78);
  sub_22F98E4DC();
  sub_22F87AC20(v79, &qword_255E1FFE8);
  v80 = sub_22F98E5A8();
  v188 = v81;
  v189 = v80;
  v83 = v82;
  v190 = v84;
  swift_release();
  v85 = v83 & 1;
  sub_22F87E294(v73, v75, v77);
  swift_bridgeObjectRelease();
  v86 = v224;
  sub_22F98DE34();
  v87 = v227;
  sub_22F98E08C();
  v88 = sub_22F862548(&qword_255E1FFB0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC860], MEMORY[0x24BDEC858]);
  v89 = sub_22F862548((unint64_t *)&qword_255E1F0A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEE630], MEMORY[0x24BDEE620]);
  v90 = v222;
  v91 = v225;
  v92 = v228;
  sub_22F98DC0C();
  v195 = *(_BYTE **)(v198 + 8);
  ((void (*)(_BYTE *, uint64_t))v195)(v87, v92);
  v194 = *(void (**)(_BYTE *, uint64_t))(v197 + 8);
  v194(v86, v91);
  v93 = v199;
  v94 = v226;
  v193 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v199 + 16);
  v193(v223, v90, v226);
  *(_QWORD *)&v264 = v91;
  *((_QWORD *)&v264 + 1) = v92;
  v197 = v89;
  v198 = v88;
  *(_QWORD *)&v265 = v88;
  *((_QWORD *)&v265 + 1) = v89;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v95 = sub_22F98DD80();
  v187 = v95;
  v199 = *(_QWORD *)(v93 + 8);
  ((void (*)(_BYTE *, uint64_t))v199)(v90, v94);
  KeyPath = swift_getKeyPath();
  v97 = swift_getKeyPath();
  v98 = swift_getKeyPath();
  LOBYTE(v93) = sub_22F98E434();
  sub_22F98DBF4();
  v99 = v85;
  v186 = v85;
  v283 = v85;
  v280 = 0;
  v276 = 0;
  v100 = v188;
  v101 = v189;
  *(_QWORD *)&v264 = v189;
  *((_QWORD *)&v264 + 1) = v188;
  LOBYTE(v265) = v99;
  *(_DWORD *)((char *)&v265 + 1) = v282[0];
  DWORD1(v265) = *(_DWORD *)((char *)v282 + 3);
  *((_QWORD *)&v265 + 1) = v190;
  *(_QWORD *)&v266 = v95;
  BYTE8(v266) = 0;
  *(_DWORD *)((char *)&v266 + 9) = v281[0];
  HIDWORD(v266) = *(_DWORD *)((char *)v281 + 3);
  *(_QWORD *)&v267 = KeyPath;
  *((_QWORD *)&v267 + 1) = 2;
  LOBYTE(v268) = 0;
  DWORD1(v268) = *(_DWORD *)&v279[3];
  *(_DWORD *)((char *)&v268 + 1) = *(_DWORD *)v279;
  *((_QWORD *)&v268 + 1) = v97;
  LOBYTE(v269) = 1;
  DWORD1(v269) = *(_DWORD *)&v278[3];
  *(_DWORD *)((char *)&v269 + 1) = *(_DWORD *)v278;
  *((_QWORD *)&v269 + 1) = v98;
  v191 = xmmword_22F992F20;
  v270 = xmmword_22F992F20;
  LOBYTE(v271) = v93;
  DWORD1(v271) = *(_DWORD *)&v277[3];
  *(_DWORD *)((char *)&v271 + 1) = *(_DWORD *)v277;
  *((_QWORD *)&v271 + 1) = v102;
  *(_QWORD *)&v272 = v103;
  *((_QWORD *)&v272 + 1) = v104;
  *(_QWORD *)&v273 = v105;
  BYTE8(v273) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E20078);
  sub_22F87E2D8(&qword_255E20080, &qword_255E20078, (uint64_t (*)(void))sub_22F8909F0, MEMORY[0x24BDECC60]);
  v106 = (uint64_t)v201;
  sub_22F98E71C();
  sub_22F87E294(v101, v100, v186);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v107 = v238;
  __swift_instantiateConcreteTypeFromMangledName(qword_255E1F298);
  sub_22F98E2A8();
  LOBYTE(v240) = 3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F310);
  sub_22F890D4C();
  sub_22F8835F8();
  v108 = v202;
  sub_22F98E6E0();
  swift_release();
  swift_release();
  sub_22F87AC20(v106, &qword_255E1FFF0);
  v109 = (uint64_t)v229;
  sub_22F890480((uint64_t)v107, (uint64_t)v229);
  v110 = *(unsigned __int8 *)(v207 + 80);
  v111 = (v110 + 16) & ~v110;
  v207 = v110 | 7;
  v208 += v111;
  v112 = swift_allocObject();
  v234 = v111;
  sub_22F8904C8(v109, v112 + v111);
  v114 = (uint64_t)v203;
  v113 = v204;
  v115 = v206;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v204 + 16))(v203, v108, v206);
  v116 = (_QWORD *)(v114 + *(int *)(v205 + 36));
  *v116 = sub_22F890810;
  v116[1] = v112;
  v116[2] = 0;
  v116[3] = 0;
  (*(void (**)(_BYTE *, uint64_t))(v113 + 8))(v108, v115);
  sub_22F890DF4();
  v117 = (uint64_t)v232;
  sub_22F98E704();
  sub_22F87AC20(v114, &qword_255E20000);
  sub_22F87B2B4(v117, (uint64_t)v231, &qword_255E20008);
  if (*v107)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_22F98DBA0();
    swift_release();
    swift_release();
    swift_release();
    if ((_BYTE)v264)
      v118 = 0xD00000000000001DLL;
    else
      v118 = 0xD000000000000016;
    if ((_BYTE)v264)
      v119 = 0x800000022F99E9A0;
    else
      v119 = 0x800000022F99E930;
    v120 = sub_22F93358C(v118, v119);
    v122 = v121;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v264 = v120;
    *((_QWORD *)&v264 + 1) = v122;
    v123 = sub_22F98E5CC();
    v125 = v124;
    v127 = v126 & 1;
    v128 = sub_22F98E590();
    v130 = v129;
    v132 = v131 & 1;
    sub_22F87E294(v123, v125, v127);
    swift_bridgeObjectRelease();
    sub_22F98E488();
    v133 = sub_22F98E5A8();
    v135 = v134;
    v137 = v136;
    v139 = v138;
    swift_release();
    sub_22F87E294(v128, v130, v132);
    swift_bridgeObjectRelease();
    v140 = sub_22F98EA88();
    sub_22F8F8CA0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v264, 0.0, 1, 0.0, 1, v140, v141, v133, v135, v137 & 1, v139);
    sub_22F87E294(v133, v135, v137 & 1);
    swift_bridgeObjectRelease();
    v259 = v270;
    v260 = v271;
    v261 = v272;
    v255 = v266;
    v256 = v267;
    v257 = v268;
    v258 = v269;
    v253 = v264;
    v254 = v265;
    v142 = v224;
    sub_22F98DE34();
    v143 = v227;
    sub_22F98E08C();
    v144 = v222;
    v145 = v225;
    v146 = v228;
    sub_22F98DC0C();
    ((void (*)(_BYTE *, uint64_t))v195)(v143, v146);
    v194(v142, v145);
    v147 = v226;
    v193(v223, v144, v226);
    v148 = sub_22F98DD80();
    ((void (*)(_BYTE *, uint64_t))v199)(v144, v147);
    v149 = swift_getKeyPath();
    v150 = swift_getKeyPath();
    v263 = 0;
    v151 = swift_getKeyPath();
    v270 = v259;
    v271 = v260;
    v272 = v261;
    v266 = v255;
    v267 = v256;
    v268 = v257;
    v269 = v258;
    v264 = v253;
    v265 = v254;
    *(_QWORD *)&v273 = v148;
    BYTE8(v273) = 0;
    HIDWORD(v273) = *(_DWORD *)&v262[3];
    *(_DWORD *)((char *)&v273 + 9) = *(_DWORD *)v262;
    *(_OWORD *)((char *)v274 + 8) = v191;
    *(_QWORD *)&v274[0] = v149;
    *((_QWORD *)&v274[1] + 1) = v150;
    *(_QWORD *)&v275[0] = 3;
    BYTE8(v275[0]) = v263;
    *(_QWORD *)&v275[1] = v151;
    BYTE8(v275[1]) = 1;
    v250 = v274[0];
    v251 = v274[1];
    v252[0] = v275[0];
    *(_OWORD *)((char *)v252 + 9) = *(_OWORD *)((char *)v275 + 9);
    v246 = v259;
    v247 = v260;
    v248 = v261;
    v249 = v273;
    v242 = v255;
    v243 = v256;
    v244 = v257;
    v245 = v258;
    v240 = v253;
    v241 = v254;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E20118);
    sub_22F890EB4();
    v152 = (uint64_t)v209;
    sub_22F98E71C();
    sub_22F891180((uint64_t)&v264);
    v153 = v239;
    sub_22F98DEB8();
    sub_22F87AC20(v152, &qword_255E1FFD8);
    sub_22F87B2B4((uint64_t)v153, (uint64_t)v233, &qword_255E1FFD8);
    v154 = (uint64_t)v229;
    sub_22F890480((uint64_t)v238, (uint64_t)v229);
    v155 = swift_allocObject();
    sub_22F8904C8(v154, v155 + v234);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E20188);
    sub_22F891350();
    v156 = v211;
    sub_22F98E920();
    *(_QWORD *)&v240 = swift_getKeyPath();
    BYTE8(v240) = 0;
    v157 = sub_22F87AA84(&qword_255E20198, &qword_255E1FFB8, MEMORY[0x24BDF43B0]);
    v158 = sub_22F8914A8();
    v159 = v215;
    v160 = v213;
    sub_22F98E620();
    swift_release();
    (*(void (**)(_BYTE *, uint64_t))(v212 + 8))(v156, v160);
    *(_QWORD *)&v240 = v160;
    *((_QWORD *)&v240 + 1) = &type metadata for ContinueButton;
    *(_QWORD *)&v241 = v157;
    *((_QWORD *)&v241 + 1) = v158;
    swift_getOpaqueTypeConformance2();
    v162 = v217;
    v161 = (uint64_t)v218;
    sub_22F98E704();
    (*(void (**)(_BYTE *, uint64_t))(v216 + 8))(v159, v162);
    LOBYTE(v148) = sub_22F98E428();
    sub_22F98DBF4();
    v164 = v163;
    v166 = v165;
    v168 = v167;
    v170 = v169;
    v171 = v220;
    sub_22F87ABDC(v161, (uint64_t)v220, &qword_255E1FFC8);
    v172 = &v171[*(int *)(v214 + 36)];
    *v172 = v148;
    *((_QWORD *)v172 + 1) = v164;
    *((_QWORD *)v172 + 2) = v166;
    *((_QWORD *)v172 + 3) = v168;
    *((_QWORD *)v172 + 4) = v170;
    v172[40] = 0;
    sub_22F87AC20(v161, &qword_255E1FFC8);
    v173 = v219;
    sub_22F87B2B4((uint64_t)v171, (uint64_t)v219, &qword_255E1FFD0);
    v174 = v230;
    sub_22F87ABDC((uint64_t)v235, (uint64_t)v230, &qword_255E20020);
    v175 = v237;
    sub_22F87ABDC((uint64_t)v236, (uint64_t)v237, &qword_255E20018);
    v177 = (uint64_t)v231;
    v176 = (uint64_t)v232;
    sub_22F87ABDC((uint64_t)v231, (uint64_t)v232, &qword_255E20008);
    v178 = v233;
    v179 = v239;
    sub_22F87ABDC((uint64_t)v233, (uint64_t)v239, &qword_255E1FFD8);
    sub_22F87ABDC((uint64_t)v173, (uint64_t)v171, &qword_255E1FFD0);
    v180 = v221;
    sub_22F87ABDC((uint64_t)v174, v221, &qword_255E20020);
    v181 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255E201A8);
    v182 = v180 + v181[12];
    *(_QWORD *)v182 = 0;
    *(_BYTE *)(v182 + 8) = 1;
    sub_22F87ABDC((uint64_t)v175, v180 + v181[16], &qword_255E20018);
    sub_22F87ABDC(v176, v180 + v181[20], &qword_255E20008);
    sub_22F87ABDC((uint64_t)v179, v180 + v181[24], &qword_255E1FFD8);
    sub_22F87ABDC((uint64_t)v171, v180 + v181[28], &qword_255E1FFD0);
    v183 = v180 + v181[32];
    *(_QWORD *)v183 = 0;
    *(_BYTE *)(v183 + 8) = 1;
    sub_22F87AC20((uint64_t)v173, &qword_255E1FFD0);
    sub_22F87AC20((uint64_t)v178, &qword_255E1FFD8);
    sub_22F87AC20(v177, &qword_255E20008);
    sub_22F87AC20((uint64_t)v236, &qword_255E20018);
    sub_22F87AC20((uint64_t)v235, &qword_255E20020);
    sub_22F87AC20((uint64_t)v171, &qword_255E1FFD0);
    sub_22F87AC20((uint64_t)v239, &qword_255E1FFD8);
    sub_22F87AC20(v176, &qword_255E20008);
    sub_22F87AC20((uint64_t)v237, &qword_255E20018);
    return sub_22F87AC20((uint64_t)v230, &qword_255E20020);
  }
  else
  {
    type metadata accessor for PINViewModel();
    sub_22F862548((unint64_t *)&qword_255E20110, (uint64_t (*)(uint64_t))type metadata accessor for PINViewModel, (uint64_t)&unk_22F991FD4);
    result = sub_22F98DF54();
    __break(1u);
  }
  return result;
}

uint64_t sub_22F88F7B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[4];
  __int16 v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;

  v20[1] = a1;
  v1 = sub_22F98E878();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E201B0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22F98E86C();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BDF3FD0], v1);
  v8 = sub_22F98E890();
  swift_release();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_22F98EA88();
  sub_22F98DCFC();
  v9 = v34;
  v10 = v35;
  v11 = v36;
  v12 = v37;
  v14 = v38;
  v13 = v39;
  LOBYTE(v1) = sub_22F98E434();
  sub_22F98DBF4();
  v20[2] = v8;
  v20[3] = 0;
  v21 = 1;
  v22 = v9;
  v23 = v10;
  v24 = v11;
  v25 = v12;
  v26 = v14;
  v27 = v13;
  v28 = v1;
  v29 = v15;
  v30 = v16;
  v31 = v17;
  v32 = v18;
  v33 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E201B8);
  sub_22F87E2D8(&qword_255E201C0, &qword_255E201B8, (uint64_t (*)(void))sub_22F8914EC, MEMORY[0x24BDECC60]);
  sub_22F98E6BC();
  swift_release();
  sub_22F98DEB8();
  return sub_22F87AC20((uint64_t)v7, &qword_255E201B0);
}

uint64_t sub_22F88F9EC(_QWORD *a1)
{
  uint64_t result;

  if (*a1)
  {
    swift_retain();
    sub_22F86F0E8();
    return swift_release();
  }
  else
  {
    type metadata accessor for PINViewModel();
    sub_22F862548((unint64_t *)&qword_255E20110, (uint64_t (*)(uint64_t))type metadata accessor for PINViewModel, (uint64_t)&unk_22F991FD4);
    result = sub_22F98DF54();
    __break(1u);
  }
  return result;
}

uint64_t sub_22F88FA60@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t result;

  sub_22F932EEC(0);
  sub_22F863BF8();
  v2 = sub_22F98E5CC();
  v4 = v3;
  v6 = v5;
  v8 = v7;
  KeyPath = swift_getKeyPath();
  result = swift_getKeyPath();
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v6 & 1;
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = KeyPath;
  *(_QWORD *)(a1 + 40) = 0x3FD3333333333333;
  *(_QWORD *)(a1 + 48) = result;
  *(_QWORD *)(a1 + 56) = 1;
  *(_BYTE *)(a1 + 64) = 0;
  return result;
}

uint64_t sub_22F88FB24(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[6];

  v22 = a1;
  v26 = sub_22F98EB84();
  v29 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v2 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_22F98EB9C();
  v27 = *(_QWORD *)(v3 - 8);
  v28 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PINPrivacyLockView();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  v9 = sub_22F98EBC0();
  v10 = *(_QWORD *)(v9 - 8);
  v25 = v9;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v22 - v14;
  sub_22F879058();
  v23 = sub_22F98F0F4();
  sub_22F98EBB4();
  MEMORY[0x2348A57D0](v13, 0.5);
  v24 = *(void (**)(char *, uint64_t))(v10 + 8);
  v24(v13, v9);
  sub_22F890480(v22, (uint64_t)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v17 = swift_allocObject();
  sub_22F8904C8((uint64_t)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16);
  aBlock[4] = sub_22F890810;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22F8644F0;
  aBlock[3] = &block_descriptor_17_0;
  v18 = _Block_copy(aBlock);
  swift_release();
  sub_22F98EB90();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_22F862548((unint64_t *)&qword_255E22DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E22070);
  sub_22F87AA84((unint64_t *)&qword_255E22DB0, (uint64_t *)&unk_255E22070, MEMORY[0x24BEE12C8]);
  v19 = v26;
  sub_22F98F274();
  v20 = (void *)v23;
  MEMORY[0x2348A5CA4](v15, v5, v2, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v2, v19);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v5, v28);
  return ((uint64_t (*)(char *, uint64_t))v24)(v15, v25);
}

uint64_t sub_22F88FE08()
{
  type metadata accessor for PINPrivacyLockView();
  __swift_instantiateConcreteTypeFromMangledName(qword_255E1F298);
  return sub_22F98E29C();
}

double sub_22F88FE5C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double result;
  int v20;
  uint64_t v21;
  int v22;
  _BYTE v23[7];
  _BYTE v24[7];

  v4 = sub_22F98DE40();
  v21 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v21 - v8;
  v10 = *(id *)a1;
  v22 = sub_22F98E41C();
  v11 = *(_QWORD *)(a1 + 24);
  v12 = swift_allocObject();
  v13 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v12 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v12 + 32) = v13;
  *(_QWORD *)(v12 + 48) = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(v12 + 56) = 350;
  v14 = v10;
  swift_retain();
  sub_22F88BD70(v11);
  sub_22F98DE34();
  v15 = v21;
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v7, v9, v4);
  sub_22F862548(&qword_255E1FFB0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC860], MEMORY[0x24BDEC858]);
  v16 = sub_22F98DD80();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v9, v4);
  v17 = sub_22F98E824();
  LOBYTE(v15) = sub_22F98E41C();

  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = 0x3FD6666666666666;
  *(_QWORD *)a2 = v14;
  *(_BYTE *)(a2 + 8) = v22;
  *(_DWORD *)(a2 + 9) = *(_DWORD *)v24;
  *(_DWORD *)(a2 + 12) = *(_DWORD *)&v24[3];
  *(_QWORD *)(a2 + 16) = sub_22F89070C;
  *(_QWORD *)(a2 + 24) = v12;
  result = 0.0;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)(a2 + 48) = 0u;
  *(_QWORD *)(a2 + 64) = sub_22F8903E4;
  *(_QWORD *)(a2 + 72) = 0;
  *(_QWORD *)(a2 + 80) = v16;
  *(_QWORD *)(a2 + 88) = v17;
  *(_BYTE *)(a2 + 96) = v15;
  v20 = *(_DWORD *)v23;
  *(_DWORD *)(a2 + 100) = *(_DWORD *)&v23[3];
  *(_DWORD *)(a2 + 97) = v20;
  *(_QWORD *)(a2 + 104) = sub_22F890728;
  *(_QWORD *)(a2 + 112) = v18;
  *(_QWORD *)(a2 + 120) = 0x4000000000000000;
  return result;
}

uint64_t sub_22F890064(uint64_t a1, void (*a2)(char *, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (**v11)(char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  void *v22;
  char *v23;
  uint64_t v24;
  void *v25;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD aBlock[6];
  id v37;

  v28 = a2;
  v3 = sub_22F98EB84();
  v34 = *(_QWORD *)(v3 - 8);
  v35 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v33 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_22F98EB9C();
  v31 = *(_QWORD *)(v5 - 8);
  v32 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_22F98EB78();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (void (**)(char *, uint64_t))((char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v30 = sub_22F98EBC0();
  v12 = *(_QWORD *)(v30 - 8);
  v13 = MEMORY[0x24BDAC7A8](v30);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v27 - v16;
  if (qword_255E1DB78 != -1)
    swift_once();
  BrightnessManager.increaseBrightnessIfNeeded()();
  (*(void (**)(uint64_t))(a1 + 8))(1);
  sub_22F879058();
  v29 = sub_22F98F0F4();
  sub_22F98EBB4();
  *v11 = v28;
  (*(void (**)(void (**)(char *, uint64_t), _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BEE5410], v8);
  MEMORY[0x2348A57C4](v15, v11);
  (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v11, v8);
  v28 = *(void (**)(char *, uint64_t))(v12 + 8);
  v18 = v30;
  v28(v15, v30);
  v37 = *(id *)a1;
  v19 = *(_QWORD *)(a1 + 24);
  v20 = swift_allocObject();
  v21 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v20 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v20 + 32) = v21;
  *(_QWORD *)(v20 + 48) = *(_QWORD *)(a1 + 32);
  aBlock[4] = sub_22F8907A4;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22F8644F0;
  aBlock[3] = &block_descriptor_5;
  v22 = _Block_copy(aBlock);
  sub_22F8907E4(&v37);
  swift_retain();
  sub_22F88BD70(v19);
  swift_release();
  sub_22F98EB90();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_22F862548((unint64_t *)&qword_255E22DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E22070);
  sub_22F87AA84((unint64_t *)&qword_255E22DB0, (uint64_t *)&unk_255E22070, MEMORY[0x24BEE12C8]);
  v23 = v33;
  v24 = v35;
  sub_22F98F274();
  v25 = (void *)v29;
  MEMORY[0x2348A5CA4](v17, v7, v23, v22);
  _Block_release(v22);

  (*(void (**)(char *, uint64_t))(v34 + 8))(v23, v24);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v7, v32);
  return ((uint64_t (*)(char *, uint64_t))v28)(v17, v18);
}

void sub_22F8903E4()
{
  if (qword_255E1DB78 != -1)
    swift_once();
  BrightnessManager.resetBrightnessToSystemDefault()();
}

uint64_t sub_22F890430@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = sub_22F98E128();
  v4 = sub_22F98E0A4();
  *a1 = v3;
  a1[1] = v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1FF68);
  return sub_22F88DBFC(v1, (uint64_t)a1 + *(int *)(v5 + 44));
}

uint64_t sub_22F890480(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PINPrivacyLockView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22F8904C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PINPrivacyLockView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22F89050C()
{
  return sub_22F891314(sub_22F88FB24);
}

double sub_22F890520(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

void *sub_22F890538(void *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  id v12;

  if (result)
  {
    v12 = result;
    sub_22F88BD70(a3);
    sub_22F88BD70(a5);
    sub_22F88BD70(a7);
    sub_22F88BD70(a9);
    swift_retain();
    swift_retain();
    return (void *)swift_retain();
  }
  return result;
}

_QWORD *sub_22F8905F0(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15]);
  return a1;
}

void *sub_22F89064C(void *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (result)
  {

    sub_22F87A9B8(a3);
    sub_22F87A9B8(a5);
    sub_22F87A9B8(a7);
    sub_22F87A9B8(a9);
    swift_release();
    swift_release();
    return (void *)swift_release();
  }
  return result;
}

uint64_t sub_22F890704()
{
  return objectdestroy_4Tm();
}

uint64_t sub_22F89070C()
{
  uint64_t v0;

  return sub_22F890064(v0 + 16, *(void (**)(char *, uint64_t))(v0 + 56));
}

uint64_t sub_22F890718()
{
  return swift_deallocObject();
}

uint64_t sub_22F890728()
{
  sub_22F98EB18();
  return sub_22F98DC9C();
}

uint64_t sub_22F890754()
{
  return objectdestroy_4Tm();
}

uint64_t objectdestroy_4Tm()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 40))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_22F8907A4()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t result;

  v1 = *(uint64_t (**)(void))(v0 + 40);
  if (v1)
    return v1();
  return result;
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

id *sub_22F8907E4(id *a1)
{
  id v2;

  v2 = *a1;
  return a1;
}

uint64_t sub_22F890814()
{
  type metadata accessor for PINPrivacyLockView();
  return sub_22F88FE08();
}

uint64_t sub_22F89084C()
{
  return sub_22F87E2D8(&qword_255E20038, &qword_255E20040, sub_22F890870, MEMORY[0x24BDEBEE0]);
}

uint64_t sub_22F890870()
{
  return sub_22F87E2D8(&qword_255E20048, &qword_255E20050, (uint64_t (*)(void))sub_22F890894, MEMORY[0x24BDEEC40]);
}

unint64_t sub_22F890894()
{
  unint64_t result;

  result = qword_255E20058;
  if (!qword_255E20058)
  {
    result = MEMORY[0x2348A6784](&unk_22F99B900, &type metadata for GlyphView);
    atomic_store(result, (unint64_t *)&qword_255E20058);
  }
  return result;
}

uint64_t sub_22F8908D8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22F98E044();
  *a1 = result & 1;
  return result;
}

uint64_t sub_22F890904()
{
  return sub_22F98E050();
}

uint64_t sub_22F890928@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_22F98E05C();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_22F890958@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_22F98E05C();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_22F890988()
{
  return sub_22F98E068();
}

uint64_t sub_22F8909B4()
{
  return sub_22F98E068();
}

unint64_t sub_22F8909F0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E20088;
  if (!qword_255E20088)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20090);
    v2[0] = sub_22F890A74();
    v2[1] = sub_22F87AA84(&qword_255E200F0, &qword_255E200F8, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E20088);
  }
  return result;
}

unint64_t sub_22F890A74()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E20098;
  if (!qword_255E20098)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E200A0);
    v2[0] = sub_22F890AF8();
    v2[1] = sub_22F87AA84(&qword_255E1FA18, &qword_255E1FA20, MEMORY[0x24BDF1028]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E20098);
  }
  return result;
}

unint64_t sub_22F890AF8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E200A8;
  if (!qword_255E200A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E200B0);
    v2[0] = sub_22F890B7C();
    v2[1] = sub_22F87AA84(&qword_255E1F4E0, &qword_255E1F4E8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E200A8);
  }
  return result;
}

unint64_t sub_22F890B7C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E200B8;
  if (!qword_255E200B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E200C0);
    v2[0] = sub_22F890C18(&qword_255E200C8, &qword_255E200D0, (uint64_t (*)(void))sub_22F890C84);
    v2[1] = sub_22F87AA84(&qword_255E1FA28, &qword_255E1FA30, MEMORY[0x24BDF1028]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E200B8);
  }
  return result;
}

uint64_t sub_22F890C18(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = a3();
    v7[1] = sub_22F890D08();
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22F890C84()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255E200D8;
  if (!qword_255E200D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E200E0);
    v2 = sub_22F87AA84(&qword_255E1F118, &qword_255E1F120, MEMORY[0x24BDEFB48]);
    v3[0] = MEMORY[0x24BDF1F80];
    v3[1] = v2;
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_255E200D8);
  }
  return result;
}

unint64_t sub_22F890D08()
{
  unint64_t result;

  result = qword_255E200E8;
  if (!qword_255E200E8)
  {
    result = MEMORY[0x2348A6784](MEMORY[0x24BDF08F0], MEMORY[0x24BDF0900]);
    atomic_store(result, (unint64_t *)&qword_255E200E8);
  }
  return result;
}

unint64_t sub_22F890D4C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E20100;
  if (!qword_255E20100)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1FFF0);
    v2[0] = sub_22F87E2D8(&qword_255E20080, &qword_255E20078, (uint64_t (*)(void))sub_22F8909F0, MEMORY[0x24BDECC60]);
    v2[1] = sub_22F862548((unint64_t *)&qword_255E1F478, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E20100);
  }
  return result;
}

unint64_t sub_22F890DF4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = qword_255E20108;
  if (!qword_255E20108)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20000);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1FFF0);
    v2[3] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1F310);
    v2[4] = sub_22F890D4C();
    v2[5] = sub_22F8835F8();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = MEMORY[0x24BDF0910];
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E20108);
  }
  return result;
}

unint64_t sub_22F890EB4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E20120;
  if (!qword_255E20120)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20118);
    v2[0] = sub_22F890F38();
    v2[1] = sub_22F87AA84(&qword_255E1F4E0, &qword_255E1F4E8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E20120);
  }
  return result;
}

unint64_t sub_22F890F38()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E20128;
  if (!qword_255E20128)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20130);
    v2[0] = sub_22F890FBC();
    v2[1] = sub_22F87AA84(&qword_255E1FA28, &qword_255E1FA30, MEMORY[0x24BDF1028]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E20128);
  }
  return result;
}

unint64_t sub_22F890FBC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E20138;
  if (!qword_255E20138)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20140);
    v2[0] = sub_22F891040();
    v2[1] = sub_22F87AA84(&qword_255E200F0, &qword_255E200F8, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E20138);
  }
  return result;
}

unint64_t sub_22F891040()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E20148;
  if (!qword_255E20148)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20150);
    v2[0] = sub_22F890C18(&qword_255E20158, &qword_255E20160, (uint64_t (*)(void))sub_22F8910DC);
    v2[1] = sub_22F87AA84(&qword_255E1FA18, &qword_255E1FA20, MEMORY[0x24BDF1028]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E20148);
  }
  return result;
}

unint64_t sub_22F8910DC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E20168;
  if (!qword_255E20168)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20170);
    v2[0] = sub_22F891578((unint64_t *)&qword_255E20178, &qword_255E20180, MEMORY[0x24BDF1F80], MEMORY[0x24BDEDBB8]);
    v2[1] = sub_22F87AA84(&qword_255E1F118, &qword_255E1F120, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E20168);
  }
  return result;
}

uint64_t sub_22F891180(uint64_t a1)
{
  sub_22F87E294(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t objectdestroyTm_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for PINPrivacyLockView();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_release();
  v4 = v3 + *(int *)(v1 + 20);
  v5 = sub_22F98E308();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  __swift_instantiateConcreteTypeFromMangledName(qword_255E1F298);
  swift_release();
  v7 = v3 + *(int *)(v1 + 24);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF78);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22F891308()
{
  return sub_22F891314((uint64_t (*)(uint64_t))sub_22F88F9EC);
}

uint64_t sub_22F891314(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PINPrivacyLockView() - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

unint64_t sub_22F891350()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E20190;
  if (!qword_255E20190)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20188);
    v2[0] = sub_22F8913D4();
    v2[1] = sub_22F87AA84(&qword_255E1FA28, &qword_255E1FA30, MEMORY[0x24BDF1028]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E20190);
  }
  return result;
}

unint64_t sub_22F8913D4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255E1FA60;
  if (!qword_255E1FA60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1FA68);
    v2 = sub_22F87AA84(&qword_255E1FA18, &qword_255E1FA20, MEMORY[0x24BDF1028]);
    v3[0] = MEMORY[0x24BDF1F80];
    v3[1] = v2;
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_255E1FA60);
  }
  return result;
}

uint64_t sub_22F891458@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22F98E044();
  *a1 = result & 1;
  return result;
}

uint64_t sub_22F891484()
{
  return sub_22F98E050();
}

unint64_t sub_22F8914A8()
{
  unint64_t result;

  result = qword_255E201A0;
  if (!qword_255E201A0)
  {
    result = MEMORY[0x2348A6784](&unk_22F998F64, &type metadata for ContinueButton);
    atomic_store(result, (unint64_t *)&qword_255E201A0);
  }
  return result;
}

unint64_t sub_22F8914EC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E1F9C0;
  if (!qword_255E1F9C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1F9C8);
    v2[0] = sub_22F891578((unint64_t *)&qword_255E1F0E8, &qword_255E1F0F0, MEMORY[0x24BDF40E8], MEMORY[0x24BDEEC40]);
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E1F9C0);
  }
  return result;
}

uint64_t sub_22F891578(unint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = a3;
    v9[1] = a4;
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22F8915D8()
{
  return sub_22F87AA84(&qword_255E201C8, &qword_255E201D0, MEMORY[0x24BDF4750]);
}

void sub_22F89160C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v5;
  double v6;
  void *v7;
  id v8;
  void *v9;
  _QWORD v10[6];

  if (*(_BYTE *)(v2 + 24) == 1)
  {
    objc_msgSend(*(id *)(v2 + 48), sel_invalidate);
    *(_BYTE *)(v2 + 24) = 0;
  }
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  swift_retain();
  swift_release();
  if (*(_BYTE *)(v2 + 25) == 1)
  {
    *(_BYTE *)(v2 + 24) = 1;
    v5 = (void *)objc_opt_self();
    v6 = *(double *)(v2 + 16);
    v10[4] = sub_22F8917B8;
    v10[5] = v2;
    v10[0] = MEMORY[0x24BDAC760];
    v10[1] = 1107296256;
    v10[2] = sub_22F8736DC;
    v10[3] = &block_descriptor_6;
    v7 = _Block_copy(v10);
    swift_retain();
    swift_release();
    v8 = objc_msgSend(v5, sel_scheduledTimerWithTimeInterval_repeats_block_, 1, v7, v6);
    _Block_release(v7);
    v9 = *(void **)(v2 + 48);
    *(_QWORD *)(v2 + 48) = v8;

  }
}

uint64_t sub_22F891734()
{
  uint64_t v0;

  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for GestureTimer()
{
  return objc_opt_self();
}

uint64_t sub_22F891780@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for GestureTimer();
  result = sub_22F98DB70();
  *a1 = result;
  return result;
}

uint64_t sub_22F8917B8()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(v0 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t destroy for PINPromptView()
{
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for PINPromptView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v3;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for PINPromptView(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for PINPromptView(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for PINPromptView(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 56))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PINPromptView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PINPromptView()
{
  return &type metadata for PINPromptView;
}

uint64_t sub_22F891A78()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22F891A88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t result;
  _BYTE v17[16];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20340);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (uint64_t *)&v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20348);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *v6 = sub_22F98EA88();
  v6[1] = v11;
  v12 = (char *)v6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255E20350) + 44);
  *(_QWORD *)v12 = sub_22F98E128();
  *((_QWORD *)v12 + 1) = 0;
  v12[16] = 1;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20358);
  sub_22F891CEC(v2, &v12[*(int *)(v13 + 44)]);
  if (*(_QWORD *)v2)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_22F98DBA0();
    swift_release();
    swift_release();
    swift_release();
    v17[14] = v17[15];
    v14 = swift_allocObject();
    v15 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)(v14 + 16) = *(_OWORD *)v2;
    *(_OWORD *)(v14 + 32) = v15;
    *(_OWORD *)(v14 + 48) = *(_OWORD *)(v2 + 32);
    *(_QWORD *)(v14 + 64) = *(_QWORD *)(v2 + 48);
    sub_22F8937EC(v2);
    sub_22F87AA84(&qword_255E20360, &qword_255E20340, MEMORY[0x24BDF4750]);
    sub_22F87117C();
    sub_22F98E794();
    swift_release();
    sub_22F87AC20((uint64_t)v6, &qword_255E20340);
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v8 + 32))(a1, v10, v7);
  }
  else
  {
    type metadata accessor for PINViewModel();
    sub_22F862548((unint64_t *)&qword_255E20110, (uint64_t (*)(uint64_t))type metadata accessor for PINViewModel, (uint64_t)&unk_22F991FD4);
    result = sub_22F98DF54();
    __break(1u);
  }
  return result;
}

uint64_t sub_22F891CEC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, _QWORD, uint64_t);
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  void (*v60)(char *, char *, uint64_t);
  char *v61;
  char *v62;
  void (*v63)(char *, char *, uint64_t);
  uint64_t v64;
  void (*v65)(char *, uint64_t);
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(char *, uint64_t);
  double v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  double v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  void (*v111)(char *, char *, uint64_t);
  char *v112;
  uint64_t v113;
  void (*v114)(char *, uint64_t);
  uint64_t result;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  char *v150;
  char *v151;
  char *v152;
  int *v153;
  char *v154;
  _QWORD *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  __int128 v169;

  v148 = a2;
  v129 = sub_22F98DEE8();
  v122 = *(_QWORD *)(v129 - 8);
  MEMORY[0x24BDAC7A8](v129);
  v121 = (char *)&v117 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = sub_22F98DE40();
  v119 = *(_QWORD *)(v125 - 8);
  MEMORY[0x24BDAC7A8](v125);
  v118 = (char *)&v117 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20368);
  v127 = *(_QWORD *)(v128 - 8);
  v5 = MEMORY[0x24BDAC7A8](v128);
  v120 = (char *)&v117 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v124 = (char *)&v117 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20370);
  MEMORY[0x24BDAC7A8](v8);
  v160 = (char *)&v117 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20378);
  MEMORY[0x24BDAC7A8](v10);
  v142 = (uint64_t)&v117 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20380);
  MEMORY[0x24BDAC7A8](v117);
  v126 = (uint64_t)&v117 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20388);
  v13 = MEMORY[0x24BDAC7A8](v146);
  v123 = (uint64_t)&v117 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v130 = (uint64_t)&v117 - v15;
  v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20390);
  MEMORY[0x24BDAC7A8](v144);
  v145 = (uint64_t)&v117 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = sub_22F98E320();
  v136 = *(_QWORD *)(v138 - 8);
  MEMORY[0x24BDAC7A8](v138);
  v135 = (char *)&v117 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20398);
  v132 = *(_QWORD *)(v134 - 8);
  MEMORY[0x24BDAC7A8](v134);
  v131 = (char *)&v117 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E203A0);
  v139 = *(_QWORD *)(v140 - 8);
  MEMORY[0x24BDAC7A8](v140);
  v137 = (char *)&v117 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E203A8);
  v20 = MEMORY[0x24BDAC7A8](v143);
  v133 = (uint64_t)&v117 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v141 = (uint64_t)&v117 - v22;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E203B0);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v150 = (char *)&v117 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v149 = (uint64_t)&v117 - v26;
  v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E203B8);
  v27 = MEMORY[0x24BDAC7A8](v158);
  v152 = (char *)&v117 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  v156 = (char *)&v117 - v29;
  v30 = sub_22F98DE70();
  v31 = *(_QWORD *)(v30 - 8);
  v32 = MEMORY[0x24BDAC7A8](v30);
  v161 = (char *)&v117 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v32);
  v35 = (char *)&v117 - v34;
  v159 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E203C0);
  v36 = MEMORY[0x24BDAC7A8](v159);
  v151 = (char *)&v117 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v36);
  v157 = (uint64_t)&v117 - v38;
  v39 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255E203C8);
  MEMORY[0x24BDAC7A8](v39);
  v41 = (char *)&v117 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E203D0);
  v43 = *(_QWORD *)(v42 - 8);
  v163 = v42;
  v164 = v43;
  v44 = MEMORY[0x24BDAC7A8](v42);
  v154 = (char *)&v117 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v44);
  v162 = (char *)&v117 - v46;
  v169 = *(_OWORD *)(a1 + 40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3B0);
  sub_22F98E914();
  v47 = v165;
  v48 = v166;
  v49 = v167;
  v50 = (uint64_t *)&v41[v39[16]];
  *(_QWORD *)&v169 = 0;
  sub_22F98E8F0();
  v51 = v166;
  *v50 = v165;
  v50[1] = v51;
  v155 = (_QWORD *)a1;
  sub_22F892E50((_QWORD *)a1);
  sub_22F8931CC((uint64_t)&v41[v39[13]]);
  *(_QWORD *)&v41[v39[14]] = 0x4014000000000000;
  *(_QWORD *)&v41[v39[15]] = 0x3FD3333333333333;
  v153 = v39;
  v52 = &v41[v39[17]];
  *(_QWORD *)v52 = v47;
  *((_QWORD *)v52 + 1) = v48;
  v52[16] = v49;
  v53 = v31;
  v54 = *(void (**)(char *, _QWORD, uint64_t))(v31 + 104);
  v55 = v161;
  v54(v35, *MEMORY[0x24BDECF00], v30);
  v54(v55, *MEMORY[0x24BDECEA0], v30);
  sub_22F862548(&qword_255E203D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDECF70]);
  if ((sub_22F98ED58() & 1) == 0)
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v56 = v158;
  v57 = v156;
  v58 = &v156[*(int *)(v158 + 48)];
  v147 = v41;
  v59 = v53;
  v60 = *(void (**)(char *, char *, uint64_t))(v53 + 32);
  v60(v156, v35, v30);
  v60(v58, v55, v30);
  v61 = v152;
  v62 = &v152[*(int *)(v56 + 48)];
  v63 = *(void (**)(char *, char *, uint64_t))(v53 + 16);
  v63(v152, v57, v30);
  v63(v62, v58, v30);
  v64 = (uint64_t)v151;
  v60(v151, v61, v30);
  v65 = *(void (**)(char *, uint64_t))(v59 + 8);
  v65(v62, v30);
  v66 = &v61[*(int *)(v56 + 48)];
  v60(v61, v57, v30);
  v60(v66, v58, v30);
  v60((char *)(v64 + *(int *)(v159 + 36)), v66, v30);
  v65(v61, v30);
  v67 = v157;
  sub_22F87B2B4(v64, v157, &qword_255E203C0);
  sub_22F87AA84(&qword_255E203E0, &qword_255E203C8, (uint64_t)&unk_22F998CD8);
  sub_22F87AA84(&qword_255E203E8, &qword_255E203C0, MEMORY[0x24BEE08F8]);
  v68 = v154;
  v69 = (uint64_t)v147;
  sub_22F98E668();
  sub_22F87AC20(v67, &qword_255E203C0);
  sub_22F87AC20(v69, &qword_255E203C8);
  v70 = v163;
  v71 = v162;
  (*(void (**)(char *, char *, uint64_t))(v164 + 32))(v162, v68, v163);
  if (*v155)
  {
    v72 = v68;
    v73 = v71;
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_22F98DBA0();
    swift_release();
    swift_release();
    swift_release();
    v74 = (uint64_t)v160;
    if ((v165 & 1) != 0)
    {
      v98 = v131;
      sub_22F98DCA8();
      v99 = v135;
      sub_22F98E314();
      sub_22F87AA84(&qword_255E20490, &qword_255E20398, MEMORY[0x24BDEBC00]);
      sub_22F862548(&qword_255E20498, (uint64_t (*)(uint64_t))MEMORY[0x24BDF07C8], MEMORY[0x24BDF07A8]);
      v100 = v137;
      v101 = v134;
      v102 = v138;
      sub_22F98E5F0();
      (*(void (**)(char *, uint64_t))(v136 + 8))(v99, v102);
      (*(void (**)(char *, uint64_t))(v132 + 8))(v98, v101);
      v103 = sub_22F98EA88();
      v104 = v133;
      v106 = sub_22F8F8E80(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, v133, 0.0, 1, 23.0, 0, v103, v105);
      (*(void (**)(char *, uint64_t, double))(v139 + 8))(v100, v140, v106);
      v94 = &qword_255E203A8;
      v107 = v141;
      sub_22F87B2B4(v104, v141, &qword_255E203A8);
      sub_22F87ABDC(v107, v145, &qword_255E203A8);
      swift_storeEnumTagMultiPayload();
      sub_22F893BAC();
      sub_22F87E2D8(&qword_255E204A0, &qword_255E20388, (uint64_t (*)(void))sub_22F893C9C, MEMORY[0x24BDECC38]);
      v96 = (uint64_t)v150;
      sub_22F98E1E8();
      v97 = v107;
LABEL_11:
      sub_22F87AC20(v97, v94);
      v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E203F0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 56))(v96, 0, 1, v108);
      v109 = v149;
      sub_22F87B2B4(v96, v149, &qword_255E203B0);
LABEL_12:
      v110 = v164;
      v111 = *(void (**)(char *, char *, uint64_t))(v164 + 16);
      v111(v72, v73, v70);
      sub_22F87ABDC(v109, v96, &qword_255E203B0);
      v112 = v148;
      v111(v148, v72, v70);
      v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E203F8);
      sub_22F87ABDC(v96, (uint64_t)&v112[*(int *)(v113 + 48)], &qword_255E203B0);
      sub_22F87AC20(v109, &qword_255E203B0);
      v114 = *(void (**)(char *, uint64_t))(v110 + 8);
      v114(v73, v70);
      sub_22F87AC20(v96, &qword_255E203B0);
      return ((uint64_t (*)(char *, uint64_t))v114)(v72, v70);
    }
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_22F98DBA0();
    swift_release();
    swift_release();
    swift_release();
    if (v165 < 1)
    {
      v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E203F0);
      v109 = v149;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v116 - 8) + 56))(v149, 1, 1, v116);
      v96 = (uint64_t)v150;
      goto LABEL_12;
    }
    *(_QWORD *)v74 = sub_22F98E0B0();
    *(_QWORD *)(v74 + 8) = 0x4014000000000000;
    *(_BYTE *)(v74 + 16) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E20400);
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_22F98DBA0();
    swift_release();
    swift_release();
    swift_release();
    v75 = v165;
    if ((v165 & 0x8000000000000000) == 0)
    {
      v165 = 0;
      v166 = v75;
      swift_getKeyPath();
      __swift_instantiateConcreteTypeFromMangledName(&qword_255E20408);
      __swift_instantiateConcreteTypeFromMangledName(&qword_255E20410);
      sub_22F893844();
      sub_22F8938F4();
      sub_22F98E9EC();
      v76 = sub_22F98EA88();
      sub_22F8F8ED8(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, v142, 0.0, 1, 23.0, 0, v76, v77);
      sub_22F87AC20(v74, &qword_255E20370);
      v78 = v118;
      sub_22F98DE34();
      sub_22F98EB6C();
      v79 = v121;
      sub_22F98DEF4();
      v80 = sub_22F862548(&qword_255E1FFB0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC860], MEMORY[0x24BDEC858]);
      v81 = sub_22F862548(&qword_255E20480, (uint64_t (*)(uint64_t))MEMORY[0x24BDED3E0], MEMORY[0x24BDED3D8]);
      v82 = v124;
      v83 = v72;
      v84 = v125;
      v85 = v129;
      sub_22F98DC0C();
      (*(void (**)(char *, uint64_t))(v122 + 8))(v79, v85);
      (*(void (**)(char *, uint64_t))(v119 + 8))(v78, v84);
      v86 = v127;
      v87 = v128;
      (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v120, v82, v128);
      v165 = v84;
      v166 = v85;
      v72 = v83;
      v167 = v80;
      v168 = v81;
      swift_getOpaqueTypeConformance2();
      v88 = sub_22F98DD80();
      v89 = v142;
      v90 = v126;
      sub_22F87ABDC(v142, v126, &qword_255E20378);
      *(_QWORD *)(v90 + *(int *)(v117 + 36)) = v88;
      v91 = *(void (**)(char *, uint64_t))(v86 + 8);
      v73 = v162;
      v91(v82, v87);
      v70 = v163;
      sub_22F87AC20(v89, &qword_255E20378);
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      sub_22F98DBA0();
      swift_release();
      swift_release();
      swift_release();
      if (v165 == 1)
        v92 = 100.0;
      else
        v92 = 0.0;
      v93 = v123;
      sub_22F87ABDC(v90, v123, &qword_255E20380);
      *(double *)(v93 + *(int *)(v146 + 36)) = v92;
      sub_22F87AC20(v90, &qword_255E20380);
      v94 = &qword_255E20388;
      v95 = v130;
      sub_22F87B2B4(v93, v130, &qword_255E20388);
      sub_22F87ABDC(v95, v145, &qword_255E20388);
      swift_storeEnumTagMultiPayload();
      sub_22F893BAC();
      sub_22F87E2D8(&qword_255E204A0, &qword_255E20388, (uint64_t (*)(void))sub_22F893C9C, MEMORY[0x24BDECC38]);
      v96 = (uint64_t)v150;
      sub_22F98E1E8();
      v97 = v95;
      goto LABEL_11;
    }
    goto LABEL_15;
  }
LABEL_16:
  type metadata accessor for PINViewModel();
  sub_22F862548((unint64_t *)&qword_255E20110, (uint64_t (*)(uint64_t))type metadata accessor for PINViewModel, (uint64_t)&unk_22F991FD4);
  result = sub_22F98DF54();
  __break(1u);
  return result;
}

uint64_t sub_22F892E50(_QWORD *a1)
{
  uint64_t v2;
  uint64_t result;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E204E8);
  MEMORY[0x24BDAC7A8](v2);
  if (*a1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_22F98DBA0();
    swift_release();
    swift_release();
    swift_release();
    __asm { BR              X10 }
  }
  type metadata accessor for PINViewModel();
  sub_22F862548((unint64_t *)&qword_255E20110, (uint64_t (*)(uint64_t))type metadata accessor for PINViewModel, (uint64_t)&unk_22F991FD4);
  result = sub_22F98DF54();
  __break(1u);
  return result;
}

uint64_t sub_22F8931CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v17 = a1;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E204C0);
  v1 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E204C8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_22F98E86C();
  v8 = sub_22F98E4F4();
  KeyPath = swift_getKeyPath();
  v18 = v7;
  v19 = KeyPath;
  v20 = v8;
  sub_22F98E4D0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E204D0);
  sub_22F893B2C(&qword_255E204D8, &qword_255E204D0, &qword_255E1F0F8, &qword_255E1F100);
  sub_22F98E614();
  swift_release();
  swift_release();
  swift_release();
  v10 = sub_22F98E7F4();
  v11 = swift_getKeyPath();
  v12 = v16;
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v6, v3, v16);
  v13 = (uint64_t *)&v6[*(int *)(v4 + 36)];
  *v13 = v11;
  v13[1] = v10;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v12);
  sub_22F893E20();
  sub_22F98E704();
  return sub_22F87AC20((uint64_t)v6, &qword_255E204C8);
}

uint64_t sub_22F8933C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[2];
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int16 v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  _OWORD v46[10];
  __int128 v47;

  v18[1] = a1;
  v1 = sub_22F98DEE8();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v18 - v6;
  v8 = sub_22F98E878();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22F98E86C();
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BDF3FD0], v8);
  v12 = sub_22F98E890();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (qword_255E1DBE0 != -1)
    swift_once();
  v13 = qword_255E29778;
  KeyPath = swift_getKeyPath();
  swift_retain();
  sub_22F98EB6C();
  sub_22F98DEF4();
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, v7, v1);
  sub_22F862548(&qword_255E20480, (uint64_t (*)(uint64_t))MEMORY[0x24BDED3E0], MEMORY[0x24BDED3D8]);
  v15 = sub_22F98DD80();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
  v30 = v12;
  v31 = KeyPath;
  v32 = v13;
  v33 = 0;
  v34 = 1;
  v35 = v15;
  sub_22F98EA88();
  sub_22F8F8F3C(10.0, 0, 0.0, 1, 44.0, 0, 0.0, 1, &v36, 0.0, 1, 20.0, 0);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v16 = swift_getKeyPath();
  v46[6] = v42;
  v46[7] = v43;
  v46[8] = v44;
  v46[9] = v45;
  v46[2] = v38;
  v46[3] = v39;
  v46[4] = v40;
  v46[5] = v41;
  v46[0] = v36;
  v46[1] = v37;
  *(_QWORD *)&v47 = v16;
  *((_QWORD *)&v47 + 1) = 0x3FD3333333333333;
  v27 = v44;
  v28 = v45;
  v29 = v47;
  v23 = v40;
  v24 = v41;
  v25 = v42;
  v26 = v43;
  v19 = v36;
  v20 = v37;
  v21 = v38;
  v22 = v39;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E20438);
  sub_22F893978();
  sub_22F98E704();
  return sub_22F893DB4((uint64_t)v46);
}

uint64_t sub_22F893710()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3B0);
  return sub_22F98E908();
}

uint64_t sub_22F893768@<X0>(uint64_t a1@<X8>)
{
  return sub_22F891A88(a1);
}

uint64_t sub_22F8937B0()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22F8937E4()
{
  return sub_22F893710();
}

uint64_t sub_22F8937EC(uint64_t a1)
{
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

unint64_t sub_22F893844()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_255E20418;
  if (!qword_255E20418)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20408);
    v2 = sub_22F8938B0();
    v3[0] = MEMORY[0x24BEE17A8];
    v3[1] = v2;
    result = MEMORY[0x2348A6784](MEMORY[0x24BEE1BD0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_255E20418);
  }
  return result;
}

unint64_t sub_22F8938B0()
{
  unint64_t result;

  result = qword_255E20420;
  if (!qword_255E20420)
  {
    result = MEMORY[0x2348A6784](MEMORY[0x24BEE1790], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_255E20420);
  }
  return result;
}

unint64_t sub_22F8938F4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E20428;
  if (!qword_255E20428)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20410);
    v2[0] = sub_22F893978();
    v2[1] = sub_22F862548((unint64_t *)&qword_255E1F478, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E20428);
  }
  return result;
}

unint64_t sub_22F893978()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E20430;
  if (!qword_255E20430)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20438);
    v2[0] = sub_22F87E2D8(&qword_255E20440, &qword_255E20448, (uint64_t (*)(void))sub_22F893A1C, MEMORY[0x24BDEDBB8]);
    v2[1] = sub_22F87AA84(&qword_255E1FA18, &qword_255E1FA20, MEMORY[0x24BDF1028]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E20430);
  }
  return result;
}

unint64_t sub_22F893A1C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E20450;
  if (!qword_255E20450)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20458);
    v2[0] = sub_22F893AA0();
    v2[1] = sub_22F87AA84(&qword_255E1F118, &qword_255E1F120, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E20450);
  }
  return result;
}

unint64_t sub_22F893AA0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E20460;
  if (!qword_255E20460)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20468);
    v2[0] = sub_22F893B2C(&qword_255E20470, &qword_255E20478, &qword_255E1F108, &qword_255E1F110);
    v2[1] = MEMORY[0x24BDEEC40];
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E20460);
  }
  return result;
}

uint64_t sub_22F893B2C(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = sub_22F87AA84(a3, a4, MEMORY[0x24BDF1028]);
    v10[0] = MEMORY[0x24BDF40E8];
    v10[1] = v9;
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v8, v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22F893BAC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  _QWORD v5[6];

  result = qword_255E20488;
  if (!qword_255E20488)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E203A8);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20398);
    v3 = sub_22F98E320();
    v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF07C8];
    v5[2] = v2;
    v5[3] = v3;
    v5[4] = sub_22F87AA84(&qword_255E20490, &qword_255E20398, MEMORY[0x24BDEBC00]);
    v5[5] = sub_22F862548(&qword_255E20498, v4, MEMORY[0x24BDF07A8]);
    v5[0] = swift_getOpaqueTypeConformance2();
    v5[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_255E20488);
  }
  return result;
}

unint64_t sub_22F893C9C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E204A8;
  if (!qword_255E204A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20380);
    v2[0] = sub_22F893D20();
    v2[1] = sub_22F87AA84(&qword_255E1F118, &qword_255E1F120, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E204A8);
  }
  return result;
}

unint64_t sub_22F893D20()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E204B0;
  if (!qword_255E204B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20378);
    v2[0] = sub_22F87AA84(&qword_255E204B8, &qword_255E20370, MEMORY[0x24BDF4498]);
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E204B0);
  }
  return result;
}

uint64_t sub_22F893DB4(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

unint64_t sub_22F893E20()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_255E204E0;
  if (!qword_255E204E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E204C8);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E204D0);
    v2[3] = sub_22F893B2C(&qword_255E204D8, &qword_255E204D0, &qword_255E1F0F8, &qword_255E1F100);
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_22F87AA84(&qword_255E1F108, &qword_255E1F110, MEMORY[0x24BDF1028]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E204E0);
  }
  return result;
}

uint64_t sub_22F893EF4()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20340);
  sub_22F87AA84(&qword_255E20360, &qword_255E20340, MEMORY[0x24BDF4750]);
  sub_22F87117C();
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for PINKeyboardConfiguration()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s19ContactlessReaderUI32TransactionAdditionalContextViewVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TransactionAdditionalContextView(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for TransactionAdditionalContextView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for TransactionAdditionalContextView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TransactionAdditionalContextView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TransactionAdditionalContextView()
{
  return &type metadata for TransactionAdditionalContextView;
}

uint64_t sub_22F8940E8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22F8940F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v39[2];
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v40 = a3;
  v39[0] = a1;
  v39[1] = a2;
  v43 = a4;
  v42 = sub_22F98DF00();
  MEMORY[0x24BDAC7A8](v42);
  v5 = (_OWORD *)((char *)v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v41 = sub_22F98EA4C();
  v6 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v8 = (char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E204F0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E204F8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20500);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20508);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v11 = sub_22F98E128();
  *((_QWORD *)v11 + 1) = 0;
  v11[16] = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E20510);
  sub_22F89448C();
  v21 = sub_22F98EA88();
  sub_22F8F912C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v14, 0.0, 1, 0.0, 1, v21, v22);
  sub_22F87AC20((uint64_t)v11, &qword_255E204F0);
  LOBYTE(v11) = sub_22F98E41C();
  sub_22F87ABDC((uint64_t)v14, (uint64_t)v17, &qword_255E204F8);
  v23 = &v17[*(int *)(v15 + 36)];
  *v23 = (char)v11;
  __asm { FMOV            V0.2D, #16.0 }
  *(_OWORD *)(v23 + 8) = _Q0;
  *(_OWORD *)(v23 + 24) = _Q0;
  v23[40] = 0;
  sub_22F87AC20((uint64_t)v14, &qword_255E204F8);
  sub_22F98EA28();
  LOBYTE(v15) = sub_22F98E41C();
  v29 = &v20[*(int *)(v18 + 36)];
  v30 = v41;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v29, v8, v41);
  v29[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255E1F8C8) + 36)] = v15;
  sub_22F87ABDC((uint64_t)v17, (uint64_t)v20, &qword_255E20500);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v30);
  sub_22F87AC20((uint64_t)v17, &qword_255E20500);
  v31 = (char *)v5 + *(int *)(v42 + 20);
  v32 = *MEMORY[0x24BDEEB68];
  v33 = sub_22F98E0EC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v31, v32, v33);
  __asm { FMOV            V0.2D, #18.0 }
  *v5 = _Q0;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20518);
  v36 = v43;
  v37 = v43 + *(int *)(v35 + 36);
  sub_22F8946E0((uint64_t)v5, v37);
  *(_WORD *)(v37 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255E1F8D0) + 36)) = 256;
  sub_22F87ABDC((uint64_t)v20, v36, &qword_255E20508);
  sub_22F889FAC((uint64_t)v5);
  return sub_22F87AC20((uint64_t)v20, &qword_255E20508);
}

uint64_t sub_22F89448C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;

  sub_22F863BF8();
  swift_bridgeObjectRetain();
  v0 = sub_22F98E5CC();
  v2 = v1;
  v4 = v3 & 1;
  sub_22F98E47C();
  v5 = sub_22F98E5A8();
  v7 = v6;
  v9 = v8;
  swift_release();
  sub_22F87E294(v0, v2, v4);
  swift_bridgeObjectRelease();
  sub_22F98E4AC();
  v10 = sub_22F98E578();
  v12 = v11;
  v14 = v13 & 1;
  sub_22F87E294(v5, v7, v9 & 1);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98E8F0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E20520);
  sub_22F894760(&qword_255E20528, &qword_255E20520, sub_22F89473C, (uint64_t (*)(void))sub_22F8949A0);
  sub_22F98E704();
  sub_22F87E294(v10, v12, v14);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_22F8946D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_22F8940F8(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(unsigned __int8 *)(v1 + 16), a1);
}

uint64_t sub_22F8946E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_22F98DF00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22F89473C()
{
  return sub_22F894760(&qword_255E20530, &qword_255E20538, (uint64_t (*)(void))sub_22F8947D0, (uint64_t (*)(void))sub_22F89495C);
}

uint64_t sub_22F894760(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = a3();
    v9[1] = a4();
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22F8947D0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E20540;
  if (!qword_255E20540)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20548);
    v2[0] = sub_22F894854();
    v2[1] = sub_22F87AA84(&qword_255E1FA18, &qword_255E1FA20, MEMORY[0x24BDF1028]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E20540);
  }
  return result;
}

unint64_t sub_22F894854()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E20550;
  if (!qword_255E20550)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20558);
    v2[0] = sub_22F8948D8();
    v2[1] = sub_22F87AA84(&qword_255E1FA28, &qword_255E1FA30, MEMORY[0x24BDF1028]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E20550);
  }
  return result;
}

unint64_t sub_22F8948D8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255E20560;
  if (!qword_255E20560)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20568);
    v2 = sub_22F87AA84(&qword_255E1F4E0, &qword_255E1F4E8, MEMORY[0x24BDF1028]);
    v3[0] = MEMORY[0x24BDF1F80];
    v3[1] = v2;
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_255E20560);
  }
  return result;
}

unint64_t sub_22F89495C()
{
  unint64_t result;

  result = qword_255E20570;
  if (!qword_255E20570)
  {
    result = MEMORY[0x2348A6784](&unk_22F99A974, &type metadata for LimitSizeRange);
    atomic_store(result, (unint64_t *)&qword_255E20570);
  }
  return result;
}

unint64_t sub_22F8949A0()
{
  unint64_t result;

  result = qword_255E20578;
  if (!qword_255E20578)
  {
    result = MEMORY[0x2348A6784](&unk_22F99ABD4, &type metadata for AnimateInversion);
    atomic_store(result, (unint64_t *)&qword_255E20578);
  }
  return result;
}

unint64_t sub_22F8949E8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E20580;
  if (!qword_255E20580)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20518);
    v2[0] = sub_22F894A6C();
    v2[1] = sub_22F87AA84(&qword_255E1F918, &qword_255E1F8D0, MEMORY[0x24BDEB950]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E20580);
  }
  return result;
}

unint64_t sub_22F894A6C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E20588;
  if (!qword_255E20588)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20508);
    v2[0] = sub_22F894AF0();
    v2[1] = sub_22F87AA84(&qword_255E1F910, &qword_255E1F8C8, MEMORY[0x24BDF06D0]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E20588);
  }
  return result;
}

unint64_t sub_22F894AF0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E20590;
  if (!qword_255E20590)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20500);
    v2[0] = sub_22F894B5C();
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E20590);
  }
  return result;
}

unint64_t sub_22F894B5C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E20598;
  if (!qword_255E20598)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E204F8);
    v2[0] = sub_22F87AA84((unint64_t *)&unk_255E205A0, &qword_255E204F0, MEMORY[0x24BDF4700]);
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E20598);
  }
  return result;
}

uint64_t sub_22F894BE0()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  return v1;
}

id sub_22F894C50()
{
  void *v0;
  objc_super v2;

  sub_22F894D90(0);
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InterruptionMonitor();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_22F894D4C()
{
  return type metadata accessor for InterruptionMonitor();
}

uint64_t type metadata accessor for InterruptionMonitor()
{
  uint64_t result;

  result = qword_255E205F8;
  if (!qword_255E205F8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_22F894D90(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DAF8 != -1)
    swift_once();
  v7 = __swift_project_value_buffer(v4, (uint64_t)qword_255E29598);
  sub_22F87BC08(v7, (uint64_t)v6);
  v8 = sub_22F98DAA4();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
  {
    sub_22F87BC50((uint64_t)v6);
  }
  else
  {
    v14 = 0x6C6C61437065656BLL;
    v15 = 0xEA0000000000203ALL;
    sub_22F98EE9C();
    swift_bridgeObjectRelease();
    sub_22F863858(v2, 0xD000000000000018, 0x800000022F99EC10, v14, v15);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  v10 = OBJC_IVAR____TtC19ContactlessReaderUI19InterruptionMonitor_hardwareButtonConsumer;
  v11 = *(void **)(v2 + OBJC_IVAR____TtC19ContactlessReaderUI19InterruptionMonitor_hardwareButtonConsumer);
  if (v11)
  {
    objc_msgSend(v11, sel_invalidate);
    v12 = *(void **)(v2 + v10);
  }
  else
  {
    v12 = 0;
  }
  *(_QWORD *)(v2 + v10) = 0;

  if ((a1 & 1) == 0)
  {
    v13 = *(void **)(v2 + OBJC_IVAR____TtC19ContactlessReaderUI19InterruptionMonitor_callObserver);
    *(_QWORD *)(v2 + OBJC_IVAR____TtC19ContactlessReaderUI19InterruptionMonitor_callObserver) = 0;

  }
}

uint64_t sub_22F894F68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB7898]), sel_init);
  v5 = OBJC_IVAR____TtC19ContactlessReaderUI19InterruptionMonitor_callObserver;
  v6 = *(void **)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI19InterruptionMonitor_callObserver);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI19InterruptionMonitor_callObserver) = v4;

  v7 = *(void **)(v0 + v5);
  if (v7)
    objc_msgSend(v7, sel_setDelegate_queue_, v0, 0);
  if (qword_255E1DAF8 != -1)
    swift_once();
  v8 = __swift_project_value_buffer(v1, (uint64_t)qword_255E29598);
  sub_22F87BC08(v8, (uint64_t)v3);
  v9 = sub_22F98DAA4();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v3, 1, v9) == 1)
    return sub_22F87BC50((uint64_t)v3);
  v12 = sub_22F98DA8C();
  v13 = sub_22F98F0A0();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_22F85B000, v12, v13, "Beginning observation of call state", v14, 2u);
    MEMORY[0x2348A6838](v14, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v3, v9);
}

uint64_t sub_22F895110()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v5 = OBJC_IVAR____TtC19ContactlessReaderUI19InterruptionMonitor_hardwareButtonConsumer;
  v6 = *(void **)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI19InterruptionMonitor_hardwareButtonConsumer);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI19InterruptionMonitor_hardwareButtonConsumer) = v4;

  v7 = *(void **)(v0 + v5);
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend(v8, sel_beginConsumingPressesForButtonKind_eventConsumer_priority_, 2, v0, 0);

    swift_unknownObjectRelease();
  }
  if (qword_255E1DAF8 != -1)
    swift_once();
  v10 = __swift_project_value_buffer(v1, (uint64_t)qword_255E29598);
  sub_22F87BC08(v10, (uint64_t)v3);
  v11 = sub_22F98DAA4();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v3, 1, v11) == 1)
    return sub_22F87BC50((uint64_t)v3);
  v14 = sub_22F98DA8C();
  v15 = sub_22F98F0A0();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_22F85B000, v14, v15, "Beginning observation of double lock button press", v16, 2u);
    MEMORY[0x2348A6838](v16, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v3, v11);
}

void sub_22F895310()
{
  unint64_t v0;

  sub_22F895394();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_22F895394()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255E20608)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20610);
    v0 = sub_22F98DBB8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255E20608);
  }
}

uint64_t getEnumTagSinglePayload for InterruptionEvent(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for InterruptionEvent(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_22F895534 + 4 * byte_22F993505[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_22F895568 + 4 * byte_22F993500[v4]))();
}

uint64_t sub_22F895568(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22F895570(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22F895578);
  return result;
}

uint64_t sub_22F895584(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22F89558CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_22F895590(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22F895598(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InterruptionEvent()
{
  return &type metadata for InterruptionEvent;
}

unint64_t sub_22F8955B8()
{
  unint64_t result;

  result = qword_255E206D8;
  if (!qword_255E206D8)
  {
    result = MEMORY[0x2348A6784](&unk_22F9935F4, &type metadata for InterruptionEvent);
    atomic_store(result, (unint64_t *)&qword_255E206D8);
  }
  return result;
}

uint64_t sub_22F8955FC(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  int v23;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  unsigned __int8 v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  id v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  id v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  id v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  char v51;
  char v52;
  char v53;
  char v54;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v48 = (uint64_t)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v48 - v6;
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v48 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v48 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v48 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v48 - v17;
  if (qword_255E1DAF8 != -1)
    swift_once();
  v19 = __swift_project_value_buffer(v2, (uint64_t)qword_255E29598);
  sub_22F87BC08(v19, (uint64_t)v18);
  v20 = sub_22F98DAA4();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v49 = v21;
  if (v23 == 1)
  {
    sub_22F87BC50((uint64_t)v18);
  }
  else
  {
    sub_22F863858((uint64_t)v50, 0xD00000000000001CLL, 0x800000022F99EBF0, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v20);
  }
  if ((objc_msgSend(a1, sel_isOutgoing) & 1) != 0 || objc_msgSend(a1, sel_isOnHold))
  {
    sub_22F87BC08(v19, (uint64_t)v16);
    if (v22(v16, 1, v20) == 1)
    {
      return sub_22F87BC50((uint64_t)v16);
    }
    else
    {
      v25 = sub_22F98DA8C();
      v26 = sub_22F98F0A0();
      if (os_log_type_enabled(v25, v26))
      {
        v27 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v27 = 0;
        _os_log_impl(&dword_22F85B000, v25, v26, "ignore outgoing and onHold", v27, 2u);
        MEMORY[0x2348A6838](v27, -1, -1);
      }

      return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v16, v20);
    }
  }
  else
  {
    v28 = objc_msgSend(a1, sel_hasConnected);
    v29 = objc_msgSend(a1, sel_hasEnded);
    if ((v28 & 1) != 0)
    {
      v30 = v49;
      if (v29)
      {
        sub_22F87BC08(v19, (uint64_t)v7);
        if (v22(v7, 1, v20) == 1)
        {
          sub_22F87BC50((uint64_t)v7);
        }
        else
        {
          v32 = sub_22F98DA8C();
          v33 = sub_22F98F0A0();
          if (os_log_type_enabled(v32, v33))
          {
            v34 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v34 = 0;
            _os_log_impl(&dword_22F85B000, v32, v33, "Call ended", v34, 2u);
            MEMORY[0x2348A6838](v34, -1, -1);
          }

          (*(void (**)(char *, uint64_t))(v30 + 8))(v7, v20);
        }
        swift_getKeyPath();
        swift_getKeyPath();
        v51 = 3;
        v35 = v50;
      }
      else
      {
        v31 = v48;
        sub_22F87BC08(v19, v48);
        if (v22((char *)v31, 1, v20) == 1)
        {
          sub_22F87BC50(v31);
        }
        else
        {
          v40 = sub_22F98DA8C();
          v41 = sub_22F98F0A0();
          if (os_log_type_enabled(v40, v41))
          {
            v42 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v42 = 0;
            _os_log_impl(&dword_22F85B000, v40, v41, "Call going to live voicemail", v42, 2u);
            MEMORY[0x2348A6838](v42, -1, -1);
          }

          (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v31, v20);
        }
        swift_getKeyPath();
        swift_getKeyPath();
        v52 = 2;
        v43 = v50;
      }
    }
    else if (v29)
    {
      sub_22F87BC08(v19, (uint64_t)v13);
      if (v22(v13, 1, v20) == 1)
      {
        sub_22F87BC50((uint64_t)v13);
      }
      else
      {
        v36 = sub_22F98DA8C();
        v37 = sub_22F98F0A0();
        if (os_log_type_enabled(v36, v37))
        {
          v38 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v38 = 0;
          _os_log_impl(&dword_22F85B000, v36, v37, "Incoming call ended", v38, 2u);
          MEMORY[0x2348A6838](v38, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v49 + 8))(v13, v20);
      }
      swift_getKeyPath();
      swift_getKeyPath();
      v53 = 1;
      v39 = v50;
    }
    else
    {
      sub_22F87BC08(v19, (uint64_t)v10);
      if (v22(v10, 1, v20) == 1)
      {
        sub_22F87BC50((uint64_t)v10);
      }
      else
      {
        v44 = sub_22F98DA8C();
        v45 = sub_22F98F0A0();
        if (os_log_type_enabled(v44, v45))
        {
          v46 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v46 = 0;
          _os_log_impl(&dword_22F85B000, v44, v45, "Incoming call", v46, 2u);
          MEMORY[0x2348A6838](v46, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v49 + 8))(v10, v20);
      }
      swift_getKeyPath();
      swift_getKeyPath();
      v54 = 0;
      v47 = v50;
    }
    return sub_22F98DBAC();
  }
}

uint64_t sub_22F895C9C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  result = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 == 2)
  {
    if (qword_255E1DAF8 != -1)
      swift_once();
    v6 = __swift_project_value_buffer(v2, (uint64_t)qword_255E29598);
    sub_22F87BC08(v6, (uint64_t)v5);
    v7 = sub_22F98DAA4();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) == 1)
    {
      return sub_22F87BC50((uint64_t)v5);
    }
    else
    {
      v9 = sub_22F98DA8C();
      v10 = sub_22F98F07C();
      if (os_log_type_enabled(v9, v10))
      {
        v11 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v11 = 0;
        _os_log_impl(&dword_22F85B000, v9, v10, "Ignoring lock button double press", v11, 2u);
        MEMORY[0x2348A6838](v11, -1, -1);
      }

      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v5, v7);
    }
  }
  return result;
}

uint64_t sub_22F895E0C(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v3 = sub_22F98F28C();
    v5 = v4;
    v6 = sub_22F98F2E0();
    v8 = MEMORY[0x2348A5E78](v3, v5, v6, v7);
    swift_bridgeObjectRelease();
    if ((v8 & 1) != 0)
    {
LABEL_3:
      sub_22F898DB8(v3, v5, v2 != 0);
      return 0;
    }
LABEL_7:
    sub_22F897C88(v3, v5, v2 != 0, a1);
    v9 = v13;
    sub_22F898DB8(v3, v5, v2 != 0);
    return v9;
  }
  result = sub_22F897EF0(a1);
  if ((v12 & 1) == 0)
  {
    v5 = v11;
    if (*(_DWORD *)(a1 + 36) == (_DWORD)v11)
    {
      v3 = result;
      if (result == 1 << *(_BYTE *)(a1 + 32))
        goto LABEL_3;
      goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_22F895F18(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  char v4;
  uint64_t v5;
  char *v6;
  objc_class *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  _UNKNOWN **v14;
  uint64_t v15;
  uint64_t result;
  __int128 v17;
  objc_super v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;

  v2 = (_QWORD *)v1;
  v4 = *(_BYTE *)(v1 + 96);
  if ((v4 & 1) != 0)
    v5 = *(_QWORD *)(v1 + 88);
  else
    v5 = 0;
  v6 = *(char **)(v1 + 80);
  *(_QWORD *)&v6[OBJC_IVAR____TtC19ContactlessReaderUI13GestureUIView_drawNumberRecognizer] = v5;
  swift_retain();
  swift_release();
  v19 = *(_OWORD *)(v1 + 32);
  v20 = *(_QWORD *)(v1 + 48);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E20800);
  sub_22F98E9A4();
  v7 = (objc_class *)type metadata accessor for ContinuousGestureRecognizer();
  v17 = v22;
  v8 = *(_QWORD *)(v1 + 88);
  v9 = (char *)objc_allocWithZone(v7);
  type metadata accessor for TouchRecognizer();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v21;
  *(_OWORD *)(v10 + 24) = v17;
  *(_QWORD *)&v9[OBJC_IVAR____TtC19ContactlessReaderUI27ContinuousGestureRecognizer_touchRecognizer] = v10;
  *(_QWORD *)&v9[OBJC_IVAR____TtC19ContactlessReaderUI27ContinuousGestureRecognizer_drawNumberRecognizer] = v8;
  *(_QWORD *)&v9[OBJC_IVAR____TtC19ContactlessReaderUI27ContinuousGestureRecognizer_gestureView] = v6;
  v18.receiver = v9;
  v18.super_class = v7;
  swift_retain();
  v11 = v6;
  v12 = objc_msgSendSuper2(&v18, sel_initWithTarget_action_, 0, 0);
  objc_msgSend(v12, sel_setDelegate_, a1);
  objc_msgSend(v11, sel_addGestureRecognizer_, v12);
  if (*v2)
  {
    if ((v4 & 1) != 0)
      v13 = (uint64_t)v11;
    else
      v13 = 0;
    if ((v4 & 1) != 0)
      v14 = &off_24FD1F628;
    else
      v14 = 0;
    v15 = swift_retain();
    sub_22F8979F8(v15, v13, (uint64_t)v14, v8);

    return swift_release();
  }
  else
  {
    type metadata accessor for PINViewModel();
    sub_22F898A5C();
    result = sub_22F98DF54();
    __break(1u);
  }
  return result;
}

uint64_t sub_22F8960DC(char a1, void *a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  void (*v9)(_BYTE *);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  void *v14;
  id v15;
  _BYTE v16[8];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtCV19ContactlessReaderUI11GestureView11Coordinator_parent);
  v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtCV19ContactlessReaderUI11GestureView11Coordinator_parent + 88);
  swift_beginAccess();
  v7 = *(_QWORD *)(*(_QWORD *)(v6 + 40) + 16);
  swift_retain();
  sub_22F8CC620();
  swift_release();
  if (v7 < 2 || a1 != 0)
  {
    v9 = (void (*)(_BYTE *))v5[8];
    v10 = v5[10];
    swift_retain();
    objc_msgSend(a2, sel_locationInView_, v10);
    v16[0] = a1;
    v17 = 0;
    v18 = v11;
    v19 = v12;
    v20 = 3;
    v21 = 0;
    v22 = 0;
    v9(v16);
    return swift_release();
  }
  if (*v5)
  {
    swift_retain();
    sub_22F875D14();
    return swift_release();
  }
  v14 = (void *)v5[10];
  type metadata accessor for PINViewModel();
  sub_22F898A5C();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  v15 = v14;
  swift_retain();
  result = sub_22F98DF54();
  __break(1u);
  return result;
}

uint64_t sub_22F896410(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  void (*v4)(char *);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9[8];
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;

  v3 = v1 + OBJC_IVAR____TtCV19ContactlessReaderUI11GestureView11Coordinator_parent;
  swift_retain();
  sub_22F8CC620();
  swift_release();
  v4 = *(void (**)(char *))(v3 + 64);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E20850);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22F991B40;
  swift_retain();
  *(_QWORD *)(v5 + 32) = objc_msgSend(a1, sel_direction);
  objc_msgSend(a1, sel_locationInView_, *(_QWORD *)(v3 + 80));
  v9[0] = 5;
  v10 = v5;
  v11 = v6;
  v12 = v7;
  v13 = 3;
  v14 = 0;
  v15 = 0;
  v4(v9);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22F896548(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  void (*v4)(char *);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9[8];
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;

  v3 = v1 + OBJC_IVAR____TtCV19ContactlessReaderUI11GestureView11Coordinator_parent;
  swift_retain();
  sub_22F8CC620();
  swift_release();
  v4 = *(void (**)(char *))(v3 + 64);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E20850);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22F991B40;
  swift_retain();
  *(_QWORD *)(v5 + 32) = objc_msgSend(a1, sel_direction);
  objc_msgSend(a1, sel_locationInView_, *(_QWORD *)(v3 + 80));
  v9[0] = 6;
  v10 = v5;
  v11 = v6;
  v12 = v7;
  v13 = 3;
  v14 = 0;
  v15 = 0;
  v4(v9);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22F896680(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  void (*v4)(char *);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9[8];
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;

  v3 = v1 + OBJC_IVAR____TtCV19ContactlessReaderUI11GestureView11Coordinator_parent;
  swift_retain();
  sub_22F8CC620();
  swift_release();
  v4 = *(void (**)(char *))(v3 + 64);
  v5 = *(_QWORD *)(v3 + 80);
  swift_retain();
  objc_msgSend(a1, sel_locationInView_, v5);
  v9[0] = 7;
  v10 = 0;
  v11 = v6;
  v12 = v7;
  v13 = 3;
  v14 = 0;
  v15 = 0;
  v4(v9);
  return swift_release();
}

id sub_22F896770(void *a1)
{
  uint64_t v1;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id result;
  char v10;
  void (*v11)(char *);
  char v12[8];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;

  v3 = (char *)objc_msgSend(a1, sel_state);
  v4 = v1 + OBJC_IVAR____TtCV19ContactlessReaderUI11GestureView11Coordinator_parent;
  objc_msgSend(a1, sel_locationInView_, *(_QWORD *)(v1 + OBJC_IVAR____TtCV19ContactlessReaderUI11GestureView11Coordinator_parent + 80));
  v6 = v5;
  v8 = v7;
  swift_retain();
  sub_22F8CC620();
  result = (id)swift_release();
  v10 = (_BYTE)v3 - 2;
  if ((unint64_t)(v3 - 2) <= 3)
  {
    v11 = *(void (**)(char *))(v4 + 64);
    v12[0] = 4;
    v13 = 0;
    v14 = v6;
    v15 = v8;
    v16 = 0x2020201u >> (8 * v10);
    v17 = 0;
    v18 = 0;
    swift_retain();
    v11(v12);
    swift_release();
    return objc_msgSend(a1, sel_setTranslation_inView_, *(_QWORD *)(v4 + 80), 0.0, 0.0);
  }
  return result;
}

uint64_t sub_22F8968C8(void *a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  char v10;
  void (*v11)(char *);
  char v12[8];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;

  v3 = objc_msgSend(a1, sel_state);
  v4 = v1 + OBJC_IVAR____TtCV19ContactlessReaderUI11GestureView11Coordinator_parent;
  objc_msgSend(a1, sel_locationInView_, *(_QWORD *)(v1 + OBJC_IVAR____TtCV19ContactlessReaderUI11GestureView11Coordinator_parent + 80));
  v6 = v5;
  v8 = v7;
  swift_retain();
  sub_22F8CC620();
  result = swift_release();
  v10 = 0;
  switch((unint64_t)v3)
  {
    case 0uLL:
    case 2uLL:
      return result;
    case 1uLL:
      goto LABEL_3;
    default:
      v10 = 2;
LABEL_3:
      v11 = *(void (**)(char *))(v4 + 64);
      v12[0] = 8;
      v13 = 0;
      v14 = v6;
      v15 = v8;
      v16 = v10;
      v17 = 0;
      v18 = 0;
      swift_retain();
      v11(v12);
      result = swift_release();
      break;
  }
  return result;
}

id sub_22F896A6C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for GestureView.Coordinator()
{
  return objc_opt_self();
}

id sub_22F896B50(uint64_t a1)
{
  return (id)sub_22F89898C(a1);
}

id sub_22F896BA4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  objc_class *v11;
  char *v12;
  char *v13;
  id v14;
  id result;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  objc_super v21;

  v2 = *v1;
  v19 = v1[1];
  v3 = v1[2];
  v4 = v1[3];
  v6 = v1[4];
  v5 = v1[5];
  v7 = v1[6];
  v18 = *((_BYTE *)v1 + 56);
  v8 = v1[9];
  v17 = v1[8];
  v10 = (void *)v1[10];
  v9 = v1[11];
  v16 = *((_BYTE *)v1 + 96);
  v11 = (objc_class *)type metadata accessor for GestureView.Coordinator();
  v12 = (char *)objc_allocWithZone(v11);
  v13 = &v12[OBJC_IVAR____TtCV19ContactlessReaderUI11GestureView11Coordinator_parent];
  *(_QWORD *)v13 = v2;
  *((_QWORD *)v13 + 1) = v19;
  *((_QWORD *)v13 + 2) = v3;
  *((_QWORD *)v13 + 3) = v4;
  *((_QWORD *)v13 + 4) = v6;
  *((_QWORD *)v13 + 5) = v5;
  *((_QWORD *)v13 + 6) = v7;
  v13[56] = v18;
  *((_QWORD *)v13 + 8) = v17;
  *((_QWORD *)v13 + 9) = v8;
  *((_QWORD *)v13 + 10) = v10;
  *((_QWORD *)v13 + 11) = v9;
  v13[96] = v16;
  v21.receiver = v12;
  v21.super_class = v11;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  v14 = v10;
  swift_retain();
  result = objc_msgSendSuper2(&v21, sel_init);
  *a1 = result;
  return result;
}

uint64_t sub_22F896CC8()
{
  return sub_22F98E164();
}

uint64_t sub_22F896D08()
{
  sub_22F898B34();
  return sub_22F98E1C4();
}

uint64_t sub_22F896D58()
{
  sub_22F898B34();
  return sub_22F98E170();
}

void sub_22F896DA8()
{
  sub_22F898B34();
  sub_22F98E1B8();
  __break(1u);
}

uint64_t sub_22F896EDC(void *a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(uint64_t))
{
  uint64_t v8;
  id v9;
  id v10;

  sub_22F898D28(0, (unint64_t *)&qword_255E20840);
  sub_22F898D60();
  v8 = sub_22F98EFF8();
  v9 = a4;
  v10 = a1;
  a5(v8);

  return swift_bridgeObjectRelease();
}

id sub_22F897070()
{
  return sub_22F897578(type metadata accessor for ContinuousGestureRecognizer);
}

uint64_t type metadata accessor for ContinuousGestureRecognizer()
{
  return objc_opt_self();
}

void sub_22F8970E4(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  id v14;
  objc_class *v15;
  CGContext *v16;
  CGContext *v17;
  id v18;
  CGColor *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t i;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  objc_super v34;

  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)&v4[OBJC_IVAR____TtC19ContactlessReaderUI13GestureUIView_drawNumberRecognizer];
  if (v12)
  {
    swift_retain();
    objc_msgSend(v4, sel_setOpaque_, 0);
    v13 = (void *)objc_opt_self();
    v14 = objc_msgSend(v13, sel_clearColor);
    objc_msgSend(v4, sel_setBackgroundColor_, v14);

    v15 = (objc_class *)type metadata accessor for GestureUIView();
    v34.receiver = v4;
    v34.super_class = v15;
    objc_msgSendSuper2(&v34, sel_drawRect_, a1, a2, a3, a4);
    v16 = UIGraphicsGetCurrentContext();
    if (v16)
    {
      v17 = v16;
      v18 = objc_msgSend(v13, sel_whiteColor);
      v19 = (CGColor *)objc_msgSend(v18, sel_CGColor);

      CGContextSetStrokeColorWithColor(v17, v19);
      CGContextSetLineWidth(v17, 15.0);
      CGContextSetLineCap(v17, kCGLineCapButt);
      swift_beginAccess();
      v20 = *(_QWORD *)(v12 + 40);
      v21 = *(_QWORD *)(v20 + 16);
      if (v21)
      {
        swift_bridgeObjectRetain();
        for (i = 0; i != v21; ++i)
        {
          v23 = *(_QWORD *)(v20 + 32 + 8 * i);
          v24 = *(_QWORD *)(v23 + 16);
          if (v24)
          {
            swift_bridgeObjectRetain();
            sub_22F98F040();
            v25 = v24 - 1;
            if (v25)
            {
              v26 = v23 + 56;
              do
              {
                sub_22F98F04C();
                v26 += 16;
                --v25;
              }
              while (v25);
            }
            swift_bridgeObjectRelease();
          }
        }
        swift_bridgeObjectRelease();
      }
      CGContextStrokePath(v17);
      swift_release();

    }
    else
    {
      if (qword_255E1DB00 != -1)
        swift_once();
      v27 = __swift_project_value_buffer(v9, (uint64_t)qword_255E295B0);
      sub_22F87BC08(v27, (uint64_t)v11);
      v28 = sub_22F98DAA4();
      v29 = *(_QWORD *)(v28 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v11, 1, v28) == 1)
      {
        swift_release();
        sub_22F87BC50((uint64_t)v11);
      }
      else
      {
        v30 = sub_22F98DA8C();
        v31 = sub_22F98F07C();
        if (os_log_type_enabled(v30, v31))
        {
          v32 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v32 = 0;
          _os_log_impl(&dword_22F85B000, v30, v31, "Cannot get graphics context", v32, 2u);
          MEMORY[0x2348A6838](v32, -1, -1);
        }
        swift_release();

        (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v28);
      }
    }
  }
}

id sub_22F89756C()
{
  return sub_22F897578(type metadata accessor for GestureUIView);
}

id sub_22F897578(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for GestureUIView()
{
  return objc_opt_self();
}

uint64_t destroy for GestureView(uint64_t a1)
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for GestureView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  v8 = *(void **)(a2 + 80);
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v8;
  *(_QWORD *)(a1 + 88) = v7;
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  v9 = v8;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for GestureView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v4 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v4;
  swift_retain();
  swift_release();
  v5 = *(void **)(a2 + 80);
  v6 = *(void **)(a1 + 80);
  *(_QWORD *)(a1 + 80) = v5;
  v7 = v5;

  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  return a1;
}

__n128 __swift_memcpy97_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_BYTE *)(a1 + 96) = *((_BYTE *)a2 + 96);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for GestureView(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();

  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_release();
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  return a1;
}

uint64_t getEnumTagSinglePayload for GestureView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 97))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GestureView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 96) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 97) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 97) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for GestureView()
{
  return &type metadata for GestureView;
}

uint64_t sub_22F8979A4()
{
  return MEMORY[0x24BDF5560];
}

unint64_t sub_22F8979B4()
{
  unint64_t result;

  result = qword_255E207F0;
  if (!qword_255E207F0)
  {
    result = MEMORY[0x2348A6784](&unk_22F993710, &type metadata for GestureView);
    atomic_store(result, (unint64_t *)&qword_255E207F0);
  }
  return result;
}

void sub_22F8979F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  id v22;
  void *v23;
  _BYTE v24[24];
  _BYTE v25[40];
  _BYTE v26[40];
  _QWORD v27[5];

  v6 = sub_22F98D150();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v24[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E20810);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v24[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)(a4 + 24) = &off_24FD1E008;
  v13 = swift_unknownObjectWeakAssign();
  v14 = MEMORY[0x2348A68F8](v13);
  if (v14)
  {
    v15 = v14;
    v27[3] = type metadata accessor for DrawNumberRecognizer();
    v27[4] = &off_24FD21F28;
    v27[0] = a4;
    sub_22F87A750((uint64_t)v27, (uint64_t)v26);
    sub_22F898AA4((uint64_t)v26, (uint64_t)v25);
    swift_beginAccess();
    swift_retain_n();
    sub_22F898AEC((uint64_t)v25, v15 + 144);
    swift_endAccess();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v27);
    swift_release();
    swift_unknownObjectRelease();
  }
  *(_QWORD *)(a4 + 64) = a3;
  swift_unknownObjectWeakAssign();
  *(_BYTE *)(a4 + 81) = 1;
  sub_22F98D3C0();
  v16 = sub_22F98D4B0();
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v12, 0, 1, v16);
  v18 = 0;
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v17 + 48))(v12, 1, v16) != 1)
  {
    v18 = (void *)sub_22F98D414();
    (*(void (**)(_BYTE *, uint64_t))(v17 + 8))(v12, v16);
  }
  v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE1BDE0]), sel_initWithMode_locale_, 1, v18);

  v20 = *(void **)(a4 + 88);
  *(_QWORD *)(a4 + 88) = v19;

  v21 = *(void **)(a4 + 88);
  if (v21)
  {
    v22 = v21;
    sub_22F98D120();
    v23 = (void *)sub_22F98D138();
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
    objc_msgSend(v22, sel_setActiveCharacterSet_, v23);

  }
}

void sub_22F897C88(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  void *v4;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char v11;
  uint64_t v12;
  id v13;
  char v14;
  id v15;
  void *v16;

  v6 = a1;
  if ((a4 & 0xC000000000000001) == 0)
  {
    if ((a3 & 1) != 0)
      goto LABEL_13;
    if (a1 < 0 || 1 << *(_BYTE *)(a4 + 32) <= a1)
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a4 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) != 0)
    {
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
        goto LABEL_20;
      __break(1u);
LABEL_13:
      if (sub_22F98F2B0() == *(_DWORD *)(a4 + 36))
      {
        sub_22F98F2BC();
        sub_22F898D28(0, (unint64_t *)&qword_255E20840);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v4 = v16;
        swift_unknownObjectRelease();
        v8 = sub_22F98F190();
        v9 = -1 << *(_BYTE *)(a4 + 32);
        v6 = v8 & ~v9;
        if (((*(_QWORD *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
        {
          v10 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v6);
          v11 = sub_22F98F19C();

          if ((v11 & 1) == 0)
          {
            v12 = ~v9;
            do
            {
              v6 = (v6 + 1) & v12;
              if (((*(_QWORD *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
                goto LABEL_24;
              v13 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v6);
              v14 = sub_22F98F19C();

            }
            while ((v14 & 1) == 0);
          }

LABEL_20:
          v15 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v6);
          return;
        }
LABEL_24:

        __break(1u);
        goto LABEL_25;
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_23;
  }
  if ((a3 & 1) == 0)
  {
LABEL_25:
    __break(1u);
    return;
  }
  if (a4 < 0)
    v7 = a4;
  else
    v7 = a4 & 0xFFFFFFFFFFFFFF8;
  MEMORY[0x2348A5E9C](a1, a2, v7);
  sub_22F898D28(0, (unint64_t *)&qword_255E20840);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  swift_unknownObjectRelease();
}

uint64_t sub_22F897EF0(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 72);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_22F897F78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void);
  void *v23;
  void *v24;
  uint64_t result;
  unsigned __int8 v26;
  id v27;
  uint64_t v28;
  uint64_t v29;

  type metadata accessor for PINViewModel();
  sub_22F898A5C();
  v16 = sub_22F98DF6C();
  v28 = v17;
  type metadata accessor for GestureUIView();
  v18 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  swift_retain();
  v19 = objc_msgSend(v18, sel_init);
  type metadata accessor for DrawNumberRecognizer();
  swift_allocObject();
  v29 = a3;
  v20 = a2;
  v21 = sub_22F8CD538();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  v27 = v19;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v22 = (uint64_t (*)(void))sub_22F98D9FC();
  LOBYTE(v19) = v22();
  swift_release();
  if ((v19 & 1) != 0)
  {
    if (qword_255E1DBB0 != -1)
      swift_once();
    v23 = (void *)qword_255E29748;
    v24 = (void *)sub_22F98ED94();
    v26 = objc_msgSend(v23, sel_BOOLForKey_, v24);

  }
  else
  {
    v26 = 0;
  }
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();

  swift_release();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_release_n();
  swift_bridgeObjectRelease_n();
  swift_release_n();
  result = swift_release_n();
  *(_QWORD *)a9 = v16;
  *(_QWORD *)(a9 + 8) = v28;
  *(_QWORD *)(a9 + 16) = a1;
  *(_QWORD *)(a9 + 24) = v20;
  *(_QWORD *)(a9 + 32) = v29;
  *(_QWORD *)(a9 + 40) = a4;
  *(_QWORD *)(a9 + 48) = a5;
  *(_BYTE *)(a9 + 56) = a6 & 1;
  *(_QWORD *)(a9 + 64) = a7;
  *(_QWORD *)(a9 + 72) = a8;
  *(_QWORD *)(a9 + 80) = v27;
  *(_QWORD *)(a9 + 88) = v21;
  *(_BYTE *)(a9 + 96) = v26;
  return result;
}

void sub_22F898208(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

void sub_22F89824C()
{
  void *v0;
  id v1;
  void *v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255E207F8);
  sub_22F98E35C();
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDA20]), sel_initWithTarget_action_, v2, sel_handleTapWithSender_);

  objc_msgSend(v1, sel_setNumberOfTouchesRequired_, 1);
  objc_msgSend(v0, sel_addGestureRecognizer_, v1);

}

uint64_t sub_22F89898C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  void *v10;
  uint64_t v11;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + 16);
  v11 = v4;
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v6 = *(_QWORD *)(v2 + 80);
    v7 = (char *)(v4 + 32);
    swift_bridgeObjectRetain();
    do
    {
      v8 = *v7++;
      sub_22F898208(a1, v6, v8);
      --v5;
    }
    while (v5);
    sub_22F898A34((uint64_t)&v11);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E207F8);
  sub_22F98E35C();
  sub_22F895F18((uint64_t)v10);

  return *(_QWORD *)(v2 + 80);
}

uint64_t sub_22F898A34(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_22F898A5C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255E20110;
  if (!qword_255E20110)
  {
    v1 = type metadata accessor for PINViewModel();
    result = MEMORY[0x2348A6784](&unk_22F991FD4, v1);
    atomic_store(result, (unint64_t *)&qword_255E20110);
  }
  return result;
}

uint64_t sub_22F898AA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1ED70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22F898AEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1ED70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_22F898B34()
{
  unint64_t result;

  result = qword_255E20830;
  if (!qword_255E20830)
  {
    result = MEMORY[0x2348A6784](&unk_22F993760, &type metadata for GestureView);
    atomic_store(result, (unint64_t *)&qword_255E20830);
  }
  return result;
}

id sub_22F898B78(uint64_t a1)
{
  void *v1;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  double v7;
  double v8;

  v3 = objc_msgSend(v1, sel_view);
  sub_22F94281C(a1, (uint64_t)v3);

  v4 = objc_msgSend(v1, sel_view);
  v5 = swift_bridgeObjectRetain();
  v6 = (void *)sub_22F895E0C(v5);
  swift_bridgeObjectRelease();
  if (v6)
  {
    objc_msgSend(v6, sel_locationInView_, v4);
    sub_22F8CC060(v7, v8);

    v4 = v6;
  }

  return objc_msgSend(v1, sel_setState_, 2);
}

id sub_22F898C54()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  void *v4;
  double v5;
  double v6;

  v1 = objc_msgSend(v0, sel_view);
  sub_22F942B04();

  v2 = objc_msgSend(v0, sel_view);
  v3 = swift_bridgeObjectRetain();
  v4 = (void *)sub_22F895E0C(v3);
  swift_bridgeObjectRelease();
  if (v4)
  {
    objc_msgSend(v4, sel_locationInView_, v2);
    sub_22F8CC060(v5, v6);

  }
  sub_22F8CC1B4();

  return objc_msgSend(v0, sel_setState_, 3);
}

uint64_t sub_22F898D28(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_22F898D60()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255E20848;
  if (!qword_255E20848)
  {
    v1 = sub_22F898D28(255, (unint64_t *)&qword_255E20840);
    result = MEMORY[0x2348A6784](MEMORY[0x24BEE5BD8], v1);
    atomic_store(result, (unint64_t *)&qword_255E20848);
  }
  return result;
}

uint64_t sub_22F898DB8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t initializeWithCopy for GestureData(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GestureData(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for GestureData(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for GestureData(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 56))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for GestureData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for GestureData()
{
  return &type metadata for GestureData;
}

uint64_t getEnumTagSinglePayload for GestureType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF7)
    goto LABEL_17;
  if (a2 + 9 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 9) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 9;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 9;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 9;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v8 = v6 - 10;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for GestureType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_22F899080 + 4 * byte_22F99367B[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_22F8990B4 + 4 * byte_22F993676[v4]))();
}

uint64_t sub_22F8990B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22F8990BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22F8990C4);
  return result;
}

uint64_t sub_22F8990D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22F8990D8);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_22F8990DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22F8990E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GestureType()
{
  return &type metadata for GestureType;
}

unint64_t sub_22F899104()
{
  unint64_t result;

  result = qword_255E20858;
  if (!qword_255E20858)
  {
    result = MEMORY[0x2348A6784](&unk_22F993858, &type metadata for GestureType);
    atomic_store(result, (unint64_t *)&qword_255E20858);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SpeakingState(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for GestureState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_22F899224 + 4 * byte_22F993685[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_22F899258 + 4 * byte_22F993680[v4]))();
}

uint64_t sub_22F899258(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22F899260(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22F899268);
  return result;
}

uint64_t sub_22F899274(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22F89927CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_22F899280(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22F899288(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GestureState()
{
  return &type metadata for GestureState;
}

unint64_t sub_22F8992A8()
{
  unint64_t result;

  result = qword_255E20860;
  if (!qword_255E20860)
  {
    result = MEMORY[0x2348A6784](&unk_22F9938D0, &type metadata for GestureState);
    atomic_store(result, (unint64_t *)&qword_255E20860);
  }
  return result;
}

uint64_t sub_22F8992EC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  int *v13;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
  }
  else
  {
    v5 = a1;
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v6 = *(int *)(a3 + 20);
    v7 = (char *)(a1 + v6);
    v8 = (char *)a2 + v6;
    v9 = sub_22F98E308();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_retain();
    swift_retain();
    if (v11(v8, 1, v9))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF68);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
    v13 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF70);
    v7[v13[9]] = v8[v13[9]];
    *(_QWORD *)&v7[v13[10]] = *(_QWORD *)&v8[v13[10]];
    v7[v13[11]] = v8[v13[11]];
  }
  swift_retain();
  return v5;
}

uint64_t sub_22F899428(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_22F98E308();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF70);
  return swift_release();
}

uint64_t sub_22F8994B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;
  int *v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(int *)(a3 + 20);
  v6 = (char *)(a1 + v5);
  v7 = (char *)(a2 + v5);
  v8 = sub_22F98E308();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  swift_retain();
  swift_retain();
  if (v10(v7, 1, v8))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF68);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  v12 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF70);
  v6[v12[9]] = v7[v12[9]];
  *(_QWORD *)&v6[v12[10]] = *(_QWORD *)&v7[v12[10]];
  v6[v12[11]] = v7[v12[11]];
  swift_retain();
  return a1;
}

uint64_t sub_22F8995C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  int *v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(a3 + 20);
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = sub_22F98E308();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF68);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF70);
  v7[v15[9]] = v8[v15[9]];
  *(_QWORD *)&v7[v15[10]] = *(_QWORD *)&v8[v15[10]];
  swift_retain();
  swift_release();
  v7[v15[11]] = v8[v15[11]];
  return a1;
}

uint64_t sub_22F89974C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(int *)(a3 + 20);
  v5 = (char *)(a1 + v4);
  v6 = (char *)(a2 + v4);
  v7 = sub_22F98E308();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF68);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  v10 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF70);
  v5[v10[9]] = v6[v10[9]];
  *(_QWORD *)&v5[v10[10]] = *(_QWORD *)&v6[v10[10]];
  v5[v10[11]] = v6[v10[11]];
  return a1;
}

uint64_t sub_22F899840(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  int *v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(a3 + 20);
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = sub_22F98E308();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF68);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF70);
  v7[v15[9]] = v8[v15[9]];
  *(_QWORD *)&v7[v15[10]] = *(_QWORD *)&v8[v15[10]];
  swift_release();
  v7[v15[11]] = v8[v15[11]];
  return a1;
}

uint64_t sub_22F8999AC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22F8999B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF70);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_22F899A38()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22F899A44(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF70);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for SubscribingDescription()
{
  uint64_t result;

  result = qword_255E208C8;
  if (!qword_255E208C8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_22F899AF8()
{
  unint64_t v0;

  sub_22F87CD28();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_22F899B6C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22F899B7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (**v62)();
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t KeyPath;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD v103[2];
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  _OWORD v128[2];
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  _OWORD v133[3];
  uint64_t v134;
  uint64_t v135;
  char v136;
  uint64_t v137;
  char v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char v143;
  char v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char v149;
  char v150;
  char v151;
  char v152;
  _OWORD v153[14];
  _OWORD v154[2];
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  _OWORD v172[2];
  char v173;
  _DWORD v174[5];

  v116 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20900);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v117 = (uint64_t)v103 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v115 = (char *)v103 - v4;
  v5 = type metadata accessor for SubscribingDescription();
  v6 = *(_QWORD *)(v5 - 8);
  v103[1] = v5;
  v104 = v6;
  MEMORY[0x24BDAC7A8](v5);
  v105 = v7;
  v106 = (uint64_t)v103 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20908);
  v108 = *(_QWORD *)(v8 - 8);
  v109 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v107 = (char *)v103 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20910);
  MEMORY[0x24BDAC7A8](v111);
  v112 = (char *)v103 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20918);
  v11 = MEMORY[0x24BDAC7A8](v114);
  v113 = (char *)v103 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v119 = (uint64_t)v103 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v118 = (uint64_t)v103 - v15;
  sub_22F98E0D4();
  if (qword_255E1DC30 != -1)
    swift_once();
  v16 = (id)qword_255E29840;
  v17 = sub_22F98E5C0();
  v19 = v18;
  v21 = v20 & 1;
  sub_22F98E4D0();
  v22 = sub_22F98E578();
  v24 = v23;
  v26 = v25 & 1;
  sub_22F87E294(v17, v19, v21);
  swift_bridgeObjectRelease();
  sub_22F98E470();
  v27 = sub_22F98E5A8();
  v29 = v28;
  v31 = v30;
  swift_release();
  sub_22F87E294(v22, v24, v26);
  swift_bridgeObjectRelease();
  if (qword_255E1DBE8 != -1)
    swift_once();
  v32 = v31 & 1;
  v33 = sub_22F98E590();
  v35 = v34;
  v37 = v36;
  v39 = v38 & 1;
  sub_22F87E294(v27, v29, v32);
  swift_bridgeObjectRelease();
  v40 = sub_22F98E428();
  sub_22F98DBF4();
  v42 = v41;
  v44 = v43;
  v46 = v45;
  v48 = v47;
  v49 = sub_22F98E434();
  sub_22F98DBF4();
  v152 = v39;
  v151 = 0;
  v150 = 0;
  v134 = v33;
  v135 = v35;
  v136 = v39;
  v137 = v37;
  v138 = v40;
  v139 = v42;
  v140 = v44;
  v141 = v46;
  v142 = v48;
  v143 = 0;
  v144 = v49;
  v145 = v50;
  v146 = v51;
  v147 = v52;
  v148 = v53;
  v149 = 0;
  sub_22F98EA88();
  sub_22F8F9190(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v153, 0.0, 1, 0.0, 1);
  sub_22F87E294(v33, v35, v39);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v154[1] = swift_getKeyPath();
  BYTE8(v154[1]) = 1;
  v131 = v153[12];
  v132 = v153[13];
  v133[0] = v154[0];
  *(_OWORD *)((char *)v133 + 9) = *(_OWORD *)((char *)v154 + 9);
  v128[0] = v153[8];
  v128[1] = v153[9];
  v129 = v153[10];
  v130 = v153[11];
  v124 = v153[4];
  v125 = v153[5];
  v126 = v153[6];
  v127 = v153[7];
  v122 = v153[2];
  v123 = v153[3];
  v120 = v153[0];
  v121 = v153[1];
  v54 = v110;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF70);
  sub_22F98E2A8();
  LOBYTE(v155) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E20920);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EFF0);
  sub_22F89A9B4();
  sub_22F87CD8C();
  v55 = v107;
  sub_22F98E6E0();
  swift_release();
  swift_release();
  sub_22F89AAD8((uint64_t)v153);
  v56 = v106;
  sub_22F89AB28(v54, v106);
  v57 = (*(unsigned __int8 *)(v104 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80);
  v58 = swift_allocObject();
  sub_22F89AB70(v56, v58 + v57);
  v60 = v108;
  v59 = v109;
  v61 = (uint64_t)v112;
  (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v112, v55, v109);
  v62 = (uint64_t (**)())(v61 + *(int *)(v111 + 36));
  *v62 = sub_22F89ABB4;
  v62[1] = (uint64_t (*)())v58;
  v62[2] = 0;
  v62[3] = 0;
  (*(void (**)(char *, uint64_t))(v60 + 8))(v55, v59);
  sub_22F98E0D4();
  v63 = (id)qword_255E29840;
  v64 = sub_22F98E5C0();
  v66 = v65;
  v68 = v67 & 1;
  sub_22F89ABC0();
  v69 = (uint64_t)v113;
  sub_22F98E68C();
  sub_22F87E294(v64, v66, v68);
  swift_bridgeObjectRelease();
  sub_22F87AC20(v61, &qword_255E20910);
  v70 = v119;
  sub_22F98DEB8();
  sub_22F87AC20(v69, &qword_255E20918);
  sub_22F89AC78(v70, v118);
  sub_22F98E0D4();
  v71 = (id)qword_255E29840;
  v72 = sub_22F98E5C0();
  v74 = v73;
  v76 = v75 & 1;
  sub_22F98E488();
  v77 = sub_22F98E5A8();
  v79 = v78;
  v81 = v80;
  swift_release();
  sub_22F87E294(v72, v74, v76);
  swift_bridgeObjectRelease();
  v82 = sub_22F98E590();
  v84 = v83;
  v86 = v85;
  v88 = v87 & 1;
  sub_22F87E294(v77, v79, v81 & 1);
  swift_bridgeObjectRelease();
  v89 = sub_22F98EA88();
  sub_22F8F8CA0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v120, 0.0, 1, 0.0, 1, v89, v90, v82, v84, v88, v86);
  sub_22F87E294(v82, v84, v88);
  swift_bridgeObjectRelease();
  v161 = v126;
  v162 = v127;
  v163 = v128[0];
  v157 = v122;
  v158 = v123;
  v159 = v124;
  v160 = v125;
  v155 = v120;
  v156 = v121;
  KeyPath = swift_getKeyPath();
  v170 = v161;
  v171 = v162;
  v172[0] = v163;
  v166 = v157;
  v167 = v158;
  v169 = v160;
  v168 = v159;
  v164 = v155;
  v165 = v156;
  *(_QWORD *)&v172[1] = KeyPath;
  BYTE8(v172[1]) = 1;
  LOBYTE(v82) = sub_22F98E434();
  sub_22F98DBF4();
  v126 = v170;
  v127 = v171;
  v128[0] = v172[0];
  *(_OWORD *)((char *)v128 + 9) = *(_OWORD *)((char *)v172 + 9);
  v122 = v166;
  v123 = v167;
  v124 = v168;
  v125 = v169;
  v120 = v164;
  v121 = v165;
  v173 = 0;
  LOBYTE(v129) = v82;
  *(_DWORD *)((char *)&v129 + 1) = v174[0];
  DWORD1(v129) = *(_DWORD *)((char *)v174 + 3);
  *((_QWORD *)&v129 + 1) = v92;
  *(_QWORD *)&v130 = v93;
  *((_QWORD *)&v130 + 1) = v94;
  *(_QWORD *)&v131 = v95;
  BYTE8(v131) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E20968);
  sub_22F87E2D8(&qword_255E20970, &qword_255E20968, (uint64_t (*)(void))sub_22F89ACC0, MEMORY[0x24BDECC60]);
  v96 = (uint64_t)v115;
  sub_22F98E704();
  sub_22F89ADB8((uint64_t)&v164);
  v98 = v118;
  v97 = v119;
  sub_22F87ABDC(v118, v119, &qword_255E20918);
  v99 = v117;
  sub_22F87ABDC(v96, v117, &qword_255E20900);
  v100 = v116;
  sub_22F87ABDC(v97, v116, &qword_255E20918);
  v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20988);
  sub_22F87ABDC(v99, v100 + *(int *)(v101 + 48), &qword_255E20900);
  sub_22F87AC20(v96, &qword_255E20900);
  sub_22F87AC20(v98, &qword_255E20918);
  sub_22F87AC20(v99, &qword_255E20900);
  return sub_22F87AC20(v97, &qword_255E20918);
}

uint64_t sub_22F89A640(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[6];

  v22 = a1;
  v26 = sub_22F98EB84();
  v29 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v2 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_22F98EB9C();
  v27 = *(_QWORD *)(v3 - 8);
  v28 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SubscribingDescription();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  v9 = sub_22F98EBC0();
  v10 = *(_QWORD *)(v9 - 8);
  v25 = v9;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v22 - v14;
  sub_22F879058();
  v23 = sub_22F98F0F4();
  sub_22F98EBB4();
  MEMORY[0x2348A57D0](v13, 0.3);
  v24 = *(void (**)(char *, uint64_t))(v10 + 8);
  v24(v13, v9);
  sub_22F89AB28(v22, (uint64_t)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v17 = swift_allocObject();
  sub_22F89AB70((uint64_t)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16);
  aBlock[4] = sub_22F89AEDC;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22F8644F0;
  aBlock[3] = &block_descriptor_7;
  v18 = _Block_copy(aBlock);
  swift_release();
  sub_22F98EB90();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_22F89AF3C();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E22070);
  sub_22F87AA84((unint64_t *)&qword_255E22DB0, (uint64_t *)&unk_255E22070, MEMORY[0x24BEE12C8]);
  v19 = v26;
  sub_22F98F274();
  v20 = (void *)v23;
  MEMORY[0x2348A5CA4](v15, v5, v2, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v2, v19);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v5, v28);
  return ((uint64_t (*)(char *, uint64_t))v24)(v15, v25);
}

uint64_t sub_22F89A914()
{
  type metadata accessor for SubscribingDescription();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF70);
  sub_22F98E29C();
  UIAccessibilityPostNotification(*MEMORY[0x24BEBDEC8], 0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F098);
  return sub_22F98E998();
}

unint64_t sub_22F89A9B4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E20928;
  if (!qword_255E20928)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20920);
    v2[0] = sub_22F87E2D8(&qword_255E20930, &qword_255E20938, (uint64_t (*)(void))sub_22F89AA58, MEMORY[0x24BDEDBB8]);
    v2[1] = sub_22F87AA84(&qword_255E1F4E0, &qword_255E1F4E8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E20928);
  }
  return result;
}

unint64_t sub_22F89AA58()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255E20940;
  if (!qword_255E20940)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20948);
    v2 = MEMORY[0x24BDECC60];
    v3[0] = sub_22F89AD5C(&qword_255E20950, &qword_255E20958, MEMORY[0x24BDECC60]);
    v3[1] = v2;
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_255E20940);
  }
  return result;
}

uint64_t sub_22F89AAD8(uint64_t a1)
{
  sub_22F87E294(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22F89AB28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SubscribingDescription();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22F89AB70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SubscribingDescription();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22F89ABB4()
{
  return sub_22F89AEE8(sub_22F89A640);
}

unint64_t sub_22F89ABC0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = qword_255E20960;
  if (!qword_255E20960)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20910);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20920);
    v2[3] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1EFF0);
    v2[4] = sub_22F89A9B4();
    v2[5] = sub_22F87CD8C();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = MEMORY[0x24BDF0910];
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E20960);
  }
  return result;
}

uint64_t sub_22F89AC78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20918);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_22F89ACC0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E20978;
  if (!qword_255E20978)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20980);
    v2[0] = sub_22F89AD5C((unint64_t *)&qword_255E20178, &qword_255E20180, MEMORY[0x24BDEDBB8]);
    v2[1] = sub_22F87AA84(&qword_255E1F4E0, &qword_255E1F4E8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E20978);
  }
  return result;
}

uint64_t sub_22F89AD5C(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = MEMORY[0x24BDF1F80];
    v7[1] = a3;
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22F89ADB8(uint64_t a1)
{
  sub_22F87E294(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t objectdestroyTm_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for SubscribingDescription();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  swift_release();
  v3 = v0 + ((v2 + 16) & ~v2) + *(int *)(v1 + 20);
  v4 = sub_22F98E308();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF70);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22F89AEDC()
{
  return sub_22F89AEE8((uint64_t (*)(uint64_t))sub_22F89A914);
}

uint64_t sub_22F89AEE8(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SubscribingDescription() - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

unint64_t sub_22F89AF3C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255E22DA0;
  if (!qword_255E22DA0)
  {
    v1 = sub_22F98EB84();
    result = MEMORY[0x2348A6784](MEMORY[0x24BEE5468], v1);
    atomic_store(result, (unint64_t *)&qword_255E22DA0);
  }
  return result;
}

uint64_t sub_22F89AF84()
{
  return sub_22F87AA84(&qword_255E20990, &qword_255E20998, MEMORY[0x24BDF5428]);
}

uint64_t destroy for BackgroundBlurView()
{
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for BackgroundBlurView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for BackgroundBlurView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for BackgroundBlurView(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for BackgroundBlurView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BackgroundBlurView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BackgroundBlurView()
{
  return &type metadata for BackgroundBlurView;
}

unint64_t sub_22F89B1BC()
{
  unint64_t result;

  result = qword_255E209A0;
  if (!qword_255E209A0)
  {
    result = MEMORY[0x2348A6784](&unk_22F993A64, &type metadata for BackgroundBlurView);
    atomic_store(result, (unint64_t *)&qword_255E209A0);
  }
  return result;
}

void sub_22F89B200(void *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  char v5;
  uint64_t v6;
  int v7;
  id v8;
  id v9;
  uint64_t v10;
  __int128 v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  unsigned __int8 v29;
  uint64_t v30;

  v2 = v1;
  v4 = v1[1];
  v5 = *((_BYTE *)v1 + 16);
  v30 = *v1;
  v23 = v30;
  v24 = v4;
  LOBYTE(v25) = v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F098);
  MEMORY[0x2348A5560](&v29, v6);
  v7 = v29;
  v8 = objc_allocWithZone(MEMORY[0x24BEBDB20]);
  if (v7 == 1)
  {
    v9 = objc_msgSend(v8, sel_initWithDuration_curve_animations_, 1, 0, 0.5, v23, v24, v25);
    v10 = swift_allocObject();
    v11 = *((_OWORD *)v2 + 1);
    *(_OWORD *)(v10 + 24) = *(_OWORD *)v2;
    *(_QWORD *)(v10 + 16) = a1;
    *(_OWORD *)(v10 + 40) = v11;
    *(_QWORD *)(v10 + 56) = v2[4];
    v27 = sub_22F89B754;
    v28 = v10;
    v23 = MEMORY[0x24BDAC760];
    v24 = 1107296256;
    v25 = sub_22F8644F0;
    v26 = &block_descriptor_12;
    v12 = _Block_copy(&v23);
    v13 = a1;
    sub_22F89B6F0((uint64_t)&v30);
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v9, sel_addAnimations_, v12);
  }
  else
  {
    v9 = objc_msgSend(v8, sel_initWithDuration_curve_animations_, 3, 0, 0.5, v23, v24, v25);
    v14 = objc_msgSend(a1, sel_effect);
    v15 = v14;
    if (v14)

    v16 = v15 != 0;
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = a1;
    v27 = sub_22F89B664;
    v28 = v17;
    v18 = MEMORY[0x24BDAC760];
    v23 = MEMORY[0x24BDAC760];
    v24 = 1107296256;
    v25 = sub_22F8644F0;
    v26 = &block_descriptor_8;
    v19 = _Block_copy(&v23);
    v20 = a1;
    swift_release();
    objc_msgSend(v9, sel_addAnimations_, v19);
    _Block_release(v19);
    v21 = swift_allocObject();
    v22 = *((_OWORD *)v2 + 1);
    *(_OWORD *)(v21 + 24) = *(_OWORD *)v2;
    *(_BYTE *)(v21 + 16) = v16;
    *(_OWORD *)(v21 + 40) = v22;
    *(_QWORD *)(v21 + 56) = v2[4];
    v27 = sub_22F89B6C4;
    v28 = v21;
    v23 = v18;
    v24 = 1107296256;
    v25 = sub_22F89B4CC;
    v26 = &block_descriptor_6;
    v12 = _Block_copy(&v23);
    sub_22F89B6F0((uint64_t)&v30);
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v9, sel_addCompletion_, v12);
  }
  _Block_release(v12);
  objc_msgSend(v9, sel_startAnimation);

}

uint64_t sub_22F89B4CC(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

id sub_22F89B508()
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB38]), sel_initWithEffect_, 0);
}

uint64_t sub_22F89B538()
{
  sub_22F89B5FC();
  return sub_22F98E1C4();
}

uint64_t sub_22F89B588()
{
  sub_22F89B5FC();
  return sub_22F98E170();
}

void sub_22F89B5D8()
{
  sub_22F89B5FC();
  sub_22F98E1B8();
  __break(1u);
}

unint64_t sub_22F89B5FC()
{
  unint64_t result;

  result = qword_255E209A8;
  if (!qword_255E209A8)
  {
    result = MEMORY[0x2348A6784](&unk_22F9939D4, &type metadata for BackgroundBlurView);
    atomic_store(result, (unint64_t *)&qword_255E209A8);
  }
  return result;
}

uint64_t sub_22F89B640()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_22F89B664()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_setEffect_, 0);
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t sub_22F89B690()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22F89B6C4()
{
  uint64_t v0;
  uint64_t result;

  if (*(_BYTE *)(v0 + 16) == 1)
    return (*(uint64_t (**)(void))(v0 + 48))();
  return result;
}

uint64_t sub_22F89B6F0(uint64_t a1)
{
  swift_retain();
  return a1;
}

uint64_t sub_22F89B718()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_22F89B754()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = sub_22F89B798();
  objc_msgSend(v1, sel_setEffect_, v2);

}

id sub_22F89B798()
{
  id v0;
  id v1;
  objc_class *v2;
  char *v3;
  objc_super v5;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB80]), sel_init);
  v1 = objc_msgSend((id)objc_opt_self(), sel_blackColor);
  objc_msgSend(v0, sel_setColorTint_, v1);

  objc_msgSend(v0, sel_setColorTintAlpha_, 0.65);
  objc_msgSend(v0, sel_setSaturationDeltaFactor_, 1.0);
  objc_msgSend(v0, sel_setBlurRadius_, 50.0);
  v2 = (objc_class *)type metadata accessor for CBlurEffect();
  v3 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v3[OBJC_IVAR____TtC19ContactlessReaderUI11CBlurEffect_settings] = v0;
  v5.receiver = v3;
  v5.super_class = v2;
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t sub_22F89B89C()
{
  uint64_t result;

  result = sub_22F98EB00();
  qword_255E296C0 = result;
  return result;
}

uint64_t sub_22F89B8BC()
{
  uint64_t v0;
  uint64_t result;

  sub_22F98EB00();
  v0 = sub_22F98EAD0();
  result = swift_release();
  qword_255E296C8 = v0;
  return result;
}

uint64_t sub_22F89B900@<X0>(uint64_t a1@<X8>)
{
  double *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  double v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  _OWORD v52[2];
  _OWORD v53[8];
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  _OWORD v61[2];
  __int128 v62;
  char v63;

  v2 = (uint64_t)v1;
  v43 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E209B0);
  v40 = *(_QWORD *)(v3 - 8);
  v41 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E209B8);
  MEMORY[0x24BDAC7A8](v42);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*v1 > *(double *)&qword_255E270F0 * 62.0)
    v8 = *v1;
  else
    v8 = *(double *)&qword_255E270F0 * 62.0;
  v9 = swift_allocObject();
  v10 = *(_OWORD *)(v2 + 112);
  *(_OWORD *)(v9 + 112) = *(_OWORD *)(v2 + 96);
  *(_OWORD *)(v9 + 128) = v10;
  *(_OWORD *)(v9 + 144) = *(_OWORD *)(v2 + 128);
  *(_QWORD *)(v9 + 160) = *(_QWORD *)(v2 + 144);
  v11 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v9 + 48) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v9 + 64) = v11;
  v12 = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(v9 + 80) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v9 + 96) = v12;
  v13 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v9 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v9 + 32) = v13;
  *(double *)(v9 + 168) = v8;
  sub_22F89F0F0(v2);
  v14 = sub_22F98EA88();
  sub_22F8F9350(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v53, 0.0, 1, 0.0, 1, v14, v15, (uint64_t)sub_22F89F0E4, v9);
  swift_release();
  if (qword_255E1DC58 != -1)
    swift_once();
  v16 = qword_255E298E0;
  v62 = *(_OWORD *)(v2 + 112);
  v63 = *(_BYTE *)(v2 + 128);
  v54 = *(_OWORD *)(v2 + 112);
  LOBYTE(v55) = *(_BYTE *)(v2 + 128);
  swift_retain();
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F098);
  MEMORY[0x2348A5560](&v45);
  v18 = v45;
  v49 = v53[4];
  v50 = v53[5];
  v51 = v53[6];
  v52[0] = v53[7];
  v45 = v53[0];
  v46 = v53[1];
  v47 = v53[2];
  v48 = v53[3];
  *(_QWORD *)&v52[1] = v16;
  BYTE8(v52[1]) = v18;
  LOBYTE(v44) = *(_BYTE *)(v2 + 9);
  v19 = swift_allocObject();
  v20 = *(_OWORD *)(v2 + 112);
  *(_OWORD *)(v19 + 112) = *(_OWORD *)(v2 + 96);
  *(_OWORD *)(v19 + 128) = v20;
  *(_OWORD *)(v19 + 144) = *(_OWORD *)(v2 + 128);
  *(_QWORD *)(v19 + 160) = *(_QWORD *)(v2 + 144);
  v21 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v19 + 48) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v19 + 64) = v21;
  v22 = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(v19 + 80) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v19 + 96) = v22;
  v23 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v19 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v19 + 32) = v23;
  sub_22F89F0F0(v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E209C0);
  sub_22F89F1E4();
  sub_22F98E7A0();
  swift_release();
  v59 = v50;
  v60 = v51;
  v61[0] = v52[0];
  *(_OWORD *)((char *)v61 + 9) = *(_OWORD *)((char *)v52 + 9);
  v56 = v47;
  v57 = v48;
  v58 = v49;
  v54 = v45;
  v55 = v46;
  sub_22F89F2EC((uint64_t)&v54);
  v45 = *(_OWORD *)(v2 + 32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3C0);
  sub_22F98E8FC();
  v24 = v44;
  v25 = swift_allocObject();
  v26 = *(_OWORD *)(v2 + 112);
  *(_OWORD *)(v25 + 112) = *(_OWORD *)(v2 + 96);
  *(_OWORD *)(v25 + 128) = v26;
  *(_OWORD *)(v25 + 144) = *(_OWORD *)(v2 + 128);
  *(_QWORD *)(v25 + 160) = *(_QWORD *)(v2 + 144);
  v27 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v25 + 48) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v25 + 64) = v27;
  v28 = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(v25 + 80) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v25 + 96) = v28;
  v29 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v25 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v25 + 32) = v29;
  v31 = v40;
  v30 = v41;
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v7, v5, v41);
  v32 = &v7[*(int *)(v42 + 36)];
  *(_QWORD *)v32 = v24;
  *((_QWORD *)v32 + 1) = v24;
  *((_QWORD *)v32 + 2) = sub_22F89F328;
  *((_QWORD *)v32 + 3) = v25;
  sub_22F89F0F0(v2);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v5, v30);
  v45 = v62;
  LOBYTE(v46) = v63;
  MEMORY[0x2348A5560](&v44, v17);
  LOBYTE(v45) = v44;
  v33 = swift_allocObject();
  v34 = *(_OWORD *)(v2 + 112);
  *(_OWORD *)(v33 + 112) = *(_OWORD *)(v2 + 96);
  *(_OWORD *)(v33 + 128) = v34;
  *(_OWORD *)(v33 + 144) = *(_OWORD *)(v2 + 128);
  *(_QWORD *)(v33 + 160) = *(_QWORD *)(v2 + 144);
  v35 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v33 + 48) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v33 + 64) = v35;
  v36 = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(v33 + 80) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v33 + 96) = v36;
  v37 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v33 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v33 + 32) = v37;
  sub_22F89F0F0(v2);
  sub_22F89F3BC();
  sub_22F98E794();
  swift_release();
  return sub_22F87AC20((uint64_t)v7, &qword_255E209B8);
}

uint64_t sub_22F89BDAC@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E209F8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v8 = sub_22F98E128();
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 0;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20A00);
  sub_22F89BEB8(a2, a1, (uint64_t)&v8[*(int *)(v9 + 44)]);
  v10 = sub_22F98EA88();
  sub_22F8F94FC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a3, 0.0, 1, 0.0, 1, v10, v11);
  return sub_22F87AC20((uint64_t)v8, &qword_255E209F8);
}

uint64_t sub_22F89BEB8@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  double v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  _BYTE v54[320];
  _BYTE v55[320];
  __int128 v56;
  _BYTE v57[273];
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  _OWORD v66[2];
  __int128 v67;
  _OWORD v68[9];
  uint64_t v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  _OWORD v73[3];
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  uint64_t v78;

  v37 = a2;
  v52 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20A08);
  MEMORY[0x24BDAC7A8](v4);
  v48 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20A10);
  MEMORY[0x24BDAC7A8](v51);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20A18);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v49 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v47 = (char *)&v37 - v11;
  v12 = a1[4];
  v64 = a1[3];
  v65 = v12;
  v14 = a1[3];
  v13 = a1[4];
  v66[0] = a1[5];
  *(_OWORD *)((char *)v66 + 9) = *(_OWORD *)((char *)a1 + 89);
  v56 = v14;
  *(_OWORD *)v57 = v13;
  *(_OWORD *)&v57[16] = a1[5];
  *(_OWORD *)&v57[25] = *(_OWORD *)((char *)a1 + 89);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20A20);
  sub_22F98E9A4();
  v45 = *(_OWORD *)((char *)v68 + 8);
  v46 = v67;
  v41 = *(_QWORD *)&v68[0];
  v43 = *(_QWORD *)&v68[2];
  v44 = *((_QWORD *)&v68[1] + 1);
  v42 = BYTE8(v68[2]);
  v56 = a1[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3C0);
  sub_22F98E914();
  v39 = *((_QWORD *)&v67 + 1);
  v40 = v67;
  v15 = *(_QWORD *)&v68[0];
  v56 = a1[2];
  sub_22F98E914();
  v38 = *((_QWORD *)&v67 + 1);
  v16 = v67;
  v17 = *(_QWORD *)&v68[0];
  type metadata accessor for FineRotationManager(0);
  sub_22F862548(&qword_255E1F3C8, type metadata accessor for FineRotationManager, (uint64_t)&unk_22F992D8C);
  v18 = sub_22F98DF6C();
  v20 = v19;
  v21 = *(double *)&qword_255E270F0 * 62.0;
  LOBYTE(v56) = 4;
  sub_22F98E8F0();
  v22 = v67;
  v23 = *((_QWORD *)&v67 + 1);
  LOBYTE(v56) = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E20A28);
  sub_22F98E8F0();
  *(double *)&v70 = v21;
  *((_QWORD *)&v70 + 1) = v18;
  *(_QWORD *)&v71 = v20;
  BYTE8(v71) = v22;
  v24 = (uint64_t)v47;
  *(_QWORD *)&v72 = v23;
  BYTE8(v72) = v67;
  *(_QWORD *)&v73[0] = *((_QWORD *)&v67 + 1);
  *(_OWORD *)((char *)v73 + 8) = v46;
  *((_QWORD *)&v73[1] + 1) = v41;
  v73[2] = v45;
  *(_QWORD *)&v74 = v44;
  *((_QWORD *)&v74 + 1) = v43;
  LOBYTE(v75) = v42;
  *((_QWORD *)&v75 + 1) = v40;
  *(_QWORD *)&v76 = v39;
  *((_QWORD *)&v76 + 1) = v15;
  *(_QWORD *)&v77 = v16;
  *((_QWORD *)&v77 + 1) = v38;
  v78 = v17;
  v68[7] = v76;
  v68[8] = v77;
  v69 = v17;
  v68[3] = v73[1];
  v68[4] = v45;
  v68[5] = v74;
  v68[6] = v75;
  v68[1] = v72;
  v68[2] = v73[0];
  v67 = v70;
  v68[0] = v71;
  sub_22F89F588();
  v25 = (uint64_t)v48;
  sub_22F98E6BC();
  sub_22F89F5CC((uint64_t)&v70);
  sub_22F98EA88();
  sub_22F98DCFC();
  sub_22F87ABDC(v25, (uint64_t)v7, &qword_255E20A08);
  v26 = &v7[*(int *)(v51 + 36)];
  v27 = v62;
  *(_OWORD *)v26 = v61;
  *((_OWORD *)v26 + 1) = v27;
  v28 = (uint64_t)v49;
  *((_OWORD *)v26 + 2) = v63;
  sub_22F87AC20(v25, &qword_255E20A08);
  sub_22F87E2D8(&qword_255E20A38, &qword_255E20A10, (uint64_t (*)(void))sub_22F89F6C8, MEMORY[0x24BDEBEE0]);
  sub_22F98E704();
  sub_22F87AC20((uint64_t)v7, &qword_255E20A10);
  sub_22F87B2B4(v28, v24, &qword_255E20A18);
  v67 = v64;
  v68[0] = v65;
  v68[1] = v66[0];
  *(_OWORD *)((char *)&v68[1] + 9) = *(_OWORD *)((char *)v66 + 9);
  MEMORY[0x2348A5560](&v56, v50);
  v29 = v56;
  sub_22F89F69C(*(uint64_t *)v57);
  if (!*((_QWORD *)&v29 + 1))
    goto LABEL_7;
  v67 = *(_OWORD *)((char *)a1 + 136);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3B0);
  sub_22F98E8FC();
  if (v56 != 1)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    sub_22F89F74C(&v56);
    goto LABEL_8;
  }
  sub_22F98DDB0();
  v31 = v30 / 5.0 * 1.5;
  v32 = sub_22F98E128();
  sub_22F89C630(v29, *((uint64_t *)&v29 + 1), (uint64_t)v54, v31);
  swift_bridgeObjectRelease();
  v53 = 1;
  memcpy(&v55[7], v54, 0x109uLL);
  sub_22F98DD44();
  sub_22F98DD50();
  sub_22F98DD5C();
  swift_release();
  swift_release();
  if (qword_255E1DB48 != -1)
    swift_once();
  sub_22F98DD74();
  swift_release();
  sub_22F98DD50();
  sub_22F98DD14();
  swift_release();
  swift_release();
  sub_22F98EADC();
  v33 = sub_22F98DD74();
  swift_release();
  swift_release();
  v56 = (unint64_t)v32;
  v57[0] = 1;
  memcpy(&v57[1], v55, 0x110uLL);
  v58 = v33;
  v59 = 0xD000000000000013;
  v60 = 0x800000022F993B40;
  nullsub_1(&v56);
LABEL_8:
  sub_22F87B2B4((uint64_t)&v56, (uint64_t)&v67, &qword_255E20A48);
  sub_22F87ABDC(v24, v28, &qword_255E20A18);
  sub_22F87B2B4((uint64_t)&v67, (uint64_t)v54, &qword_255E20A48);
  v34 = v52;
  sub_22F87ABDC(v28, v52, &qword_255E20A18);
  v35 = v34 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255E20A50) + 48);
  sub_22F87B2B4((uint64_t)v54, (uint64_t)v55, &qword_255E20A48);
  sub_22F87B2B4((uint64_t)v55, v35, &qword_255E20A48);
  sub_22F89F7FC((uint64_t)v55, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22F89F77C);
  sub_22F87AC20(v24, &qword_255E20A18);
  sub_22F87B2B4((uint64_t)v54, (uint64_t)&v56, &qword_255E20A48);
  sub_22F89F7FC((uint64_t)&v56, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22F89F888);
  return sub_22F87AC20(v28, &qword_255E20A18);
}

uint64_t sub_22F89C630@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;

  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3C0);
  sub_22F98E914();
  sub_22F98E914();
  v38 = a1;
  v39 = a2;
  v40 = v27;
  v41 = v28;
  v42 = v27;
  v43 = v28;
  sub_22F98EA88();
  sub_22F8F9560(0.0, 1, 0.0, 1, INFINITY, 0, a4, 0, &v27, 0.0, 1, 0.0, 1);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v8 = sub_22F98E428();
  sub_22F98DBF4();
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v16 = v15;
  LOBYTE(a2) = sub_22F98E434();
  sub_22F8B9AFC();
  result = sub_22F98DBF4();
  v18 = v36;
  *(_OWORD *)(a3 + 128) = v35;
  *(_OWORD *)(a3 + 144) = v18;
  *(_OWORD *)(a3 + 160) = v37;
  v19 = v32;
  *(_OWORD *)(a3 + 64) = v31;
  *(_OWORD *)(a3 + 80) = v19;
  v20 = v34;
  *(_OWORD *)(a3 + 96) = v33;
  *(_OWORD *)(a3 + 112) = v20;
  v21 = v28;
  *(_OWORD *)a3 = v27;
  *(_OWORD *)(a3 + 16) = v21;
  v22 = v30;
  *(_OWORD *)(a3 + 32) = v29;
  *(_OWORD *)(a3 + 48) = v22;
  *(_BYTE *)(a3 + 176) = v8;
  *(_QWORD *)(a3 + 184) = v10;
  *(_QWORD *)(a3 + 192) = v12;
  *(_QWORD *)(a3 + 200) = v14;
  *(_QWORD *)(a3 + 208) = v16;
  *(_BYTE *)(a3 + 216) = 0;
  *(_BYTE *)(a3 + 224) = a2;
  *(_QWORD *)(a3 + 232) = v23;
  *(_QWORD *)(a3 + 240) = v24;
  *(_QWORD *)(a3 + 248) = v25;
  *(_QWORD *)(a3 + 256) = v26;
  *(_BYTE *)(a3 + 264) = 0;
  return result;
}

uint64_t sub_22F89C814()
{
  sub_22F98EAE8();
  sub_22F98DE10();
  return swift_release();
}

uint64_t sub_22F89C880()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3C0);
  sub_22F98E908();
  sub_22F98EAE8();
  sub_22F98DE10();
  return swift_release();
}

uint64_t sub_22F89C930()
{
  sub_22F98EAF4();
  sub_22F98DE10();
  return swift_release();
}

uint64_t sub_22F89C994@<X0>(uint64_t a1@<X8>)
{
  return sub_22F89B900(a1);
}

uint64_t sub_22F89C9EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  _BYTE v64[7];
  _BYTE v65[7];
  char v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  uint64_t v91;

  v1 = v0;
  *(_QWORD *)&v76 = sub_22F932EEC(1);
  *((_QWORD *)&v76 + 1) = v2;
  sub_22F863BF8();
  v3 = sub_22F98E5CC();
  v5 = v4;
  v7 = v6 & 1;
  sub_22F98E4F4();
  v8 = sub_22F98E5A8();
  v10 = v9;
  v12 = v11;
  swift_release();
  sub_22F87E294(v3, v5, v7);
  swift_bridgeObjectRelease();
  sub_22F98E4D0();
  v37 = sub_22F98E578();
  v38 = v13;
  v15 = v14;
  v17 = v16;
  sub_22F87E294(v8, v10, v12 & 1);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v19 = swift_getKeyPath();
  v20 = sub_22F98E83C();
  v21 = swift_getKeyPath();
  v76 = *(_OWORD *)(v1 + 16);
  *(_QWORD *)&v77 = *(_QWORD *)(v1 + 32);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20A88);
  MEMORY[0x2348A5560](&v39);
  v23 = *(double *)&v39 * 0.0174532925;
  sub_22F98EB6C();
  v25 = v24;
  v27 = v26;
  v76 = *(_OWORD *)(v1 + 40);
  *(_QWORD *)&v77 = *(_QWORD *)(v1 + 56);
  MEMORY[0x2348A5560](&v39, v22);
  v28 = v39;
  *(_QWORD *)&v76 = 0;
  *((_QWORD *)&v76 + 1) = 0xE000000000000000;
  sub_22F98F31C();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v76 = 0xD000000000000014;
  *((_QWORD *)&v76 + 1) = 0x800000022F99EFA0;
  swift_bridgeObjectRetain();
  sub_22F98EE9C();
  swift_bridgeObjectRelease();
  v29 = v76;
  v66 = v17 & 1;
  v76 = xmmword_22F992830;
  v77 = xmmword_22F992810;
  v39 = 0uLL;
  __asm { FMOV            V0.2D, #1.0 }
  v40 = _Q0;
  sub_22F883CC8();
  v35 = sub_22F98DD68();
  *(_QWORD *)&v67 = v37;
  *((_QWORD *)&v67 + 1) = v15;
  LOBYTE(v68) = v66;
  *(_DWORD *)((char *)&v68 + 1) = *(_DWORD *)v65;
  DWORD1(v68) = *(_DWORD *)&v65[3];
  *((_QWORD *)&v68 + 1) = v38;
  *(_QWORD *)&v69 = KeyPath;
  *((_QWORD *)&v69 + 1) = 0x3FE3333333333333;
  *(_QWORD *)&v70 = v19;
  BYTE8(v70) = 1;
  *(_DWORD *)((char *)&v70 + 9) = *(_DWORD *)v64;
  HIDWORD(v70) = *(_DWORD *)&v64[3];
  *(_QWORD *)&v71 = v21;
  *((_QWORD *)&v71 + 1) = v20;
  *(double *)&v72 = v23;
  *((_QWORD *)&v72 + 1) = v25;
  *(_QWORD *)&v73 = v27;
  *((_QWORD *)&v73 + 1) = v28;
  v74 = v29;
  v75 = v35;
  v63 = v35;
  v61 = v73;
  v62 = v29;
  v59 = v71;
  v60 = v72;
  v57 = v69;
  v58 = v70;
  v55 = v67;
  v56 = v68;
  sub_22F98EA88();
  sub_22F8F9704(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v39, 0.0, 1, 0.0, 1);
  sub_22F8A0C50((uint64_t)&v67);
  v88 = v51;
  v89 = v52;
  v90 = v53;
  v91 = v54;
  v84 = v47;
  v85 = v48;
  v86 = v49;
  v87 = v50;
  v80 = v43;
  v81 = v44;
  v82 = v45;
  v83 = v46;
  v76 = v39;
  v77 = v40;
  v78 = v41;
  v79 = v42;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E20BE8);
  sub_22F8A0AE4();
  sub_22F98E704();
  return sub_22F8A0C50((uint64_t)&v76);
}

uint64_t sub_22F89CE54@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  double v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (**v46)();
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  _OWORD v52[2];
  double v53[3];
  char v54;

  v2 = v1;
  v49 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20A58);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (uint64_t *)((char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20A60);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20A68);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20A70);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20A78);
  v15 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v5 = sub_22F98EA7C();
  v5[1] = v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20A80);
  sub_22F89D2E0(v2, (uint64_t)v5 + *(int *)(v19 + 44));
  v20 = sub_22F98EA88();
  sub_22F8F98CC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v8, 0.0, 1, INFINITY, 0, v20, v21);
  sub_22F87AC20((uint64_t)v5, &qword_255E20A58);
  v50 = *(_OWORD *)(v2 + 120);
  *(_QWORD *)&v51 = *(_QWORD *)(v2 + 136);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20A88);
  MEMORY[0x2348A5560](v53);
  v23 = v53[0] * 0.0174532925;
  sub_22F98EB6C();
  v25 = v24;
  v27 = v26;
  sub_22F87ABDC((uint64_t)v8, (uint64_t)v11, &qword_255E20A60);
  v28 = &v11[*(int *)(v9 + 36)];
  *(double *)v28 = v23;
  *((_QWORD *)v28 + 1) = v25;
  *((_QWORD *)v28 + 2) = v27;
  sub_22F87AC20((uint64_t)v8, &qword_255E20A60);
  v50 = *(_OWORD *)(v2 + 144);
  *(_QWORD *)&v51 = *(_QWORD *)(v2 + 160);
  MEMORY[0x2348A5560](v53, v22);
  v29 = v53[0];
  sub_22F87ABDC((uint64_t)v11, (uint64_t)v14, &qword_255E20A68);
  *(double *)&v14[*(int *)(v12 + 36)] = v29;
  sub_22F87AC20((uint64_t)v11, &qword_255E20A68);
  v30 = *(_OWORD *)(v2 + 72);
  v50 = *(_OWORD *)(v2 + 56);
  v51 = v30;
  v52[0] = *(_OWORD *)(v2 + 88);
  *(_OWORD *)((char *)v52 + 9) = *(_OWORD *)(v2 + 97);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20A20);
  MEMORY[0x2348A5560](v53, v31);
  swift_bridgeObjectRelease();
  sub_22F89F69C(*(uint64_t *)&v53[2]);
  LOBYTE(v50) = v54;
  v32 = swift_allocObject();
  v33 = *(_OWORD *)(v2 + 144);
  *(_OWORD *)(v32 + 144) = *(_OWORD *)(v2 + 128);
  *(_OWORD *)(v32 + 160) = v33;
  *(_QWORD *)(v32 + 176) = *(_QWORD *)(v2 + 160);
  v34 = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(v32 + 80) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v32 + 96) = v34;
  v35 = *(_OWORD *)(v2 + 112);
  *(_OWORD *)(v32 + 112) = *(_OWORD *)(v2 + 96);
  *(_OWORD *)(v32 + 128) = v35;
  v36 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v32 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v32 + 32) = v36;
  v37 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v32 + 48) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v32 + 64) = v37;
  sub_22F8A023C(v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E20A28);
  sub_22F87E2D8(&qword_255E20A90, &qword_255E20A70, sub_22F8A0310, MEMORY[0x24BDECC38]);
  sub_22F8A03B8();
  sub_22F98E794();
  swift_release();
  sub_22F87AC20((uint64_t)v14, &qword_255E20A70);
  v38 = swift_allocObject();
  v39 = *(_OWORD *)(v2 + 144);
  *(_OWORD *)(v38 + 144) = *(_OWORD *)(v2 + 128);
  *(_OWORD *)(v38 + 160) = v39;
  *(_QWORD *)(v38 + 176) = *(_QWORD *)(v2 + 160);
  v40 = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(v38 + 80) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v38 + 96) = v40;
  v41 = *(_OWORD *)(v2 + 112);
  *(_OWORD *)(v38 + 112) = *(_OWORD *)(v2 + 96);
  *(_OWORD *)(v38 + 128) = v41;
  v42 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v38 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v38 + 32) = v42;
  v43 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v38 + 48) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v38 + 64) = v43;
  v45 = v48;
  v44 = v49;
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 16))(v49, v17, v48);
  v46 = (uint64_t (**)())(v44 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255E20AC0) + 36));
  *v46 = sub_22F8A0464;
  v46[1] = (uint64_t (*)())v38;
  v46[2] = 0;
  v46[3] = 0;
  sub_22F8A023C(v2);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v45);
}

uint64_t sub_22F89D2E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t KeyPath;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char v46;
  _DWORD v47[2];
  char v48;
  char v49;
  int v50;
  __int16 v51;
  char v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  _OWORD v61[2];
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  _BYTE v70[7];
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;

  v45 = a2;
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20AD8);
  v3 = MEMORY[0x24BDAC7A8](v43);
  MEMORY[0x24BDAC7A8](v3);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20AE0);
  MEMORY[0x24BDAC7A8](v41);
  v42 = (uint64_t)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20AE8);
  MEMORY[0x24BDAC7A8](v5);
  v44 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_22F98E878();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20AF0);
  MEMORY[0x24BDAC7A8](v40);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_OWORD *)(a1 + 72);
  v59 = *(_OWORD *)(a1 + 56);
  v60 = v13;
  v61[0] = *(_OWORD *)(a1 + 88);
  *(_OWORD *)((char *)v61 + 9) = *(_OWORD *)(a1 + 97);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20A20);
  MEMORY[0x2348A5560](&v53, v14);
  swift_bridgeObjectRelease();
  v15 = v55;
  if (v55)
  {
    v16 = v56;
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x24BDF3FD0], v7);
    v39 = sub_22F98E890();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v34 = v15;
    sub_22F98EA88();
    sub_22F98DCFC();
    v17 = v53;
    v18 = v54;
    v19 = v55;
    v20 = v56;
    v32 = v58;
    v33 = v57;
    sub_22F98E494();
    sub_22F98E4B8();
    v38 = sub_22F98E50C();
    swift_release();
    KeyPath = swift_getKeyPath();
    v21 = swift_getKeyPath();
    v35 = v16;
    v36 = v21;
    swift_retain();
    sub_22F98DD50();
    sub_22F98EB6C();
    sub_22F98DD38();
    sub_22F98DD5C();
    swift_release();
    swift_release();
    if (qword_255E1DB40 != -1)
      swift_once();
    sub_22F98DD74();
    swift_release();
    sub_22F98DD50();
    v22 = sub_22F98DD14();
    swift_release();
    swift_release();
    v23 = sub_22F98E41C();
    sub_22F98DBF4();
    v52 = 1;
    v49 = v18;
    v48 = v20;
    v46 = 0;
    v59 = (unint64_t)v39;
    LOWORD(v60) = 1;
    *(_DWORD *)((char *)&v60 + 2) = v50;
    WORD3(v60) = v51;
    *((_QWORD *)&v60 + 1) = v17;
    LOBYTE(v61[0]) = v18;
    *(_DWORD *)((char *)v61 + 1) = v76;
    DWORD1(v61[0]) = *(_DWORD *)((char *)&v76 + 3);
    *((_QWORD *)&v61[0] + 1) = v19;
    LOBYTE(v61[1]) = v20;
    DWORD1(v61[1]) = *(_DWORD *)((char *)&v80 + 3);
    *(_DWORD *)((char *)&v61[1] + 1) = v80;
    *((_QWORD *)&v61[1] + 1) = v33;
    v62 = v32;
    v63 = KeyPath;
    v64 = v38;
    v65 = v36;
    v66 = v35;
    v67 = v22;
    v68 = 0x4008000000000000;
    v69 = v23;
    *(_DWORD *)&v70[3] = *(_DWORD *)((char *)v47 + 3);
    *(_DWORD *)v70 = v47[0];
    v71 = v24;
    v72 = v25;
    v73 = v26;
    v74 = v27;
    v75 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E20B88);
    sub_22F87E2D8(&qword_255E20B80, &qword_255E20B88, (uint64_t (*)(void))sub_22F8A0740, MEMORY[0x24BDECC60]);
    sub_22F98E704();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_22F87ABDC((uint64_t)v12, v42, &qword_255E20AF0);
    swift_storeEnumTagMultiPayload();
    sub_22F8A069C();
    sub_22F8A0970();
    v28 = (uint64_t)v44;
    sub_22F98E1E8();
    swift_release();
    swift_release();
    sub_22F87AC20((uint64_t)v12, &qword_255E20AF0);
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20AF8);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v28, 0, 1, v30);
    return sub_22F87B2B4(v28, v45, &qword_255E20AE8);
  }
  else
  {
    v59 = *(_OWORD *)(a1 + 40);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E20AC8);
    sub_22F98E8FC();
    if (v53 != 2)
    {
      LODWORD(v39) = v53 & 1;
      v80 = *(_OWORD *)(a1 + 24);
      v59 = *(_OWORD *)(a1 + 24);
      __swift_instantiateConcreteTypeFromMangledName(&qword_255E20AD0);
      sub_22F98E8FC();
      LODWORD(v38) = v53;
      sub_22F98EA88();
      sub_22F98DCFC();
      v36 = v77;
      KeyPath = v76;
      v34 = v79;
      v35 = v78;
      v59 = v80;
      sub_22F98E8FC();
      __asm { BR              X10 }
    }
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20AF8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v45, 1, 1, v29);
  }
}

uint64_t sub_22F89DDA4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  void *v22;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD aBlock[6];

  v2 = sub_22F98EB84();
  v27 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_22F98EB9C();
  v25 = *(_QWORD *)(v5 - 8);
  v26 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_22F98EBC0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v24 - v13;
  sub_22F879058();
  v15 = (void *)sub_22F98F0F4();
  sub_22F98EBB4();
  MEMORY[0x2348A57D0](v12, 0.2);
  v24 = *(void (**)(char *, uint64_t))(v9 + 8);
  v24(v12, v8);
  v16 = swift_allocObject();
  v17 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(v16 + 144) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v16 + 160) = v17;
  *(_QWORD *)(v16 + 176) = *(_QWORD *)(a1 + 160);
  v18 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v16 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v16 + 96) = v18;
  v19 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v16 + 112) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v16 + 128) = v19;
  v20 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v16 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v16 + 32) = v20;
  v21 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v16 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v16 + 64) = v21;
  aBlock[4] = sub_22F8A0A88;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22F8644F0;
  aBlock[3] = &block_descriptor_35;
  v22 = _Block_copy(aBlock);
  sub_22F8A023C(a1);
  swift_release();
  sub_22F98EB90();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_22F862548((unint64_t *)&qword_255E22DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E22070);
  sub_22F87AA84((unint64_t *)&qword_255E22DB0, (uint64_t *)&unk_255E22070, MEMORY[0x24BEE12C8]);
  sub_22F98F274();
  MEMORY[0x2348A5CA4](v14, v7, v4, v22);
  _Block_release(v22);

  (*(void (**)(char *, uint64_t))(v27 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v26);
  return ((uint64_t (*)(char *, uint64_t))v24)(v14, v8);
}

uint64_t sub_22F89E068()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E20AD0);
  sub_22F98E908();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E20AC8);
  return sub_22F98E908();
}

uint64_t sub_22F89E0E0(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  void *v31;
  char *v32;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint8_t *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint8_t *v41;
  uint8_t *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 aBlock;
  uint64_t (*v55)(uint64_t);
  void *v56;
  uint64_t (*v57)();
  uint64_t v58;
  __int128 v59;

  v5 = sub_22F98EB84();
  v53 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_22F98EB9C();
  v51 = *(_QWORD *)(v8 - 8);
  v52 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v50 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_22F98EBC0();
  v48 = *(_QWORD *)(v10 - 8);
  v49 = v10;
  v11 = MEMORY[0x24BDAC7A8](v10);
  v47 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v42 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *a2;
  if (qword_255E1DAF8 != -1)
    swift_once();
  v19 = __swift_project_value_buffer(v15, (uint64_t)qword_255E29598);
  sub_22F87ABDC(v19, (uint64_t)v17, (uint64_t *)&unk_255E206E0);
  v20 = sub_22F98DAA4();
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v17, 1, v20) == 1)
  {
    sub_22F87AC20((uint64_t)v17, (uint64_t *)&unk_255E206E0);
    if (v18 != 2)
      goto LABEL_5;
LABEL_9:
    aBlock = *(_OWORD *)(a3 + 24);
    v59 = *(_OWORD *)(a3 + 24);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E20AD0);
    sub_22F98E8FC();
    __asm { BR              X10 }
  }
  v34 = sub_22F98DA8C();
  v35 = sub_22F98F07C();
  if (os_log_type_enabled(v34, v35))
  {
    v45 = v7;
    v36 = swift_slowAlloc();
    v46 = v5;
    v37 = (uint8_t *)v36;
    v43 = swift_slowAlloc();
    *(_QWORD *)&aBlock = v43;
    v44 = v14;
    *(_DWORD *)v37 = 136315138;
    v42 = v37 + 4;
    LOBYTE(v59) = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E20A28);
    v38 = sub_22F98EE18();
    *(_QWORD *)&v59 = sub_22F878880(v38, v39, (uint64_t *)&aBlock);
    v14 = v44;
    sub_22F98F208();
    v7 = v45;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22F85B000, v34, v35, "glyphType update: %s", v37, 0xCu);
    v40 = v43;
    swift_arrayDestroy();
    MEMORY[0x2348A6838](v40, -1, -1);
    v41 = v37;
    v5 = v46;
    MEMORY[0x2348A6838](v41, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v21 + 8))(v17, v20);
  if (v18 == 2)
    goto LABEL_9;
LABEL_5:
  aBlock = *(_OWORD *)(a3 + 40);
  LOBYTE(v59) = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E20AC8);
  sub_22F98E908();
  sub_22F879058();
  v22 = (void *)sub_22F98F0F4();
  v23 = v47;
  sub_22F98EBB4();
  MEMORY[0x2348A57D0](v23, 0.2);
  v24 = v49;
  v48 = *(_QWORD *)(v48 + 8);
  ((void (*)(char *, uint64_t))v48)(v23, v49);
  v25 = swift_allocObject();
  v26 = *(_OWORD *)(a3 + 144);
  *(_OWORD *)(v25 + 144) = *(_OWORD *)(a3 + 128);
  *(_OWORD *)(v25 + 160) = v26;
  *(_QWORD *)(v25 + 176) = *(_QWORD *)(a3 + 160);
  v27 = *(_OWORD *)(a3 + 80);
  *(_OWORD *)(v25 + 80) = *(_OWORD *)(a3 + 64);
  *(_OWORD *)(v25 + 96) = v27;
  v28 = *(_OWORD *)(a3 + 112);
  *(_OWORD *)(v25 + 112) = *(_OWORD *)(a3 + 96);
  *(_OWORD *)(v25 + 128) = v28;
  v29 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v25 + 16) = *(_OWORD *)a3;
  *(_OWORD *)(v25 + 32) = v29;
  v30 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(v25 + 48) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v25 + 64) = v30;
  v57 = sub_22F8A0470;
  v58 = v25;
  *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  v55 = sub_22F8644F0;
  v56 = &block_descriptor_9;
  v31 = _Block_copy(&aBlock);
  sub_22F8A023C(a3);
  swift_release();
  v32 = v50;
  sub_22F98EB90();
  *(_QWORD *)&aBlock = MEMORY[0x24BEE4AF8];
  sub_22F862548((unint64_t *)&qword_255E22DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E22070);
  sub_22F87AA84((unint64_t *)&qword_255E22DB0, (uint64_t *)&unk_255E22070, MEMORY[0x24BEE12C8]);
  sub_22F98F274();
  MEMORY[0x2348A5CA4](v14, v32, v7, v31);
  _Block_release(v31);

  (*(void (**)(char *, uint64_t))(v53 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v32, v52);
  return ((uint64_t (*)(char *, uint64_t))v48)(v14, v24);
}

uint64_t sub_22F89E868()
{
  uint64_t result;
  char v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255E20AC8);
  result = sub_22F98E8FC();
  if (v1 != 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E20AD0);
    return sub_22F98E908();
  }
  return result;
}

uint64_t sub_22F89E8E4()
{
  uint64_t v0;
  _QWORD v2[3];
  char v3;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20A20);
  MEMORY[0x2348A5560](v2, v0);
  swift_bridgeObjectRelease();
  sub_22F89F69C(v2[2]);
  LOBYTE(v2[0]) = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E20AC8);
  return sub_22F98E908();
}

uint64_t sub_22F89E97C@<X0>(uint64_t a1@<X8>)
{
  return sub_22F89CE54(a1);
}

__n128 sub_22F89E9D4@<Q0>(char a1@<W0>, char a2@<W1>, __int128 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>, double a8@<D0>)
{
  uint64_t v14;
  char v15;
  __n128 result;
  __n128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v21;
  uint64_t v22;

  v18 = a3[1];
  v19 = *a3;
  v17 = (__n128)a3[2];
  v14 = *((_QWORD *)a3 + 6);
  v15 = *((_BYTE *)a3 + 56);
  sub_22F98E8F0();
  sub_22F98E8F0();
  sub_22F98E8F0();
  *(double *)a7 = a8;
  *(_BYTE *)(a7 + 8) = a1;
  *(_BYTE *)(a7 + 9) = a2;
  *(_QWORD *)(a7 + 16) = v21;
  *(_QWORD *)(a7 + 24) = v22;
  *(_QWORD *)(a7 + 32) = v21;
  *(_QWORD *)(a7 + 40) = v22;
  *(_OWORD *)(a7 + 48) = v19;
  *(_OWORD *)(a7 + 64) = v18;
  result = v17;
  *(__n128 *)(a7 + 80) = v17;
  *(_QWORD *)(a7 + 96) = v14;
  *(_BYTE *)(a7 + 104) = v15;
  *(_QWORD *)(a7 + 112) = a4;
  *(_QWORD *)(a7 + 120) = a5;
  *(_BYTE *)(a7 + 128) = a6;
  *(_BYTE *)(a7 + 136) = v21;
  *(_QWORD *)(a7 + 144) = v22;
  return result;
}

uint64_t destroy for ReaderStateView(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 80))
  {
    swift_release();
    swift_release();
  }
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for ReaderStateView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  v8 = a2 + 80;
  v7 = *(_QWORD *)(a2 + 80);
  v9 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v9;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  if (v7)
  {
    v11 = *(_QWORD *)(a2 + 88);
    v10 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 80) = v7;
    *(_QWORD *)(a1 + 88) = v11;
    *(_QWORD *)(a1 + 96) = v10;
    swift_retain();
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 80) = *(_OWORD *)v8;
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(v8 + 16);
  }
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v12 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v12;
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ReaderStateView(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  __int128 v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 80);
  v6 = (_OWORD *)(a2 + 80);
  v5 = *(_QWORD *)(a2 + 80);
  if (*(_QWORD *)(a1 + 80))
  {
    if (v5)
    {
      *(_QWORD *)(a1 + 80) = v5;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    }
    else
    {
      sub_22F89EE68(a1 + 80);
      v7 = *(_QWORD *)(a2 + 96);
      *v4 = *v6;
      *(_QWORD *)(a1 + 96) = v7;
    }
  }
  else if (v5)
  {
    *(_QWORD *)(a1 + 80) = v5;
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    swift_retain();
    swift_retain();
  }
  else
  {
    v8 = *v6;
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *v4 = v8;
  }
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_22F89EE68(uint64_t a1)
{
  destroy for HeightObserver();
  return a1;
}

__n128 __swift_memcpy152_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;
  __int128 v8;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  result = *(__n128 *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t assignWithTake for ReaderStateView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_release();
  v4 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 80);
  if (!*(_QWORD *)(a1 + 80))
    goto LABEL_5;
  if (!v5)
  {
    sub_22F89EE68(a1 + 80);
LABEL_5:
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 80) = v5;
  swift_release();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_release();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
LABEL_6:
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_release();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_release();
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ReaderStateView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 152))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ReaderStateView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 152) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 56) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 152) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ReaderStateView()
{
  return &type metadata for ReaderStateView;
}

uint64_t sub_22F89F0CC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22F89F0DC()
{
  return objectdestroyTm_4();
}

uint64_t sub_22F89F0E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_22F89BDAC(a1, (_OWORD *)(v2 + 16), a2);
}

uint64_t sub_22F89F0F0(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 80);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_22F89F1A8(v2);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_22F89F1A8(uint64_t result)
{
  if (result)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_22F89F1D4()
{
  return objectdestroyTm_4();
}

uint64_t sub_22F89F1DC()
{
  return sub_22F89C814();
}

unint64_t sub_22F89F1E4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E209C8;
  if (!qword_255E209C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E209C0);
    v2[0] = sub_22F89F268();
    v2[1] = sub_22F87AA84(&qword_255E1F3F8, &qword_255E1F400, MEMORY[0x24BDEEC10]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E209C8);
  }
  return result;
}

unint64_t sub_22F89F268()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E209D0;
  if (!qword_255E209D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E209D8);
    v2[0] = sub_22F87AA84(&qword_255E209E0, &qword_255E209E8, MEMORY[0x24BDEC6F8]);
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E209D0);
  }
  return result;
}

uint64_t sub_22F89F2EC(uint64_t a1)
{
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_22F89F320()
{
  return objectdestroyTm_4();
}

uint64_t sub_22F89F328()
{
  return sub_22F89C880();
}

uint64_t sub_22F89F330()
{
  return objectdestroyTm_4();
}

uint64_t objectdestroyTm_4()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 96))
  {
    swift_release();
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22F89F3B4()
{
  return sub_22F89C930();
}

unint64_t sub_22F89F3BC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  result = qword_255E209F0;
  if (!qword_255E209F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E209B8);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E209C0);
    v3 = sub_22F89F1E4();
    v4[2] = v2;
    v4[3] = MEMORY[0x24BEE1328];
    v4[4] = v3;
    v4[5] = MEMORY[0x24BEE1340];
    v4[0] = swift_getOpaqueTypeConformance2();
    v4[1] = sub_22F87AA84(&qword_255E1F408, &qword_255E1F410, (uint64_t)&unk_22F99C190);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_255E209F0);
  }
  return result;
}

uint64_t sub_22F89F47C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3B0);
  return sub_22F98E908();
}

uint64_t sub_22F89F4DC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3C0);
  return sub_22F98E908();
}

uint64_t sub_22F89F534()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3C0);
  return sub_22F98E908();
}

unint64_t sub_22F89F588()
{
  unint64_t result;

  result = qword_255E20A30;
  if (!qword_255E20A30)
  {
    result = MEMORY[0x2348A6784](&unk_22F993BE8, &type metadata for ReaderStateGlyphView);
    atomic_store(result, (unint64_t *)&qword_255E20A30);
  }
  return result;
}

uint64_t sub_22F89F5CC(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 88);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_22F89F69C(v2);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_22F89F69C(uint64_t result)
{
  if (result)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

unint64_t sub_22F89F6C8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E20A40;
  if (!qword_255E20A40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20A08);
    v2[0] = sub_22F89F588();
    v2[1] = sub_22F862548((unint64_t *)&qword_255E1F478, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E20A40);
  }
  return result;
}

double sub_22F89F74C(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[18] = 0u;
  a1[19] = 0u;
  a1[16] = 0u;
  a1[17] = 0u;
  a1[14] = 0u;
  a1[15] = 0u;
  a1[12] = 0u;
  a1[13] = 0u;
  a1[10] = 0u;
  a1[11] = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_22F89F77C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;

  if (a5)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_22F89F7FC(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v7 = *(_OWORD *)(a1 + 272);
  v8 = *(_OWORD *)(a1 + 288);
  v5 = *(_OWORD *)(a1 + 240);
  v6 = *(_OWORD *)(a1 + 256);
  v4 = *(_OWORD *)(a1 + 208);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    v4,
    *((_QWORD *)&v4 + 1),
    *(_QWORD *)(a1 + 224),
    *(_QWORD *)(a1 + 232),
    v5,
    *((_QWORD *)&v5 + 1),
    v6,
    *((_QWORD *)&v6 + 1),
    v7,
    *((_QWORD *)&v7 + 1),
    v8,
    *((_QWORD *)&v8 + 1),
    *(_QWORD *)(a1 + 304),
    *(_QWORD *)(a1 + 312));
  return a1;
}

uint64_t sub_22F89F888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;

  if (a5)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t destroy for ReaderStateTextView()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *initializeWithCopy for ReaderStateTextView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for ReaderStateTextView(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ReaderStateTextView(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReaderStateTextView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ReaderStateTextView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ReaderStateTextView()
{
  return &type metadata for ReaderStateTextView;
}

uint64_t destroy for ReaderStateGlyphView(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 88))
  {
    swift_release();
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for ReaderStateGlyphView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  v8 = a2 + 88;
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  if (v7)
  {
    v10 = *(_QWORD *)(a2 + 96);
    v9 = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 88) = v7;
    *(_QWORD *)(a1 + 96) = v10;
    *(_QWORD *)(a1 + 104) = v9;
    swift_retain();
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 88) = *(_OWORD *)v8;
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(v8 + 16);
  }
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  v11 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v11;
  v12 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v12;
  v13 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = v13;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ReaderStateGlyphView(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  __int128 v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 88);
  v6 = (_OWORD *)(a2 + 88);
  v5 = *(_QWORD *)(a2 + 88);
  if (*(_QWORD *)(a1 + 88))
  {
    if (v5)
    {
      *(_QWORD *)(a1 + 88) = v5;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    }
    else
    {
      sub_22F89EE68(a1 + 88);
      v7 = *(_QWORD *)(a2 + 104);
      *v4 = *v6;
      *(_QWORD *)(a1 + 104) = v7;
    }
  }
  else if (v5)
  {
    *(_QWORD *)(a1 + 88) = v5;
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    swift_retain();
    swift_retain();
  }
  else
  {
    v8 = *v6;
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *v4 = v8;
  }
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  return a1;
}

__n128 __swift_memcpy168_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  result = (__n128)a2[7];
  v8 = a2[8];
  v9 = a2[9];
  *(_QWORD *)(a1 + 160) = *((_QWORD *)a2 + 20);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for ReaderStateGlyphView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_release();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_release();
  v4 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 88);
  if (!*(_QWORD *)(a1 + 88))
    goto LABEL_5;
  if (!v5)
  {
    sub_22F89EE68(a1 + 88);
LABEL_5:
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 88) = v5;
  swift_release();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_release();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
LABEL_6:
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_release();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_release();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_release();
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_release();
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReaderStateGlyphView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 168))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 64);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ReaderStateGlyphView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 168) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 64) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 168) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ReaderStateGlyphView()
{
  return &type metadata for ReaderStateGlyphView;
}

uint64_t sub_22F8A01B0()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E209B8);
  sub_22F89F3BC();
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22F8A0210()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22F8A0220()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22F8A0234(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2;

  return sub_22F89E0E0(a1, a2, v2 + 16);
}

uint64_t sub_22F8A023C(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 88);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_22F89F1A8(v2);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_22F8A0310()
{
  return sub_22F87E2D8(&qword_255E20A98, &qword_255E20A68, (uint64_t (*)(void))sub_22F8A0334, MEMORY[0x24BDED5D8]);
}

unint64_t sub_22F8A0334()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E20AA0;
  if (!qword_255E20AA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20A60);
    v2[0] = sub_22F87AA84(&qword_255E20AA8, &qword_255E20A58, MEMORY[0x24BDF4750]);
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E20AA0);
  }
  return result;
}

unint64_t sub_22F8A03B8()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_255E20AB0;
  if (!qword_255E20AB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20A28);
    v2 = sub_22F8A041C();
    result = MEMORY[0x2348A6784](MEMORY[0x24BEE4AB8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_255E20AB0);
  }
  return result;
}

unint64_t sub_22F8A041C()
{
  unint64_t result;

  result = qword_255E20AB8;
  if (!qword_255E20AB8)
  {
    result = MEMORY[0x2348A6784](&unk_22F99922C, &type metadata for ContactlessAnimationType);
    atomic_store(result, (unint64_t *)&qword_255E20AB8);
  }
  return result;
}

uint64_t sub_22F8A0464()
{
  return sub_22F89E8E4();
}

uint64_t sub_22F8A0470()
{
  return sub_22F89E868();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t sub_22F8A0494()
{
  uint64_t v0;

  return sub_22F89DDA4(v0 + 16);
}

uint64_t sub_22F8A04A0()
{
  return sub_22F89E068();
}

unint64_t sub_22F8A04A8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E20B08;
  if (!qword_255E20B08)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20B00);
    v2[0] = sub_22F87E2D8(&qword_255E20B10, &qword_255E20B18, sub_22F8A054C, MEMORY[0x24BDF0910]);
    v2[1] = sub_22F87AA84(&qword_255E20B68, &qword_255E20B70, MEMORY[0x24BDEEC10]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E20B08);
  }
  return result;
}

uint64_t sub_22F8A054C()
{
  return sub_22F87E2D8(&qword_255E20B20, &qword_255E20B28, sub_22F8A0570, MEMORY[0x24BDF0910]);
}

uint64_t sub_22F8A0570()
{
  return sub_22F87E2D8(&qword_255E20B30, &qword_255E20B38, sub_22F8A0594, MEMORY[0x24BDECC38]);
}

uint64_t sub_22F8A0594()
{
  return sub_22F87E2D8(&qword_255E20B40, &qword_255E20B48, sub_22F8A05B8, MEMORY[0x24BDEBF50]);
}

uint64_t sub_22F8A05B8()
{
  return sub_22F87E2D8(&qword_255E20B50, &qword_255E20B58, (uint64_t (*)(void))sub_22F8A05DC, MEMORY[0x24BDEBEE0]);
}

unint64_t sub_22F8A05DC()
{
  unint64_t result;

  result = qword_255E20B60;
  if (!qword_255E20B60)
  {
    result = MEMORY[0x2348A6784](&unk_22F9993F4, &type metadata for ContactlessGlyphAnimationView);
    atomic_store(result, (unint64_t *)&qword_255E20B60);
  }
  return result;
}

uint64_t *sub_22F8A0620(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[14];
  v3 = a1[16];
  v4 = a1[18];
  sub_22F87A9B8(a1[12]);
  sub_22F87A9B8(v2);
  sub_22F87A9B8(v3);
  sub_22F87A9B8(v4);
  swift_release();
  return a1;
}

unint64_t sub_22F8A069C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E20B78;
  if (!qword_255E20B78)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20AF0);
    v2[0] = sub_22F87E2D8(&qword_255E20B80, &qword_255E20B88, (uint64_t (*)(void))sub_22F8A0740, MEMORY[0x24BDECC60]);
    v2[1] = sub_22F862548((unint64_t *)&qword_255E1F478, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E20B78);
  }
  return result;
}

unint64_t sub_22F8A0740()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E20B90;
  if (!qword_255E20B90)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20B98);
    v2[0] = sub_22F8A07C4();
    v2[1] = sub_22F87AA84(&qword_255E20BD0, &qword_255E20BD8, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E20B90);
  }
  return result;
}

unint64_t sub_22F8A07C4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E20BA0;
  if (!qword_255E20BA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20BA8);
    v2[0] = sub_22F8A0848();
    v2[1] = sub_22F87AA84(&qword_255E1F118, &qword_255E1F120, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E20BA0);
  }
  return result;
}

unint64_t sub_22F8A0848()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E20BB0;
  if (!qword_255E20BB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20BB8);
    v2[0] = sub_22F8A08CC();
    v2[1] = sub_22F87AA84(&qword_255E1F108, &qword_255E1F110, MEMORY[0x24BDF1028]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E20BB0);
  }
  return result;
}

unint64_t sub_22F8A08CC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E20BC0;
  if (!qword_255E20BC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20BC8);
    v2[0] = sub_22F87E2D8((unint64_t *)&qword_255E1F9C0, &qword_255E1F9C8, (uint64_t (*)(void))sub_22F87E230, MEMORY[0x24BDEBEE0]);
    v2[1] = sub_22F87AA84(&qword_255E1F0F8, &qword_255E1F100, MEMORY[0x24BDF1028]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E20BC0);
  }
  return result;
}

unint64_t sub_22F8A0970()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E20BE0;
  if (!qword_255E20BE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20AD8);
    v2[0] = sub_22F8A04A8();
    v2[1] = sub_22F862548((unint64_t *)&qword_255E1F478, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E20BE0);
  }
  return result;
}

uint64_t objectdestroy_12Tm()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 104))
  {
    swift_release();
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22F8A0A88()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E20AD0);
  return sub_22F98E908();
}

unint64_t sub_22F8A0AE4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E20BF0;
  if (!qword_255E20BF0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20BE8);
    v2[0] = sub_22F87E2D8(&qword_255E20BF8, &qword_255E20C00, (uint64_t (*)(void))sub_22F8A0B70, MEMORY[0x24BDEDBB8]);
    v2[1] = sub_22F8A0C0C();
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E20BF0);
  }
  return result;
}

unint64_t sub_22F8A0B70()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E20C08;
  if (!qword_255E20C08)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20C10);
    v2[0] = sub_22F87AA84(&qword_255E20C18, &qword_255E20C20, MEMORY[0x24BDF44C8]);
    v2[1] = sub_22F87AA84(&qword_255E1F118, &qword_255E1F120, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E20C08);
  }
  return result;
}

unint64_t sub_22F8A0C0C()
{
  unint64_t result;

  result = qword_255E20C28;
  if (!qword_255E20C28)
  {
    result = MEMORY[0x2348A6784](&unk_22F99AA10, &type metadata for LimitSize);
    atomic_store(result, (unint64_t *)&qword_255E20C28);
  }
  return result;
}

uint64_t sub_22F8A0C50(uint64_t a1)
{
  sub_22F87E294(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

unint64_t sub_22F8A0CE4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = qword_255E20C30;
  if (!qword_255E20C30)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20AC0);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20A70);
    v2[3] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20A28);
    v2[4] = sub_22F87E2D8(&qword_255E20A90, &qword_255E20A70, sub_22F8A0310, MEMORY[0x24BDECC38]);
    v2[5] = sub_22F8A03B8();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = MEMORY[0x24BDF0910];
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E20C30);
  }
  return result;
}

unint64_t sub_22F8A0DC0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E20C38;
  if (!qword_255E20C38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20C40);
    v2[0] = sub_22F8A0AE4();
    v2[1] = sub_22F862548((unint64_t *)&qword_255E1F478, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E20C38);
  }
  return result;
}

uint64_t sub_22F8A0FB8(uint64_t a1, uint64_t a2, SEL *a3)
{
  uint64_t result;
  void *v5;

  result = MEMORY[0x2348A68F8](a1 + 16);
  if (result)
  {
    v5 = (void *)result;
    swift_retain();
    objc_msgSend(v5, *a3);
    swift_release();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_22F8A102C(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t result;
  void *v7;

  result = MEMORY[0x2348A68F8](a1 + 16);
  if (result)
  {
    v7 = (void *)result;
    swift_retain();
    objc_msgSend(v7, *a4, a3);
    swift_release();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_22F8A109C()
{
  uint64_t v0;

  sub_22F8847A8(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WeakTapUI()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for BlurAndMoveModifier()
{
  return &type metadata for BlurAndMoveModifier;
}

uint64_t sub_22F8A10F0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22F8A1100@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v30;

  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20D50);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20D58);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20D60);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20D68);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v14, a1, v21);
  v22 = &v14[*(int *)(v12 + 36)];
  *(double *)v22 = a3;
  v22[8] = 0;
  sub_22F87ABDC((uint64_t)v14, (uint64_t)v17, &qword_255E20D50);
  v23 = &v17[*(int *)(v15 + 36)];
  *(_QWORD *)v23 = 0;
  *((double *)v23 + 1) = a4;
  sub_22F87AC20((uint64_t)v14, &qword_255E20D50);
  sub_22F98EB6C();
  v25 = v24;
  v27 = v26;
  sub_22F87ABDC((uint64_t)v17, (uint64_t)v20, &qword_255E20D58);
  v28 = &v20[*(int *)(v18 + 36)];
  *(double *)v28 = a5;
  *((double *)v28 + 1) = a5;
  *((_QWORD *)v28 + 2) = v25;
  *((_QWORD *)v28 + 3) = v27;
  sub_22F87AC20((uint64_t)v17, &qword_255E20D58);
  sub_22F87ABDC((uint64_t)v20, a2, &qword_255E20D60);
  *(double *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255E20D70) + 36)) = a6;
  return sub_22F87AC20((uint64_t)v20, &qword_255E20D60);
}

uint64_t sub_22F8A12F8()
{
  return sub_22F98DCF0();
}

uint64_t sub_22F8A1310@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double *v2;

  return sub_22F8A1100(a1, a2, *v2, v2[1], v2[2], v2[3]);
}

uint64_t sub_22F8A131C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20DA0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20DA8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20DB0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20DB8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v8, a1, v15);
  v16 = &v8[*(int *)(v6 + 36)];
  *(double *)v16 = (1.0 - a3) * 8.0;
  v16[8] = 0;
  sub_22F87ABDC((uint64_t)v8, (uint64_t)v11, &qword_255E20DA0);
  *(double *)&v11[*(int *)(v9 + 36)] = a3;
  sub_22F87AC20((uint64_t)v8, &qword_255E20DA0);
  v17 = a3 * 0.1 + 0.9;
  sub_22F98EB6C();
  v19 = v18;
  v21 = v20;
  sub_22F87ABDC((uint64_t)v11, (uint64_t)v14, &qword_255E20DA8);
  v22 = &v14[*(int *)(v12 + 36)];
  *(double *)v22 = v17;
  *((double *)v22 + 1) = v17;
  *((_QWORD *)v22 + 2) = v19;
  *((_QWORD *)v22 + 3) = v21;
  sub_22F87AC20((uint64_t)v11, &qword_255E20DA8);
  v23 = sub_22F98EAAC();
  sub_22F87ABDC((uint64_t)v14, a2, &qword_255E20DB0);
  v24 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255E20DC0) + 36);
  *(_QWORD *)v24 = v23;
  *(double *)(v24 + 8) = a3;
  return sub_22F87AC20((uint64_t)v14, &qword_255E20DB0);
}

uint64_t sub_22F8A154C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double *v2;

  return sub_22F8A131C(a1, a2, *v2);
}

uint64_t sub_22F8A1554(uint64_t a1)
{
  return sub_22F8A15A8(a1, &qword_255E296D0);
}

uint64_t sub_22F8A1570(uint64_t a1)
{
  return sub_22F8A15A8(a1, &qword_255E296D8);
}

uint64_t sub_22F8A158C(uint64_t a1)
{
  return sub_22F8A15A8(a1, &qword_255E296E0);
}

uint64_t sub_22F8A15A8(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  __asm { FMOV            V0.2D, #1.0 }
  sub_22F883CC8();
  result = sub_22F98DD68();
  *a2 = result;
  return result;
}

uint64_t sub_22F8A15FC()
{
  uint64_t result;

  sub_22F8A1640();
  result = sub_22F98DD68();
  qword_255E296E8 = result;
  return result;
}

unint64_t sub_22F8A1640()
{
  unint64_t result;

  result = qword_255E20D48;
  if (!qword_255E20D48)
  {
    result = MEMORY[0x2348A6784](&unk_22F993DF4, &type metadata for BlurOpacityModifier);
    atomic_store(result, (unint64_t *)&qword_255E20D48);
  }
  return result;
}

ValueMetadata *type metadata accessor for BlurOpacityModifier()
{
  return &type metadata for BlurOpacityModifier;
}

uint64_t sub_22F8A1694()
{
  return sub_22F87E2D8(&qword_255E20D78, &qword_255E20D70, sub_22F8A16C8, MEMORY[0x24BDECC38]);
}

uint64_t sub_22F8A16C8()
{
  return sub_22F87E2D8(&qword_255E20D80, &qword_255E20D60, (uint64_t (*)(void))sub_22F8A16EC, MEMORY[0x24BDEBF50]);
}

unint64_t sub_22F8A16EC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E20D88;
  if (!qword_255E20D88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20D58);
    v2[0] = sub_22F8A1778(&qword_255E20D90, &qword_255E20D50, &qword_255E20D98, &qword_255E20D68);
    v2[1] = MEMORY[0x24BDEC438];
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E20D88);
  }
  return result;
}

uint64_t sub_22F8A1778(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = sub_22F87AA84(a3, a4, MEMORY[0x24BDEFB78]);
    v9[1] = MEMORY[0x24BDEB920];
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22F8A17F8()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_22F8A180C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E20DC8;
  if (!qword_255E20DC8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20DC0);
    v2[0] = sub_22F87E2D8(&qword_255E20DD0, &qword_255E20DB0, (uint64_t (*)(void))sub_22F8A18B0, MEMORY[0x24BDEBF50]);
    v2[1] = sub_22F87AA84(&qword_255E20DF0, &qword_255E20DF8, MEMORY[0x24BDEEC10]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E20DC8);
  }
  return result;
}

unint64_t sub_22F8A18B0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E20DD8;
  if (!qword_255E20DD8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20DA8);
    v2[0] = sub_22F8A1778(&qword_255E20DE0, &qword_255E20DA0, &qword_255E20DE8, &qword_255E20DB8);
    v2[1] = MEMORY[0x24BDECC38];
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E20DD8);
  }
  return result;
}

uint64_t destroy for PrivacyLink()
{
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PrivacyLink(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PrivacyLink(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for PrivacyLink(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for PrivacyLink(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 49))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PrivacyLink(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 49) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PrivacyLink()
{
  return &type metadata for PrivacyLink;
}

unint64_t sub_22F8A1B84()
{
  unint64_t result;

  result = qword_255E20E00;
  if (!qword_255E20E00)
  {
    result = MEMORY[0x2348A6784](&unk_22F993EC8, &type metadata for PrivacyLink);
    atomic_store(result, (unint64_t *)&qword_255E20E00);
  }
  return result;
}

id sub_22F8A1BC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v14;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (void *)objc_opt_self();
  v5 = (void *)sub_22F98ED94();
  v6 = objc_msgSend(v4, sel_linkWithBundleIdentifier_, v5);

  if (v6)
  {
    objc_msgSend(v6, sel_setDisplayIcon_, *(unsigned __int8 *)(v0 + 48));
  }
  else
  {
    if (qword_255E1DB08 != -1)
      swift_once();
    v7 = __swift_project_value_buffer(v1, (uint64_t)qword_255E295C8);
    sub_22F87BC08(v7, (uint64_t)v3);
    v8 = sub_22F98DAA4();
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v3, 1, v8) == 1)
    {
      sub_22F87BC50((uint64_t)v3);
    }
    else
    {
      v10 = sub_22F98DA8C();
      v11 = sub_22F98F0A0();
      if (os_log_type_enabled(v10, v11))
      {
        v12 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v12 = 0;
        _os_log_impl(&dword_22F85B000, v10, v11, "Failed to create privacy link", v12, 2u);
        MEMORY[0x2348A6838](v12, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v9 + 8))(v3, v8);
    }
    return objc_msgSend(objc_allocWithZone(MEMORY[0x24BE6E430]), sel_init);
  }
  return v6;
}

void sub_22F8A1DA8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  double v14;
  double v15;
  double v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  __int128 v22;
  void *v23;
  void *v24;
  id v25;
  unint64_t v26;
  uint64_t v27;
  id v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t i;
  id v32;
  void *v33;
  uint64_t v34;
  id v35;
  _QWORD aBlock[6];

  v2 = v1;
  v4 = sub_22F98EB84();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_22F98EB9C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_opt_self();
  v12 = swift_dynamicCastObjCClass();
  if (v12)
  {
    v13 = (void *)v12;
    v35 = a1;
    objc_msgSend(v35, sel_intrinsicContentSize);
    if (v14 > 0.0)
    {
      objc_msgSend(v13, sel_intrinsicContentSize);
      v16 = v15;
      objc_msgSend(v13, sel_intrinsicContentSize);
      v18 = *(double *)(v2 + 24);
      if (v18 > 0.0)
      {
        v19 = v17;
        v20 = v16 / v18;
        sub_22F898D28(0, (unint64_t *)&qword_255E1ED40);
        v34 = sub_22F98F0F4();
        v21 = swift_allocObject();
        v22 = *(_OWORD *)(v2 + 16);
        *(_OWORD *)(v21 + 16) = *(_OWORD *)v2;
        *(_OWORD *)(v21 + 32) = v22;
        *(_OWORD *)(v21 + 48) = *(_OWORD *)(v2 + 32);
        *(_BYTE *)(v21 + 64) = *(_BYTE *)(v2 + 48);
        *(_QWORD *)(v21 + 72) = v19;
        *(double *)(v21 + 80) = v20;
        aBlock[4] = sub_22F8A2438;
        aBlock[5] = v21;
        aBlock[0] = MEMORY[0x24BDAC760];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_22F8644F0;
        aBlock[3] = &block_descriptor_10;
        v23 = _Block_copy(aBlock);
        sub_22F8A245C(v2);
        swift_release();
        sub_22F98EB90();
        aBlock[0] = MEMORY[0x24BEE4AF8];
        sub_22F89AF3C();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E22070);
        sub_22F8A24A4();
        sub_22F98F274();
        v24 = (void *)v34;
        MEMORY[0x2348A5CD4](0, v11, v7, v23);
        _Block_release(v23);

        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
        objc_msgSend(v13, sel_sizeToFit);
      }

      return;
    }

  }
  v25 = objc_msgSend(a1, sel_subviews);
  sub_22F898D28(0, &qword_255E20E10);
  v26 = sub_22F98EF44();

  if (v26 >> 62)
  {
    swift_bridgeObjectRetain();
    v27 = sub_22F98F3A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v27 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v27)
  {
    v28 = objc_msgSend(a1, sel_subviews);
    v29 = sub_22F98EF44();

    if (v29 >> 62)
    {
      swift_bridgeObjectRetain();
      v30 = sub_22F98F3A0();
      swift_bridgeObjectRelease();
      if (!v30)
        goto LABEL_22;
    }
    else
    {
      v30 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v30)
        goto LABEL_22;
    }
    if (v30 < 1)
    {
      __break(1u);
      return;
    }
    for (i = 0; i != v30; ++i)
    {
      if ((v29 & 0xC000000000000001) != 0)
        v32 = (id)MEMORY[0x2348A5F08](i, v29);
      else
        v32 = *(id *)(v29 + 8 * i + 32);
      v33 = v32;
      sub_22F8A1DA8();

    }
LABEL_22:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_22F8A21D8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E20E18);
  return sub_22F98E998();
}

void sub_22F8A2254(void *a1)
{
  id v1;
  id v2;

  v1 = objc_msgSend(a1, sel_view);
  if (v1)
  {
    v2 = v1;
    sub_22F8A1DA8(v1);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_22F8A22C4()
{
  return sub_22F98E380();
}

uint64_t sub_22F8A22FC()
{
  sub_22F8A23C0();
  return sub_22F98E3BC();
}

uint64_t sub_22F8A234C()
{
  sub_22F8A23C0();
  return sub_22F98E38C();
}

void sub_22F8A239C()
{
  sub_22F8A23C0();
  sub_22F98E3B0();
  __break(1u);
}

unint64_t sub_22F8A23C0()
{
  unint64_t result;

  result = qword_255E20E08;
  if (!qword_255E20E08)
  {
    result = MEMORY[0x2348A6784](&unk_22F993E50, &type metadata for PrivacyLink);
    atomic_store(result, (unint64_t *)&qword_255E20E08);
  }
  return result;
}

uint64_t sub_22F8A2404()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_22F8A2438()
{
  return sub_22F8A21D8();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t sub_22F8A245C(uint64_t a1)
{
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t sub_22F8A24A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255E22DB0;
  if (!qword_255E22DB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_255E22070);
    result = MEMORY[0x2348A6784](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_255E22DB0);
  }
  return result;
}

id sub_22F8A24F4(id result, uint64_t a2, char a3)
{
  if (a3 == 1)
    return (id)swift_bridgeObjectRetain();
  if (!a3)
    return result;
  return result;
}

void destroy for UIIdentityField(uint64_t a1)
{
  sub_22F8A2524(*(void **)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void sub_22F8A2524(void *a1, uint64_t a2, char a3)
{
  if (a3 == 1)
  {
    swift_bridgeObjectRelease();
  }
  else if (!a3)
  {

  }
}

uint64_t _s19ContactlessReaderUI15UIIdentityFieldOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  char v5;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_22F8A24F4(*(id *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for UIIdentityField(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  char v5;
  void *v6;
  uint64_t v7;
  char v8;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_22F8A24F4(*(id *)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_22F8A2524(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for UIIdentityField(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_22F8A2524(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for UIIdentityField(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for UIIdentityField(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_22F8A26B0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_22F8A26B8(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for UIIdentityField()
{
  return &type metadata for UIIdentityField;
}

void sub_22F8A26D0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  __asm { BR              X10 }
}

void sub_22F8A2708()
{
  void *v0;
  uint64_t v1;
  id v2;

  sub_22F98F508();
  v2 = v0;
  sub_22F98F1A8();
  sub_22F8A2524(v0, v1, 0);
}

uint64_t sub_22F8A2740()
{
  sub_22F98F508();
  return sub_22F98F508();
}

uint64_t sub_22F8A277C()
{
  sub_22F98F508();
  return sub_22F98EE6C();
}

void sub_22F8A27A0(uint64_t a1, uint64_t a2, char a3)
{
  sub_22F98F4FC();
  __asm { BR              X10 }
}

uint64_t sub_22F8A27E8()
{
  void *v0;
  uint64_t v1;
  id v2;

  sub_22F98F508();
  v2 = v0;
  sub_22F98F1A8();
  sub_22F8A2524(v0, v1, 0);
  return sub_22F98F520();
}

void sub_22F8A2894()
{
  uint64_t v0;

  sub_22F8A27A0(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

void sub_22F8A28A0(uint64_t a1)
{
  uint64_t v1;

  sub_22F8A26D0(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_BYTE *)(v1 + 16));
}

void sub_22F8A28AC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  sub_22F98F4FC();
  __asm { BR              X9 }
}

uint64_t sub_22F8A28E8()
{
  void *v0;
  uint64_t v1;
  id v2;

  sub_22F98F508();
  v2 = v0;
  sub_22F98F1A8();
  sub_22F8A2524(v0, v1, 0);
  return sub_22F98F520();
}

void sub_22F8A2994(uint64_t a1)
{
  sub_22F8A29F8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

unint64_t sub_22F8A29B4()
{
  unint64_t result;

  result = qword_255E20E20;
  if (!qword_255E20E20)
  {
    result = MEMORY[0x2348A6784](&unk_22F993F44, &type metadata for UIIdentityField);
    atomic_store(result, (unint64_t *)&qword_255E20E20);
  }
  return result;
}

void sub_22F8A29F8(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

uint64_t sub_22F8A2A38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  if (a6)
    return 0;
  sub_22F8A2B44();
  sub_22F8A24F4(v6, v9, 0);
  sub_22F8A24F4(v7, v8, 0);
  v10 = sub_22F98F19C();
  sub_22F8A2524(v7, v8, 0);
  sub_22F8A2524(v6, v9, 0);
  return v10 & 1;
}

unint64_t sub_22F8A2B44()
{
  unint64_t result;

  result = qword_255E20E28;
  if (!qword_255E20E28)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255E20E28);
  }
  return result;
}

uint64_t sub_22F8A2B80()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_22F8A2BF0()
{
  return sub_22F864050();
}

uint64_t sub_22F8A2C04()
{
  return sub_22F864050();
}

uint64_t sub_22F8A2C18()
{
  return sub_22F864050();
}

uint64_t sub_22F8A2C2C()
{
  return sub_22F864050();
}

uint64_t sub_22F8A2C40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, _BYTE *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  _BYTE v22[16];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22E10);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20F80);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = &v22[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = v2 + OBJC_IVAR____TtC19ContactlessReaderUI29IdentityRegistrationViewModel__screenState;
  v22[15] = 0;
  sub_22F98DB7C();
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v10 + 32))(v13, v12, v9);
  v14 = v2 + OBJC_IVAR____TtC19ContactlessReaderUI29IdentityRegistrationViewModel__showTermsAndConditions;
  v22[14] = 0;
  sub_22F98DB7C();
  v15 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v6 + 32);
  v15(v14, v8, v5);
  v16 = v2 + OBJC_IVAR____TtC19ContactlessReaderUI29IdentityRegistrationViewModel__disableCancel;
  v22[13] = 0;
  sub_22F98DB7C();
  v15(v16, v8, v5);
  v17 = v2 + OBJC_IVAR____TtC19ContactlessReaderUI29IdentityRegistrationViewModel__dismissUI;
  v22[12] = 0;
  sub_22F98DB7C();
  v15(v17, v8, v5);
  v18 = v2 + OBJC_IVAR____TtC19ContactlessReaderUI29IdentityRegistrationViewModel__showRegistrationFailedAlert;
  v22[11] = 0;
  sub_22F98DB7C();
  v15(v18, v8, v5);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC19ContactlessReaderUI29IdentityRegistrationViewModel_remoteProxy) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC19ContactlessReaderUI29IdentityRegistrationViewModel_connection) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC19ContactlessReaderUI29IdentityRegistrationViewModel_registrationDelayedExecution) = 0;
  v19 = (_QWORD *)(v2 + OBJC_IVAR____TtC19ContactlessReaderUI29IdentityRegistrationViewModel_dismissalHandler);
  *v19 = 0;
  v19[1] = 0;
  v20 = (_QWORD *)(v2
                 + OBJC_IVAR____TtC19ContactlessReaderUI29IdentityRegistrationViewModel_termsAndConditionsAcceptanceRequired);
  *v20 = a1;
  v20[1] = a2;
  return v2;
}

uint64_t sub_22F8A2E4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v17;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB30 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_255E29640);
  sub_22F87BC08(v5, (uint64_t)v4);
  v6 = sub_22F98DAA4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_22F87BC50((uint64_t)v4);
  }
  else
  {
    v8 = sub_22F98DA8C();
    v9 = sub_22F98F07C();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_22F85B000, v8, v9, "IdentityRegistrationViewModel deinit", v10, 2u);
      MEMORY[0x2348A6838](v10, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  v11 = v1 + OBJC_IVAR____TtC19ContactlessReaderUI29IdentityRegistrationViewModel__screenState;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20F80);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = v1 + OBJC_IVAR____TtC19ContactlessReaderUI29IdentityRegistrationViewModel__showTermsAndConditions;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22E10);
  v15 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8);
  v15(v13, v14);
  v15(v1 + OBJC_IVAR____TtC19ContactlessReaderUI29IdentityRegistrationViewModel__disableCancel, v14);
  v15(v1 + OBJC_IVAR____TtC19ContactlessReaderUI29IdentityRegistrationViewModel__dismissUI, v14);
  v15(v1 + OBJC_IVAR____TtC19ContactlessReaderUI29IdentityRegistrationViewModel__showRegistrationFailedAlert, v14);
  swift_unknownObjectRelease();

  swift_release();
  sub_22F87A9B8(*(_QWORD *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI29IdentityRegistrationViewModel_dismissalHandler));
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_22F8A30A8()
{
  sub_22F8A2E4C();
  return swift_deallocClassInstance();
}

uint64_t sub_22F8A30CC()
{
  return type metadata accessor for IdentityRegistrationViewModel();
}

uint64_t type metadata accessor for IdentityRegistrationViewModel()
{
  uint64_t result;

  result = qword_255E20E98;
  if (!qword_255E20E98)
    return swift_getSingletonMetadata();
  return result;
}

void sub_22F8A3110()
{
  unint64_t v0;
  unint64_t v1;

  sub_22F8687C4(319, qword_255E20EA8);
  if (v0 <= 0x3F)
  {
    sub_22F8687C4(319, (unint64_t *)&qword_255E1E428);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t sub_22F8A31DC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_22F98DBAC();
}

void sub_22F8A3254(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  int v16;
  uint64_t v17;
  void *v18;
  _QWORD v19[2];
  _QWORD aBlock[6];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB30 != -1)
    swift_once();
  v7 = __swift_project_value_buffer(v4, (uint64_t)qword_255E29640);
  sub_22F87BC08(v7, (uint64_t)v6);
  v8 = sub_22F98DAA4();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
  {
    sub_22F87BC50((uint64_t)v6);
  }
  else
  {
    sub_22F863858(v2, 0xD00000000000002CLL, 0x800000022F99F130, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1988]), sel_initWithListenerEndpoint_, a1);
  objc_msgSend(v10, sel_setExportedObject_, v2);
  v11 = (void *)objc_opt_self();
  v12 = objc_msgSend(v11, sel_interfaceWithProtocol_, &unk_255E440C8);
  objc_msgSend(v10, sel_setExportedInterface_, v12);

  v13 = objc_msgSend(v11, sel_interfaceWithProtocol_, &unk_255E4BEB8);
  objc_msgSend(v10, sel_setRemoteObjectInterface_, v13);

  aBlock[4] = sub_22F8A351C;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22F8736DC;
  aBlock[3] = &block_descriptor_11;
  v14 = _Block_copy(aBlock);
  v15 = objc_msgSend(v10, sel_remoteObjectProxyWithErrorHandler_, v14);
  _Block_release(v14);
  sub_22F98F25C();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E20F78);
  v16 = swift_dynamicCast();
  v17 = v19[1];
  if (!v16)
    v17 = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC19ContactlessReaderUI29IdentityRegistrationViewModel_remoteProxy) = v17;
  swift_unknownObjectRelease();
  objc_msgSend(v10, sel_resume);
  v18 = *(void **)(v2 + OBJC_IVAR____TtC19ContactlessReaderUI29IdentityRegistrationViewModel_connection);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC19ContactlessReaderUI29IdentityRegistrationViewModel_connection) = v10;

}

uint64_t sub_22F8A351C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD v17[3];
  uint64_t v18;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB30 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_255E29640);
  sub_22F87BC08(v5, (uint64_t)v4);
  v6 = sub_22F98DAA4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
    return sub_22F87BC50((uint64_t)v4);
  v9 = a1;
  v10 = a1;
  v11 = sub_22F98DA8C();
  v12 = sub_22F98F07C();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v18 = v14;
    *(_DWORD *)v13 = 136315138;
    v17[1] = v13 + 4;
    swift_getErrorValue();
    v15 = sub_22F98F49C();
    v17[2] = sub_22F878880(v15, v16, &v18);
    sub_22F98F208();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_22F85B000, v11, v12, "IdentityRegistrationUIDelegate connection invalidated with error: %s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348A6838](v14, -1, -1);
    MEMORY[0x2348A6838](v13, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v4, v6);
}

uint64_t sub_22F8A376C(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void (*v14)(char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD aBlock[7];

  v3 = sub_22F98EBC0();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v16 - v8;
  v10 = sub_22F98EB84();
  MEMORY[0x24BDAC7A8](v10);
  v18 = v1;
  if ((a1 & 1) != 0)
  {
    v19 = 1;
    sub_22F98EAF4();
    v17 = v4;
    sub_22F98DE10();
    swift_release();
    v11 = swift_allocObject();
    swift_weakInit();
    aBlock[4] = sub_22F8A47CC;
    aBlock[5] = v11;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_22F8644F0;
    aBlock[3] = &block_descriptor_21;
    _Block_copy(aBlock);
    v20 = MEMORY[0x24BEE4AF8];
    sub_22F89AF3C();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E22070);
    sub_22F8A24A4();
    sub_22F98F274();
    sub_22F98EBE4();
    swift_allocObject();
    v12 = sub_22F98EBCC();
    swift_release();
    swift_release();
    *(_QWORD *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI29IdentityRegistrationViewModel_registrationDelayedExecution) = v12;
    swift_retain();
    swift_release();
    sub_22F879058();
    v13 = (void *)sub_22F98F0F4();
    sub_22F98EBB4();
    MEMORY[0x2348A57D0](v7, 3.0);
    v14 = *(void (**)(char *, uint64_t))(v17 + 8);
    v14(v7, v3);
    sub_22F98F0DC();
    swift_release();

    v14(v9, v3);
  }
  else
  {
    v19 = 0;
    sub_22F98EAF4();
    sub_22F98DE10();
    swift_release();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  LOBYTE(aBlock[0]) = 0;
  swift_retain();
  return sub_22F98DBAC();
}

void sub_22F8A3A7C()
{
  uint64_t Strong;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  _QWORD v5[6];

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    *(_QWORD *)(Strong
              + OBJC_IVAR____TtC19ContactlessReaderUI29IdentityRegistrationViewModel_registrationDelayedExecution) = 0;
    swift_release();
    swift_release();
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(v5[0]) = 1;
    sub_22F98DBAC();
  }
  swift_beginAccess();
  v1 = swift_weakLoadStrong();
  if (v1)
  {
    v2 = *(void **)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI29IdentityRegistrationViewModel_remoteProxy);
    if (v2)
    {
      swift_unknownObjectRetain();
      swift_release();
      v3 = swift_allocObject();
      swift_beginAccess();
      swift_weakLoadStrong();
      swift_weakInit();
      swift_release();
      v5[4] = sub_22F8A481C;
      v5[5] = v3;
      v5[0] = MEMORY[0x24BDAC760];
      v5[1] = 1107296256;
      v5[2] = sub_22F89B4CC;
      v5[3] = &block_descriptor_31;
      v4 = _Block_copy(v5);
      swift_release();
      objc_msgSend(v2, sel_registerWithCompletion_, v4);
      swift_unknownObjectRelease();
      _Block_release(v4);
    }
    else
    {
      swift_release();
    }
  }
}

uint64_t sub_22F8A3C50(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  _QWORD aBlock[6];

  v4 = sub_22F98EB84();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_22F98EB9C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22F879058();
  v12 = (void *)sub_22F98F0F4();
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = a2;
  aBlock[4] = sub_22F8A4848;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22F8644F0;
  aBlock[3] = &block_descriptor_37;
  v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_22F98EB90();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_22F89AF3C();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E22070);
  sub_22F8A24A4();
  sub_22F98F274();
  MEMORY[0x2348A5CD4](0, v11, v7, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_22F8A3E24(char a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t Strong;
  _BYTE v13[40];

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v13[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((a1 & 1) != 0)
  {
    swift_beginAccess();
    result = swift_weakLoadStrong();
    if (result)
    {
      *(_QWORD *)&v13[-16] = MEMORY[0x24BDAC7A8](result);
      v13[-8] = 2;
      sub_22F98EAF4();
      sub_22F98DE10();
      swift_release();
      return swift_release();
    }
  }
  else
  {
    if (qword_255E1DB30 != -1)
      swift_once();
    v6 = __swift_project_value_buffer(v2, (uint64_t)qword_255E29640);
    sub_22F87BC08(v6, (uint64_t)v4);
    v7 = sub_22F98DAA4();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v4, 1, v7) == 1)
    {
      sub_22F87BC50((uint64_t)v4);
    }
    else
    {
      v9 = sub_22F98DA8C();
      v10 = sub_22F98F088();
      if (os_log_type_enabled(v9, v10))
      {
        v11 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v11 = 0;
        _os_log_impl(&dword_22F85B000, v9, v10, "Could not complete registration", v11, 2u);
        MEMORY[0x2348A6838](v11, -1, -1);
      }

      (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v4, v7);
    }
    swift_beginAccess();
    Strong = swift_weakLoadStrong();
    if (Strong)
    {
      *(_QWORD *)&v13[-16] = MEMORY[0x24BDAC7A8](Strong);
      v13[-8] = 0;
      sub_22F98EAF4();
      sub_22F98DE10();
      swift_release();
      swift_release();
    }
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      swift_getKeyPath();
      swift_getKeyPath();
      v13[16] = 1;
      sub_22F98DBAC();
    }
    swift_beginAccess();
    result = swift_weakLoadStrong();
    if (result)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      v13[15] = 0;
      return sub_22F98DBAC();
    }
  }
  return result;
}

uint64_t sub_22F8A4168@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_22F98DB70();
  *a1 = result;
  return result;
}

uint64_t sub_22F8A4190()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  void *v10;
  void *v11;
  _QWORD aBlock[6];

  v1 = sub_22F98EB84();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_22F98EB9C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI29IdentityRegistrationViewModel_registrationDelayedExecution))
  {
    *(_QWORD *)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI29IdentityRegistrationViewModel_registrationDelayedExecution) = 0;
    sub_22F98EBD8();
    swift_release();
  }
  v9 = *(void **)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI29IdentityRegistrationViewModel_remoteProxy);
  if (v9)
    objc_msgSend(v9, sel_cancelRegistration);
  sub_22F879058();
  v10 = (void *)sub_22F98F0F4();
  aBlock[4] = sub_22F8A472C;
  aBlock[5] = v0;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22F8644F0;
  aBlock[3] = &block_descriptor_3;
  v11 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_22F98EB90();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_22F89AF3C();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E22070);
  sub_22F8A24A4();
  sub_22F98F274();
  MEMORY[0x2348A5CD4](0, v8, v4, v11);
  _Block_release(v11);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_22F8A4380()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_22F98DBAC();
}

uint64_t storeEnumTagSinglePayload for IdentityRegistrationViewModel.RegistrationState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_22F8A4464 + 4 * byte_22F993FB5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_22F8A4498 + 4 * byte_22F993FB0[v4]))();
}

uint64_t sub_22F8A4498(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22F8A44A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22F8A44A8);
  return result;
}

uint64_t sub_22F8A44B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22F8A44BCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_22F8A44C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22F8A44C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IdentityRegistrationViewModel.RegistrationState()
{
  return &type metadata for IdentityRegistrationViewModel.RegistrationState;
}

unint64_t sub_22F8A44E8()
{
  unint64_t result;

  result = qword_255E20F70;
  if (!qword_255E20F70)
  {
    result = MEMORY[0x2348A6784](&unk_22F9940A4, &type metadata for IdentityRegistrationViewModel.RegistrationState);
    atomic_store(result, (unint64_t *)&qword_255E20F70);
  }
  return result;
}

void sub_22F8A452C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  void (*v3)(_QWORD);
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;

  v1 = v0;
  v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI29IdentityRegistrationViewModel_dismissalHandler);
  v3 = *(void (**)(_QWORD))(v0
                                     + OBJC_IVAR____TtC19ContactlessReaderUI29IdentityRegistrationViewModel_dismissalHandler);
  if (v3)
  {
    swift_retain();
    v3(0);
    sub_22F87A9B8((uint64_t)v3);
    v4 = *v2;
    *v2 = 0;
    v2[1] = 0;
    sub_22F87A9B8(v4);
  }
  v5 = *(void **)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI29IdentityRegistrationViewModel_remoteProxy);
  if (v5)
    objc_msgSend(v5, sel_identityRegUIFinished);
  v6 = OBJC_IVAR____TtC19ContactlessReaderUI29IdentityRegistrationViewModel_connection;
  v7 = *(void **)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI29IdentityRegistrationViewModel_connection);
  if (v7)
  {
    objc_msgSend(v7, sel_setExportedObject_, 0);
    v7 = *(void **)(v1 + v6);
  }
  *(_QWORD *)(v1 + v6) = 0;

}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t sub_22F8A45F0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_22F8A466C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_22F98DBAC();
}

uint64_t sub_22F8A46DC@<X0>(_BYTE *a1@<X8>)
{
  return sub_22F878708(a1);
}

uint64_t sub_22F8A46F0()
{
  return sub_22F878814();
}

uint64_t sub_22F8A4704@<X0>(_BYTE *a1@<X8>)
{
  return sub_22F878708(a1);
}

uint64_t sub_22F8A4718()
{
  return sub_22F878814();
}

uint64_t sub_22F8A472C()
{
  return sub_22F8A4380();
}

uint64_t sub_22F8A4734@<X0>(_BYTE *a1@<X8>)
{
  return sub_22F878708(a1);
}

uint64_t sub_22F8A4758()
{
  return sub_22F878814();
}

uint64_t sub_22F8A4784()
{
  return sub_22F8A31DC();
}

uint64_t sub_22F8A47A8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void sub_22F8A47CC()
{
  sub_22F8A3A7C();
}

uint64_t sub_22F8A47D4@<X0>(_BYTE *a1@<X8>)
{
  return sub_22F878708(a1);
}

uint64_t sub_22F8A47F8()
{
  return sub_22F878814();
}

uint64_t sub_22F8A481C(char a1)
{
  uint64_t v1;

  return sub_22F8A3C50(a1, v1);
}

uint64_t sub_22F8A4824()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22F8A4848()
{
  uint64_t v0;

  return sub_22F8A3E24(*(_BYTE *)(v0 + 16));
}

uint64_t sub_22F8A487C()
{
  return sub_22F8A4784();
}

uint64_t destroy for IdentityTermsAndConditions()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for IdentityTermsAndConditions(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for IdentityTermsAndConditions(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for IdentityTermsAndConditions(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for IdentityTermsAndConditions(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IdentityTermsAndConditions(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for IdentityTermsAndConditions()
{
  return &type metadata for IdentityTermsAndConditions;
}

uint64_t sub_22F8A4A34()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22F8A4A44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v28[16];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20FB0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v28[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20F90);
  MEMORY[0x24BDAC7A8](v11);
  v13 = &v28[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)v10 = sub_22F98E128();
  *((_QWORD *)v10 + 1) = 0;
  v10[16] = 1;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20FC8);
  sub_22F8A4C48(a3, a4, (uint64_t)&v10[*(int *)(v14 + 44)]);
  v15 = sub_22F98E410();
  sub_22F98DBF4();
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v23 = v22;
  sub_22F87ABDC((uint64_t)v10, (uint64_t)v13, &qword_255E20FB0);
  v24 = &v13[*(int *)(v11 + 36)];
  *v24 = v15;
  *((_QWORD *)v24 + 1) = v17;
  *((_QWORD *)v24 + 2) = v19;
  *((_QWORD *)v24 + 3) = v21;
  *((_QWORD *)v24 + 4) = v23;
  v24[40] = 0;
  sub_22F87AC20((uint64_t)v10, &qword_255E20FB0);
  v29 = a1;
  v30 = a2;
  v31 = a3;
  v32 = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E20F98);
  sub_22F8A5FA0();
  v25 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20FB8);
  v26 = sub_22F87AA84(&qword_255E20FC0, &qword_255E20FB8, MEMORY[0x24BDEDAF0]);
  v33 = v25;
  v34 = v26;
  swift_getOpaqueTypeConformance2();
  sub_22F98E788();
  return sub_22F87AC20((uint64_t)v13, &qword_255E20F90);
}

uint64_t sub_22F8A4C48@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t KeyPath;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(uint64_t);
  uint64_t result;
  char *v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  uint64_t v123;
  uint64_t v124;
  char v125;
  uint64_t v126;
  uint64_t v127;

  v107 = a2;
  v106 = a1;
  v116 = a3;
  v110 = sub_22F98E11C();
  v109 = *(_QWORD *)(v110 - 8);
  MEMORY[0x24BDAC7A8](v110);
  v108 = (char *)&v95 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20FF8);
  MEMORY[0x24BDAC7A8](v4);
  v111 = (char *)&v95 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21000);
  MEMORY[0x24BDAC7A8](v113);
  v112 = (uint64_t)&v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21008);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v115 = (char *)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v114 = (uint64_t)&v95 - v10;
  v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F048);
  MEMORY[0x24BDAC7A8](v95);
  v12 = (char *)&v95 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21010);
  v98 = *(_QWORD *)(v99 - 8);
  MEMORY[0x24BDAC7A8](v99);
  v97 = (char *)&v95 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21018);
  MEMORY[0x24BDAC7A8](v96);
  v100 = (char *)&v95 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21020);
  MEMORY[0x24BDAC7A8](v102);
  v103 = (uint64_t)&v95 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21028);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v105 = (uint64_t)&v95 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v101 = (char *)&v95 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v104 = (uint64_t)&v95 - v21;
  sub_22F98E0D4();
  if (qword_255E1DC30 != -1)
    swift_once();
  v22 = (id)qword_255E29840;
  v23 = sub_22F98E5C0();
  v25 = v24;
  v27 = v26 & 1;
  sub_22F98E4AC();
  v28 = sub_22F98E578();
  v30 = v29;
  v32 = v31 & 1;
  sub_22F87E294(v23, v25, v27);
  swift_bridgeObjectRelease();
  sub_22F98E470();
  v33 = sub_22F98E5A8();
  v35 = v34;
  v37 = v36;
  swift_release();
  sub_22F87E294(v28, v30, v32);
  swift_bridgeObjectRelease();
  if (qword_255E1DBE8 != -1)
    swift_once();
  v38 = v37 & 1;
  v39 = sub_22F98E590();
  v41 = v40;
  v43 = v42;
  v45 = v44;
  sub_22F87E294(v33, v35, v38);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v47 = swift_getKeyPath();
  v48 = swift_getKeyPath();
  v117 = v39;
  v118 = v41;
  v119 = v43 & 1;
  v120 = v45;
  v121 = KeyPath;
  v122 = 1;
  v123 = v47;
  v124 = 3;
  v125 = 0;
  v126 = v48;
  v127 = 0x3FE0000000000000;
  v49 = *MEMORY[0x24BDECEA0];
  v50 = sub_22F98DE70();
  v51 = (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50];
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 104))(v12, v49, v50);
  sub_22F862548(&qword_255E1F078, v51, MEMORY[0x24BDECF78]);
  result = sub_22F98ED70();
  if ((result & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E20548);
    sub_22F8947D0();
    sub_22F87AA84(&qword_255E1F088, &qword_255E1F048, MEMORY[0x24BEE30C8]);
    v53 = v97;
    sub_22F98E668();
    sub_22F87AC20((uint64_t)v12, &qword_255E1F048);
    sub_22F87E294(v117, v118, v119);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    v54 = sub_22F98E428();
    sub_22F8B9AFC();
    sub_22F98DBF4();
    v56 = v55;
    v58 = v57;
    v60 = v59;
    v62 = v61;
    v63 = v98;
    v64 = (uint64_t)v100;
    v65 = v99;
    (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v100, v53, v99);
    v66 = v64 + *(int *)(v96 + 36);
    *(_BYTE *)v66 = v54;
    *(_QWORD *)(v66 + 8) = v56;
    *(_QWORD *)(v66 + 16) = v58;
    *(_QWORD *)(v66 + 24) = v60;
    *(_QWORD *)(v66 + 32) = v62;
    *(_BYTE *)(v66 + 40) = 0;
    (*(void (**)(char *, uint64_t))(v63 + 8))(v53, v65);
    v67 = sub_22F98E434();
    sub_22F8B9AFC();
    sub_22F98DBF4();
    v69 = v68;
    v71 = v70;
    v73 = v72;
    v75 = v74;
    v76 = v103;
    sub_22F87ABDC(v64, v103, &qword_255E21018);
    v77 = v76 + *(int *)(v102 + 36);
    *(_BYTE *)v77 = v67;
    *(_QWORD *)(v77 + 8) = v69;
    *(_QWORD *)(v77 + 16) = v71;
    *(_QWORD *)(v77 + 24) = v73;
    *(_QWORD *)(v77 + 32) = v75;
    *(_BYTE *)(v77 + 40) = 0;
    sub_22F87AC20(v64, &qword_255E21018);
    sub_22F98E0D4();
    v78 = (id)qword_255E29840;
    v79 = sub_22F98E5C0();
    v81 = v80;
    LOBYTE(v63) = v82 & 1;
    sub_22F87E2D8(&qword_255E21030, &qword_255E21020, (uint64_t (*)(void))sub_22F8A6138, MEMORY[0x24BDECC60]);
    v83 = (uint64_t)v101;
    sub_22F98E68C();
    sub_22F87E294(v79, v81, v63);
    swift_bridgeObjectRelease();
    sub_22F87AC20(v76, &qword_255E21020);
    v84 = v104;
    sub_22F87B2B4(v83, v104, &qword_255E21028);
    v117 = v106;
    v118 = v107;
    v119 = 1;
    swift_bridgeObjectRetain();
    v85 = v108;
    sub_22F98E0F8();
    sub_22F8A6210();
    v86 = (uint64_t)v111;
    sub_22F98E6F8();
    (*(void (**)(char *, uint64_t))(v109 + 8))(v85, v110);
    swift_bridgeObjectRelease();
    v87 = sub_22F98EA88();
    v88 = v112;
    sub_22F8F9930(0.0, 0, 0.0, 1, INFINITY, 0, 0.0, 0, v112, 500.0, 0, INFINITY, 0, v87, v89);
    sub_22F87AC20(v86, &qword_255E20FF8);
    sub_22F87E2D8((unint64_t *)&qword_255E21048, &qword_255E21000, (uint64_t (*)(void))sub_22F8A6254, MEMORY[0x24BDEDBB8]);
    v90 = (uint64_t)v115;
    sub_22F98E704();
    sub_22F87AC20(v88, &qword_255E21000);
    v91 = v114;
    sub_22F87B2B4(v90, v114, &qword_255E21008);
    v92 = v105;
    sub_22F87ABDC(v84, v105, &qword_255E21028);
    sub_22F87ABDC(v91, v90, &qword_255E21008);
    v93 = v116;
    sub_22F87ABDC(v92, v116, &qword_255E21028);
    v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21058);
    sub_22F87ABDC(v90, v93 + *(int *)(v94 + 48), &qword_255E21008);
    sub_22F87AC20(v91, &qword_255E21008);
    sub_22F87AC20(v84, &qword_255E21028);
    sub_22F87AC20(v90, &qword_255E21008);
    return sub_22F87AC20(v92, &qword_255E21028);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_22F8A5700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE v15[16];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v8 = sub_22F98E248();
  MEMORY[0x24BDAC7A8](v8);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20FB8);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = &v15[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_22F98E23C();
  v16 = a1;
  v17 = a2;
  v18 = a3;
  v19 = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E20FD0);
  sub_22F87AA84(&qword_255E20FD8, &qword_255E20FD0, MEMORY[0x24BDF5428]);
  sub_22F98DF0C();
  v13 = sub_22F87AA84(&qword_255E20FC0, &qword_255E20FB8, MEMORY[0x24BDEDAF0]);
  MEMORY[0x2348A4E34](v12, v9, v13);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_22F8A5860@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  void (*v28)(char *, uint64_t);
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;

  v33 = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20FE0);
  v32 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v31 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v30 = (char *)&v30 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v30 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a1;
  *(_QWORD *)(v19 + 24) = a2;
  *(_QWORD *)(v19 + 32) = a3;
  *(_QWORD *)(v19 + 40) = a4;
  *(_BYTE *)(v19 + 48) = 0;
  swift_retain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E204E8);
  sub_22F8A6044();
  sub_22F98E920();
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = a1;
  *(_QWORD *)(v20 + 24) = a2;
  *(_QWORD *)(v20 + 32) = a3;
  *(_QWORD *)(v20 + 40) = a4;
  *(_BYTE *)(v20 + 48) = 1;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_22F98E920();
  v21 = v32;
  v22 = *(void (**)(char *, char *, uint64_t))(v32 + 16);
  v23 = v30;
  v22(v30, v18, v9);
  v24 = v31;
  v22(v31, v16, v9);
  v25 = v33;
  v22(v33, v23, v9);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E20FF0);
  v27 = &v25[*(int *)(v26 + 48)];
  *(_QWORD *)v27 = 0;
  v27[8] = 1;
  v22(&v25[*(int *)(v26 + 64)], v24, v9);
  v28 = *(void (**)(char *, uint64_t))(v21 + 8);
  v28(v16, v9);
  v28(v18, v9);
  v28(v24, v9);
  return ((uint64_t (*)(char *, uint64_t))v28)(v23, v9);
}

uint64_t sub_22F8A5AD4()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;

  sub_22F98E0D4();
  if (qword_255E1DC30 != -1)
    swift_once();
  v0 = (id)qword_255E29840;
  v1 = sub_22F98E5C0();
  v3 = v2;
  v5 = v4;
  if (qword_255E1DC10 != -1)
    swift_once();
  v6 = sub_22F98E590();
  v8 = v7;
  v10 = v9 & 1;
  sub_22F87E294(v1, v3, v5 & 1);
  swift_bridgeObjectRelease();
  sub_22F98E704();
  sub_22F87E294(v6, v8, v10);
  return swift_bridgeObjectRelease();
}

uint64_t sub_22F8A5C8C()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;

  sub_22F98E0D4();
  if (qword_255E1DC30 != -1)
    swift_once();
  v0 = (id)qword_255E29840;
  v1 = sub_22F98E5C0();
  v3 = v2;
  v5 = v4 & 1;
  sub_22F98E524();
  v6 = sub_22F98E5A8();
  v8 = v7;
  v10 = v9;
  swift_release();
  sub_22F87E294(v1, v3, v5);
  swift_bridgeObjectRelease();
  if (qword_255E1DC10 != -1)
    swift_once();
  v11 = sub_22F98E590();
  v13 = v12;
  v15 = v14 & 1;
  sub_22F87E294(v6, v8, v10 & 1);
  swift_bridgeObjectRelease();
  sub_22F98E704();
  sub_22F87E294(v11, v13, v15);
  return swift_bridgeObjectRelease();
}

uint64_t sub_22F8A5E94()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E20F88);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20F90);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20F98);
  sub_22F8A5FA0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20FB8);
  sub_22F87AA84(&qword_255E20FC0, &qword_255E20FB8, MEMORY[0x24BDEDAF0]);
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  return sub_22F98DED0();
}

uint64_t sub_22F8A5F94()
{
  uint64_t *v0;

  return sub_22F8A4A44(v0[2], v0[3], v0[4], v0[5]);
}

unint64_t sub_22F8A5FA0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E20FA0;
  if (!qword_255E20FA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20F90);
    v2[0] = sub_22F87AA84(&qword_255E20FA8, &qword_255E20FB0, MEMORY[0x24BDF4700]);
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E20FA0);
  }
  return result;
}

uint64_t sub_22F8A6024()
{
  uint64_t *v0;

  return sub_22F8A5700(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_22F8A6030@<X0>(char *a1@<X8>)
{
  uint64_t *v1;

  return sub_22F8A5860(v1[2], v1[3], v1[4], v1[5], a1);
}

unint64_t sub_22F8A6044()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255E20FE8;
  if (!qword_255E20FE8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E204E8);
    v2 = sub_22F862548((unint64_t *)&qword_255E1F478, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    v3[0] = MEMORY[0x24BDF1F80];
    v3[1] = v2;
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_255E20FE8);
  }
  return result;
}

uint64_t objectdestroyTm_5()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_22F8A60F8()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(*(unsigned __int8 *)(v0 + 48));
}

unint64_t sub_22F8A6138()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = qword_255E21038;
  if (!qword_255E21038)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E21018);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20548);
    v2[3] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1F048);
    v2[4] = sub_22F8947D0();
    v2[5] = sub_22F87AA84(&qword_255E1F088, &qword_255E1F048, MEMORY[0x24BEE30C8]);
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E21038);
  }
  return result;
}

unint64_t sub_22F8A6210()
{
  unint64_t result;

  result = qword_255E21040;
  if (!qword_255E21040)
  {
    result = MEMORY[0x2348A6784](&unk_22F99A0DC, &type metadata for HTMLView);
    atomic_store(result, (unint64_t *)&qword_255E21040);
  }
  return result;
}

unint64_t sub_22F8A6254()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E21050;
  if (!qword_255E21050)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20FF8);
    v2[0] = sub_22F8A6210();
    v2[1] = sub_22F862548((unint64_t *)&qword_255E1F478, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E21050);
  }
  return result;
}

uint64_t sub_22F8A62D8()
{
  return sub_22F87AA84(&qword_255E21060, &qword_255E21068, MEMORY[0x24BDED358]);
}

uint64_t destroy for RegFooterBackground()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for RegFooterBackground(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v4 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for RegFooterBackground(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

uint64_t assignWithTake for RegFooterBackground(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

ValueMetadata *type metadata accessor for RegFooterBackground()
{
  return &type metadata for RegFooterBackground;
}

uint64_t sub_22F8A64E8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22F8A64F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _OWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  __int128 v15;
  __int128 v16;
  uint64_t (*v17)();
  __int128 v18;
  __int128 v19;
  uint64_t (**v20)();
  __int128 v22;
  char v23;
  uint64_t v24;

  v2 = (_OWORD *)v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21070);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (uint64_t *)((char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21078);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v6 = sub_22F98EA88();
  v6[1] = v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21080);
  sub_22F8A6708(v1, (uint64_t *)((char *)v6 + *(int *)(v12 + 44)));
  v22 = *(_OWORD *)v1;
  v23 = *(_BYTE *)(v1 + 16);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F098);
  MEMORY[0x2348A5560](&v24, v13);
  LOBYTE(v22) = v24;
  v14 = (_OWORD *)swift_allocObject();
  v15 = *(_OWORD *)(v1 + 16);
  v14[1] = *(_OWORD *)v1;
  v14[2] = v15;
  v16 = *(_OWORD *)(v1 + 48);
  v14[3] = *(_OWORD *)(v1 + 32);
  v14[4] = v16;
  sub_22F8A6CBC(v1);
  sub_22F8A6D0C();
  sub_22F98E794();
  swift_release();
  sub_22F87AC20((uint64_t)v6, &qword_255E21070);
  v17 = (uint64_t (*)())swift_allocObject();
  v18 = v2[1];
  *((_OWORD *)v17 + 1) = *v2;
  *((_OWORD *)v17 + 2) = v18;
  v19 = v2[3];
  *((_OWORD *)v17 + 3) = v2[2];
  *((_OWORD *)v17 + 4) = v19;
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(a1, v10, v7);
  v20 = (uint64_t (**)())(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255E21090) + 36));
  *v20 = sub_22F8A6D98;
  v20[1] = v17;
  v20[2] = 0;
  v20[3] = 0;
  sub_22F8A6CBC((uint64_t)v2);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_22F8A6708@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  char v37;

  v4 = sub_22F98EA4C();
  v30 = *(_QWORD *)(v4 - 8);
  v31 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21098);
  MEMORY[0x24BDAC7A8](v29);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E210A0);
  v34 = *(_QWORD *)(v9 - 8);
  v35 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E210A8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v28 - v16;
  v36 = *(_OWORD *)(a1 + 40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3B0);
  sub_22F98E8FC();
  v18 = 0;
  v19 = 0;
  v20 = 0;
  if (v37 == 1)
  {
    if (qword_255E1DBF8 != -1)
      swift_once();
    v18 = qword_255E29790;
    swift_retain();
    v20 = 0x3FF0000000000000;
    v19 = 256;
  }
  v32 = v19;
  v33 = v20;
  v36 = *(_OWORD *)(a1 + 24);
  sub_22F98E8FC();
  if (v37 == 1)
  {
    sub_22F98EA40();
    v22 = v30;
    v21 = v31;
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v8, v6, v31);
    *(_WORD *)&v8[*(int *)(v29 + 56)] = 256;
    (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v21);
    sub_22F87ABDC((uint64_t)v8, (uint64_t)v11, &qword_255E21098);
    v23 = v35;
    *(_QWORD *)&v11[*(int *)(v35 + 36)] = 0x4000000000000000;
    sub_22F87AC20((uint64_t)v8, &qword_255E21098);
    sub_22F8A6EA0((uint64_t)v11, (uint64_t)v17);
    v24 = 0;
  }
  else
  {
    v24 = 1;
    v23 = v35;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56))(v17, v24, 1, v23);
  sub_22F87ABDC((uint64_t)v17, (uint64_t)v15, &qword_255E210A8);
  v25 = v32;
  *a2 = v18;
  a2[1] = v25;
  a2[2] = v33;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E210B0);
  sub_22F87ABDC((uint64_t)v15, (uint64_t)a2 + *(int *)(v26 + 48), &qword_255E210A8);
  swift_retain();
  sub_22F87AC20((uint64_t)v17, &qword_255E210A8);
  sub_22F87AC20((uint64_t)v15, &qword_255E210A8);
  return swift_release();
}

uint64_t sub_22F8A6A10(uint64_t a1, _BYTE *a2)
{
  uint64_t v3;
  uint64_t v4;

  if (*a2 == 1)
  {
    MEMORY[0x24BDAC7A8](a1);
    sub_22F98EAF4();
    sub_22F98DE10();
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3B0);
    return sub_22F98E908();
  }
  else
  {
    v3 = sub_22F98EB18();
    MEMORY[0x24BDAC7A8](v3);
    sub_22F98DE10();
    swift_release();
    sub_22F98EB18();
    sub_22F98EAD0();
    v4 = swift_release();
    MEMORY[0x24BDAC7A8](v4);
    sub_22F98DE10();
    return swift_release();
  }
}

uint64_t sub_22F8A6BA8()
{
  uint64_t v0;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F098);
  MEMORY[0x2348A5560](&v2);
  LOBYTE(v2) = (v2 & 1) == 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3B0);
  sub_22F98E908();
  MEMORY[0x2348A5560](&v2, v0);
  return sub_22F98E908();
}

uint64_t sub_22F8A6C78@<X0>(uint64_t a1@<X8>)
{
  return sub_22F8A64F8(a1);
}

uint64_t sub_22F8A6CB4(uint64_t a1, _BYTE *a2)
{
  return sub_22F8A6A10(a1, a2);
}

uint64_t sub_22F8A6CBC(uint64_t a1)
{
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

unint64_t sub_22F8A6D0C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255E21088;
  if (!qword_255E21088)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E21070);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDF4750], v1);
    atomic_store(result, (unint64_t *)&qword_255E21088);
  }
  return result;
}

uint64_t objectdestroyTm_6()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22F8A6D98()
{
  return sub_22F8A6BA8();
}

uint64_t sub_22F8A6DA0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3B0);
  return sub_22F98E908();
}

uint64_t sub_22F8A6DF8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3B0);
  return sub_22F98E908();
}

uint64_t sub_22F8A6E4C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3B0);
  return sub_22F98E908();
}

uint64_t sub_22F8A6EA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E210A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_22F8A6EEC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  result = qword_255E210B8;
  if (!qword_255E210B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E21090);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E21070);
    v3 = sub_22F8A6D0C();
    v4[2] = v2;
    v4[3] = MEMORY[0x24BEE1328];
    v4[4] = v3;
    v4[5] = MEMORY[0x24BEE1340];
    v4[0] = swift_getOpaqueTypeConformance2();
    v4[1] = MEMORY[0x24BDF0910];
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_255E210B8);
  }
  return result;
}

double sub_22F8A6FA4(uint64_t a1, char a2)
{
  double result;

  result = *(double *)&a1;
  if ((a2 & 1) != 0)
    return 10.0;
  return result;
}

uint64_t sub_22F8A6FC4(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_22F8A7248(a9, a1, a2, a3, a4);
}

uint64_t sub_22F8A6FD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_22F8A7028(a1, a2, a3, a4, a5, a6, a7, a8, a9, MEMORY[0x24BDF44F8]);
}

uint64_t sub_22F8A6FFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_22F8A7028(a1, a2, a3, a4, a5, a6, a7, a8, a9, MEMORY[0x24BDF4500]);
}

uint64_t sub_22F8A7028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t))
{
  return a10(a1);
}

void (*sub_22F8A7064(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_22F98DBD0();
  return sub_22F8A70C0;
}

void sub_22F8A70C0(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t type metadata accessor for $s19ContactlessReaderUI0026PINKeypadLayoutswift_DsAGgfMX75_0_33_45E770EE80A18D935CB7FC41875A0C43Ll7PreviewfMf_15PreviewRegistryfMu_.Handler()
{
  return objc_opt_self();
}

uint64_t sub_22F8A7110(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E22060);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_22F991B40;
  sub_22F8712EC(a1);
  v3 = sub_22F98EE18();
  *(_QWORD *)(v2 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 40) = v4;
  sub_22F98F4D8();
  return swift_bridgeObjectRelease();
}

ValueMetadata *type metadata accessor for PINKeypadLayout()
{
  return &type metadata for PINKeypadLayout;
}

unint64_t sub_22F8A71BC()
{
  unint64_t result;

  result = qword_255E21168;
  if (!qword_255E21168)
  {
    result = MEMORY[0x2348A6784](MEMORY[0x24BDEEF18], MEMORY[0x24BDEEF38]);
    atomic_store(result, (unint64_t *)&qword_255E21168);
  }
  return result;
}

unint64_t sub_22F8A7204()
{
  unint64_t result;

  result = qword_255E21170;
  if (!qword_255E21170)
  {
    result = MEMORY[0x2348A6784](&unk_22F9944A4, &type metadata for PINKeypadLayout);
    atomic_store(result, (unint64_t *)&qword_255E21170);
  }
  return result;
}

uint64_t sub_22F8A7248(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t result;
  CGFloat v34;
  CGFloat v35;
  char *v36;
  uint64_t v37;
  char *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t *, _QWORD);
  uint64_t v44;
  char *v45;
  int v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t, char *);
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  void (*v66)(char *, uint64_t, uint64_t);
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  CGFloat v71;
  CGFloat v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81[4];
  uint64_t v82;
  CGRect v83;
  CGRect v84;
  CGRect v85;
  CGRect v86;

  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21178);
  v76 = *(_QWORD *)(v80 - 8);
  MEMORY[0x24BDAC7A8](v80);
  v65 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21180);
  MEMORY[0x24BDAC7A8](v11);
  v79 = (uint64_t)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_22F98DDE0();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v75 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v61 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21188);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v62 = (char *)&v61 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v61 - v22;
  v24 = sub_22F98DE1C();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v61 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21190);
  MEMORY[0x24BDAC7A8](v28);
  v77 = (char *)&v61 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_255E21198);
  MEMORY[0x24BDAC7A8](v78);
  v31 = (char *)&v61 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_22F8A78E4(&qword_255E211A0, MEMORY[0x24BDEC7A0]);
  sub_22F98F010();
  result = sub_22F98F01C();
  if (v81[0] != v82)
  {
    v69 = v18;
    v83.origin.x = a2;
    v83.origin.y = a3;
    v83.size.width = a4;
    v83.size.height = a5;
    v34 = CGRectGetWidth(v83) / 3.0;
    v84.origin.x = a2;
    v84.origin.y = a3;
    v84.size.width = a4;
    v84.size.height = a5;
    v35 = CGRectGetHeight(v84) * 0.25;
    v72 = v34;
    v71 = v35;
    v85.origin.x = a2;
    v85.origin.y = a3;
    v85.size.width = a4;
    v85.size.height = a5;
    CGRectGetMinX(v85);
    v86.size.height = a5;
    v86.origin.x = a2;
    v86.origin.y = a3;
    v86.size.width = a4;
    CGRectGetMinY(v86);
    v36 = v77;
    v66 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
    v66(v77, a1, v24);
    v68 = v25;
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v27, v36, v24);
    sub_22F8A78E4(&qword_255E211A8, MEMORY[0x24BDEC798]);
    v67 = v27;
    sub_22F98EF20();
    v64 = *((int *)v78 + 9);
    *(_QWORD *)&v31[v64] = 0;
    v37 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255E211B0) + 36);
    v78 = v31;
    v38 = &v31[v37];
    v39 = v62;
    v77 = (char *)v13;
    v40 = v24;
    v73 = v32;
    v74 = v24;
    v70 = v38;
    v63 = v23;
    while (1)
    {
      v41 = *(_QWORD *)v38;
      v42 = (uint64_t)v78;
      sub_22F98F01C();
      if (v41 == v81[0])
        break;
      v43 = (void (*)(uint64_t *, _QWORD))sub_22F98F034();
      v44 = v79;
      (*(void (**)(uint64_t))(v14 + 16))(v79);
      v43(v81, 0);
      v45 = v67;
      v66(v67, v42, v40);
      sub_22F98F028();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v45, v40);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(v44, 0, 1, v13);
      v46 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v44, 1, v13);
      v47 = v69;
      if (v46 == 1)
        goto LABEL_6;
      v49 = v80;
      v50 = *(void (**)(char *, uint64_t, char *))(v14 + 32);
      v51 = v77;
      v50(v69, v79, v77);
      v52 = v47;
      v53 = &v65[*(int *)(v49 + 48)];
      v54 = (uint64_t)v78;
      v55 = v64;
      v56 = *(_QWORD *)&v78[v64];
      result = ((uint64_t (*)(char *, char *, char *))v50)(v53, v52, v51);
      if (__OFADD__(v56, 1))
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v54 + v55) = v56 + 1;
      v57 = (char *)v39 + *(int *)(v49 + 48);
      *v39 = v56;
      v50(v57, (uint64_t)v53, v51);
      v48 = 0;
      v23 = v63;
LABEL_9:
      v58 = v76;
      v59 = v80;
      (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v76 + 56))(v39, v48, 1, v80);
      sub_22F8A7924((uint64_t)v39, (uint64_t)v23);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v23, 1, v59) == 1)
        return sub_22F87AC20((uint64_t)v78, &qword_255E21198);
      v60 = v75;
      v13 = (uint64_t)v77;
      (*(void (**)(char *, char *, char *))(v14 + 32))(v75, &v23[*(int *)(v80 + 48)], v77);
      sub_22F98EB6C();
      LOBYTE(v81[0]) = 0;
      LOBYTE(v82) = 0;
      sub_22F98DDD4();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v60, v13);
      v40 = v74;
      v38 = v70;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v79, 1, 1, v13);
LABEL_6:
    sub_22F87AC20(v79, &qword_255E21180);
    v48 = 1;
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_22F8A78E4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_22F98DE1C();
    result = MEMORY[0x2348A6784](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22F8A7924(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21188);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_22F8A796C()
{
  void *result;

  type metadata accessor for AppManager();
  swift_allocObject();
  result = (void *)sub_22F8A80F8();
  off_255E211B8 = result;
  return result;
}

uint64_t static AppManager.shared.getter()
{
  if (qword_255E1DB70 != -1)
    swift_once();
  swift_beginAccess();
  return swift_retain();
}

uint64_t static AppManager.shared.setter(void *a1)
{
  if (qword_255E1DB70 != -1)
    swift_once();
  swift_beginAccess();
  off_255E211B8 = a1;
  return swift_release();
}

uint64_t (*static AppManager.shared.modify())()
{
  if (qword_255E1DB70 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_22F8A7AF4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 16);
  v5 = *(_QWORD *)(v3 + 24);
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = &unk_255E21568;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return sub_22F88BD70(v4);
}

uint64_t sub_22F8A7B7C(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_22F8A7BD4;
  return v5();
}

uint64_t sub_22F8A7BD4(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (!v1)
    **(_BYTE **)(v4 + 16) = a1 & 1;
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_22F8A7C34(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = &unk_255E21560;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *a2;
  swift_beginAccess();
  v8 = *(_QWORD *)(v7 + 16);
  *(_QWORD *)(v7 + 16) = v6;
  *(_QWORD *)(v7 + 24) = v5;
  sub_22F88BD70(v3);
  return sub_22F87A9B8(v8);
}

uint64_t sub_22F8A7CE0(int *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t);

  v4 = (uint64_t (*)(uint64_t))((char *)a1 + *a1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_22F8A7D48;
  return v4(v1 + 24);
}

uint64_t sub_22F8A7D48()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;

  v2 = *v1;
  v3 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    v4 = *(uint64_t (**)(uint64_t))(v3 + 8);
    v5 = 0;
  }
  else
  {
    v5 = *(unsigned __int8 *)(v2 + 24);
    v4 = *(uint64_t (**)(uint64_t))(v3 + 8);
  }
  return v4(v5);
}

uint64_t sub_22F8A7DA4()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  sub_22F88BD70(v1);
  return v1;
}

uint64_t sub_22F8A7DF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return sub_22F87A9B8(v5);
}

uint64_t (*sub_22F8A7E40())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_22F8A7E80@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 32);
  v5 = *(_QWORD *)(v3 + 40);
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = &unk_255E21558;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return sub_22F88BD70(v4);
}

uint64_t sub_22F8A7F08(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = &unk_255E21548;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *a2;
  swift_beginAccess();
  v8 = *(_QWORD *)(v7 + 32);
  *(_QWORD *)(v7 + 32) = v6;
  *(_QWORD *)(v7 + 40) = v5;
  sub_22F88BD70(v3);
  return sub_22F87A9B8(v8);
}

uint64_t sub_22F8A7FB4()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 32);
  sub_22F88BD70(v1);
  return v1;
}

uint64_t sub_22F8A8000(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 32);
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return sub_22F87A9B8(v5);
}

uint64_t (*sub_22F8A8050())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t (*sub_22F8A808C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_22F8A80D0()
{
  return sub_22F864050();
}

uint64_t sub_22F8A80E4()
{
  return sub_22F864050();
}

uint64_t sub_22F8A80F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  void (*v13)(uint64_t, _BYTE *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  _BYTE v22[16];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22E10);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)(v1 + 48) = 0;
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  swift_unknownObjectWeakInit();
  v9 = v1 + OBJC_IVAR____TtC19ContactlessReaderUI10AppManager_transactionContext;
  v10 = type metadata accessor for TransactionContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v11 = (_QWORD *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI10AppManager_animatedClose);
  *v11 = 0;
  v11[1] = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI10AppManager_interruptionMonitor) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI10AppManager_audioManager) = 0;
  sub_22F98D450();
  sub_22F98D450();
  v12 = v1 + OBJC_IVAR____TtC19ContactlessReaderUI10AppManager__disableSleep;
  v22[15] = 0;
  sub_22F98DB7C();
  v13 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v6 + 32);
  v13(v12, v8, v5);
  v14 = v1 + OBJC_IVAR____TtC19ContactlessReaderUI10AppManager__disableHomeAction;
  v22[14] = 0;
  sub_22F98DB7C();
  v13(v14, v8, v5);
  if (qword_255E1DB18 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v2, (uint64_t)qword_255E295F8);
  sub_22F87ABDC(v15, (uint64_t)v4, (uint64_t *)&unk_255E206E0);
  v16 = sub_22F98DAA4();
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v17 + 48))(v4, 1, v16) == 1)
  {
    sub_22F87AC20((uint64_t)v4, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    v18 = sub_22F98DA8C();
    v19 = sub_22F98F0A0();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_22F85B000, v18, v19, "AppManager Created", v20, 2u);
      MEMORY[0x2348A6838](v20, -1, -1);
    }

    (*(void (**)(_BYTE *, uint64_t))(v17 + 8))(v4, v16);
  }
  return v1;
}

uint64_t sub_22F8A83B0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  char *v22;
  uint8_t *v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char v44;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E21AB0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_22F98D4B0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EDF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB18 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v12, (uint64_t)qword_255E295F8);
  sub_22F87ABDC(v15, (uint64_t)v14, (uint64_t *)&unk_255E206E0);
  v16 = sub_22F98DAA4();
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16) == 1)
  {
    sub_22F87AC20((uint64_t)v14, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    v43 = v8;
    v18 = sub_22F98DA8C();
    v19 = sub_22F98F0A0();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v42 = v6;
      v21 = v5;
      v22 = v4;
      v23 = v20;
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_22F85B000, v18, v19, "AppManager Cleanup", v20, 2u);
      v24 = v23;
      v4 = v22;
      v5 = v21;
      v6 = v42;
      MEMORY[0x2348A6838](v24, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v16);
    v8 = v43;
  }
  swift_beginAccess();
  v25 = v1[2];
  v1[2] = 0;
  v1[3] = 0;
  sub_22F87A9B8(v25);
  swift_beginAccess();
  v26 = v1[4];
  v1[4] = 0;
  v1[5] = 0;
  sub_22F87A9B8(v26);
  v27 = (_QWORD *)((char *)v1 + OBJC_IVAR____TtC19ContactlessReaderUI10AppManager_animatedClose);
  v28 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC19ContactlessReaderUI10AppManager_animatedClose);
  *v27 = 0;
  v27[1] = 0;
  sub_22F87A9B8(v28);
  v29 = v1[4];
  v1[4] = 0;
  v1[5] = 0;
  sub_22F87A9B8(v29);
  v30 = type metadata accessor for TransactionContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v11, 1, 1, v30);
  v31 = (uint64_t)v1 + OBJC_IVAR____TtC19ContactlessReaderUI10AppManager_transactionContext;
  swift_beginAccess();
  sub_22F8AB424((uint64_t)v11, v31);
  swift_endAccess();
  swift_unknownObjectWeakAssign();
  swift_getKeyPath();
  swift_getKeyPath();
  v44 = 0;
  swift_retain();
  sub_22F98DBAC();
  swift_getKeyPath();
  swift_getKeyPath();
  v44 = 0;
  swift_retain();
  sub_22F98DBAC();
  v32 = OBJC_IVAR____TtC19ContactlessReaderUI10AppManager_interruptionMonitor;
  v33 = *(void **)((char *)v1 + OBJC_IVAR____TtC19ContactlessReaderUI10AppManager_interruptionMonitor);
  if (v33)
  {
    v34 = v33;
    sub_22F894D90(0);

    v33 = *(void **)((char *)v1 + v32);
  }
  *(_QWORD *)((char *)v1 + v32) = 0;

  sub_22F98D450();
  v35 = (char *)v1 + OBJC_IVAR____TtC19ContactlessReaderUI10AppManager_customerLocale;
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v6 + 40))(v35, v8, v5);
  swift_endAccess();
  v36 = OBJC_IVAR____TtC19ContactlessReaderUI10AppManager_audioManager;
  v37 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC19ContactlessReaderUI10AppManager_audioManager);
  if (v37)
  {
    v38 = sub_22F98EFD4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v4, 1, 1, v38);
    v39 = (_QWORD *)swift_allocObject();
    v39[2] = 0;
    v39[3] = 0;
    v39[4] = v37;
    swift_retain_n();
    sub_22F8847CC((uint64_t)v4, (uint64_t)&unk_255E1EE48, (uint64_t)v39);
    swift_release();
    sub_22F9773E0();
    swift_release();
  }
  *(_QWORD *)((char *)v1 + v36) = 0;
  swift_release();
  v1[6] = 0;
  return swift_release();
}

uint64_t sub_22F8A885C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  char *v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  char *v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  void (*v70)(uint64_t, char *, uint64_t);
  uint64_t v71;
  uint64_t v72;
  int v73;
  char *v74;
  uint64_t v75;
  NSObject *v76;
  os_log_type_t v77;
  uint8_t *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E21AB0);
  MEMORY[0x24BDAC7A8](v1);
  v94 = (char *)&v85 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v3 = MEMORY[0x24BDAC7A8](v95);
  v5 = (char *)&v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v88 = (uint64_t)&v85 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21528);
  MEMORY[0x24BDAC7A8](v7);
  v93 = (uint64_t)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TapContext(0);
  v91 = *(_QWORD *)(v9 - 8);
  v92 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v87 = (uint64_t)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E20810);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v86 = (char *)&v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v90 = (uint64_t)&v85 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v85 - v16;
  v18 = sub_22F98D4B0();
  v97 = *(_QWORD *)(v18 - 8);
  v98 = v18;
  v19 = MEMORY[0x24BDAC7A8](v18);
  v85 = (char *)&v85 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v89 = (char *)&v85 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v96 = (char *)&v85 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v85 - v25;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EDF0);
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&v85 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for TransactionContext(0);
  v31 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v33 = (char *)&v85 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = v0;
  v34 = v0 + OBJC_IVAR____TtC19ContactlessReaderUI10AppManager_transactionContext;
  swift_beginAccess();
  sub_22F87ABDC(v34, (uint64_t)v29, &qword_255E1EDF0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30) == 1)
  {
    sub_22F87AC20((uint64_t)v29, &qword_255E1EDF0);
    if (qword_255E1DB18 != -1)
      swift_once();
    v35 = __swift_project_value_buffer(v95, (uint64_t)qword_255E295F8);
    sub_22F87ABDC(v35, (uint64_t)v5, (uint64_t *)&unk_255E206E0);
    v36 = sub_22F98DAA4();
    v37 = *(_QWORD *)(v36 - 8);
    v38 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48))(v5, 1, v36);
    v40 = v97;
    v39 = v98;
    if (v38 == 1)
    {
      sub_22F87AC20((uint64_t)v5, (uint64_t *)&unk_255E206E0);
    }
    else
    {
      v53 = sub_22F98DA8C();
      v54 = sub_22F98F088();
      if (os_log_type_enabled(v53, v54))
      {
        v55 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v55 = 0;
        _os_log_impl(&dword_22F85B000, v53, v54, "Attempted to configure appManager localization without transactionContext", v55, 2u);
        MEMORY[0x2348A6838](v55, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v37 + 8))(v5, v36);
    }
    v56 = v96;
    sub_22F98D450();
    v57 = v99 + OBJC_IVAR____TtC19ContactlessReaderUI10AppManager_customerLocale;
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v40 + 40))(v57, v56, v39);
    return swift_endAccess();
  }
  else
  {
    sub_22F8AB204((uint64_t)v29, (uint64_t)v33, type metadata accessor for TransactionContext);
    v41 = *(_QWORD *)&v33[*(int *)(v30 + 20)];
    v42 = (uint64_t)v33;
    if (v41)
    {
      v43 = v41 + OBJC_IVAR____TtC19ContactlessReaderUI10PINContext_cardPreferredLocale;
      swift_beginAccess();
      sub_22F87ABDC(v43, (uint64_t)v17, (uint64_t *)&unk_255E20810);
      v45 = v97;
      v44 = v98;
      v46 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v97 + 48);
      if (v46((uint64_t)v17, 1, v98) == 1)
      {
        swift_retain();
        sub_22F87AC20((uint64_t)v17, (uint64_t *)&unk_255E20810);
        v47 = v41 + OBJC_IVAR____TtC19ContactlessReaderUI10PINContext_customerLocale;
        swift_beginAccess();
        v48 = v47;
        v49 = v90;
        sub_22F87ABDC(v48, v90, (uint64_t *)&unk_255E20810);
        v50 = v46(v49, 1, v44);
        v51 = v99;
        v52 = v89;
        if (v50 == 1)
        {
          sub_22F98D450();
          sub_22F87AC20(v49, (uint64_t *)&unk_255E20810);
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t))(v45 + 32))(v89, v49, v44);
        }
        v75 = v51 + OBJC_IVAR____TtC19ContactlessReaderUI10AppManager_customerLocale;
        swift_beginAccess();
        (*(void (**)(uint64_t, char *, uint64_t))(v45 + 40))(v75, v52, v44);
        swift_endAccess();
        swift_release();
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v26, v17, v44);
        v68 = v96;
        (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v96, v26, v44);
        v51 = v99;
        v69 = v99 + OBJC_IVAR____TtC19ContactlessReaderUI10AppManager_customerLocale;
        swift_beginAccess();
        v70 = *(void (**)(uint64_t, char *, uint64_t))(v45 + 40);
        swift_retain();
        v70(v69, v68, v44);
        swift_endAccess();
        swift_release();
        (*(void (**)(char *, uint64_t))(v45 + 8))(v26, v44);
      }
    }
    else
    {
      v59 = (uint64_t)v33;
      v60 = v93;
      sub_22F87ABDC(v59, v93, &qword_255E21528);
      v61 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v91 + 48))(v60, 1, v92);
      v63 = v97;
      v62 = v98;
      if (v61 == 1)
      {
        sub_22F87AC20(v60, &qword_255E21528);
        if (qword_255E1DB18 != -1)
          swift_once();
        v64 = __swift_project_value_buffer(v95, (uint64_t)qword_255E295F8);
        v65 = v88;
        sub_22F87ABDC(v64, v88, (uint64_t *)&unk_255E206E0);
        v66 = sub_22F98DAA4();
        v67 = *(_QWORD *)(v66 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48))(v65, 1, v66) == 1)
        {
          sub_22F87AC20(v65, (uint64_t *)&unk_255E206E0);
        }
        else
        {
          v76 = sub_22F98DA8C();
          v77 = sub_22F98F088();
          if (os_log_type_enabled(v76, v77))
          {
            v78 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v78 = 0;
            _os_log_impl(&dword_22F85B000, v76, v77, "No valid tap context or pin context exists - cannot set locale", v78, 2u);
            MEMORY[0x2348A6838](v78, -1, -1);
          }

          (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v65, v66);
        }
        v79 = v96;
        sub_22F98D450();
        v51 = v99;
        v80 = v99 + OBJC_IVAR____TtC19ContactlessReaderUI10AppManager_customerLocale;
        swift_beginAccess();
        (*(void (**)(uint64_t, char *, uint64_t))(v63 + 40))(v80, v79, v62);
        swift_endAccess();
      }
      else
      {
        v71 = v87;
        sub_22F8AB204(v60, v87, type metadata accessor for TapContext);
        v72 = (uint64_t)v86;
        sub_22F98D660();
        v73 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v63 + 48))(v72, 1, v62);
        v51 = v99;
        v74 = v85;
        if (v73 == 1)
        {
          sub_22F98D450();
          sub_22F87AC20(v72, (uint64_t *)&unk_255E20810);
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t))(v63 + 32))(v85, v72, v62);
        }
        v81 = v51 + OBJC_IVAR____TtC19ContactlessReaderUI10AppManager_customerLocale;
        swift_beginAccess();
        (*(void (**)(uint64_t, char *, uint64_t))(v63 + 40))(v81, v74, v62);
        swift_endAccess();
        sub_22F8AB158(v71, type metadata accessor for TapContext);
      }
    }
    v82 = sub_22F98EFD4();
    v83 = (uint64_t)v94;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 56))(v94, 1, 1, v82);
    v84 = (_QWORD *)swift_allocObject();
    v84[2] = 0;
    v84[3] = 0;
    v84[4] = v51;
    swift_retain();
    sub_22F8847CC(v83, (uint64_t)&unk_255E21538, (uint64_t)v84);
    swift_release();
    return sub_22F8AB158(v42, type metadata accessor for TransactionContext);
  }
}

uint64_t sub_22F8A9210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[8] = a1;
  v4[9] = a4;
  v5 = sub_22F98D4B0();
  v4[10] = v5;
  v4[11] = *(_QWORD *)(v5 - 8);
  v4[12] = swift_task_alloc();
  v4[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22F8A9280()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 72) + OBJC_IVAR____TtC19ContactlessReaderUI10AppManager_audioManager);
  if (v1 && (v2 = *(_QWORD *)(v1 + 24), (*(_QWORD *)(v0 + 112) = v2) != 0))
  {
    swift_retain();
    return swift_task_switch();
  }
  else
  {
    **(_BYTE **)(v0 + 64) = 1;
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_22F8A930C()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(*(_QWORD *)(v0 + 112) + 192);
  *(_QWORD *)(v0 + 120) = v1;
  v2 = v1;
  swift_release();
  return swift_task_switch();
}

uint64_t sub_22F8A9358()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  char *v8;

  v1 = *(char **)(v0 + 120);
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 96);
    v2 = *(_QWORD *)(v0 + 104);
    v4 = *(_QWORD *)(v0 + 80);
    v5 = *(_QWORD *)(v0 + 88);
    v6 = *(_QWORD *)(v0 + 72) + OBJC_IVAR____TtC19ContactlessReaderUI10AppManager_customerLocale;
    swift_beginAccess();
    v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    v7(v2, v6, v4);
    v7(v3, v2, v4);
    v8 = &v1[OBJC_IVAR____TtC19ContactlessReaderUI16VoiceSynthPlayer_locale];
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 40))(v8, v3, v4);
    swift_endAccess();

    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
  }
  **(_BYTE **)(v0 + 64) = v1 == 0;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22F8A9464()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;

  v1 = v0;
  v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v33);
  v34 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for TransactionContext(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21528);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EDF0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v32 - v14;
  v16 = OBJC_IVAR____TtC19ContactlessReaderUI10AppManager_audioManager;
  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI10AppManager_audioManager))
  {
    type metadata accessor for AudioManager();
    swift_allocObject();
    *(_QWORD *)(v0 + v16) = sub_22F976E4C();
    swift_release();
  }
  v17 = v0 + OBJC_IVAR____TtC19ContactlessReaderUI10AppManager_transactionContext;
  swift_beginAccess();
  sub_22F87ABDC(v17, (uint64_t)v15, &qword_255E1EDF0);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
  if (!v18(v15, 1, v3))
  {
    v21 = *(_QWORD *)&v15[*(int *)(v3 + 20)];
    if (v21)
    {
      swift_retain();
      sub_22F87AC20((uint64_t)v15, &qword_255E1EDF0);
      v22 = *(_BYTE *)(v21 + 96);
      result = swift_release();
      if (!*(_QWORD *)(v1 + v16))
        return result;
LABEL_19:
      swift_retain();
      sub_22F9764B0(v22);
      return swift_release();
    }
  }
  sub_22F87AC20((uint64_t)v15, &qword_255E1EDF0);
  sub_22F87ABDC(v17, (uint64_t)v13, &qword_255E1EDF0);
  if (v18(v13, 1, v3))
  {
    v19 = &qword_255E1EDF0;
    v20 = (uint64_t)v13;
  }
  else
  {
    sub_22F8AB114((uint64_t)v13, (uint64_t)v6);
    sub_22F87AC20((uint64_t)v13, &qword_255E1EDF0);
    sub_22F87ABDC((uint64_t)v6, (uint64_t)v9, &qword_255E21528);
    sub_22F8AB158((uint64_t)v6, type metadata accessor for TransactionContext);
    v24 = type metadata accessor for TapContext(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v9, 1, v24) != 1)
    {
      v22 = v9[*(int *)(v24 + 24)];
      result = sub_22F8AB158((uint64_t)v9, type metadata accessor for TapContext);
      if (!*(_QWORD *)(v1 + v16))
        return result;
      goto LABEL_19;
    }
    v19 = &qword_255E21528;
    v20 = (uint64_t)v9;
  }
  sub_22F87AC20(v20, v19);
  v25 = (uint64_t)v34;
  if (qword_255E1DB18 != -1)
    swift_once();
  v26 = __swift_project_value_buffer(v33, (uint64_t)qword_255E295F8);
  sub_22F87ABDC(v26, v25, (uint64_t *)&unk_255E206E0);
  v27 = sub_22F98DAA4();
  v28 = *(_QWORD *)(v27 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v25, 1, v27) == 1)
    return sub_22F87AC20(v25, (uint64_t *)&unk_255E206E0);
  v29 = sub_22F98DA8C();
  v30 = sub_22F98F088();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v31 = 0;
    _os_log_impl(&dword_22F85B000, v29, v30, "Attempting to configure audioManager with insufficient context", v31, 2u);
    MEMORY[0x2348A6838](v31, -1, -1);
  }

  return (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 8))(v25, v27);
}

void sub_22F8A987C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(void (**)(uint64_t))(v1 + OBJC_IVAR____TtC19ContactlessReaderUI10AppManager_animatedClose);
  if (v5)
  {
    v6 = swift_retain();
    v5(v6);
    sub_22F87A9B8((uint64_t)v5);
  }
  else
  {
    if (qword_255E1DAF8 != -1)
      swift_once();
    v7 = __swift_project_value_buffer(v2, (uint64_t)qword_255E29598);
    sub_22F87ABDC(v7, (uint64_t)v4, (uint64_t *)&unk_255E206E0);
    v8 = sub_22F98DAA4();
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v4, 1, v8) == 1)
    {
      sub_22F87AC20((uint64_t)v4, (uint64_t *)&unk_255E206E0);
    }
    else
    {
      sub_22F863858(v1, 0x736F4865736F6C63, 0xEB00000000292874, 0, 0xE000000000000000);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v4, v8);
    }
    v10 = (void *)MEMORY[0x2348A68F8](v1 + 56);
    if (v10)
    {
      v11 = v10;
      objc_msgSend(v10, sel_dismissViewControllerAnimated_completion_, 1, 0);

    }
  }
}

uint64_t AppManager.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  sub_22F87A9B8(*(_QWORD *)(v0 + 16));
  sub_22F87A9B8(*(_QWORD *)(v0 + 32));
  swift_release();
  swift_unknownObjectWeakDestroy();
  sub_22F87AC20(v0 + OBJC_IVAR____TtC19ContactlessReaderUI10AppManager_transactionContext, &qword_255E1EDF0);
  sub_22F87A9B8(*(_QWORD *)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI10AppManager_animatedClose));

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC19ContactlessReaderUI10AppManager_merchantLocale;
  v2 = sub_22F98D4B0();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC19ContactlessReaderUI10AppManager_customerLocale, v2);
  v4 = v0 + OBJC_IVAR____TtC19ContactlessReaderUI10AppManager__disableSleep;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22E10);
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(v0 + OBJC_IVAR____TtC19ContactlessReaderUI10AppManager__disableHomeAction, v5);
  return v0;
}

uint64_t AppManager.__deallocating_deinit()
{
  AppManager.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_22F8A9B54()
{
  return type metadata accessor for AppManager();
}

uint64_t type metadata accessor for AppManager()
{
  uint64_t result;

  result = qword_255E211F8;
  if (!qword_255E211F8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_22F8A9B98()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_22F8A9CB8();
  if (v0 <= 0x3F)
  {
    sub_22F98D4B0();
    if (v1 <= 0x3F)
    {
      sub_22F8A9D0C();
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for AppManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AppManager.callHandler.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of AppManager.callHandler.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of AppManager.callHandler.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of AppManager.homeButtonHandler.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of AppManager.homeButtonHandler.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of AppManager.homeButtonHandler.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

void sub_22F8A9CB8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255E21208[0])
  {
    type metadata accessor for TransactionContext(255);
    v0 = sub_22F98F1F0();
    if (!v1)
      atomic_store(v0, qword_255E21208);
  }
}

void sub_22F8A9D0C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255E1E428)
  {
    v0 = sub_22F98DBB8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255E1E428);
  }
}

uint64_t sub_22F8A9D60@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char *v39;
  void (*v40)(char *, _QWORD, uint64_t);
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  void (*v44)(char *, uint64_t);
  unint64_t v45;
  char v46;
  void (*v47)(char *, _QWORD, uint64_t);
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  void (*v51)(char *, uint64_t);
  unint64_t v52;
  char v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  uint8_t *v76;
  NSObject *v77;
  os_log_type_t v78;
  uint8_t *v79;
  void (*v80)(char *, uint64_t);
  char *v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  NSObject *v99;
  os_log_type_t v100;
  uint8_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  NSObject *v106;
  os_log_type_t v107;
  uint8_t *v108;
  uint64_t v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  NSObject *v114;
  os_log_type_t v115;
  uint8_t *v116;
  void *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t *v120;
  uint64_t v121;
  uint64_t (*v122)(uint64_t *, uint64_t, uint64_t, uint64_t);
  uint64_t *v123;
  char v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  int v128;
  uint64_t v129;
  os_log_type_t v130;
  uint8_t *v131;
  uint64_t v132;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  void (*v139)(char *, char *, uint64_t);
  char *v140;
  uint64_t v141;
  uint64_t *v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  char *v149;
  char *v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t *v154;
  uint64_t v155;
  unint64_t v156;
  _BYTE v157[40];
  __int128 v158;
  __int128 v159;

  v154 = a3;
  v153 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v5 = MEMORY[0x24BDAC7A8](v153);
  v7 = (char *)&v143 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v152 = (char *)&v143 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v149 = (char *)&v143 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v143 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12);
  v151 = (char *)&v143 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v150 = (char *)&v143 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v145 = (char *)&v143 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21510);
  MEMORY[0x24BDAC7A8](v20);
  v147 = (char *)&v143 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = sub_22F98D684();
  v146 = *(_QWORD *)(v148 - 8);
  MEMORY[0x24BDAC7A8](v148);
  v144 = (char *)&v143 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_22F98D630();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v26 = MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v143 - v27;
  v29 = MEMORY[0x24BDAC7A8](v26);
  v31 = (char *)&v143 - v30;
  v32 = MEMORY[0x24BDAC7A8](v29);
  v33 = MEMORY[0x24BDAC7A8](v32);
  v35 = (char *)&v143 - v34;
  MEMORY[0x24BDAC7A8](v33);
  v39 = (char *)&v143 - v36;
  if ((a1 & 1) == 0)
  {
    v152 = (char *)v38;
    v40 = *(void (**)(char *, _QWORD, uint64_t))(v24 + 104);
    v40((char *)&v143 - v36, *MEMORY[0x24BDE4148], v23);
    v41 = sub_22F98D624();
    v43 = v42;
    v44 = *(void (**)(char *, uint64_t))(v24 + 8);
    v44(v39, v23);
    v155 = v41;
    v156 = v43;
    sub_22F98F304();
    if (*(_QWORD *)(a2 + 16) && (v45 = sub_22F979FD0((uint64_t)v157), (v46 & 1) != 0))
    {
      sub_22F87A584(*(_QWORD *)(a2 + 56) + 32 * v45, (uint64_t)&v158);
    }
    else
    {
      v158 = 0u;
      v159 = 0u;
    }
    sub_22F8AB05C((uint64_t)v157);
    if (*((_QWORD *)&v159 + 1))
    {
      if ((swift_dynamicCast() & 1) != 0)
      {
        v54 = v155;
        v55 = v156;
        v40(v35, *MEMORY[0x24BDE4180], v23);
        v56 = sub_22F98D624();
        v58 = v57;
        v44(v35, v23);
        v155 = v56;
        v156 = v58;
        sub_22F98F304();
        if (*(_QWORD *)(a2 + 16) && (v59 = sub_22F979FD0((uint64_t)v157), (v60 & 1) != 0))
        {
          sub_22F87A584(*(_QWORD *)(a2 + 56) + 32 * v59, (uint64_t)&v158);
        }
        else
        {
          v158 = 0u;
          v159 = 0u;
        }
        sub_22F8AB05C((uint64_t)v157);
        if (*((_QWORD *)&v159 + 1))
        {
          if ((swift_dynamicCast() & 1) != 0)
          {
            v82 = v156;
            v151 = (char *)v155;
            v83 = (unint64_t)v152;
            v40(v152, *MEMORY[0x24BDE4158], v23);
            v84 = sub_22F98D624();
            v86 = v85;
            v44((char *)v83, v23);
            *(_QWORD *)&v158 = v84;
            *((_QWORD *)&v158 + 1) = v86;
            sub_22F98F304();
            if (*(_QWORD *)(a2 + 16))
            {
              v87 = sub_22F979FD0((uint64_t)v157);
              v88 = (uint64_t)v150;
              if ((v89 & 1) != 0)
              {
                sub_22F87A584(*(_QWORD *)(a2 + 56) + 32 * v87, (uint64_t)&v158);
              }
              else
              {
                v158 = 0u;
                v159 = 0u;
              }
            }
            else
            {
              v158 = 0u;
              v159 = 0u;
              v88 = (uint64_t)v150;
            }
            sub_22F8AB05C((uint64_t)v157);
            if (*((_QWORD *)&v159 + 1))
            {
              if ((swift_dynamicCast() & 1) != 0)
              {
                v124 = v155;
                goto LABEL_87;
              }
            }
            else
            {
              sub_22F87AC20((uint64_t)&v158, &qword_255E22DD0);
            }
            v124 = 1;
LABEL_87:
            v125 = v82;
            sub_22F8AB090();
            sub_22F98D828();
            v126 = sub_22F98F0B8();
            v134 = v126;
            if (v126)
            {
              sub_22F98D114();
              swift_allocObject();
              sub_22F98D108();
              sub_22F8AB0CC();
              v136 = v147;
              v135 = v148;
              v137 = (uint64_t)v151;
              sub_22F98D0FC();
              swift_release();
              v138 = v146;
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v146 + 56))(v136, 0, 1, v135);
              sub_22F87A9F4(v137, v125);
              sub_22F87A9F4(v54, v55);
              v139 = *(void (**)(char *, char *, uint64_t))(v138 + 32);
              v140 = v144;
              v139(v144, v136, v135);
              v141 = type metadata accessor for TapContext(0);
              v142 = v154;
              v139((char *)v154 + *(int *)(v141 + 20), v140, v135);
              *v142 = v134;
              *((_BYTE *)v142 + *(int *)(v141 + 24)) = v124;
              (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v141 - 8) + 56))(v142, 0, 1, v141);
              v121 = type metadata accessor for TransactionContext(0);
              *(uint64_t *)((char *)v142 + *(int *)(v121 + 20)) = 0;
              v122 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v121 - 8) + 56);
              v123 = v142;
              goto LABEL_103;
            }
            if (qword_255E1DAF8 != -1)
              swift_once();
            v127 = __swift_project_value_buffer(v153, (uint64_t)qword_255E29598);
            sub_22F87ABDC(v127, v88, (uint64_t *)&unk_255E206E0);
            v72 = sub_22F98DAA4();
            v98 = *(_QWORD *)(v72 - 8);
            v128 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v98 + 48))(v88, 1, v72);
            v129 = (uint64_t)v151;
            if (v128 == 1)
            {
              sub_22F87A9F4((uint64_t)v151, v82);
LABEL_92:
              sub_22F87A9F4(v54, v55);
              sub_22F87AC20(v88, (uint64_t *)&unk_255E206E0);
              goto LABEL_98;
            }
            v99 = sub_22F98DA8C();
            v130 = sub_22F98F0A0();
            if (os_log_type_enabled(v99, v130))
            {
              v131 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)v131 = 0;
              _os_log_impl(&dword_22F85B000, v99, v130, "Unable to decode transaction request", v131, 2u);
              MEMORY[0x2348A6838](v131, -1, -1);
            }
            sub_22F87A9F4(v129, v125);
            goto LABEL_96;
          }
        }
        else
        {
          sub_22F87AC20((uint64_t)&v158, &qword_255E22DD0);
        }
        v88 = (uint64_t)v151;
        if (qword_255E1DAF8 != -1)
          swift_once();
        v97 = __swift_project_value_buffer(v153, (uint64_t)qword_255E29598);
        sub_22F87ABDC(v97, v88, (uint64_t *)&unk_255E206E0);
        v72 = sub_22F98DAA4();
        v98 = *(_QWORD *)(v72 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v98 + 48))(v88, 1, v72) == 1)
          goto LABEL_92;
        v99 = sub_22F98DA8C();
        v100 = sub_22F98F0A0();
        if (os_log_type_enabled(v99, v100))
        {
          v101 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v101 = 0;
          _os_log_impl(&dword_22F85B000, v99, v100, "Unable to fetch merchant details from SB remote context", v101, 2u);
          MEMORY[0x2348A6838](v101, -1, -1);
        }
LABEL_96:
        sub_22F87A9F4(v54, v55);

        v80 = *(void (**)(char *, uint64_t))(v98 + 8);
        v81 = (char *)v88;
        goto LABEL_97;
      }
    }
    else
    {
      sub_22F87AC20((uint64_t)&v158, &qword_255E22DD0);
    }
    if (qword_255E1DAF8 != -1)
      swift_once();
    v68 = __swift_project_value_buffer(v153, (uint64_t)qword_255E29598);
    sub_22F87ABDC(v68, (uint64_t)v14, (uint64_t *)&unk_255E206E0);
    v69 = sub_22F98DAA4();
    v70 = *(_QWORD *)(v69 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v14, 1, v69) == 1)
    {
      sub_22F87AC20((uint64_t)v14, (uint64_t *)&unk_255E206E0);
    }
    else
    {
      v74 = sub_22F98DA8C();
      v75 = sub_22F98F0A0();
      if (os_log_type_enabled(v74, v75))
      {
        v76 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v76 = 0;
        _os_log_impl(&dword_22F85B000, v74, v75, "Unable to fetch transaction from SB remote context", v76, 2u);
        MEMORY[0x2348A6838](v76, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v70 + 8))(v14, v69);
    }
    goto LABEL_98;
  }
  v151 = (char *)v37;
  v47 = *(void (**)(char *, _QWORD, uint64_t))(v24 + 104);
  v47(v31, *MEMORY[0x24BDE4188], v23);
  v48 = sub_22F98D624();
  v50 = v49;
  v51 = *(void (**)(char *, uint64_t))(v24 + 8);
  v51(v31, v23);
  v155 = v48;
  v156 = v50;
  sub_22F98F304();
  if (*(_QWORD *)(a2 + 16) && (v52 = sub_22F979FD0((uint64_t)v157), (v53 & 1) != 0))
  {
    sub_22F87A584(*(_QWORD *)(a2 + 56) + 32 * v52, (uint64_t)&v158);
  }
  else
  {
    v158 = 0u;
    v159 = 0u;
  }
  sub_22F8AB05C((uint64_t)v157);
  if (!*((_QWORD *)&v159 + 1))
  {
    sub_22F87AC20((uint64_t)&v158, &qword_255E22DD0);
    goto LABEL_26;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_26:
    if (qword_255E1DAF8 != -1)
      swift_once();
    v71 = __swift_project_value_buffer(v153, (uint64_t)qword_255E29598);
    sub_22F87ABDC(v71, (uint64_t)v7, (uint64_t *)&unk_255E206E0);
    v72 = sub_22F98DAA4();
    v73 = *(_QWORD *)(v72 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v7, 1, v72) == 1)
      goto LABEL_29;
    v77 = sub_22F98DA8C();
    v78 = sub_22F98F0A0();
    if (os_log_type_enabled(v77, v78))
    {
      v79 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v79 = 0;
      _os_log_impl(&dword_22F85B000, v77, v78, "Unable to decode PIN token", v79, 2u);
      MEMORY[0x2348A6838](v79, -1, -1);
    }

    v80 = *(void (**)(char *, uint64_t))(v73 + 8);
LABEL_36:
    v81 = v7;
LABEL_97:
    v80(v81, v72);
    goto LABEL_98;
  }
  v61 = v155;
  v62 = v156;
  v47(v28, *MEMORY[0x24BDE4198], v23);
  v63 = sub_22F98D624();
  v65 = v64;
  v51(v28, v23);
  v155 = v63;
  v156 = v65;
  sub_22F98F304();
  if (*(_QWORD *)(a2 + 16) && (v66 = sub_22F979FD0((uint64_t)v157), (v67 & 1) != 0))
  {
    sub_22F87A584(*(_QWORD *)(a2 + 56) + 32 * v66, (uint64_t)&v158);
  }
  else
  {
    v158 = 0u;
    v159 = 0u;
  }
  sub_22F8AB05C((uint64_t)v157);
  if (!*((_QWORD *)&v159 + 1))
  {
    swift_bridgeObjectRelease();
    sub_22F87AC20((uint64_t)&v158, &qword_255E22DD0);
LABEL_57:
    v102 = (uint64_t)v152;
    if (qword_255E1DAF8 != -1)
      swift_once();
    v103 = __swift_project_value_buffer(v153, (uint64_t)qword_255E29598);
    sub_22F87ABDC(v103, v102, (uint64_t *)&unk_255E206E0);
    v104 = sub_22F98DAA4();
    v105 = *(_QWORD *)(v104 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v105 + 48))(v102, 1, v104) == 1)
    {
      sub_22F87AC20(v102, (uint64_t *)&unk_255E206E0);
    }
    else
    {
      v106 = sub_22F98DA8C();
      v107 = sub_22F98F088();
      if (os_log_type_enabled(v106, v107))
      {
        v108 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v108 = 0;
        _os_log_impl(&dword_22F85B000, v106, v107, "Unable to retrieve pinConfiguration from SB remote context", v108, 2u);
        MEMORY[0x2348A6838](v108, -1, -1);
      }

      (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v102, v104);
    }
    goto LABEL_98;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_57;
  }
  v90 = v155;
  v152 = (char *)v156;
  v91 = (uint64_t)v151;
  v47(v151, *MEMORY[0x24BDE4158], v23);
  v92 = sub_22F98D624();
  v94 = v93;
  v51((char *)v91, v23);
  *(_QWORD *)&v158 = v92;
  *((_QWORD *)&v158 + 1) = v94;
  sub_22F98F304();
  if (*(_QWORD *)(a2 + 16) && (v95 = sub_22F979FD0((uint64_t)v157), (v96 & 1) != 0))
  {
    sub_22F87A584(*(_QWORD *)(a2 + 56) + 32 * v95, (uint64_t)&v158);
  }
  else
  {
    v158 = 0u;
    v159 = 0u;
  }
  v109 = v90;
  sub_22F8AB05C((uint64_t)v157);
  if (!*((_QWORD *)&v159 + 1))
  {
    sub_22F87AC20((uint64_t)&v158, &qword_255E22DD0);
    goto LABEL_70;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_70:
    v110 = 1;
    goto LABEL_71;
  }
  v110 = v155;
LABEL_71:
  sub_22F8AB090();
  sub_22F98D738();
  v111 = sub_22F98F0B8();
  v117 = (void *)v111;
  if (v111)
  {
    type metadata accessor for PINContext(0);
    swift_allocObject();
    v118 = sub_22F931DF0(v117, v61, v62, 1, v110);
    sub_22F87A9F4(v90, (unint64_t)v152);
    v119 = type metadata accessor for TapContext(0);
    v120 = v154;
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v119 - 8) + 56))(v154, 1, 1, v119);
    v121 = type metadata accessor for TransactionContext(0);
    *(uint64_t *)((char *)v120 + *(int *)(v121 + 20)) = v118;
    v122 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v121 - 8) + 56);
    v123 = v120;
LABEL_103:
    v132 = 0;
    return v122(v123, v132, 1, v121);
  }
  swift_bridgeObjectRelease();
  v7 = v149;
  if (qword_255E1DAF8 != -1)
    swift_once();
  v112 = __swift_project_value_buffer(v153, (uint64_t)qword_255E29598);
  sub_22F87ABDC(v112, (uint64_t)v7, (uint64_t *)&unk_255E206E0);
  v72 = sub_22F98DAA4();
  v113 = *(_QWORD *)(v72 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v113 + 48))(v7, 1, v72) != 1)
  {
    v114 = sub_22F98DA8C();
    v115 = sub_22F98F088();
    if (os_log_type_enabled(v114, v115))
    {
      v116 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v116 = 0;
      _os_log_impl(&dword_22F85B000, v114, v115, "Unable to decode pinConfiguration", v116, 2u);
      MEMORY[0x2348A6838](v116, -1, -1);
    }
    sub_22F87A9F4(v109, (unint64_t)v152);

    v80 = *(void (**)(char *, uint64_t))(v113 + 8);
    goto LABEL_36;
  }
  sub_22F87A9F4(v90, (unint64_t)v152);
LABEL_29:
  sub_22F87AC20((uint64_t)v7, (uint64_t *)&unk_255E206E0);
LABEL_98:
  v121 = type metadata accessor for TransactionContext(0);
  v122 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v121 - 8) + 56);
  v123 = v154;
  v132 = 1;
  return v122(v123, v132, 1, v121);
}

uint64_t type metadata accessor for TransactionContextFactory()
{
  return objc_opt_self();
}

uint64_t sub_22F8AAF70@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_22F8AAFEC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_22F98DBAC();
}

uint64_t sub_22F8AB05C(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 8))();
  return a1;
}

unint64_t sub_22F8AB090()
{
  unint64_t result;

  result = qword_255E21518;
  if (!qword_255E21518)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255E21518);
  }
  return result;
}

unint64_t sub_22F8AB0CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255E21520;
  if (!qword_255E21520)
  {
    v1 = sub_22F98D684();
    result = MEMORY[0x2348A6784](MEMORY[0x24BDE4248], v1);
    atomic_store(result, (unint64_t *)&qword_255E21520);
  }
  return result;
}

uint64_t sub_22F8AB114(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TransactionContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22F8AB158(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_22F8AB198(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_22F87B390;
  return sub_22F8A9210(a1, v4, v5, v6);
}

uint64_t sub_22F8AB204(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_22F8AB258()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22F8AB27C()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;

  v2 = *(int **)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_22F87B684;
  return ((uint64_t (*)(int *))((char *)&dword_255E21540 + dword_255E21540))(v2);
}

uint64_t sub_22F8AB2E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_22F87B58C;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_255E21550 + dword_255E21550))(a1, v4);
}

uint64_t sub_22F8AB350()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;

  v2 = *(int **)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_22F87AB28;
  return ((uint64_t (*)(int *))((char *)&dword_255E21540 + dword_255E21540))(v2);
}

uint64_t sub_22F8AB3B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_22F87B390;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_255E21550 + dword_255E21550))(a1, v4);
}

uint64_t sub_22F8AB424(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t objectdestroyTm_7()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t destroy for AutoLinebreakText()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for AutoLinebreakText(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for AutoLinebreakText(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for AutoLinebreakText(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AutoLinebreakText(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AutoLinebreakText(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AutoLinebreakText()
{
  return &type metadata for AutoLinebreakText;
}

uint64_t sub_22F8AB6D8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22F8AB6E8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v14;
  char v15;
  __int128 v16;
  char v17;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3B0);
  sub_22F98E8FC();
  v4 = 2;
  if (!v15)
    v4 = 0;
  *(_QWORD *)&v16 = a1[v4];
  *((_QWORD *)&v16 + 1) = swift_bridgeObjectRetain();
  sub_22F863BF8();
  v5 = sub_22F98E5CC();
  v7 = v6;
  v9 = v8;
  v11 = v10 & 1;
  sub_22F98E914();
  v12 = a1[1];
  v14 = *a1;
  swift_bridgeObjectRetain();
  sub_22F98E8F0();
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v7;
  *(_BYTE *)(a2 + 16) = v11;
  *(_QWORD *)(a2 + 24) = v9;
  *(_OWORD *)(a2 + 32) = v16;
  *(_BYTE *)(a2 + 48) = v17;
  *(_OWORD *)(a2 + 56) = v16;
  *(_QWORD *)(a2 + 72) = v14;
  *(_QWORD *)(a2 + 80) = v12;
  sub_22F8AB8E0(v5, v7, v11);
  swift_bridgeObjectRetain();
  sub_22F87E294(v5, v7, v11);
  return swift_bridgeObjectRelease();
}

__n128 sub_22F8AB848@<Q0>(uint64_t a1@<X8>)
{
  _OWORD *v1;
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  __n128 result;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  char v16;
  __n128 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  _OWORD v23[3];

  v3 = v1[1];
  v23[0] = *v1;
  v23[1] = v3;
  v23[2] = v1[2];
  v4 = sub_22F98EA88();
  v6 = v5;
  sub_22F8AB6E8((uint64_t *)v23, (uint64_t)&v15);
  v7 = v16;
  result = v17;
  v9 = v18;
  v10 = v19;
  v11 = v20;
  v12 = v22;
  v13 = v15;
  v14 = v21;
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v6;
  *(_OWORD *)(a1 + 16) = v13;
  *(_BYTE *)(a1 + 32) = v7;
  *(__n128 *)(a1 + 40) = result;
  *(_QWORD *)(a1 + 56) = v9;
  *(_BYTE *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  *(_OWORD *)(a1 + 80) = v14;
  *(_QWORD *)(a1 + 96) = v12;
  return result;
}

uint64_t sub_22F8AB8E0(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain();
  else
    return swift_bridgeObjectRetain();
}

uint64_t destroy for HeightComparisonView()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for HeightComparisonView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for HeightComparisonView(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for HeightComparisonView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HeightComparisonView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HeightComparisonView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for HeightComparisonView()
{
  return &type metadata for HeightComparisonView;
}

uint64_t sub_22F8ABB40()
{
  return sub_22F8AC5E4(&qword_255E21570, &qword_255E21578);
}

uint64_t sub_22F8ABB64()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22F8ABB74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)@<X0>(uint64_t@<X0>, uint64_t *@<X8>);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t KeyPath;
  uint64_t v34;
  double v35;

  sub_22F863BF8();
  swift_bridgeObjectRetain();
  v4 = sub_22F98E5CC();
  v6 = v5;
  v31 = v7;
  v34 = v8;
  KeyPath = swift_getKeyPath();
  v9 = swift_allocObject();
  v10 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v9 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v9 + 32) = v10;
  *(_OWORD *)(v9 + 48) = *(_OWORD *)(a1 + 32);
  v32 = v9;
  *(_QWORD *)(v9 + 64) = *(_QWORD *)(a1 + 48);
  sub_22F8AC270(a1);
  v11 = sub_22F98EA88();
  v29 = v12;
  v30 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3C0);
  sub_22F98E8FC();
  if (v35 <= 0.0)
  {
    v27 = 0;
    v28 = 0;
    v17 = 0;
    v26 = 0;
    v24 = 0;
    v20 = 0;
    v21 = 0;
    v23 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    v13 = sub_22F98E5CC();
    v27 = v14;
    v28 = v13;
    v26 = v15;
    v17 = v16 & 1;
    v18 = swift_allocObject();
    v19 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v18 + 16) = *(_OWORD *)a1;
    *(_OWORD *)(v18 + 32) = v19;
    *(_OWORD *)(v18 + 48) = *(_OWORD *)(a1 + 32);
    v20 = v18;
    *(_QWORD *)(v18 + 64) = *(_QWORD *)(a1 + 48);
    sub_22F8AC270(a1);
    v21 = sub_22F98EA88();
    v23 = v22;
    v24 = sub_22F8AC378;
  }
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v6;
  *(_BYTE *)(a2 + 16) = v31 & 1;
  *(_QWORD *)(a2 + 24) = v34;
  *(_QWORD *)(a2 + 32) = KeyPath;
  *(_QWORD *)(a2 + 40) = 1;
  *(_BYTE *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 56) = sub_22F8AC248;
  *(_QWORD *)(a2 + 64) = v32;
  *(_QWORD *)(a2 + 72) = v30;
  *(_QWORD *)(a2 + 80) = v29;
  *(_QWORD *)(a2 + 88) = v28;
  *(_QWORD *)(a2 + 96) = v27;
  *(_QWORD *)(a2 + 104) = v17;
  *(_QWORD *)(a2 + 112) = v26;
  *(_QWORD *)(a2 + 120) = v24;
  *(_QWORD *)(a2 + 128) = v20;
  *(_QWORD *)(a2 + 136) = v21;
  *(_QWORD *)(a2 + 144) = v23;
  sub_22F8AB8E0(v4, v6, v31 & 1);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_22F8AC2C0(v28, v27, v17, v26);
  sub_22F8AC2FC(v28, v27, v17, v26);
  sub_22F87E294(v4, v6, v31 & 1);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22F8ABE10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = a5;
  sub_22F98EFBC();
  v5[7] = sub_22F98EFB0();
  sub_22F98EF8C();
  return swift_task_switch();
}

uint64_t sub_22F8ABE7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 40);
  swift_release();
  sub_22F98DDB0();
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v1 + 24);
  *(_QWORD *)(v0 + 32) = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3C0);
  sub_22F98E908();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22F8ABEEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t result;
  uint64_t v20;
  uint64_t *v21;

  v21 = a4;
  v7 = sub_22F98DDC8();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E21AB0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_22F98EFD4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  sub_22F98EFBC();
  sub_22F8AC270(a2);
  v14 = sub_22F98EFB0();
  v15 = (*(unsigned __int8 *)(v8 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v16 = swift_allocObject();
  v17 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v16 + 16) = v14;
  *(_QWORD *)(v16 + 24) = v17;
  v18 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v16 + 32) = *(_OWORD *)a2;
  *(_OWORD *)(v16 + 48) = v18;
  *(_OWORD *)(v16 + 64) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(v16 + 80) = *(_QWORD *)(a2 + 48);
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v16 + v15, (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  sub_22F884920((uint64_t)v12, a3, v16);
  swift_release();
  result = sub_22F98E818();
  *v21 = result;
  return result;
}

uint64_t sub_22F8AC07C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[6] = a4;
  v5[7] = a5;
  sub_22F98EFBC();
  v5[8] = sub_22F98EFB0();
  sub_22F98EF8C();
  return swift_task_switch();
}

uint64_t sub_22F8AC0E8()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  double v3;
  char v4;

  v1 = *(_QWORD *)(v0 + 48);
  swift_release();
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3C0);
  sub_22F98E8FC();
  v2 = *(double *)(v0 + 40);
  sub_22F98DDB0();
  v4 = *(_BYTE *)(v1 + 16);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)v1;
  *(_BYTE *)(v0 + 32) = v4;
  *(_BYTE *)(v0 + 40) = v2 != v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F098);
  sub_22F98E998();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_22F8AC198@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  double result;
  __int128 v12;
  _OWORD v13[3];
  uint64_t v14;
  _OWORD v15[9];
  uint64_t v16;

  v3 = *(_OWORD *)(v1 + 16);
  v13[0] = *(_OWORD *)v1;
  v13[1] = v3;
  v13[2] = *(_OWORD *)(v1 + 32);
  v14 = *(_QWORD *)(v1 + 48);
  v4 = sub_22F98EA88();
  v6 = v5;
  sub_22F8ABB74((uint64_t)v13, (uint64_t)v15);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = v15[7];
  v8 = v15[8];
  v9 = v15[5];
  *(_OWORD *)(a1 + 112) = v15[6];
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 144) = v8;
  *(_QWORD *)(a1 + 160) = v16;
  v10 = v15[3];
  *(_OWORD *)(a1 + 48) = v15[2];
  *(_OWORD *)(a1 + 64) = v10;
  *(_OWORD *)(a1 + 80) = v15[4];
  *(_OWORD *)(a1 + 96) = v9;
  result = *(double *)v15;
  v12 = v15[1];
  *(_OWORD *)(a1 + 16) = v15[0];
  *(_OWORD *)(a1 + 32) = v12;
  return result;
}

uint64_t sub_22F8AC248@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_22F8ABEEC(a1, v2 + 16, (uint64_t)&unk_255E21598, a2);
}

uint64_t sub_22F8AC270(uint64_t a1)
{
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_22F8AC2C0(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_22F8AB8E0(result, a2, a3 & 1);
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_22F8AC2FC(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_22F87E294(result, a2, a3 & 1);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t objectdestroyTm_8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_22F8AC378@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_22F8ABEEC(a1, v2 + 16, (uint64_t)&unk_255E21588, a2);
}

uint64_t sub_22F8AC3A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_22F98DDC8() - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + 32;
  v8 = v1 + ((v4 + 88) & ~v4);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_22F87B390;
  return sub_22F8AC07C(a1, v5, v6, v7, v8);
}

uint64_t objectdestroy_6Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_22F98DDC8();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_22F8AC4D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_22F98DDC8() - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + 32;
  v8 = v1 + ((v4 + 88) & ~v4);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_22F87B58C;
  return sub_22F8ABE10(a1, v5, v6, v7, v8);
}

unint64_t sub_22F8AC568()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E215A0;
  if (!qword_255E215A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E215A8);
    v2[0] = sub_22F8AC5E4(&qword_255E215B0, &qword_255E215B8);
    v2[1] = sub_22F8AC624();
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E215A0);
  }
  return result;
}

uint64_t sub_22F8AC5E4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDF4750], v4);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22F8AC624()
{
  unint64_t result;

  result = qword_255E215C0;
  if (!qword_255E215C0)
  {
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED590], MEMORY[0x24BDED5B8]);
    atomic_store(result, (unint64_t *)&qword_255E215C0);
  }
  return result;
}

Swift::Void __swiftcall BrightnessManager.resetBrightnessToSystemDefault()()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + 16);
  v2 = (void *)sub_22F98ED10();
  v3 = (void *)sub_22F98ED94();
  objc_msgSend(v1, sel_setProperty_forKey_, v2, v3);

  v4 = (void *)sub_22F98ED10();
  v5 = (id)sub_22F98ED94();
  objc_msgSend(v1, sel_setProperty_forKey_, v4, v5);

}

unint64_t sub_22F8AC764(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E216F0);
  v2 = (_QWORD *)sub_22F98F3C4();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_22F979EB0(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22F8AC874(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E216E8);
  v2 = (_QWORD *)sub_22F98F3C4();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_BYTE *)(a1 + 48);
  while (1)
  {
    v5 = *((_QWORD *)v4 - 2);
    v6 = *((_QWORD *)v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_22F979EB0(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_BYTE *)(v2[7] + result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 24;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22F8AC984(uint64_t a1)
{
  return sub_22F8ACBE8(a1, &qword_255E216B8, (uint64_t (*)(uint64_t))sub_22F97A000);
}

unint64_t sub_22F8AC998(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E216A0);
  v2 = sub_22F98F3C4();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_22F87ABDC(v6, (uint64_t)&v13, &qword_255E216A8);
    v7 = v13;
    result = sub_22F97A00C(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_22F8AD49C(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22F8ACAC4(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E216D0);
  v2 = (_QWORD *)sub_22F98F3C4();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_22F979EB0(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22F8ACBD4(uint64_t a1)
{
  return sub_22F8ACBE8(a1, &qword_255E21698, (uint64_t (*)(uint64_t))sub_22F97A100);
}

unint64_t sub_22F8ACBE8(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t))
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v5 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = (_QWORD *)sub_22F98F3C4();
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v5;
  }
  swift_retain();
  v7 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v9 = *(v7 - 1);
    v8 = *v7;
    swift_bridgeObjectRetain();
    result = a3(v9);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = 8 * result;
    *(_QWORD *)(v5[6] + v12) = v9;
    *(_QWORD *)(v5[7] + v12) = v8;
    v13 = v5[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v5[2] = v15;
    v7 += 2;
    if (!--v6)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22F8ACCF0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E216C0);
  v2 = sub_22F98F3C4();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_22F87ABDC(v6, (uint64_t)&v15, &qword_255E216C8);
    v7 = v15;
    v8 = v16;
    result = sub_22F979EB0(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_22F8AD49C(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

Swift::Void __swiftcall BrightnessManager.increaseBrightnessIfNeeded()()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + 16);
  v2 = (void *)sub_22F98ED10();
  v3 = (void *)sub_22F98ED94();
  objc_msgSend(v1, sel_setProperty_forKey_, v2, v3);

  v4 = (void *)sub_22F98ED10();
  v5 = (id)sub_22F98ED94();
  objc_msgSend(v1, sel_setProperty_forKey_, v4, v5);

}

_QWORD *sub_22F8ACF1C()
{
  uint64_t v0;
  _QWORD *result;

  type metadata accessor for BrightnessManager();
  v0 = swift_allocObject();
  result = BrightnessManager.init()();
  qword_255E215C8 = v0;
  return result;
}

uint64_t BrightnessManager.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  BrightnessManager.init()();
  return v0;
}

uint64_t static BrightnessManager.shared.getter()
{
  if (qword_255E1DB78 != -1)
    swift_once();
  return swift_retain();
}

_QWORD *BrightnessManager.init()()
{
  _QWORD *v0;

  v0[3] = sub_22F8AC764((uint64_t)&unk_24FD1AA88);
  v0[4] = sub_22F8AC764((uint64_t)&unk_24FD1AAD8);
  v0[5] = sub_22F8AC874((uint64_t)&unk_24FD1AB28);
  v0[6] = sub_22F8AC874((uint64_t)&unk_24FD1AB60);
  v0[2] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE1A2D0]), sel_init);
  return v0;
}

uint64_t BrightnessManager.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t BrightnessManager.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BrightnessManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for BrightnessManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BrightnessManager.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

unint64_t sub_22F8AD0EC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _BYTE *i;
  uint64_t v5;
  char v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E216B0);
    v3 = (_QWORD *)sub_22F98F3C4();
    for (i = (_BYTE *)(a1 + 40); ; i += 16)
    {
      v5 = *((_QWORD *)i - 1);
      v6 = *i;
      result = sub_22F979F14(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_QWORD *)(v3[6] + 8 * result) = v5;
      *(_BYTE *)(v3[7] + result) = v6;
      v9 = v3[2];
      v10 = __OFADD__(v9, 1);
      v11 = v9 + 1;
      if (v10)
        goto LABEL_10;
      v3[2] = v11;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

unint64_t sub_22F8AD1C0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _BYTE *i;
  uint64_t v5;
  char v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E216E0);
    v3 = (_QWORD *)sub_22F98F3C4();
    for (i = (_BYTE *)(a1 + 40); ; i += 16)
    {
      v5 = *((_QWORD *)i - 1);
      v6 = *i;
      result = sub_22F979F44(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_QWORD *)(v3[6] + 8 * result) = v5;
      *(_BYTE *)(v3[7] + result) = v6;
      v9 = v3[2];
      v10 = __OFADD__(v9, 1);
      v11 = v9 + 1;
      if (v10)
        goto LABEL_10;
      v3[2] = v11;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

unint64_t sub_22F8AD294(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  unint64_t result;
  char v6;
  _OWORD *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  _OWORD *v11;
  char v12;
  __int128 v13;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E216D8);
  v3 = (_QWORD *)sub_22F98F3C4();
  v4 = *(_QWORD *)(a1 + 32);
  v13 = *(_OWORD *)(a1 + 40);
  result = sub_22F979F14(v4);
  if ((v6 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    return (unint64_t)v3;
  }
  v7 = (_OWORD *)(a1 + 64);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v4;
    *(_OWORD *)(v3[7] + 16 * result) = v13;
    v8 = v3[2];
    v9 = __OFADD__(v8, 1);
    v10 = v8 + 1;
    if (v9)
      break;
    v3[2] = v10;
    if (!--v1)
      goto LABEL_8;
    v11 = (_OWORD *)((char *)v7 + 24);
    v4 = *((_QWORD *)v7 - 1);
    v13 = *v7;
    swift_retain();
    result = sub_22F979F14(v4);
    v7 = v11;
    if ((v12 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_22F8AD398(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  char *i;
  unsigned int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  unint64_t result;
  char v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E21690);
    v3 = (_QWORD *)sub_22F98F3C4();
    for (i = (char *)(a1 + 65); ; i += 40)
    {
      v5 = *(_DWORD *)(i - 33);
      v6 = *(_DWORD *)(i - 25);
      v7 = *(_QWORD *)(i - 17);
      v8 = *(_QWORD *)(i - 9);
      v9 = *(i - 1);
      v10 = *i;
      result = sub_22F979F9C(v5);
      if ((v12 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_DWORD *)(v3[6] + 4 * result) = v5;
      v13 = v3[7] + 32 * result;
      *(_DWORD *)v13 = v6;
      *(_QWORD *)(v13 + 8) = v7;
      *(_QWORD *)(v13 + 16) = v8;
      *(_BYTE *)(v13 + 24) = v9;
      *(_BYTE *)(v13 + 25) = v10;
      v14 = v3[2];
      v15 = __OFADD__(v14, 1);
      v16 = v14 + 1;
      if (v15)
        goto LABEL_10;
      v3[2] = v16;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

_OWORD *sub_22F8AD49C(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_22F8AD4AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t (**v43)();
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  char *v51;
  double v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  double *v63;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  double v72;
  __int128 v73;

  v2 = v1;
  v70 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E216F8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21700);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21708);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21710);
  MEMORY[0x24BDAC7A8](v65);
  v13 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21718);
  MEMORY[0x24BDAC7A8](v66);
  v15 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21720);
  v68 = *(_QWORD *)(v16 - 8);
  v69 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v67 = (char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v5 = sub_22F98E128();
  *((_QWORD *)v5 + 1) = 0x4000000000000000;
  v5[16] = 0;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21728);
  sub_22F8ADA10(v1, (uint64_t)&v5[*(int *)(v18 + 44)]);
  v73 = *(_OWORD *)(v1 + 184);
  v71 = *(_OWORD *)(v1 + 184);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3C0);
  sub_22F98E8FC();
  v19 = v72;
  sub_22F87ABDC((uint64_t)v5, (uint64_t)v8, &qword_255E216F8);
  *(double *)&v8[*(int *)(v6 + 36)] = v19;
  sub_22F87AC20((uint64_t)v5, &qword_255E216F8);
  v71 = *(_OWORD *)(v1 + 168);
  sub_22F98E8FC();
  v20 = v72 * 0.0174532925;
  sub_22F98EB6C();
  v22 = v21;
  v24 = v23;
  sub_22F87ABDC((uint64_t)v8, (uint64_t)v11, &qword_255E21700);
  v25 = &v11[*(int *)(v9 + 36)];
  *(double *)v25 = v20;
  *((_QWORD *)v25 + 1) = v22;
  *((_QWORD *)v25 + 2) = v24;
  sub_22F87AC20((uint64_t)v8, &qword_255E21700);
  v26 = sub_22F98E434();
  sub_22F98DBF4();
  v28 = v27;
  v30 = v29;
  v32 = v31;
  v34 = v33;
  sub_22F87ABDC((uint64_t)v11, (uint64_t)v13, &qword_255E21708);
  v35 = &v13[*(int *)(v65 + 36)];
  *v35 = v26;
  *((_QWORD *)v35 + 1) = v28;
  *((_QWORD *)v35 + 2) = v30;
  *((_QWORD *)v35 + 3) = v32;
  *((_QWORD *)v35 + 4) = v34;
  v35[40] = 0;
  sub_22F87AC20((uint64_t)v11, &qword_255E21708);
  v36 = swift_allocObject();
  v37 = *(_OWORD *)(v2 + 176);
  *(_OWORD *)(v36 + 176) = *(_OWORD *)(v2 + 160);
  *(_OWORD *)(v36 + 192) = v37;
  *(_OWORD *)(v36 + 208) = *(_OWORD *)(v2 + 192);
  *(_QWORD *)(v36 + 224) = *(_QWORD *)(v2 + 208);
  v38 = *(_OWORD *)(v2 + 112);
  *(_OWORD *)(v36 + 112) = *(_OWORD *)(v2 + 96);
  *(_OWORD *)(v36 + 128) = v38;
  v39 = *(_OWORD *)(v2 + 144);
  *(_OWORD *)(v36 + 144) = *(_OWORD *)(v2 + 128);
  *(_OWORD *)(v36 + 160) = v39;
  v40 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v36 + 48) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v36 + 64) = v40;
  v41 = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(v36 + 80) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v36 + 96) = v41;
  v42 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v36 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v36 + 32) = v42;
  sub_22F87ABDC((uint64_t)v13, (uint64_t)v15, &qword_255E21710);
  v43 = (uint64_t (**)())&v15[*(int *)(v66 + 36)];
  *v43 = sub_22F8AF57C;
  v43[1] = (uint64_t (*)())v36;
  v43[2] = 0;
  v43[3] = 0;
  sub_22F8AF5C8(v2);
  sub_22F87AC20((uint64_t)v13, &qword_255E21710);
  LOBYTE(v71) = *(_BYTE *)(v2 + 160);
  v44 = swift_allocObject();
  v45 = *(_OWORD *)(v2 + 176);
  *(_OWORD *)(v44 + 176) = *(_OWORD *)(v2 + 160);
  *(_OWORD *)(v44 + 192) = v45;
  *(_OWORD *)(v44 + 208) = *(_OWORD *)(v2 + 192);
  *(_QWORD *)(v44 + 224) = *(_QWORD *)(v2 + 208);
  v46 = *(_OWORD *)(v2 + 112);
  *(_OWORD *)(v44 + 112) = *(_OWORD *)(v2 + 96);
  *(_OWORD *)(v44 + 128) = v46;
  v47 = *(_OWORD *)(v2 + 144);
  *(_OWORD *)(v44 + 144) = *(_OWORD *)(v2 + 128);
  *(_OWORD *)(v44 + 160) = v47;
  v48 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v44 + 48) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v44 + 64) = v48;
  v49 = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(v44 + 80) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v44 + 96) = v49;
  v50 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v44 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v44 + 32) = v50;
  sub_22F8AF5C8(v2);
  sub_22F87E2D8(&qword_255E21730, &qword_255E21718, sub_22F8AF6B4, MEMORY[0x24BDF0910]);
  v51 = v67;
  sub_22F98E7A0();
  swift_release();
  sub_22F87AC20((uint64_t)v15, &qword_255E21718);
  v71 = v73;
  sub_22F98E8FC();
  v52 = v72;
  v53 = swift_allocObject();
  v54 = *(_OWORD *)(v2 + 176);
  *(_OWORD *)(v53 + 176) = *(_OWORD *)(v2 + 160);
  *(_OWORD *)(v53 + 192) = v54;
  *(_OWORD *)(v53 + 208) = *(_OWORD *)(v2 + 192);
  *(_QWORD *)(v53 + 224) = *(_QWORD *)(v2 + 208);
  v55 = *(_OWORD *)(v2 + 112);
  *(_OWORD *)(v53 + 112) = *(_OWORD *)(v2 + 96);
  *(_OWORD *)(v53 + 128) = v55;
  v56 = *(_OWORD *)(v2 + 144);
  *(_OWORD *)(v53 + 144) = *(_OWORD *)(v2 + 128);
  *(_OWORD *)(v53 + 160) = v56;
  v57 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v53 + 48) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v53 + 64) = v57;
  v58 = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(v53 + 80) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v53 + 96) = v58;
  v59 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v53 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v53 + 32) = v59;
  v61 = v68;
  v60 = v69;
  v62 = v70;
  (*(void (**)(uint64_t, char *, uint64_t))(v68 + 16))(v70, v51, v69);
  v63 = (double *)(v62 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255E21758) + 36));
  *v63 = v52;
  v63[1] = v52;
  *((_QWORD *)v63 + 2) = sub_22F8AF784;
  *((_QWORD *)v63 + 3) = v53;
  sub_22F8AF5C8(v2);
  return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v51, v60);
}

uint64_t sub_22F8ADA10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t (*v32)@<X0>(uint64_t@<X0>, uint64_t *@<X8>);
  uint64_t (*v33)@<X0>(uint64_t@<X0>, uint64_t *@<X8>);
  _BYTE *v34;
  uint64_t (**v35)@<X0>(uint64_t@<X0>, uint64_t *@<X8>);
  _BYTE *v36;
  _BYTE *v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE v42[4];
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  _BYTE *v50;
  _BYTE *v51;
  _BYTE *v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  char v71;

  v54 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21760);
  MEMORY[0x24BDAC7A8](v3);
  v49 = (uint64_t *)&v42[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21768);
  v5 = MEMORY[0x24BDAC7A8](v53);
  v50 = &v42[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v5);
  v52 = &v42[-v7];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21770);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v51 = &v42[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v9);
  v55 = &v42[-v11];
  v12 = *(_QWORD *)(a1 + 96);
  v45 = *(_QWORD *)(a1 + 88);
  v13 = *(_QWORD *)(a1 + 112);
  v44 = *(_QWORD *)(a1 + 104);
  v71 = 0;
  v48 = v12;
  swift_bridgeObjectRetain();
  v46 = v13;
  swift_bridgeObjectRetain();
  sub_22F98E8F0();
  v43 = v56;
  v14 = v57;
  v47 = v57;
  v15 = sub_22F98E524();
  KeyPath = swift_getKeyPath();
  v17 = swift_getKeyPath();
  v18 = swift_getKeyPath();
  v19 = sub_22F98E83C();
  v20 = swift_getKeyPath();
  v56 = v45;
  v57 = v12;
  v58 = v44;
  v59 = v13;
  v60 = v43;
  v61 = v14;
  v62 = KeyPath;
  v63 = v15;
  v64 = v17;
  v65 = 3;
  v66 = 0;
  v67 = v18;
  v68 = 1;
  v69 = v20;
  v70 = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E21778);
  sub_22F8AF8C8();
  sub_22F98E704();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v21 = sub_22F98E0B0();
  v22 = (uint64_t)v49;
  *v49 = v21;
  *(_QWORD *)(v22 + 8) = 0;
  *(_BYTE *)(v22 + 16) = 1;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E217B8);
  sub_22F8ADE8C((__int128 *)a1, v22 + *(int *)(v23 + 44));
  v24 = swift_allocObject();
  v25 = *(_OWORD *)(a1 + 176);
  *(_OWORD *)(v24 + 176) = *(_OWORD *)(a1 + 160);
  *(_OWORD *)(v24 + 192) = v25;
  *(_OWORD *)(v24 + 208) = *(_OWORD *)(a1 + 192);
  *(_QWORD *)(v24 + 224) = *(_QWORD *)(a1 + 208);
  v26 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v24 + 112) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v24 + 128) = v26;
  v27 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(v24 + 144) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v24 + 160) = v27;
  v28 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v24 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v24 + 64) = v28;
  v29 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v24 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v24 + 96) = v29;
  v30 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v24 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v24 + 32) = v30;
  sub_22F8AF5C8(a1);
  v31 = sub_22F98EA88();
  v33 = v32;
  v34 = v50;
  sub_22F87ABDC(v22, (uint64_t)v50, &qword_255E21760);
  v35 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))&v34[*(int *)(v53 + 36)];
  *v35 = sub_22F8AFB48;
  v35[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))v24;
  v35[2] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))v31;
  v35[3] = v33;
  sub_22F87AC20(v22, &qword_255E21760);
  v36 = v52;
  sub_22F87B2B4((uint64_t)v34, (uint64_t)v52, &qword_255E21768);
  v37 = v55;
  v38 = v51;
  sub_22F87ABDC((uint64_t)v55, (uint64_t)v51, &qword_255E21770);
  sub_22F87ABDC((uint64_t)v36, (uint64_t)v34, &qword_255E21768);
  v39 = v54;
  sub_22F87ABDC((uint64_t)v38, v54, &qword_255E21770);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E217C0);
  sub_22F87ABDC((uint64_t)v34, v39 + *(int *)(v40 + 48), &qword_255E21768);
  sub_22F87AC20((uint64_t)v36, &qword_255E21768);
  sub_22F87AC20((uint64_t)v37, &qword_255E21770);
  sub_22F87AC20((uint64_t)v34, &qword_255E21768);
  return sub_22F87AC20((uint64_t)v38, &qword_255E21770);
}

uint64_t sub_22F8ADE8C@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t KeyPath;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _OWORD *v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void (*v108)(char *, uint64_t, uint64_t);
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  _OWORD *v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  uint64_t v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  uint64_t v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  uint64_t v167;
  _OWORD v168[11];
  uint64_t v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  uint64_t v181;
  __int128 v182;
  __int128 v183;
  __int128 v184;
  __int128 v185;
  __int128 v186;
  _OWORD v187[8];
  _QWORD v188[4];
  char v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  char v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  char v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  char v207[8];
  uint64_t v208;

  v128 = a2;
  v3 = sub_22F98E9E0();
  v114 = *(_QWORD *)(v3 - 8);
  v115 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v112 = (char *)&v108 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E217D8);
  MEMORY[0x24BDAC7A8](v111);
  v117 = (char *)&v108 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E217E0);
  MEMORY[0x24BDAC7A8](v113);
  v119 = (uint64_t)&v108 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E217E8);
  MEMORY[0x24BDAC7A8](v116);
  v121 = (uint64_t)&v108 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E217F0);
  v8 = MEMORY[0x24BDAC7A8](v118);
  v130 = (uint64_t)&v108 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v129 = (uint64_t)&v108 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E217F8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v127 = (uint64_t)&v108 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v126 = (uint64_t)&v108 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1FFE8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v108 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21800);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v122 = (uint64_t)&v108 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v125 = (char *)&v108 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v124 = (char *)&v108 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v131 = (uint64_t)&v108 - v25;
  v26 = a1[7];
  v187[4] = a1[6];
  v187[5] = v26;
  v27 = a1[9];
  v187[6] = a1[8];
  v187[7] = v27;
  v28 = a1[3];
  v187[0] = a1[2];
  v187[1] = v28;
  v29 = a1[5];
  v187[2] = a1[4];
  v187[3] = v29;
  v30 = a1[1];
  v185 = *a1;
  v186 = v30;
  v123 = v187;
  v170 = v30;
  v31 = sub_22F863BF8();
  swift_bridgeObjectRetain();
  v110 = v31;
  v32 = sub_22F98E5CC();
  v34 = v33;
  v36 = v35 & 1;
  sub_22F98E4D0();
  v37 = sub_22F98E4A0();
  v108 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56);
  v109 = v37;
  v108(v17, 1, 1);
  sub_22F98E4DC();
  v120 = v17;
  sub_22F87AC20((uint64_t)v17, &qword_255E1FFE8);
  v38 = sub_22F98E5A8();
  v40 = v39;
  v42 = v41;
  v44 = v43;
  swift_release();
  sub_22F87E294(v32, v34, v36);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v46 = swift_getKeyPath();
  v196 = v38;
  v197 = v40;
  v198 = v42 & 1;
  v199 = v44;
  v200 = KeyPath;
  v201 = 2;
  v202 = 0;
  v203 = v46;
  v204 = 0x3FE0000000000000;
  sub_22F87B2B4((uint64_t)v123, (uint64_t)v188, &qword_255E21808);
  sub_22F87B2B4((uint64_t)v188, (uint64_t)v207, &qword_255E21808);
  if (v208)
    sub_22F98EAA0();
  else
    sub_22F98EA88();
  sub_22F8F9994(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v170, 0.0, 1, 0.0, 1);
  sub_22F87E294(v38, v40, v42 & 1);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v168[8] = v178;
  v168[9] = v179;
  v168[10] = v180;
  v168[4] = v174;
  v168[5] = v175;
  v168[6] = v176;
  v168[7] = v177;
  v168[0] = v170;
  v168[1] = v171;
  v168[2] = v172;
  v168[3] = v173;
  v164 = v178;
  v165 = v179;
  v166 = v180;
  v160 = v174;
  v161 = v175;
  v162 = v176;
  v163 = v177;
  v156 = v170;
  v157 = v171;
  v169 = v181;
  v167 = v181;
  v158 = v172;
  v159 = v173;
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21810);
  v48 = sub_22F87E2D8(&qword_255E21818, &qword_255E21810, (uint64_t (*)(void))sub_22F88AC94, MEMORY[0x24BDEDBB8]);
  v49 = (uint64_t)v124;
  sub_22F98E704();
  sub_22F8AFD4C((uint64_t)v168);
  sub_22F87B2B4(v49, v131, &qword_255E21800);
  sub_22F87B2B4((uint64_t)v188, (uint64_t)&v205, &qword_255E21808);
  v50 = v206;
  if (v206)
  {
    v51 = v205;
    v124 = (char *)v48;
    v52 = v112;
    sub_22F98E9D4();
    v156 = *(__int128 *)((char *)a1 + 200);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3C0);
    sub_22F98E8FC();
    sub_22F98EA88();
    sub_22F98DCFC();
    v123 = (_OWORD *)v47;
    v54 = v114;
    v53 = v115;
    v55 = (uint64_t)v117;
    (*(void (**)(char *, char *, uint64_t))(v114 + 16))(v117, v52, v115);
    v56 = (_OWORD *)(v55 + *(int *)(v111 + 36));
    v57 = v183;
    *v56 = v182;
    v56[1] = v57;
    v56[2] = v184;
    (*(void (**)(char *, uint64_t))(v54 + 8))(v52, v53);
    sub_22F98E800();
    v58 = sub_22F98E830();
    swift_release();
    LOBYTE(v53) = sub_22F98E41C();
    v59 = v119;
    sub_22F87ABDC(v55, v119, &qword_255E217D8);
    v60 = v59 + *(int *)(v113 + 36);
    *(_QWORD *)v60 = v58;
    *(_BYTE *)(v60 + 8) = v53;
    sub_22F87AC20(v55, &qword_255E217D8);
    LOBYTE(v53) = sub_22F98E410();
    sub_22F98DBF4();
    v62 = v61;
    v64 = v63;
    v66 = v65;
    v68 = v67;
    v69 = v121;
    sub_22F87ABDC(v59, v121, &qword_255E217E0);
    v70 = v69 + *(int *)(v116 + 36);
    *(_BYTE *)v70 = v53;
    *(_QWORD *)(v70 + 8) = v62;
    *(_QWORD *)(v70 + 16) = v64;
    *(_QWORD *)(v70 + 24) = v66;
    *(_QWORD *)(v70 + 32) = v68;
    *(_BYTE *)(v70 + 40) = 0;
    sub_22F87AC20(v59, &qword_255E217E0);
    LOBYTE(v53) = sub_22F98E458();
    sub_22F98DBF4();
    v72 = v71;
    v74 = v73;
    v76 = v75;
    v78 = v77;
    v79 = v130;
    sub_22F87ABDC(v69, v130, &qword_255E217E8);
    v80 = v79 + *(int *)(v118 + 36);
    *(_BYTE *)v80 = v53;
    *(_QWORD *)(v80 + 8) = v72;
    *(_QWORD *)(v80 + 16) = v74;
    *(_QWORD *)(v80 + 24) = v76;
    *(_QWORD *)(v80 + 32) = v78;
    *(_BYTE *)(v80 + 40) = 0;
    sub_22F87AC20(v69, &qword_255E217E8);
    sub_22F87B2B4(v79, v129, &qword_255E217F0);
    *(_QWORD *)&v156 = v51;
    *((_QWORD *)&v156 + 1) = v50;
    swift_bridgeObjectRetain();
    v81 = sub_22F98E5CC();
    v83 = v82;
    v85 = v84 & 1;
    sub_22F98E4D0();
    v86 = (uint64_t)v120;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v108)(v120, 1, 1, v109);
    sub_22F98E4DC();
    sub_22F87AC20(v86, &qword_255E1FFE8);
    v87 = sub_22F98E5A8();
    v89 = v88;
    LOBYTE(v69) = v90;
    v92 = v91;
    swift_release();
    sub_22F87E294(v81, v83, v85);
    swift_bridgeObjectRelease();
    v93 = swift_getKeyPath();
    v94 = swift_getKeyPath();
    v188[2] = v87;
    v188[3] = v89;
    v189 = v69 & 1;
    v190 = v92;
    v191 = v93;
    v192 = 2;
    v193 = 0;
    v194 = v94;
    v195 = 0x3FE0000000000000;
    sub_22F98EA94();
    sub_22F8F9994(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v144, 0.0, 1, 0.0, 1);
    sub_22F87E294(v87, v89, v69 & 1);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    v164 = v152;
    v165 = v153;
    v166 = v154;
    v160 = v148;
    v161 = v149;
    v162 = v150;
    v163 = v151;
    v156 = v144;
    v157 = v145;
    v158 = v146;
    v159 = v147;
    v140 = v152;
    v141 = v153;
    v142 = v154;
    v136 = v148;
    v137 = v149;
    v138 = v150;
    v139 = v151;
    v132 = v144;
    v133 = v145;
    v167 = v155;
    v143 = v155;
    v134 = v146;
    v135 = v147;
    v95 = (uint64_t)v125;
    sub_22F98E704();
    sub_22F8AFD4C((uint64_t)&v156);
    v97 = v129;
    v96 = v130;
    sub_22F87ABDC(v129, v130, &qword_255E217F0);
    v98 = v122;
    sub_22F87ABDC(v95, v122, &qword_255E21800);
    v99 = v127;
    sub_22F87ABDC(v96, v127, &qword_255E217F0);
    v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21830);
    sub_22F87ABDC(v98, v99 + *(int *)(v100 + 48), &qword_255E21800);
    sub_22F87AC20(v95, &qword_255E21800);
    sub_22F87AC20(v97, &qword_255E217F0);
    sub_22F87AC20(v98, &qword_255E21800);
    sub_22F87AC20(v96, &qword_255E217F0);
    v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21820);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 56))(v99, 0, 1, v101);
    v102 = v126;
    sub_22F87B2B4(v99, v126, &qword_255E217F8);
  }
  else
  {
    v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21820);
    v102 = v126;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 56))(v126, 1, 1, v103);
    v99 = v127;
    v95 = (uint64_t)v125;
  }
  v104 = v131;
  sub_22F87ABDC(v131, v95, &qword_255E21800);
  sub_22F87ABDC(v102, v99, &qword_255E217F8);
  v105 = v128;
  sub_22F87ABDC(v95, v128, &qword_255E21800);
  v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21828);
  sub_22F87ABDC(v99, v105 + *(int *)(v106 + 48), &qword_255E217F8);
  sub_22F87AC20(v102, &qword_255E217F8);
  sub_22F87AC20(v104, &qword_255E21800);
  sub_22F87AC20(v99, &qword_255E217F8);
  return sub_22F87AC20(v95, &qword_255E21800);
}

uint64_t sub_22F8AEAA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t result;
  uint64_t v25;

  v6 = sub_22F98DDC8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E21AB0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_22F98EFD4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  sub_22F98EFBC();
  sub_22F8AF5C8(a2);
  v14 = sub_22F98EFB0();
  v15 = (*(unsigned __int8 *)(v7 + 80) + 248) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v16 = swift_allocObject();
  v17 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v16 + 16) = v14;
  *(_QWORD *)(v16 + 24) = v17;
  v18 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(v16 + 192) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(v16 + 208) = v18;
  *(_OWORD *)(v16 + 224) = *(_OWORD *)(a2 + 192);
  *(_QWORD *)(v16 + 240) = *(_QWORD *)(a2 + 208);
  v19 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(v16 + 128) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(v16 + 144) = v19;
  v20 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(v16 + 160) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(v16 + 176) = v20;
  v21 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v16 + 64) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v16 + 80) = v21;
  v22 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v16 + 96) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v16 + 112) = v22;
  v23 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v16 + 32) = *(_OWORD *)a2;
  *(_OWORD *)(v16 + 48) = v23;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v16 + v15, v9, v6);
  sub_22F884920((uint64_t)v12, (uint64_t)&unk_255E217D0, v16);
  swift_release();
  result = sub_22F98E818();
  *a3 = result;
  return result;
}

uint64_t sub_22F8AEC54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = a5;
  sub_22F98EFBC();
  v5[7] = sub_22F98EFB0();
  sub_22F98EF8C();
  return swift_task_switch();
}

uint64_t sub_22F8AECC0()
{
  uint64_t v0;
  uint64_t v1;
  double v2;

  v1 = *(_QWORD *)(v0 + 40);
  swift_release();
  sub_22F98DDB0();
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v1 + 200);
  *(double *)(v0 + 32) = v2 * 0.7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3C0);
  sub_22F98E908();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22F8AED40()
{
  sub_22F98EAE8();
  sub_22F98DE10();
  return swift_release();
}

uint64_t sub_22F8AEDAC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3C0);
  sub_22F98E908();
  sub_22F98EAE8();
  sub_22F98DE10();
  return swift_release();
}

uint64_t sub_22F8AEE5C@<X0>(uint64_t a1@<X8>)
{
  return sub_22F8AD4AC(a1);
}

double sub_22F8AEEC4@<D0>(_OWORD *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  double result;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  double v12;
  uint64_t v13;

  sub_22F98E8F0();
  sub_22F98E8F0();
  sub_22F98E8F0();
  result = v12;
  v7 = a1[7];
  *(_OWORD *)(a3 + 96) = a1[6];
  *(_OWORD *)(a3 + 112) = v7;
  v8 = a1[9];
  *(_OWORD *)(a3 + 128) = a1[8];
  *(_OWORD *)(a3 + 144) = v8;
  v9 = a1[3];
  *(_OWORD *)(a3 + 32) = a1[2];
  *(_OWORD *)(a3 + 48) = v9;
  v10 = a1[5];
  *(_OWORD *)(a3 + 64) = a1[4];
  *(_OWORD *)(a3 + 80) = v10;
  v11 = a1[1];
  *(_OWORD *)a3 = *a1;
  *(_OWORD *)(a3 + 16) = v11;
  *(_BYTE *)(a3 + 160) = a2;
  *(double *)(a3 + 168) = v12;
  *(_QWORD *)(a3 + 176) = v13;
  *(double *)(a3 + 184) = v12;
  *(_QWORD *)(a3 + 192) = v13;
  *(double *)(a3 + 200) = v12;
  *(_QWORD *)(a3 + 208) = v13;
  return result;
}

uint64_t destroy for GuidanceAmountView(uint64_t a1)
{

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for GuidanceAmountView(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  void *v17;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v7;
  v8 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v8;
  v9 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v9;
  v10 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v10;
  v17 = *(void **)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v17;
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  v11 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = v11;
  v12 = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = v12;
  v13 = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v13;
  v14 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15 = v17;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for GuidanceAmountView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  v6 = v4;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(void **)(a2 + 152);
  v8 = *(void **)(a1 + 152);
  *(_QWORD *)(a1 + 152) = v7;
  v9 = v7;

  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy216_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __n128 result;
  __int128 v10;
  __int128 v11;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  result = *(__n128 *)(a2 + 160);
  v10 = *(_OWORD *)(a2 + 176);
  v11 = *(_OWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 192) = v11;
  *(__n128 *)(a1 + 160) = result;
  return result;
}

uint64_t assignWithTake for GuidanceAmountView(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v10;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRelease();
  v11 = *(void **)(a1 + 152);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);

  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_release();
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  swift_release();
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for GuidanceAmountView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 216))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GuidanceAmountView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 216) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 216) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for GuidanceAmountView()
{
  return &type metadata for GuidanceAmountView;
}

uint64_t sub_22F8AF568()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22F8AF57C()
{
  return sub_22F98DE10();
}

uint64_t sub_22F8AF5C8(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  void *v6;

  v2 = *(void **)(a1 + 8);
  v6 = *(void **)(a1 + 152);
  swift_retain();
  v3 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v4 = v6;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_22F8AF6AC()
{
  return sub_22F8AED40();
}

uint64_t sub_22F8AF6B4()
{
  return sub_22F87E2D8(&qword_255E21738, &qword_255E21710, sub_22F8AF6D8, MEMORY[0x24BDECC60]);
}

uint64_t sub_22F8AF6D8()
{
  return sub_22F87E2D8(&qword_255E21740, &qword_255E21708, (uint64_t (*)(void))sub_22F8AF6FC, MEMORY[0x24BDED5D8]);
}

unint64_t sub_22F8AF6FC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E21748;
  if (!qword_255E21748)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E21700);
    v2[0] = sub_22F87AA84(&qword_255E21750, &qword_255E216F8, MEMORY[0x24BDF4700]);
    v2[1] = MEMORY[0x24BDECC38];
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E21748);
  }
  return result;
}

uint64_t sub_22F8AF784()
{
  return sub_22F8AEDAC();
}

uint64_t sub_22F8AF78C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3C0);
  return sub_22F98E908();
}

uint64_t sub_22F8AF7E4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3C0);
  return sub_22F98E908();
}

uint64_t sub_22F8AF838()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3C0);
  return sub_22F98E908();
}

unint64_t sub_22F8AF8C8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E21780;
  if (!qword_255E21780)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E21778);
    v2[0] = sub_22F8AF94C();
    v2[1] = sub_22F87AA84(&qword_255E1F108, &qword_255E1F110, MEMORY[0x24BDF1028]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E21780);
  }
  return result;
}

unint64_t sub_22F8AF94C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E21788;
  if (!qword_255E21788)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E21790);
    v2[0] = sub_22F8AF9B8();
    v2[1] = sub_22F89495C();
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E21788);
  }
  return result;
}

unint64_t sub_22F8AF9B8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E21798;
  if (!qword_255E21798)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E217A0);
    v2[0] = sub_22F8AFA3C();
    v2[1] = sub_22F87AA84(&qword_255E1F4E0, &qword_255E1F4E8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E21798);
  }
  return result;
}

unint64_t sub_22F8AFA3C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E217A8;
  if (!qword_255E217A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E217B0);
    v2[0] = sub_22F88A744();
    v2[1] = sub_22F87AA84(&qword_255E1FA28, &qword_255E1FA30, MEMORY[0x24BDF1028]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E217A8);
  }
  return result;
}

uint64_t objectdestroyTm_9()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22F8AFB48@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_22F8AEAA4(a1, v2 + 16, a2);
}

uint64_t sub_22F8AFB50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_22F98DDC8();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 248) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_22F8AFC2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_22F98DDC8() - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + 32;
  v8 = v1 + ((v4 + 248) & ~v4);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_22F87B390;
  return sub_22F8AEC54(a1, v5, v6, v7, v8);
}

unint64_t sub_22F8AFCC8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255E1FA88;
  if (!qword_255E1FA88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1FA90);
    v2 = sub_22F87AA84(&qword_255E1FA28, &qword_255E1FA30, MEMORY[0x24BDF1028]);
    v3[0] = MEMORY[0x24BDF1F80];
    v3[1] = v2;
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_255E1FA88);
  }
  return result;
}

uint64_t sub_22F8AFD4C(uint64_t a1)
{
  sub_22F87E294(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_22F8AFDA8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[6];

  result = qword_255E21838;
  if (!qword_255E21838)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E21758);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E21718);
    v3 = sub_22F87E2D8(&qword_255E21730, &qword_255E21718, sub_22F8AF6B4, MEMORY[0x24BDF0910]);
    v4[2] = v2;
    v4[3] = MEMORY[0x24BEE1328];
    v4[4] = v3;
    v4[5] = MEMORY[0x24BEE1340];
    v4[0] = swift_getOpaqueTypeConformance2();
    v4[1] = sub_22F87AA84(&qword_255E1F408, &qword_255E1F410, (uint64_t)&unk_22F99C190);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_255E21838);
  }
  return result;
}

uint64_t destroy for CircularButton()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for CircularButton(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  a1[10] = a2[10];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for CircularButton(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  return a1;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for CircularButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_release();
  v5 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for CircularButton(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CircularButton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CircularButton()
{
  return &type metadata for CircularButton;
}

uint64_t sub_22F8B019C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22F8B01AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  char *v18;
  uint64_t v19;
  uint64_t *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v34 = a1;
  v2 = sub_22F98E098();
  v32 = *(_QWORD *)(v2 - 8);
  v33 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v31 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v30 = (char *)&v27 - v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21840);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21848);
  MEMORY[0x24BDAC7A8](v28);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21850);
  MEMORY[0x24BDAC7A8](v27);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21858);
  MEMORY[0x24BDAC7A8](v29);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = v1;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E21860);
  sub_22F8B0A80();
  sub_22F98E920();
  v16 = *(_QWORD *)(v1 + 56);
  swift_retain();
  v17 = sub_22F98E41C();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v9, v6);
  v18 = &v11[*(int *)(v28 + 36)];
  *(_QWORD *)v18 = v16;
  v18[8] = v17;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_22F87ABDC((uint64_t)v11, (uint64_t)v13, &qword_255E21848);
  *(_WORD *)&v13[*(int *)(v27 + 36)] = 256;
  sub_22F87AC20((uint64_t)v11, &qword_255E21848);
  sub_22F98E80C();
  v19 = sub_22F98E830();
  swift_release();
  sub_22F87ABDC((uint64_t)v13, (uint64_t)v15, &qword_255E21850);
  v20 = (uint64_t *)&v15[*(int *)(v29 + 36)];
  *v20 = v19;
  v20[1] = 0x403E000000000000;
  v20[2] = 0;
  v20[3] = 0;
  sub_22F87AC20((uint64_t)v13, &qword_255E21850);
  v21 = v30;
  sub_22F98E08C();
  v22 = v32;
  v23 = v33;
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v31, v21, v33);
  sub_22F8B0B88();
  v24 = sub_22F98DD80();
  v25 = v34;
  sub_22F87ABDC((uint64_t)v15, v34, &qword_255E21858);
  *(_QWORD *)(v25 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255E218A0) + 36)) = v24;
  (*(void (**)(char *, uint64_t))(v22 + 8))(v21, v23);
  return sub_22F87AC20((uint64_t)v15, &qword_255E21858);
}

uint64_t sub_22F8B04F0@<X0>(double *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _OWORD v21[8];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21898);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22F98E80C();
  v7 = sub_22F98E830();
  swift_release();
  v8 = a1[10];
  v9 = sub_22F98EA88();
  sub_22F8F9B4C(0.0, 1, 0.0, 1, v8, 0, 0.0, 1, (uint64_t)v21, 0.0, 1, v8, 0, v9, v10, v7, 0, 1);
  swift_release();
  v11 = sub_22F98EA88();
  v13 = v12;
  sub_22F8B0664(a1, (uint64_t)v6);
  v14 = (uint64_t *)&v6[*(int *)(v4 + 36)];
  *v14 = v11;
  v14[1] = v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21860);
  sub_22F87ABDC((uint64_t)v6, (uint64_t)a2 + *(int *)(v15 + 36), &qword_255E21898);
  v16 = v21[5];
  a2[4] = v21[4];
  a2[5] = v16;
  v17 = v21[7];
  a2[6] = v21[6];
  a2[7] = v17;
  v18 = v21[1];
  *a2 = v21[0];
  a2[1] = v18;
  v19 = v21[3];
  a2[2] = v21[2];
  a2[3] = v19;
  return sub_22F87AC20((uint64_t)v6, &qword_255E21898);
}

uint64_t sub_22F8B0664@<X0>(double *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _BYTE v27[4];
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  char v50;
  _BYTE v51[7];
  char v52;
  _BYTE v53[7];
  char v54;
  _BYTE v55[7];
  char v56;
  _BYTE v57[7];
  char v58;
  _BYTE v59[7];
  char v60;
  _BYTE v61[7];
  char v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;

  v39 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1FFE8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v27[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E218A8);
  MEMORY[0x24BDAC7A8](v6);
  v38 = &v27[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_bridgeObjectRetain();
  v8 = sub_22F98E86C();
  v9 = a1[10];
  v10 = sub_22F98EA88();
  sub_22F8F9D04(0.0, 1, 0.0, 1, v9, 0, 0.0, 1, (uint64_t)&v40, 0.0, 1, v9, 0, v10, v11, v8);
  swift_release();
  v29 = *((_QWORD *)&v40 + 1);
  v30 = v40;
  v28 = v41;
  v12 = v42;
  v31 = *((_QWORD *)&v41 + 1);
  v32 = *((_QWORD *)&v42 + 1);
  v13 = v43;
  v14 = v44;
  v33 = *((_QWORD *)&v43 + 1);
  v34 = *((_QWORD *)&v44 + 1);
  LOBYTE(v9) = v45;
  v15 = v46;
  v37 = *((_QWORD *)&v46 + 1);
  v35 = *((_QWORD *)&v45 + 1);
  v36 = v47;
  sub_22F98E4AC();
  v16 = sub_22F98E4A0();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v5, 1, 1, v16);
  v17 = sub_22F98E4DC();
  sub_22F87AC20((uint64_t)v5, &qword_255E1FFE8);
  KeyPath = swift_getKeyPath();
  v62 = v28;
  v60 = v12;
  v58 = v13;
  v56 = v14;
  v54 = LOBYTE(v9);
  v52 = v15;
  v19 = *((_QWORD *)a1 + 6);
  v20 = swift_getKeyPath();
  *(_QWORD *)&v63 = v30;
  *((_QWORD *)&v63 + 1) = v29;
  LOBYTE(v64) = v62;
  *(_DWORD *)((char *)&v64 + 1) = *(_DWORD *)v61;
  DWORD1(v64) = *(_DWORD *)&v61[3];
  *((_QWORD *)&v64 + 1) = v31;
  LOBYTE(v65) = v60;
  *(_DWORD *)((char *)&v65 + 1) = *(_DWORD *)v59;
  DWORD1(v65) = *(_DWORD *)&v59[3];
  *((_QWORD *)&v65 + 1) = v32;
  LOBYTE(v66) = v58;
  *(_DWORD *)((char *)&v66 + 1) = *(_DWORD *)v57;
  DWORD1(v66) = *(_DWORD *)&v57[3];
  *((_QWORD *)&v66 + 1) = v33;
  LOBYTE(v67) = v56;
  *(_DWORD *)((char *)&v67 + 1) = *(_DWORD *)v55;
  DWORD1(v67) = *(_DWORD *)&v55[3];
  *((_QWORD *)&v67 + 1) = v34;
  LOBYTE(v68) = v54;
  DWORD1(v68) = *(_DWORD *)&v53[3];
  *(_DWORD *)((char *)&v68 + 1) = *(_DWORD *)v53;
  *((_QWORD *)&v68 + 1) = v35;
  LOBYTE(v69) = v52;
  DWORD1(v69) = *(_DWORD *)&v51[3];
  *(_DWORD *)((char *)&v69 + 1) = *(_DWORD *)v51;
  *((_QWORD *)&v69 + 1) = v37;
  *(_QWORD *)&v70 = v36;
  *((_QWORD *)&v70 + 1) = KeyPath;
  *(_QWORD *)&v71 = v17;
  *((_QWORD *)&v71 + 1) = v20;
  v72 = v19;
  v46 = v69;
  v47 = v70;
  v48 = v71;
  v49 = v19;
  v42 = v65;
  v43 = v66;
  v44 = v67;
  v45 = v68;
  v40 = v63;
  v41 = v64;
  v50 = 0;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E218B0);
  sub_22F8B0BE0();
  v21 = (uint64_t)v38;
  sub_22F98E704();
  sub_22F8B0DD0((uint64_t)&v63);
  v23 = *((_QWORD *)a1 + 8);
  v22 = *((_QWORD *)a1 + 9);
  v24 = v39;
  sub_22F87ABDC(v21, v39, &qword_255E218A8);
  v25 = (_QWORD *)(v24 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255E21900) + 36));
  *v25 = v23;
  v25[1] = v22;
  swift_bridgeObjectRetain();
  return sub_22F87AC20(v21, &qword_255E218A8);
}

uint64_t sub_22F8B0A30@<X0>(uint64_t a1@<X8>)
{
  return sub_22F8B01AC(a1);
}

uint64_t sub_22F8B0A78@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_22F8B04F0(*(double **)(v1 + 16), a1);
}

unint64_t sub_22F8B0A80()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E21868;
  if (!qword_255E21868)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E21860);
    v2[0] = sub_22F8B0B04();
    v2[1] = sub_22F87AA84(&qword_255E21890, &qword_255E21898, MEMORY[0x24BDEDC10]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E21868);
  }
  return result;
}

unint64_t sub_22F8B0B04()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E21870;
  if (!qword_255E21870)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E21878);
    v2[0] = sub_22F87AA84(&qword_255E21880, &qword_255E21888, MEMORY[0x24BDEB358]);
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E21870);
  }
  return result;
}

unint64_t sub_22F8B0B88()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255E1F0A0;
  if (!qword_255E1F0A0)
  {
    v1 = sub_22F98E098();
    result = MEMORY[0x2348A6784](MEMORY[0x24BDEE620], v1);
    atomic_store(result, (unint64_t *)&qword_255E1F0A0);
  }
  return result;
}

unint64_t sub_22F8B0BE0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E218B8;
  if (!qword_255E218B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E218B0);
    v2[0] = sub_22F8B0C64();
    v2[1] = sub_22F87AA84(&qword_255E218F0, &qword_255E218F8, MEMORY[0x24BDEFAD8]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E218B8);
  }
  return result;
}

unint64_t sub_22F8B0C64()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E218C0;
  if (!qword_255E218C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E218C8);
    v2[0] = sub_22F8B0CE8();
    v2[1] = sub_22F87AA84(&qword_255E1F108, &qword_255E1F110, MEMORY[0x24BDF1028]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E218C0);
  }
  return result;
}

unint64_t sub_22F8B0CE8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E218D0;
  if (!qword_255E218D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E218D8);
    v2[0] = sub_22F8B0D6C();
    v2[1] = sub_22F87AA84(&qword_255E1F0F8, &qword_255E1F100, MEMORY[0x24BDF1028]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E218D0);
  }
  return result;
}

unint64_t sub_22F8B0D6C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E218E0;
  if (!qword_255E218E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E218E8);
    v2[0] = MEMORY[0x24BDF40E8];
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E218E0);
  }
  return result;
}

uint64_t sub_22F8B0DD0(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

unint64_t sub_22F8B0E38()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E21908;
  if (!qword_255E21908)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E218A0);
    v2[0] = sub_22F8B0EBC();
    v2[1] = sub_22F87AA84(&qword_255E1F118, &qword_255E1F120, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E21908);
  }
  return result;
}

unint64_t sub_22F8B0EBC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E21910;
  if (!qword_255E21910)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E21858);
    v2[0] = sub_22F8B0F28();
    v2[1] = MEMORY[0x24BDEC468];
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E21910);
  }
  return result;
}

unint64_t sub_22F8B0F28()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E21918;
  if (!qword_255E21918)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E21850);
    v2[0] = sub_22F8B0FAC();
    v2[1] = sub_22F87AA84(&qword_255E1F9D0, &qword_255E1F9D8, MEMORY[0x24BDEB950]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E21918);
  }
  return result;
}

unint64_t sub_22F8B0FAC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E21920;
  if (!qword_255E21920)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E21848);
    v2[0] = sub_22F87AA84(&qword_255E21928, &qword_255E21840, MEMORY[0x24BDF43B0]);
    v2[1] = sub_22F87AA84(&qword_255E21930, &qword_255E21938, MEMORY[0x24BDF06D0]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E21920);
  }
  return result;
}

id sub_22F8B1048()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  objc_class *v10;
  objc_super v12;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB10 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_255E295E0);
  sub_22F87BC08(v5, (uint64_t)v4);
  v6 = sub_22F98DAA4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_22F87BC50((uint64_t)v4);
  }
  else
  {
    v8 = v1;
    sub_22F863858((uint64_t)v8, 0x74696E696564, 0xE600000000000000, 0, 0xE000000000000000);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  v9 = *(void **)&v1[OBJC_IVAR____TtC19ContactlessReaderUI16VoiceSynthPlayer_voiceSynthesizer];
  *(_QWORD *)&v1[OBJC_IVAR____TtC19ContactlessReaderUI16VoiceSynthPlayer_voiceSynthesizer] = 0;

  v10 = (objc_class *)type metadata accessor for VoiceSynthPlayer();
  v12.receiver = v1;
  v12.super_class = v10;
  return objc_msgSendSuper2(&v12, sel_dealloc);
}

uint64_t sub_22F8B122C()
{
  return type metadata accessor for VoiceSynthPlayer();
}

uint64_t type metadata accessor for VoiceSynthPlayer()
{
  uint64_t result;

  result = qword_255E219A0;
  if (!qword_255E219A0)
    return swift_getSingletonMetadata();
  return result;
}

id sub_22F8B1270()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id result;
  int v9;
  uint64_t v10;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB10 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_255E295E0);
  sub_22F87BC08(v5, (uint64_t)v4);
  v6 = sub_22F98DAA4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    result = (id)sub_22F87BC50((uint64_t)v4);
  }
  else
  {
    sub_22F863858(v1, 0x2928706F7473, 0xE600000000000000, 0, 0xE000000000000000);
    result = (id)(*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  v9 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI16VoiceSynthPlayer_speakingState);
  if (v9 == 1)
  {
    *(_BYTE *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI16VoiceSynthPlayer_stopInDelay) = 1;
  }
  else if (v9 == 2)
  {
    result = *(id *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI16VoiceSynthPlayer_voiceSynthesizer);
    if (result)
      return objc_msgSend(result, sel_stopSpeakingAtBoundary_, 0);
  }
  return result;
}

void sub_22F8B13CC(uint64_t a1, unint64_t a2, double a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(_QWORD, _QWORD);
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint8_t *v29;
  id v30;
  void *v31;
  uint64_t v32;
  id v33;
  double v34;
  char *v35;
  void (*v36)(char *, char *, uint64_t);
  _QWORD *v37;
  _BYTE *v38;
  void *v39;
  id v40;
  id v41;
  char *v42;
  id v43;
  char *v44;
  NSObject *v45;
  int v46;
  _BOOL4 v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  id v51;
  void (**v52)(_BYTE *, uint64_t);
  uint64_t v53;
  char *v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  void *v62;
  void *v63;
  id v64;
  void *v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  char **v69;
  char *v70;
  char isUniquelyReferenced_nonNull_native;
  id v72;
  char *v73;
  void *v74;
  char *v75;
  _BYTE v76[12];
  int v77;
  uint64_t v78;
  _BYTE *v79;
  uint64_t v80;
  void (*v81)(char *, char *, uint64_t);
  void (*v82)(_QWORD, _QWORD);
  char *v83;
  uint64_t v84;
  unsigned int (*v85)(_BYTE *, uint64_t, uint64_t);
  uint64_t v86;
  _BYTE *v87;
  void (**v88)(_BYTE *, uint64_t);
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92[3];
  uint64_t v93[5];

  v93[3] = *MEMORY[0x24BDAC8D0];
  v8 = sub_22F98D498();
  v88 = *(void (***)(_BYTE *, uint64_t))(v8 - 8);
  v89 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v87 = &v76[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_22F98D4B0();
  v11 = *(void (**)(_QWORD, _QWORD))(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = &v76[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = &v76[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v76[-v18];
  if (qword_255E1DB10 != -1)
    swift_once();
  v86 = __swift_project_value_buffer(v14, (uint64_t)qword_255E295E0);
  sub_22F87BC08(v86, (uint64_t)v19);
  v20 = sub_22F98DAA4();
  v21 = *(_QWORD *)(v20 - 8);
  v85 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v21 + 48);
  if (v85(v19, 1, v20) == 1)
  {
    sub_22F87BC50((uint64_t)v19);
  }
  else
  {
    v83 = v13;
    swift_bridgeObjectRetain_n();
    v22 = sub_22F98DA8C();
    v23 = sub_22F98F0A0();
    if (os_log_type_enabled(v22, v23))
    {
      v79 = v17;
      v24 = swift_slowAlloc();
      v82 = v11;
      v25 = (uint8_t *)v24;
      v26 = swift_slowAlloc();
      v80 = v10;
      v27 = v26;
      v93[0] = v26;
      v84 = v21;
      *(_DWORD *)v25 = 136315138;
      swift_bridgeObjectRetain();
      v92[0] = sub_22F878880(a1, a2, v93);
      v17 = v79;
      v21 = v84;
      sub_22F98F208();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_22F85B000, v22, v23, "VoiceSynthPlayer: play starting - text = %s", v25, 0xCu);
      swift_arrayDestroy();
      v28 = v27;
      v10 = v80;
      MEMORY[0x2348A6838](v28, -1, -1);
      v29 = v25;
      v11 = v82;
      MEMORY[0x2348A6838](v29, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    (*(void (**)(_BYTE *, uint64_t))(v21 + 8))(v19, v20);
    v13 = v83;
  }
  if (sub_22F98EE78())
  {
    v84 = v21;
    v30 = objc_allocWithZone(MEMORY[0x24BDB18F0]);
    swift_bridgeObjectRetain();
    v31 = (void *)sub_22F98ED94();
    swift_bridgeObjectRelease();
    v32 = v20;
    v33 = objc_msgSend(v30, sel_initWithString_, v31);

    *(float *)&v34 = a3;
    objc_msgSend(v33, sel_setRate_, v34);
    v35 = &v90[OBJC_IVAR____TtC19ContactlessReaderUI16VoiceSynthPlayer_locale];
    swift_beginAccess();
    v36 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v11 + 2);
    v83 = v35;
    v81 = v36;
    v36(v13, v35, v10);
    v37 = v11;
    v38 = v87;
    sub_22F98D4A4();
    v82 = (void (*)(_QWORD, _QWORD))v37[1];
    v82(v13, v10);
    sub_22F98D480();
    v88[1](v38, v89);
    v39 = (void *)sub_22F98ED94();
    swift_bridgeObjectRelease();
    v40 = objc_msgSend((id)objc_opt_self(), sel_voiceWithLanguage_, v39);

    objc_msgSend(v33, sel_setVoice_, v40);
    sub_22F87BC08(v86, (uint64_t)v17);
    v89 = v32;
    if (v85(v17, 1, v32) == 1)
    {
      sub_22F87BC50((uint64_t)v17);
      if (a4 == 0.0)
      {
LABEL_21:
        v58 = sub_22F98EEF0();
        v59 = v90;
        v60 = &v90[OBJC_IVAR____TtC19ContactlessReaderUI16VoiceSynthPlayer_hashText];
        *(_QWORD *)v60 = v58;
        v60[8] = 0;
        v59[OBJC_IVAR____TtC19ContactlessReaderUI16VoiceSynthPlayer_speakingState] = 1;
        v61 = OBJC_IVAR____TtC19ContactlessReaderUI16VoiceSynthPlayer_voiceSynthesizer;
        v62 = *(void **)&v59[OBJC_IVAR____TtC19ContactlessReaderUI16VoiceSynthPlayer_voiceSynthesizer];
        if (v62)
          goto LABEL_22;
        v72 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB18E8]), sel_init);
        v73 = v90;
        v74 = *(void **)&v90[v61];
        *(_QWORD *)&v90[v61] = v72;

        v66 = *(void **)&v73[v61];
        if (!v66)
        {
          v63 = v40;
          goto LABEL_23;
        }
        v75 = v90;
        objc_msgSend(v66, sel_setDelegate_, v90);
        v62 = *(void **)&v75[v61];
        if (v62)
        {
LABEL_22:
          v63 = v40;
          v81(v13, v83, v10);
          v64 = v62;
          sub_22F98D3CC();
          v82(v13, v10);
          v65 = (void *)sub_22F98ED94();
          swift_bridgeObjectRelease();
          objc_msgSend(v64, sel_setAccessibilityLanguage_, v65);

          v66 = *(void **)&v90[v61];
        }
        else
        {
          v63 = v40;
          v66 = 0;
        }
LABEL_23:
        objc_msgSend(v66, sel_speakUtterance_, v33);
        v67 = MEMORY[0x2348A68F8](&v90[OBJC_IVAR____TtC19ContactlessReaderUI16VoiceSynthPlayer_audioPlayerDelegate]);
        if (v67)
        {
          v68 = v67;
          v69 = (char **)(v67 + 48);
          swift_beginAccess();
          v70 = *(char **)(v68 + 48);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)(v68 + 48) = v70;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            v70 = sub_22F8B2BD4((uint64_t)v70);
            *v69 = v70;
          }
          if (*((_QWORD *)v70 + 2) < 2uLL)
            __break(1u);
          v70[33] = 1;
          swift_endAccess();
          swift_unknownObjectRelease();
        }
        sub_22F8B21E0();

        return;
      }
    }
    else
    {
      v87 = v33;
      v88 = (void (**)(_BYTE *, uint64_t))v40;
      v80 = v10;
      v41 = v40;
      v42 = v90;
      v43 = v41;
      v44 = v42;
      v45 = sub_22F98DA8C();
      v46 = sub_22F98F0A0();
      v47 = os_log_type_enabled(v45, (os_log_type_t)v46);
      v48 = v84;
      if (v47)
      {
        v77 = v46;
        v79 = v17;
        v85 = (unsigned int (*)(_BYTE *, uint64_t, uint64_t))a1;
        v86 = a2;
        v49 = swift_slowAlloc();
        v50 = (_QWORD *)swift_slowAlloc();
        v78 = swift_slowAlloc();
        v92[0] = v78;
        *(_DWORD *)v49 = 138412546;
        if (v43)
        {
          v91 = (uint64_t)v43;
          v51 = v43;
          sub_22F98F208();
          v52 = v88;
        }
        else
        {
          v91 = 0;
          sub_22F98F208();
          v52 = 0;
        }
        *v50 = v52;

        *(_WORD *)(v49 + 12) = 2080;
        v10 = v80;
        v81(v13, v83, v80);
        sub_22F8B2CD0();
        v53 = sub_22F98F418();
        v54 = v13;
        v56 = v55;
        v82(v54, v10);
        v91 = sub_22F878880(v53, v56, v92);
        sub_22F98F208();

        v13 = v54;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_22F85B000, v45, (os_log_type_t)v77, "VoiceSynthPlayer: selected voice = %@ from locale = %s", (uint8_t *)v49, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_255E22DE0);
        swift_arrayDestroy();
        MEMORY[0x2348A6838](v50, -1, -1);
        v57 = v78;
        swift_arrayDestroy();
        MEMORY[0x2348A6838](v57, -1, -1);
        MEMORY[0x2348A6838](v49, -1, -1);

        v17 = v79;
      }
      else
      {

        v10 = v80;
      }
      (*(void (**)(_BYTE *, uint64_t))(v48 + 8))(v17, v89);
      v33 = v87;
      v40 = v88;
      if (a4 == 0.0)
        goto LABEL_21;
    }
    objc_msgSend(v33, sel_setPreUtteranceDelay_, a4);
    goto LABEL_21;
  }
}

uint64_t sub_22F8B1CFC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t result;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v28 - v10;
  if (qword_255E1DB10 != -1)
    swift_once();
  v12 = __swift_project_value_buffer(v6, (uint64_t)qword_255E295E0);
  sub_22F87BC08(v12, (uint64_t)v11);
  v13 = sub_22F98DAA4();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v15(v11, 1, v13) == 1)
  {
    result = sub_22F87BC50((uint64_t)v11);
  }
  else
  {
    v32 = v12;
    v33 = a1;
    swift_bridgeObjectRetain_n();
    v17 = sub_22F98DA8C();
    v18 = sub_22F98F0A0();
    if (os_log_type_enabled(v17, v18))
    {
      v31 = v3;
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = swift_slowAlloc();
      v30 = v9;
      v21 = v20;
      v35 = v20;
      v29 = v14;
      *(_DWORD *)v19 = 136315138;
      swift_bridgeObjectRetain();
      v34 = sub_22F878880(v33, a2, &v35);
      v3 = v31;
      v14 = v29;
      sub_22F98F208();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_22F85B000, v17, v18, "VoiceSynthPlayer: play ended - text = %s", v19, 0xCu);
      swift_arrayDestroy();
      v22 = v21;
      v9 = v30;
      MEMORY[0x2348A6838](v22, -1, -1);
      MEMORY[0x2348A6838](v19, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    result = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    v12 = v32;
  }
  if (*(_BYTE *)(v3 + OBJC_IVAR____TtC19ContactlessReaderUI16VoiceSynthPlayer_speakingState))
  {
    v23 = *(_QWORD *)(v3 + OBJC_IVAR____TtC19ContactlessReaderUI16VoiceSynthPlayer_hashText);
    v24 = *(_BYTE *)(v3 + OBJC_IVAR____TtC19ContactlessReaderUI16VoiceSynthPlayer_hashText + 8);
    result = sub_22F98EEF0();
    if ((v24 & 1) == 0 && v23 == result)
    {
      sub_22F87BC08(v12, (uint64_t)v9);
      if (v15(v9, 1, v13) == 1)
      {
        sub_22F87BC50((uint64_t)v9);
      }
      else
      {
        v25 = sub_22F98DA8C();
        v26 = sub_22F98F0A0();
        if (os_log_type_enabled(v25, v26))
        {
          v27 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v27 = 0;
          _os_log_impl(&dword_22F85B000, v25, v26, "VoiceSynthPlayer: speechSynthesizer didFinish", v27, 2u);
          MEMORY[0x2348A6838](v27, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v13);
      }
      if (*(_QWORD *)(v3 + OBJC_IVAR____TtC19ContactlessReaderUI16VoiceSynthPlayer_safeguardTimer))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        sub_22F98F148();
        swift_unknownObjectRelease();
      }
      return sub_22F8B208C();
    }
  }
  return result;
}

uint64_t sub_22F8B208C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E21AB0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI16VoiceSynthPlayer_speakingState) = 0;
  result = MEMORY[0x2348A68F8](v0 + OBJC_IVAR____TtC19ContactlessReaderUI16VoiceSynthPlayer_audioPlayerDelegate);
  if (result)
  {
    v5 = result;
    v6 = (uint64_t *)(result + 48);
    swift_beginAccess();
    v7 = *(_QWORD *)(v5 + 48);
    result = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v5 + 48) = v7;
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_22F8B2BD4(v7);
      v7 = result;
      *v6 = result;
    }
    if (*(_QWORD *)(v7 + 16) < 2uLL)
    {
      __break(1u);
    }
    else
    {
      *(_BYTE *)(v7 + 33) = 0;
      swift_endAccess();
      v8 = sub_22F98EFD4();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
      v9 = (_QWORD *)swift_allocObject();
      v9[2] = 0;
      v9[3] = 0;
      v9[4] = v5;
      swift_retain();
      sub_22F884920((uint64_t)v3, (uint64_t)&unk_255E21AC8, (uint64_t)v9);
      swift_release();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_22F8B21E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t ObjectType;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  void (*v32)(_QWORD *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD aBlock[6];

  v0 = sub_22F98EB78();
  v41 = *(_QWORD *)(v0 - 8);
  v42 = v0;
  v1 = MEMORY[0x24BDAC7A8](v0);
  v40 = (uint64_t *)((char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v1);
  v39 = (uint64_t)&v34 - v3;
  v4 = sub_22F98EBC0();
  v37 = *(_QWORD *)(v4 - 8);
  v38 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v34 - v8;
  v10 = sub_22F98EB84();
  v35 = *(_QWORD *)(v10 - 8);
  v36 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_22F98EB9C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_22F98F124();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22F8B2C4C();
  sub_22F98F118();
  v21 = sub_22F98F130();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  ObjectType = swift_getObjectType();
  v23 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_22F8B2CAC;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22F8644F0;
  aBlock[3] = &block_descriptor_12;
  v24 = _Block_copy(aBlock);
  swift_retain();
  sub_22F8BB6C8();
  sub_22F8BB6CC();
  sub_22F98F13C();
  _Block_release(v24);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v12, v36);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  swift_release();
  swift_release();
  sub_22F98EBB4();
  if (qword_255E1DC48 != -1)
    swift_once();
  v25 = v42;
  v26 = __swift_project_value_buffer(v42, (uint64_t)qword_255E29878);
  MEMORY[0x2348A57C4](v7, v26);
  v27 = *(void (**)(char *, uint64_t))(v37 + 8);
  v28 = v7;
  v29 = v38;
  v27(v28, v38);
  v30 = v39;
  sub_22F8BB748(v39);
  v31 = v40;
  sub_22F8BB78C(v40);
  MEMORY[0x2348A5D34](v9, v30, v31, ObjectType);
  v32 = *(void (**)(_QWORD *, uint64_t))(v41 + 8);
  v32(v31, v25);
  v32((_QWORD *)v30, v25);
  v27(v9, v29);
  sub_22F98F154();
  *(_QWORD *)(v43 + OBJC_IVAR____TtC19ContactlessReaderUI16VoiceSynthPlayer_safeguardTimer) = v21;
  return swift_unknownObjectRelease();
}

void sub_22F8B2580(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void *v15;
  _BYTE v16[24];

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = a1 + 16;
  if (qword_255E1DB10 != -1)
    swift_once();
  v6 = __swift_project_value_buffer(v2, (uint64_t)qword_255E295E0);
  sub_22F87BC08(v6, (uint64_t)v4);
  v7 = sub_22F98DAA4();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v4, 1, v7) == 1)
  {
    sub_22F87BC50((uint64_t)v4);
  }
  else
  {
    v9 = sub_22F98DA8C();
    v10 = sub_22F98F0A0();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_22F85B000, v9, v10, "VoiceSynthPlayer: safeguard triggered", v11, 2u);
      MEMORY[0x2348A6838](v11, -1, -1);
    }

    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v4, v7);
  }
  swift_beginAccess();
  v12 = (char *)MEMORY[0x2348A68F8](v5);
  if (v12)
  {
    v13 = &v12[OBJC_IVAR____TtC19ContactlessReaderUI16VoiceSynthPlayer_hashText];
    *(_QWORD *)v13 = 0;
    v13[8] = 0;

  }
  swift_beginAccess();
  v14 = MEMORY[0x2348A68F8](v5);
  if (v14)
  {
    v15 = (void *)v14;
    sub_22F8B208C();

  }
}

uint64_t sub_22F8B2780()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22F98D4B0();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SpeakingState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_22F8B2960 + 4 * byte_22F994A65[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_22F8B2994 + 4 * byte_22F994A60[v4]))();
}

uint64_t sub_22F8B2994(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22F8B299C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22F8B29A4);
  return result;
}

uint64_t sub_22F8B29B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22F8B29B8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_22F8B29BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22F8B29C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SpeakingState()
{
  return &type metadata for SpeakingState;
}

unint64_t sub_22F8B29E4()
{
  unint64_t result;

  result = qword_255E21A70;
  if (!qword_255E21A70)
  {
    result = MEMORY[0x2348A6784](&unk_22F994B38, &type metadata for SpeakingState);
    atomic_store(result, (unint64_t *)&qword_255E21A70);
  }
  return result;
}

void sub_22F8B2A28(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char **v12;
  char *v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;

  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E21AB0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    sub_22F8B13CC(a1, a2, 0.43, *(double *)&a3);
  }
  else
  {
    *(_BYTE *)(v3 + OBJC_IVAR____TtC19ContactlessReaderUI16VoiceSynthPlayer_speakingState) = 0;
    v10 = MEMORY[0x2348A68F8](v3 + OBJC_IVAR____TtC19ContactlessReaderUI16VoiceSynthPlayer_audioPlayerDelegate);
    if (v10)
    {
      v11 = v10;
      v12 = (char **)(v10 + 48);
      swift_beginAccess();
      v13 = *(char **)(v11 + 48);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v11 + 48) = v13;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v13 = sub_22F8B2BD4((uint64_t)v13);
        *v12 = v13;
      }
      if (*((_QWORD *)v13 + 2) < 2uLL)
      {
        __break(1u);
      }
      else
      {
        v13[33] = 0;
        swift_endAccess();
        v15 = sub_22F98EFD4();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v9, 1, 1, v15);
        v16 = (_QWORD *)swift_allocObject();
        v16[2] = 0;
        v16[3] = 0;
        v16[4] = v11;
        swift_retain();
        sub_22F884920((uint64_t)v9, (uint64_t)&unk_255E1F5F0, (uint64_t)v16);
        swift_release();
        swift_release();
      }
    }
  }
}

char *sub_22F8B2BC0(uint64_t a1)
{
  return sub_22F97962C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

char *sub_22F8B2BD4(uint64_t a1)
{
  return sub_22F979850(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

_QWORD *sub_22F8B2BE8(_QWORD *a1)
{
  return sub_22F979724(0, a1[2], 0, a1);
}

void sub_22F8B2C00()
{
  uint64_t v0;
  void *v1;

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI16VoiceSynthPlayer_stopInDelay) == 1)
  {
    *(_BYTE *)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI16VoiceSynthPlayer_stopInDelay) = 0;
    v1 = *(void **)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI16VoiceSynthPlayer_voiceSynthesizer);
    if (v1)
      objc_msgSend(v1, sel_stopSpeakingAtBoundary_, 0);
  }
  else
  {
    *(_BYTE *)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI16VoiceSynthPlayer_speakingState) = 2;
  }
}

unint64_t sub_22F8B2C4C()
{
  unint64_t result;

  result = qword_255E21AC0;
  if (!qword_255E21AC0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255E21AC0);
  }
  return result;
}

uint64_t sub_22F8B2C88()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_22F8B2CAC()
{
  uint64_t v0;

  sub_22F8B2580(v0);
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

unint64_t sub_22F8B2CD0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255E21AD0;
  if (!qword_255E21AD0)
  {
    v1 = sub_22F98D4B0();
    result = MEMORY[0x2348A6784](MEMORY[0x24BDCEEF0], v1);
    atomic_store(result, (unint64_t *)&qword_255E21AD0);
  }
  return result;
}

_QWORD *sub_22F8B2D1C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for VocalMessage(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

_QWORD *assignWithTake for VocalMessage(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for VocalMessage(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VocalMessage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for VocalMessage()
{
  return &type metadata for VocalMessage;
}

uint64_t destroy for ButtonsContainerView()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

_QWORD *_s19ContactlessReaderUI20ButtonsContainerViewVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ButtonsContainerView(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for ButtonsContainerView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  swift_release();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ButtonsContainerView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ButtonsContainerView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ButtonsContainerView()
{
  return &type metadata for ButtonsContainerView;
}

uint64_t sub_22F8B3034()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22F8B3044@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v32;
  uint64_t *v33;
  _OWORD *v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  uint64_t v77;

  v50 = a2;
  v64 = a4;
  v54 = sub_22F98E098();
  v51 = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54);
  v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21AE0);
  v56 = *(_QWORD *)(v57 - 8);
  v8 = MEMORY[0x24BDAC7A8](v57);
  v52 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v59 = (char *)&v49 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21AE8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21AF0);
  MEMORY[0x24BDAC7A8](v49);
  v55 = (uint64_t)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21AF8);
  v15 = MEMORY[0x24BDAC7A8](v61);
  v53 = (uint64_t)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v58 = (uint64_t)&v49 - v17;
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21B00);
  MEMORY[0x24BDAC7A8](v62);
  v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21B08);
  MEMORY[0x24BDAC7A8](v60);
  v21 = (char *)&v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21B10);
  MEMORY[0x24BDAC7A8](v63);
  v23 = (char *)&v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    type metadata accessor for IdentityViewModel();
    sub_22F862548(&qword_255E21B18, (uint64_t (*)(uint64_t))type metadata accessor for IdentityViewModel, (uint64_t)&unk_22F996C1C);
    result = sub_22F98DF54();
    __break(1u);
    return result;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  swift_release();
  if (sub_22F936434(v73) == 0x73736563637573 && v24 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v25 = sub_22F98F430();
    swift_bridgeObjectRelease();
    if ((v25 & 1) == 0)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      sub_22F98DBA0();
      swift_release();
      swift_release();
      swift_release();
      if ((sub_22F8B3948(v73, a3) & 1) != 0)
      {
        swift_storeEnumTagMultiPayload();
        sub_22F8B4454();
        return sub_22F98E1E8();
      }
      *(_QWORD *)v13 = sub_22F98E0B0();
      *((_QWORD *)v13 + 1) = 0;
      v13[16] = 1;
      v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21B20);
      sub_22F8B3E70(a1, v50, a3, (uint64_t)&v13[*(int *)(v36 + 44)]);
      sub_22F98E08C();
      sub_22F98EB18();
      v37 = sub_22F862548((unint64_t *)&qword_255E1F0A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEE630], MEMORY[0x24BDEE620]);
      v38 = v59;
      v39 = v54;
      sub_22F98DC18();
      swift_release();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v7, v39);
      v40 = v56;
      v41 = v38;
      v42 = v57;
      (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v52, v41, v57);
      *(_QWORD *)&v73 = v39;
      *((_QWORD *)&v73 + 1) = v37;
      swift_getOpaqueTypeConformance2();
      v43 = sub_22F98DD80();
      v44 = v55;
      sub_22F87ABDC((uint64_t)v13, v55, &qword_255E21AE8);
      *(_QWORD *)(v44 + *(int *)(v49 + 36)) = v43;
      (*(void (**)(char *, uint64_t))(v40 + 8))(v59, v42);
      sub_22F87AC20((uint64_t)v13, &qword_255E21AE8);
      v45 = sub_22F98EA88();
      v46 = v53;
      sub_22F8F9EAC(0.0, 1, 0.0, 1, 342.0, 0, 0.0, 1, v53, 0.0, 1, 0.0, 1, v45, v47);
      sub_22F87AC20(v44, &qword_255E21AF0);
      v48 = v58;
      sub_22F8B423C(v46, v58);
      v33 = &qword_255E21AF8;
      sub_22F87ABDC(v48, (uint64_t)v21, &qword_255E21AF8);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_255E21B28);
      sub_22F8B4284();
      sub_22F8B434C();
      sub_22F98E1E8();
      sub_22F87ABDC((uint64_t)v23, (uint64_t)v19, &qword_255E21B10);
      swift_storeEnumTagMultiPayload();
      sub_22F8B4454();
      sub_22F98E1E8();
      sub_22F87AC20((uint64_t)v23, &qword_255E21B10);
      v34 = (_OWORD *)v48;
      return sub_22F87AC20((uint64_t)v34, v33);
    }
  }
  swift_retain();
  v26 = sub_22F8EA090();
  swift_release();
  *(_QWORD *)&v76 = type metadata accessor for IdentityViewModel();
  *((_QWORD *)&v76 + 1) = &off_24FD23260;
  *((_QWORD *)&v74 + 1) = a1;
  LOBYTE(v65) = 0;
  swift_retain();
  sub_22F98E8F0();
  LOBYTE(v73) = v68;
  *((_QWORD *)&v73 + 1) = *((_QWORD *)&v68 + 1);
  LOBYTE(v74) = v26;
  v68 = xmmword_22F994BC0;
  v69 = xmmword_22F994BD0;
  v66 = 0;
  v65 = 0;
  __asm { FMOV            V0.2D, #1.0 }
  v67 = _Q0;
  sub_22F883CC8();
  sub_22F98DD68();
  sub_22F98DD50();
  v32 = sub_22F98DD14();
  swift_release();
  swift_release();
  sub_22F8B44C0((uint64_t)&v73, (uint64_t)&v68);
  v72 = v32;
  sub_22F8B44FC((uint64_t)&v73);
  v75 = v70;
  v76 = v71;
  v77 = v72;
  v73 = v68;
  v74 = v69;
  v33 = &qword_255E21B28;
  sub_22F87ABDC((uint64_t)&v73, (uint64_t)v21, &qword_255E21B28);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E21B28);
  sub_22F8B4284();
  sub_22F8B434C();
  sub_22F98E1E8();
  sub_22F87ABDC((uint64_t)v23, (uint64_t)v19, &qword_255E21B10);
  swift_storeEnumTagMultiPayload();
  sub_22F8B4454();
  sub_22F98E1E8();
  sub_22F87AC20((uint64_t)v23, &qword_255E21B10);
  v34 = &v73;
  return sub_22F87AC20((uint64_t)v34, v33);
}

uint64_t sub_22F8B3948(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_22F98F4FC();
    sub_22F936434(a1);
    sub_22F98EE6C();
    swift_bridgeObjectRelease();
    v4 = sub_22F98F520() & ~(-1 << *(_BYTE *)(a2 + 32));
    if (((*(_QWORD *)(a2 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
      __asm { BR              X9 }
  }
  return 0;
}

uint64_t sub_22F8B3E70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t (*v15)();
  _QWORD *v16;
  char v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t (*v24)();
  _QWORD *v25;
  char v26;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21B60);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v23 - v12;
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a1;
  v14[3] = a2;
  v14[4] = a3;
  v24 = sub_22F8B4534;
  v25 = v14;
  sub_22F8B4540();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_22F98E704();
  swift_release();
  type metadata accessor for IdentityViewModel();
  sub_22F862548(&qword_255E21B18, (uint64_t (*)(uint64_t))type metadata accessor for IdentityViewModel, (uint64_t)&unk_22F996C1C);
  sub_22F98DF48();
  swift_getKeyPath();
  sub_22F98DF60();
  swift_release();
  swift_release();
  v15 = v24;
  v16 = v25;
  v17 = v26;
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = a1;
  v18[3] = a2;
  v18[4] = a3;
  sub_22F87ABDC((uint64_t)v13, (uint64_t)v11, &qword_255E21B60);
  sub_22F87ABDC((uint64_t)v11, a4, &qword_255E21B60);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21B70);
  v20 = a4 + *(int *)(v19 + 48);
  *(_QWORD *)v20 = 0;
  *(_BYTE *)(v20 + 8) = 1;
  v21 = a4 + *(int *)(v19 + 64);
  *(_QWORD *)v21 = v15;
  *(_QWORD *)(v21 + 8) = v16;
  *(_BYTE *)(v21 + 16) = v17;
  *(_QWORD *)(v21 + 24) = sub_22F8B45B4;
  *(_QWORD *)(v21 + 32) = v18;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_22F87AC20((uint64_t)v13, &qword_255E21B60);
  swift_release();
  swift_release();
  swift_release();
  return sub_22F87AC20((uint64_t)v11, &qword_255E21B60);
}

uint64_t sub_22F8B40E8(uint64_t a1)
{
  uint64_t result;

  if (a1)
  {
    swift_retain();
    sub_22F8EBD38(0);
    return swift_release();
  }
  else
  {
    type metadata accessor for IdentityViewModel();
    sub_22F862548(&qword_255E21B18, (uint64_t (*)(uint64_t))type metadata accessor for IdentityViewModel, (uint64_t)&unk_22F996C1C);
    result = sub_22F98DF54();
    __break(1u);
  }
  return result;
}

void sub_22F8B4158(uint64_t a1)
{
  if (a1)
  {
    swift_retain();
    sub_22F8ECE24();
    swift_release();
    UIAccessibilityPostNotification(*MEMORY[0x24BEBDEC8], 0);
  }
  else
  {
    type metadata accessor for IdentityViewModel();
    sub_22F862548(&qword_255E21B18, (uint64_t (*)(uint64_t))type metadata accessor for IdentityViewModel, (uint64_t)&unk_22F996C1C);
    sub_22F98DF54();
    __break(1u);
  }
}

uint64_t sub_22F8B41D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *v1;
  v4 = v1[1];
  v5 = v1[2];
  *(_QWORD *)a1 = sub_22F98E128();
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21AD8);
  return sub_22F8B3044(v3, v4, v5, a1 + *(int *)(v6 + 44));
}

uint64_t sub_22F8B423C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21AF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_22F8B4284()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E21B30;
  if (!qword_255E21B30)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E21B28);
    v2[0] = sub_22F8B4308();
    v2[1] = sub_22F87AA84(&qword_255E1F118, &qword_255E1F120, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E21B30);
  }
  return result;
}

unint64_t sub_22F8B4308()
{
  unint64_t result;

  result = qword_255E21B38;
  if (!qword_255E21B38)
  {
    result = MEMORY[0x2348A6784](&unk_22F9979B4, &type metadata for ConfirmationButtons);
    atomic_store(result, (unint64_t *)&qword_255E21B38);
  }
  return result;
}

unint64_t sub_22F8B434C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E21B40;
  if (!qword_255E21B40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E21AF8);
    v2[0] = sub_22F8B43B8();
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E21B40);
  }
  return result;
}

unint64_t sub_22F8B43B8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E21B48;
  if (!qword_255E21B48)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E21AF0);
    v2[0] = sub_22F87AA84(&qword_255E21B50, &qword_255E21AE8, MEMORY[0x24BDF4498]);
    v2[1] = sub_22F87AA84(&qword_255E1F118, &qword_255E1F120, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E21B48);
  }
  return result;
}

unint64_t sub_22F8B4454()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E21B58;
  if (!qword_255E21B58)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E21B10);
    v2[0] = sub_22F8B4284();
    v2[1] = sub_22F8B434C();
    result = MEMORY[0x2348A6784](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E21B58);
  }
  return result;
}

uint64_t sub_22F8B44C0(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for ConfirmationButtons(a2, a1);
  return a2;
}

uint64_t sub_22F8B44FC(uint64_t a1)
{
  destroy for ConfirmationButtons(a1);
  return a1;
}

uint64_t sub_22F8B4534()
{
  uint64_t v0;

  return sub_22F8B40E8(*(_QWORD *)(v0 + 16));
}

unint64_t sub_22F8B4540()
{
  unint64_t result;

  result = qword_255E21B68;
  if (!qword_255E21B68)
  {
    result = MEMORY[0x2348A6784](&unk_22F991AA0, &type metadata for XmarkButton);
    atomic_store(result, (unint64_t *)&qword_255E21B68);
  }
  return result;
}

uint64_t objectdestroyTm_10()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_22F8B45B4()
{
  uint64_t v0;

  sub_22F8B4158(*(_QWORD *)(v0 + 16));
}

uint64_t sub_22F8B45C0()
{
  return sub_22F87AA84(&qword_255E21B78, &qword_255E21B80, MEMORY[0x24BDF4700]);
}

uint64_t sub_22F8B45EC(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  _QWORD v24[2];
  __int128 v25;
  char v26;
  uint64_t v27;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v24 - v6;
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v24 - v8;
  v25 = *(_OWORD *)(v1 + 88);
  v26 = *(_BYTE *)(v1 + 104);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F098);
  MEMORY[0x2348A5560](&v27);
  if (v27 == 1 && (sub_22F98ECA4() & 1) == 0)
  {
    if (qword_255E1DB18 != -1)
      swift_once();
    v15 = __swift_project_value_buffer(v3, (uint64_t)qword_255E295F8);
    sub_22F87BC08(v15, (uint64_t)v9);
    v16 = sub_22F98DAA4();
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v9, 1, v16) == 1)
    {
      sub_22F87BC50((uint64_t)v9);
    }
    else
    {
      v18 = sub_22F98DA8C();
      v19 = sub_22F98F07C();
      if (os_log_type_enabled(v18, v19))
      {
        v20 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v20 = 0;
        _os_log_impl(&dword_22F85B000, v18, v19, "Starting scanner", v20, 2u);
        MEMORY[0x2348A6838](v20, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v17 + 8))(v9, v16);
    }
    return sub_22F98ECD4();
  }
  else
  {
    v25 = *(_OWORD *)(v1 + 88);
    v26 = *(_BYTE *)(v1 + 104);
    result = (uint64_t)MEMORY[0x2348A5560](&v27, v10);
    if ((v27 & 1) == 0)
    {
      result = sub_22F98ECA4();
      if ((result & 1) != 0)
      {
        if (qword_255E1DB18 != -1)
          swift_once();
        v12 = __swift_project_value_buffer(v3, (uint64_t)qword_255E295F8);
        sub_22F87BC08(v12, (uint64_t)v7);
        v13 = sub_22F98DAA4();
        v14 = *(_QWORD *)(v13 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v7, 1, v13) == 1)
        {
          sub_22F87BC50((uint64_t)v7);
        }
        else
        {
          v21 = sub_22F98DA8C();
          v22 = sub_22F98F07C();
          if (os_log_type_enabled(v21, v22))
          {
            v23 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v23 = 0;
            _os_log_impl(&dword_22F85B000, v21, v22, "Stopping scanner", v23, 2u);
            MEMORY[0x2348A6838](v23, -1, -1);
          }

          (*(void (**)(char *, uint64_t))(v14 + 8))(v7, v13);
        }
        sub_22F98ECC8();
        return (uint64_t)objc_msgSend(a1, sel_dismissViewControllerAnimated_completion_, 1, 0);
      }
    }
  }
  return result;
}

uint64_t sub_22F8B4AE0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  char v16;
  uint64_t v17;

  v2 = *v1;
  v15 = v1[1];
  v4 = v1[2];
  v3 = v1[3];
  v5 = v1[4];
  v6 = v1[5];
  v7 = v1[6];
  v9 = v1[7];
  v8 = v1[8];
  v10 = v1[10];
  v17 = v1[9];
  v12 = v1[11];
  v11 = v1[12];
  v16 = *((_BYTE *)v1 + 104);
  type metadata accessor for QRCodeScannerViewCoordinator();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v2;
  *(_QWORD *)(v13 + 24) = v15;
  *(_QWORD *)(v13 + 32) = v4;
  *(_QWORD *)(v13 + 40) = v3;
  *(_QWORD *)(v13 + 48) = v5;
  *(_QWORD *)(v13 + 56) = v6;
  *(_QWORD *)(v13 + 64) = v7;
  *(_QWORD *)(v13 + 72) = v9;
  *(_QWORD *)(v13 + 80) = v8;
  *(_QWORD *)(v13 + 88) = v17;
  *(_QWORD *)(v13 + 96) = v10;
  *(_QWORD *)(v13 + 104) = v12;
  *(_QWORD *)(v13 + 112) = v11;
  *(_BYTE *)(v13 + 120) = v16;
  *a1 = v13;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_22F8B4BE8()
{
  sub_22F8B72E8();
  return sub_22F98E3BC();
}

uint64_t sub_22F8B4C38()
{
  sub_22F8B72E8();
  return sub_22F98E38C();
}

void sub_22F8B4C88()
{
  sub_22F8B72E8();
  sub_22F98E3B0();
  __break(1u);
}

uint64_t sub_22F8B4CAC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31[2];
  uint64_t v32[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v31 - v6;
  v8 = sub_22F98EC68();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_22F98EC74();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
  if ((*(unsigned int (**)(char *, uint64_t))(v13 + 88))(v15, v12) == *MEMORY[0x24BDFA060])
  {
    (*(void (**)(char *, uint64_t))(v13 + 96))(v15, v12);
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v15, v8);
    if (qword_255E1DB18 != -1)
      swift_once();
    v16 = __swift_project_value_buffer(v2, (uint64_t)qword_255E295F8);
    sub_22F87BC08(v16, (uint64_t)v7);
    v17 = sub_22F98DAA4();
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v7, 1, v17) == 1)
    {
      sub_22F87BC50((uint64_t)v7);
    }
    else
    {
      v22 = sub_22F98DA8C();
      v23 = sub_22F98F07C();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v24 = 0;
        _os_log_impl(&dword_22F85B000, v22, v23, "Barcode scanned!", v24, 2u);
        MEMORY[0x2348A6838](v24, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v17);
    }
    v25 = sub_22F98EC5C();
    if (v26)
    {
      v32[0] = v25;
      v32[1] = v26;
      sub_22F8B5050(v32, v31[0]);
      swift_bridgeObjectRelease();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    if (qword_255E1DB18 != -1)
      swift_once();
    v19 = __swift_project_value_buffer(v2, (uint64_t)qword_255E295F8);
    sub_22F87BC08(v19, (uint64_t)v5);
    v20 = sub_22F98DAA4();
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v5, 1, v20) == 1)
    {
      sub_22F87BC50((uint64_t)v5);
    }
    else
    {
      v28 = sub_22F98DA8C();
      v29 = sub_22F98F088();
      if (os_log_type_enabled(v28, v29))
      {
        v30 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v30 = 0;
        _os_log_impl(&dword_22F85B000, v28, v29, "Unknown DataScanner item", v30, 2u);
        MEMORY[0x2348A6838](v30, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v20);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
}

uint64_t sub_22F8B5050(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  v8 = a1[1];
  if (qword_255E1DB18 != -1)
    swift_once();
  v10 = __swift_project_value_buffer(v5, (uint64_t)qword_255E295F8);
  sub_22F87BC08(v10, (uint64_t)v7);
  v11 = sub_22F98DAA4();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v7, 1, v11) == 1)
  {
    sub_22F87BC50((uint64_t)v7);
  }
  else
  {
    v13 = sub_22F98DA8C();
    v14 = sub_22F98F07C();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v24 = v2;
      v16 = v15;
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_22F85B000, v13, v14, "Payload read!", v15, 2u);
      MEMORY[0x2348A6838](v16, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v11);
  }
  v17 = *(_QWORD *)(a2 + 88);
  v18 = *(_QWORD *)(a2 + 96);
  v21 = *(_OWORD *)(a2 + 72);
  v22 = v17;
  v23 = v18;
  v20[0] = v9;
  v20[1] = v8;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E21CC0);
  return sub_22F98E998();
}

uint64_t sub_22F8B5214()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_22F98EC38();
  sub_22F98EC2C();
  sub_22F98EC14();
  sub_22F98EC2C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F930);
  sub_22F98E998();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1FEC0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_22F994CC0;
  sub_22F98EC2C();
  *(_QWORD *)(v0 + 32) = v1;
  *(_QWORD *)(v0 + 40) = v2;
  sub_22F98EC38();
  *(_QWORD *)(v0 + 48) = v3;
  *(_QWORD *)(v0 + 56) = v4;
  sub_22F98EC20();
  *(_QWORD *)(v0 + 64) = v5;
  *(_QWORD *)(v0 + 72) = v6;
  sub_22F98EC14();
  *(_QWORD *)(v0 + 80) = v7;
  *(_QWORD *)(v0 + 88) = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E21C50);
  return sub_22F98E998();
}

uint64_t sub_22F8B5338()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for QRCodeScannerViewCoordinator()
{
  return objc_opt_self();
}

uint64_t destroy for QRCodeScannerView()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for QRCodeScannerView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  v6 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v6;
  v7 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v7;
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for QRCodeScannerView(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  return a1;
}

__n128 __swift_memcpy105_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_OWORD *)(a1 + 89) = *(__int128 *)((char *)a2 + 89);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for QRCodeScannerView(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_release();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_release();
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  return a1;
}

uint64_t getEnumTagSinglePayload for QRCodeScannerView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 105))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for QRCodeScannerView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 104) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 105) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 105) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for QRCodeScannerView()
{
  return &type metadata for QRCodeScannerView;
}

unint64_t sub_22F8B5810()
{
  unint64_t result;

  result = qword_255E21C40;
  if (!qword_255E21C40)
  {
    result = MEMORY[0x2348A6784](&unk_22F994D14, &type metadata for QRCodeScannerView);
    atomic_store(result, (unint64_t *)&qword_255E21C40);
  }
  return result;
}

uint64_t sub_22F8B5854(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  os_log_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint8_t *v33;
  uint8_t *v34;
  uint64_t v35;
  os_log_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v4 = sub_22F98EC44();
  v43 = *(_QWORD *)(v4 - 8);
  v44 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_22F98D3B4();
  v40 = *(_QWORD *)(v7 - 8);
  v41 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_22F98EC74();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB18 != -1)
    swift_once();
  v17 = __swift_project_value_buffer(v14, (uint64_t)qword_255E295F8);
  sub_22F87BC08(v17, (uint64_t)v16);
  v18 = sub_22F98DAA4();
  v42 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v16, 1, v18) == 1)
  {
    sub_22F87BC50((uint64_t)v16);
  }
  else
  {
    v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    v39 = a1;
    v19(v13, a1, v10);
    v20 = sub_22F98DA8C();
    v21 = sub_22F98F0A0();
    v38 = v21;
    if (os_log_type_enabled(v20, v21))
    {
      v36 = v20;
      v22 = (uint8_t *)swift_slowAlloc();
      v35 = swift_slowAlloc();
      v46 = v35;
      v37 = a2;
      *(_DWORD *)v22 = 136315138;
      v33 = v22 + 4;
      v34 = v22;
      sub_22F98EC08();
      sub_22F8B75C8(&qword_255E21C58, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v32 = v11;
      v23 = v41;
      v24 = sub_22F98F418();
      v31 = v10;
      v26 = v25;
      (*(void (**)(char *, uint64_t))(v40 + 8))(v9, v23);
      v45 = sub_22F878880(v24, v26, &v46);
      sub_22F98F208();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v13, v31);
      v27 = v36;
      v28 = v34;
      _os_log_impl(&dword_22F85B000, v36, (os_log_type_t)v38, "Add recognized item [ %s ]", v34, 0xCu);
      v29 = v35;
      swift_arrayDestroy();
      MEMORY[0x2348A6838](v29, -1, -1);
      MEMORY[0x2348A6838](v28, -1, -1);

    }
    else
    {

      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    }
    (*(void (**)(char *, uint64_t))(v42 + 8))(v16, v18);
    a1 = v39;
  }
  sub_22F8B4CAC(a1);
  sub_22F98EC50();
  sub_22F8B5214();
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v6, v44);
}

uint64_t sub_22F8B5C0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  int v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  os_log_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v31[2];
  uint64_t v32;
  uint8_t *v33;
  int v34;
  uint64_t v35;
  os_log_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE v43[24];

  v4 = sub_22F98D3B4();
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_22F98EC74();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB18 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v11, (uint64_t)qword_255E295F8);
  sub_22F87BC08(v14, (uint64_t)v13);
  v15 = sub_22F98DAA4();
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15) == 1)
  {
    sub_22F87BC50((uint64_t)v13);
  }
  else
  {
    v37 = v16;
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
    v17 = sub_22F98DA8C();
    v18 = sub_22F98F0A0();
    v19 = v18;
    if (os_log_type_enabled(v17, v18))
    {
      v36 = v17;
      v20 = swift_slowAlloc();
      v34 = v19;
      v21 = (uint8_t *)v20;
      v35 = swift_slowAlloc();
      v42 = v35;
      v32 = v7;
      v33 = v21;
      *(_DWORD *)v21 = 136315138;
      v31[1] = v21 + 12;
      v31[0] = v21 + 4;
      sub_22F98EC08();
      sub_22F8B75C8(&qword_255E21C58, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v22 = v39;
      v23 = sub_22F98F418();
      v25 = v24;
      (*(void (**)(char *, uint64_t))(v38 + 8))(v6, v22);
      v40 = sub_22F878880(v23, v25, &v42);
      sub_22F98F208();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v32);
      v26 = v36;
      v27 = v33;
      _os_log_impl(&dword_22F85B000, v36, (os_log_type_t)v34, "Remove recognized item [ %s ]", v33, 0xCu);
      v28 = v35;
      swift_arrayDestroy();
      MEMORY[0x2348A6838](v28, -1, -1);
      MEMORY[0x2348A6838](v27, -1, -1);

    }
    else
    {

      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
    (*(void (**)(char *, uint64_t))(v37 + 8))(v13, v15);
  }
  v42 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)v43 = *(_OWORD *)(a2 + 24);
  v40 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E21C50);
  sub_22F98E998();
  v29 = *(_QWORD *)(a2 + 48);
  v42 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)v43 = v29;
  *(_OWORD *)&v43[8] = *(_OWORD *)(a2 + 56);
  v40 = 0;
  v41 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F930);
  return sub_22F98E998();
}

uint64_t sub_22F8B5FA8(uint64_t a1, uint64_t a2)
{
  return sub_22F8B6CD0(a2);
}

void sub_22F8B5FB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_22F8B5FD0(a1, a2, a3, a4, a5, (void (*)(uint64_t, uint64_t))sub_22F8B5854);
}

uint64_t sub_22F8B5FBC(uint64_t a1, uint64_t a2)
{
  return sub_22F8B6E48(a2);
}

void sub_22F8B5FC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_22F8B5FD0(a1, a2, a3, a4, a5, (void (*)(uint64_t, uint64_t))sub_22F8B5C0C);
}

void sub_22F8B5FD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v7 = *(_QWORD *)(a2 + 16);
  if (v7)
  {
    v9 = v6;
    v11 = *(_QWORD *)(sub_22F98EC74() - 8);
    v12 = a2 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v13 = *(_QWORD *)(v11 + 72);
    swift_bridgeObjectRetain();
    do
    {
      a6(v12, v9);
      v12 += v13;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_22F8B6080(uint64_t a1, uint64_t a2)
{
  return sub_22F8B7024(a2);
}

uint64_t sub_22F8B6088(uint64_t a1)
{
  uint64_t v2;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E21CA0);
    sub_22F98F310();
    v2 = *(unsigned __int8 *)(a1 + 32);
    sub_22F98F4FC();
    __asm { BR              X8 }
  }
  return MEMORY[0x24BEE4B08];
}

uint64_t sub_22F8B6874(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t result;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;

  v2 = sub_22F98EC8C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v27 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E21C80);
    v10 = sub_22F98F310();
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v28 = v9;
    v29 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v32 = v10 + 56;
    while (1)
    {
      v30 = v11;
      v31(v8, v29 + v13 * v11, v2);
      sub_22F8B75C8(&qword_255E21C88, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDFA0D0], MEMORY[0x24BDFA0E0]);
      v14 = sub_22F98ED28();
      v15 = ~(-1 << *(_BYTE *)(v10 + 32));
      v16 = v14 & v15;
      v17 = (v14 & (unint64_t)v15) >> 6;
      v18 = *(_QWORD *)(v32 + 8 * v17);
      v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        do
        {
          v31(v6, *(_QWORD *)(v10 + 48) + v16 * v13, v2);
          sub_22F8B75C8(&qword_255E21C90, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDFA0D0], MEMORY[0x24BDFA0E8]);
          v20 = sub_22F98ED70();
          v21 = v3;
          v22 = *(void (**)(char *, uint64_t))(v3 + 8);
          v22(v6, v2);
          if ((v20 & 1) != 0)
          {
            v22(v8, v2);
            v3 = v21;
            v9 = v28;
            goto LABEL_4;
          }
          v16 = (v16 + 1) & v15;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v32 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          v3 = v21;
        }
        while ((v18 & (1 << v16)) != 0);
        v9 = v28;
      }
      *(_QWORD *)(v32 + 8 * v17) = v19 | v18;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v16 * v13, v8, v2);
      v24 = *(_QWORD *)(v10 + 16);
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
        break;
      *(_QWORD *)(v10 + 16) = v26;
LABEL_4:
      v11 = v30 + 1;
      if (v30 + 1 == v9)
        return v10;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B08];
  }
  return result;
}

uint64_t sub_22F8B6AE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;

  v0 = sub_22F98ECBC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E21C60);
  sub_22F98EC8C();
  v4 = swift_allocObject();
  v12 = xmmword_22F991B40;
  *(_OWORD *)(v4 + 16) = xmmword_22F991B40;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E21C68);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = v12;
  v6 = (void *)*MEMORY[0x24BDF9DA0];
  *(_QWORD *)(v5 + 32) = *MEMORY[0x24BDF9DA0];
  v7 = v6;
  sub_22F98EC80();
  swift_bridgeObjectRelease();
  sub_22F8B6874(v4);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BDFA118], v0);
  v8 = objc_allocWithZone((Class)sub_22F98ECF8());
  v9 = sub_22F98EC98();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E21C70);
  sub_22F98E3E0();
  sub_22F8B75C8(&qword_255E21C78, v10, (uint64_t (*)(uint64_t))type metadata accessor for QRCodeScannerViewCoordinator, (uint64_t)&unk_22F994DDC);
  sub_22F98ECEC();
  return v9;
}

uint64_t sub_22F8B6CD0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v12;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB18 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_255E295F8);
  sub_22F87BC08(v5, (uint64_t)v4);
  v6 = sub_22F98DAA4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_22F87BC50((uint64_t)v4);
  }
  else
  {
    v8 = sub_22F98DA8C();
    v9 = sub_22F98F0A0();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_22F85B000, v8, v9, "Tap recognized item", v10, 2u);
      MEMORY[0x2348A6838](v10, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  return sub_22F8B4CAC(a1);
}

uint64_t sub_22F8B6E48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[2];
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  double v39;
  double v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;

  v3 = sub_22F98EC44();
  v4 = *(_QWORD *)(v3 - 8);
  result = MEMORY[0x24BDAC7A8](v3);
  v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    v38 = v4;
    v10 = v6;
    v11 = *(_QWORD *)(sub_22F98EC74() - 8);
    v12 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v13 = *(_QWORD *)(v1 + 40);
    v14 = *(_QWORD *)(v1 + 48);
    v15 = *(_QWORD *)(v1 + 56);
    v16 = *(_QWORD *)(v1 + 64);
    v17 = *(_QWORD *)(v1 + 16);
    v37 = *(_OWORD *)(v1 + 24);
    v18 = *(_QWORD *)(v11 + 72);
    v35[1] = a1;
    swift_bridgeObjectRetain();
    v36 = xmmword_22F994CC0;
    do
    {
      sub_22F98EC50();
      sub_22F98EC38();
      v20 = v19;
      sub_22F98EC2C();
      v22 = v20 - v21;
      sub_22F98EC14();
      v24 = v23;
      sub_22F98EC2C();
      v41 = v13;
      *(_QWORD *)&v42 = v14;
      *((_QWORD *)&v42 + 1) = v15;
      v43 = v16;
      v39 = v22;
      v40 = v24 - v25;
      __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F930);
      sub_22F98E998();
      __swift_instantiateConcreteTypeFromMangledName(&qword_255E1FEC0);
      v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = v36;
      sub_22F98EC2C();
      *(_QWORD *)(v26 + 32) = v27;
      *(_QWORD *)(v26 + 40) = v28;
      sub_22F98EC38();
      *(_QWORD *)(v26 + 48) = v29;
      *(_QWORD *)(v26 + 56) = v30;
      sub_22F98EC20();
      *(_QWORD *)(v26 + 64) = v31;
      *(_QWORD *)(v26 + 72) = v32;
      sub_22F98EC14();
      *(_QWORD *)(v26 + 80) = v33;
      *(_QWORD *)(v26 + 88) = v34;
      v41 = v17;
      v42 = v37;
      v39 = *(double *)&v26;
      __swift_instantiateConcreteTypeFromMangledName(&qword_255E21C50);
      sub_22F98E998();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v8, v10);
      v12 += v18;
      --v9;
    }
    while (v9);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_22F8B7024(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v13)(char *, uint64_t, uint64_t);
  NSObject *v14;
  os_log_type_t v15;
  int v16;
  uint64_t v17;
  uint8_t *v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  uint8_t *v22;
  _QWORD v23[2];
  _QWORD *v24;
  uint8_t *v25;
  int v26;
  uint64_t v27;

  v2 = sub_22F98ECE0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB18 != -1)
    swift_once();
  v9 = __swift_project_value_buffer(v6, (uint64_t)qword_255E295F8);
  sub_22F87BC08(v9, (uint64_t)v8);
  v10 = sub_22F98DAA4();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) == 1)
    return sub_22F87BC50((uint64_t)v8);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v13(v5, a1, v2);
  v14 = sub_22F98DA8C();
  v15 = sub_22F98F088();
  v16 = v15;
  if (os_log_type_enabled(v14, v15))
  {
    v17 = swift_slowAlloc();
    v26 = v16;
    v18 = (uint8_t *)v17;
    v24 = (_QWORD *)swift_slowAlloc();
    v25 = v18;
    *(_DWORD *)v18 = 138412290;
    v23[1] = v18 + 4;
    sub_22F8B75C8(&qword_255E21C48, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDFA158], MEMORY[0x24BDFA160]);
    swift_allocError();
    v13(v19, (uint64_t)v5, v2);
    v20 = _swift_stdlib_bridgeErrorToNSError();
    v27 = v20;
    sub_22F98F208();
    v21 = v24;
    *v24 = v20;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v22 = v25;
    _os_log_impl(&dword_22F85B000, v14, (os_log_type_t)v26, "An error stopped QR scanner: [ %@ ]", v25, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E22DE0);
    swift_arrayDestroy();
    MEMORY[0x2348A6838](v21, -1, -1);
    MEMORY[0x2348A6838](v22, -1, -1);

  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v8, v10);
}

unint64_t sub_22F8B72E8()
{
  unint64_t result;

  result = qword_255E21C98;
  if (!qword_255E21C98)
  {
    result = MEMORY[0x2348A6784](&unk_22F994D64, &type metadata for QRCodeScannerView);
    atomic_store(result, (unint64_t *)&qword_255E21C98);
  }
  return result;
}

unint64_t sub_22F8B732C(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t (*v8)(uint64_t);
  BOOL v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;

  v1 = result;
  v2 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_22F98F3A0();
    result = swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_255E21CA8);
      result = sub_22F98F310();
      v3 = result;
      v19 = v1;
      if (!v2)
        goto LABEL_4;
LABEL_8:
      swift_bridgeObjectRetain();
      v4 = sub_22F98F3A0();
      result = swift_bridgeObjectRelease();
      if (!v4)
        return v3;
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v3 = MEMORY[0x24BEE4B08];
  v19 = v1;
  if (v2)
    goto LABEL_8;
LABEL_4:
  v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return v3;
LABEL_9:
  v6 = 0;
  v7 = v3 + 56;
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BDB9B60];
  v18 = v4;
  while ((v19 & 0xC000000000000001) != 0)
  {
    result = MEMORY[0x2348A5F08](v6, v19);
    v9 = __OFADD__(v6++, 1);
    if (v9)
      goto LABEL_26;
LABEL_18:
    v20 = result;
    sub_22F98DB58();
    sub_22F8B75C8(&qword_255E21CB0, 255, v8, MEMORY[0x24BDB9B70]);
    result = sub_22F98ED28();
    v10 = -1 << *(_BYTE *)(v3 + 32);
    v11 = result & ~v10;
    v12 = v11 >> 6;
    v13 = *(_QWORD *)(v7 + 8 * (v11 >> 6));
    v14 = 1 << v11;
    if (((1 << v11) & v13) != 0)
    {
      v15 = ~v10;
      sub_22F8B75C8(&qword_255E21CB8, 255, v8, MEMORY[0x24BDB9B78]);
      do
      {
        result = sub_22F98ED70();
        if ((result & 1) != 0)
        {
          result = swift_release();
          v4 = v18;
          goto LABEL_11;
        }
        v11 = (v11 + 1) & v15;
        v12 = v11 >> 6;
        v13 = *(_QWORD *)(v7 + 8 * (v11 >> 6));
        v14 = 1 << v11;
      }
      while ((v13 & (1 << v11)) != 0);
      v4 = v18;
    }
    *(_QWORD *)(v7 + 8 * v12) = v14 | v13;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v11) = v20;
    v16 = *(_QWORD *)(v3 + 16);
    v9 = __OFADD__(v16, 1);
    v17 = v16 + 1;
    if (v9)
      goto LABEL_27;
    *(_QWORD *)(v3 + 16) = v17;
LABEL_11:
    v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BDB9B60];
    if (v6 == v4)
      return v3;
  }
  if (v6 >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_28;
  result = swift_retain();
  v9 = __OFADD__(v6++, 1);
  if (!v9)
    goto LABEL_18;
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_22F8B75C8(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x2348A6784](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for ConfirmationButton()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for ConfirmationButton(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for ConfirmationButton(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for ConfirmationButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v4;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for PINKeyboardButtonConfig(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PINKeyboardButtonConfig(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ConfirmationButton()
{
  return &type metadata for ConfirmationButton;
}

uint64_t sub_22F8B77C0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22F8B77D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char v30;
  char *v31;
  _OWORD *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v45 = a1;
  v50 = a5;
  v48 = sub_22F98DF00();
  MEMORY[0x24BDAC7A8](v48);
  v49 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21CC8);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21CD0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21CD8);
  MEMORY[0x24BDAC7A8](v46);
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21CE0);
  MEMORY[0x24BDAC7A8](v47);
  v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = v45;
  v52 = a2;
  v53 = a3;
  v54 = a4;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E20180);
  sub_22F8B7E08();
  sub_22F98E920();
  LOBYTE(a3) = sub_22F98E458();
  sub_22F98DBF4();
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v27 = v26;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v15, v12, v9);
  v28 = &v15[*(int *)(v13 + 36)];
  *v28 = a3;
  *((_QWORD *)v28 + 1) = v21;
  *((_QWORD *)v28 + 2) = v23;
  *((_QWORD *)v28 + 3) = v25;
  *((_QWORD *)v28 + 4) = v27;
  v28[40] = 0;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (qword_255E1DC28 != -1)
    swift_once();
  v29 = qword_255E297C0;
  swift_retain();
  v30 = sub_22F98E41C();
  sub_22F87ABDC((uint64_t)v15, (uint64_t)v17, &qword_255E21CD0);
  v31 = &v17[*(int *)(v46 + 36)];
  *(_QWORD *)v31 = v29;
  v31[8] = v30;
  sub_22F87AC20((uint64_t)v15, &qword_255E21CD0);
  v32 = v49;
  v33 = &v49[*(int *)(v48 + 20)];
  v34 = *MEMORY[0x24BDEEB68];
  v35 = sub_22F98E0EC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 104))(v33, v34, v35);
  __asm { FMOV            V0.2D, #30.0 }
  *v32 = _Q0;
  v41 = (uint64_t)&v19[*(int *)(v47 + 36)];
  sub_22F8946E0((uint64_t)v32, v41);
  *(_WORD *)(v41 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255E1F8D0) + 36)) = 256;
  sub_22F87ABDC((uint64_t)v17, (uint64_t)v19, &qword_255E21CD8);
  sub_22F889FAC((uint64_t)v32);
  sub_22F87AC20((uint64_t)v17, &qword_255E21CD8);
  v42 = sub_22F98EA88();
  sub_22F8F9F10(0.0, 1, 0.0, 1, 342.0, 0, 0.0, 1, v50, 0.0, 1, 0.0, 1, v42, v43);
  return sub_22F87AC20((uint64_t)v19, &qword_255E21CE0);
}

__n128 sub_22F8B7B80@<Q0>(uint64_t a1@<X8>)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __n128 result;
  _OWORD v31[9];

  swift_bridgeObjectRetain();
  sub_22F98E0D4();
  if (qword_255E1DC30 != -1)
    swift_once();
  v2 = (id)qword_255E29840;
  v3 = sub_22F98E5C0();
  v5 = v4;
  v7 = v6 & 1;
  sub_22F98E524();
  v8 = sub_22F98E5A8();
  v10 = v9;
  v12 = v11;
  swift_release();
  sub_22F87E294(v3, v5, v7);
  swift_bridgeObjectRelease();
  sub_22F98E4D0();
  v13 = sub_22F98E578();
  v15 = v14;
  v17 = v16 & 1;
  sub_22F87E294(v8, v10, v12 & 1);
  swift_bridgeObjectRelease();
  sub_22F98E824();
  v18 = sub_22F98E590();
  v20 = v19;
  v22 = v21;
  v24 = v23;
  swift_release();
  sub_22F87E294(v13, v15, v17);
  swift_bridgeObjectRelease();
  v25 = sub_22F98EA88();
  sub_22F8F8CA0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v31, 0.0, 1, 0.0, 1, v25, v26, v18, v20, v22 & 1, v24);
  sub_22F87E294(v18, v20, v22 & 1);
  swift_bridgeObjectRelease();
  v27 = v31[7];
  *(_OWORD *)(a1 + 96) = v31[6];
  *(_OWORD *)(a1 + 112) = v27;
  *(_OWORD *)(a1 + 128) = v31[8];
  v28 = v31[3];
  *(_OWORD *)(a1 + 32) = v31[2];
  *(_OWORD *)(a1 + 48) = v28;
  v29 = v31[5];
  *(_OWORD *)(a1 + 64) = v31[4];
  *(_OWORD *)(a1 + 80) = v29;
  result = (__n128)v31[1];
  *(_OWORD *)a1 = v31[0];
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_22F8B7DF0@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_22F8B77D0(*v1, v1[1], v1[2], v1[3], a1);
}

double sub_22F8B7DFC@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)&result = sub_22F8B7B80(a1).n128_u64[0];
  return result;
}

unint64_t sub_22F8B7E08()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E20178;
  if (!qword_255E20178)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E20180);
    v2[0] = MEMORY[0x24BDF1F80];
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E20178);
  }
  return result;
}

unint64_t sub_22F8B7E70()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E21CE8;
  if (!qword_255E21CE8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E21CF0);
    v2[0] = sub_22F8B7EDC();
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E21CE8);
  }
  return result;
}

unint64_t sub_22F8B7EDC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E21CF8;
  if (!qword_255E21CF8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E21CE0);
    v2[0] = sub_22F8B7F60();
    v2[1] = sub_22F87AA84(&qword_255E1F918, &qword_255E1F8D0, MEMORY[0x24BDEB950]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E21CF8);
  }
  return result;
}

unint64_t sub_22F8B7F60()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E21D00;
  if (!qword_255E21D00)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E21CD8);
    v2[0] = sub_22F8B7FE4();
    v2[1] = sub_22F87AA84(&qword_255E21D18, &qword_255E21D20, MEMORY[0x24BDF06D0]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E21D00);
  }
  return result;
}

unint64_t sub_22F8B7FE4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E21D08;
  if (!qword_255E21D08)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E21CD0);
    v2[0] = sub_22F87AA84(&qword_255E21D10, &qword_255E21CC8, MEMORY[0x24BDF43B0]);
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E21D08);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AccessibilityFocusRegion(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_22F8B80B4 + 4 * byte_22F994EA5[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_22F8B80E8 + 4 * byte_22F994EA0[v4]))();
}

uint64_t sub_22F8B80E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22F8B80F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22F8B80F8);
  return result;
}

uint64_t sub_22F8B8104(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22F8B810CLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_22F8B8110(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22F8B8118(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AccessibilityFocusRegion()
{
  return &type metadata for AccessibilityFocusRegion;
}

BOOL sub_22F8B8134()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint8_t *v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  _QWORD v28[2];
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v1 = MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)v28 - v4;
  if (byte_255E21D29 != 2)
    return byte_255E21D29 & 1;
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDA938]), sel_init);
  if (objc_msgSend(v6, sel_canEvaluatePolicy_error_, 2, 0))
  {
    v7 = objc_msgSend(v6, sel_biometryType);
    if (qword_255E1DB18 != -1)
      swift_once();
    v8 = __swift_project_value_buffer(v0, (uint64_t)qword_255E295F8);
    sub_22F87ABDC(v8, (uint64_t)v5, (uint64_t *)&unk_255E206E0);
    v9 = sub_22F98DAA4();
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v5, 1, v9) == 1)
    {
      sub_22F87AC20((uint64_t)v5, (uint64_t *)&unk_255E206E0);
    }
    else
    {
      v15 = sub_22F98DA8C();
      v16 = sub_22F98F0A0();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = swift_slowAlloc();
        v30 = v7;
        v18 = (uint8_t *)v17;
        v19 = swift_slowAlloc();
        v29 = v19;
        *(_DWORD *)v18 = 136446210;
        v28[1] = v18 + 4;
        v31 = (uint64_t)v30;
        v32 = v19;
        type metadata accessor for LABiometryType(0);
        v20 = sub_22F98EE18();
        v31 = sub_22F878880(v20, v21, &v32);
        sub_22F98F208();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_22F85B000, v15, v16, "BiometricType: %{public}s", v18, 0xCu);
        v22 = v29;
        swift_arrayDestroy();
        MEMORY[0x2348A6838](v22, -1, -1);
        v23 = v18;
        v7 = v30;
        MEMORY[0x2348A6838](v23, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v10 + 8))(v5, v9);
    }
    v11 = v7 == (id)2;
    byte_255E21D29 = v7 == (id)2;

  }
  else
  {
    if (qword_255E1DB18 != -1)
      swift_once();
    v12 = __swift_project_value_buffer(v0, (uint64_t)qword_255E295F8);
    sub_22F87ABDC(v12, (uint64_t)v3, (uint64_t *)&unk_255E206E0);
    v13 = sub_22F98DAA4();
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v3, 1, v13) == 1)
    {

      sub_22F87AC20((uint64_t)v3, (uint64_t *)&unk_255E206E0);
    }
    else
    {
      v24 = sub_22F98DA8C();
      v25 = sub_22F98F0A0();
      if (os_log_type_enabled(v24, v25))
      {
        v26 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v26 = 0;
        _os_log_impl(&dword_22F85B000, v24, v25, "BiometricType - does not support any owner auth but check again)", v26, 2u);
        MEMORY[0x2348A6838](v26, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v14 + 8))(v3, v13);
    }
    return 0;
  }
  return v11;
}

uint64_t sub_22F8B8504(uint64_t a1, unint64_t a2, void (*a3)(char *, _QWORD, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  char *v54;
  uint64_t v55;
  int64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  void (*v62)(char *, char *, uint64_t);
  uint64_t *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  NSObject *v73;
  os_log_type_t v74;
  uint8_t *v75;
  uint8_t *v76;
  void *v77;
  uint64_t v78;
  void (*v79)(char *, char *, uint64_t);
  uint64_t v80;
  uint64_t v81;
  char *v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  NSObject *v97;
  os_log_type_t v98;
  uint8_t *v99;
  uint8_t *v100;
  char *v101;
  void *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  unint64_t v111;
  uint64_t result;
  char *v113;
  char *v114;
  char *v115;
  char *v116;
  uint64_t v117;
  char *v118;
  void (*v119)(char *, uint64_t);
  uint64_t v120;
  uint64_t v121;
  unsigned int (*v122)(uint64_t, uint64_t, uint64_t);
  uint64_t *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t *v126;
  uint64_t *v127;
  char v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  NSObject *v136;
  os_log_type_t v137;
  uint64_t v138;
  void *v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  void *v146;
  void *v147;
  uint64_t v148;
  void (*v149)(char *, char *, uint64_t);
  char *v150;
  void (**v151)(char *, void (*)(char *, char *, uint64_t));
  char *v152;
  char *v153;
  unint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char *v161;
  id v162;
  char *v163;
  char *v164;
  char *v165;
  char *v166;
  uint64_t v167;
  unint64_t v168;
  uint64_t v169;
  void (*v170)(char *, char *, uint64_t);
  uint64_t v171;
  void (*v172)(char *, uint64_t);
  char *v173;
  char *v174;
  char *v175;
  uint64_t v176;
  char *v177;
  char *v178;
  char *v179;
  void (*v180)(char *, char *, uint64_t);
  char *v181;
  uint64_t (*v182)(char *, uint64_t, uint64_t);
  void (*v183)(char *, uint64_t, uint64_t, uint64_t);
  char *v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;

  v183 = a3;
  v168 = a2;
  v159 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v4 = MEMORY[0x24BDAC7A8](v159);
  v182 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v148 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = MEMORY[0x24BDAC7A8](v4);
  v180 = (void (*)(char *, char *, uint64_t))((char *)&v148 - v7);
  MEMORY[0x24BDAC7A8](v6);
  v164 = (char *)&v148 - v8;
  v186 = sub_22F98D498();
  v176 = *(_QWORD *)(v186 - 8);
  v9 = MEMORY[0x24BDAC7A8](v186);
  v175 = (char *)&v148 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v174 = (char *)&v148 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21D38);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v173 = (char *)&v148 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v179 = (char *)&v148 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E20810);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v178 = (char *)&v148 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v160 = (char *)&v148 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v163 = (char *)&v148 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v161 = (char *)&v148 - v23;
  v24 = sub_22F98D5F4();
  v25 = *(char **)(v24 - 8);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v181 = (char *)&v148 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)&v148 - v28;
  v30 = sub_22F98D4B0();
  v169 = *(_QWORD *)(v30 - 8);
  v31 = MEMORY[0x24BDAC7A8](v30);
  v185 = (char *)&v148 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = MEMORY[0x24BDAC7A8](v31);
  v152 = (char *)&v148 - v34;
  v35 = MEMORY[0x24BDAC7A8](v33);
  v184 = (char *)&v148 - v36;
  v37 = MEMORY[0x24BDAC7A8](v35);
  v177 = (char *)&v148 - v38;
  v39 = MEMORY[0x24BDAC7A8](v37);
  v41 = (char *)&v148 - v40;
  MEMORY[0x24BDAC7A8](v39);
  v165 = (char *)&v148 - v42;
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21D40);
  v44 = MEMORY[0x24BDAC7A8](v43);
  v46 = (char *)&v148 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = MEMORY[0x24BDAC7A8](v44);
  v49 = (char *)&v148 - v48;
  MEMORY[0x24BDAC7A8](v47);
  v51 = (char *)&v148 - v50;
  v162 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16F0]), sel_init);
  sub_22F98D774();
  v157 = a1;
  sub_22F98D768();
  v52 = (void (*)(char *, char *, uint64_t))v24;
  v166 = v51;
  sub_22F87ABDC((uint64_t)v51, (uint64_t)v49, &qword_255E21D40);
  v53 = *((_QWORD *)v25 + 6);
  if (((unsigned int (*)(char *, uint64_t, _QWORD))v53)(v49, 1, v52) == 1)
  {
    v54 = v25;
    sub_22F87AC20((uint64_t)v49, &qword_255E21D40);
    goto LABEL_11;
  }
  (*((void (**)(char *, char *, _QWORD))v25 + 4))(v29, v49, v52);
  v55 = sub_22F98D5DC();
  if (!v55)
  {
    v54 = v25;
    (*((void (**)(char *, void (*)(char *, char *, uint64_t)))v25 + 1))(v29, v52);
LABEL_11:
    v62 = v52;
    v63 = (uint64_t *)v165;
    v64 = (uint64_t)v166;
    if (qword_255E1DB70 == -1)
      goto LABEL_12;
    goto LABEL_86;
  }
  v150 = v29;
  v151 = (void (**)(char *, void (*)(char *, char *, uint64_t)))v25;
  v149 = v52;
  v56 = *(_QWORD *)(v55 + 16);
  if (v56)
  {
    v190 = MEMORY[0x24BEE4AF8];
    v57 = v55;
    sub_22F88C4DC(0, v56, 0);
    v58 = v190;
    v59 = v57 + 40;
    v53 = v169;
    do
    {
      swift_bridgeObjectRetain();
      sub_22F98D3C0();
      v190 = v58;
      v61 = *(_QWORD *)(v58 + 16);
      v60 = *(_QWORD *)(v58 + 24);
      if (v61 >= v60 >> 1)
      {
        sub_22F88C4DC(v60 > 1, v61 + 1, 1);
        v58 = v190;
      }
      v59 += 16;
      *(_QWORD *)(v58 + 16) = v61 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v53 + 32))(v58+ ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80))+ *(_QWORD *)(v53 + 72) * v61, v41, v30);
      --v56;
    }
    while (v56);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v58 = MEMORY[0x24BEE4AF8];
    v53 = v169;
  }
  v68 = v162;
  v64 = (uint64_t)v166;
  v82 = v150;
  if (*(_QWORD *)(v58 + 16) == 1)
  {
    v63 = (uint64_t *)v165;
    (*(void (**)(char *, unint64_t, uint64_t))(v53 + 16))(v165, v58 + ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80)), v30);
    swift_bridgeObjectRelease();
    sub_22F98D5E8();
    v83 = (void *)sub_22F98ED94();
    swift_bridgeObjectRelease();
    objc_msgSend(v68, sel_setCurrencySymbol_, v83);

    v151[1](v82, v149);
    goto LABEL_84;
  }
  v167 = v58;
  v171 = v30;
  if (qword_255E1DB70 != -1)
    swift_once();
  swift_beginAccess();
  v84 = sub_22F98D3CC();
  v86 = v85;
  v87 = (char *)off_255E211B8 + OBJC_IVAR____TtC19ContactlessReaderUI10AppManager_customerLocale;
  swift_beginAccess();
  v88 = v169;
  v89 = v177;
  v90 = v171;
  v170 = *(void (**)(char *, char *, uint64_t))(v169 + 16);
  v170(v177, v87, v171);
  v91 = sub_22F98D3CC();
  v93 = v92;
  v172 = *(void (**)(char *, uint64_t))(v88 + 8);
  v172(v89, v90);
  v63 = &qword_255E21000;
  if (v84 == v91 && v86 == v93)
  {
    swift_bridgeObjectRelease_n();
LABEL_37:
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E1FEB0);
    v95 = *(unsigned __int8 *)(v169 + 80);
    v177 = *(char **)(v169 + 72);
    v96 = swift_allocObject();
    *(_OWORD *)(v96 + 16) = xmmword_22F991B40;
    v158 = v96;
    v30 = v171;
    v62 = v170;
    v170((char *)(v96 + ((v95 + 32) & ~v95)), (char *)off_255E211B8 + OBJC_IVAR____TtC19ContactlessReaderUI10AppManager_merchantLocale, v171);
    goto LABEL_43;
  }
  v94 = sub_22F98F430();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v94 & 1) != 0)
    goto LABEL_37;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1FEB0);
  v103 = *(char **)(v169 + 72);
  v95 = *(unsigned __int8 *)(v169 + 80);
  v104 = swift_allocObject();
  *(_OWORD *)(v104 + 16) = xmmword_22F991B50;
  v158 = v104;
  v105 = v104 + ((v95 + 32) & ~v95);
  v106 = (char *)off_255E211B8;
  v107 = (char *)off_255E211B8 + OBJC_IVAR____TtC19ContactlessReaderUI10AppManager_customerLocale;
  swift_beginAccess();
  v30 = v171;
  v62 = v170;
  v170((char *)v105, v107, v171);
  v177 = v103;
  v62(&v103[v105], &v106[OBJC_IVAR____TtC19ContactlessReaderUI10AppManager_merchantLocale], v30);
LABEL_43:
  v108 = *(_QWORD *)(v167 + 16);
  v109 = (uint64_t)v164;
  v64 = (uint64_t)v179;
  v54 = v163;
  v110 = v161;
  if (!v108)
  {
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v169 + 56))(v161, 1, 1, v30);
    goto LABEL_88;
  }
  v156 = *(_QWORD *)(v167 + 16);
  v111 = (v95 + 32) & ~(unint64_t)v95;
  v155 = (char *)(v167 + v111);
  v62(v161, (char *)(v167 + v111 + (_QWORD)v177 * (v108 - 1)), v30);
  v53 = v169;
  v183 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v169 + 56);
  v183(v110, 0, 1, v30);
  v182 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v53 + 48);
  result = v182(v110, 1, v30);
  v46 = v178;
  if ((_DWORD)result == 1)
  {
LABEL_88:
    __break(1u);
    return result;
  }
  v180 = *(void (**)(char *, char *, uint64_t))(v53 + 32);
  v180(v165, v110, v30);
  v153 = *(char **)(v158 + 16);
  if (!v153)
    goto LABEL_72;
  v113 = 0;
  v154 = v158 + v111;
  v114 = v175;
  do
  {
    if ((unint64_t)v113 >= *(_QWORD *)(v158 + 16))
    {
      __break(1u);
LABEL_86:
      swift_once();
LABEL_12:
      swift_beginAccess();
      (*(void (**)(uint64_t *, char *, uint64_t))(v169 + 16))(v63, (char *)off_255E211B8 + OBJC_IVAR____TtC19ContactlessReaderUI10AppManager_merchantLocale, v30);
      sub_22F87ABDC(v64, (uint64_t)v46, &qword_255E21D40);
      if (((unsigned int (*)(char *, uint64_t, _QWORD))v53)(v46, 1, v62) == 1)
      {
        sub_22F87AC20((uint64_t)v46, &qword_255E21D40);
      }
      else
      {
        v65 = v181;
        (*((void (**)(char *, char *, _QWORD))v54 + 4))(v181, v46, v62);
        v66 = sub_22F98D5DC();
        swift_bridgeObjectRelease();
        if (!v66)
        {
          v151 = (void (**)(char *, void (*)(char *, char *, uint64_t)))v54;
          v68 = v162;
          v53 = v169;
          if (qword_255E1DB18 != -1)
            swift_once();
          v78 = __swift_project_value_buffer(v159, (uint64_t)qword_255E295F8);
          v79 = v180;
          sub_22F87ABDC(v78, (uint64_t)v180, (uint64_t *)&unk_255E206E0);
          v80 = sub_22F98DAA4();
          v81 = *(_QWORD *)(v80 - 8);
          if ((*(unsigned int (**)(_QWORD, uint64_t, uint64_t))(v81 + 48))(v79, 1, v80) == 1)
          {
            sub_22F87AC20((uint64_t)v79, (uint64_t *)&unk_255E206E0);
          }
          else
          {
            v97 = sub_22F98DA8C();
            v98 = sub_22F98F0A0();
            if (os_log_type_enabled(v97, v98))
            {
              v99 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)v99 = 0;
              _os_log_impl(&dword_22F85B000, v97, v98, "Using host locale with found symbol", v99, 2u);
              v100 = v99;
              v53 = v169;
              MEMORY[0x2348A6838](v100, -1, -1);
            }

            (*(void (**)(void (*)(char *, char *, uint64_t), uint64_t))(v81 + 8))(v180, v80);
            v64 = (uint64_t)v166;
          }
          v101 = v181;
          sub_22F98D5E8();
          v102 = (void *)sub_22F98ED94();
          swift_bridgeObjectRelease();
          objc_msgSend(v68, sel_setCurrencySymbol_, v102);

          v151[1](v101, v62);
          goto LABEL_84;
        }
        (*((void (**)(char *, void (*)(char *, char *, uint64_t)))v54 + 1))(v65, v62);
      }
      v53 = v169;
      v67 = v159;
      v68 = v162;
      v69 = (uint64_t)v182;
      if (qword_255E1DB18 != -1)
        swift_once();
      v70 = __swift_project_value_buffer(v67, (uint64_t)qword_255E295F8);
      sub_22F87ABDC(v70, v69, (uint64_t *)&unk_255E206E0);
      v71 = sub_22F98DAA4();
      v72 = *(_QWORD *)(v71 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))(v69, 1, v71) == 1)
      {
        sub_22F87AC20(v69, (uint64_t *)&unk_255E206E0);
      }
      else
      {
        v73 = sub_22F98DA8C();
        v74 = sub_22F98F088();
        if (os_log_type_enabled(v73, v74))
        {
          v75 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v75 = 0;
          _os_log_impl(&dword_22F85B000, v73, v74, "No definition, no symbol", v75, 2u);
          v76 = v75;
          v53 = v169;
          MEMORY[0x2348A6838](v76, -1, -1);
        }

        (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v69, v71);
        v64 = (uint64_t)v166;
      }
      sub_22F98EE30();
      v77 = (void *)sub_22F98ED94();
      swift_bridgeObjectRelease();
      objc_msgSend(v68, sel_setCurrencySymbol_, v77);

      goto LABEL_84;
    }
    v115 = v113;
    v62(v54, (char *)(v154 + (_QWORD)v113 * (_QWORD)v177), v30);
    v183(v54, 0, 1, v30);
    if (v182(v54, 1, v30) == 1)
      goto LABEL_73;
    v161 = v115 + 1;
    v180(v184, v54, v30);
    swift_bridgeObjectRetain();
    v116 = v155;
    v117 = v156;
    while (1)
    {
      v62(v46, v116, v30);
      v183(v46, 0, 1, v30);
      if (v182(v46, 1, v30) == 1)
        break;
      v180(v185, v46, v30);
      v118 = v174;
      sub_22F98D4A4();
      sub_22F98D468();
      v119 = *(void (**)(char *, uint64_t))(v176 + 8);
      v119(v118, v186);
      v120 = sub_22F98D3F0();
      v121 = *(_QWORD *)(v120 - 8);
      v122 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v121 + 48);
      if (v122(v64, 1, v120) == 1)
      {
        sub_22F87AC20(v64, &qword_255E21D38);
        v181 = 0;
        v63 = 0;
      }
      else
      {
        v181 = (char *)sub_22F98D3E4();
        v63 = v123;
        (*(void (**)(uint64_t, uint64_t))(v121 + 8))(v64, v120);
      }
      sub_22F98D4A4();
      v124 = (uint64_t)v173;
      sub_22F98D468();
      v119(v114, v186);
      if (v122(v124, 1, v120) == 1)
      {
        sub_22F87AC20(v124, &qword_255E21D38);
        v46 = v178;
        if (!v63)
          goto LABEL_65;
      }
      else
      {
        v125 = sub_22F98D3E4();
        v127 = v126;
        (*(void (**)(uint64_t, uint64_t))(v121 + 8))(v124, v120);
        v46 = v178;
        if (v63)
        {
          if (v127)
          {
            if (v181 == (char *)v125 && v63 == v127)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
LABEL_65:
              swift_bridgeObjectRelease();
              v30 = v171;
              v64 = (uint64_t)v179;
              v62 = v170;
              v129 = (uint64_t)v160;
              v180(v160, v185, v171);
              v130 = 0;
              v53 = v169;
              v109 = (uint64_t)v164;
              goto LABEL_68;
            }
            v128 = sub_22F98F430();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v128 & 1) != 0)
              goto LABEL_65;
            goto LABEL_52;
          }
        }
        else if (!v127)
        {
          goto LABEL_65;
        }
      }
      swift_bridgeObjectRelease();
LABEL_52:
      v30 = v171;
      v172(v185, v171);
      v116 = &v177[(_QWORD)v116];
      --v117;
      v64 = (uint64_t)v179;
      v62 = v170;
      if (!v117)
      {
        v183(v46, 1, 1, v30);
        break;
      }
    }
    swift_bridgeObjectRelease();
    v130 = 1;
    v53 = v169;
    v109 = (uint64_t)v164;
    v129 = (uint64_t)v160;
LABEL_68:
    v54 = v163;
    v183((char *)v129, v130, 1, v30);
    v172(v184, v30);
    if (v182((char *)v129, 1, v30) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v131 = v152;
      v180(v152, (char *)v129, v30);
      v63 = (uint64_t *)v165;
      (*(void (**)(char *, char *, uint64_t))(v53 + 40))(v165, v131, v30);
      goto LABEL_75;
    }
    sub_22F87AC20(v129, (uint64_t *)&unk_255E20810);
    v113 = v161;
  }
  while (v161 != v153);
LABEL_72:
  v183(v54, 1, 1, v30);
LABEL_73:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v63 = (uint64_t *)v165;
LABEL_75:
  v68 = v162;
  if (qword_255E1DB18 != -1)
    swift_once();
  v132 = __swift_project_value_buffer(v159, (uint64_t)qword_255E295F8);
  sub_22F87ABDC(v132, v109, (uint64_t *)&unk_255E206E0);
  v133 = sub_22F98DAA4();
  v134 = *(_QWORD *)(v133 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v134 + 48))(v109, 1, v133) == 1)
  {
    sub_22F87AC20(v109, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    v135 = v168;
    swift_bridgeObjectRetain_n();
    v136 = sub_22F98DA8C();
    v137 = sub_22F98F07C();
    if (os_log_type_enabled(v136, v137))
    {
      v138 = swift_slowAlloc();
      v139 = v68;
      v140 = swift_slowAlloc();
      v189 = v140;
      *(_DWORD *)v138 = 136315394;
      swift_bridgeObjectRetain();
      v188 = sub_22F878880(v157, v135, &v189);
      sub_22F98F208();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v138 + 12) = 2080;
      swift_beginAccess();
      v141 = sub_22F98D3CC();
      v187 = sub_22F878880(v141, v142, &v189);
      sub_22F98F208();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22F85B000, v136, v137, "Currency locale for %s: %s", (uint8_t *)v138, 0x16u);
      swift_arrayDestroy();
      v143 = v140;
      v68 = v139;
      v109 = (uint64_t)v164;
      MEMORY[0x2348A6838](v143, -1, -1);
      v144 = v138;
      v53 = v169;
      MEMORY[0x2348A6838](v144, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    (*(void (**)(uint64_t, uint64_t))(v134 + 8))(v109, v133);
    v63 = (uint64_t *)v165;
  }
  v145 = v150;
  sub_22F98D5E8();
  v146 = (void *)sub_22F98ED94();
  swift_bridgeObjectRelease();
  objc_msgSend(v68, sel_setCurrencySymbol_, v146);

  v151[1](v145, v149);
  v64 = (uint64_t)v166;
LABEL_84:
  swift_beginAccess();
  v147 = (void *)sub_22F98D414();
  objc_msgSend(v68, sel_setLocale_, v147);

  objc_msgSend(v68, sel_setNumberStyle_, 2);
  sub_22F87AC20(v64, &qword_255E21D40);
  (*(void (**)(uint64_t *, uint64_t))(v53 + 8))(v63, v30);
  return (uint64_t)v68;
}

BOOL sub_22F8B9AFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint8_t *v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  _QWORD v28[2];
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v1 = MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)v28 - v4;
  if (byte_255E21D28 != 2)
    return byte_255E21D28 & 1;
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDA938]), sel_init);
  if (objc_msgSend(v6, sel_canEvaluatePolicy_error_, 2, 0))
  {
    v7 = objc_msgSend(v6, sel_biometryType);
    if (qword_255E1DB18 != -1)
      swift_once();
    v8 = __swift_project_value_buffer(v0, (uint64_t)qword_255E295F8);
    sub_22F87ABDC(v8, (uint64_t)v5, (uint64_t *)&unk_255E206E0);
    v9 = sub_22F98DAA4();
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v5, 1, v9) == 1)
    {
      sub_22F87AC20((uint64_t)v5, (uint64_t *)&unk_255E206E0);
    }
    else
    {
      v15 = sub_22F98DA8C();
      v16 = sub_22F98F0A0();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = swift_slowAlloc();
        v30 = v7;
        v18 = (uint8_t *)v17;
        v19 = swift_slowAlloc();
        v29 = v19;
        *(_DWORD *)v18 = 136446210;
        v28[1] = v18 + 4;
        v31 = (uint64_t)v30;
        v32 = v19;
        type metadata accessor for LABiometryType(0);
        v20 = sub_22F98EE18();
        v31 = sub_22F878880(v20, v21, &v32);
        sub_22F98F208();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_22F85B000, v15, v16, "BiometricType: %{public}s", v18, 0xCu);
        v22 = v29;
        swift_arrayDestroy();
        MEMORY[0x2348A6838](v22, -1, -1);
        v23 = v18;
        v7 = v30;
        MEMORY[0x2348A6838](v23, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v10 + 8))(v5, v9);
    }
    v11 = v7 == (id)1;
    byte_255E21D28 = v7 == (id)1;

  }
  else
  {
    if (qword_255E1DB18 != -1)
      swift_once();
    v12 = __swift_project_value_buffer(v0, (uint64_t)qword_255E295F8);
    sub_22F87ABDC(v12, (uint64_t)v3, (uint64_t *)&unk_255E206E0);
    v13 = sub_22F98DAA4();
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v3, 1, v13) == 1)
    {

      sub_22F87AC20((uint64_t)v3, (uint64_t *)&unk_255E206E0);
    }
    else
    {
      v24 = sub_22F98DA8C();
      v25 = sub_22F98F0A0();
      if (os_log_type_enabled(v24, v25))
      {
        v26 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v26 = 0;
        _os_log_impl(&dword_22F85B000, v24, v25, "BiometricType - does not support any owner auth but check again)", v26, 2u);
        MEMORY[0x2348A6838](v26, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v14 + 8))(v3, v13);
    }
    return 0;
  }
  return v11;
}

id sub_22F8B9ECC(double a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  id v9;
  const __CTFontDescriptor *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  void *v15;
  const __CFDictionary *v16;
  CTFontDescriptorRef CopyWithAttributes;
  id v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (void *)objc_opt_self();
  v8 = objc_msgSend(v7, sel_systemFontOfSize_weight_, a1, a2);
  v9 = objc_msgSend(v8, sel_fontDescriptor);

  v10 = (const __CTFontDescriptor *)objc_msgSend(v9, sel_fontDescriptorWithDesign_, *MEMORY[0x24BEBB578]);
  if (v10)
  {
    sub_22F8BA250();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E21D50);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_22F991B40;
    v12 = (void *)*MEMORY[0x24BDC4D20];
    type metadata accessor for CFString(0);
    *(_QWORD *)(v11 + 56) = v13;
    *(_QWORD *)(v11 + 32) = v12;
    *(_QWORD *)(v11 + 88) = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EDC8);
    *(_QWORD *)(v11 + 64) = &unk_24FD1BD30;
    v14 = v12;
    v15 = (void *)sub_22F98F064();
    v16 = (const __CFDictionary *)sub_22F98F058();

    CopyWithAttributes = CTFontDescriptorCreateCopyWithAttributes(v10, v16);
    v18 = objc_msgSend(v7, sel_fontWithDescriptor_size_, CopyWithAttributes, a1);

    return v18;
  }
  else
  {
    if (qword_255E1DB18 != -1)
      swift_once();
    v20 = __swift_project_value_buffer(v4, (uint64_t)qword_255E295F8);
    sub_22F87ABDC(v20, (uint64_t)v6, (uint64_t *)&unk_255E206E0);
    v21 = sub_22F98DAA4();
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v6, 1, v21) == 1)
    {
      sub_22F87AC20((uint64_t)v6, (uint64_t *)&unk_255E206E0);
    }
    else
    {
      v23 = sub_22F98DA8C();
      v24 = sub_22F98F088();
      if (os_log_type_enabled(v23, v24))
      {
        v25 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v25 = 0;
        _os_log_impl(&dword_22F85B000, v23, v24, "Failed to retrieve modified CRSFPro font", v25, 2u);
        MEMORY[0x2348A6838](v25, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v21);
    }
    return objc_msgSend(v7, sel_systemFontOfSize_weight_, a1, *MEMORY[0x24BEBB608]);
  }
}

unint64_t sub_22F8BA1DC()
{
  unint64_t result;

  result = qword_255E21D30;
  if (!qword_255E21D30)
  {
    result = MEMORY[0x2348A6784](&unk_22F994ECC, &type metadata for AccessibilityFocusRegion);
    atomic_store(result, (unint64_t *)&qword_255E21D30);
  }
  return result;
}

uint64_t sub_22F8BA220()
{
  uint64_t result;

  result = SBSIsSystemApertureAvailable();
  byte_255E29730 = result;
  return result;
}

void sub_22F8BA23C()
{
  qword_255E29738 = (uint64_t)&unk_24FD1A9A0;
}

unint64_t sub_22F8BA250()
{
  unint64_t result;

  result = qword_255E21D48;
  if (!qword_255E21D48)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255E21D48);
  }
  return result;
}

unint64_t sub_22F8BA290()
{
  unint64_t result;

  result = qword_255E21D58;
  if (!qword_255E21D58)
  {
    result = MEMORY[0x2348A6784](&unk_22F994F78, &type metadata for AnimatableVector);
    atomic_store(result, (unint64_t *)&qword_255E21D58);
  }
  return result;
}

void sub_22F8BA2D4()
{
  qword_255E29740 = (uint64_t)&unk_24FD1BD60;
}

void sub_22F8BA2E8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9)
{
  uint64_t v9;

  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_12;
  }
  if (__OFSUB__(a8 >> 1, a7))
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v9 = *(_QWORD *)(a9 + 8);
  if ((a4 >> 1) - a3 != v9 || (a8 >> 1) - a7 != v9)
    goto LABEL_13;
  if (*(_QWORD *)a9)
  {
    if ((v9 & 0x8000000000000000) == 0)
    {
      vDSP_vaddD((const double *)(a2 + 8 * a3), 1, (const double *)(a6 + 8 * a7), 1, *(double **)a9, 1, *(_QWORD *)(a9 + 8));
      return;
    }
    goto LABEL_14;
  }
LABEL_15:
  __break(1u);
}

void sub_22F8BA354(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9)
{
  uint64_t v9;

  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_12;
  }
  if (__OFSUB__(a8 >> 1, a7))
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v9 = *(_QWORD *)(a9 + 8);
  if ((a4 >> 1) - a3 != v9 || (a8 >> 1) - a7 != v9)
    goto LABEL_13;
  if (*(_QWORD *)a9)
  {
    if ((v9 & 0x8000000000000000) == 0)
    {
      vDSP_vsubD((const double *)(a6 + 8 * a7), 1, (const double *)(a2 + 8 * a3), 1, *(double **)a9, 1, *(_QWORD *)(a9 + 8));
      return;
    }
    goto LABEL_14;
  }
LABEL_15:
  __break(1u);
}

double sub_22F8BA3BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  vDSP_Length v3;
  uint64_t v5;
  double __C[7];

  __C[6] = *(double *)MEMORY[0x24BDAC8D0];
  v5 = a1;
  *(_QWORD *)&__C[0] = a1;
  v1 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)&__C[3] = __C;
  *(_QWORD *)&__C[4] = &v5;
  swift_bridgeObjectRetain();
  v2 = sub_22F8BA688(v1, (uint64_t (*)(_QWORD *, uint64_t *))sub_22F8BAD20);
  swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(v2 + 16);
  __C[0] = NAN;
  vDSP_sveD((const double *)(v2 + 32), 1, __C, v3);
  swift_bridgeObjectRelease();
  return __C[0];
}

uint64_t sub_22F8BA478()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  swift_bridgeObjectRetain();
  v2 = sub_22F8BA688(v1, (uint64_t (*)(_QWORD *, uint64_t *))sub_22F8BAD6C);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)v0 = v2;
  return result;
}

double sub_22F8BA4F0()
{
  uint64_t *v0;

  return sub_22F8BA3BC(*v0);
}

unint64_t sub_22F8BA4FC()
{
  unint64_t result;

  result = qword_255E21D60;
  if (!qword_255E21D60)
  {
    result = MEMORY[0x2348A6784](&unk_22F994FC8, &type metadata for AnimatableVector);
    atomic_store(result, (unint64_t *)&qword_255E21D60);
  }
  return result;
}

uint64_t sub_22F8BA540@<X0>(_QWORD *a1@<X8>)
{
  if (qword_255E1DB90 != -1)
    swift_once();
  *a1 = qword_255E29740;
  return swift_bridgeObjectRetain();
}

uint64_t sub_22F8BA590@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = sub_22F8BAAE8(*a1, *a2, (uint64_t (*)(_QWORD *, uint64_t *))sub_22F8BAD00);
  *a3 = result;
  return result;
}

uint64_t sub_22F8BA5C4(uint64_t *a1, uint64_t *a2)
{
  return sub_22F8BA9A8(a1, *a2);
}

uint64_t sub_22F8BA5CC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = sub_22F8BAAE8(*a1, *a2, (uint64_t (*)(_QWORD *, uint64_t *))sub_22F8BACE0);
  *a3 = result;
  return result;
}

uint64_t sub_22F8BA600(uint64_t *a1, uint64_t *a2)
{
  return sub_22F8BABA0(a1, *a2);
}

BOOL sub_22F8BA608(uint64_t *a1, uint64_t *a2)
{
  return sub_22F8BA614(*a1, *a2);
}

BOOL sub_22F8BA614(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BOOL8 result;
  uint64_t v4;
  double *v5;
  double *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  BOOL v12;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (*(double *)(a1 + 32) != *(double *)(a2 + 32))
    return 0;
  if (v2 == 1)
    return 1;
  v4 = v2 - 2;
  v5 = (double *)(a1 + 40);
  v6 = (double *)(a2 + 40);
  do
  {
    v7 = *v5++;
    v8 = v7;
    v9 = *v6++;
    v10 = v9;
    v12 = v4-- != 0;
    result = v8 == v10;
  }
  while (v8 == v10 && v12);
  return result;
}

uint64_t sub_22F8BA688(uint64_t result, uint64_t (*a2)(_QWORD *, uint64_t *))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[2];
  uint64_t v8;

  if (result < 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  v4 = result;
  if (result)
  {
    v5 = sub_22F98EF74();
    *(_QWORD *)(v5 + 16) = v4;
  }
  else
  {
    v5 = MEMORY[0x24BEE4AF8];
  }
  v6 = v5 + 32;
  v7[1] = v4;
  v8 = 0;
  v7[0] = v5 + 32;
  result = a2(v7, &v8);
  if (v2)
  {
    if (v8 <= v4)
    {
      if (!v7[0])
      {
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
      if (v6 == v7[0])
      {
        *(_QWORD *)(v5 + 16) = v8;
        swift_bridgeObjectRelease();
        return v5;
      }
      goto LABEL_17;
    }
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v8 > v4)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v7[0])
  {
    if (v6 == v7[0])
    {
      *(_QWORD *)(v5 + 16) = v8;
      return v5;
    }
    goto LABEL_19;
  }
LABEL_21:
  __break(1u);
  return result;
}

void sub_22F8BA780(uint64_t a1, uint64_t a2, double a3)
{
  vDSP_Length v3;
  double v4[2];

  v4[1] = *(double *)MEMORY[0x24BDAC8D0];
  v3 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 16) != v3)
  {
    __break(1u);
LABEL_5:
    __break(1u);
  }
  v4[0] = a3;
  if (!*(_QWORD *)a2)
    goto LABEL_5;
  vDSP_vsmulD((const double *)(a1 + 32), 1, v4, *(double **)a2, 1, v3);
}

void sub_22F8BA7FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  vDSP_Length v3;

  v3 = *(_QWORD *)(a3 + 8);
  if (*(_QWORD *)(a1 + 16) != v3)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (*(_QWORD *)(a2 + 16) != v3)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (*(_QWORD *)a3)
  {
    vDSP_vmulD((const double *)(a1 + 32), 1, (const double *)(a2 + 32), 1, *(double **)a3, 1, v3);
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_22F8BA844(uint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, uint64_t (*a5)(_QWORD, _QWORD, uint64_t, unint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t result;

  v6 = a3[2];
  v7 = a3[3];
  result = a5(*a3, a3[1], v6, v7, *a4, a4[1], a4[2], a4[3], a1);
  if (__OFSUB__(v7 >> 1, v6))
    __break(1u);
  else
    *a2 = (v7 >> 1) - v6;
  return result;
}

uint64_t sub_22F8BA8B4(uint64_t result, uint64_t a2, unint64_t a3)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v3 = a3 >> 1;
  v4 = (a3 >> 1) - a2;
  if (__OFSUB__(a3 >> 1, a2))
    goto LABEL_13;
  v6 = result;
  if (!v4)
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if (v3 >= a2)
      goto LABEL_6;
    goto LABEL_12;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E21D68);
  v7 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v7);
  v8 = result - 32;
  if (result < 32)
    v8 = result - 25;
  v7[2] = v4;
  v7[3] = 2 * (v8 >> 3);
  if (v3 < a2)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
LABEL_6:
  result = (uint64_t)memcpy(v7 + 4, (const void *)(v6 + 8 * a2), 8 * v4);
  if (__OFSUB__(0, a2))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v9 = v7[2];
  v10 = __OFADD__(a2, v9);
  v11 = a2 + v9;
  if (v10)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v11 < a2)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if ((v11 & 0x8000000000000000) == 0)
    return (uint64_t)v7;
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_22F8BA9A8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  vDSP_Length v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t result;

  v3 = *a1;
  if (*(_QWORD *)(a2 + 16) >= *(_QWORD *)(*a1 + 16))
    v4 = *(_QWORD *)(*a1 + 16);
  else
    v4 = *(_QWORD *)(a2 + 16);
  v5 = (2 * v4) | 1;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull() & 1) != 0)
  {
    v6 = 0;
    v7 = v3;
    v8 = v3 + 32;
  }
  else
  {
    v7 = sub_22F8BA8B4(v3 + 32, 0, (2 * v4) | 1);
    v8 = v9;
    v6 = v10;
    v5 = v11;
    swift_unknownObjectRelease();
  }
  vDSP_vaddD((const double *)(v3 + 32), 1, (const double *)(a2 + 32), 1, (double *)(v8 + 8 * v6), 1, v4);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (*(_QWORD *)(v3 + 16) < v4)
  {
    __break(1u);
  }
  else
  {
    if (v3 + 32 != v8 + 8 * v6)
    {
LABEL_14:
      sub_22F97D3D4(0, v4, v7, v8, v6, v5);
      return swift_unknownObjectRelease();
    }
    if ((uint64_t)(v5 >> 1) >= v6)
    {
      if (v4 == v5 >> 1 && v6 == 0)
        return swift_unknownObjectRelease();
      goto LABEL_14;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_22F8BAAE8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD *, uint64_t *))
{
  uint64_t v4;
  uint64_t v5;

  if (*(_QWORD *)(a2 + 16) >= *(_QWORD *)(a1 + 16))
    v4 = *(_QWORD *)(a1 + 16);
  else
    v4 = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = sub_22F8BA688(v4, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_22F8BABA0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  vDSP_Length v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t result;

  v3 = *a1;
  if (*(_QWORD *)(a2 + 16) >= *(_QWORD *)(*a1 + 16))
    v4 = *(_QWORD *)(*a1 + 16);
  else
    v4 = *(_QWORD *)(a2 + 16);
  v5 = (2 * v4) | 1;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull() & 1) != 0)
  {
    v6 = 0;
    v7 = v3;
    v8 = v3 + 32;
  }
  else
  {
    v7 = sub_22F8BA8B4(v3 + 32, 0, (2 * v4) | 1);
    v8 = v9;
    v6 = v10;
    v5 = v11;
    swift_unknownObjectRelease();
  }
  vDSP_vsubD((const double *)(a2 + 32), 1, (const double *)(v3 + 32), 1, (double *)(v8 + 8 * v6), 1, v4);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (*(_QWORD *)(v3 + 16) < v4)
  {
    __break(1u);
  }
  else
  {
    if (v3 + 32 != v8 + 8 * v6)
    {
LABEL_14:
      sub_22F97D3D4(0, v4, v7, v8, v6, v5);
      return swift_unknownObjectRelease();
    }
    if ((uint64_t)(v5 >> 1) >= v6)
    {
      if (v4 == v5 >> 1 && v6 == 0)
        return swift_unknownObjectRelease();
      goto LABEL_14;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_22F8BACE0(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  return sub_22F8BA844(a1, a2, *(_QWORD **)(v2 + 16), *(_QWORD **)(v2 + 24), (uint64_t (*)(_QWORD, _QWORD, uint64_t, unint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_22F8BA354);
}

uint64_t sub_22F8BAD00(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  return sub_22F8BA844(a1, a2, *(_QWORD **)(v2 + 16), *(_QWORD **)(v2 + 24), (uint64_t (*)(_QWORD, _QWORD, uint64_t, unint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_22F8BA2E8);
}

void sub_22F8BAD20(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;

  v4 = *(uint64_t **)(v2 + 24);
  v5 = **(_QWORD **)(v2 + 16);
  sub_22F8BA7FC(v5, *v4, a1);
  *a2 = *(_QWORD *)(v5 + 16);
}

void sub_22F8BAD6C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  double v4;
  uint64_t v5;

  v4 = *(double *)(v2 + 16);
  v5 = **(_QWORD **)(v2 + 24);
  sub_22F8BA780(v5, a1, v4);
  *a2 = *(_QWORD *)(v5 + 16);
}

ValueMetadata *type metadata accessor for AnimatableVector()
{
  return &type metadata for AnimatableVector;
}

ValueMetadata *type metadata accessor for QRCodeScannerButton()
{
  return &type metadata for QRCodeScannerButton;
}

uint64_t sub_22F8BADD8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22F8BADE8@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  __int128 *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t KeyPath;
  uint64_t v33;
  _QWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 v41;
  __int128 v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *(*v53)(_BYTE *);
  uint64_t v54;

  v2 = v1;
  v40 = a1;
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21D70);
  v3 = MEMORY[0x24BDAC7A8](v39);
  v5 = (char *)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v35 - v6;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21D78);
  MEMORY[0x24BDAC7A8](v36);
  v38 = (uint64_t)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_22F98EA4C();
  MEMORY[0x24BDAC7A8](v9);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21D80);
  v10 = MEMORY[0x24BDAC7A8](v37);
  v12 = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v35 - v13;
  sub_22F98ECF8();
  if ((sub_22F98ECB0() & 1) != 0)
  {
    v42 = *v1;
    LOBYTE(v43) = *((_BYTE *)v1 + 16);
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F418);
    MEMORY[0x2348A5560](&v41, v15);
    if (v41 <= 0xDu)
    {
      if (((1 << v41) & 0x2047) != 0)
      {
        v16 = *((_QWORD *)v1 + 3);
        v17 = *((_QWORD *)v2 + 4);
        swift_retain();
        v18 = sub_22F98E83C();
        sub_22F98EA34();
        v19 = sub_22F98DD08();
LABEL_5:
        v35[0] = v19;
        v35[1] = v17;
        *(_QWORD *)&v42 = v16;
        *((_QWORD *)&v42 + 1) = v17;
        v43 = 0xD000000000000011;
        v44 = 0x800000022F99F710;
        v45 = 0xD00000000000001ALL;
        v46 = 0x800000022F99F730;
        v47 = v18;
        v48 = v19;
        v49 = 0;
        v50 = 0;
        v51 = 0x4050800000000000;
        sub_22F98E0D4();
        if (qword_255E1DC30 != -1)
          swift_once();
        v20 = (id)qword_255E29840;
        v21 = sub_22F98E5C0();
        v23 = v22;
        v25 = v24 & 1;
        sub_22F863108();
        sub_22F98E68C();
        sub_22F87E294(v21, v23, v25);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        v26 = &qword_255E21D80;
        sub_22F87B2B4((uint64_t)v12, (uint64_t)v14, &qword_255E21D80);
        sub_22F87ABDC((uint64_t)v14, v38, &qword_255E21D80);
        swift_storeEnumTagMultiPayload();
        sub_22F8BB508(&qword_255E21DA8, &qword_255E21D80, (uint64_t (*)(void))sub_22F8BB574);
        sub_22F8BB5BC();
        sub_22F98E1E8();
        v27 = (uint64_t)v14;
        return sub_22F87AC20(v27, v26);
      }
      if (v41 == 4)
      {
        v16 = *((_QWORD *)v1 + 3);
        v17 = *((_QWORD *)v2 + 4);
        v28 = qword_255E1DC20;
        swift_retain();
        if (v28 != -1)
          swift_once();
        v18 = qword_255E297B8;
        v29 = qword_255E1DC18;
        swift_retain();
        if (v29 != -1)
          swift_once();
        *(_QWORD *)&v42 = qword_255E297B0;
        swift_retain();
        v19 = sub_22F98DD08();
        goto LABEL_5;
      }
    }
  }
  if (qword_255E1DBC0 != -1)
    swift_once();
  v30 = sub_22F98E830();
  sub_22F98EA34();
  v31 = sub_22F98DD08();
  KeyPath = swift_getKeyPath();
  v33 = swift_allocObject();
  *(_BYTE *)(v33 + 16) = 1;
  *(_QWORD *)&v42 = nullsub_1;
  *((_QWORD *)&v42 + 1) = 0;
  v43 = 0xD000000000000011;
  v44 = 0x800000022F99F710;
  v45 = 0xD00000000000001ALL;
  v46 = 0x800000022F99F730;
  v47 = v30;
  v48 = v31;
  v49 = 0;
  v50 = 0;
  v51 = 0x4050800000000000;
  v52 = KeyPath;
  v53 = sub_22F8BB4B4;
  v54 = v33;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E21D88);
  sub_22F8BB508(&qword_255E21D90, &qword_255E21D88, (uint64_t (*)(void))sub_22F8BB4BC);
  sub_22F98E6BC();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v26 = &qword_255E21D70;
  sub_22F87B2B4((uint64_t)v5, (uint64_t)v7, &qword_255E21D70);
  sub_22F87ABDC((uint64_t)v7, v38, &qword_255E21D70);
  swift_storeEnumTagMultiPayload();
  sub_22F8BB508(&qword_255E21DA8, &qword_255E21D80, (uint64_t (*)(void))sub_22F8BB574);
  sub_22F8BB5BC();
  sub_22F98E1E8();
  v27 = (uint64_t)v7;
  return sub_22F87AC20(v27, v26);
}

uint64_t sub_22F8BB4A4()
{
  return swift_deallocObject();
}

_BYTE *sub_22F8BB4B4(_BYTE *a1)
{
  uint64_t v1;

  return sub_22F8E2C64(a1, *(_BYTE *)(v1 + 16));
}

unint64_t sub_22F8BB4BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255E21D98;
  if (!qword_255E21D98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E21DA0);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDF1248], v1);
    atomic_store(result, (unint64_t *)&qword_255E21D98);
  }
  return result;
}

uint64_t sub_22F8BB508(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = sub_22F863108();
    v7[1] = a3();
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22F8BB574()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255E1F478;
  if (!qword_255E1F478)
  {
    v1 = sub_22F98E3D4();
    result = MEMORY[0x2348A6784](MEMORY[0x24BDF1078], v1);
    atomic_store(result, (unint64_t *)&qword_255E1F478);
  }
  return result;
}

unint64_t sub_22F8BB5BC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E21DB0;
  if (!qword_255E21DB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E21D70);
    v2[0] = sub_22F8BB508(&qword_255E21D90, &qword_255E21D88, (uint64_t (*)(void))sub_22F8BB4BC);
    v2[1] = sub_22F8BB574();
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E21DB0);
  }
  return result;
}

unint64_t sub_22F8BB644()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E21DB8;
  if (!qword_255E21DB8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_255E21DC0);
    v2[0] = sub_22F8BB508(&qword_255E21DA8, &qword_255E21D80, (uint64_t (*)(void))sub_22F8BB574);
    v2[1] = sub_22F8BB5BC();
    result = MEMORY[0x2348A6784](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E21DB8);
  }
  return result;
}

uint64_t sub_22F8BB6CC()
{
  sub_22F98EB84();
  sub_22F89AF3C();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E22070);
  sub_22F8A24A4();
  return sub_22F98F274();
}

uint64_t sub_22F8BB748@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x24BEE5418];
  v3 = sub_22F98EB78();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_22F8BB78C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = 0;
  v2 = *MEMORY[0x24BEE5400];
  v3 = sub_22F98EB78();
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_22F8BB7D4()
{
  uint64_t v0;

  sub_22F8BBFC4();
  sub_22F8847A8(v0 + 16);
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for VoiceOverPlayer()
{
  return objc_opt_self();
}

uint64_t sub_22F8BB834()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t inited;
  _QWORD aBlock[7];

  aBlock[6] = *MEMORY[0x24BDAC8D0];
  v0 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v1 = *MEMORY[0x24BEBDDA0];
  v2 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_22F8BD658;
  aBlock[5] = v2;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22F95BB20;
  aBlock[3] = &block_descriptor_25;
  v3 = _Block_copy(aBlock);
  swift_release();
  v4 = objc_msgSend(v0, sel_addObserverForName_object_queue_usingBlock_, v1, 0, 0, v3);
  _Block_release(v3);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E22060);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22F991B40;
  *(_QWORD *)(inited + 56) = swift_getObjectType();
  *(_QWORD *)(inited + 32) = v4;
  swift_beginAccess();
  swift_unknownObjectRetain();
  sub_22F95BBC4((_QWORD *)inited);
  swift_endAccess();
  return swift_unknownObjectRelease();
}

uint64_t sub_22F8BB9CC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t Strong;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD v39[2];
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(char *, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48[5];
  __int128 v49;
  __int128 v50;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E21AB0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)v39 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v39 - v7;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (!result)
    return result;
  v10 = *(_QWORD *)(result + 56);
  v11 = *(_BYTE *)(result + 64);
  result = swift_release();
  if ((v11 & 1) != 0)
    return result;
  v12 = sub_22F98D168();
  if (!v12)
  {
    v49 = 0u;
    v50 = 0u;
    return sub_22F87AC20((uint64_t)&v49, &qword_255E22DD0);
  }
  v13 = v12;
  v46 = sub_22F98EDB8();
  v47 = v14;
  sub_22F98F304();
  if (*(_QWORD *)(v13 + 16) && (v15 = sub_22F979FD0((uint64_t)v48), (v16 & 1) != 0))
  {
    sub_22F87A584(*(_QWORD *)(v13 + 56) + 32 * v15, (uint64_t)&v49);
  }
  else
  {
    v49 = 0u;
    v50 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_22F8AB05C((uint64_t)v48);
  if (!*((_QWORD *)&v50 + 1))
    return sub_22F87AC20((uint64_t)&v49, &qword_255E22DD0);
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v17 = v48[0];
    v18 = v48[1];
    if (qword_255E1DB10 != -1)
      swift_once();
    v19 = __swift_project_value_buffer(v3, (uint64_t)qword_255E295E0);
    sub_22F87BC08(v19, (uint64_t)v8);
    v20 = sub_22F98DAA4();
    v21 = *(_QWORD *)(v20 - 8);
    v45 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
    if (v45(v8, 1, v20) == 1)
    {
      sub_22F87AC20((uint64_t)v8, (uint64_t *)&unk_255E206E0);
    }
    else
    {
      v43 = v19;
      v44 = v17;
      swift_bridgeObjectRetain_n();
      v22 = sub_22F98DA8C();
      v23 = sub_22F98F0A0();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = swift_slowAlloc();
        v42 = v22;
        v25 = (uint8_t *)v24;
        v40 = swift_slowAlloc();
        v48[0] = v40;
        v41 = v21;
        *(_DWORD *)v25 = 136315138;
        v39[1] = v25 + 4;
        swift_bridgeObjectRetain();
        *(_QWORD *)&v49 = sub_22F878880(v44, v18, v48);
        v21 = v41;
        sub_22F98F208();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_22F85B000, v42, v23, "VoiceOverPlayer: play ended - text = %s", v25, 0xCu);
        v26 = v40;
        swift_arrayDestroy();
        MEMORY[0x2348A6838](v26, -1, -1);
        MEMORY[0x2348A6838](v25, -1, -1);

      }
      else
      {
        swift_bridgeObjectRelease_n();

      }
      (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v20);
      v19 = v43;
    }
    v27 = sub_22F98EEF0();
    result = swift_bridgeObjectRelease();
    if (v10 == v27)
    {
      sub_22F87BC08(v19, (uint64_t)v6);
      if (v45(v6, 1, v20) == 1)
      {
        sub_22F87AC20((uint64_t)v6, (uint64_t *)&unk_255E206E0);
      }
      else
      {
        v28 = sub_22F98DA8C();
        v29 = sub_22F98F0A0();
        if (os_log_type_enabled(v28, v29))
        {
          v30 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v30 = 0;
          _os_log_impl(&dword_22F85B000, v28, v29, "VoiceOverPlayer: announcement didFinish", v30, 2u);
          MEMORY[0x2348A6838](v30, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v20);
      }
      swift_beginAccess();
      Strong = swift_weakLoadStrong();
      if (Strong)
      {
        v32 = *(_QWORD *)(Strong + 48);
        swift_unknownObjectRetain();
        swift_release();
        if (v32)
        {
          swift_getObjectType();
          sub_22F98F148();
          swift_unknownObjectRelease();
        }
      }
      swift_beginAccess();
      result = swift_weakLoadStrong();
      if (result)
      {
        v33 = MEMORY[0x2348A68F8](result + 16);
        if (!v33)
          return swift_release();
        v34 = v33;
        v35 = (uint64_t *)(v33 + 48);
        swift_beginAccess();
        v36 = *(_QWORD *)(v34 + 48);
        result = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v34 + 48) = v36;
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_22F8B2BD4(v36);
          v36 = result;
          *v35 = result;
        }
        if (*(_QWORD *)(v36 + 16) >= 2uLL)
        {
          *(_BYTE *)(v36 + 33) = 0;
          swift_endAccess();
          v37 = sub_22F98EFD4();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v2, 1, 1, v37);
          v38 = (_QWORD *)swift_allocObject();
          v38[2] = 0;
          v38[3] = 0;
          v38[4] = v34;
          swift_retain();
          sub_22F884920((uint64_t)v2, (uint64_t)&unk_255E220A0, (uint64_t)v38);
          swift_release();
          swift_release();
          return swift_release();
        }
        __break(1u);
      }
    }
  }
  return result;
}

uint64_t sub_22F8BBFC4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  _QWORD v8[4];

  v1 = (_QWORD *)(v0 + 32);
  swift_beginAccess();
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v4 = (void *)objc_opt_self();
    v5 = v2 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_22F87A584(v5, (uint64_t)v8);
      v6 = objc_msgSend(v4, sel_defaultCenter);
      __swift_project_boxed_opaque_existential_1(v8, v8[3]);
      objc_msgSend(v6, sel_removeObserver_, sub_22F98F424());

      swift_unknownObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
      v5 += 32;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  *v1 = MEMORY[0x24BEE4AF8];
  return swift_bridgeObjectRelease();
}

uint64_t sub_22F8BC0DC(uint64_t a1, unint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint8_t *v20;
  os_log_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v27[2];
  os_log_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E21AB0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB10 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v11, (uint64_t)qword_255E295E0);
  sub_22F87BC08(v14, (uint64_t)v13);
  v15 = sub_22F98DAA4();
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15) == 1)
  {
    sub_22F87AC20((uint64_t)v13, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    v17 = sub_22F98DA8C();
    v18 = sub_22F98F0A0();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc();
      v28 = v17;
      v20 = (uint8_t *)v19;
      v29 = swift_slowAlloc();
      v31 = v29;
      *(_DWORD *)v20 = 136315138;
      v27[1] = v20 + 4;
      swift_bridgeObjectRetain();
      v30 = sub_22F878880(a1, a2, &v31);
      sub_22F98F208();
      swift_bridgeObjectRelease_n();
      v21 = v28;
      _os_log_impl(&dword_22F85B000, v28, v18, "VoiceOverPlayer: play starting - text = %s", v20, 0xCu);
      v22 = v29;
      swift_arrayDestroy();
      MEMORY[0x2348A6838](v22, -1, -1);
      MEMORY[0x2348A6838](v20, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease_n();

    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
  }
  v23 = sub_22F98EFD4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v10, 1, 1, v23);
  v24 = swift_allocObject();
  swift_weakInit();
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = 0;
  *(_QWORD *)(v25 + 24) = 0;
  *(double *)(v25 + 32) = a3;
  *(_QWORD *)(v25 + 40) = v24;
  *(_QWORD *)(v25 + 48) = a1;
  *(_QWORD *)(v25 + 56) = a2;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v4 + 40) = sub_22F884920((uint64_t)v10, (uint64_t)&unk_255E22090, v25);
  swift_release();
  return sub_22F8BC81C();
}

uint64_t sub_22F8BC410(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v7 + 104) = a6;
  *(_QWORD *)(v7 + 112) = a7;
  *(_QWORD *)(v7 + 96) = a5;
  *(double *)(v7 + 88) = a1;
  v8 = sub_22F98F364();
  *(_QWORD *)(v7 + 120) = v8;
  *(_QWORD *)(v7 + 128) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v7 + 136) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22F8BC478()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  v1 = sub_22F98F52C();
  v3 = v2;
  sub_22F98F358();
  v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_255E28318 + dword_255E28318);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v4;
  *v4 = v0;
  v4[1] = sub_22F8BC50C;
  return v6(v1, v3, 0, 0, 1);
}

uint64_t sub_22F8BC50C()
{
  void *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (_QWORD *)*v1;
  swift_task_dealloc();
  v4 = v2[16];
  v3 = v2[17];
  v5 = v2[15];
  if (v0)

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  return swift_task_switch();
}

uint64_t sub_22F8BC5A4()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22F8BC5D4()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  id v3;
  id v4;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v2 = Strong;
    *(_QWORD *)(Strong + 56) = sub_22F98EEF0();
    *(_BYTE *)(v2 + 64) = 0;
    swift_release();
  }
  sub_22F932EEC(0);
  v3 = sub_22F933BD0(0);
  *(_QWORD *)(v0 + 152) = v3;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v0 + 168) = *MEMORY[0x24BEBDDB0];
  sub_22F98EFBC();
  v4 = v3;
  *(_QWORD *)(v0 + 160) = sub_22F98EFB0();
  sub_22F98EF8C();
  return swift_task_switch();
}

uint64_t sub_22F8BC6D0()
{
  uint64_t v0;
  UIAccessibilityNotifications v1;
  void *v2;

  v1 = *(_DWORD *)(v0 + 168);
  v2 = *(void **)(v0 + 152);
  swift_release();
  UIAccessibilityPostNotification(v1, v2);

  return swift_task_switch();
}

uint64_t sub_22F8BC720()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  void *v5;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong || (v2 = MEMORY[0x2348A68F8](Strong + 16), swift_release(), !v2))
  {

    goto LABEL_8;
  }
  swift_beginAccess();
  v3 = *(_QWORD *)(v2 + 48);
  result = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v2 + 48) = v3;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_22F8B2BD4(v3);
    v3 = result;
    *(_QWORD *)(v2 + 48) = result;
  }
  if (*(_QWORD *)(v3 + 16) >= 2uLL)
  {
    v5 = *(void **)(v0 + 152);
    *(_BYTE *)(v3 + 33) = 1;
    swift_endAccess();

    swift_unknownObjectRelease();
LABEL_8:
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  __break(1u);
  return result;
}

uint64_t sub_22F8BC81C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t);
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, _QWORD, uint64_t);
  void (*v31)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD aBlock[6];

  v0 = sub_22F98EB78();
  v41 = *(_QWORD *)(v0 - 8);
  v1 = MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v40 = (char *)&v33 - v4;
  v39 = sub_22F98EBC0();
  v37 = *(_QWORD *)(v39 - 8);
  v5 = MEMORY[0x24BDAC7A8](v39);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v38 = (char *)&v33 - v8;
  v9 = sub_22F98EB84();
  v35 = *(_QWORD *)(v9 - 8);
  v36 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_22F98EB9C();
  v12 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_22F98F124();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22F8B2C4C();
  sub_22F98F118();
  v19 = sub_22F98F130();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  ObjectType = swift_getObjectType();
  v21 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_22F8BD588;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22F8644F0;
  aBlock[3] = &block_descriptor_10;
  v22 = _Block_copy(aBlock);
  swift_retain();
  sub_22F98EB90();
  sub_22F8BB6CC();
  sub_22F98F13C();
  _Block_release(v22);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v36);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v34);
  swift_release();
  swift_release();
  sub_22F98EBB4();
  if (qword_255E1DC40 != -1)
    swift_once();
  v23 = __swift_project_value_buffer(v0, (uint64_t)qword_255E29860);
  v24 = v38;
  MEMORY[0x2348A57C4](v7, v23);
  v25 = *(void (**)(char *, uint64_t))(v37 + 8);
  v26 = v7;
  v27 = v39;
  v25(v26, v39);
  v29 = v40;
  v28 = v41;
  v30 = *(void (**)(char *, _QWORD, uint64_t))(v41 + 104);
  v30(v40, *MEMORY[0x24BEE5418], v0);
  *(_QWORD *)v3 = 0;
  v30(v3, *MEMORY[0x24BEE5400], v0);
  MEMORY[0x2348A5D34](v24, v29, v3, ObjectType);
  v31 = *(void (**)(char *, uint64_t))(v28 + 8);
  v31(v3, v0);
  v31(v29, v0);
  v25(v24, v27);
  sub_22F98F154();
  *(_QWORD *)(v42 + 48) = v19;
  return swift_unknownObjectRelease();
}

uint64_t sub_22F8BCBD0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t Strong;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E21AB0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB10 != -1)
    swift_once();
  v6 = __swift_project_value_buffer(v3, (uint64_t)qword_255E295E0);
  sub_22F87BC08(v6, (uint64_t)v5);
  v7 = sub_22F98DAA4();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) == 1)
  {
    sub_22F87AC20((uint64_t)v5, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    v9 = sub_22F98DA8C();
    v10 = sub_22F98F0A0();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_22F85B000, v9, v10, "VoiceOverPlayer: safeguard triggered", v11, 2u);
      MEMORY[0x2348A6838](v11, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v5, v7);
  }
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    *(_QWORD *)(Strong + 56) = 0;
    *(_BYTE *)(Strong + 64) = 0;
    swift_release();
  }
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v14 = MEMORY[0x2348A68F8](result + 16);
    if (v14)
    {
      v15 = v14;
      v16 = (uint64_t *)(v14 + 48);
      swift_beginAccess();
      v17 = *(_QWORD *)(v15 + 48);
      result = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v15 + 48) = v17;
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_22F8B2BD4(v17);
        v17 = result;
        *v16 = result;
      }
      if (*(_QWORD *)(v17 + 16) < 2uLL)
      {
        __break(1u);
        return result;
      }
      *(_BYTE *)(v17 + 33) = 0;
      swift_endAccess();
      v18 = sub_22F98EFD4();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v2, 1, 1, v18);
      v19 = (_QWORD *)swift_allocObject();
      v19[2] = 0;
      v19[3] = 0;
      v19[4] = v15;
      swift_retain();
      sub_22F884920((uint64_t)v2, (uint64_t)&unk_255E22080, (uint64_t)v19);
      swift_release();
      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_22F8BCEC0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E21AB0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
    return sub_22F8BC0DC(a1, a2, *(double *)&a3);
  result = MEMORY[0x2348A68F8](v3 + 16);
  if (result)
  {
    v11 = result;
    v12 = (uint64_t *)(result + 48);
    swift_beginAccess();
    v13 = *(_QWORD *)(v11 + 48);
    result = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v11 + 48) = v13;
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_22F8B2BD4(v13);
      v13 = result;
      *v12 = result;
    }
    if (*(_QWORD *)(v13 + 16) < 2uLL)
    {
      __break(1u);
    }
    else
    {
      *(_BYTE *)(v13 + 33) = 0;
      swift_endAccess();
      v14 = sub_22F98EFD4();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v9, 1, 1, v14);
      v15 = (_QWORD *)swift_allocObject();
      v15[2] = 0;
      v15[3] = 0;
      v15[4] = v11;
      swift_retain();
      sub_22F884920((uint64_t)v9, (uint64_t)&unk_255E1F5F0, (uint64_t)v15);
      swift_release();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_22F8BD03C()
{
  uint64_t v0;

  sub_22F8BD08C();
  swift_bridgeObjectRelease();
  sub_22F87A9B8(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for VoiceOverStatusObserver()
{
  return objc_opt_self();
}

uint64_t sub_22F8BD08C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  _QWORD v8[4];

  v1 = (_QWORD *)(v0 + 16);
  swift_beginAccess();
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v4 = (void *)objc_opt_self();
    v5 = v2 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_22F87A584(v5, (uint64_t)v8);
      v6 = objc_msgSend(v4, sel_defaultCenter);
      __swift_project_boxed_opaque_existential_1(v8, v8[3]);
      objc_msgSend(v6, sel_removeObserver_, sub_22F98F424());

      swift_unknownObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
      v5 += 32;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  *v1 = MEMORY[0x24BEE4AF8];
  return swift_bridgeObjectRelease();
}

uint64_t sub_22F8BD1A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t inited;
  _QWORD aBlock[7];

  aBlock[6] = *MEMORY[0x24BDAC8D0];
  v3 = *(_QWORD *)(v2 + 24);
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  swift_retain();
  sub_22F87A9B8(v3);
  v4 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v5 = *MEMORY[0x24BEBDF60];
  v6 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_22F8BD568;
  aBlock[5] = v6;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22F95BB20;
  aBlock[3] = &block_descriptor_13;
  v7 = _Block_copy(aBlock);
  swift_release();
  v8 = objc_msgSend(v4, sel_addObserverForName_object_queue_usingBlock_, v5, 0, 0, v7);
  _Block_release(v7);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E22060);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22F991B40;
  *(_QWORD *)(inited + 56) = swift_getObjectType();
  *(_QWORD *)(inited + 32) = v8;
  swift_beginAccess();
  swift_unknownObjectRetain();
  sub_22F95BBC4((_QWORD *)inited);
  swift_endAccess();
  return swift_unknownObjectRelease();
}

uint64_t sub_22F8BD358()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t result;
  void (*v4)(_BOOL8);
  _BOOL8 IsVoiceOverRunning;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v4 = *(void (**)(_BOOL8))(result + 24);
    if (v4)
    {
      swift_retain();
      IsVoiceOverRunning = UIAccessibilityIsVoiceOverRunning();
      v4(IsVoiceOverRunning);
      if (qword_255E1DB10 != -1)
        swift_once();
      v6 = __swift_project_value_buffer(v0, (uint64_t)qword_255E295E0);
      sub_22F87BC08(v6, (uint64_t)v2);
      v7 = sub_22F98DAA4();
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v2, 1, v7) == 1)
      {
        sub_22F87A9B8((uint64_t)v4);
        sub_22F87AC20((uint64_t)v2, (uint64_t *)&unk_255E206E0);
      }
      else
      {
        v9 = sub_22F98DA8C();
        v10 = sub_22F98F0A0();
        if (os_log_type_enabled(v9, v10))
        {
          v11 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v11 = 0;
          _os_log_impl(&dword_22F85B000, v9, v10, "VoiceOver status changed finished", v11, 2u);
          MEMORY[0x2348A6838](v11, -1, -1);
        }
        sub_22F87A9B8((uint64_t)v4);

        (*(void (**)(char *, uint64_t))(v8 + 8))(v2, v7);
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_22F8BD544()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_22F8BD568()
{
  return sub_22F8BD358();
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t sub_22F8BD588()
{
  return sub_22F8BCBD0();
}

uint64_t sub_22F8BD594()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_22F8BD5C8(uint64_t a1)
{
  double *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *((_QWORD *)v1 + 2);
  v5 = *((_QWORD *)v1 + 3);
  v6 = v1[4];
  v7 = *((_QWORD *)v1 + 5);
  v8 = *((_QWORD *)v1 + 6);
  v9 = *((_QWORD *)v1 + 7);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_22F87B58C;
  return sub_22F8BC410(v6, a1, v4, v5, v7, v8, v9);
}

uint64_t sub_22F8BD658()
{
  return sub_22F8BB9CC();
}

uint64_t sub_22F8BD664(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_22F87B58C;
  return sub_22F978320(a1, v4, v5, v6);
}

ValueMetadata *type metadata accessor for VoiceOverMessage()
{
  return &type metadata for VoiceOverMessage;
}

uint64_t destroy for RegButtonAlternate()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for RegButtonAlternate(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for RegButtonAlternate(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v4 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v4;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for RegButtonAlternate(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for RegButtonAlternate(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RegButtonAlternate(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RegButtonAlternate()
{
  return &type metadata for RegButtonAlternate;
}

uint64_t sub_22F8BD9B4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22F8BD9C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t KeyPath;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  char v53;
  char v54;
  __int128 v55;
  uint64_t v56;

  v2 = v1;
  v50 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E220B0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E220B8);
  MEMORY[0x24BDAC7A8](v43);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E220C0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E220C8);
  v48 = *(_QWORD *)(v12 - 8);
  v49 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v45 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E220D0);
  MEMORY[0x24BDAC7A8](v47);
  v44 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E220D8);
  MEMORY[0x24BDAC7A8](v15);
  v46 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  v18 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v17 + 48) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v17 + 64) = v18;
  *(_QWORD *)(v17 + 80) = *(_QWORD *)(v2 + 64);
  v19 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v17 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v17 + 32) = v19;
  v51 = v2;
  sub_22F8BE49C(v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E220E0);
  sub_22F87E2D8(&qword_255E220E8, &qword_255E220E0, (uint64_t (*)(void))sub_22F8BE500, MEMORY[0x24BDEDBB8]);
  sub_22F98E920();
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v8, v6, v3);
  v21 = (uint64_t *)&v8[*(int *)(v43 + 36)];
  *v21 = KeyPath;
  v21[1] = 0x3FD3333333333333;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  LOBYTE(v6) = sub_22F98E41C();
  sub_22F98DBF4();
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v29 = v28;
  sub_22F87ABDC((uint64_t)v8, (uint64_t)v11, &qword_255E220B8);
  v30 = &v11[*(int *)(v9 + 36)];
  *v30 = (char)v6;
  *((_QWORD *)v30 + 1) = v23;
  *((_QWORD *)v30 + 2) = v25;
  *((_QWORD *)v30 + 3) = v27;
  *((_QWORD *)v30 + 4) = v29;
  v30[40] = 0;
  sub_22F87AC20((uint64_t)v8, &qword_255E220B8);
  v31 = swift_getKeyPath();
  if (qword_255E1DC10 != -1)
    swift_once();
  *(_QWORD *)&v55 = v31;
  BYTE8(v55) = 0;
  v56 = qword_255E297A8;
  sub_22F87E2D8(&qword_255E22100, &qword_255E220C0, (uint64_t (*)(void))sub_22F8BE6F8, MEMORY[0x24BDECC60]);
  sub_22F8BE794();
  swift_retain();
  v32 = v45;
  sub_22F98E620();
  swift_release();
  swift_release();
  sub_22F87AC20((uint64_t)v11, &qword_255E220C0);
  v55 = *(_OWORD *)(v2 + 32);
  LOBYTE(v56) = *(_BYTE *)(v2 + 48);
  v52 = *(_OWORD *)(v2 + 32);
  v53 = *(_BYTE *)(v2 + 48);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22120);
  MEMORY[0x2348A5560](&v54);
  if (v54)
  {
    v52 = v55;
    v53 = v56;
    MEMORY[0x2348A5560](&v54, v33);
    v34 = v54 != 3;
  }
  else
  {
    v34 = 0;
  }
  v35 = swift_getKeyPath();
  v36 = swift_allocObject();
  *(_BYTE *)(v36 + 16) = v34;
  v38 = v48;
  v37 = v49;
  v39 = (uint64_t)v44;
  (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v44, v32, v49);
  v40 = (uint64_t *)(v39 + *(int *)(v47 + 36));
  *v40 = v35;
  v40[1] = (uint64_t)sub_22F8BB4B4;
  v40[2] = v36;
  (*(void (**)(char *, uint64_t))(v38 + 8))(v32, v37);
  sub_22F8BE7F0();
  v41 = (uint64_t)v46;
  sub_22F98E704();
  sub_22F87AC20(v39, &qword_255E220D0);
  return sub_22F8BE8D8(v41, v50);
}

uint64_t sub_22F8BDED0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t KeyPath;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t);
  uint64_t result;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  _OWORD *v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;

  v54 = a1;
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F048);
  MEMORY[0x24BDAC7A8](v48);
  v2 = (char *)&v47 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22130);
  v51 = *(_QWORD *)(v3 - 8);
  v52 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v50 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E220F8);
  MEMORY[0x24BDAC7A8](v49);
  v53 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = qword_255E1DC30;
  swift_bridgeObjectRetain();
  if (v6 != -1)
    swift_once();
  sub_22F98D240();
  swift_bridgeObjectRelease();
  sub_22F8BE5F0(MEMORY[0x24BEE4AF8]);
  v7 = sub_22F98EDDC();
  v9 = v8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v55 = v7;
  *((_QWORD *)&v55 + 1) = v9;
  sub_22F863BF8();
  v10 = sub_22F98E5CC();
  v12 = v11;
  v14 = v13;
  if (qword_255E1DC10 != -1)
    swift_once();
  v15 = sub_22F98E590();
  v17 = v16;
  v19 = v18 & 1;
  sub_22F87E294(v10, v12, v14 & 1);
  swift_bridgeObjectRelease();
  sub_22F98E488();
  v20 = sub_22F98E5A8();
  v22 = v21;
  v24 = v23;
  swift_release();
  sub_22F87E294(v15, v17, v19);
  swift_bridgeObjectRelease();
  sub_22F98E4D0();
  v25 = sub_22F98E578();
  v27 = v26;
  LOBYTE(v15) = v28;
  v30 = v29;
  sub_22F87E294(v20, v22, v24 & 1);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  *(_QWORD *)&v55 = v25;
  *((_QWORD *)&v55 + 1) = v27;
  LOBYTE(v56) = v15 & 1;
  *((_QWORD *)&v56 + 1) = v30;
  *(_QWORD *)&v57 = KeyPath;
  *((_QWORD *)&v57 + 1) = 1;
  LOBYTE(v58) = 0;
  v32 = *MEMORY[0x24BDECEA0];
  v33 = sub_22F98DE70();
  v34 = (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50];
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v2, v32, v33);
  sub_22F862548(&qword_255E1F078, v34, MEMORY[0x24BDECF78]);
  result = sub_22F98ED70();
  if ((result & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E1FA90);
    sub_22F8AFCC8();
    sub_22F87AA84(&qword_255E1F088, &qword_255E1F048, MEMORY[0x24BEE30C8]);
    v36 = v50;
    sub_22F98E668();
    sub_22F87AC20((uint64_t)v2, &qword_255E1F048);
    sub_22F87E294(v55, *((uint64_t *)&v55 + 1), v56);
    swift_bridgeObjectRelease();
    swift_release();
    v37 = swift_getKeyPath();
    v39 = v51;
    v38 = v52;
    v40 = (uint64_t)v53;
    (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v53, v36, v52);
    v41 = (uint64_t *)(v40 + *(int *)(v49 + 36));
    *v41 = v37;
    v41[1] = 0x3FD999999999999ALL;
    (*(void (**)(char *, uint64_t))(v39 + 8))(v36, v38);
    sub_22F98EA88();
    sub_22F98DF3C();
    v42 = v54;
    sub_22F87ABDC(v40, v54, &qword_255E220F8);
    v43 = (_OWORD *)(v42 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255E220E0) + 36));
    v44 = v60;
    v43[4] = v59;
    v43[5] = v44;
    v43[6] = v61;
    v45 = v56;
    *v43 = v55;
    v43[1] = v45;
    v46 = v58;
    v43[2] = v57;
    v43[3] = v46;
    return sub_22F87AC20(v40, &qword_255E220F8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_22F8BE3F0@<X0>(uint64_t a1@<X8>)
{
  return sub_22F8BD9C4(a1);
}

uint64_t sub_22F8BE430()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22F8BE474()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 72))();
}

uint64_t sub_22F8BE494@<X0>(uint64_t a1@<X8>)
{
  return sub_22F8BDED0(a1);
}

uint64_t sub_22F8BE49C(uint64_t a1)
{
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t sub_22F8BE500()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = qword_255E220F0;
  if (!qword_255E220F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E220F8);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1FA90);
    v2[3] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1F048);
    v2[4] = sub_22F8AFCC8();
    v2[5] = sub_22F87AA84(&qword_255E1F088, &qword_255E1F048, MEMORY[0x24BEE30C8]);
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_22F87AA84(&qword_255E1FA18, &qword_255E1FA20, MEMORY[0x24BDF1028]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E220F0);
  }
  return result;
}

uint64_t sub_22F8BE5F0(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  __int128 v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v14 = MEMORY[0x24BEE4AF8];
    sub_22F88C530(0, v1, 0);
    v2 = v14;
    v4 = (uint64_t *)(a1 + 40);
    v5 = MEMORY[0x24BEE0D00];
    do
    {
      v7 = *(v4 - 1);
      v6 = *v4;
      v14 = v2;
      v8 = *(_QWORD *)(v2 + 16);
      v9 = *(_QWORD *)(v2 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v9 >> 1)
      {
        sub_22F88C530(v9 > 1, v8 + 1, 1);
        v2 = v14;
      }
      v4 += 2;
      v12 = v5;
      v13 = sub_22F87FD04();
      *(_QWORD *)&v11 = v7;
      *((_QWORD *)&v11 + 1) = v6;
      *(_QWORD *)(v2 + 16) = v8 + 1;
      sub_22F8BE928(&v11, v2 + 40 * v8 + 32);
      --v1;
    }
    while (v1);
  }
  return v2;
}

unint64_t sub_22F8BE6F8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E22108;
  if (!qword_255E22108)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E220B8);
    v2[0] = sub_22F87AA84(&qword_255E22110, &qword_255E220B0, MEMORY[0x24BDF43B0]);
    v2[1] = sub_22F87AA84(&qword_255E1FA18, &qword_255E1FA20, MEMORY[0x24BDF1028]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E22108);
  }
  return result;
}

unint64_t sub_22F8BE794()
{
  unint64_t result;

  result = qword_255E22118;
  if (!qword_255E22118)
  {
    result = MEMORY[0x2348A6784](&unk_22F99900C, &type metadata for LinkButton);
    atomic_store(result, (unint64_t *)&qword_255E22118);
  }
  return result;
}

uint64_t sub_22F8BE7E0()
{
  return swift_deallocObject();
}

unint64_t sub_22F8BE7F0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = qword_255E22128;
  if (!qword_255E22128)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E220D0);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E220C0);
    v2[3] = &type metadata for LinkButton;
    v2[4] = sub_22F87E2D8(&qword_255E22100, &qword_255E220C0, (uint64_t (*)(void))sub_22F8BE6F8, MEMORY[0x24BDECC60]);
    v2[5] = sub_22F8BE794();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_22F87AA84((unint64_t *)&qword_255E21D98, &qword_255E21DA0, MEMORY[0x24BDF1248]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E22128);
  }
  return result;
}

uint64_t sub_22F8BE8D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E220D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22F8BE928(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

unint64_t sub_22F8BE944()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E22138;
  if (!qword_255E22138)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E220D8);
    v2[0] = sub_22F8BE7F0();
    v2[1] = sub_22F862548((unint64_t *)&qword_255E1F478, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E22138);
  }
  return result;
}

id AVLoopPlayerView.makeUIView(context:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  void *v18;
  id v21[7];

  v1 = v0;
  v21[6] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22140);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v21[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v21[-1] - v6;
  v8 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AVLayerUIView(0)), sel_initWithFrame_, 0.0, 0.0, 1.0, 1.0);
  sub_22F8BEC28(v1, (uint64_t)v7);
  v9 = (uint64_t)v8 + OBJC_IVAR____TtC19ContactlessReaderUIP33_E63B02286265C8C01E0EDA7D0DF4AC0413AVLayerUIView_url;
  swift_beginAccess();
  sub_22F8BEC28(v9, (uint64_t)v5);
  swift_beginAccess();
  sub_22F8BEC70((uint64_t)v7, v9);
  swift_endAccess();
  sub_22F8BEF20((uint64_t)v5);
  sub_22F87AC20((uint64_t)v7, &qword_255E22140);
  sub_22F87AC20((uint64_t)v5, &qword_255E22140);
  v10 = (void *)objc_opt_self();
  v11 = v8;
  v12 = objc_msgSend(v10, sel_blackColor);
  objc_msgSend(v11, sel_setBackgroundColor_, v12);

  v13 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v14 = *MEMORY[0x24BDB1598];
  v15 = *MEMORY[0x24BDB1618];
  v21[0] = 0;
  LODWORD(v10) = objc_msgSend(v13, sel_setCategory_mode_options_error_, v14, v15, 1, v21);

  if ((_DWORD)v10)
  {
    v16 = v21[0];
  }
  else
  {
    v17 = v21[0];
    v18 = (void *)sub_22F98D2C4();

    swift_willThrow();
  }
  return v11;
}

uint64_t type metadata accessor for AVLayerUIView(uint64_t a1)
{
  return sub_22F8612B0(a1, (uint64_t *)&unk_255E22220);
}

uint64_t sub_22F8BEC28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22140);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22F8BEC70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22140);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void AVLoopPlayerView.updateUIView(_:context:)(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  _BYTE v13[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22140);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v4);
  v8 = &v13[-v7];
  type metadata accessor for AVLayerUIView(0);
  v9 = swift_dynamicCastClass();
  if (v9)
  {
    v10 = v9;
    sub_22F8BEC28(v1, (uint64_t)v8);
    v11 = v10 + OBJC_IVAR____TtC19ContactlessReaderUIP33_E63B02286265C8C01E0EDA7D0DF4AC0413AVLayerUIView_url;
    swift_beginAccess();
    sub_22F8BEC28(v11, (uint64_t)v6);
    swift_beginAccess();
    v12 = a1;
    sub_22F8BEC70((uint64_t)v8, v11);
    swift_endAccess();
    sub_22F8BEF20((uint64_t)v6);
    sub_22F87AC20((uint64_t)v8, &qword_255E22140);
    sub_22F87AC20((uint64_t)v6, &qword_255E22140);

  }
}

uint64_t sub_22F8BEDFC()
{
  sub_22F862548(&qword_255E22238, type metadata accessor for AVLoopPlayerView, (uint64_t)&protocol conformance descriptor for AVLoopPlayerView);
  return sub_22F98E1C4();
}

uint64_t sub_22F8BEE64()
{
  sub_22F862548(&qword_255E22238, type metadata accessor for AVLoopPlayerView, (uint64_t)&protocol conformance descriptor for AVLoopPlayerView);
  return sub_22F98E170();
}

void sub_22F8BEECC()
{
  sub_22F862548(&qword_255E22238, type metadata accessor for AVLoopPlayerView, (uint64_t)&protocol conformance descriptor for AVLoopPlayerView);
  sub_22F98E1B8();
  __break(1u);
}

void sub_22F8BEF20(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(uint64_t, uint64_t, uint64_t);
  char *v23;
  id v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  char v32;
  void (*v33)(char *, uint64_t);
  id v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  char *v40;
  id v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E21AB0);
  MEMORY[0x24BDAC7A8](v3);
  v45 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_22F98D30C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v46 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v45 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22140);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v45 - v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22240);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = v1;
  v20 = (uint64_t)&v1[OBJC_IVAR____TtC19ContactlessReaderUIP33_E63B02286265C8C01E0EDA7D0DF4AC0413AVLayerUIView_url];
  swift_beginAccess();
  v21 = (uint64_t)&v19[*(int *)(v17 + 48)];
  sub_22F8BEC28(v20, (uint64_t)v19);
  sub_22F8BEC28(a1, v21);
  v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v22((uint64_t)v19, 1, v5) == 1)
  {
    if (v22(v21, 1, v5) == 1)
    {
      sub_22F87AC20((uint64_t)v19, &qword_255E22140);
      return;
    }
  }
  else
  {
    sub_22F8BEC28((uint64_t)v19, (uint64_t)v16);
    if (v22(v21, 1, v5) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v10, v21, v5);
      sub_22F862548(&qword_255E22258, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
      v32 = sub_22F98ED70();
      v33 = *(void (**)(char *, uint64_t))(v6 + 8);
      v33(v10, v5);
      v33(v16, v5);
      sub_22F87AC20((uint64_t)v19, &qword_255E22140);
      if ((v32 & 1) != 0)
        return;
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v16, v5);
  }
  sub_22F87AC20((uint64_t)v19, &qword_255E22240);
LABEL_7:
  v23 = v47;
  v24 = objc_msgSend(v47, sel_layer);
  objc_opt_self();
  v25 = swift_dynamicCastObjCClass();
  if (v25)
  {
    v26 = (void *)v25;
    sub_22F8BEC28(v20, (uint64_t)v14);
    if (v22((uint64_t)v14, 1, v5) == 1)
    {
      sub_22F87AC20((uint64_t)v14, &qword_255E22140);
      objc_msgSend(v26, sel_setPlayer_, 0);
      v27 = (void *)objc_opt_self();
      v28 = v24;
      v29 = objc_msgSend(v27, sel_blackColor);
      v30 = objc_msgSend(v29, sel_CGColor);

      objc_msgSend(v26, sel_setBackgroundColor_, v30);
      v31 = *(void **)&v23[OBJC_IVAR____TtC19ContactlessReaderUIP33_E63B02286265C8C01E0EDA7D0DF4AC0413AVLayerUIView_looper];
      *(_QWORD *)&v23[OBJC_IVAR____TtC19ContactlessReaderUIP33_E63B02286265C8C01E0EDA7D0DF4AC0413AVLayerUIView_looper] = 0;

    }
    else
    {
      (*(void (**)(void))(v6 + 32))();
      objc_msgSend(v26, sel_setVideoGravity_, *MEMORY[0x24BDB1C78]);
      v34 = objc_allocWithZone(MEMORY[0x24BDB2618]);
      v35 = (void *)sub_22F98D2F4();
      v36 = objc_msgSend(v34, sel_initWithURL_, v35);

      v37 = sub_22F98EFD4();
      v38 = (uint64_t)v45;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v45, 1, 1, v37);
      sub_22F98EFBC();
      v39 = v36;
      v40 = v23;
      v41 = v24;
      v42 = sub_22F98EFB0();
      v43 = (_QWORD *)swift_allocObject();
      v44 = MEMORY[0x24BEE6930];
      v43[2] = v42;
      v43[3] = v44;
      v43[4] = v39;
      v43[5] = v40;
      v43[6] = v26;
      sub_22F884920(v38, (uint64_t)&unk_255E22250, (uint64_t)v43);

      swift_release();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v46, v5);
    }
  }
  else
  {

  }
}

uint64_t sub_22F8BF40C()
{
  return sub_22F862548(&qword_255E22150, type metadata accessor for AVLoopPlayerView, (uint64_t)&protocol conformance descriptor for AVLoopPlayerView);
}

uint64_t type metadata accessor for AVLoopPlayerView(uint64_t a1)
{
  return sub_22F8612B0(a1, (uint64_t *)&unk_255E221B0);
}

uint64_t *initializeBufferWithCopyOfBuffer for AVLoopPlayerView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255E22140) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = sub_22F98D30C();
    v7 = *(_QWORD *)(v6 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      memcpy(a1, a2, *(_QWORD *)(v4 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
  }
  return a1;
}

uint64_t destroy for AVLoopPlayerView(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = sub_22F98D30C();
  v3 = *(_QWORD *)(v2 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return result;
}

void *initializeWithCopy for AVLoopPlayerView(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_22F98D30C();
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22140);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(a1, a2, v4);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void *assignWithCopy for AVLoopPlayerView(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;

  v4 = sub_22F98D30C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22140);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, v4);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

void *initializeWithTake for AVLoopPlayerView(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_22F98D30C();
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22140);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, v4);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void *assignWithTake for AVLoopPlayerView(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;

  v4 = sub_22F98D30C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22140);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, v4);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for AVLoopPlayerView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22F8BF8BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22140);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for AVLoopPlayerView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22F8BF908(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22140);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

void sub_22F8BF94C()
{
  unint64_t v0;

  sub_22F8BF9B4();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_22F8BF9B4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255E221C0)
  {
    sub_22F98D30C();
    v0 = sub_22F98F1F0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255E221C0);
  }
}

uint64_t sub_22F8BFA08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  sub_22F98EFBC();
  v6[6] = sub_22F98EFB0();
  v6[7] = sub_22F98EF8C();
  v6[8] = v7;
  return swift_task_switch();
}

uint64_t sub_22F8BFA78()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 72) = objc_msgSend(*(id *)(v0 + 24), sel_asset);
  __swift_instantiateConcreteTypeFromMangledName(qword_255E22260);
  *(_QWORD *)(v0 + 80) = sub_22F98D4BC();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v1;
  *v1 = v0;
  v1[1] = sub_22F8BFB18;
  return sub_22F98F16C();
}

uint64_t sub_22F8BFB18()
{
  void *v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;

  v2 = *v1;
  swift_task_dealloc();
  v3 = *(void **)(v2 + 72);
  if (v0)

  swift_release();
  return swift_task_switch();
}

uint64_t sub_22F8BFBA4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  swift_release();
  swift_bridgeObjectRelease();
  v2 = *(_QWORD *)(v0 + 32);
  v1 = *(void **)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB2670]), sel_initWithPlayerItem_, v3);
  objc_msgSend(v4, sel_setPreventsDisplaySleepDuringVideoPlayback_, 1);
  v5 = objc_msgSend((id)objc_opt_self(), sel_playerLooperWithPlayer_templateItem_, v4, v3);
  v6 = *(void **)(v2 + OBJC_IVAR____TtC19ContactlessReaderUIP33_E63B02286265C8C01E0EDA7D0DF4AC0413AVLayerUIView_looper);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC19ContactlessReaderUIP33_E63B02286265C8C01E0EDA7D0DF4AC0413AVLayerUIView_looper) = v5;

  objc_msgSend(v1, sel_setPlayer_, v4);
  v7 = objc_msgSend(v1, sel_player);
  objc_msgSend(v7, sel_play);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22F8BFC9C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  swift_release();
  v2 = *(_QWORD *)(v0 + 32);
  v1 = *(void **)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB2670]), sel_initWithPlayerItem_, v3);
  objc_msgSend(v4, sel_setPreventsDisplaySleepDuringVideoPlayback_, 1);
  v5 = objc_msgSend((id)objc_opt_self(), sel_playerLooperWithPlayer_templateItem_, v4, v3);
  v6 = *(void **)(v2 + OBJC_IVAR____TtC19ContactlessReaderUIP33_E63B02286265C8C01E0EDA7D0DF4AC0413AVLayerUIView_looper);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC19ContactlessReaderUIP33_E63B02286265C8C01E0EDA7D0DF4AC0413AVLayerUIView_looper) = v5;

  objc_msgSend(v1, sel_setPlayer_, v4);
  v7 = objc_msgSend(v1, sel_player);
  objc_msgSend(v7, sel_play);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_22F8BFEC4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AVLayerUIView(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_22F8BFF3C()
{
  return type metadata accessor for AVLayerUIView(0);
}

void sub_22F8BFF44()
{
  unint64_t v0;

  sub_22F8BF9B4();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

unint64_t sub_22F8BFFBC()
{
  unint64_t result;

  result = qword_255E22230;
  if (!qword_255E22230)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255E22230);
  }
  return result;
}

uint64_t sub_22F8BFFF8()
{
  id *v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_22F8C0034(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_22F87B390;
  return sub_22F8BFA08(a1, v4, v5, v6, v7, v8);
}

char *sub_22F8C00B4(char *a1, uint64_t *a2, int *a3)
{
  char *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *(_QWORD *)a1 = *a2;
    v4 = (char *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_22F98E308();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF68);
      memcpy(v4, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, uint64_t *, uint64_t))(v8 + 16))(v4, a2, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v4, 0, 1, v7);
    }
    v11 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_255E1F298);
    v4[v11[9]] = *((_BYTE *)a2 + v11[9]);
    *(_QWORD *)&v4[v11[10]] = *(uint64_t *)((char *)a2 + v11[10]);
    v4[v11[11]] = *((_BYTE *)a2 + v11[11]);
    v12 = a3[5];
    v13 = a3[6];
    v14 = &v4[v12];
    v15 = (char *)a2 + v12;
    v16 = *((_QWORD *)v15 + 1);
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *((_QWORD *)v14 + 1) = v16;
    v14[16] = v15[16];
    *(_QWORD *)&v4[v13] = *(uint64_t *)((char *)a2 + v13);
    v17 = a3[8];
    v4[a3[7]] = *((_BYTE *)a2 + a3[7]);
    v18 = &v4[v17];
    v19 = (uint64_t *)((char *)a2 + v17);
    v20 = v19[1];
    *(_QWORD *)v18 = *v19;
    *((_QWORD *)v18 + 1) = v20;
    v21 = a3[9];
    v22 = &v4[v21];
    v23 = (char *)a2 + v21;
    *v22 = *v23;
    *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_22F8C0250(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_22F98E308();
  v3 = *(_QWORD *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2))
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  __swift_instantiateConcreteTypeFromMangledName(qword_255E1F298);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

char *sub_22F8C0308(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;

  v6 = sub_22F98E308();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF68);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_255E1F298);
  a1[v9[9]] = a2[v9[9]];
  *(_QWORD *)&a1[v9[10]] = *(_QWORD *)&a2[v9[10]];
  a1[v9[11]] = a2[v9[11]];
  v10 = a3[5];
  v11 = a3[6];
  v12 = &a1[v10];
  v13 = &a2[v10];
  v14 = *((_QWORD *)v13 + 1);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *((_QWORD *)v12 + 1) = v14;
  v12[16] = v13[16];
  *(_QWORD *)&a1[v11] = *(_QWORD *)&a2[v11];
  v15 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = *((_QWORD *)v17 + 1);
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *((_QWORD *)v16 + 1) = v18;
  v19 = a3[9];
  v20 = &a1[v19];
  v21 = &a2[v19];
  *v20 = *v21;
  *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

char *sub_22F8C047C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;

  v6 = sub_22F98E308();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF68);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_255E1F298);
  a1[v12[9]] = a2[v12[9]];
  *(_QWORD *)&a1[v12[10]] = *(_QWORD *)&a2[v12[10]];
  swift_retain();
  swift_release();
  a1[v12[11]] = a2[v12[11]];
  v13 = a3[5];
  v14 = &a1[v13];
  v15 = &a2[v13];
  *(_QWORD *)&a1[v13] = *(_QWORD *)&a2[v13];
  swift_retain();
  swift_release();
  *((_QWORD *)v14 + 1) = *((_QWORD *)v15 + 1);
  swift_retain();
  swift_release();
  v14[16] = v15[16];
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[7]] = a2[a3[7]];
  v16 = a3[8];
  v17 = &a1[v16];
  v18 = &a2[v16];
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  swift_retain();
  swift_release();
  v19 = a3[9];
  v20 = &a1[v19];
  v21 = &a2[v19];
  *v20 = *v21;
  *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
  swift_retain();
  swift_release();
  return a1;
}

char *sub_22F8C0680(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v6 = sub_22F98E308();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF68);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_255E1F298);
  a1[v9[9]] = a2[v9[9]];
  *(_QWORD *)&a1[v9[10]] = *(_QWORD *)&a2[v9[10]];
  a1[v9[11]] = a2[v9[11]];
  v10 = a3[5];
  v11 = a3[6];
  v12 = &a1[v10];
  v13 = &a2[v10];
  *(_OWORD *)v12 = *(_OWORD *)v13;
  v12[16] = v13[16];
  *(_QWORD *)&a1[v11] = *(_QWORD *)&a2[v11];
  v14 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  *(_OWORD *)&a1[v14] = *(_OWORD *)&a2[v14];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  return a1;
}

char *sub_22F8C07A4(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;

  v6 = sub_22F98E308();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF68);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_255E1F298);
  a1[v12[9]] = a2[v12[9]];
  *(_QWORD *)&a1[v12[10]] = *(_QWORD *)&a2[v12[10]];
  swift_release();
  a1[v12[11]] = a2[v12[11]];
  v13 = a3[5];
  v14 = &a1[v13];
  v15 = &a2[v13];
  *(_QWORD *)&a1[v13] = *(_QWORD *)&a2[v13];
  swift_release();
  *((_QWORD *)v14 + 1) = *((_QWORD *)v15 + 1);
  swift_release();
  v14[16] = v15[16];
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  swift_bridgeObjectRelease();
  v16 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  v17 = &a1[v16];
  v18 = &a2[v16];
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  swift_release();
  v19 = a3[9];
  v20 = &a1[v19];
  v21 = &a2[v19];
  *v20 = *v21;
  *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
  swift_release();
  return a1;
}

uint64_t sub_22F8C0974()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22F8C0980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_255E1F298);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_22F8C0A04()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22F8C0A10(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(qword_255E1F298);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for IdentityInformationView()
{
  uint64_t result;

  result = qword_255E222C0;
  if (!qword_255E222C0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_22F8C0ACC()
{
  unint64_t v0;

  sub_22F883594();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_22F8C0B5C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22F8C0B6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t (**v19)();
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v24;
  uint64_t v25;

  v25 = a1;
  v2 = type metadata accessor for IdentityInformationView();
  v24 = *(_QWORD *)(v2 - 8);
  v3 = *(_QWORD *)(v24 + 64);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22308);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22310);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22318);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v7 = sub_22F98E128();
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = 1;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22320);
  sub_22F8C0E3C(v1, (uint64_t)&v7[*(int *)(v14 + 44)]);
  if (qword_255E1DB68 != -1)
    swift_once();
  v15 = qword_255E296E8;
  sub_22F87ABDC((uint64_t)v7, (uint64_t)v10, &qword_255E22308);
  *(_QWORD *)&v10[*(int *)(v8 + 36)] = v15;
  swift_retain();
  sub_22F87AC20((uint64_t)v7, &qword_255E22308);
  sub_22F889F68(v1, (uint64_t)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for IdentityInformationView);
  v16 = v1;
  v17 = (*(unsigned __int8 *)(v24 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  v18 = swift_allocObject();
  sub_22F8C4674((uint64_t)v4, v18 + v17);
  sub_22F87ABDC((uint64_t)v10, (uint64_t)v13, &qword_255E22310);
  v19 = (uint64_t (**)())&v13[*(int *)(v11 + 36)];
  *v19 = sub_22F8C46B8;
  v19[1] = (uint64_t (*)())v18;
  v19[2] = 0;
  v19[3] = 0;
  sub_22F87AC20((uint64_t)v10, &qword_255E22310);
  sub_22F889F68(v16, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for IdentityInformationView);
  v20 = swift_allocObject();
  sub_22F8C4674((uint64_t)v4, v20 + v17);
  v21 = v25;
  sub_22F87ABDC((uint64_t)v13, v25, &qword_255E22318);
  v22 = (_QWORD *)(v21 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255E22328) + 36));
  *v22 = 0;
  v22[1] = 0;
  v22[2] = sub_22F8C46C8;
  v22[3] = v20;
  return sub_22F87AC20((uint64_t)v13, &qword_255E22318);
}

uint64_t sub_22F8C0E3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  double v58;
  uint64_t v59;
  uint64_t v60;

  v4 = sub_22F98E224();
  v51 = *(_QWORD *)(v4 - 8);
  v52 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22330);
  v50 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22338);
  v53 = *(_QWORD *)(v10 - 8);
  v54 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22340);
  MEMORY[0x24BDAC7A8](v13);
  v57 = (uint64_t)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22348);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v56 = (uint64_t)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v55 = (uint64_t)&v47 - v19;
  v20 = type metadata accessor for IdentityInformationView();
  v21 = *(_QWORD *)(a1 + *(int *)(v20 + 24));
  if (!v21)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(a2, 1, 1, v15);
  v22 = v20;
  v47 = v16;
  v48 = v15;
  v49 = a2;
  v23 = *(_QWORD *)(v21 + 16);
  v24 = sub_22F98E404();
  MEMORY[0x24BDAC7A8](v24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E22350);
  sub_22F8C47A0();
  sub_22F98DC00();
  sub_22F98E218();
  v25 = sub_22F98E404();
  sub_22F98E3F8();
  sub_22F98E3F8();
  if (sub_22F98E3F8() != v25)
    sub_22F98E3F8();
  sub_22F87AA84(&qword_255E22388, &qword_255E22330, MEMORY[0x24BDEB238]);
  sub_22F98E6EC();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v6, v52);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v9, v7);
  v26 = a1 + *(int *)(v22 + 36);
  v27 = *(_QWORD *)(v26 + 8);
  LOBYTE(v59) = *(_BYTE *)v26;
  v60 = v27;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3B0);
  sub_22F98E8FC();
  v28 = (uint64_t *)(a1 + *(int *)(v22 + 32));
  v29 = *v28;
  v30 = v28[1];
  v59 = v29;
  v60 = v30;
  if (LOBYTE(v58) == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3C0);
    sub_22F98E8FC();
    v31 = v58;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3C0);
    sub_22F98E8FC();
    v31 = (double)v23 * 60.0 + v58;
  }
  v34 = v47;
  v33 = v48;
  v35 = sub_22F98EA88();
  v36 = v57;
  v38 = sub_22F8F9F74(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v57, 0.0, 1, v31, 0, v35, v37);
  (*(void (**)(char *, uint64_t, double))(v53 + 8))(v12, v54, v38);
  v39 = sub_22F98EAC4();
  v40 = *(_QWORD *)(v26 + 8);
  LOBYTE(v59) = *(_BYTE *)v26;
  v60 = v40;
  sub_22F98E8FC();
  v41 = LOBYTE(v58);
  v42 = v56;
  sub_22F87ABDC(v36, v56, &qword_255E22340);
  v43 = v42 + *(int *)(v33 + 36);
  *(_QWORD *)v43 = v39;
  *(_BYTE *)(v43 + 8) = v41;
  sub_22F87AC20(v36, &qword_255E22340);
  v44 = v55;
  sub_22F87B2B4(v42, v55, &qword_255E22348);
  v45 = v44;
  v46 = v49;
  sub_22F87B2B4(v45, v49, &qword_255E22348);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v34 + 56))(v46, 0, 1, v33);
}

uint64_t sub_22F8C1310@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v43 = a2;
  v58 = a3;
  v53 = sub_22F98E350();
  v51 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for IdentityInformationView();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v50 = v9;
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22370);
  MEMORY[0x24BDAC7A8](v46);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22390);
  v52 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v44 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22360);
  MEMORY[0x24BDAC7A8](v55);
  v45 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22398);
  v56 = *(_QWORD *)(v15 - 8);
  v57 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v54 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v12 = sub_22F98E128();
  *((_QWORD *)v12 + 1) = 0;
  v12[16] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E223A0);
  v17 = *(_QWORD *)(a1 + 16);
  v61 = 0;
  v62 = v17;
  swift_getKeyPath();
  v47 = v10;
  sub_22F889F68(a2, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for IdentityInformationView);
  v18 = *(unsigned __int8 *)(v8 + 80);
  v49 = v18 | 7;
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a1;
  sub_22F8C4674((uint64_t)v10, v19 + ((v18 + 24) & ~v18));
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E20408);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E223A8);
  sub_22F893844();
  sub_22F8C4AE0(&qword_255E223B0, &qword_255E223A8, sub_22F8C4ABC, (uint64_t (*)(void))sub_22F8C4D78);
  sub_22F98E9EC();
  sub_22F98E32C();
  v20 = sub_22F87AA84(&qword_255E22378, &qword_255E22370, MEMORY[0x24BDF4700]);
  v21 = v44;
  v22 = v46;
  sub_22F98E6D4();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v6, v53);
  sub_22F87AC20((uint64_t)v12, &qword_255E22370);
  v23 = v43;
  v24 = sub_22F8C2A90();
  v26 = v25;
  v28 = v27 & 1;
  v61 = v22;
  v62 = v20;
  swift_getOpaqueTypeConformance2();
  v29 = (uint64_t)v45;
  v30 = v48;
  sub_22F98E68C();
  sub_22F87E294(v24, v26, v28);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v21, v30);
  __swift_instantiateConcreteTypeFromMangledName(qword_255E1F298);
  sub_22F98E2A8();
  LOBYTE(v59) = 6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F310);
  sub_22F8C4858();
  sub_22F8835F8();
  v31 = v54;
  sub_22F98E6E0();
  swift_release();
  swift_release();
  sub_22F87AC20(v29, &qword_255E22360);
  v32 = (uint64_t)v47;
  sub_22F889F68(v23, (uint64_t)v47, (uint64_t (*)(_QWORD))type metadata accessor for IdentityInformationView);
  v33 = swift_allocObject();
  sub_22F8C4674(v32, v33 + ((v18 + 16) & ~v18));
  v59 = 0;
  v60 = 0;
  type metadata accessor for CGSize(0);
  swift_retain();
  sub_22F98E8F0();
  v34 = v61;
  v35 = v62;
  v36 = v63;
  v38 = v56;
  v37 = v57;
  v39 = v58;
  (*(void (**)(uint64_t, char *, uint64_t))(v56 + 16))(v58, v31, v57);
  swift_release();
  v40 = (uint64_t *)(v39 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255E22350) + 36));
  *v40 = v34;
  v40[1] = v35;
  v40[2] = v36;
  v40[3] = (uint64_t)sub_22F8C4EDC;
  v40[4] = v33;
  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v31, v37);
}

void sub_22F8C186C(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD v17[2];
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;

  v21 = a3;
  v27 = a4;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22498);
  MEMORY[0x24BDAC7A8](v18);
  v19 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22490);
  MEMORY[0x24BDAC7A8](v26);
  v20 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E20810);
  MEMORY[0x24BDAC7A8](v8);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22440);
  v9 = MEMORY[0x24BDAC7A8](v22);
  v17[0] = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v17[1] = (char *)v17 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E224A0);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E224A8);
  MEMORY[0x24BDAC7A8](v14);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E223C0);
  MEMORY[0x24BDAC7A8](v24);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E223D0);
  MEMORY[0x24BDAC7A8](v15);
  v16 = *a1;
  if ((*a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v16 < *(_QWORD *)(a2 + 16))
  {
    __asm { BR              X10 }
  }
  __break(1u);
  JUMPOUT(0x22F8C21DCLL);
}

uint64_t sub_22F8C21EC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  double v40;
  double v41;
  char *v42;
  double v43;
  char *v44;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  char v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;

  v47 = a1;
  v53 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22430);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22420);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22410);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22400);
  MEMORY[0x24BDAC7A8](v48);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E223F0);
  MEMORY[0x24BDAC7A8](v49);
  v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E223E0);
  MEMORY[0x24BDAC7A8](v51);
  v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E223D0);
  MEMORY[0x24BDAC7A8](v52);
  v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v4 = sub_22F98E128();
  *((_QWORD *)v4 + 1) = 0;
  v4[16] = 1;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E224B0);
  sub_22F8C43F0(v47, (uint64_t)&v4[*(int *)(v19 + 44)]);
  sub_22F98EA88();
  sub_22F98DCFC();
  sub_22F87ABDC((uint64_t)v4, (uint64_t)v7, &qword_255E22430);
  v20 = &v7[*(int *)(v5 + 36)];
  v21 = v58;
  *(_OWORD *)v20 = v57;
  *((_OWORD *)v20 + 1) = v21;
  *((_OWORD *)v20 + 2) = v59;
  sub_22F87AC20((uint64_t)v4, &qword_255E22430);
  LOBYTE(v5) = sub_22F98E434();
  sub_22F98DBF4();
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v29 = v28;
  sub_22F87ABDC((uint64_t)v7, (uint64_t)v10, &qword_255E22420);
  v30 = &v10[*(int *)(v8 + 36)];
  *v30 = v5;
  *((_QWORD *)v30 + 1) = v23;
  *((_QWORD *)v30 + 2) = v25;
  *((_QWORD *)v30 + 3) = v27;
  *((_QWORD *)v30 + 4) = v29;
  v30[40] = 0;
  sub_22F87AC20((uint64_t)v7, &qword_255E22420);
  v31 = (char *)(v50 + *(int *)(type metadata accessor for IdentityInformationView() + 36));
  v32 = *v31;
  v33 = *((_QWORD *)v31 + 1);
  v54 = *v31;
  v55 = v33;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3B0);
  sub_22F98E8FC();
  if (v56)
    v34 = 1.0;
  else
    v34 = 1.05;
  sub_22F98EB6C();
  v36 = v35;
  v38 = v37;
  sub_22F87ABDC((uint64_t)v10, (uint64_t)v12, &qword_255E22410);
  v39 = &v12[*(int *)(v48 + 36)];
  *(double *)v39 = v34;
  *((double *)v39 + 1) = v34;
  *((_QWORD *)v39 + 2) = v36;
  *((_QWORD *)v39 + 3) = v38;
  sub_22F87AC20((uint64_t)v10, &qword_255E22410);
  v54 = v32;
  v55 = v33;
  sub_22F98E8FC();
  v40 = 0.0;
  if (v56)
    v41 = 0.0;
  else
    v41 = 4.0;
  sub_22F87ABDC((uint64_t)v12, (uint64_t)v14, &qword_255E22400);
  v42 = &v14[*(int *)(v49 + 36)];
  *(double *)v42 = v41;
  v42[8] = 0;
  sub_22F87AC20((uint64_t)v12, &qword_255E22400);
  v54 = v32;
  v55 = v33;
  sub_22F98E8FC();
  if (v56)
    v43 = 1.0;
  else
    v43 = 0.0;
  sub_22F87ABDC((uint64_t)v14, (uint64_t)v16, &qword_255E223F0);
  *(double *)&v16[*(int *)(v51 + 36)] = v43;
  sub_22F87AC20((uint64_t)v14, &qword_255E223F0);
  v54 = v32;
  v55 = v33;
  sub_22F98E8FC();
  if (!v56)
    v40 = 32.0;
  sub_22F87ABDC((uint64_t)v16, (uint64_t)v18, &qword_255E223E0);
  v44 = &v18[*(int *)(v52 + 36)];
  *(_QWORD *)v44 = 0;
  *((double *)v44 + 1) = v40;
  sub_22F87AC20((uint64_t)v16, &qword_255E223E0);
  return sub_22F87B2B4((uint64_t)v18, v53, &qword_255E223D0);
}

uint64_t sub_22F8C269C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  double v40;
  uint64_t v41;
  uint64_t result;
  double v43;
  char *v44;
  char v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  char v61;

  v56 = a2;
  v57 = a7;
  v51 = a6;
  v52 = a5;
  v54 = a1;
  v55 = a4;
  v53 = a3;
  v50 = a9;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22480);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22470);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22460);
  MEMORY[0x24BDAC7A8](v58);
  v20 = (char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22450);
  MEMORY[0x24BDAC7A8](v48);
  v22 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22440);
  MEMORY[0x24BDAC7A8](v49);
  v24 = (char *)&v48 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a11)
    v25 = a11;
  else
    v25 = sub_22F98E83C();
  swift_retain();
  *(_QWORD *)v15 = sub_22F98E128();
  *((_QWORD *)v15 + 1) = 0;
  v15[16] = 0;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E224C8);
  sub_22F8C3CDC(v54, v56, v57, a8, v11, v25, (uint64_t)&v15[*(int *)(v26 + 44)], v52, v51);
  v27 = sub_22F98E428();
  sub_22F98DBF4();
  v29 = v28;
  v31 = v30;
  v33 = v32;
  v35 = v34;
  sub_22F87ABDC((uint64_t)v15, (uint64_t)v18, &qword_255E22480);
  v36 = &v18[*(int *)(v16 + 36)];
  *v36 = v27;
  *((_QWORD *)v36 + 1) = v29;
  *((_QWORD *)v36 + 2) = v31;
  *((_QWORD *)v36 + 3) = v33;
  *((_QWORD *)v36 + 4) = v35;
  v36[40] = 0;
  sub_22F87AC20((uint64_t)v15, &qword_255E22480);
  v37 = v11 + *(int *)(type metadata accessor for IdentityInformationView() + 36);
  v38 = *(_QWORD *)(v37 + 8);
  v59 = *(_BYTE *)v37;
  v60 = v38;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3B0);
  sub_22F98E8FC();
  v39 = 0.0;
  if (v61)
    v40 = 1.0;
  else
    v40 = 0.0;
  sub_22F87ABDC((uint64_t)v18, (uint64_t)v20, &qword_255E22470);
  *(double *)&v20[*(int *)(v58 + 36)] = v40;
  sub_22F87AC20((uint64_t)v18, &qword_255E22470);
  v41 = *(_QWORD *)(v37 + 8);
  v59 = *(_BYTE *)v37;
  v60 = v41;
  result = sub_22F98E8FC();
  v43 = 0.0;
  if ((v61 & 1) == 0)
  {
    if (__OFADD__(a10, 1))
    {
      __break(1u);
      return result;
    }
    v43 = (double)(a10 + 1) * 27.0;
  }
  sub_22F87ABDC((uint64_t)v20, (uint64_t)v22, &qword_255E22460);
  v44 = &v22[*(int *)(v48 + 36)];
  *(_QWORD *)v44 = 0;
  *((double *)v44 + 1) = v43;
  sub_22F87AC20((uint64_t)v20, &qword_255E22460);
  v45 = *(_BYTE *)v37;
  v46 = *(_QWORD *)(v37 + 8);
  v59 = v45;
  v60 = v46;
  swift_retain();
  sub_22F98E8FC();
  swift_release();
  swift_release();
  if (!v61)
    v39 = 4.0;
  sub_22F87ABDC((uint64_t)v22, (uint64_t)v24, &qword_255E22450);
  v47 = &v24[*(int *)(v49 + 36)];
  *(double *)v47 = v39;
  v47[8] = 0;
  sub_22F87AC20((uint64_t)v22, &qword_255E22450);
  return sub_22F87B2B4((uint64_t)v24, v50, &qword_255E22440);
}

uint64_t sub_22F8C2A90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  void *v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  char *v75;
  __int128 v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  unint64_t v97;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E20810);
  MEMORY[0x24BDAC7A8](v1);
  v77 = (char *)&v66 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_22F98D2D0();
  v88 = *(_QWORD *)(v89 - 8);
  MEMORY[0x24BDAC7A8](v89);
  v87 = (char *)&v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_22F98D4B0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = sub_22F98D2DC();
  v85 = *(_QWORD *)(v86 - 8);
  v8 = MEMORY[0x24BDAC7A8](v86);
  v84 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v93 = (char *)&v66 - v10;
  v11 = sub_22F98ED7C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v92 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v66 - v15;
  v17 = type metadata accessor for IdentityInformationView();
  v18 = *(_QWORD *)(v0 + *(int *)(v17 + 24));
  if (v18)
  {
    v67 = v17;
    v68 = v0;
    v19 = *(_QWORD *)(v18 + 16);
    if (v19)
    {
      v91 = v4;
      swift_bridgeObjectRetain();
      v79 = 0;
      v74 = 0;
      v66 = v18;
      v20 = (unsigned __int8 *)(v18 + 48);
      v90 = 0xE000000000000000;
      v71 = 0xD000000000000020;
      v70 = 0x800000022F99F910;
      v76 = xmmword_22F991B40;
      v69 = 0x800000022F99F940;
      v73 = 0x800000022F99F970;
      v72 = 0x800000022F99F990;
      v80 = 0xE000000000000000;
      v83 = v5;
      v82 = v7;
      v75 = v16;
      v81 = v11;
      while (1)
      {
        v30 = (void *)*((_QWORD *)v20 - 2);
        v31 = *((_QWORD *)v20 - 1);
        v32 = *v20;
        if (v32 == 3)
          break;
        if (v32 == 2)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_255E249D0);
          v21 = swift_allocObject();
          *(_OWORD *)(v21 + 16) = v76;
          *(_QWORD *)(v21 + 56) = MEMORY[0x24BEE1768];
          *(_QWORD *)(v21 + 64) = MEMORY[0x24BEE17F0];
          *(_QWORD *)(v21 + 32) = v30;
          sub_22F98ED88();
          if (qword_255E1DB70 == -1)
          {
LABEL_5:
            swift_beginAccess();
            v22 = (char *)off_255E211B8 + OBJC_IVAR____TtC19ContactlessReaderUI10AppManager_merchantLocale;
            (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v92, v16, v11);
            (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v22, v91);
            if (qword_255E1DC38 != -1)
              swift_once();
            v23 = v89;
            v24 = __swift_project_value_buffer(v89, (uint64_t)qword_255E29848);
            (*(void (**)(char *, uint64_t, uint64_t))(v88 + 16))(v87, v24, v23);
            sub_22F98D2E8();
            v25 = v85;
            v26 = v86;
            (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v84, v93, v86);
            sub_22F98EE0C();
            (*(void (**)(char *, uint64_t))(v25 + 8))(v93, v26);
            v16 = v75;
            v11 = v81;
            (*(void (**)(char *, uint64_t))(v12 + 8))(v75, v81);
            v27 = (uint64_t)v77;
            sub_22F98D420();
            v5 = v83;
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v83 + 56))(v27, 0, 1, v91);
            swift_bridgeObjectRetain();
            v79 = sub_22F98EDD0();
            v29 = v28;
            swift_bridgeObjectRelease();
            sub_22F87AC20(v27, (uint64_t *)&unk_255E20810);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v90 = v29;
            v7 = v82;
            goto LABEL_8;
          }
LABEL_24:
          swift_once();
          goto LABEL_5;
        }
        if (v32 == 1)
        {
          v78 = v19;
          v33 = v5;
          v34 = v11;
          v35 = v92;
          swift_bridgeObjectRetain();
          sub_22F98ED88();
          if (qword_255E1DB70 != -1)
            swift_once();
          swift_beginAccess();
          v36 = (char *)off_255E211B8 + OBJC_IVAR____TtC19ContactlessReaderUI10AppManager_merchantLocale;
          (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v35, v16, v34);
          v37 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
          v7 = v82;
          v37(v82, v36, v91);
          v38 = v12;
          v39 = v16;
          if (qword_255E1DC38 != -1)
            swift_once();
          v40 = v89;
          v41 = __swift_project_value_buffer(v89, (uint64_t)qword_255E29848);
          (*(void (**)(char *, uint64_t, uint64_t))(v88 + 16))(v87, v41, v40);
          v42 = v93;
          sub_22F98D2E8();
          v43 = v85;
          v44 = v86;
          (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v84, v42, v86);
          v74 = sub_22F98EE0C();
          v46 = v45;
          (*(void (**)(char *, uint64_t))(v43 + 8))(v42, v44);
          v11 = v81;
          (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v81);
          swift_bridgeObjectRelease();
          sub_22F8A2524(v30, v31, 1);
          v80 = v46;
          v12 = v38;
          v16 = v39;
          v5 = v83;
          v19 = v78;
        }
LABEL_8:
        v20 += 24;
        if (!--v19)
        {
          swift_bridgeObjectRelease();
          v58 = v90;
          v59 = v80;
          v60 = v74;
          v61 = v79;
          goto LABEL_28;
        }
      }
      if ((v31 & 1) == 0)
      {
        sub_22F98ED88();
        if (qword_255E1DB70 != -1)
          swift_once();
        swift_beginAccess();
        v47 = (char *)off_255E211B8 + OBJC_IVAR____TtC19ContactlessReaderUI10AppManager_merchantLocale;
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v92, v16, v11);
        (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v47, v91);
        v48 = v12;
        v49 = v16;
        if (qword_255E1DC38 != -1)
          swift_once();
        v50 = v89;
        v51 = __swift_project_value_buffer(v89, (uint64_t)qword_255E29848);
        (*(void (**)(char *, uint64_t, uint64_t))(v88 + 16))(v87, v51, v50);
        v52 = v93;
        sub_22F98D2E8();
        v53 = v85;
        v54 = v86;
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v84, v52, v86);
        v79 = sub_22F98EE0C();
        v56 = v55;
        (*(void (**)(char *, uint64_t))(v53 + 8))(v52, v54);
        (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v11);
        swift_bridgeObjectRelease();
        v90 = v56;
        v12 = v48;
        v16 = v49;
        v5 = v83;
        goto LABEL_8;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_255E249D0);
      v57 = swift_allocObject();
      *(_OWORD *)(v57 + 16) = v76;
      *(_QWORD *)(v57 + 56) = MEMORY[0x24BEE1768];
      *(_QWORD *)(v57 + 64) = MEMORY[0x24BEE17F0];
      *(_QWORD *)(v57 + 32) = v30;
      sub_22F98ED88();
      if (qword_255E1DB70 == -1)
        goto LABEL_5;
      goto LABEL_24;
    }
    v61 = 0;
    v60 = 0;
    v58 = 0xE000000000000000;
    v59 = 0xE000000000000000;
LABEL_28:
    v96 = sub_22F932EEC(0);
    v97 = v63;
    swift_bridgeObjectRetain();
    sub_22F98EE9C();
    swift_bridgeObjectRelease();
    v64 = HIBYTE(v58) & 0xF;
    if ((v58 & 0x2000000000000000) == 0)
      v64 = v61 & 0xFFFFFFFFFFFFLL;
    if (v64)
    {
      v94 = v61;
      v95 = v58;
      swift_bridgeObjectRetain();
      sub_22F98EE9C();
      sub_22F98EE9C();
      swift_bridgeObjectRelease();
    }
    v65 = HIBYTE(v59) & 0xF;
    if ((v59 & 0x2000000000000000) == 0)
      v65 = v60 & 0xFFFFFFFFFFFFLL;
    if (v65)
    {
      v94 = v60;
      v95 = v59;
      swift_bridgeObjectRetain();
      sub_22F98EE9C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22F98EE9C();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    if (*(_BYTE *)(v68 + *(int *)(v67 + 28)) == 1)
    {
      sub_22F932EEC(0);
      sub_22F98EE9C();
      swift_bridgeObjectRelease();
    }
    v94 = v96;
    v95 = v97;
    sub_22F863BF8();
    return sub_22F98E5CC();
  }
  else
  {
    sub_22F98E0D4();
    return sub_22F98E5C0();
  }
}

uint64_t sub_22F8C369C()
{
  type metadata accessor for IdentityInformationView();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3C0);
  return sub_22F98E908();
}

uint64_t sub_22F8C3708(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[6];

  v22 = a1;
  v26 = sub_22F98EB84();
  v29 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v2 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_22F98EB9C();
  v27 = *(_QWORD *)(v3 - 8);
  v28 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for IdentityInformationView();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  v9 = sub_22F98EBC0();
  v10 = *(_QWORD *)(v9 - 8);
  v25 = v9;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v22 - v14;
  sub_22F879058();
  v23 = sub_22F98F0F4();
  sub_22F98EBB4();
  MEMORY[0x2348A57D0](v13, 0.1);
  v24 = *(void (**)(char *, uint64_t))(v10 + 8);
  v24(v13, v9);
  sub_22F889F68(v22, (uint64_t)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for IdentityInformationView);
  v16 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v17 = swift_allocObject();
  sub_22F8C4674((uint64_t)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16);
  aBlock[4] = sub_22F8C4750;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22F8644F0;
  aBlock[3] = &block_descriptor_12_0;
  v18 = _Block_copy(aBlock);
  swift_release();
  sub_22F98EB90();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_22F862548((unint64_t *)&qword_255E22DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E22070);
  sub_22F87AA84((unint64_t *)&qword_255E22DB0, (uint64_t *)&unk_255E22070, MEMORY[0x24BEE12C8]);
  v19 = v26;
  sub_22F98F274();
  v20 = (void *)v23;
  MEMORY[0x2348A5CA4](v15, v5, v2, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v2, v19);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v5, v28);
  return ((uint64_t (*)(char *, uint64_t))v24)(v15, v25);
}

uint64_t sub_22F8C39F8()
{
  __swift_instantiateConcreteTypeFromMangledName(qword_255E1F298);
  sub_22F98E29C();
  type metadata accessor for IdentityInformationView();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3B0);
  return sub_22F98E908();
}

uint64_t sub_22F8C3A80(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD aBlock[6];

  v2 = sub_22F98EB84();
  v19 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_22F98EB9C();
  v17 = *(_QWORD *)(v5 - 8);
  v18 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for IdentityInformationView();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  sub_22F879058();
  v11 = (void *)sub_22F98F0F4();
  sub_22F889F68(a1, (uint64_t)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for IdentityInformationView);
  v12 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v13 = swift_allocObject();
  sub_22F8C4674((uint64_t)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12);
  aBlock[4] = sub_22F8C46D8;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22F8644F0;
  aBlock[3] = &block_descriptor_14;
  v14 = _Block_copy(aBlock);
  swift_release();
  sub_22F98EB90();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_22F862548((unint64_t *)&qword_255E22DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E22070);
  sub_22F87AA84((unint64_t *)&qword_255E22DB0, (uint64_t *)&unk_255E22070, MEMORY[0x24BEE12C8]);
  sub_22F98F274();
  MEMORY[0x2348A5CD4](0, v7, v4, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v19 + 8))(v4, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v7, v18);
}

uint64_t sub_22F8C3CDC@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char v58;
  uint64_t KeyPath;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD v69[2];
  __int128 v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  _OWORD v92[11];
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  uint64_t v116;
  char v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  _OWORD v123[12];

  v71 = a5;
  v72 = a6;
  *(_QWORD *)&v70 = a3;
  *((_QWORD *)&v70 + 1) = a4;
  v69[0] = a1;
  v69[1] = a2;
  v78 = a7;
  v75 = a9;
  v74 = a8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E224D0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v79 = (uint64_t)v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v73 = (char *)v69 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v77 = (uint64_t)v69 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E224D8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v76 = (uint64_t)v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v80 = (uint64_t)v69 - v18;
  swift_bridgeObjectRetain();
  sub_22F98E0D4();
  if (qword_255E1DC30 != -1)
    swift_once();
  v19 = (id)qword_255E29840;
  v20 = sub_22F98E5C0();
  v22 = v21;
  v24 = v23 & 1;
  sub_22F98E488();
  v25 = sub_22F98E5A8();
  v27 = v26;
  v29 = v28;
  swift_release();
  sub_22F87E294(v20, v22, v24);
  swift_bridgeObjectRelease();
  sub_22F98E848();
  v30 = sub_22F98E590();
  v32 = v31;
  LOBYTE(v22) = v33;
  v35 = v34;
  swift_release();
  LOBYTE(v22) = v22 & 1;
  sub_22F87E294(v25, v27, v29 & 1);
  swift_bridgeObjectRelease();
  LOBYTE(v20) = sub_22F98E434();
  sub_22F98DBF4();
  v113 = v30;
  v114 = v32;
  v115 = v22;
  v116 = v35;
  v117 = v20;
  v118 = v36;
  v119 = v37;
  v120 = v38;
  v121 = v39;
  v122 = 0;
  sub_22F98EA88();
  sub_22F8F9FCC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v123, 0.0, 1, 0.0, 1);
  sub_22F87E294(v30, v32, v22);
  swift_bridgeObjectRelease();
  v101 = v123[8];
  v102 = v123[9];
  v103 = v123[10];
  v104 = v123[11];
  v97 = v123[4];
  v98 = v123[5];
  v99 = v123[6];
  v100 = v123[7];
  v93 = v123[0];
  v94 = v123[1];
  v95 = v123[2];
  v96 = v123[3];
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E224E0);
  sub_22F8C4FDC();
  sub_22F98E704();
  sub_22F8C5068((uint64_t)v123);
  v93 = v70;
  sub_22F863BF8();
  swift_bridgeObjectRetain();
  v40 = sub_22F98E5CC();
  v42 = v41;
  v44 = v43;
  v45 = *(_QWORD *)(v71 + *(int *)(type metadata accessor for IdentityInformationView() + 24));
  if (v45 && *(_QWORD *)(v45 + 16) == 2)
    sub_22F98E470();
  else
    sub_22F98E494();
  v46 = v44 & 1;
  v47 = sub_22F98E5A8();
  v49 = v48;
  v51 = v50;
  swift_release();
  sub_22F87E294(v40, v42, v46);
  swift_bridgeObjectRelease();
  sub_22F98E4D0();
  v52 = sub_22F98E578();
  v54 = v53;
  v56 = v55;
  v58 = v57 & 1;
  sub_22F87E294(v47, v49, v51 & 1);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v60 = swift_getKeyPath();
  v105 = v52;
  v106 = v54;
  v107 = v58;
  v108 = v56;
  v109 = KeyPath;
  v110 = 1;
  v111 = v60;
  v112 = v72;
  swift_retain();
  sub_22F98EA88();
  sub_22F8FA17C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, &v93, 0.0, 1, 0.0, 1);
  sub_22F87E294(v52, v54, v58);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v92[8] = v101;
  v92[9] = v102;
  v92[10] = v103;
  v92[4] = v97;
  v92[5] = v98;
  v92[6] = v99;
  v92[7] = v100;
  v92[0] = v93;
  v92[1] = v94;
  v92[2] = v95;
  v92[3] = v96;
  v89 = v101;
  v90 = v102;
  v91 = v103;
  v85 = v97;
  v86 = v98;
  v87 = v99;
  v88 = v100;
  v81 = v93;
  v82 = v94;
  v83 = v95;
  v84 = v96;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E224F0);
  sub_22F87E2D8(&qword_255E224F8, &qword_255E224F0, (uint64_t (*)(void))sub_22F8C50B4, MEMORY[0x24BDEDBB8]);
  v61 = (uint64_t)v73;
  sub_22F98E704();
  sub_22F8C5138((uint64_t)v92);
  v62 = v77;
  sub_22F87B2B4(v61, v77, &qword_255E224D0);
  v63 = v80;
  v64 = v76;
  sub_22F87ABDC(v80, v76, &qword_255E224D8);
  v65 = v79;
  sub_22F87ABDC(v62, v79, &qword_255E224D0);
  v66 = v78;
  sub_22F87ABDC(v64, v78, &qword_255E224D8);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22510);
  sub_22F87ABDC(v65, v66 + *(int *)(v67 + 48), &qword_255E224D0);
  sub_22F87AC20(v62, &qword_255E224D0);
  sub_22F87AC20(v63, &qword_255E224D8);
  sub_22F87AC20(v65, &qword_255E224D0);
  return sub_22F87AC20(v64, &qword_255E224D8);
}

uint64_t sub_22F8C43F0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v26[2];

  v26[1] = a2;
  v26[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F8D0);
  MEMORY[0x24BDAC7A8](v26[0]);
  v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_22F98DF00();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (_OWORD *)((char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_22F98E878();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E224B8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1;
  sub_22F98E860();
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BDF3FD0], v8);
  v16 = sub_22F98E890();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v17 = (char *)v7 + *(int *)(v5 + 20);
  v18 = *MEMORY[0x24BDEEB68];
  v19 = sub_22F98E0EC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v17, v18, v19);
  __asm { FMOV            V0.2D, #12.0 }
  *v7 = _Q0;
  sub_22F889F68((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
  *(_WORD *)&v4[*(int *)(v26[0] + 36)] = 256;
  sub_22F87ABDC((uint64_t)v4, (uint64_t)&v14[*(int *)(v12 + 36)], &qword_255E1F8D0);
  *(_QWORD *)v14 = v16;
  *((_QWORD *)v14 + 1) = 0;
  *((_WORD *)v14 + 8) = 1;
  swift_retain();
  sub_22F87AC20((uint64_t)v4, &qword_255E1F8D0);
  sub_22F889FAC((uint64_t)v7);
  swift_release();
  sub_22F8C4F38();
  sub_22F98E704();
  return sub_22F87AC20((uint64_t)v14, &qword_255E224B8);
}

uint64_t sub_22F8C4674(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for IdentityInformationView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22F8C46B8()
{
  return sub_22F8C475C(sub_22F8C3708);
}

uint64_t sub_22F8C46C8()
{
  return sub_22F8C475C(sub_22F8C3A80);
}

uint64_t sub_22F8C46D8()
{
  type metadata accessor for IdentityInformationView();
  __swift_instantiateConcreteTypeFromMangledName(qword_255E1F298);
  return sub_22F98E29C();
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t sub_22F8C4750()
{
  return sub_22F8C475C((uint64_t (*)(uint64_t))sub_22F8C39F8);
}

uint64_t sub_22F8C475C(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IdentityInformationView() - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

uint64_t sub_22F8C4798@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_22F8C1310(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_22F8C47A0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = qword_255E22358;
  if (!qword_255E22358)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E22350);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E22360);
    v2[3] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1F310);
    v2[4] = sub_22F8C4858();
    v2[5] = sub_22F8835F8();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_22F8C4924();
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E22358);
  }
  return result;
}

unint64_t sub_22F8C4858()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_255E22368;
  if (!qword_255E22368)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E22360);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E22370);
    v2[3] = sub_22F87AA84(&qword_255E22378, &qword_255E22370, MEMORY[0x24BDF4700]);
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_22F862548((unint64_t *)&qword_255E1F478, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E22368);
  }
  return result;
}

unint64_t sub_22F8C4924()
{
  unint64_t result;

  result = qword_255E22380;
  if (!qword_255E22380)
  {
    result = MEMORY[0x2348A6784](&unk_22F99AB00, &type metadata for ViewSizeObserver);
    atomic_store(result, (unint64_t *)&qword_255E22380);
  }
  return result;
}

uint64_t sub_22F8C4968()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for IdentityInformationView() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_bridgeObjectRelease();
  v3 = sub_22F98E308();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3))
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  __swift_instantiateConcreteTypeFromMangledName(qword_255E1F298);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_22F8C4A6C(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IdentityInformationView() - 8) + 80);
  sub_22F8C186C(a1, *(_QWORD *)(v2 + 16), v2 + ((v5 + 24) & ~v5), a2);
}

uint64_t sub_22F8C4ABC()
{
  return sub_22F8C4AE0(&qword_255E223B8, &qword_255E223C0, sub_22F8C4B50, sub_22F8C4C88);
}

uint64_t sub_22F8C4AE0(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = a3();
    v9[1] = a4();
    result = MEMORY[0x2348A6784](MEMORY[0x24BDEF3E0], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22F8C4B50()
{
  return sub_22F87E2D8(&qword_255E223C8, &qword_255E223D0, sub_22F8C4B74, MEMORY[0x24BDEC438]);
}

uint64_t sub_22F8C4B74()
{
  return sub_22F87E2D8(&qword_255E223D8, &qword_255E223E0, sub_22F8C4B98, MEMORY[0x24BDECC38]);
}

uint64_t sub_22F8C4B98()
{
  return sub_22F87E2D8(&qword_255E223E8, &qword_255E223F0, sub_22F8C4BBC, MEMORY[0x24BDEB920]);
}

uint64_t sub_22F8C4BBC()
{
  return sub_22F87E2D8(&qword_255E223F8, &qword_255E22400, sub_22F8C4BE0, MEMORY[0x24BDEBF50]);
}

uint64_t sub_22F8C4BE0()
{
  return sub_22F87E2D8(&qword_255E22408, &qword_255E22410, (uint64_t (*)(void))sub_22F8C4C04, MEMORY[0x24BDECC60]);
}

unint64_t sub_22F8C4C04()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E22418;
  if (!qword_255E22418)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E22420);
    v2[0] = sub_22F87AA84(&qword_255E22428, &qword_255E22430, MEMORY[0x24BDF4700]);
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E22418);
  }
  return result;
}

uint64_t sub_22F8C4C88()
{
  return sub_22F87E2D8(&qword_255E22438, &qword_255E22440, sub_22F8C4CAC, MEMORY[0x24BDEB920]);
}

uint64_t sub_22F8C4CAC()
{
  return sub_22F87E2D8(&qword_255E22448, &qword_255E22450, sub_22F8C4CD0, MEMORY[0x24BDEC438]);
}

uint64_t sub_22F8C4CD0()
{
  return sub_22F87E2D8(&qword_255E22458, &qword_255E22460, (uint64_t (*)(void))sub_22F8C4CF4, MEMORY[0x24BDECC38]);
}

unint64_t sub_22F8C4CF4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E22468;
  if (!qword_255E22468)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E22470);
    v2[0] = sub_22F87AA84(&qword_255E22478, &qword_255E22480, MEMORY[0x24BDF4700]);
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E22468);
  }
  return result;
}

unint64_t sub_22F8C4D78()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E22488;
  if (!qword_255E22488)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E22490);
    v2[0] = sub_22F8C4C88();
    v2[1] = v2[0];
    result = MEMORY[0x2348A6784](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E22488);
  }
  return result;
}

uint64_t objectdestroyTm_11()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for IdentityInformationView() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = sub_22F98E308();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3))
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  __swift_instantiateConcreteTypeFromMangledName(qword_255E1F298);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22F8C4EDC()
{
  type metadata accessor for IdentityInformationView();
  return sub_22F8C369C();
}

unint64_t sub_22F8C4F38()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E224C0;
  if (!qword_255E224C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E224B8);
    v2[0] = sub_22F891578((unint64_t *)&qword_255E1F0E8, &qword_255E1F0F0, MEMORY[0x24BDF40E8], MEMORY[0x24BDEEC40]);
    v2[1] = sub_22F87AA84(&qword_255E1F918, &qword_255E1F8D0, MEMORY[0x24BDEB950]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E224C0);
  }
  return result;
}

unint64_t sub_22F8C4FDC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E224E8;
  if (!qword_255E224E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E224E0);
    v2[0] = sub_22F891578(&qword_255E20950, &qword_255E20958, MEMORY[0x24BDF1F80], MEMORY[0x24BDECC60]);
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E224E8);
  }
  return result;
}

uint64_t sub_22F8C5068(uint64_t a1)
{
  sub_22F87E294(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_22F8C50B4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E22500;
  if (!qword_255E22500)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E22508);
    v2[0] = sub_22F8948D8();
    v2[1] = sub_22F87AA84(&qword_255E1F108, &qword_255E1F110, MEMORY[0x24BDF1028]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E22500);
  }
  return result;
}

uint64_t sub_22F8C5138(uint64_t a1)
{
  sub_22F87E294(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

uint64_t sub_22F8C51A0()
{
  return sub_22F87E2D8(&qword_255E22518, &qword_255E22328, sub_22F8C51D4, MEMORY[0x24BDF0910]);
}

uint64_t sub_22F8C51D4()
{
  return sub_22F87E2D8(&qword_255E22520, &qword_255E22318, (uint64_t (*)(void))sub_22F8C51F8, MEMORY[0x24BDF0910]);
}

unint64_t sub_22F8C51F8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E22528;
  if (!qword_255E22528)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E22310);
    v2[0] = sub_22F87AA84(&qword_255E22530, &qword_255E22308, MEMORY[0x24BDF4700]);
    v2[1] = sub_22F87AA84(&qword_255E1F118, &qword_255E1F120, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E22528);
  }
  return result;
}

double sub_22F8C529C@<D0>(uint64_t a1@<X8>)
{
  double result;
  __int128 v3;
  __int128 v4;
  uint64_t v5;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  return result;
}

uint64_t sub_22F8C531C()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_22F8C5390()
{
  sub_22F8C5E20();
  return sub_22F98E3BC();
}

uint64_t sub_22F8C53E0()
{
  sub_22F8C5E20();
  return sub_22F98E38C();
}

void sub_22F8C5430()
{
  sub_22F8C5E20();
  sub_22F98E3B0();
  __break(1u);
}

uint64_t sub_22F8C5454()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC19ContactlessReaderUI25PrivacyAuthenticatorModel__passcodeEntry;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E226B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC19ContactlessReaderUI25PrivacyAuthenticatorModel__glyphModel;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E226C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance();
}

uint64_t sub_22F8C54D4()
{
  return type metadata accessor for PrivacyAuthenticatorModel();
}

uint64_t type metadata accessor for PrivacyAuthenticatorModel()
{
  uint64_t result;

  result = qword_255E22570;
  if (!qword_255E22570)
    return swift_getSingletonMetadata();
  return result;
}

void sub_22F8C5518()
{
  unint64_t v0;
  unint64_t v1;

  sub_22F8C55B8();
  if (v0 <= 0x3F)
  {
    sub_22F8C5610();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

void sub_22F8C55B8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255E22580)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E22588);
    v0 = sub_22F98DBB8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255E22580);
  }
}

void sub_22F8C5610()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255E22590)
  {
    v0 = sub_22F98DBB8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255E22590);
  }
}

uint64_t destroy for PrivacyAuthenticatorModel.GlyphModel(uint64_t result)
{
  if (*(_QWORD *)(result + 16))
    return swift_release();
  return result;
}

uint64_t initializeWithCopy for PrivacyAuthenticatorModel.GlyphModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  if (v3)
  {
    v4 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = v3;
    *(_QWORD *)(a1 + 24) = v4;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  }
  return a1;
}

_QWORD *assignWithCopy for PrivacyAuthenticatorModel.GlyphModel(_QWORD *a1, _QWORD *a2)
{
  _OWORD *v3;
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  v3 = a1 + 2;
  v5 = a2 + 2;
  v4 = a2[2];
  if (!a1[2])
  {
    if (v4)
    {
      v7 = a2[3];
      a1[2] = v4;
      a1[3] = v7;
      swift_retain();
      return a1;
    }
LABEL_7:
    *v3 = *v5;
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v6 = a2[3];
  a1[2] = v4;
  a1[3] = v6;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for PrivacyAuthenticatorModel.GlyphModel(uint64_t a1, uint64_t a2)
{
  _OWORD *v3;
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = (_OWORD *)(a1 + 16);
  v5 = (_OWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 16);
  if (!*(_QWORD *)(a1 + 16))
  {
    if (v4)
    {
      v7 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 16) = v4;
      *(_QWORD *)(a1 + 24) = v7;
      return a1;
    }
LABEL_7:
    *v3 = *v5;
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v6;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for PrivacyAuthenticatorModel.GlyphModel(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PrivacyAuthenticatorModel.GlyphModel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PrivacyAuthenticatorModel.GlyphModel()
{
  return &type metadata for PrivacyAuthenticatorModel.GlyphModel;
}

uint64_t destroy for PrivacyAuthenticatorModel.PasscodeEntry(uint64_t a1)
{
  uint64_t result;

  result = swift_release();
  if (*(_QWORD *)(a1 + 24))
    return swift_release();
  return result;
}

uint64_t initializeWithCopy for PrivacyAuthenticatorModel.PasscodeEntry(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  _OWORD *v7;
  id v8;
  uint64_t v9;

  v4 = *((_QWORD *)a2 + 2);
  v5 = *a2;
  *(_OWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 16) = v4;
  v7 = (__int128 *)((char *)a2 + 24);
  v6 = *((_QWORD *)a2 + 3);
  v8 = (id)v5;
  swift_retain();
  if (v6)
  {
    v9 = *((_QWORD *)a2 + 4);
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = v9;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 24) = *v7;
  }
  return a1;
}

uint64_t assignWithCopy for PrivacyAuthenticatorModel.PasscodeEntry(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v7;
  swift_retain();
  swift_release();
  v8 = *(_QWORD *)(a2 + 24);
  if (!*(_QWORD *)(a1 + 24))
  {
    if (v8)
    {
      v10 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 24) = v8;
      *(_QWORD *)(a1 + 32) = v10;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    return a1;
  }
  if (!v8)
  {
    swift_release();
    goto LABEL_7;
  }
  v9 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v9;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for PrivacyAuthenticatorModel.PasscodeEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v4;
  swift_release();
  v5 = *(_QWORD *)(a2 + 24);
  if (!*(_QWORD *)(a1 + 24))
  {
    if (v5)
    {
      v7 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 24) = v5;
      *(_QWORD *)(a1 + 32) = v7;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    return a1;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for PrivacyAuthenticatorModel.PasscodeEntry(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PrivacyAuthenticatorModel.PasscodeEntry(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PrivacyAuthenticatorModel.PasscodeEntry()
{
  return &type metadata for PrivacyAuthenticatorModel.PasscodeEntry;
}

uint64_t sub_22F8C5B3C()
{
  return MEMORY[0x24BEE0948];
}

uint64_t sub_22F8C5B48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  __int128 v13;
  uint64_t v14;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E226C0);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E226B8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  v9 = v0 + OBJC_IVAR____TtC19ContactlessReaderUI25PrivacyAuthenticatorModel__passcodeEntry;
  v14 = 0;
  v12 = 0u;
  v13 = 0u;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E22588);
  sub_22F98DB7C();
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v9, v8, v5);
  v10 = v0 + OBJC_IVAR____TtC19ContactlessReaderUI25PrivacyAuthenticatorModel__glyphModel;
  v12 = 6uLL;
  v13 = 0uLL;
  sub_22F98DB7C();
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v10, v4, v1);
  return v0;
}

uint64_t sub_22F8C5C8C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for PrivacyAuthenticatorModel();
  result = sub_22F98DB70();
  *a1 = result;
  return result;
}

void sub_22F8C5CC8(void *a1)
{
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;

  v2 = objc_msgSend(a1, sel_parentViewController);

  if (v2)
  {
    v3 = objc_msgSend(a1, sel_view);
    if (v3)
    {
      v4 = v3;
      objc_msgSend(v3, sel_removeFromSuperview);

      objc_msgSend(a1, sel_removeFromParentViewController);
      objc_msgSend(a1, sel_didMoveToParentViewController_, 0);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    v5 = objc_msgSend(a1, sel_presentingViewController);
    if (v5)
    {
      v6 = v5;
      objc_msgSend(v5, sel_dismissViewControllerAnimated_completion_, 1, 0);

    }
  }
}

ValueMetadata *type metadata accessor for PrivacyAuthenticatorModel.PasscodeView()
{
  return &type metadata for PrivacyAuthenticatorModel.PasscodeView;
}

unint64_t sub_22F8C5DDC()
{
  unint64_t result;

  result = qword_255E226C8;
  if (!qword_255E226C8)
  {
    result = MEMORY[0x2348A6784](&unk_22F995678, &type metadata for PrivacyAuthenticatorModel.PasscodeView);
    atomic_store(result, (unint64_t *)&qword_255E226C8);
  }
  return result;
}

unint64_t sub_22F8C5E20()
{
  unint64_t result;

  result = qword_255E226D0;
  if (!qword_255E226D0)
  {
    result = MEMORY[0x2348A6784](&unk_22F9956C8, &type metadata for PrivacyAuthenticatorModel.PasscodeView);
    atomic_store(result, (unint64_t *)&qword_255E226D0);
  }
  return result;
}

uint64_t destroy for TransactionDetailsView(uint64_t a1)
{

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for TransactionDetailsView(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  void *v16;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v7;
  v8 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v8;
  v9 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v9;
  v10 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v10;
  v16 = *(void **)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v16;
  *(_WORD *)(a1 + 160) = *(_WORD *)(a2 + 160);
  v11 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = v11;
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  v12 = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = v12;
  v13 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = v16;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TransactionDetailsView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  v6 = v4;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(void **)(a2 + 152);
  v8 = *(void **)(a1 + 152);
  *(_QWORD *)(a1 + 152) = v7;
  v9 = v7;

  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  *(_BYTE *)(a1 + 161) = *(_BYTE *)(a2 + 161);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  return a1;
}

__n128 __swift_memcpy208_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  v5 = *(_OWORD *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  result = *(__n128 *)(a2 + 144);
  v9 = *(_OWORD *)(a2 + 160);
  v10 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v10;
  *(__n128 *)(a1 + 144) = result;
  *(_OWORD *)(a1 + 160) = v9;
  return result;
}

uint64_t assignWithTake for TransactionDetailsView(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v10;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRelease();
  v11 = *(void **)(a1 + 152);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);

  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  *(_BYTE *)(a1 + 161) = *(_BYTE *)(a2 + 161);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_release();
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  swift_release();
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  return a1;
}

uint64_t getEnumTagSinglePayload for TransactionDetailsView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 208))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TransactionDetailsView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 200) = 0;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 208) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 208) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TransactionDetailsView()
{
  return &type metadata for TransactionDetailsView;
}

uint64_t sub_22F8C63E0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22F8C63F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  int64x2_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  double v36;
  double v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  int64x2_t *v46;
  __int8 *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int64x2_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v4 = sub_22F98DF00();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (int64x2_t *)((char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_22F98EA4C();
  v68 = *(_QWORD *)(v7 - 8);
  v69 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v67 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E226F0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E226F8);
  MEMORY[0x24BDAC7A8](v62);
  v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22700);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22708);
  MEMORY[0x24BDAC7A8](v63);
  v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22710);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22718);
  MEMORY[0x24BDAC7A8](v64);
  v23 = (char *)&v56 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22720);
  MEMORY[0x24BDAC7A8](v65);
  v66 = (char *)&v56 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22728);
  MEMORY[0x24BDAC7A8](v25);
  if ((*(_BYTE *)(a1 + 160) & 1) == 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 56))(a2, 1, 1);
  v58 = (uint64_t)&v56 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = v28;
  v60 = v26;
  v61 = a2;
  *(_QWORD *)v16 = sub_22F98E128();
  *((_QWORD *)v16 + 1) = 0;
  v16[16] = 1;
  v30 = (uint64_t)&v16[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255E22730) + 44)];
  *(_QWORD *)v11 = sub_22F98E128();
  *((_QWORD *)v11 + 1) = 0;
  v11[16] = 0;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22738);
  sub_22F8C6A2C((__int128 *)a1, (uint64_t)&v11[*(int *)(v31 + 44)]);
  v57 = v4;
  v32 = *(_BYTE *)(a1 + 161);
  v70 = 0x3FF0000000000000;
  sub_22F98E8F0();
  v33 = v71;
  v56 = v6;
  v34 = v72;
  sub_22F87ABDC((uint64_t)v11, (uint64_t)v13, &qword_255E226F0);
  v35 = &v13[*(int *)(v62 + 36)];
  *v35 = v32;
  *((_QWORD *)v35 + 1) = v33;
  *((_QWORD *)v35 + 2) = v34;
  sub_22F87AC20((uint64_t)v11, &qword_255E226F0);
  sub_22F87B2B4((uint64_t)v13, v30, &qword_255E226F8);
  v36 = *(double *)&qword_255E270F0 * 32.0;
  v37 = *(double *)&qword_255E270F0 * 24.0;
  LOBYTE(v30) = sub_22F98E41C();
  sub_22F87ABDC((uint64_t)v16, (uint64_t)v18, &qword_255E22700);
  v38 = &v18[*(int *)(v63 + 36)];
  *v38 = v30;
  *((double *)v38 + 1) = v36;
  *((_QWORD *)v38 + 2) = 0x4030000000000000;
  *((double *)v38 + 3) = v37;
  *((_QWORD *)v38 + 4) = 0x4030000000000000;
  v38[40] = 0;
  sub_22F87AC20((uint64_t)v16, &qword_255E22700);
  v39 = sub_22F98EA88();
  sub_22F8FA320(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v21, 0.0, 1, 0.0, 1, v39, v40);
  sub_22F87AC20((uint64_t)v18, &qword_255E22708);
  v41 = v67;
  sub_22F98EA28();
  v42 = sub_22F98E41C();
  v43 = &v23[*(int *)(v64 + 36)];
  v45 = v68;
  v44 = v69;
  (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v43, v41, v69);
  v43[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255E1F8C8) + 36)] = v42;
  sub_22F87ABDC((uint64_t)v21, (uint64_t)v23, &qword_255E22710);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v41, v44);
  sub_22F87AC20((uint64_t)v21, &qword_255E22710);
  v46 = v56;
  v47 = &v56->i8[*(int *)(v57 + 20)];
  v48 = *MEMORY[0x24BDEEB68];
  v49 = sub_22F98E0EC();
  (*(void (**)(__int8 *, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 104))(v47, v48, v49);
  *v46 = vdupq_n_s64(0x4043000000000000uLL);
  v50 = (uint64_t)v66;
  v51 = (uint64_t)&v66[*(int *)(v65 + 36)];
  sub_22F8946E0((uint64_t)v46, v51);
  *(_WORD *)(v51 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255E1F8D0) + 36)) = 256;
  sub_22F87ABDC((uint64_t)v23, v50, &qword_255E22718);
  sub_22F889FAC((uint64_t)v46);
  sub_22F87AC20((uint64_t)v23, &qword_255E22718);
  if (qword_255E1DB60 != -1)
    swift_once();
  v52 = qword_255E296E0;
  v53 = v58;
  sub_22F87ABDC(v50, v58, &qword_255E22720);
  v54 = v60;
  *(_QWORD *)(v53 + *(int *)(v60 + 36)) = v52;
  swift_retain();
  sub_22F87AC20(v50, &qword_255E22720);
  v55 = v61;
  sub_22F87B2B4(v53, v61, &qword_255E22728);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v59 + 56))(v55, 0, 1, v54);
}

uint64_t sub_22F8C6A2C@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  id v50;
  char v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t KeyPath;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  char v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  char v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char v112;
  char v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char v124;
  char v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char v129;
  char v130;
  char v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char v135;
  char v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char v142;
  char v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char v153;
  char v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char v158;
  double v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char v163;
  char v164;
  uint64_t v165;
  uint64_t v166;
  char v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char v173;
  char v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char v178;
  char v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char v183;
  char v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  int *v204;
  uint64_t v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  uint64_t v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  char *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  char v242;
  _BYTE v243[24];
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  char v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  char v256;
  char v257;
  char v258;
  char v259;
  char v260;
  uint64_t v261;
  char v262;
  uint64_t v263;
  char v264;
  uint64_t v265;
  uint64_t v266;
  __int128 v267;
  __int128 v268;
  _OWORD v269[2];
  _BYTE v270[32];
  __int128 v271;
  _BYTE v272[32];
  __int128 v273;
  _BYTE v274[16];
  char v275[8];

  v237 = a2;
  v234 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22740);
  MEMORY[0x24BDAC7A8](v234);
  v208 = (uint64_t)&v206 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22748);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v206 = (uint64_t)&v206 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v207 = (char *)&v206 - v7;
  v230 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22750);
  MEMORY[0x24BDAC7A8](v230);
  v232 = (uint64_t)&v206 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v231 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22758);
  v9 = MEMORY[0x24BDAC7A8](v231);
  v209 = (uint64_t)&v206 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v229 = (uint64_t)&v206 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22760);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v236 = (uint64_t)&v206 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v233 = (char *)&v206 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22768);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v235 = (uint64_t)&v206 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v240 = (uint64_t)&v206 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F940);
  v221 = *(_QWORD *)(v20 - 8);
  v222 = v20;
  MEMORY[0x24BDAC7A8](v20);
  v218 = (char *)&v206 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v215 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F948);
  MEMORY[0x24BDAC7A8](v215);
  v220 = (char *)&v206 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v216 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F950);
  MEMORY[0x24BDAC7A8](v216);
  v223 = (uint64_t)&v206 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v217 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F958);
  MEMORY[0x24BDAC7A8](v217);
  v224 = (uint64_t)&v206 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v219 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F960);
  MEMORY[0x24BDAC7A8](v219);
  v225 = (uint64_t)&v206 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v227 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22770);
  MEMORY[0x24BDAC7A8](v227);
  v226 = (uint64_t)&v206 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22778);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v239 = (uint64_t)&v206 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v238 = (uint64_t)&v206 - v30;
  v31 = sub_22F98E878();
  v32 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v34 = (char *)&v206 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22780);
  MEMORY[0x24BDAC7A8](v35);
  v213 = (char *)&v206 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v214 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22788);
  MEMORY[0x24BDAC7A8](v214);
  v38 = (char *)&v206 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22790);
  v40 = MEMORY[0x24BDAC7A8](v39);
  v228 = (uint64_t)&v206 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = MEMORY[0x24BDAC7A8](v40);
  v212 = (char *)&v206 - v43;
  MEMORY[0x24BDAC7A8](v42);
  v241 = (uint64_t)&v206 - v44;
  v45 = a1[7];
  v271 = a1[6];
  *(_OWORD *)v272 = v45;
  v46 = a1[9];
  *(_OWORD *)&v272[16] = a1[8];
  v273 = v46;
  v47 = a1[3];
  v269[0] = a1[2];
  v269[1] = v47;
  v48 = a1[5];
  *(_OWORD *)v270 = a1[4];
  *(_OWORD *)&v270[16] = v48;
  v49 = a1[1];
  v267 = *a1;
  v268 = v49;
  v50 = *((id *)&v273 + 1);
  sub_22F98E860();
  (*(void (**)(char *, _QWORD, uint64_t))(v32 + 104))(v34, *MEMORY[0x24BDF3FD0], v31);
  v211 = sub_22F98E890();
  swift_release();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
  sub_22F98EA88();
  sub_22F98DCFC();
  v210 = v261;
  v51 = v262;
  v52 = v263;
  v53 = v264;
  v54 = v265;
  v55 = v266;
  v56 = sub_22F98E434();
  *(_OWORD *)v243 = *(__int128 *)((char *)a1 + 184);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3B0);
  sub_22F98E8FC();
  if ((v275[0] & 1) == 0)
  {
    sub_22F87B2B4((uint64_t)v269, (uint64_t)v274, &qword_255E21808);
    sub_22F87B2B4((uint64_t)v274, (uint64_t)v275, &qword_255E21808);
  }
  sub_22F98DBF4();
  v260 = 1;
  v259 = v51;
  v258 = v53;
  v257 = 0;
  *(_OWORD *)v243 = (unint64_t)v211;
  *(_WORD *)&v243[16] = 1;
  v244 = v210;
  LOBYTE(v245) = v51;
  v246 = v52;
  LOBYTE(v247) = v53;
  v248 = v54;
  v249 = v55;
  LOWORD(v250) = 256;
  v251 = v56;
  v252 = v57;
  v253 = v58;
  v254 = v59;
  v255 = v60;
  v256 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E22798);
  sub_22F8C81B8();
  v61 = (uint64_t)v213;
  sub_22F98E6BC();
  swift_release();
  if (qword_255E1DB60 != -1)
    swift_once();
  v62 = qword_255E296E0;
  sub_22F87ABDC(v61, (uint64_t)v38, &qword_255E22780);
  *(_QWORD *)&v38[*(int *)(v214 + 36)] = v62;
  swift_retain();
  sub_22F87AC20(v61, &qword_255E22780);
  sub_22F8C81DC();
  v63 = (uint64_t)v212;
  sub_22F98E704();
  sub_22F87AC20((uint64_t)v38, &qword_255E22788);
  sub_22F87B2B4(v63, v241, &qword_255E22790);
  v64 = *(_QWORD *)&v270[24];
  v65 = v271;
  v66 = *(_QWORD *)v272;
  v242 = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_22F98E8F0();
  v67 = v243[0];
  v68 = *(_QWORD *)&v243[8];
  v69 = sub_22F98E500();
  KeyPath = swift_getKeyPath();
  *(_QWORD *)v243 = v64;
  *(_OWORD *)&v243[8] = v65;
  v244 = v66;
  LOBYTE(v245) = v67;
  v246 = v68;
  v247 = KeyPath;
  v248 = v69;
  sub_22F98E4D0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F9E0);
  sub_22F88A744();
  v71 = v218;
  sub_22F98E614();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v72 = sub_22F98E83C();
  v73 = swift_getKeyPath();
  v75 = (uint64_t)v220;
  v74 = v221;
  v76 = v222;
  (*(void (**)(char *, char *, uint64_t))(v221 + 16))(v220, v71, v222);
  v77 = (uint64_t *)(v75 + *(int *)(v215 + 36));
  *v77 = v73;
  v77[1] = v72;
  (*(void (**)(char *, uint64_t))(v74 + 8))(v71, v76);
  v78 = swift_getKeyPath();
  v79 = v223;
  sub_22F87ABDC(v75, v223, &qword_255E1F948);
  v80 = (uint64_t *)(v79 + *(int *)(v216 + 36));
  *v80 = v78;
  v80[1] = 0x3FE0000000000000;
  sub_22F87AC20(v75, &qword_255E1F948);
  v81 = swift_getKeyPath();
  v82 = v224;
  sub_22F87ABDC(v79, v224, &qword_255E1F950);
  v83 = v82 + *(int *)(v217 + 36);
  *(_QWORD *)v83 = v81;
  *(_BYTE *)(v83 + 8) = 1;
  sub_22F87AC20(v79, &qword_255E1F950);
  v84 = swift_getKeyPath();
  v85 = v225;
  sub_22F87ABDC(v82, v225, &qword_255E1F958);
  v86 = v85 + *(int *)(v219 + 36);
  *(_QWORD *)v86 = v84;
  *(_QWORD *)(v86 + 8) = 3;
  *(_BYTE *)(v86 + 16) = 0;
  sub_22F87AC20(v82, &qword_255E1F958);
  v87 = qword_255E296E0;
  v88 = v226;
  sub_22F87ABDC(v85, v226, &qword_255E1F960);
  *(_QWORD *)(v88 + *(int *)(v227 + 36)) = v87;
  swift_retain();
  sub_22F87AC20(v85, &qword_255E1F960);
  sub_22F8C82A8();
  v89 = v239;
  sub_22F98E704();
  sub_22F87AC20(v88, &qword_255E22770);
  sub_22F87B2B4(v89, v238, &qword_255E22778);
  if (*(_QWORD *)&v272[16])
  {
    *(_OWORD *)v243 = *(_OWORD *)&v272[8];
    sub_22F863BF8();
    swift_bridgeObjectRetain();
    v90 = sub_22F98E5CC();
    v92 = v91;
    v94 = v93 & 1;
    sub_22F98E500();
    v95 = sub_22F98E5A8();
    v97 = v96;
    v99 = v98;
    swift_release();
    v100 = v99 & 1;
    sub_22F87E294(v90, v92, v94);
    swift_bridgeObjectRelease();
    sub_22F98E4D0();
    v101 = sub_22F98E578();
    v103 = v102;
    v105 = v104;
    sub_22F87E294(v95, v97, v100);
    swift_bridgeObjectRelease();
    if (qword_255E1DBC0 != -1)
      swift_once();
    v106 = v105 & 1;
    v107 = sub_22F98E590();
    v226 = v107;
    v227 = v108;
    v110 = v109;
    v111 = v108;
    v113 = v112 & 1;
    sub_22F87E294(v101, v103, v106);
    swift_bridgeObjectRelease();
    v114 = swift_getKeyPath();
    v115 = swift_getKeyPath();
    v116 = swift_getKeyPath();
    *(_QWORD *)v243 = v107;
    *(_QWORD *)&v243[8] = v110;
    v243[16] = v113;
    v244 = v111;
    v245 = v114;
    v246 = 0x3FECCCCCCCCCCCCDLL;
    v247 = v115;
    LOBYTE(v248) = 1;
    v249 = v116;
    v250 = 2;
    v251 = 0;
    v252 = qword_255E296E0;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E227F8);
    sub_22F894760(&qword_255E22800, &qword_255E227F8, (uint64_t (*)(void))sub_22F8C83B0, (uint64_t (*)(void))sub_22F8A0C0C);
    v117 = v240;
    sub_22F98E704();
    sub_22F87E294(v226, v110, v113);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E227C0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v118 - 8) + 56))(v117, 0, 1, v118);
  }
  else
  {
    v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E227C0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v119 - 8) + 56))(v240, 1, 1, v119);
  }
  v120 = HIBYTE(*(_QWORD *)&v270[16]) & 0xFLL;
  if ((*(_QWORD *)&v270[16] & 0x2000000000000000) == 0)
    v120 = *(_QWORD *)&v270[8] & 0xFFFFFFFFFFFFLL;
  if (v120)
  {
    *(_OWORD *)v243 = *(_OWORD *)&v270[8];
    sub_22F863BF8();
    swift_bridgeObjectRetain();
    v121 = sub_22F98E5CC();
    v123 = v122;
    v125 = v124 & 1;
    sub_22F98E83C();
    v126 = sub_22F98E590();
    v128 = v127;
    v130 = v129;
    swift_release();
    v131 = v130 & 1;
    sub_22F87E294(v121, v123, v125);
    swift_bridgeObjectRelease();
    sub_22F98E470();
    v132 = sub_22F98E5A8();
    v134 = v133;
    v136 = v135;
    swift_release();
    LOBYTE(v121) = v136 & 1;
    sub_22F87E294(v126, v128, v131);
    swift_bridgeObjectRelease();
    sub_22F98E4D0();
    v137 = sub_22F98E578();
    v139 = v138;
    v141 = v140;
    v227 = v140;
    v143 = v142 & 1;
    sub_22F87E294(v132, v134, v121);
    swift_bridgeObjectRelease();
    v144 = swift_getKeyPath();
    v145 = swift_getKeyPath();
    *(_QWORD *)v243 = v137;
    *(_QWORD *)&v243[8] = v139;
    v243[16] = v143;
    v244 = v141;
    v245 = v144;
    v246 = 1;
    LOBYTE(v247) = 0;
    v248 = v145;
    v249 = 0x3FE0000000000000;
    v250 = qword_255E296E0;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E227C8);
    sub_22F8C832C();
    v146 = v229;
    sub_22F98E704();
    sub_22F87E294(v137, v139, v143);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_22F87ABDC(v146, v232, &qword_255E22758);
    swift_storeEnumTagMultiPayload();
    sub_22F894760(&qword_255E227D8, &qword_255E22758, (uint64_t (*)(void))sub_22F8C832C, (uint64_t (*)(void))sub_22F8BB574);
    sub_22F87AA84(&qword_255E227E0, &qword_255E22740, MEMORY[0x24BDF5428]);
    v147 = (uint64_t)v233;
    sub_22F98E1E8();
    v148 = v146;
  }
  else
  {
    *(_OWORD *)v243 = v268;
    v149 = sub_22F863BF8();
    swift_bridgeObjectRetain();
    v227 = v149;
    v150 = sub_22F98E5CC();
    v152 = v151;
    v154 = v153 & 1;
    sub_22F98E83C();
    v155 = sub_22F98E590();
    v157 = v156;
    LOBYTE(v149) = v158;
    swift_release();
    sub_22F87E294(v150, v152, v154);
    swift_bridgeObjectRelease();
    v159 = *MEMORY[0x24BEBB610];
    sub_22F8B9ECC(*(double *)&qword_255E270F0 * 72.0, *MEMORY[0x24BEBB610]);
    sub_22F98E53C();
    v160 = sub_22F98E5A8();
    v162 = v161;
    v164 = v163;
    v166 = v165;
    swift_release();
    v167 = v164 & 1;
    sub_22F87E294(v155, v157, v149 & 1);
    swift_bridgeObjectRelease();
    v168 = swift_getKeyPath();
    v169 = swift_getKeyPath();
    *(_QWORD *)v243 = v160;
    *(_QWORD *)&v243[8] = v162;
    v243[16] = v167;
    v244 = v166;
    v245 = v168;
    v246 = 1;
    LOBYTE(v247) = 0;
    v248 = v169;
    v249 = 0x3FD3333333333333;
    v250 = qword_255E296E0;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E227C8);
    sub_22F8C832C();
    sub_22F98E704();
    sub_22F87E294(v160, v162, v167);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    if (*((_QWORD *)&v269[0] + 1))
    {
      *(_OWORD *)v243 = v269[0];
      swift_bridgeObjectRetain();
      v170 = sub_22F98E5CC();
      v172 = v171;
      v174 = v173 & 1;
      sub_22F98E83C();
      v175 = sub_22F98E590();
      v177 = v176;
      v179 = v178;
      swift_release();
      sub_22F87E294(v170, v172, v174);
      swift_bridgeObjectRelease();
      sub_22F8B9ECC(*(double *)&qword_255E270F0 * 40.0, v159);
      sub_22F98E53C();
      v180 = sub_22F98E5A8();
      v182 = v181;
      v184 = v183;
      v186 = v185;
      swift_release();
      v184 &= 1u;
      sub_22F87E294(v175, v177, v179 & 1);
      swift_bridgeObjectRelease();
      v187 = swift_getKeyPath();
      v188 = swift_getKeyPath();
      *(_QWORD *)v243 = v180;
      *(_QWORD *)&v243[8] = v182;
      v243[16] = v184;
      v244 = v186;
      v245 = v187;
      v246 = 1;
      LOBYTE(v247) = 0;
      v248 = v188;
      v249 = 0x3FD3333333333333;
      __swift_instantiateConcreteTypeFromMangledName(&qword_255E1FA78);
      sub_22F88AC94();
      v189 = v207;
      sub_22F98E704();
      sub_22F87E294(v180, v182, v184);
      swift_release();
      v190 = (uint64_t)v189;
      swift_release();
      swift_bridgeObjectRelease();
      v191 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F938);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v191 - 8) + 56))(v189, 0, 1, v191);
    }
    else
    {
      v192 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F938);
      v190 = (uint64_t)v207;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v192 - 8) + 56))(v207, 1, 1, v192);
    }
    v148 = v209;
    v193 = v229;
    sub_22F87ABDC(v209, v229, &qword_255E22758);
    v194 = v206;
    sub_22F87ABDC(v190, v206, &qword_255E22748);
    v195 = v208;
    sub_22F87ABDC(v193, v208, &qword_255E22758);
    v196 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E227F0);
    sub_22F87ABDC(v194, v195 + *(int *)(v196 + 48), &qword_255E22748);
    sub_22F87AC20(v194, &qword_255E22748);
    sub_22F87AC20(v193, &qword_255E22758);
    sub_22F87ABDC(v195, v232, &qword_255E22740);
    swift_storeEnumTagMultiPayload();
    sub_22F894760(&qword_255E227D8, &qword_255E22758, (uint64_t (*)(void))sub_22F8C832C, (uint64_t (*)(void))sub_22F8BB574);
    sub_22F87AA84(&qword_255E227E0, &qword_255E22740, MEMORY[0x24BDF5428]);
    v147 = (uint64_t)v233;
    sub_22F98E1E8();
    sub_22F87AC20(v195, &qword_255E22740);
    sub_22F87AC20(v190, &qword_255E22748);
  }
  sub_22F87AC20(v148, &qword_255E22758);
  v197 = v228;
  sub_22F87ABDC(v241, v228, &qword_255E22790);
  v199 = v238;
  v198 = v239;
  sub_22F87ABDC(v238, v239, &qword_255E22778);
  v200 = v240;
  v201 = v235;
  sub_22F87ABDC(v240, v235, &qword_255E22768);
  v202 = v236;
  sub_22F87ABDC(v147, v236, &qword_255E22760);
  v203 = v237;
  sub_22F87ABDC(v197, v237, &qword_255E22790);
  v204 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255E227E8);
  sub_22F87ABDC(v198, v203 + v204[12], &qword_255E22778);
  sub_22F87ABDC(v201, v203 + v204[16], &qword_255E22768);
  sub_22F87ABDC(v202, v203 + v204[20], &qword_255E22760);
  sub_22F87AC20(v147, &qword_255E22760);
  sub_22F87AC20(v200, &qword_255E22768);
  sub_22F87AC20(v199, &qword_255E22778);
  sub_22F87AC20(v241, &qword_255E22790);
  sub_22F87AC20(v202, &qword_255E22760);
  sub_22F87AC20(v201, &qword_255E22768);
  sub_22F87AC20(v198, &qword_255E22778);
  return sub_22F87AC20(v197, &qword_255E22790);
}

uint64_t sub_22F8C806C@<X0>(uint64_t a1@<X8>)
{
  _OWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _OWORD v17[10];
  __int128 v18;
  __int128 v19;
  __int128 v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E226D8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v1[11];
  v18 = v1[10];
  v19 = v6;
  v20 = v1[12];
  v7 = v1[7];
  v17[6] = v1[6];
  v17[7] = v7;
  v8 = v1[9];
  v17[8] = v1[8];
  v17[9] = v8;
  v9 = v1[3];
  v17[2] = v1[2];
  v17[3] = v9;
  v10 = v1[5];
  v17[4] = v1[4];
  v17[5] = v10;
  v11 = v1[1];
  v17[0] = *v1;
  v17[1] = v11;
  *(_QWORD *)v5 = sub_22F98E128();
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 1;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E226E0);
  sub_22F8C63F0((uint64_t)v17, (uint64_t)&v5[*(int *)(v12 + 44)]);
  if (qword_255E1DC58 != -1)
    swift_once();
  v13 = qword_255E298E0;
  v14 = v18;
  sub_22F87ABDC((uint64_t)v5, a1, &qword_255E226D8);
  v15 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255E226E8) + 36);
  *(_QWORD *)v15 = v13;
  *(_BYTE *)(v15 + 8) = v14;
  swift_retain();
  return sub_22F87AC20((uint64_t)v5, &qword_255E226D8);
}

uint64_t sub_22F8C81B8()
{
  return sub_22F87E2D8(&qword_255E227A0, &qword_255E22798, (uint64_t (*)(void))sub_22F88A698, MEMORY[0x24BDECC60]);
}

unint64_t sub_22F8C81DC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E227A8;
  if (!qword_255E227A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E22788);
    v2[0] = sub_22F894760(&qword_255E227B0, &qword_255E22780, sub_22F8C81B8, (uint64_t (*)(void))sub_22F8BB574);
    v2[1] = sub_22F87AA84(&qword_255E1F118, &qword_255E1F120, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E227A8);
  }
  return result;
}

unint64_t sub_22F8C82A8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E227B8;
  if (!qword_255E227B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E22770);
    v2[0] = sub_22F88A82C();
    v2[1] = sub_22F87AA84(&qword_255E1F118, &qword_255E1F120, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E227B8);
  }
  return result;
}

unint64_t sub_22F8C832C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E227D0;
  if (!qword_255E227D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E227C8);
    v2[0] = sub_22F88AC94();
    v2[1] = sub_22F87AA84(&qword_255E1F118, &qword_255E1F120, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E227D0);
  }
  return result;
}

unint64_t sub_22F8C83B0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E22808;
  if (!qword_255E22808)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E22810);
    v2[0] = sub_22F88AAE8();
    v2[1] = sub_22F87AA84(&qword_255E1F118, &qword_255E1F120, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E22808);
  }
  return result;
}

unint64_t sub_22F8C8438()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E22818;
  if (!qword_255E22818)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E226E8);
    v2[0] = sub_22F87AA84(&qword_255E22820, &qword_255E226D8, MEMORY[0x24BDF4700]);
    v2[1] = sub_22F87AA84(&qword_255E1F3F8, &qword_255E1F400, MEMORY[0x24BDEEC10]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E22818);
  }
  return result;
}

void sub_22F8C84D4()
{
  void *v0;
  void *v1;
  id v2;

  if (qword_255E1DBB0 != -1)
    swift_once();
  v0 = (void *)qword_255E29748;
  v1 = (void *)objc_opt_self();
  v2 = v0;

  strcpy((char *)&qword_255E22828, "readerForcePIN");
  unk_255E22837 = -18;
  byte_255E22838 = 0;
  qword_255E22840 = (uint64_t)v2;
}

void sub_22F8C8584()
{
  void *v0;
  void *v1;
  id v2;

  if (qword_255E1DBB0 != -1)
    swift_once();
  v0 = (void *)qword_255E29748;
  v1 = (void *)objc_opt_self();
  v2 = v0;

  qword_255E22848 = 0x4D49556C61636F6CLL;
  unk_255E22850 = 0xEB0000000065646FLL;
  byte_255E22858 = 0;
  qword_255E22860 = (uint64_t)v2;
}

void sub_22F8C8630()
{
  void *v0;
  void *v1;
  id v2;

  if (qword_255E1DBB0 != -1)
    swift_once();
  v0 = (void *)qword_255E29748;
  v1 = (void *)objc_opt_self();
  v2 = v0;

  qword_255E22868 = 0xD000000000000012;
  unk_255E22870 = 0x800000022F99FD60;
  byte_255E22878 = 0;
  qword_255E22880 = (uint64_t)v2;
}

void sub_22F8C86D8()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v1 = (void *)sub_22F98ED94();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
  {
    qword_255E29748 = (uint64_t)v2;
  }
  else
  {
    sub_22F98F394();
    __break(1u);
  }
}

uint64_t sub_22F8C87A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (**v24)();
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t OpaqueTypeConformance2;
  unint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t result;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  __int128 v58;
  uint64_t v59;
  unint64_t v60;
  __int128 v61;

  v53 = a1;
  v2 = type metadata accessor for IdentityScannerView();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22938);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (uint64_t *)((char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22940);
  MEMORY[0x24BDAC7A8](v45);
  v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22948);
  MEMORY[0x24BDAC7A8](v54);
  v46 = (uint64_t)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22950);
  v47 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v55 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22958);
  v51 = *(_QWORD *)(v13 - 8);
  v52 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v57 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22960);
  v49 = *(_QWORD *)(v15 - 8);
  v50 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v48 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v8 = sub_22F98EA70();
  v8[1] = v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22968);
  sub_22F8C8E20(v1, (uint64_t)v8 + *(int *)(v18 + 44));
  sub_22F889F68(v1, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for IdentityScannerView);
  v19 = *(unsigned __int8 *)(v3 + 80);
  v20 = (v19 + 16) & ~v19;
  v21 = v20 + v4;
  v22 = v19 | 7;
  v23 = swift_allocObject();
  sub_22F8CB660((uint64_t)v5, v23 + v20);
  sub_22F87ABDC((uint64_t)v8, (uint64_t)v10, &qword_255E22938);
  v24 = (uint64_t (**)())&v10[*(int *)(v45 + 36)];
  *v24 = sub_22F8CB6A4;
  v24[1] = (uint64_t (*)())v23;
  v24[2] = 0;
  v24[3] = 0;
  sub_22F87AC20((uint64_t)v8, &qword_255E22938);
  sub_22F889F68(v1, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for IdentityScannerView);
  v25 = swift_allocObject();
  sub_22F8CB660((uint64_t)v5, v25 + v20);
  v26 = v46;
  sub_22F87ABDC((uint64_t)v10, v46, &qword_255E22940);
  v27 = (_QWORD *)(v26 + *(int *)(v54 + 36));
  *v27 = 0;
  v27[1] = 0;
  v27[2] = sub_22F8CB6B4;
  v27[3] = v25;
  sub_22F87AC20((uint64_t)v10, &qword_255E22940);
  v28 = *(_QWORD *)(v1 + 48);
  v29 = (_QWORD *)v1;
  v58 = *(_OWORD *)(v1 + 32);
  v59 = v28;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F428);
  sub_22F98E8FC();
  v58 = v61;
  sub_22F889F68(v1, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for IdentityScannerView);
  v30 = swift_allocObject();
  sub_22F8CB660((uint64_t)v5, v30 + v20);
  v31 = sub_22F87E2D8(&qword_255E22970, &qword_255E22948, (uint64_t (*)(void))sub_22F8CB74C, MEMORY[0x24BDF0910]);
  sub_22F98E794();
  swift_release();
  swift_bridgeObjectRelease();
  sub_22F87AC20(v26, &qword_255E22948);
  v32 = *(_QWORD *)(v1 + 64);
  *(_QWORD *)&v58 = *(_QWORD *)(v1 + 56);
  *((_QWORD *)&v58 + 1) = v32;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E22988);
  sub_22F98E8FC();
  sub_22F889F68(v1, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for IdentityScannerView);
  v45 = v21;
  v46 = v22;
  v33 = v20;
  v34 = swift_allocObject();
  sub_22F8CB660((uint64_t)v5, v34 + v20);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22888);
  *(_QWORD *)&v58 = v54;
  *((_QWORD *)&v58 + 1) = MEMORY[0x24BEE0D00];
  v59 = v31;
  v60 = MEMORY[0x24BEE0D28];
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v37 = sub_22F8CB820();
  v38 = v56;
  v39 = v55;
  sub_22F98E794();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v39, v38);
  if (*v29)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_22F98DBA0();
    swift_release();
    swift_release();
    swift_release();
    LOBYTE(v61) = v58;
    sub_22F889F68((uint64_t)v29, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for IdentityScannerView);
    v40 = swift_allocObject();
    sub_22F8CB660((uint64_t)v5, v40 + v33);
    *(_QWORD *)&v58 = v56;
    *((_QWORD *)&v58 + 1) = v35;
    v59 = OpaqueTypeConformance2;
    v60 = v37;
    swift_getOpaqueTypeConformance2();
    sub_22F88398C();
    v41 = v48;
    v42 = v52;
    v43 = v57;
    sub_22F98E794();
    swift_release();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v43, v42);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v49 + 32))(v53, v41, v50);
  }
  else
  {
    type metadata accessor for IdentityViewModel();
    sub_22F862548(&qword_255E21B18, (uint64_t (*)(uint64_t))type metadata accessor for IdentityViewModel, (uint64_t)&unk_22F996C1C);
    result = sub_22F98DF54();
    __break(1u);
  }
  return result;
}

uint64_t sub_22F8C8E20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  __int128 v61;
  uint64_t v62;
  int *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  char v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  char v86;
  char *v87;
  char *v88;
  uint64_t KeyPath;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void (*v115)(char *, uint64_t, uint64_t);
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _OWORD *v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  uint64_t (*v130)(void);
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t result;
  _QWORD v149[2];
  uint64_t v150;
  __int128 v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  _BYTE v193[32];
  _BYTE v194[32];
  __int128 v195;
  __int128 v196;
  __int128 v197;
  __int128 v198;
  _BYTE v199[25];
  __int128 v200;
  uint64_t v201;

  v185 = a2;
  v168 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E229A8);
  MEMORY[0x24BDAC7A8](v168);
  v172 = (char *)v149 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v190 = sub_22F98DF00();
  MEMORY[0x24BDAC7A8](v190);
  v182 = (char *)v149 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v171 = sub_22F98EA4C();
  v170 = *(_QWORD *)(v171 - 8);
  MEMORY[0x24BDAC7A8](v171);
  v169 = (char *)v149 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v167 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E229B0);
  MEMORY[0x24BDAC7A8](v167);
  v173 = (char *)v149 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v177 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E229B8);
  MEMORY[0x24BDAC7A8](v177);
  v176 = (char *)v149 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E229C0);
  MEMORY[0x24BDAC7A8](v8);
  v181 = (char *)v149 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v179 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E229C8);
  MEMORY[0x24BDAC7A8](v179);
  v180 = (uint64_t)v149 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v178 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E229D0);
  v11 = MEMORY[0x24BDAC7A8](v178);
  v184 = (uint64_t)v149 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v174 = (uint64_t)v149 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v183 = (uint64_t)v149 - v15;
  v161 = sub_22F98DDC8();
  v159 = *(_QWORD *)(v161 - 8);
  MEMORY[0x24BDAC7A8](v161);
  v186 = (char *)v149 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v165 = type metadata accessor for CornersHighlightView();
  MEMORY[0x24BDAC7A8](v165);
  v156 = (char *)v149 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v164 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E229D8);
  MEMORY[0x24BDAC7A8](v164);
  v166 = (uint64_t)v149 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E229E0);
  v19 = MEMORY[0x24BDAC7A8](v163);
  v175 = (uint64_t)v149 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v162 = (uint64_t)v149 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v189 = (uint64_t)v149 - v23;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E229E8);
  MEMORY[0x24BDAC7A8](v24);
  v157 = (char *)v149 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E229F0);
  v26 = MEMORY[0x24BDAC7A8](v158);
  v188 = (uint64_t)v149 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v187 = (uint64_t)v149 - v28;
  v29 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)&v200 = *(_QWORD *)(a1 + 56);
  *((_QWORD *)&v200 + 1) = v29;
  v160 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22988);
  sub_22F98E914();
  v30 = *(_OWORD *)v193;
  v31 = *(_QWORD *)&v193[16];
  v32 = *(_QWORD *)(a1 + 88);
  v200 = *(_OWORD *)(a1 + 72);
  v201 = v32;
  v155 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E229F8);
  sub_22F98E914();
  v33 = *(_QWORD *)v193;
  v34 = *(_QWORD *)&v193[8];
  v154 = *(_QWORD *)v193;
  v35 = *(_OWORD *)&v193[16];
  v36 = *(_QWORD *)(a1 + 48);
  v200 = *(_OWORD *)(a1 + 32);
  v201 = v36;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F428);
  sub_22F98E914();
  v37 = *(_QWORD *)v193;
  v151 = *(_OWORD *)&v193[8];
  v153 = *(_QWORD *)v193;
  v150 = *(_QWORD *)&v193[24];
  v191 = (char *)a1;
  v38 = type metadata accessor for IdentityViewModel();
  v39 = sub_22F862548(&qword_255E21B18, (uint64_t (*)(uint64_t))type metadata accessor for IdentityViewModel, (uint64_t)&unk_22F996C1C);
  v149[1] = v38;
  sub_22F98DF48();
  swift_getKeyPath();
  v149[0] = v39;
  sub_22F98DF60();
  swift_release();
  swift_release();
  v40 = *(_QWORD *)v193;
  v41 = *(_QWORD *)&v193[8];
  v152 = *(_QWORD *)v193;
  v42 = v193[16];
  v43 = sub_22F98E41C();
  *(_OWORD *)v193 = v30;
  *(_QWORD *)&v193[16] = v31;
  *(_QWORD *)&v193[24] = v33;
  *(_QWORD *)v194 = v34;
  *(_OWORD *)&v194[8] = v35;
  *(_QWORD *)&v194[24] = v37;
  v195 = v151;
  *(_QWORD *)&v196 = v150;
  *((_QWORD *)&v196 + 1) = v40;
  *(_QWORD *)&v197 = v41;
  BYTE8(v197) = v42;
  BYTE9(v197) = v43;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E22A00);
  sub_22F87E2D8(&qword_255E22A08, &qword_255E22A00, (uint64_t (*)(void))sub_22F8B5810, MEMORY[0x24BDF0420]);
  v44 = (uint64_t)v157;
  v45 = v159;
  sub_22F98E6BC();
  swift_release();
  swift_bridgeObjectRelease();
  v46 = v191;
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v47 = v188;
  sub_22F87ABDC(v44, v188, &qword_255E229E8);
  *(_QWORD *)(v47 + *(int *)(v158 + 36)) = 0;
  v48 = v44;
  v49 = v161;
  sub_22F87AC20(v48, &qword_255E229E8);
  sub_22F87B2B4(v47, v187, &qword_255E229F0);
  v50 = type metadata accessor for IdentityScannerView();
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v186, &v46[*(int *)(v50 + 44)], v49);
  v51 = *((_QWORD *)v46 + 9);
  v52 = *((_QWORD *)v46 + 10);
  v53 = *((_QWORD *)v46 + 11);
  *(_QWORD *)v193 = v51;
  *(_QWORD *)&v193[8] = v52;
  *(_QWORD *)&v193[16] = v53;
  sub_22F98E8FC();
  if (*(double *)&v200 == 0.0 && *((double *)&v200 + 1) == 0.0)
  {
    v54 = *((_QWORD *)v46 + 14);
    v55 = *((_QWORD *)v46 + 15);
  }
  else
  {
    *(_QWORD *)v193 = v51;
    *(_QWORD *)&v193[8] = v52;
    *(_QWORD *)&v193[16] = v53;
    sub_22F98E8FC();
    v55 = *((_QWORD *)&v200 + 1);
    v54 = v200;
  }
  v56 = *((_QWORD *)v46 + 8);
  *(_QWORD *)v193 = *((_QWORD *)v46 + 7);
  *(_QWORD *)&v193[8] = v56;
  sub_22F98E8FC();
  if (!*(_QWORD *)v46)
    goto LABEL_16;
  v57 = v200;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  swift_release();
  v58 = v193[0] == 2 ? sub_22F98E824() : sub_22F98E7E8();
  v59 = v58;
  if (!*(_QWORD *)v46)
    goto LABEL_16;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  swift_release();
  if (!*(_QWORD *)v46)
    goto LABEL_16;
  v60 = v193[0];
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  swift_release();
  v61 = *(_OWORD *)v193;
  sub_22F87BBC4();
  v62 = (uint64_t)v156;
  sub_22F98E2B4();
  v63 = (int *)v165;
  v64 = v62 + *(int *)(v165 + 20);
  LOBYTE(v200) = 0;
  sub_22F98E8F0();
  v65 = *(_QWORD *)&v193[8];
  *(_BYTE *)v64 = v193[0];
  *(_QWORD *)(v64 + 8) = v65;
  v66 = v62 + v63[6];
  LOBYTE(v200) = 1;
  sub_22F98E8F0();
  v67 = *(_QWORD *)&v193[8];
  *(_BYTE *)v66 = v193[0];
  *(_QWORD *)(v66 + 8) = v67;
  (*(void (**)(uint64_t, char *, uint64_t))(v45 + 32))(v62 + v63[7], v186, v49);
  v68 = (_QWORD *)(v62 + v63[8]);
  *v68 = v54;
  v68[1] = v55;
  *(_QWORD *)(v62 + v63[9]) = v57;
  *(_QWORD *)(v62 + v63[10]) = v59;
  *(_BYTE *)(v62 + v63[11]) = v60;
  *(_OWORD *)(v62 + v63[12]) = v61;
  *(_QWORD *)(v62 + v63[13]) = 0x4020000000000000;
  *(_QWORD *)(v62 + v63[14]) = 0x3FF2666666666666;
  v69 = sub_22F98E41C();
  v70 = v166;
  sub_22F889F68(v62, v166, (uint64_t (*)(_QWORD))type metadata accessor for CornersHighlightView);
  *(_BYTE *)(v70 + *(int *)(v164 + 36)) = v69;
  sub_22F8AB158(v62, (uint64_t (*)(_QWORD))type metadata accessor for CornersHighlightView);
  v71 = v162;
  sub_22F87ABDC(v70, v162, &qword_255E229D8);
  *(_QWORD *)(v71 + *(int *)(v163 + 36)) = 0x3FF0000000000000;
  sub_22F87AC20(v70, &qword_255E229D8);
  sub_22F87B2B4(v71, v189, &qword_255E229E0);
  v72 = sub_22F8CA0C4();
  v74 = v73;
  LOBYTE(v63) = v75 & 1;
  sub_22F98E518();
  v76 = sub_22F98E5A8();
  v78 = v77;
  v80 = v79;
  swift_release();
  v81 = v80 & 1;
  sub_22F87E294(v72, v74, (char)v63);
  swift_bridgeObjectRelease();
  sub_22F98E4D0();
  v82 = sub_22F98E578();
  v84 = v83;
  v86 = v85;
  v88 = v87;
  sub_22F87E294(v76, v78, v81);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  if (*(_QWORD *)v46)
  {
    v90 = KeyPath;
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_22F98DBA0();
    swift_release();
    swift_release();
    swift_release();
    if (v193[0] == 2)
      v91 = sub_22F98E824();
    else
      v91 = sub_22F98E7E8();
    v92 = v91;
    v161 = v91;
    v93 = v86 & 1;
    LODWORD(v165) = v86 & 1;
    v94 = swift_getKeyPath();
    v166 = v94;
    v95 = sub_22F98E410();
    sub_22F98DBF4();
    v97 = v96;
    v99 = v98;
    v101 = v100;
    v103 = v102;
    v104 = sub_22F98E458();
    sub_22F98DBF4();
    *(_QWORD *)v193 = v82;
    *(_QWORD *)&v193[8] = v84;
    v193[16] = v93;
    v186 = v88;
    *(_QWORD *)&v193[24] = v88;
    *(_QWORD *)v194 = v90;
    *(_QWORD *)&v194[8] = 0x3FE3333333333333;
    *(_QWORD *)&v194[16] = v94;
    *(_QWORD *)&v194[24] = v92;
    LOBYTE(v195) = v95;
    *((_QWORD *)&v195 + 1) = v97;
    *(_QWORD *)&v196 = v99;
    *((_QWORD *)&v196 + 1) = v101;
    *(_QWORD *)&v197 = v103;
    BYTE8(v197) = 0;
    LOBYTE(v198) = v104;
    *((_QWORD *)&v198 + 1) = v105;
    *(_QWORD *)v199 = v106;
    *(_QWORD *)&v199[8] = v107;
    *(_QWORD *)&v199[16] = v108;
    v199[24] = 0;
    v109 = v169;
    sub_22F98EA34();
    v163 = v82;
    v110 = v182;
    v111 = &v182[*(int *)(v190 + 20)];
    LODWORD(v164) = *MEMORY[0x24BDEEB68];
    v112 = v164;
    v113 = sub_22F98E0EC();
    v114 = *(_QWORD *)(v113 - 8);
    v162 = v84;
    v115 = *(void (**)(char *, uint64_t, uint64_t))(v114 + 104);
    v115(v111, v112, v113);
    __asm { FMOV            V0.2D, #14.0 }
    *(_OWORD *)v110 = _Q0;
    v121 = v170;
    v122 = (uint64_t)v172;
    v123 = v171;
    (*(void (**)(char *, char *, uint64_t))(v170 + 16))(v172, v109, v171);
    v124 = v168;
    sub_22F889F68((uint64_t)v110, v122 + *(int *)(v168 + 52), (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
    *(_WORD *)(v122 + *(int *)(v124 + 56)) = 256;
    v125 = v173;
    sub_22F87ABDC(v122, (uint64_t)&v173[*(int *)(v167 + 36)], &qword_255E229A8);
    v126 = v198;
    v125[6] = v197;
    v125[7] = v126;
    v125[8] = *(_OWORD *)v199;
    *(_OWORD *)((char *)v125 + 137) = *(_OWORD *)&v199[9];
    v127 = *(_OWORD *)&v194[16];
    v125[2] = *(_OWORD *)v194;
    v125[3] = v127;
    v128 = v196;
    v125[4] = v195;
    v125[5] = v128;
    v129 = *(_OWORD *)&v193[16];
    *v125 = *(_OWORD *)v193;
    v125[1] = v129;
    sub_22F8CBA7C((uint64_t)v193);
    sub_22F87AC20(v122, &qword_255E229A8);
    v130 = MEMORY[0x24BDED998];
    sub_22F8AB158((uint64_t)v110, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
    (*(void (**)(char *, uint64_t))(v121 + 8))(v109, v123);
    sub_22F87E294(v163, v162, v165);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    v115(&v110[*(int *)(v190 + 20)], v164, v113);
    __asm { FMOV            V0.2D, #15.0 }
    *(_OWORD *)v110 = _Q0;
    v132 = (uint64_t)v176;
    v133 = (uint64_t)&v176[*(int *)(v177 + 36)];
    sub_22F889F68((uint64_t)v110, v133, (uint64_t (*)(_QWORD))v130);
    *(_WORD *)(v133 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255E1F8D0) + 36)) = 256;
    sub_22F87ABDC((uint64_t)v125, v132, &qword_255E229B0);
    sub_22F8AB158((uint64_t)v110, (uint64_t (*)(_QWORD))v130);
    sub_22F87AC20((uint64_t)v125, &qword_255E229B0);
    sub_22F8CBAE4();
    v134 = (uint64_t)v181;
    sub_22F98E704();
    sub_22F87AC20(v132, &qword_255E229B8);
    v135 = *((_QWORD *)v191 + 13);
    *(_QWORD *)&v200 = *((_QWORD *)v191 + 12);
    *((_QWORD *)&v200 + 1) = v135;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E229A0);
    sub_22F98E8FC();
    v136 = v192;
    v137 = v180;
    sub_22F87ABDC(v134, v180, &qword_255E229C0);
    v138 = (_QWORD *)(v137 + *(int *)(v179 + 36));
    *v138 = 0;
    v138[1] = v136;
    sub_22F87AC20(v134, &qword_255E229C0);
    v139 = v174;
    sub_22F87ABDC(v137, v174, &qword_255E229C8);
    *(_QWORD *)(v139 + *(int *)(v178 + 36)) = 0x4000000000000000;
    sub_22F87AC20(v137, &qword_255E229C8);
    v140 = v183;
    sub_22F87B2B4(v139, v183, &qword_255E229D0);
    v141 = v187;
    v142 = v188;
    sub_22F87ABDC(v187, v188, &qword_255E229F0);
    v143 = v189;
    v144 = v175;
    sub_22F87ABDC(v189, v175, &qword_255E229E0);
    v145 = v184;
    sub_22F87ABDC(v140, v184, &qword_255E229D0);
    v146 = v185;
    sub_22F87ABDC(v142, v185, &qword_255E229F0);
    v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22A58);
    sub_22F87ABDC(v144, v146 + *(int *)(v147 + 48), &qword_255E229E0);
    sub_22F87ABDC(v145, v146 + *(int *)(v147 + 64), &qword_255E229D0);
    sub_22F87AC20(v140, &qword_255E229D0);
    sub_22F87AC20(v143, &qword_255E229E0);
    sub_22F87AC20(v141, &qword_255E229F0);
    sub_22F87AC20(v145, &qword_255E229D0);
    sub_22F87AC20(v144, &qword_255E229E0);
    return sub_22F87AC20(v142, &qword_255E229F0);
  }
  else
  {
LABEL_16:
    result = sub_22F98DF54();
    __break(1u);
  }
  return result;
}

uint64_t sub_22F8CA0C4()
{
  _QWORD *v0;
  id v1;
  uint64_t result;

  if (*v0)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_22F98DBA0();
    swift_release();
    swift_release();
    swift_release();
    sub_22F98E0D4();
    if (qword_255E1DC30 != -1)
      swift_once();
    v1 = (id)qword_255E29840;
    return sub_22F98E5C0();
  }
  else
  {
    type metadata accessor for IdentityViewModel();
    sub_22F862548(&qword_255E21B18, (uint64_t (*)(uint64_t))type metadata accessor for IdentityViewModel, (uint64_t)&unk_22F996C1C);
    result = sub_22F98DF54();
    __break(1u);
  }
  return result;
}

uint64_t sub_22F8CA274(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t (*v7)(uint64_t);
  unint64_t *v8;
  void *v9;
  char v10;

  v2 = a1[2];
  if (!v2)
  {
    type metadata accessor for FineRotationManager(0);
    v7 = type metadata accessor for FineRotationManager;
    v8 = &qword_255E1F3C8;
    v9 = &unk_22F992D8C;
LABEL_9:
    sub_22F862548(v8, v7, (uint64_t)v9);
    result = sub_22F98DF54();
    __break(1u);
    return result;
  }
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC19ContactlessReaderUI19FineRotationManager_motionManager), sel_stopDeviceMotionUpdates);
  v3 = *a1;
  if (!*a1)
  {
    type metadata accessor for IdentityViewModel();
    v7 = (uint64_t (*)(uint64_t))type metadata accessor for IdentityViewModel;
    v8 = &qword_255E21B18;
    v9 = &unk_22F996C1C;
    goto LABEL_9;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  if ((v10 & 1) == 0)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_22F98DBAC();
    sub_22F8ECFF4();
    v4 = *(void **)(v3 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_remoteProxy);
    if (v4)
      objc_msgSend(v4, sel_qrCodeScanInitiated);
  }
  swift_release();
  v5 = sub_22F98EB00();
  MEMORY[0x24BDAC7A8](v5);
  sub_22F98DE10();
  return swift_release();
}

uint64_t sub_22F8CA450(_QWORD *a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t result;
  uint64_t (*v8)(uint64_t);
  unint64_t *v9;
  void *v10;
  uint64_t aBlock;
  uint64_t v12;
  void (*v13)(uint64_t, void *, void *);
  void *v14;
  void (*v15)(void *, void *);
  uint64_t v16;

  v2 = a1[2];
  if (!v2)
  {
    type metadata accessor for FineRotationManager(0);
    v8 = type metadata accessor for FineRotationManager;
    v9 = &qword_255E1F3C8;
    v10 = &unk_22F992D8C;
LABEL_8:
    sub_22F862548(v9, v8, (uint64_t)v10);
    result = sub_22F98DF54();
    __break(1u);
    return result;
  }
  v3 = *(void **)(v2 + OBJC_IVAR____TtC19ContactlessReaderUI19FineRotationManager_motionManager);
  swift_retain();
  objc_msgSend(v3, sel_setDeviceMotionUpdateInterval_, 0.1);
  v4 = objc_msgSend((id)objc_opt_self(), sel_mainQueue);
  v15 = sub_22F8CB9E4;
  v16 = v2;
  aBlock = MEMORY[0x24BDAC760];
  v12 = 1107296256;
  v13 = sub_22F8FC608;
  v14 = &block_descriptor_15;
  v5 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v3, sel_startDeviceMotionUpdatesToQueue_withHandler_, v4, v5);
  _Block_release(v5);
  swift_release();

  if (!*a1)
  {
    type metadata accessor for IdentityViewModel();
    v8 = (uint64_t (*)(uint64_t))type metadata accessor for IdentityViewModel;
    v9 = &qword_255E21B18;
    v10 = &unk_22F996C1C;
    goto LABEL_8;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  if ((aBlock & 1) != 0)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(aBlock) = 0;
    swift_retain();
    sub_22F98DBAC();
    sub_22F8ED4B4();
  }
  swift_release();
  v6 = a1[13];
  aBlock = a1[12];
  v12 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E229A0);
  return sub_22F98E908();
}

uint64_t sub_22F8CA6AC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  _QWORD v19[3];
  __int128 v20;
  uint64_t v21;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  result = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a2;
  v10 = a2[1];
  v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0)
    v11 = v9 & 0xFFFFFFFFFFFFLL;
  if (v11)
  {
    if (qword_255E1DB30 != -1)
      swift_once();
    v12 = __swift_project_value_buffer(v5, (uint64_t)qword_255E29640);
    sub_22F87ABDC(v12, (uint64_t)v8, (uint64_t *)&unk_255E206E0);
    v13 = sub_22F98DAA4();
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v8, 1, v13) == 1)
    {
      sub_22F87AC20((uint64_t)v8, (uint64_t *)&unk_255E206E0);
    }
    else
    {
      v15 = sub_22F98DA8C();
      v16 = sub_22F98F07C();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v17 = 0;
        _os_log_impl(&dword_22F85B000, v15, v16, "Processing QR code payload", v17, 2u);
        MEMORY[0x2348A6838](v17, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v13);
    }
    if (*(_QWORD *)a3)
    {
      swift_retain();
      sub_22F8EC2A4(v9, v10);
      swift_release();
      v18 = *(_QWORD *)(a3 + 48);
      v20 = *(_OWORD *)(a3 + 32);
      v21 = v18;
      v19[1] = 0;
      v19[2] = 0xE000000000000000;
      __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F428);
      return sub_22F98E908();
    }
    else
    {
      type metadata accessor for IdentityViewModel();
      sub_22F862548(&qword_255E21B18, (uint64_t (*)(uint64_t))type metadata accessor for IdentityViewModel, (uint64_t)&unk_22F996C1C);
      result = sub_22F98DF54();
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_22F8CA8E8(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  _QWORD *v3;
  uint64_t result;

  if (!*(_QWORD *)(*(_QWORD *)a2 + 16))
  {
    if (*a3)
    {
      v3 = (_QWORD *)(*a3 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_lastScannedQRCode);
      *v3 = 0;
      v3[1] = 0;
      swift_retain();
      swift_bridgeObjectRelease();
      swift_getKeyPath();
      swift_getKeyPath();
      return sub_22F98DBAC();
    }
    else
    {
      type metadata accessor for IdentityViewModel();
      sub_22F862548(&qword_255E21B18, (uint64_t (*)(uint64_t))type metadata accessor for IdentityViewModel, (uint64_t)&unk_22F996C1C);
      result = sub_22F98DF54();
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_22F8CA9BC(uint64_t a1, unsigned __int8 *a2, uint64_t *a3)
{
  uint64_t v4;
  char v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t result;
  char v11;
  char v12;

  if (sub_22F936434(*a2) == 0x676E696E6E616373 && v4 == 0xEE0065646F435251)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = sub_22F98F430();
    swift_bridgeObjectRelease();
    if ((v6 & 1) == 0)
    {
      if (*a3)
      {
        swift_getKeyPath();
        swift_getKeyPath();
        swift_retain();
        sub_22F98DBA0();
        swift_release();
        swift_release();
        if ((v12 & 1) != 0)
        {
          swift_getKeyPath();
          swift_getKeyPath();
          swift_retain();
          sub_22F98DBAC();
          sub_22F8ED4B4();
        }
LABEL_14:
        swift_release();
        v9 = sub_22F98EB00();
        MEMORY[0x24BDAC7A8](v9);
        sub_22F98DE10();
        return swift_release();
      }
      goto LABEL_15;
    }
  }
  v7 = *a3;
  if (*a3)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_22F98DBA0();
    swift_release();
    swift_release();
    if ((v11 & 1) == 0)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      sub_22F98DBAC();
      sub_22F8ECFF4();
      v8 = *(void **)(v7 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_remoteProxy);
      if (v8)
        objc_msgSend(v8, sel_qrCodeScanInitiated);
    }
    goto LABEL_14;
  }
LABEL_15:
  type metadata accessor for IdentityViewModel();
  sub_22F862548(&qword_255E21B18, (uint64_t (*)(uint64_t))type metadata accessor for IdentityViewModel, (uint64_t)&unk_22F996C1C);
  result = sub_22F98DF54();
  __break(1u);
  return result;
}

uint64_t sub_22F8CAC7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  if (sub_22F936434(a2) == 0x676E696E6E616373 && v2 == 0xEE0065646F435251)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_22F98F430();
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E229A0);
  return sub_22F98E908();
}

uint64_t sub_22F8CAD8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X7>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  uint64_t v12;

  *(_QWORD *)a6 = a1;
  *(_QWORD *)(a6 + 8) = a2;
  *(_QWORD *)(a6 + 16) = a3;
  *(_QWORD *)(a6 + 24) = a4;
  sub_22F98E8F0();
  *(_OWORD *)(a6 + 32) = v11;
  *(_QWORD *)(a6 + 48) = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E22888);
  sub_22F98E8F0();
  *(_OWORD *)(a6 + 56) = v11;
  type metadata accessor for CGSize(0);
  sub_22F98E8F0();
  *(_OWORD *)(a6 + 72) = v11;
  *(_QWORD *)(a6 + 88) = v12;
  sub_22F98E8F0();
  *(_OWORD *)(a6 + 96) = v11;
  *(int64x2_t *)(a6 + 112) = vdupq_n_s64(0x4071800000000000uLL);
  v8 = a6 + *(int *)(type metadata accessor for IdentityScannerView() + 44);
  v9 = sub_22F98DDC8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8, a5, v9);
}

uint64_t type metadata accessor for IdentityScannerView()
{
  uint64_t result;

  result = qword_255E228E8;
  if (!qword_255E228E8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22F8CAF04(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    v7 = a2[6];
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = v7;
    v8 = a2[8];
    *(_QWORD *)(a1 + 56) = a2[7];
    *(_QWORD *)(a1 + 64) = v8;
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
    v9 = a2[12];
    *(_QWORD *)(a1 + 88) = a2[11];
    *(_QWORD *)(a1 + 96) = v9;
    *(_QWORD *)(a1 + 104) = a2[13];
    v10 = *(int *)(a3 + 44);
    v14 = (uint64_t)a2 + v10;
    v15 = a1 + v10;
    *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
    v11 = sub_22F98DDC8();
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    v13(v15, v14, v11);
  }
  return v5;
}

uint64_t sub_22F8CB034(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 44);
  v5 = sub_22F98DDC8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_22F8CB0B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v7 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v7;
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  v8 = *(int *)(a3 + 44);
  v12 = a2 + v8;
  v13 = a1 + v8;
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  v9 = sub_22F98DDC8();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  v11(v13, v12, v9);
  return a1;
}

_QWORD *sub_22F8CB1BC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_retain();
  swift_release();
  a1[9] = a2[9];
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_retain();
  swift_release();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_retain();
  swift_release();
  a1[14] = a2[14];
  a1[15] = a2[15];
  v6 = *(int *)(a3 + 44);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_22F98DDC8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_22F8CB318(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v5 = *(_OWORD *)(a2 + 112);
  v6 = *(int *)(a3 + 44);
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v5;
  v9 = sub_22F98DDC8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  return a1;
}

uint64_t sub_22F8CB3A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_release();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_release();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_release();
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  v7 = *(int *)(a3 + 44);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_22F98DDC8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_22F8CB4A0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22F8CB4AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 40);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_22F98DDC8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 44), a2, v8);
  }
}

uint64_t sub_22F8CB528()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22F8CB534(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 40) = (a2 - 1);
  }
  else
  {
    v7 = sub_22F98DDC8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 44), a2, a2, v7);
  }
  return result;
}

uint64_t sub_22F8CB5A8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22F98DDC8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_22F8CB648()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22F8CB660(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for IdentityScannerView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22F8CB6A4()
{
  return sub_22F8CB6C0((uint64_t (*)(uint64_t))sub_22F8CA274);
}

uint64_t sub_22F8CB6B4()
{
  return sub_22F8CB6C0((uint64_t (*)(uint64_t))sub_22F8CA450);
}

uint64_t sub_22F8CB6C0(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IdentityScannerView() - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

uint64_t sub_22F8CB700(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IdentityScannerView() - 8) + 80);
  return sub_22F8CA6AC(a1, a2, v2 + ((v5 + 16) & ~v5));
}

unint64_t sub_22F8CB74C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E22978;
  if (!qword_255E22978)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E22940);
    v2[0] = sub_22F87AA84(&qword_255E22980, &qword_255E22938, MEMORY[0x24BDF4750]);
    v2[1] = MEMORY[0x24BDF0910];
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E22978);
  }
  return result;
}

uint64_t sub_22F8CB7D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IdentityScannerView() - 8) + 80);
  return sub_22F8CA8E8(a1, a2, (_QWORD *)(v2 + ((v5 + 16) & ~v5)));
}

unint64_t sub_22F8CB820()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_255E22990;
  if (!qword_255E22990)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E22888);
    v2 = sub_22F862548(&qword_255E22998, (uint64_t (*)(uint64_t))type metadata accessor for CGPoint, MEMORY[0x24BDBD880]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BEE12C0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_255E22990);
  }
  return result;
}

uint64_t objectdestroyTm_12()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for IdentityScannerView();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  v4 = v3 + *(int *)(v1 + 44);
  v5 = sub_22F98DDC8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_deallocObject();
}

uint64_t sub_22F8CB96C(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IdentityScannerView() - 8) + 80);
  return sub_22F8CA9BC(a1, a2, (uint64_t *)(v2 + ((v5 + 16) & ~v5)));
}

uint64_t sub_22F8CB9C0()
{
  uint64_t v0;

  return sub_22F8CAC7C(*(_QWORD *)(v0 + 16), *(unsigned __int8 *)(v0 + 24));
}

void sub_22F8CB9E4(void *a1, void *a2)
{
  sub_22F88B3E8(a1, a2);
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

uint64_t sub_22F8CBA04()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E229A0);
  return sub_22F98E908();
}

uint64_t sub_22F8CBA7C(uint64_t a1)
{
  sub_22F8AB8E0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

unint64_t sub_22F8CBAE4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E22A10;
  if (!qword_255E22A10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E229B8);
    v2[0] = sub_22F8CBB68();
    v2[1] = sub_22F87AA84(&qword_255E1F918, &qword_255E1F8D0, MEMORY[0x24BDEB950]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E22A10);
  }
  return result;
}

unint64_t sub_22F8CBB68()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E22A18;
  if (!qword_255E22A18)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E229B0);
    v2[0] = sub_22F87E2D8(&qword_255E22A20, &qword_255E22A28, sub_22F8CBC0C, MEMORY[0x24BDECC60]);
    v2[1] = sub_22F87AA84(&qword_255E22A50, &qword_255E229A8, MEMORY[0x24BDF1330]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E22A18);
  }
  return result;
}

uint64_t sub_22F8CBC0C()
{
  return sub_22F87E2D8(&qword_255E22A30, &qword_255E22A38, (uint64_t (*)(void))sub_22F8CBC30, MEMORY[0x24BDECC60]);
}

unint64_t sub_22F8CBC30()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E22A40;
  if (!qword_255E22A40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E22A48);
    v2[0] = sub_22F8913D4();
    v2[1] = sub_22F87AA84(&qword_255E1F108, &qword_255E1F110, MEMORY[0x24BDF1028]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E22A40);
  }
  return result;
}

uint64_t sub_22F8CBCB4()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E22958);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E22950);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E22888);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E22948);
  sub_22F87E2D8(&qword_255E22970, &qword_255E22948, (uint64_t (*)(void))sub_22F8CB74C, MEMORY[0x24BDF0910]);
  swift_getOpaqueTypeConformance2();
  sub_22F8CB820();
  swift_getOpaqueTypeConformance2();
  sub_22F88398C();
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22F8CBDC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  char v12;
  _QWORD *v13;
  _QWORD *v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB00 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_255E295B0);
  sub_22F87BC08(v5, (uint64_t)v4);
  v6 = sub_22F98DAA4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_22F87BC50((uint64_t)v4);
  }
  else
  {
    v8 = sub_22F98DA8C();
    v9 = sub_22F98F0A0();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_22F85B000, v8, v9, "DrawNumberRecognizer: didStartWriting", v10, 2u);
      MEMORY[0x2348A6838](v10, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  if (MEMORY[0x2348A68F8](v1 + 16))
  {
    sub_22F877FC0();
    swift_unknownObjectRelease();
  }
  v11 = MEMORY[0x2348A68F8](v1 + 16);
  if (v11)
  {
    v12 = *(_BYTE *)(v11 + OBJC_IVAR____TtC19ContactlessReaderUI12PINViewModel_drawNumberAllowed);
    swift_unknownObjectRelease();
    if ((v12 & 1) == 0)
      *(_BYTE *)(v1 + 81) = 0;
  }
  *(_BYTE *)(v1 + 80) = 1;
  v13 = (_QWORD *)(v1 + 40);
  swift_beginAccess();
  v14 = *(_QWORD **)(v1 + 40);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v1 + 40) = v14;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v14 = sub_22F979724(0, v14[2] + 1, 1, v14);
    *v13 = v14;
  }
  v17 = v14[2];
  v16 = v14[3];
  if (v17 >= v16 >> 1)
  {
    v14 = sub_22F979724((_QWORD *)(v16 > 1), v17 + 1, 1, v14);
    *v13 = v14;
  }
  v14[2] = v17 + 1;
  v14[v17 + 4] = MEMORY[0x24BEE4AF8];
  v18 = *(_QWORD *)(v1 + 40);
  result = swift_endAccess();
  *(_QWORD *)(v1 + 48) = *(_QWORD *)(v18 + 16) - 1;
  if (*(_QWORD *)(v1 + 72))
  {
    swift_retain();
    sub_22F98EFE0();
    return swift_release();
  }
  return result;
}

void sub_22F8CC060(double a1, double a2)
{
  uint64_t v2;
  _QWORD *v3;
  unint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  char isUniquelyReferenced_nonNull_native;
  char v10;
  unint64_t v11;
  unint64_t v12;
  double *v13;
  void *v14;

  if (*(_BYTE *)(v2 + 80) != 1)
    return;
  v6 = *(_QWORD *)(v2 + 48);
  v7 = (_QWORD *)(v2 + 40);
  swift_beginAccess();
  v8 = *(_QWORD **)(v2 + 40);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v2 + 40) = v8;
  if ((isUniquelyReferenced_nonNull_native & 1) != 0)
  {
    if ((v6 & 0x8000000000000000) == 0)
      goto LABEL_4;
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v8 = sub_22F8B2BE8(v8);
  *v7 = v8;
  if ((v6 & 0x8000000000000000) != 0)
    goto LABEL_12;
LABEL_4:
  if (v6 >= v8[2])
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v3 = v8 + 4;
  v7 = (_QWORD *)v8[v6 + 4];
  v10 = swift_isUniquelyReferenced_nonNull_native();
  v8[v6 + 4] = v7;
  if ((v10 & 1) == 0)
  {
LABEL_14:
    v7 = sub_22F979A54(0, v7[2] + 1, 1, v7);
    v3[v6] = v7;
  }
  v12 = v7[2];
  v11 = v7[3];
  if (v12 >= v11 >> 1)
  {
    v7 = sub_22F979A54((_QWORD *)(v11 > 1), v12 + 1, 1, v7);
    v3[v6] = v7;
  }
  v7[2] = v12 + 1;
  v13 = (double *)&v7[2 * v12];
  v13[4] = a1;
  v13[5] = a2;
  swift_endAccess();
  v14 = (void *)MEMORY[0x2348A68F8](v2 + 56);
  if (v14)
  {
    objc_msgSend(v14, sel_setNeedsDisplay);
    swift_unknownObjectRelease();
  }
}

uint64_t sub_22F8CC1B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v18;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E21AB0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB00 != -1)
    swift_once();
  v8 = __swift_project_value_buffer(v5, (uint64_t)qword_255E295B0);
  sub_22F87BC08(v8, (uint64_t)v7);
  v9 = sub_22F98DAA4();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9) == 1)
  {
    sub_22F87BC50((uint64_t)v7);
  }
  else
  {
    v11 = sub_22F98DA8C();
    v12 = sub_22F98F0A0();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_22F85B000, v11, v12, "DrawNumberRecognizer: didEndDrawing", v13, 2u);
      MEMORY[0x2348A6838](v13, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
  }
  v14 = sub_22F98EFD4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v4, 1, 1, v14);
  v15 = swift_allocObject();
  swift_weakInit();
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = 0;
  v16[3] = 0;
  v16[4] = v15;
  v16[5] = sub_22F8CDC04;
  v16[6] = v1;
  swift_retain();
  *(_QWORD *)(v1 + 72) = sub_22F884920((uint64_t)v4, (uint64_t)&unk_255E22C78, (uint64_t)v16);
  return swift_release();
}

void *sub_22F8CC3F4(uint64_t a1)
{
  void *result;

  *(_BYTE *)(a1 + 80) = 0;
  swift_beginAccess();
  *(_QWORD *)(a1 + 40) = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRelease();
  result = (void *)MEMORY[0x2348A68F8](a1 + 56);
  if (result)
  {
    objc_msgSend(result, sel_setNeedsDisplay);
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_22F8CC468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[6] = a5;
  v6[7] = a6;
  v6[5] = a4;
  return swift_task_switch();
}

uint64_t sub_22F8CC484()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v1;
  *v1 = v0;
  v1[1] = sub_22F8CC4D4;
  return sub_22F98EFEC();
}

uint64_t sub_22F8CC4D4()
{
  void *v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (!v0)
    return swift_task_switch();

  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_22F8CC548()
{
  uint64_t v0;

  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_22F8CC7E0();
    swift_release();
  }
  sub_22F98EFBC();
  *(_QWORD *)(v0 + 72) = sub_22F98EFB0();
  sub_22F98EF8C();
  return swift_task_switch();
}

uint64_t sub_22F8CC5E8()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(v0 + 48);
  v2 = swift_release();
  v1(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void *sub_22F8CC620()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  void *result;
  uint64_t v12;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB00 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_255E295B0);
  sub_22F87BC08(v5, (uint64_t)v4);
  v6 = sub_22F98DAA4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_22F87BC50((uint64_t)v4);
  }
  else
  {
    v8 = sub_22F98DA8C();
    v9 = sub_22F98F0A0();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_22F85B000, v8, v9, "DrawNumberRecognizer: didCancelDrawing", v10, 2u);
      MEMORY[0x2348A6838](v10, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  *(_WORD *)(v1 + 80) = 256;
  swift_beginAccess();
  *(_QWORD *)(v1 + 40) = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRelease();
  result = (void *)MEMORY[0x2348A68F8](v1 + 56);
  if (result)
  {
    objc_msgSend(result, sel_setNeedsDisplay);
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_22F8CC7E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  _QWORD v23[2];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v23 - v6;
  if (*(_BYTE *)(v1 + 80) == 1)
  {
    if (*(_BYTE *)(v1 + 81) != 1)
    {
      result = MEMORY[0x2348A68F8](v1 + 16);
      if (!result)
        return result;
      goto LABEL_12;
    }
    v8 = sub_22F8CCB1C();
    if (v9)
    {
      v23[0] = v8;
      v23[1] = v9;
      if (MEMORY[0x2348A68F8](v1 + 16))
      {
        sub_22F8777B0(v23);
        swift_unknownObjectRelease();
      }
      return swift_bridgeObjectRelease();
    }
    if (qword_255E1DB00 != -1)
      swift_once();
    v17 = __swift_project_value_buffer(v2, (uint64_t)qword_255E295B0);
    sub_22F87BC08(v17, (uint64_t)v7);
    v18 = sub_22F98DAA4();
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v7, 1, v18) == 1)
    {
      sub_22F87BC50((uint64_t)v7);
    }
    else
    {
      v20 = sub_22F98DA8C();
      v21 = sub_22F98F0A0();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v22 = 0;
        _os_log_impl(&dword_22F85B000, v20, v21, "DrawNumberRecognizer: submitDigit - digit not recognized.", v22, 2u);
        MEMORY[0x2348A6838](v22, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v18);
    }
    result = MEMORY[0x2348A68F8](v1 + 16);
    if (result)
    {
LABEL_12:
      sub_22F875D14();
      return swift_unknownObjectRelease();
    }
  }
  else
  {
    if (qword_255E1DB00 != -1)
      swift_once();
    v11 = __swift_project_value_buffer(v2, (uint64_t)qword_255E295B0);
    sub_22F87BC08(v11, (uint64_t)v5);
    v12 = sub_22F98DAA4();
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v5, 1, v12) == 1)
    {
      return sub_22F87BC50((uint64_t)v5);
    }
    else
    {
      v14 = sub_22F98DA8C();
      v15 = sub_22F98F0A0();
      if (os_log_type_enabled(v14, v15))
      {
        v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_22F85B000, v14, v15, "DrawNumberRecognizer: submitDigit - skipped recognition", v16, 2u);
        MEMORY[0x2348A6838](v16, -1, -1);
      }

      return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v5, v12);
    }
  }
  return result;
}

uint64_t sub_22F8CCB1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v26;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v26 - v6;
  if (qword_255E1DB00 != -1)
    swift_once();
  v8 = __swift_project_value_buffer(v2, (uint64_t)qword_255E295B0);
  sub_22F87BC08(v8, (uint64_t)v7);
  v9 = sub_22F98DAA4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v7, 1, v9) == 1)
  {
    sub_22F87BC50((uint64_t)v7);
  }
  else
  {
    v12 = sub_22F98DA8C();
    v13 = sub_22F98F0A0();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_22F85B000, v12, v13, "DrawNumberRecognizer: determineDigit", v14, 2u);
      MEMORY[0x2348A6838](v14, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
  }
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)(v1 + 40) + 16))
  {
    sub_22F87BC08(v8, (uint64_t)v5);
    if (v11(v5, 1, v9) == 1)
    {
      sub_22F87BC50((uint64_t)v5);
    }
    else
    {
      v22 = sub_22F98DA8C();
      v23 = sub_22F98F0A0();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v24 = 0;
        _os_log_impl(&dword_22F85B000, v22, v23, "DrawNumberRecognizer: determineDigit - no drawing to scan", v24, 2u);
        MEMORY[0x2348A6838](v24, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v10 + 8))(v5, v9);
    }
    return 0;
  }
  v15 = swift_bridgeObjectRetain();
  v16 = sub_22F8CD60C(v15);
  swift_bridgeObjectRelease();
  v17 = v16;
  v18 = sub_22F8CCDEC((uint64_t)v16);
  v20 = v19;

  v21 = sub_22F8CD6EC(v18, v20);
  if ((v21 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v18;
}

uint64_t sub_22F8CCDEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  _QWORD aBlock[6];

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void **)(v1 + 88);
  if (!v6)
    return 0;
  v7 = v6;
  v8 = objc_msgSend(v7, sel_textRecognitionResultForDrawing_options_shouldCancel_, a1, 0, 0);
  if (!v8)
  {
    if (qword_255E1DB00 != -1)
      swift_once();
    v19 = __swift_project_value_buffer(v3, (uint64_t)qword_255E295B0);
    sub_22F87BC08(v19, (uint64_t)v5);
    v20 = sub_22F98DAA4();
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v5, 1, v20) == 1)
    {

      sub_22F87BC50((uint64_t)v5);
    }
    else
    {
      v22 = sub_22F98DA8C();
      v23 = sub_22F98F0A0();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v24 = 0;
        _os_log_impl(&dword_22F85B000, v22, v23, "DrawNumberRecognizer - get recognizer text - no digit returned", v24, 2u);
        MEMORY[0x2348A6838](v24, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v20);
    }
    return 0;
  }
  v9 = v8;
  v10 = swift_allocObject();
  v11 = v9;
  v12 = objc_msgSend(v11, sel_topTranscription);
  v13 = sub_22F98EDB8();
  v15 = v14;

  *(_QWORD *)(v10 + 16) = v13;
  *(_QWORD *)(v10 + 24) = v15;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v1;
  *(_QWORD *)(v16 + 24) = v10;
  aBlock[4] = sub_22F8CD5EC;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22F8CD340;
  aBlock[3] = &block_descriptor_16;
  v17 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v11, sel_enumerateTokensInTopTranscriptionPathWithBlock_, v17);

  _Block_release(v17);
  swift_beginAccess();
  v18 = *(_QWORD *)(v10 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  return v18;
}

id sub_22F8CD0D4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id result;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend(a1, sel_recognitionScore);
  if (v13 < 0.98)
  {
    swift_beginAccess();
    *(_QWORD *)(a7 + 16) = 0;
    *(_QWORD *)(a7 + 24) = 0;
    swift_bridgeObjectRelease();
    if (qword_255E1DB00 != -1)
      swift_once();
    v14 = __swift_project_value_buffer(v9, (uint64_t)qword_255E295B0);
    sub_22F87BC08(v14, (uint64_t)v11);
    v15 = sub_22F98DAA4();
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v11, 1, v15) == 1)
    {
      return (id)sub_22F87BC50((uint64_t)v11);
    }
    else
    {
      v17 = a1;
      swift_retain_n();
      v18 = v17;
      v19 = sub_22F98DA8C();
      v20 = sub_22F98F0A0();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = swift_slowAlloc();
        *(_DWORD *)v21 = 134218240;
        objc_msgSend(v18, sel_recognitionScore);
        v23 = v22;
        sub_22F98F208();

        *(_WORD *)(v21 + 12) = 2048;
        v23 = 0x3FEF5C28F5C28F5CLL;
        sub_22F98F208();
        swift_release_n();
        _os_log_impl(&dword_22F85B000, v19, v20, "DrawNumberRecognizer - get recognizer text - recognition score too low. %f < %f", (uint8_t *)v21, 0x16u);
        MEMORY[0x2348A6838](v21, -1, -1);
      }
      else
      {
        swift_release_n();

      }
      return (id)(*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v11, v15);
    }
  }
  return result;
}

void sub_22F8CD340(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t sub_22F8CD3C0()
{
  uint64_t v0;

  sub_22F8847A8(v0 + 16);
  swift_bridgeObjectRelease();
  sub_22F8847A8(v0 + 56);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DrawNumberRecognizer()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for RecognitionStates(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22F8CD470 + 4 * byte_22F995B25[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22F8CD4A4 + 4 * byte_22F995B20[v4]))();
}

uint64_t sub_22F8CD4A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22F8CD4AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22F8CD4B4);
  return result;
}

uint64_t sub_22F8CD4C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22F8CD4C8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22F8CD4CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22F8CD4D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RecognitionStates()
{
  return &type metadata for RecognitionStates;
}

unint64_t sub_22F8CD4F4()
{
  unint64_t result;

  result = qword_255E22C68;
  if (!qword_255E22C68)
  {
    result = MEMORY[0x2348A6784](&unk_22F995C34, &type metadata for RecognitionStates);
    atomic_store(result, &qword_255E22C68);
  }
  return result;
}

uint64_t sub_22F8CD538()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 24) = 0;
  swift_unknownObjectWeakInit();
  v1 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 32) = 0x3FEF5C28F5C28F5CLL;
  *(_QWORD *)(v0 + 40) = v1;
  *(_QWORD *)(v0 + 48) = 0;
  *(_QWORD *)(v0 + 64) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v0 + 72) = 0;
  *(_WORD *)(v0 + 80) = 256;
  *(_QWORD *)(v0 + 88) = 0;
  return v0;
}

uint64_t sub_22F8CD59C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_22F8CD5C0()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

id sub_22F8CD5EC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  return sub_22F8CD0D4(a1, a2, a3, a4, a5, *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24));
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

id sub_22F8CD60C(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t i;
  uint64_t v5;
  uint64_t v6;
  double *v7;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE1BDC8]), sel_init);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v3; ++i)
    {
      v5 = *(_QWORD *)(a1 + 32 + 8 * i);
      v6 = *(_QWORD *)(v5 + 16);
      if (v6)
      {
        swift_bridgeObjectRetain();
        v7 = (double *)(v5 + 40);
        do
        {
          objc_msgSend(v2, sel_addPoint_, *(v7 - 1), *v7);
          v7 += 2;
          --v6;
        }
        while (v6);
        swift_bridgeObjectRelease();
      }
      objc_msgSend(v2, sel_endStroke);
    }
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_22F8CD6EC(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  void (*v35)(char *, uint64_t);
  char *v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  _QWORD v48[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)v48 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v48 - v11;
  v13 = sub_22F98D150();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)v48 - v18;
  if (a2)
  {
    swift_bridgeObjectRetain();
    if (sub_22F98EE78() == 1)
    {
      v20 = HIBYTE(a2) & 0xF;
      if ((a2 & 0x2000000000000000) == 0)
        v20 = a1 & 0xFFFFFFFFFFFFLL;
      if (v20)
      {
        v48[0] = a1;
        v48[1] = a2;
        sub_22F98D12C();
        sub_22F98D144();
        v21 = *(void (**)(char *, uint64_t))(v14 + 8);
        v21(v19, v13);
        sub_22F863BF8();
        v22 = 1;
        sub_22F98F220();
        v24 = v23;
        v21(v17, v13);
        swift_bridgeObjectRelease();
        if ((v24 & 1) != 0)
          return v22;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      if (qword_255E1DB00 != -1)
        swift_once();
      v41 = __swift_project_value_buffer(v4, (uint64_t)qword_255E295B0);
      sub_22F87BC08(v41, (uint64_t)v12);
      v26 = sub_22F98DAA4();
      v42 = *(_QWORD *)(v26 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v12, 1, v26) == 1)
      {
        v28 = (uint64_t)v12;
        goto LABEL_26;
      }
      v43 = sub_22F98DA8C();
      v44 = sub_22F98F0A0();
      if (os_log_type_enabled(v43, v44))
      {
        v45 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v45 = 0;
        _os_log_impl(&dword_22F85B000, v43, v44, "DrawNumberRecognizer: validateRecognizedText - digit content not numeric.", v45, 2u);
        MEMORY[0x2348A6838](v45, -1, -1);
      }

      v35 = *(void (**)(char *, uint64_t))(v42 + 8);
      v36 = v12;
      goto LABEL_30;
    }
    if (qword_255E1DB00 != -1)
      swift_once();
    v29 = __swift_project_value_buffer(v4, (uint64_t)qword_255E295B0);
    sub_22F87BC08(v29, (uint64_t)v10);
    v30 = sub_22F98DAA4();
    v31 = *(_QWORD *)(v30 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v10, 1, v30) != 1)
    {
      swift_bridgeObjectRetain();
      v37 = sub_22F98DA8C();
      v38 = sub_22F98F0A0();
      if (os_log_type_enabled(v37, v38))
      {
        v39 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v39 = 134217984;
        v40 = sub_22F98EE78();
        swift_bridgeObjectRelease();
        v48[0] = v40;
        sub_22F98F208();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_22F85B000, v37, v38, "DrawNumberRecognizer: validateRecognizedText - digits count invalid. Count = %ld instead of 1.", v39, 0xCu);
        MEMORY[0x2348A6838](v39, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v35 = *(void (**)(char *, uint64_t))(v31 + 8);
      v36 = v10;
      v46 = v30;
      goto LABEL_33;
    }
    swift_bridgeObjectRelease();
    v28 = (uint64_t)v10;
  }
  else
  {
    if (qword_255E1DB00 != -1)
      swift_once();
    v25 = __swift_project_value_buffer(v4, (uint64_t)qword_255E295B0);
    sub_22F87BC08(v25, (uint64_t)v7);
    v26 = sub_22F98DAA4();
    v27 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v7, 1, v26) != 1)
    {
      v32 = sub_22F98DA8C();
      v33 = sub_22F98F0A0();
      if (os_log_type_enabled(v32, v33))
      {
        v34 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v34 = 0;
        _os_log_impl(&dword_22F85B000, v32, v33, "DrawNumberRecognizer: validateRecognizedText - digit validation error: nil digit", v34, 2u);
        MEMORY[0x2348A6838](v34, -1, -1);
      }

      v35 = *(void (**)(char *, uint64_t))(v27 + 8);
      v36 = v7;
LABEL_30:
      v46 = v26;
LABEL_33:
      v35(v36, v46);
      return 0;
    }
    v28 = (uint64_t)v7;
  }
LABEL_26:
  sub_22F87BC50(v28);
  return 0;
}

void *sub_22F8CDC04()
{
  uint64_t v0;

  return sub_22F8CC3F4(v0);
}

uint64_t sub_22F8CDC0C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_22F8CDC30()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22F8CDC64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_22F87B390;
  *(_QWORD *)(v3 + 56) = v2;
  *(_OWORD *)(v3 + 40) = v4;
  return swift_task_switch();
}

id sub_22F8CDCCC()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  objc_class *v11;
  objc_super v13;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB08 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_255E295C8);
  sub_22F87BC08(v5, (uint64_t)v4);
  v6 = sub_22F98DAA4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_22F87AC20((uint64_t)v4, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    v8 = sub_22F98DA8C();
    v9 = sub_22F98F07C();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_22F85B000, v8, v9, "RegRemoteAlertViewController: deinit", v10, 2u);
      MEMORY[0x2348A6838](v10, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  v11 = (objc_class *)type metadata accessor for RegRemoteAlertViewController();
  v13.receiver = v1;
  v13.super_class = v11;
  return objc_msgSendSuper2(&v13, sel_dealloc);
}

id sub_22F8CDF08(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  char *v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  uint64_t v17;
  objc_class *v18;
  objc_super v20;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB08 != -1)
    swift_once();
  v7 = __swift_project_value_buffer(v4, (uint64_t)qword_255E295C8);
  sub_22F87BC08(v7, (uint64_t)v6);
  v8 = sub_22F98DAA4();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
  {
    sub_22F87AC20((uint64_t)v6, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    v10 = sub_22F98DA8C();
    v11 = sub_22F98F07C();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_22F85B000, v10, v11, "RegRemoteAlertViewController: view did disappear", v12, 2u);
      MEMORY[0x2348A6838](v12, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  v13 = &v2[OBJC_IVAR____TtC19ContactlessReaderUI28RegRemoteAlertViewController_viewDisappearListener];
  if (MEMORY[0x2348A68F8](&v2[OBJC_IVAR____TtC19ContactlessReaderUI28RegRemoteAlertViewController_viewDisappearListener]))
  {
    v14 = *((_QWORD *)v13 + 1);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(ObjectType, v14);
    swift_unknownObjectRelease();
  }
  *((_QWORD *)v13 + 1) = 0;
  swift_unknownObjectWeakAssign();
  v16 = *(_QWORD *)&v2[OBJC_IVAR____TtC19ContactlessReaderUI28RegRemoteAlertViewController_suppressible + 24];
  v17 = *(_QWORD *)&v2[OBJC_IVAR____TtC19ContactlessReaderUI28RegRemoteAlertViewController_suppressible + 32];
  __swift_project_boxed_opaque_existential_1(&v2[OBJC_IVAR____TtC19ContactlessReaderUI28RegRemoteAlertViewController_suppressible], v16);
  (*(void (**)(uint64_t, uint64_t))(v17 + 16))(v16, v17);
  v18 = (objc_class *)type metadata accessor for RegRemoteAlertViewController();
  v20.receiver = v2;
  v20.super_class = v18;
  return objc_msgSendSuper2(&v20, sel_viewDidDisappear_, a1 & 1);
}

void sub_22F8CE158(void *a1, void (*a2)(void), uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  NSObject *v23;
  os_log_type_t v24;
  char *v25;
  uint64_t v26;
  void *v27;
  uint8_t *v28;
  uint8_t *v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  void *v35;
  uint64_t v36;
  unint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  void *v43;
  unint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  void (*v52)(char *, uint64_t);
  char *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  uint8_t *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(void);
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unsigned int (*v78)(char *, uint64_t, uint64_t);
  uint64_t v79;
  id v80;
  uint64_t v81;
  __int128 aBlock;
  __int128 v83;
  uint64_t (*v84)(void *);
  uint64_t v85;
  __int128 v86;
  __int128 v87;

  v4 = v3;
  v70 = a3;
  v71 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22CF0);
  MEMORY[0x24BDAC7A8](v6);
  v74 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_22F98D744();
  v75 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v72 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_22F98D630();
  v10 = *(_QWORD *)(v76 - 8);
  MEMORY[0x24BDAC7A8](v76);
  v12 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v69 = (uint64_t)&v67 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v67 - v19;
  if (qword_255E1DB08 != -1)
    swift_once();
  v73 = v8;
  v77 = __swift_project_value_buffer(v13, (uint64_t)qword_255E295C8);
  sub_22F87BC08(v77, (uint64_t)v20);
  v21 = sub_22F98DAA4();
  v79 = *(_QWORD *)(v21 - 8);
  v78 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48);
  if (v78(v20, 1, v21) == 1)
  {
    sub_22F87AC20((uint64_t)v20, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    v22 = v4;
    v23 = sub_22F98DA8C();
    v24 = sub_22F98F07C();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = v16;
      v26 = v21;
      v27 = a1;
      v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v28 = 0;
      _os_log_impl(&dword_22F85B000, v23, v24, "RegistrationRemoteViewController: configure", v28, 2u);
      v29 = v28;
      a1 = v27;
      v21 = v26;
      v16 = v25;
      MEMORY[0x2348A6838](v29, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v79 + 8))(v20, v21);
    v4 = v22;
  }
  v84 = sub_22F8CEAD0;
  v85 = 0;
  *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v83 = sub_22F8CFF4C;
  *((_QWORD *)&v83 + 1) = &block_descriptor_17;
  v30 = _Block_copy(&aBlock);
  v31 = objc_msgSend(v4, sel__remoteViewControllerProxyWithErrorHandler_, v30);
  _Block_release(v30);
  if (v31)
  {
    sub_22F98F25C();
    swift_unknownObjectRelease();
  }
  else
  {
    aBlock = 0u;
    v83 = 0u;
  }
  sub_22F8CFEE4((uint64_t)&aBlock, (uint64_t)&v86);
  if (*((_QWORD *)&v87 + 1))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E22CE8);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v32 = v80;
      objc_msgSend(v80, sel_setAllowsAlertStacking_, 1);
      objc_msgSend(v32, sel_setLaunchingInterfaceOrientation_, 1);
      objc_msgSend(v32, sel_setOrientationChangedEventsEnabled_, 0);
    }
  }
  else
  {
    sub_22F87AC20((uint64_t)&v86, &qword_255E22DD0);
  }
  sub_22F929F38(v4);
  if (!a1)
  {
    __break(1u);
    goto LABEL_47;
  }
  v33 = objc_msgSend(a1, sel_userInfo);
  if (!v33)
  {
    v86 = 0u;
    v87 = 0u;
LABEL_27:
    sub_22F87AC20((uint64_t)&v86, &qword_255E22DD0);
    goto LABEL_28;
  }
  v34 = v33;
  v35 = a1;
  v68 = v4;
  v36 = sub_22F98ED1C();

  v37 = v76;
  (*(void (**)(char *, _QWORD, unint64_t))(v10 + 104))(v12, *MEMORY[0x24BDE4150], v76);
  v38 = (void *)sub_22F98D624();
  v40 = v39;
  (*(void (**)(char *, unint64_t))(v10 + 8))(v12, v37);
  v80 = v38;
  v81 = v40;
  sub_22F98F304();
  if (*(_QWORD *)(v36 + 16) && (v41 = sub_22F979FD0((uint64_t)&aBlock), (v42 & 1) != 0))
  {
    sub_22F87A584(*(_QWORD *)(v36 + 56) + 32 * v41, (uint64_t)&v86);
  }
  else
  {
    v86 = 0u;
    v87 = 0u;
  }
  v43 = v35;
  sub_22F8AB05C((uint64_t)&aBlock);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v87 + 1))
    goto LABEL_27;
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_28:
    sub_22F87BC08(v77, (uint64_t)v16);
    if (v78(v16, 1, v21) == 1)
    {
      swift_unknownObjectRelease();
      v48 = (uint64_t)v16;
LABEL_30:
      sub_22F87AC20(v48, (uint64_t *)&unk_255E206E0);
      return;
    }
    v49 = sub_22F98DA8C();
    v50 = sub_22F98F088();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v51 = 0;
      _os_log_impl(&dword_22F85B000, v49, v50, "Unable to fetch registration type", v51, 2u);
      MEMORY[0x2348A6838](v51, -1, -1);
    }

    swift_unknownObjectRelease();
    v52 = *(void (**)(char *, uint64_t))(v79 + 8);
    v53 = v16;
LABEL_34:
    v52(v53, v21);
    return;
  }
  v44 = *((_QWORD *)&aBlock + 1);
  v45 = aBlock;
  v46 = objc_allocWithZone(MEMORY[0x24BDD1620]);
  sub_22F87C28C(v45, v44);
  v54 = sub_22F9589DC();
  sub_22F87A9F4(v45, v44);
  v55 = v73;
  if (!v54)
  {
    v47 = (uint64_t)v74;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v75 + 56))(v74, 1, 1, v73);
LABEL_25:
    sub_22F87A9F4(v45, v44);
    sub_22F87AC20(v47, &qword_255E22CF0);
    goto LABEL_28;
  }
  *(_QWORD *)&aBlock = v73;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E22CF8);
  sub_22F98EE18();
  v76 = v44;
  sub_22F862548((unint64_t *)&unk_255E22D00, (uint64_t (*)(uint64_t))MEMORY[0x24BDE4368], MEMORY[0x24BDE4380]);
  v47 = (uint64_t)v74;
  sub_22F98F0AC();
  v44 = v76;
  swift_bridgeObjectRelease();
  objc_msgSend(v54, sel_finishDecoding);

  v56 = v75;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v47, 1, v55) == 1)
    goto LABEL_25;
  v57 = (uint64_t)v72;
  (*(void (**)(char *, uint64_t, uint64_t))(v56 + 32))(v72, v47, v55);
  v58 = objc_msgSend(v43, sel_xpcEndpoint);
  if (!v58)
  {
    v63 = v69;
    sub_22F87BC08(v77, v69);
    if (v78((char *)v63, 1, v21) == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v57, v55);
      swift_unknownObjectRelease();
      sub_22F87A9F4(v45, v76);
      v48 = v63;
      goto LABEL_30;
    }
    v64 = sub_22F98DA8C();
    v65 = sub_22F98F088();
    if (os_log_type_enabled(v64, v65))
    {
      v66 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v66 = 0;
      _os_log_impl(&dword_22F85B000, v64, v65, "Unable to retrieve xpcEndpoint", v66, 2u);
      MEMORY[0x2348A6838](v66, -1, -1);
      sub_22F87A9F4(v45, v76);
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
      sub_22F87A9F4(v45, v76);
    }

    (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v57, v55);
    v52 = *(void (**)(char *, uint64_t))(v79 + 8);
    v53 = (char *)v63;
    goto LABEL_34;
  }
  v59 = v58;
  v60 = *(_QWORD *)&v68[OBJC_IVAR____TtC19ContactlessReaderUI28RegRemoteAlertViewController_suppressible + 24];
  v61 = *(_QWORD *)&v68[OBJC_IVAR____TtC19ContactlessReaderUI28RegRemoteAlertViewController_suppressible + 32];
  __swift_project_boxed_opaque_existential_1(&v68[OBJC_IVAR____TtC19ContactlessReaderUI28RegRemoteAlertViewController_suppressible], v60);
  (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v60, v61);
  v62 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD19A0]), sel_init);
  objc_msgSend(v62, sel__setEndpoint_, v59);
  sub_22F8CEE5C(v57, (uint64_t)v62);
  if (v71)
  {
    v71();
    sub_22F87A9F4(v45, v76);
    swift_unknownObjectRelease();

    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v57, v55);
    return;
  }
LABEL_47:
  __break(1u);
}

uint64_t sub_22F8CEAD0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD v17[2];
  uint64_t v18;
  uint64_t v19;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB08 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_255E295C8);
  sub_22F87BC08(v5, (uint64_t)v4);
  v6 = sub_22F98DAA4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
    return sub_22F87AC20((uint64_t)v4, (uint64_t *)&unk_255E206E0);
  v9 = a1;
  v10 = a1;
  v11 = sub_22F98DA8C();
  v12 = sub_22F98F088();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v18 = (uint64_t)a1;
    v19 = v14;
    *(_DWORD *)v13 = 136446210;
    v17[1] = v13 + 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E1FD20);
    v15 = sub_22F98F1E4();
    v18 = sub_22F878880(v15, v16, &v19);
    sub_22F98F208();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_22F85B000, v11, v12, "Configuration Error: %{public}s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348A6838](v14, -1, -1);
    MEMORY[0x2348A6838](v13, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v4, v6);
}

void sub_22F8CEE5C(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  void *v26;
  id v27;
  _QWORD v28[5];
  uint64_t v29;

  v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v28[3] = type metadata accessor for RegRemoteAlertViewController();
  v28[4] = &off_24FD22070;
  v28[0] = v2;
  v7 = v2;
  sub_22F8CF20C(a1, a2, v28, (uint64_t)sub_22F8CFBDC, v6, (uint64_t)sub_22F8CFBD4, v5, &v29);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v28);
  v8 = v29;
  v9 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_255E22CC0));
  v28[0] = v8;
  swift_retain_n();
  v10 = (void *)sub_22F98E140();
  v11 = objc_msgSend(v10, sel_view);
  if (!v11)
  {
    __break(1u);
    goto LABEL_6;
  }
  v12 = v11;
  v13 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  objc_msgSend(v12, sel_setBackgroundColor_, v13);
  swift_release();

  v14 = objc_msgSend(v10, sel_view);
  if (!v14)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v15 = v14;
  v16 = objc_msgSend(v7, sel_view);
  if (v16)
  {
    v17 = v16;
    objc_msgSend(v16, sel_frame);
    v19 = v18;
    v21 = v20;
    v23 = v22;
    v25 = v24;

    objc_msgSend(v15, sel_setFrame_, v19, v21, v23, v25);
    objc_msgSend(v10, sel_setModalPresentationStyle_, 0);
    v26 = *(void **)&v7[OBJC_IVAR____TtC19ContactlessReaderUI28RegRemoteAlertViewController_regViewController];
    *(_QWORD *)&v7[OBJC_IVAR____TtC19ContactlessReaderUI28RegRemoteAlertViewController_regViewController] = v10;
    v27 = v10;

    objc_msgSend(v7, sel_presentViewController_animated_completion_, v27, 1, 0);
    swift_release();
    swift_release();
    swift_release();

    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_22F8CF0CC(char a1, uint64_t a2)
{
  uint64_t v4;

  sub_22F98DA50();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a2;
  *(_BYTE *)(v4 + 24) = a1;
  swift_retain();
  sub_22F98DA38();
  return swift_release();
}

void sub_22F8CF140(uint64_t a1, char a2)
{
  uint64_t v3;
  void *v4;
  void *v5;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = (void *)MEMORY[0x2348A68F8](v3);
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, sel_dismissViewControllerAnimated_completion_, a2 & 1, 0);

  }
}

void *sub_22F8CF1A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x2348A68F8](v1);
  if (!v2)
    return 0;
  v3 = (void *)v2;
  v4 = *(void **)(v2 + OBJC_IVAR____TtC19ContactlessReaderUI28RegRemoteAlertViewController_regViewController);
  v5 = v4;

  return v4;
}

uint64_t sub_22F8CF20C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t result;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t KeyPath;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  _QWORD *v70;
  char *v71;
  uint64_t v72;
  uint64_t *v73;

  v72 = a6;
  v73 = a8;
  v66 = a4;
  v67 = a5;
  v70 = a3;
  v64 = type metadata accessor for IdentityRegistrationSheet();
  MEMORY[0x24BDAC7A8](v64);
  v12 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EF70);
  MEMORY[0x24BDAC7A8](v13);
  v71 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22CC8);
  MEMORY[0x24BDAC7A8](v15);
  v69 = (uint64_t *)((char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v68 = type metadata accessor for RegSheet();
  MEMORY[0x24BDAC7A8](v68);
  v65 = (uint64_t)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v64 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v64 - v22;
  v24 = sub_22F98D744();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v64 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v27, a1, v24);
  v28 = (*(uint64_t (**)(char *, uint64_t))(v25 + 88))(v27, v24);
  if (v28 == *MEMORY[0x24BDE4360])
  {
    (*(void (**)(char *, uint64_t))(v25 + 96))(v27, v24);
    v29 = *(_QWORD *)v27;
    v30 = *((_QWORD *)v27 + 1);
    v31 = v27[16];
    type metadata accessor for RegistrationViewModel();
    swift_allocObject();
    v32 = sub_22F952860();
    sub_22F94DCE0(a2);
    v33 = (_QWORD *)(v32 + OBJC_IVAR____TtC19ContactlessReaderUI21RegistrationViewModel_dismissalHandler);
    v34 = *(_QWORD *)(v32 + OBJC_IVAR____TtC19ContactlessReaderUI21RegistrationViewModel_dismissalHandler);
    *v33 = v72;
    v33[1] = a7;
    swift_retain();
    sub_22F87A9B8(v34);
    sub_22F94E218(v29, v30, v31);
    swift_bridgeObjectRelease();
    if (qword_255E1DB08 != -1)
      swift_once();
    v35 = __swift_project_value_buffer(v18, (uint64_t)qword_255E295C8);
    sub_22F87BC08(v35, (uint64_t)v23);
    v36 = sub_22F98DAA4();
    v37 = *(_QWORD *)(v36 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v23, 1, v36) == 1)
    {
      sub_22F87AC20((uint64_t)v23, (uint64_t *)&unk_255E206E0);
      v38 = *(void **)(v32 + 16);
      if (!v38)
        goto LABEL_11;
    }
    else
    {
      sub_22F863858(v32, 0xD00000000000001ALL, 0x800000022F9A0010, 0, 0xE000000000000000);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v23, v36);
      v38 = *(void **)(v32 + 16);
      if (!v38)
      {
LABEL_11:
        v51 = (_QWORD *)(v32 + OBJC_IVAR____TtC19ContactlessReaderUI21RegistrationViewModel_retrieveHostController);
        v52 = *(_QWORD *)(v32 + OBJC_IVAR____TtC19ContactlessReaderUI21RegistrationViewModel_retrieveHostController);
        v53 = v67;
        *v51 = v66;
        v51[1] = v53;
        swift_retain();
        sub_22F87A9B8(v52);
        *(_QWORD *)(*__swift_project_boxed_opaque_existential_1(v70, v70[3])
                  + OBJC_IVAR____TtC19ContactlessReaderUI28RegRemoteAlertViewController_viewDisappearListener
                  + 8) = &off_24FD274C0;
        swift_unknownObjectWeakAssign();
        KeyPath = swift_getKeyPath();
        v55 = (uint64_t)v69;
        *v69 = KeyPath;
        __swift_instantiateConcreteTypeFromMangledName(&qword_255E22CD0);
        swift_storeEnumTagMultiPayload();
        sub_22F87CDF0();
        swift_retain();
        v56 = (uint64_t)v71;
        sub_22F98E2B4();
        sub_22F90A3E8((uint64_t)sub_22F87BBBC, v32, v55, v56, v65);
        sub_22F862548(&qword_255E22CE0, (uint64_t (*)(uint64_t))type metadata accessor for RegSheet, (uint64_t)&unk_22F997EC0);
        v57 = sub_22F98E980();
        result = swift_release();
        *v73 = v57;
        return result;
      }
    }
    objc_msgSend(v38, sel_regUIDidLoad, v64);
    goto LABEL_11;
  }
  v39 = a2;
  v40 = v72;
  if (v28 == *MEMORY[0x24BDE4358])
  {
    (*(void (**)(char *, uint64_t))(v25 + 96))(v27, v24);
    v41 = *(_QWORD *)v27;
    v42 = *((_QWORD *)v27 + 1);
    type metadata accessor for IdentityRegistrationViewModel();
    swift_allocObject();
    v43 = sub_22F8A2C40(v41, v42);
    sub_22F8A3254(v39);
    v44 = (_QWORD *)(v43 + OBJC_IVAR____TtC19ContactlessReaderUI29IdentityRegistrationViewModel_dismissalHandler);
    v45 = *(_QWORD *)(v43 + OBJC_IVAR____TtC19ContactlessReaderUI29IdentityRegistrationViewModel_dismissalHandler);
    *v44 = v40;
    v44[1] = a7;
    sub_22F87A9B8(v45);
    *(_QWORD *)(*__swift_project_boxed_opaque_existential_1(v70, v70[3])
              + OBJC_IVAR____TtC19ContactlessReaderUI28RegRemoteAlertViewController_viewDisappearListener
              + 8) = &off_24FD20350;
    swift_unknownObjectWeakAssign();
    v46 = swift_getKeyPath();
    v47 = (uint64_t)v69;
    *v69 = v46;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E22CD0);
    swift_storeEnumTagMultiPayload();
    sub_22F87CDF0();
    swift_retain();
    swift_retain();
    v48 = (uint64_t)v71;
    sub_22F98E2B4();
    sub_22F98E818();
    sub_22F91B3B4((uint64_t)sub_22F87BBBC, v43, v47, v48, (uint64_t)v12);
    sub_22F862548(&qword_255E22CD8, (uint64_t (*)(uint64_t))type metadata accessor for IdentityRegistrationSheet, (uint64_t)&unk_22F998550);
    v49 = sub_22F98E980();
    result = swift_release();
    *v73 = v49;
  }
  else
  {
    if (qword_255E1DB08 != -1)
      swift_once();
    v58 = __swift_project_value_buffer(v18, (uint64_t)qword_255E295C8);
    sub_22F87BC08(v58, (uint64_t)v21);
    v59 = sub_22F98DAA4();
    v60 = *(_QWORD *)(v59 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v21, 1, v59) == 1)
    {
      sub_22F87AC20((uint64_t)v21, (uint64_t *)&unk_255E206E0);
    }
    else
    {
      v61 = sub_22F98DA8C();
      v62 = sub_22F98F088();
      if (os_log_type_enabled(v61, v62))
      {
        v63 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v63 = 0;
        _os_log_impl(&dword_22F85B000, v61, v62, "Could not determine registration type", v63, 2u);
        MEMORY[0x2348A6838](v63, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v60 + 8))(v21, v59);
    }
    *v73 = sub_22F98E980();
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v27, v24);
  }
  return result;
}

id sub_22F8CF974(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  objc_super v12;

  *(_QWORD *)&v3[OBJC_IVAR____TtC19ContactlessReaderUI28RegRemoteAlertViewController_regViewController] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC19ContactlessReaderUI28RegRemoteAlertViewController_viewDisappearListener + 8] = 0;
  swift_unknownObjectWeakInit();
  v6 = (uint64_t *)&v3[OBJC_IVAR____TtC19ContactlessReaderUI28RegRemoteAlertViewController_suppressible];
  v7 = type metadata accessor for WalletSuppressor();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = 0;
  v6[3] = v7;
  v6[4] = (uint64_t)&protocol witness table for WalletSuppressor;
  *v6 = v8;
  if (a2)
  {
    v9 = (void *)sub_22F98ED94();
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = 0;
  }
  v12.receiver = v3;
  v12.super_class = (Class)type metadata accessor for RegRemoteAlertViewController();
  v10 = objc_msgSendSuper2(&v12, sel_initWithNibName_bundle_, v9, a3);

  return v10;
}

id sub_22F8CFABC(void *a1)
{
  char *v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  objc_super v8;

  *(_QWORD *)&v1[OBJC_IVAR____TtC19ContactlessReaderUI28RegRemoteAlertViewController_regViewController] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19ContactlessReaderUI28RegRemoteAlertViewController_viewDisappearListener + 8] = 0;
  swift_unknownObjectWeakInit();
  v3 = (uint64_t *)&v1[OBJC_IVAR____TtC19ContactlessReaderUI28RegRemoteAlertViewController_suppressible];
  v4 = type metadata accessor for WalletSuppressor();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = 0;
  v3[3] = v4;
  v3[4] = (uint64_t)&protocol witness table for WalletSuppressor;
  *v3 = v5;
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for RegRemoteAlertViewController();
  v6 = objc_msgSendSuper2(&v8, sel_initWithCoder_, a1);

  return v6;
}

uint64_t type metadata accessor for RegRemoteAlertViewController()
{
  return objc_opt_self();
}

uint64_t sub_22F8CFBB0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_22F8CFBD4(char a1)
{
  uint64_t v1;

  return sub_22F8CF0CC(a1, v1);
}

void *sub_22F8CFBDC()
{
  uint64_t v0;

  return sub_22F8CF1A4(v0);
}

uint64_t sub_22F8CFBE4()
{
  return sub_22F98E020();
}

uint64_t sub_22F8CFC04()
{
  return sub_22F98E020();
}

uint64_t sub_22F8CFC24()
{
  swift_release();
  return swift_deallocObject();
}

void sub_22F8CFC48()
{
  uint64_t v0;

  sub_22F8CF140(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_22F8CFC54()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  id v14[2];
  _OWORD v15[2];
  _BYTE v16[24];
  uint64_t v17;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB08 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_255E295C8);
  sub_22F87BC08(v5, (uint64_t)v4);
  v6 = sub_22F98DAA4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_22F87AC20((uint64_t)v4, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    v8 = sub_22F98DA8C();
    v9 = sub_22F98F07C();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_22F85B000, v8, v9, "dismiss RegRemoteAlertViewController", v10, 2u);
      MEMORY[0x2348A6838](v10, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  if ((objc_msgSend(v1, sel_isViewLoaded) & 1) == 0)
  {
    v11 = *(_QWORD *)&v1[OBJC_IVAR____TtC19ContactlessReaderUI28RegRemoteAlertViewController_suppressible + 24];
    v12 = *(_QWORD *)&v1[OBJC_IVAR____TtC19ContactlessReaderUI28RegRemoteAlertViewController_suppressible + 32];
    __swift_project_boxed_opaque_existential_1(&v1[OBJC_IVAR____TtC19ContactlessReaderUI28RegRemoteAlertViewController_suppressible], v11);
    (*(void (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
  }
  if (objc_msgSend(v1, sel__remoteViewControllerProxy))
  {
    sub_22F98F25C();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v15, 0, sizeof(v15));
  }
  sub_22F8CFEE4((uint64_t)v15, (uint64_t)v16);
  if (!v17)
    return sub_22F87AC20((uint64_t)v16, &qword_255E22DD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E22CE8);
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    objc_msgSend(v14[1], sel_invalidate);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_22F8CFEB8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_22F8CFEDC()
{
  uint64_t v0;

  return sub_22F955750(*(_QWORD *)(v0 + 16));
}

uint64_t sub_22F8CFEE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22DD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t block_copy_helper_16(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_16()
{
  return swift_release();
}

void sub_22F8CFF4C(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(a2);
  swift_release();

}

uint64_t sub_22F8CFFD4(uint64_t a1, uint64_t a2, void *a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  unint64_t v19;
  unint64_t v20;
  id v21;
  unint64_t *v22;
  uint64_t v23;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;

  v5 = v4;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v28 - v13;
  swift_unknownObjectWeakAssign();
  if (qword_255E1DB20 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v9, (uint64_t)qword_255E29610);
  sub_22F87BC08(v15, (uint64_t)v14);
  v16 = sub_22F98DAA4();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (v18(v14, 1, v16) == 1)
  {
    sub_22F87AC20((uint64_t)v14, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858(v5, 0xD000000000000026, 0x800000022F9A0030, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v16);
  }
  v19 = sub_22F8D0264(a2);
  if (v19)
  {
    v20 = v19;
    v21 = objc_msgSend(a3, sel__endpoint);
    v22 = (unint64_t *)(v5 + OBJC_IVAR____TtC19ContactlessReaderUI24TapRemoteSceneController_context);
    v23 = *(_QWORD *)(v5 + OBJC_IVAR____TtC19ContactlessReaderUI24TapRemoteSceneController_context);
    *v22 = v20;
    v22[1] = (unint64_t)v21;
    v22[2] = a4;
    swift_unknownObjectRetain();
    return sub_22F8D535C(v23);
  }
  else
  {
    sub_22F87BC08(v15, (uint64_t)v12);
    if (v18(v12, 1, v16) == 1)
    {
      return sub_22F87AC20((uint64_t)v12, (uint64_t *)&unk_255E206E0);
    }
    else
    {
      v25 = sub_22F98DA8C();
      v26 = sub_22F98F088();
      if (os_log_type_enabled(v25, v26))
      {
        v27 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v27 = 0;
        _os_log_impl(&dword_22F85B000, v25, v26, "Cannot convert userInfo", v27, 2u);
        MEMORY[0x2348A6838](v27, -1, -1);
      }

      return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v12, v16);
    }
  }
}

unint64_t sub_22F8D0264(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t result;
  int64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  __int128 v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  __int128 v24;
  _OWORD v25[2];
  _OWORD v26[2];
  __int128 v27;
  _OWORD v28[2];
  _OWORD v29[2];
  _OWORD v30[2];
  _OWORD v31[2];
  uint64_t v32;
  _OWORD v33[2];
  _OWORD v34[2];
  uint64_t v35;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E22E28);
    v2 = (_QWORD *)sub_22F98F3C4();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  v23 = a1 + 64;
  v3 = -1;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v3 = ~(-1 << -(char)v4);
  v5 = v3 & *(_QWORD *)(a1 + 64);
  v22 = (unint64_t)(63 - v4) >> 6;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  while (1)
  {
    if (v5)
    {
      v10 = (v5 - 1) & v5;
      v11 = __clz(__rbit64(v5)) | (v7 << 6);
      v12 = v7;
    }
    else
    {
      v13 = v7 + 1;
      if (__OFADD__(v7, 1))
        goto LABEL_37;
      if (v13 >= v22)
      {
LABEL_33:
        sub_22F8D5B2C();
        return (unint64_t)v2;
      }
      v14 = *(_QWORD *)(v23 + 8 * v13);
      v12 = v7 + 1;
      if (!v14)
      {
        v12 = v7 + 2;
        if (v7 + 2 >= v22)
          goto LABEL_33;
        v14 = *(_QWORD *)(v23 + 8 * v12);
        if (!v14)
        {
          v12 = v7 + 3;
          if (v7 + 3 >= v22)
            goto LABEL_33;
          v14 = *(_QWORD *)(v23 + 8 * v12);
          if (!v14)
          {
            v12 = v7 + 4;
            if (v7 + 4 >= v22)
              goto LABEL_33;
            v14 = *(_QWORD *)(v23 + 8 * v12);
            if (!v14)
            {
              v15 = v7 + 5;
              if (v7 + 5 >= v22)
                goto LABEL_33;
              v14 = *(_QWORD *)(v23 + 8 * v15);
              if (!v14)
              {
                while (1)
                {
                  v12 = v15 + 1;
                  if (__OFADD__(v15, 1))
                    goto LABEL_38;
                  if (v12 >= v22)
                    goto LABEL_33;
                  v14 = *(_QWORD *)(v23 + 8 * v12);
                  ++v15;
                  if (v14)
                    goto LABEL_26;
                }
              }
              v12 = v7 + 5;
            }
          }
        }
      }
LABEL_26:
      v10 = (v14 - 1) & v14;
      v11 = __clz(__rbit64(v14)) + (v12 << 6);
    }
    sub_22F8D5B80(*(_QWORD *)(a1 + 48) + 40 * v11, (uint64_t)v33);
    sub_22F87A584(*(_QWORD *)(a1 + 56) + 32 * v11, (uint64_t)v34 + 8);
    v31[0] = v34[0];
    v31[1] = v34[1];
    v32 = v35;
    v30[0] = v33[0];
    v30[1] = v33[1];
    sub_22F8D5B80((uint64_t)v30, (uint64_t)v25);
    if (!swift_dynamicCast())
    {
      sub_22F87AC20((uint64_t)v30, (uint64_t *)&unk_255E22E30);
      swift_bridgeObjectRelease();
      sub_22F8D5B2C();
      swift_release();
      return 0;
    }
    sub_22F87A584((uint64_t)v31 + 8, (uint64_t)v25);
    sub_22F87AC20((uint64_t)v30, (uint64_t *)&unk_255E22E30);
    sub_22F8AD49C(v25, v26);
    v27 = v24;
    sub_22F8AD49C(v26, v28);
    v16 = v27;
    sub_22F8AD49C(v28, v29);
    sub_22F8AD49C(v29, &v27);
    result = sub_22F979EB0(v16, *((uint64_t *)&v16 + 1));
    v17 = result;
    if ((v18 & 1) != 0)
    {
      v8 = (_OWORD *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v8 = v16;
      v9 = (_OWORD *)(v2[7] + 32 * v17);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
      result = (unint64_t)sub_22F8AD49C(&v27, v9);
      goto LABEL_8;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_OWORD *)(v2[6] + 16 * result) = v16;
    result = (unint64_t)sub_22F8AD49C(&v27, (_OWORD *)(v2[7] + 32 * result));
    v19 = v2[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_36;
    v2[2] = v21;
LABEL_8:
    v7 = v12;
    v5 = v10;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

id TapRemoteSceneController.__deallocating_deinit()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  objc_class *v11;
  objc_super v13;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB20 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_255E29610);
  sub_22F87BC08(v5, (uint64_t)v4);
  v6 = sub_22F98DAA4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_22F87AC20((uint64_t)v4, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    v8 = sub_22F98DA8C();
    v9 = sub_22F98F07C();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_22F85B000, v8, v9, "TapRemoteSceneController: destroyed", v10, 2u);
      MEMORY[0x2348A6838](v10, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  v11 = (objc_class *)type metadata accessor for TapRemoteSceneController();
  v13.receiver = v1;
  v13.super_class = v11;
  return objc_msgSendSuper2(&v13, sel_dealloc);
}

void sub_22F8D0864(char a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  objc_class *v10;
  objc_super v11;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB20 != -1)
    swift_once();
  v7 = __swift_project_value_buffer(v4, (uint64_t)qword_255E29610);
  sub_22F87BC08(v7, (uint64_t)v6);
  v8 = sub_22F98DAA4();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
  {
    sub_22F87AC20((uint64_t)v6, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858((uint64_t)v2, 0xD000000000000012, 0x800000022F9A0060, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  v10 = (objc_class *)type metadata accessor for TapRemoteSceneController();
  v11.receiver = v2;
  v11.super_class = v10;
  objc_msgSendSuper2(&v11, sel_viewWillAppear_, a1 & 1);
  if (qword_255E1DB78 != -1)
    swift_once();
  BrightnessManager.increaseBrightnessIfNeeded()();
}

uint64_t sub_22F8D0A20(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  objc_class *v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  id v18;
  id v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[2];
  objc_super v25;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v24 - v8;
  if (qword_255E1DB20 != -1)
    swift_once();
  v10 = __swift_project_value_buffer(v4, (uint64_t)qword_255E29610);
  sub_22F87BC08(v10, (uint64_t)v9);
  v11 = sub_22F98DAA4();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v13(v9, 1, v11) == 1)
  {
    sub_22F87AC20((uint64_t)v9, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858((uint64_t)v2, 0xD000000000000011, 0x800000022F9A0080, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
  }
  v14 = (objc_class *)type metadata accessor for TapRemoteSceneController();
  v25.receiver = v2;
  v25.super_class = v14;
  objc_msgSendSuper2(&v25, sel_viewDidAppear_, a1 & 1);
  sub_22F87BC08(v10, (uint64_t)v7);
  if (v13(v7, 1, v11) == 1)
  {
    sub_22F87AC20((uint64_t)v7, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    v15 = sub_22F98DA8C();
    v16 = sub_22F98F0A0();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v17 = 134217984;
      v24[0] = v17 + 4;
      v18 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
      v19 = objc_msgSend(v18, sel_applicationState);

      v24[1] = v19;
      sub_22F98F208();
      _os_log_impl(&dword_22F85B000, v15, v16, "TapRemoteSceneController - appState: %ld", v17, 0xCu);
      MEMORY[0x2348A6838](v17, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v11);
  }
  v20 = &v2[OBJC_IVAR____TtC19ContactlessReaderUI24TapRemoteSceneController_walletSuppressor];
  v21 = *(_QWORD *)&v2[OBJC_IVAR____TtC19ContactlessReaderUI24TapRemoteSceneController_walletSuppressor + 24];
  v22 = *((_QWORD *)v20 + 4);
  __swift_project_boxed_opaque_existential_1(v20, v21);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(v21, v22);
}

id sub_22F8D0D28()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  objc_class *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  objc_super v19;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v19 - v6;
  if (qword_255E1DB20 != -1)
    swift_once();
  v8 = __swift_project_value_buffer(v2, (uint64_t)qword_255E29610);
  sub_22F87BC08(v8, (uint64_t)v7);
  v9 = sub_22F98DAA4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v7, 1, v9) == 1)
  {
    sub_22F87AC20((uint64_t)v7, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858((uint64_t)v1, 0x4C64694477656976, 0xED0000292864616FLL, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
  }
  v12 = (objc_class *)type metadata accessor for TapRemoteSceneController();
  v19.receiver = v1;
  v19.super_class = v12;
  objc_msgSendSuper2(&v19, sel_viewDidLoad);
  sub_22F8D1EA8();
  v13 = *(_QWORD *)&v1[OBJC_IVAR____TtC19ContactlessReaderUI24TapRemoteSceneController_context];
  if (v13)
  {
    v14 = *(_QWORD *)&v1[OBJC_IVAR____TtC19ContactlessReaderUI24TapRemoteSceneController_context + 8];
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    sub_22F8D1800(v13, v14);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    return (id)swift_bridgeObjectRelease();
  }
  else
  {
    sub_22F87BC08(v8, (uint64_t)v5);
    if (v11(v5, 1, v9) == 1)
    {
      sub_22F87AC20((uint64_t)v5, (uint64_t *)&unk_255E206E0);
    }
    else
    {
      v16 = sub_22F98DA8C();
      v17 = sub_22F98F07C();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v18 = 0;
        _os_log_impl(&dword_22F85B000, v16, v17, "TapRemoteSceneController: no context", v18, 2u);
        MEMORY[0x2348A6838](v18, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v10 + 8))(v5, v9);
    }
    return objc_msgSend(v1, sel_dismissViewControllerAnimated_completion_, 1, 0);
  }
}

void sub_22F8D1158()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t (*v12)(void *);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  _QWORD aBlock[3];
  void *v20;
  uint64_t (*v21)(void *);
  uint64_t v22;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&aBlock[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB78 != -1)
    swift_once();
  BrightnessManager.resetBrightnessToSystemDefault()();
  if (qword_255E1DB70 != -1)
    swift_once();
  swift_beginAccess();
  v4 = (void *)*((_QWORD *)off_255E211B8 + 6);
  if (v4)
    objc_msgSend(v4, sel_tapUIFinishedWithExpected_issuerPIN_, *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI24TapRemoteSceneController_dismissalExpected), *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI24TapRemoteSceneController_issuerPIN));
  if (qword_255E1DB20 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v1, (uint64_t)qword_255E29610);
  sub_22F87BC08(v5, (uint64_t)v3);
  v6 = sub_22F98DAA4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v3, 1, v6) == 1)
  {
    sub_22F87AC20((uint64_t)v3, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858(v0, 0xD000000000000013, 0x800000022F9A00C0, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v3, v6);
  }
  v8 = *(_QWORD *)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI24TapRemoteSceneController_suppressor);
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    v10 = v8 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_22F87A750(v10, (uint64_t)aBlock);
      v11 = v20;
      v12 = v21;
      __swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v20);
      (*((void (**)(void *, uint64_t (*)(void *)))v12 + 2))(v11, v12);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)aBlock);
      v10 += 40;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
  v13 = *(_QWORD *)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI24TapRemoteSceneController_walletSuppressor + 24);
  v14 = *(_QWORD *)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI24TapRemoteSceneController_walletSuppressor + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI24TapRemoteSceneController_walletSuppressor), v13);
  (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI24TapRemoteSceneController_subscriptions) = MEMORY[0x24BEE4B08];
  swift_bridgeObjectRelease();
  swift_retain();
  sub_22F8A83B0();
  swift_release();
  v15 = *(_QWORD *)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI24TapRemoteSceneController_context);
  if (v15)
  {
    v16 = *(void **)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI24TapRemoteSceneController_context + 16);
    sub_22F8D53B4(v15);
    swift_unknownObjectRetain();
    sub_22F8D535C(v15);
    v21 = sub_22F8D14AC;
    v22 = 0;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_22F8CFF4C;
    v20 = &block_descriptor_18;
    v17 = _Block_copy(aBlock);
    objc_msgSend(v16, sel_invalidateRemoteUI_, v17);
    swift_unknownObjectRelease();
    _Block_release(v17);
  }
}

uint64_t sub_22F8D14AC(void *a1)
{
  return sub_22F8D14F0(a1);
}

uint64_t sub_22F8D14F0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  _QWORD *v14;
  id v15;
  uint64_t v16;
  _QWORD v17[2];

  v17[1] = *MEMORY[0x24BDAC8D0];
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB20 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_255E29610);
  sub_22F87BC08(v5, (uint64_t)v4);
  v6 = sub_22F98DAA4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
    return sub_22F87AC20((uint64_t)v4, (uint64_t *)&unk_255E206E0);
  v9 = a1;
  v10 = a1;
  v11 = sub_22F98DA8C();
  v12 = sub_22F98F0A0();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v13 = 138412290;
    if (a1)
    {
      v15 = a1;
      v16 = _swift_stdlib_bridgeErrorToNSError();
      v17[0] = v16;
      sub_22F98F208();
    }
    else
    {
      v17[0] = 0;
      sub_22F98F208();
      v16 = 0;
    }
    *v14 = v16;

    _os_log_impl(&dword_22F85B000, v11, v12, "cound not invalidate remote ui - %@", v13, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E22DE0);
    swift_arrayDestroy();
    MEMORY[0x2348A6838](v14, -1, -1);
    MEMORY[0x2348A6838](v13, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v4, v6);
}

void sub_22F8D1800(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  id v15;
  void *v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  double Width;
  id v26;
  void *v27;
  double v28;
  CGFloat v29;
  double v30;
  CGFloat v31;
  double v32;
  CGFloat v33;
  double v34;
  CGFloat v35;
  double Height;
  double v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  double v48;
  CGRect v49;
  CGRect v50;

  v3 = v2;
  v47 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v47 - v9;
  if (qword_255E1DB20 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v5, (uint64_t)qword_255E29610);
  sub_22F87BC08(v11, (uint64_t)v10);
  v12 = sub_22F98DAA4();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v14(v10, 1, v12) == 1)
  {
    sub_22F87AC20((uint64_t)v10, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858((uint64_t)v3, 0xD000000000000010, 0x800000022F9A03B0, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
  }
  sub_22F8D1BEC(0);
  v15 = objc_msgSend(v3, sel_view);
  if (!v15)
  {
    __break(1u);
    goto LABEL_20;
  }
  v16 = v15;
  objc_msgSend(v15, sel_frame);
  v18 = v17;
  v20 = v19;
  v22 = v21;
  v24 = v23;

  v49.origin.x = v18;
  v49.origin.y = v20;
  v49.size.width = v22;
  v49.size.height = v24;
  Width = CGRectGetWidth(v49);
  v26 = objc_msgSend(v3, sel_view);
  if (!v26)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v27 = v26;
  objc_msgSend(v26, sel_frame);
  v29 = v28;
  v31 = v30;
  v33 = v32;
  v35 = v34;

  v50.origin.x = v29;
  v50.origin.y = v31;
  v50.size.width = v33;
  v50.size.height = v35;
  Height = CGRectGetHeight(v50);
  if (Height >= Width)
  {
LABEL_18:
    v44 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD19A0]), sel_init);
    objc_msgSend(v44, sel__setEndpoint_, a2);
    sub_22F8D285C(v47, v45, v46, (uint64_t)v44);

    return;
  }
  v37 = Height;
  if (qword_255E1DAF8 != -1)
    swift_once();
  v38 = __swift_project_value_buffer(v5, (uint64_t)qword_255E29598);
  sub_22F87BC08(v38, (uint64_t)v8);
  if (v14(v8, 1, v12) == 1)
  {
    sub_22F87AC20((uint64_t)v8, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    v39 = sub_22F98DA8C();
    v40 = sub_22F98F07C();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = swift_slowAlloc();
      *(_DWORD *)v41 = 134218240;
      v48 = v37;
      sub_22F98F208();
      *(_WORD *)(v41 + 12) = 2048;
      v48 = Width;
      sub_22F98F208();
      _os_log_impl(&dword_22F85B000, v39, v40, "Correcting oriented frame: w=%f, h=%f", (uint8_t *)v41, 0x16u);
      MEMORY[0x2348A6838](v41, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v12);
  }
  v42 = objc_msgSend(v3, sel_view, v47);
  if (v42)
  {
    v43 = v42;
    objc_msgSend(v42, sel_setFrame_, 0.0, 0.0, v37, Width);

    goto LABEL_18;
  }
LABEL_21:
  __break(1u);
}

void *sub_22F8D1BEC(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  void *result;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t aBlock;
  unint64_t v18;
  void (*v19)(uint64_t, void *);
  void *v20;
  uint64_t (*v21)();
  uint64_t v22;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB20 != -1)
    swift_once();
  v7 = __swift_project_value_buffer(v4, (uint64_t)qword_255E29610);
  sub_22F87BC08(v7, (uint64_t)v6);
  v8 = sub_22F98DAA4();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
  {
    sub_22F87AC20((uint64_t)v6, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    aBlock = 0;
    v18 = 0xE000000000000000;
    sub_22F98EE9C();
    swift_bridgeObjectRelease();
    sub_22F863858(v2, 0xD000000000000018, 0x800000022F9A02D0, aBlock, v18);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  v10 = a1 & 1;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC19ContactlessReaderUI24TapRemoteSceneController_homeAffordanceOn) = v10;
  result = (void *)MEMORY[0x2348A68F8](v2 + OBJC_IVAR____TtC19ContactlessReaderUI24TapRemoteSceneController_scene);
  if (result)
  {
    v12 = result;
    v13 = objc_msgSend(result, sel__FBSScene);

    v14 = swift_allocObject();
    *(_BYTE *)(v14 + 16) = v10;
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = sub_22F8D59EC;
    *(_QWORD *)(v15 + 24) = v14;
    v21 = sub_22F8D5A04;
    v22 = v15;
    aBlock = MEMORY[0x24BDAC760];
    v18 = 1107296256;
    v19 = sub_22F8D5328;
    v20 = &block_descriptor_18;
    v16 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v13, sel_updateClientSettingsWithBlock_, v16);

    _Block_release(v16);
    LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    result = (void *)swift_release();
    if ((v13 & 1) != 0)
      __break(1u);
  }
  return result;
}

uint64_t sub_22F8D1EA8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  objc_class *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  id v21;
  void *v22;
  id v23;
  uint64_t inited;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  objc_super v43;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22DE8);
  v39 = *(_QWORD *)(v0 - 8);
  v40 = v0;
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v36 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E22DF0);
  v37 = *(_QWORD *)(v3 - 8);
  v38 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EDE0);
  v36 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB20 != -1)
    swift_once();
  v12 = __swift_project_value_buffer(v9, (uint64_t)qword_255E29610);
  sub_22F87BC08(v12, (uint64_t)v11);
  v13 = sub_22F98DAA4();
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) == 1)
  {
    sub_22F87AC20((uint64_t)v11, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858(v41, 0x6E69427075746573, 0xEF292873676E6964, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
  }
  if (qword_255E1DB70 != -1)
    swift_once();
  swift_beginAccess();
  v15 = (char *)off_255E211B8;
  v16 = (objc_class *)type metadata accessor for InterruptionMonitor();
  v17 = (char *)objc_allocWithZone(v16);
  v18 = &v17[OBJC_IVAR____TtC19ContactlessReaderUI19InterruptionMonitor_delegate];
  *(_QWORD *)&v17[OBJC_IVAR____TtC19ContactlessReaderUI19InterruptionMonitor_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v17[OBJC_IVAR____TtC19ContactlessReaderUI19InterruptionMonitor_callObserver] = 0;
  *(_QWORD *)&v17[OBJC_IVAR____TtC19ContactlessReaderUI19InterruptionMonitor_hardwareButtonConsumer] = 0;
  v19 = &v17[OBJC_IVAR____TtC19ContactlessReaderUI19InterruptionMonitor__interruption];
  LOBYTE(v42) = 5;
  swift_retain();
  v20 = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E20610);
  sub_22F98DB7C();
  (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v19, v8, v6);
  *((_QWORD *)v18 + 1) = 0;
  swift_unknownObjectWeakAssign();

  v43.receiver = v20;
  v43.super_class = v16;
  v21 = objc_msgSendSuper2(&v43, sel_init);
  v22 = *(void **)&v15[OBJC_IVAR____TtC19ContactlessReaderUI10AppManager_interruptionMonitor];
  *(_QWORD *)&v15[OBJC_IVAR____TtC19ContactlessReaderUI10AppManager_interruptionMonitor] = v21;
  v23 = v21;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E22E00);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22F995D20;
  swift_beginAccess();
  sub_22F98DB88();
  swift_endAccess();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  v25 = MEMORY[0x24BDB9EE8];
  sub_22F87AA84(&qword_255E1EDE8, (uint64_t *)&unk_255E22DF0, MEMORY[0x24BDB9EE8]);
  v26 = v38;
  v27 = sub_22F98DBC4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v5, v26);
  *(_QWORD *)(inited + 32) = v27;
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E22E10);
  sub_22F98DB88();
  swift_endAccess();
  sub_22F87AA84((unint64_t *)&unk_255E22E18, &qword_255E22DE8, v25);
  v28 = v40;
  v29 = sub_22F98DBC4();
  v30 = *(void (**)(char *, uint64_t))(v39 + 8);
  v30(v2, v28);
  *(_QWORD *)(inited + 40) = v29;
  swift_beginAccess();
  sub_22F98DB88();
  swift_endAccess();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  v31 = sub_22F98DBC4();
  swift_release();
  v30(v2, v28);
  *(_QWORD *)(inited + 48) = v31;
  v42 = inited;
  sub_22F98EF5C();
  v32 = v42;
  if (v42 >> 62)
  {
    swift_bridgeObjectRetain();
    v34 = sub_22F98F3A0();
    swift_bridgeObjectRelease();
    if (v34)
      goto LABEL_10;
LABEL_12:
    v33 = MEMORY[0x24BEE4B08];
    goto LABEL_13;
  }
  if (!*(_QWORD *)((v42 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_12;
LABEL_10:
  v33 = sub_22F8B732C(v32);
LABEL_13:
  swift_bridgeObjectRelease();
  *(_QWORD *)(v41 + OBJC_IVAR____TtC19ContactlessReaderUI24TapRemoteSceneController_subscriptions) = v33;
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_22F8D2474(unsigned __int8 *a1, uint64_t a2)
{
  uint8_t *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = (uint8_t *)*a1;
  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x2348A68F8](v3);
  if (v4)
  {
    v5 = (void *)v4;
    sub_22F8D3D24(v2);

  }
}

uint64_t sub_22F8D24CC(char *a1)
{
  char v1;

  v1 = *a1;
  sub_22F98DA50();
  *(_BYTE *)(swift_allocObject() + 16) = v1;
  sub_22F98DA38();
  return swift_release();
}

void sub_22F8D252C(char a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  id v11;
  _DWORD v12[4];

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DAF8 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_255E29598);
  sub_22F87BC08(v5, (uint64_t)v4);
  v6 = sub_22F98DAA4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_22F87AC20((uint64_t)v4, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    v8 = sub_22F98DA8C();
    v9 = sub_22F98F07C();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v10 = 67109120;
      v12[3] = a1 & 1;
      sub_22F98F208();
      _os_log_impl(&dword_22F85B000, v8, v9, "Controller binding - disable sleep: %{BOOL}d", v10, 8u);
      MEMORY[0x2348A6838](v10, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  v11 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  objc_msgSend(v11, sel_setIdleTimerDisabled_, a1 & 1);

}

void sub_22F8D2704(_BYTE *a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  if (*a1 == 1)
  {
    v2 = a2 + 16;
    swift_beginAccess();
    v3 = (void *)MEMORY[0x2348A68F8](v2);
    if (v3)
    {
      v4 = v3;
      v5 = objc_msgSend(v3, sel_view);

      if (!v5)
      {
        __break(1u);
        return;
      }
      v6 = objc_msgSend(v5, sel_gestureRecognizers);
      if (v6)
      {
        v7 = v6;
        sub_22F898D28(0, &qword_255E20820);
        sub_22F98EF44();
        swift_bridgeObjectRelease();

        v8 = sub_22F98EF38();
        swift_bridgeObjectRelease();
        objc_msgSend(v5, sel_setGestureRecognizers_, v8);

        v5 = (id)v8;
      }
      else
      {
        objc_msgSend(v5, sel_setGestureRecognizers_, 0);
      }

    }
    swift_beginAccess();
    v9 = MEMORY[0x2348A68F8](v2);
    if (v9)
    {
      v10 = (void *)v9;
      sub_22F8D1BEC(0);

    }
  }
}

uint64_t sub_22F8D285C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  unint64_t v36;
  char v37;
  char v38;
  char v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  void *v50;
  NSObject *v51;
  os_log_type_t v52;
  _BOOL4 v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  int v73;
  NSObject *v74;
  os_log_type_t v75;
  _BOOL4 v76;
  uint8_t *v77;
  uint64_t v78;
  void (*v79)(char *, uint64_t);
  void (*v80)(char *, uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unsigned int (*v90)(char *, uint64_t, uint64_t);
  uint64_t v91;
  uint64_t v92;
  _BYTE *v93;
  __int128 v94;
  __int128 v95;
  uint64_t v96;
  uint64_t v97;

  v92 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EDF0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v82 = (uint64_t)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v85 = (uint64_t *)((char *)&v78 - v8);
  v86 = type metadata accessor for TransactionContext(0);
  v9 = *(_QWORD *)(v86 - 8);
  MEMORY[0x24BDAC7A8](v86);
  v87 = (uint64_t)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = sub_22F98D630();
  v11 = *(_QWORD *)(v91 - 8);
  v12 = MEMORY[0x24BDAC7A8](v91);
  v83 = (char *)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v78 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v78 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v17);
  v81 = (uint64_t)&v78 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v78 - v22;
  if (qword_255E1DB20 != -1)
    swift_once();
  v89 = __swift_project_value_buffer(v16, (uint64_t)qword_255E29610);
  sub_22F87BC08(v89, (uint64_t)v23);
  v24 = sub_22F98DAA4();
  v25 = *(_QWORD *)(v24 - 8);
  v90 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
  if (v90(v23, 1, v24) == 1)
  {
    sub_22F87AC20((uint64_t)v23, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858((uint64_t)v93, 0xD000000000000021, 0x800000022F9A0360, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v23, v24);
  }
  v88 = v25;
  if (qword_255E1DB70 != -1)
    swift_once();
  swift_beginAccess();
  v26 = off_255E211B8;
  type metadata accessor for MerchantdProxy();
  swift_allocObject();
  swift_retain();
  v26[6] = sub_22F8D8EE4();
  swift_release();
  if (v26[6])
  {
    swift_retain();
    sub_22F8D93AC(a4);
    swift_release();
  }
  v84 = v9;
  result = swift_unknownObjectWeakAssign();
  v28 = v92;
  if (v92)
  {
    v29 = *MEMORY[0x24BDE4170];
    v30 = v91;
    v80 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
    v80(v15, v29, v91);
    v31 = sub_22F98D624();
    v33 = v32;
    v34 = *(void (**)(char *, uint64_t))(v11 + 8);
    v34(v15, v30);
    v35 = v28;
    if (*(_QWORD *)(v28 + 16) && (v36 = sub_22F979EB0(v31, v33), (v37 & 1) != 0))
    {
      sub_22F87A584(*(_QWORD *)(v28 + 56) + 32 * v36, (uint64_t)&v94);
    }
    else
    {
      v94 = 0u;
      v95 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((_QWORD *)&v95 + 1))
    {
      if ((swift_dynamicCast() & 1) != 0)
      {
        v38 = sub_22F98D8C4();
        if (v38 != 2)
        {
          v79 = v34;
          v39 = v38 & 1;
          v40 = sub_22F98D8D0();
          v41 = v40 == sub_22F98D8D0();
          v42 = (uint64_t)v93;
          v93[OBJC_IVAR____TtC19ContactlessReaderUI24TapRemoteSceneController_issuerPIN] = v41;
          type metadata accessor for TransactionContextFactory();
          v43 = sub_22F8D30B8(v35);
          v44 = v85;
          sub_22F8A9D60(v39, v43, v85);
          v45 = (uint64_t)v44;
          swift_bridgeObjectRelease();
          v46 = v84;
          v47 = v86;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v84 + 48))(v45, 1, v86) == 1)
          {
            sub_22F87AC20(v45, &qword_255E1EDF0);
            v48 = v81;
            sub_22F87BC08(v89, v81);
            if (v90((char *)v48, 1, v24) == 1)
            {
              sub_22F87AC20(v48, (uint64_t *)&unk_255E206E0);
              v49 = v93;
            }
            else
            {
              v74 = sub_22F98DA8C();
              v75 = sub_22F98F088();
              v76 = os_log_type_enabled(v74, v75);
              v49 = v93;
              if (v76)
              {
                v77 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)v77 = 0;
                _os_log_impl(&dword_22F85B000, v74, v75, "Failed to build transactionContext for UIMode", v77, 2u);
                MEMORY[0x2348A6838](v77, -1, -1);
              }

              (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v48, v24);
            }
            objc_msgSend(v49, sel_dismissViewControllerAnimated_completion_, 0, 0);
            return swift_release();
          }
          v55 = v45;
          v56 = v87;
          sub_22F8D5AAC(v55, v87);
          v57 = v82;
          sub_22F8AB114(v56, v82);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v46 + 56))(v57, 0, 1, v47);
          v58 = (uint64_t)v26 + OBJC_IVAR____TtC19ContactlessReaderUI10AppManager_transactionContext;
          swift_beginAccess();
          sub_22F8AB424(v57, v58);
          swift_endAccess();
          sub_22F8A885C();
          sub_22F8A9464();
          v59 = *(_QWORD *)(v42 + OBJC_IVAR____TtC19ContactlessReaderUI24TapRemoteSceneController_suppressor);
          v60 = *(_QWORD *)(v59 + 16);
          if (v60)
          {
            v61 = v39;
            v62 = v59 + 32;
            swift_bridgeObjectRetain();
            do
            {
              sub_22F87A750(v62, (uint64_t)&v94);
              v63 = *((_QWORD *)&v95 + 1);
              v64 = v96;
              __swift_project_boxed_opaque_existential_1(&v94, *((uint64_t *)&v95 + 1));
              (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v63, v64);
              __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v94);
              v62 += 40;
              --v60;
            }
            while (v60);
            swift_bridgeObjectRelease();
            v39 = v61;
          }
          v65 = v83;
          v66 = v91;
          v80(v83, *MEMORY[0x24BDE4160], v91);
          v67 = sub_22F98D624();
          v69 = v68;
          v79(v65, v66);
          v70 = v92;
          if (*(_QWORD *)(v92 + 16) && (v71 = sub_22F979EB0(v67, v69), (v72 & 1) != 0))
          {
            sub_22F87A584(*(_QWORD *)(v70 + 56) + 32 * v71, (uint64_t)&v94);
          }
          else
          {
            v94 = 0u;
            v95 = 0u;
          }
          swift_bridgeObjectRelease();
          if (*((_QWORD *)&v95 + 1))
          {
            if (swift_dynamicCast())
            {
              v73 = v97;
LABEL_46:
              sub_22F8D347C(v39, v73);
              swift_release();
              return sub_22F8D5AF0(v87);
            }
          }
          else
          {
            sub_22F87AC20((uint64_t)&v94, &qword_255E22DD0);
          }
          v73 = 0;
          goto LABEL_46;
        }
      }
    }
    else
    {
      sub_22F87AC20((uint64_t)&v94, &qword_255E22DD0);
    }
    sub_22F87BC08(v89, (uint64_t)v19);
    if (v90(v19, 1, v24) == 1)
    {
      sub_22F87AC20((uint64_t)v19, (uint64_t *)&unk_255E206E0);
      v50 = v93;
    }
    else
    {
      v51 = sub_22F98DA8C();
      v52 = sub_22F98F088();
      v53 = os_log_type_enabled(v51, v52);
      v50 = v93;
      if (v53)
      {
        v54 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v54 = 0;
        _os_log_impl(&dword_22F85B000, v51, v52, "Unable to fetch uiMode from SB remote context", v54, 2u);
        MEMORY[0x2348A6838](v54, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v88 + 8))(v19, v24);
    }
    objc_msgSend(v50, sel_dismissViewControllerAnimated_completion_, 0, 0);
    return swift_release();
  }
  __break(1u);
  return result;
}

uint64_t sub_22F8D30B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  _OWORD v32[2];
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[2];
  _OWORD v37[3];
  _OWORD v38[2];
  __int128 v39;
  _OWORD v40[2];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E22DD8);
    v2 = sub_22F98F3C4();
  }
  else
  {
    v2 = MEMORY[0x24BEE4B00];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_37;
      v14 = *(_QWORD *)(v28 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v27)
          goto LABEL_37;
        v14 = *(_QWORD *)(v28 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v27)
            goto LABEL_37;
          v14 = *(_QWORD *)(v28 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    sub_22F87A584(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(_QWORD *)&v39 = v19;
    *((_QWORD *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(_QWORD *)&v37[0] = v19;
    *((_QWORD *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_22F8AD49C(v38, v32);
    v33 = v29;
    v34 = v30;
    v35 = v31;
    sub_22F8AD49C(v32, v36);
    v29 = v33;
    v30 = v34;
    v31 = v35;
    sub_22F8AD49C(v36, v37);
    sub_22F8AD49C(v37, &v33);
    result = sub_22F98F2EC();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(_QWORD *)(v10 + 32) = v31;
    result = (uint64_t)sub_22F8AD49C(&v33, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_22F8D5B2C();
    return v2;
  }
  v14 = *(_QWORD *)(v28 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

void sub_22F8D347C(char a1, int a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  unsigned int v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  unsigned int v44;
  id v45;
  id v46;
  void *v47;
  id v48;
  void *v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  id v58;
  void *v59;
  id v60;
  void *v61;
  id v62;
  void *v63;
  double v64;
  CGFloat v65;
  double v66;
  CGFloat v67;
  double v68;
  CGFloat v69;
  double v70;
  CGFloat v71;
  uint8_t *v72;
  int v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v72 - v10;
  if (qword_255E1DB20 != -1)
    swift_once();
  v12 = a1 & 1;
  v13 = __swift_project_value_buffer(v6, (uint64_t)qword_255E29610);
  sub_22F87BC08(v13, (uint64_t)v11);
  v14 = sub_22F98DAA4();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v11, 1, v14) == 1)
  {
    sub_22F87AC20((uint64_t)v11, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858((uint64_t)v3, 0xD000000000000024, 0x800000022F9A0330, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v11, v14);
  }
  sub_22F87BC08(v13, (uint64_t)v9);
  if (v16(v9, 1, v14) == 1)
  {
    sub_22F87AC20((uint64_t)v9, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    v17 = sub_22F98DA8C();
    v18 = sub_22F98F0A0();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = swift_slowAlloc();
      v74 = v3;
      v21 = v20;
      v76 = v20;
      v73 = a2;
      *(_DWORD *)v19 = 136315138;
      v72 = v19 + 4;
      LOBYTE(v75) = v12;
      v22 = sub_22F98EE18();
      v75 = sub_22F878880(v22, v23, &v76);
      LOBYTE(a2) = v73;
      sub_22F98F208();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22F85B000, v17, v18, "displayView for uiMode: %s", v19, 0xCu);
      swift_arrayDestroy();
      v24 = v21;
      v3 = v74;
      MEMORY[0x2348A6838](v24, -1, -1);
      MEMORY[0x2348A6838](v19, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v15 + 8))(v9, v14);
  }
  if (!v12)
  {
    v25 = objc_allocWithZone((Class)type metadata accessor for TapViewController(0));
    LOBYTE(v75) = 0;
    sub_22F98E8F0();
    v26 = (id)sub_22F98E140();
    v27 = objc_msgSend(v26, sel_view);
    if (!v27)
    {
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    v28 = v27;
    v29 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
    objc_msgSend(v28, sel_setBackgroundColor_, v29);

    v30 = objc_msgSend(v26, sel_view);
    if (!v30)
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v31 = v30;
    objc_msgSend(v30, sel_setOverrideUserInterfaceStyle_, 2);

    v32 = v26;
    if ((a2 & 1) == 0)
    {
      v33 = objc_msgSend(v26, sel_view);

      if (!v33)
      {
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
      v34 = objc_msgSend(v33, sel_layer);
      v35 = objc_msgSend(v34, sel_disableUpdateMask);

      v32 = objc_msgSend(v33, sel_layer);
      objc_msgSend(v32, sel_setDisableUpdateMask_, v35 | 0x12);

    }
    sub_22F8D3B74();
LABEL_24:
    v46 = objc_msgSend(v26, sel_view);
    if (v46)
    {
      v47 = v46;
      v48 = objc_msgSend(v3, sel_view);
      if (v48)
      {
        v49 = v48;
        objc_msgSend(v48, sel_frame);
        v51 = v50;
        v53 = v52;
        v55 = v54;
        v57 = v56;

        objc_msgSend(v47, sel_setFrame_, v51, v53, v55, v57);
        v58 = objc_msgSend(v3, sel_view);
        if (v58)
        {
          v59 = v58;
          v60 = objc_msgSend(v26, sel_view);
          if (v60)
          {
            v61 = v60;
            objc_msgSend(v59, sel_addSubview_, v60);

            objc_msgSend(v3, sel_addChildViewController_, v26);
            objc_msgSend(v26, sel_didMoveToParentViewController_, v3);
            v62 = objc_msgSend(v3, sel_view);
            if (v62)
            {
              v63 = v62;
              objc_msgSend(v62, sel_bounds);
              v65 = v64;
              v67 = v66;
              v69 = v68;
              v71 = v70;

              sub_22F944560(v65, v67, v69, v71);
              return;
            }
            goto LABEL_34;
          }
LABEL_33:
          __break(1u);
LABEL_34:
          __break(1u);
          goto LABEL_35;
        }
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_32;
  }
  v36 = objc_allocWithZone((Class)type metadata accessor for PINViewController(0));
  sub_22F8E2C78((uint64_t)&v76);
  v26 = (id)sub_22F98E140();
  v37 = objc_msgSend(v26, sel_view);
  if (!v37)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v38 = v37;
  v39 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  objc_msgSend(v38, sel_setBackgroundColor_, v39);

  v40 = objc_msgSend(v26, sel_view);
  if (!v40)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v41 = v40;
  objc_msgSend(v40, sel_setOverrideUserInterfaceStyle_, 2);

  if ((a2 & 1) != 0)
  {

    goto LABEL_24;
  }
  v42 = objc_msgSend(v26, sel_view);

  if (v42)
  {
    v43 = objc_msgSend(v42, sel_layer);
    v44 = objc_msgSend(v43, sel_disableUpdateMask);

    v45 = objc_msgSend(v42, sel_layer);
    objc_msgSend(v45, sel_setDisableUpdateMask_, v44 | 0x12);

    goto LABEL_24;
  }
LABEL_40:
  __break(1u);
}

void sub_22F8D3B74()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB20 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_255E29610);
  sub_22F87BC08(v5, (uint64_t)v4);
  v6 = sub_22F98DAA4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_22F87AC20((uint64_t)v4, (uint64_t *)&unk_255E206E0);
    if (!sub_22F8B9AFC())
      goto LABEL_5;
LABEL_8:
    sub_22F8D1BEC(1);
    return;
  }
  sub_22F863858((uint64_t)v1, 0xD000000000000018, 0x800000022F9A0310, 0, 0xE000000000000000);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  if (sub_22F8B9AFC())
    goto LABEL_8;
LABEL_5:
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD900]), sel_initWithTarget_action_, v1, sel_handlePanWithSender_);
  objc_msgSend(v8, sel_setEdges_, 4);
  v9 = objc_msgSend(v1, sel_view);
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v9, sel_addGestureRecognizer_, v8);

  }
  else
  {
    __break(1u);
  }
}

void sub_22F8D3D24(uint8_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint8_t *v14;
  uint8_t *v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB20 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_255E29610);
  sub_22F87BC08(v5, (uint64_t)v4);
  v6 = sub_22F98DAA4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_22F87AC20((uint64_t)v4, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    v8 = sub_22F98DA8C();
    v9 = sub_22F98F0A0();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = swift_slowAlloc();
      v16 = a1;
      a1 = (uint8_t *)v10;
      v11 = swift_slowAlloc();
      v18 = v11;
      *(_DWORD *)a1 = 136446210;
      v15 = a1 + 4;
      LOBYTE(v17) = (_BYTE)v16;
      __swift_instantiateConcreteTypeFromMangledName(&qword_255E20610);
      v12 = sub_22F98EE18();
      v17 = sub_22F878880(v12, v13, &v18);
      sub_22F98F208();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22F85B000, v8, v9, "Interruption: %{public}s", a1, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348A6838](v11, -1, -1);
      v14 = a1;
      LOBYTE(a1) = (_BYTE)v16;
      MEMORY[0x2348A6838](v14, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  __asm { BR              X10 }
}

uint64_t sub_22F8D3FB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E21AB0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB20 != -1)
    swift_once();
  v8 = __swift_project_value_buffer(v5, (uint64_t)qword_255E29610);
  sub_22F87BC08(v8, (uint64_t)v7);
  v9 = sub_22F98DAA4();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9) == 1)
  {
    sub_22F87AC20((uint64_t)v7, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858(v1, 0xD000000000000019, 0x800000022F9A02F0, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
  }
  v11 = OBJC_IVAR____TtC19ContactlessReaderUI24TapRemoteSceneController_hideMenuIndicatorTimer;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI24TapRemoteSceneController_hideMenuIndicatorTimer), sel_invalidate);
  v12 = *(void **)(v1 + v11);
  *(_QWORD *)(v1 + v11) = 0;

  v13 = sub_22F98EFD4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v4, 1, 1, v13);
  sub_22F98EFBC();
  v14 = sub_22F98EFB0();
  v15 = swift_allocObject();
  v16 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v16;
  sub_22F976C1C((uint64_t)v4, (uint64_t)&unk_255E22DC8, v15);
  swift_release();
  sub_22F8D1BEC(0);
  if (qword_255E1DB70 != -1)
    swift_once();
  swift_beginAccess();
  swift_retain();
  sub_22F8A987C();
  return swift_release();
}

uint64_t sub_22F8D4214(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[8] = a1;
  sub_22F98EFBC();
  v1[9] = sub_22F98EFB0();
  v1[10] = sub_22F98EF8C();
  v1[11] = v2;
  return swift_task_switch();
}

uint64_t sub_22F8D4280()
{
  uint64_t v0;
  _QWORD *v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v4)(void);
  uint64_t (*v6)(void);

  if (qword_255E1DB70 != -1)
    swift_once();
  swift_beginAccess();
  v1 = off_255E211B8;
  swift_beginAccess();
  v2 = (int *)v1[4];
  *(_QWORD *)(v0 + 96) = v2;
  *(_QWORD *)(v0 + 104) = v1[5];
  if (v2)
  {
    v6 = (uint64_t (*)(void))((char *)v2 + *v2);
    swift_retain();
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v3;
    *v3 = v0;
    v3[1] = sub_22F8D437C;
    v4 = v6;
  }
  else
  {
    swift_release();
    **(_BYTE **)(v0 + 64) = 2;
    v4 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v4();
}

uint64_t sub_22F8D437C(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  *(_QWORD *)(*v2 + 120) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    v5 = *(_QWORD *)(v4 + 96);
    *(_BYTE *)(v4 + 128) = a1 & 1;
    sub_22F87A9B8(v5);
  }
  return swift_task_switch();
}

uint64_t sub_22F8D43FC()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 128);
  swift_release();
  **(_BYTE **)(v0 + 64) = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22F8D443C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  swift_release();
  sub_22F87A9B8(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_22F8D4480(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  id result;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint8_t *v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint8_t *v28;
  uint8_t *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  void *v33;
  id v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  id v45;
  uint64_t aBlock;
  unint64_t v47;
  uint64_t (*v48)(uint64_t);
  void *v49;
  void (*v50)();
  uint64_t v51;

  v2 = sub_22F98EB84();
  v42 = *(_QWORD *)(v2 - 8);
  v43 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v41 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_22F98EB9C();
  v39 = *(_QWORD *)(v4 - 8);
  v40 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v38 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v38 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v38 - v13;
  if (qword_255E1DB20 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v6, (uint64_t)qword_255E29610);
  sub_22F87BC08(v15, (uint64_t)v14);
  v16 = sub_22F98DAA4();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (v18(v14, 1, v16) == 1)
  {
    sub_22F87AC20((uint64_t)v14, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    aBlock = 0;
    v47 = 0xE000000000000000;
    sub_22F98F31C();
    swift_bridgeObjectRelease();
    aBlock = 0x73207265646E6573;
    v47 = 0xEF203D2065746174;
    v45 = objc_msgSend(a1, sel_state);
    sub_22F98F418();
    sub_22F98EE9C();
    swift_bridgeObjectRelease();
    sub_22F863858((uint64_t)v44, 0xD000000000000012, 0x800000022F9A0280, aBlock, v47);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v16);
  }
  result = objc_msgSend(a1, sel_state);
  if (result == (id)3)
  {
    if (*((_BYTE *)v44 + OBJC_IVAR____TtC19ContactlessReaderUI24TapRemoteSceneController_homeAffordanceOn) == 1)
    {
      sub_22F87BC08(v15, (uint64_t)v12);
      if (v18(v12, 1, v16) == 1)
      {
        sub_22F87AC20((uint64_t)v12, (uint64_t *)&unk_255E206E0);
      }
      else
      {
        v20 = sub_22F98DA8C();
        v21 = sub_22F98F07C();
        if (os_log_type_enabled(v20, v21))
        {
          v22 = v17;
          v23 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v23 = 0;
          _os_log_impl(&dword_22F85B000, v20, v21, "Bottom pan detected with menu, dismissing", v23, 2u);
          v24 = v23;
          v17 = v22;
          MEMORY[0x2348A6838](v24, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v16);
      }
      return (id)sub_22F8D3FB8();
    }
    else
    {
      sub_22F87BC08(v15, (uint64_t)v9);
      if (v18(v9, 1, v16) == 1)
      {
        sub_22F87AC20((uint64_t)v9, (uint64_t *)&unk_255E206E0);
      }
      else
      {
        v25 = sub_22F98DA8C();
        v26 = sub_22F98F07C();
        if (os_log_type_enabled(v25, v26))
        {
          v27 = v17;
          v28 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v28 = 0;
          _os_log_impl(&dword_22F85B000, v25, v26, "Bottom pan detected, enabling home indicator for 8 seconds", v28, 2u);
          v29 = v28;
          v17 = v27;
          MEMORY[0x2348A6838](v29, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v17 + 8))(v9, v16);
      }
      v30 = v44;
      sub_22F8D1BEC(1);
      sub_22F898D28(0, (unint64_t *)&qword_255E1ED40);
      v31 = (void *)sub_22F98F0F4();
      v32 = swift_allocObject();
      *(_QWORD *)(v32 + 16) = v30;
      v50 = sub_22F8D59A8;
      v51 = v32;
      aBlock = MEMORY[0x24BDAC760];
      v47 = 1107296256;
      v48 = sub_22F8644F0;
      v49 = &block_descriptor_3_0;
      v33 = _Block_copy(&aBlock);
      v34 = v30;
      swift_release();
      v35 = v38;
      sub_22F98EB90();
      aBlock = MEMORY[0x24BEE4AF8];
      sub_22F89AF3C();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E22070);
      sub_22F87AA84((unint64_t *)&qword_255E22DB0, (uint64_t *)&unk_255E22070, MEMORY[0x24BEE12C8]);
      v36 = v41;
      v37 = v43;
      sub_22F98F274();
      MEMORY[0x2348A5CD4](0, v35, v36, v33);
      _Block_release(v33);

      (*(void (**)(char *, uint64_t))(v42 + 8))(v36, v37);
      return (id)(*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v35, v40);
    }
  }
  return result;
}

void sub_22F8D4A28(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  _QWORD v7[6];

  v2 = (void *)objc_opt_self();
  v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v7[4] = sub_22F8D59D4;
  v7[5] = v3;
  v7[0] = MEMORY[0x24BDAC760];
  v7[1] = 1107296256;
  v7[2] = sub_22F8736DC;
  v7[3] = &block_descriptor_9;
  v4 = _Block_copy(v7);
  swift_release();
  v5 = objc_msgSend(v2, sel_scheduledTimerWithTimeInterval_repeats_block_, 0, v4, 8.0);
  _Block_release(v4);
  v6 = *(void **)(a1 + OBJC_IVAR____TtC19ContactlessReaderUI24TapRemoteSceneController_hideMenuIndicatorTimer);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC19ContactlessReaderUI24TapRemoteSceneController_hideMenuIndicatorTimer) = v5;

}

void sub_22F8D4B18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  char *v5;
  void *v6;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x2348A68F8](v2);
  if (v3)
  {
    v4 = (void *)v3;
    sub_22F8D1BEC(0);

  }
  swift_beginAccess();
  v5 = (char *)MEMORY[0x2348A68F8](v2);
  if (v5)
  {
    v6 = *(void **)&v5[OBJC_IVAR____TtC19ContactlessReaderUI24TapRemoteSceneController_hideMenuIndicatorTimer];
    *(_QWORD *)&v5[OBJC_IVAR____TtC19ContactlessReaderUI24TapRemoteSceneController_hideMenuIndicatorTimer] = 0;

  }
}

id TapRemoteSceneController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)sub_22F98ED94();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

id TapRemoteSceneController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  id v21;
  objc_super v23;

  v6 = OBJC_IVAR____TtC19ContactlessReaderUI24TapRemoteSceneController_suppressor;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E22D58);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_22F995D30;
  v8 = type metadata accessor for ProxCardSuppressor();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 0;
  v10 = objc_allocWithZone(MEMORY[0x24BE900E8]);
  v11 = v3;
  *(_QWORD *)(v9 + 16) = objc_msgSend(v10, sel_init);
  *(_QWORD *)(v7 + 56) = v8;
  *(_QWORD *)(v7 + 64) = &protocol witness table for ProxCardSuppressor;
  *(_QWORD *)(v7 + 32) = v9;
  v12 = type metadata accessor for NameDropSuppressor();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = 0;
  *(_QWORD *)(v7 + 96) = v12;
  *(_QWORD *)(v7 + 104) = &protocol witness table for NameDropSuppressor;
  *(_QWORD *)(v7 + 72) = v13;
  v14 = type metadata accessor for AXSecurePayFeatureSuppressor();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = 0;
  *(_QWORD *)(v7 + 136) = v14;
  *(_QWORD *)(v7 + 144) = &protocol witness table for AXSecurePayFeatureSuppressor;
  *(_QWORD *)(v7 + 112) = v15;
  *(_QWORD *)&v3[v6] = v7;
  v16 = (uint64_t *)&v11[OBJC_IVAR____TtC19ContactlessReaderUI24TapRemoteSceneController_walletSuppressor];
  v17 = type metadata accessor for WalletSuppressor();
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = 0;
  v16[3] = v17;
  v16[4] = (uint64_t)&protocol witness table for WalletSuppressor;
  *v16 = v18;
  v11[OBJC_IVAR____TtC19ContactlessReaderUI24TapRemoteSceneController_dismissalExpected] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC19ContactlessReaderUI24TapRemoteSceneController_hideMenuIndicatorTimer] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC19ContactlessReaderUI24TapRemoteSceneController_subscriptions] = MEMORY[0x24BEE4B08];
  v11[OBJC_IVAR____TtC19ContactlessReaderUI24TapRemoteSceneController_showStatusBar] = 0;
  v19 = &v11[OBJC_IVAR____TtC19ContactlessReaderUI24TapRemoteSceneController_context];
  *((_QWORD *)v19 + 1) = 0;
  *((_QWORD *)v19 + 2) = 0;
  *(_QWORD *)v19 = 0;
  swift_unknownObjectWeakInit();
  v11[OBJC_IVAR____TtC19ContactlessReaderUI24TapRemoteSceneController_homeAffordanceOn] = 0;
  v11[OBJC_IVAR____TtC19ContactlessReaderUI24TapRemoteSceneController_issuerPIN] = 0;

  if (a2)
  {
    v20 = (void *)sub_22F98ED94();
    swift_bridgeObjectRelease();
  }
  else
  {
    v20 = 0;
  }
  v23.receiver = v11;
  v23.super_class = (Class)type metadata accessor for TapRemoteSceneController();
  v21 = objc_msgSendSuper2(&v23, sel_initWithNibName_bundle_, v20, a3);

  return v21;
}

id TapRemoteSceneController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id TapRemoteSceneController.init(coder:)(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  objc_super v19;

  v3 = OBJC_IVAR____TtC19ContactlessReaderUI24TapRemoteSceneController_suppressor;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E22D58);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_22F995D30;
  v5 = type metadata accessor for ProxCardSuppressor();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = 0;
  v7 = objc_allocWithZone(MEMORY[0x24BE900E8]);
  v8 = v1;
  *(_QWORD *)(v6 + 16) = objc_msgSend(v7, sel_init);
  *(_QWORD *)(v4 + 56) = v5;
  *(_QWORD *)(v4 + 64) = &protocol witness table for ProxCardSuppressor;
  *(_QWORD *)(v4 + 32) = v6;
  v9 = type metadata accessor for NameDropSuppressor();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = 0;
  *(_QWORD *)(v4 + 96) = v9;
  *(_QWORD *)(v4 + 104) = &protocol witness table for NameDropSuppressor;
  *(_QWORD *)(v4 + 72) = v10;
  v11 = type metadata accessor for AXSecurePayFeatureSuppressor();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = 0;
  *(_QWORD *)(v4 + 136) = v11;
  *(_QWORD *)(v4 + 144) = &protocol witness table for AXSecurePayFeatureSuppressor;
  *(_QWORD *)(v4 + 112) = v12;
  *(_QWORD *)&v1[v3] = v4;
  v13 = (uint64_t *)&v8[OBJC_IVAR____TtC19ContactlessReaderUI24TapRemoteSceneController_walletSuppressor];
  v14 = type metadata accessor for WalletSuppressor();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = 0;
  v13[3] = v14;
  v13[4] = (uint64_t)&protocol witness table for WalletSuppressor;
  *v13 = v15;
  v8[OBJC_IVAR____TtC19ContactlessReaderUI24TapRemoteSceneController_dismissalExpected] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC19ContactlessReaderUI24TapRemoteSceneController_hideMenuIndicatorTimer] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC19ContactlessReaderUI24TapRemoteSceneController_subscriptions] = MEMORY[0x24BEE4B08];
  v8[OBJC_IVAR____TtC19ContactlessReaderUI24TapRemoteSceneController_showStatusBar] = 0;
  v16 = &v8[OBJC_IVAR____TtC19ContactlessReaderUI24TapRemoteSceneController_context];
  *((_QWORD *)v16 + 1) = 0;
  *((_QWORD *)v16 + 2) = 0;
  *(_QWORD *)v16 = 0;
  swift_unknownObjectWeakInit();
  v8[OBJC_IVAR____TtC19ContactlessReaderUI24TapRemoteSceneController_homeAffordanceOn] = 0;
  v8[OBJC_IVAR____TtC19ContactlessReaderUI24TapRemoteSceneController_issuerPIN] = 0;

  v19.receiver = v8;
  v19.super_class = (Class)type metadata accessor for TapRemoteSceneController();
  v17 = objc_msgSendSuper2(&v19, sel_initWithCoder_, a1);

  return v17;
}

id sub_22F8D5168(void *a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  _DWORD v14[4];

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB20 != -1)
    swift_once();
  v7 = __swift_project_value_buffer(v4, (uint64_t)qword_255E29610);
  sub_22F87BC08(v7, (uint64_t)v6);
  v8 = sub_22F98DAA4();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
  {
    sub_22F87AC20((uint64_t)v6, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    v10 = sub_22F98DA8C();
    v11 = sub_22F98F0A0();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v12 = 67109120;
      v14[3] = a2 & 1;
      sub_22F98F208();
      _os_log_impl(&dword_22F85B000, v10, v11, "mutableSettings.allowsMenuButtonDismissal = %{BOOL}d", v12, 8u);
      MEMORY[0x2348A6838](v12, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  return objc_msgSend(a1, sel_setAllowsMenuButtonDismissal_, a2 & 1);
}

void sub_22F8D5328(uint64_t a1, void *a2)
{
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(a1 + 32);
  v3 = a2;
  v2();

}

uint64_t sub_22F8D535C(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for TapRemoteSceneController()
{
  return objc_opt_self();
}

uint64_t sub_22F8D53B4(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    return swift_unknownObjectRetain();
  }
  return result;
}

uint64_t block_copy_helper_17(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_17()
{
  return swift_release();
}

uint64_t sub_22F8D5404()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t (*v16)(void *);
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  _QWORD aBlock[3];
  void *v26;
  uint64_t (*v27)(void *);
  uint64_t v28;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)aBlock - v6;
  if (qword_255E1DB20 != -1)
    swift_once();
  v8 = __swift_project_value_buffer(v2, (uint64_t)qword_255E29610);
  sub_22F87BC08(v8, (uint64_t)v7);
  v9 = sub_22F98DAA4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v7, 1, v9) == 1)
  {
    sub_22F87AC20((uint64_t)v7, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858((uint64_t)v1, 0xD00000000000001DLL, 0x800000022F9A0390, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
  }
  if ((objc_msgSend(v1, sel_isViewLoaded) & 1) == 0)
  {
    sub_22F87BC08(v8, (uint64_t)v5);
    if (v11(v5, 1, v9) == 1)
    {
      sub_22F87AC20((uint64_t)v5, (uint64_t *)&unk_255E206E0);
    }
    else
    {
      sub_22F863858((uint64_t)v1, 0xD000000000000013, 0x800000022F9A00C0, 0, 0xE000000000000000);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v5, v9);
    }
    v12 = *(_QWORD *)&v1[OBJC_IVAR____TtC19ContactlessReaderUI24TapRemoteSceneController_suppressor];
    v13 = *(_QWORD *)(v12 + 16);
    if (v13)
    {
      v14 = v12 + 32;
      swift_bridgeObjectRetain();
      do
      {
        sub_22F87A750(v14, (uint64_t)aBlock);
        v15 = v26;
        v16 = v27;
        __swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v26);
        (*((void (**)(void *, uint64_t (*)(void *)))v16 + 2))(v15, v16);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)aBlock);
        v14 += 40;
        --v13;
      }
      while (v13);
      swift_bridgeObjectRelease();
    }
    v17 = *(_QWORD *)&v1[OBJC_IVAR____TtC19ContactlessReaderUI24TapRemoteSceneController_walletSuppressor + 24];
    v18 = *(_QWORD *)&v1[OBJC_IVAR____TtC19ContactlessReaderUI24TapRemoteSceneController_walletSuppressor + 32];
    __swift_project_boxed_opaque_existential_1(&v1[OBJC_IVAR____TtC19ContactlessReaderUI24TapRemoteSceneController_walletSuppressor], v17);
    (*(void (**)(uint64_t, uint64_t))(v18 + 16))(v17, v18);
    *(_QWORD *)&v1[OBJC_IVAR____TtC19ContactlessReaderUI24TapRemoteSceneController_subscriptions] = MEMORY[0x24BEE4B08];
    swift_bridgeObjectRelease();
  }
  v1[OBJC_IVAR____TtC19ContactlessReaderUI24TapRemoteSceneController_dismissalExpected] = 1;
  v19 = (uint64_t *)&v1[OBJC_IVAR____TtC19ContactlessReaderUI24TapRemoteSceneController_context];
  v20 = *(_QWORD *)&v1[OBJC_IVAR____TtC19ContactlessReaderUI24TapRemoteSceneController_context];
  if (v20)
  {
    v21 = (void *)v19[2];
    sub_22F8D53B4(v20);
    swift_unknownObjectRetain();
    sub_22F8D535C(v20);
    v27 = sub_22F8D14AC;
    v28 = 0;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_22F8CFF4C;
    v26 = &block_descriptor_30_0;
    v22 = _Block_copy(aBlock);
    objc_msgSend(v21, sel_invalidateRemoteUI_, v22);
    swift_unknownObjectRelease();
    _Block_release(v22);
    v23 = *v19;
  }
  else
  {
    v23 = 0;
  }
  v19[1] = 0;
  v19[2] = 0;
  *v19 = 0;
  return sub_22F8D535C(v23);
}

uint64_t method lookup function for TapRemoteSceneController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TapRemoteSceneController.setup(scene:userInfo:endpoint:handle:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x160))();
}

uint64_t dispatch thunk of TapRemoteSceneController.disconnected()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x168))();
}

uint64_t destroy for TapRemoteSceneController.RemoteSceneContext()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

_QWORD *_s19ContactlessReaderUI24TapRemoteSceneControllerC18RemoteSceneContextVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for TapRemoteSceneController.RemoteSceneContext(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

uint64_t assignWithTake for TapRemoteSceneController.RemoteSceneContext(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_unknownObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TapRemoteSceneController.RemoteSceneContext(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TapRemoteSceneController.RemoteSceneContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TapRemoteSceneController.RemoteSceneContext()
{
  return &type metadata for TapRemoteSceneController.RemoteSceneContext;
}

uint64_t sub_22F8D5984()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_22F8D59A8()
{
  uint64_t v0;

  sub_22F8D4A28(*(_QWORD *)(v0 + 16));
}

uint64_t sub_22F8D59B0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_22F8D59D4(uint64_t a1)
{
  uint64_t v1;

  sub_22F8D4B18(a1, v1);
}

uint64_t sub_22F8D59DC()
{
  return swift_deallocObject();
}

id sub_22F8D59EC(void *a1)
{
  uint64_t v1;

  return sub_22F8D5168(a1, *(_BYTE *)(v1 + 16));
}

uint64_t sub_22F8D59F4()
{
  return swift_deallocObject();
}

uint64_t sub_22F8D5A04()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_22F8D5A24()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_22F8D5A48(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_22F87B390;
  return sub_22F8D4214(a1);
}

uint64_t sub_22F8D5AAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TransactionContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22F8D5AF0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TransactionContext(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22F8D5B2C()
{
  return swift_release();
}

uint64_t sub_22F8D5B34()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_22F8D5B58(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_22F8D2474(a1, v1);
}

void sub_22F8D5B60(_BYTE *a1)
{
  uint64_t v1;

  sub_22F8D2704(a1, v1);
}

uint64_t sub_22F8D5B68()
{
  return swift_deallocObject();
}

void sub_22F8D5B78()
{
  uint64_t v0;

  sub_22F8D252C(*(_BYTE *)(v0 + 16));
}

uint64_t sub_22F8D5B80(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_22F8D5BDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void *v14;
  void (*v15)(char *, uint64_t);
  void *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[5];
  uint64_t v23;

  v1 = sub_22F98EB84();
  v21 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_22F98EB9C();
  v19 = *(_QWORD *)(v4 - 8);
  v20 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_22F98EBC0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v18 - v12;
  *(_BYTE *)(v0 + 16) = 0;
  sub_22F879058();
  v14 = (void *)sub_22F98F0F4();
  sub_22F98EBB4();
  MEMORY[0x2348A57D0](v11, 2.0);
  v15 = *(void (**)(char *, uint64_t))(v8 + 8);
  v15(v11, v7);
  aBlock[4] = sub_22F8D5EC0;
  v23 = v0;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22F8644F0;
  aBlock[3] = &block_descriptor_19;
  v16 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_22F98EB90();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_22F89AF3C();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E22070);
  sub_22F8A24A4();
  sub_22F98F274();
  MEMORY[0x2348A5CA4](v13, v6, v3, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v20);
  return ((uint64_t (*)(char *, uint64_t))v15)(v13, v7);
}

uint64_t sub_22F8D5E24(uint64_t result)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  *(_BYTE *)(result + 16) = 1;
  v1 = *(void (**)(uint64_t))(result + 24);
  if (v1)
  {
    if (*(_BYTE *)(result + 17) == 1)
    {
      v2 = swift_retain();
      v1(v2);
      return sub_22F87A9B8((uint64_t)v1);
    }
  }
  return result;
}

uint64_t sub_22F8D5E7C()
{
  uint64_t v0;

  sub_22F87A9B8(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DelayCallManager()
{
  return objc_opt_self();
}

uint64_t sub_22F8D5EC0()
{
  uint64_t v0;

  return sub_22F8D5E24(v0);
}

uint64_t block_copy_helper_18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_18()
{
  return swift_release();
}

uint64_t destroy for VASAppliedView()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for VASAppliedView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for VASAppliedView(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for VASAppliedView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for VASAppliedView()
{
  return &type metadata for VASAppliedView;
}

uint64_t sub_22F8D607C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22F8D608C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  __int128 v38;
  uint64_t (**v39)();
  uint64_t v40;
  __int128 v41;
  char *v42;
  double v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  double *v49;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  double v60;
  __int128 v61;

  v2 = v1;
  v58 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22F48);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22F50);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22F58);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22F60);
  MEMORY[0x24BDAC7A8](v51);
  v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22F68);
  MEMORY[0x24BDAC7A8](v52);
  v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22F70);
  v56 = *(_QWORD *)(v16 - 8);
  v57 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v53 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22F78);
  MEMORY[0x24BDAC7A8](v55);
  v54 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v5 = sub_22F98E128();
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 1;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22F80);
  sub_22F8D65CC((uint64_t *)v1, (uint64_t)&v5[*(int *)(v19 + 44)]);
  v61 = *(_OWORD *)(v1 + 40);
  v59 = *(_OWORD *)(v1 + 40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3C0);
  sub_22F98E8FC();
  v20 = v60;
  sub_22F87ABDC((uint64_t)v5, (uint64_t)v8, &qword_255E22F48);
  *(double *)&v8[*(int *)(v6 + 36)] = v20;
  sub_22F87AC20((uint64_t)v5, &qword_255E22F48);
  v21 = sub_22F98E434();
  sub_22F8B9AFC();
  sub_22F98DBF4();
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v29 = v28;
  sub_22F87ABDC((uint64_t)v8, (uint64_t)v11, &qword_255E22F50);
  v30 = &v11[*(int *)(v9 + 36)];
  *v30 = v21;
  *((_QWORD *)v30 + 1) = v23;
  *((_QWORD *)v30 + 2) = v25;
  *((_QWORD *)v30 + 3) = v27;
  *((_QWORD *)v30 + 4) = v29;
  v30[40] = 0;
  sub_22F87AC20((uint64_t)v8, &qword_255E22F50);
  v59 = *(_OWORD *)(v2 + 24);
  sub_22F98E8FC();
  v31 = v60 * 0.0174532925;
  sub_22F98EB6C();
  v33 = v32;
  v35 = v34;
  sub_22F87ABDC((uint64_t)v11, (uint64_t)v13, &qword_255E22F58);
  v36 = &v13[*(int *)(v51 + 36)];
  *(double *)v36 = v31;
  *((_QWORD *)v36 + 1) = v33;
  *((_QWORD *)v36 + 2) = v35;
  sub_22F87AC20((uint64_t)v11, &qword_255E22F58);
  v37 = swift_allocObject();
  v38 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v37 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v37 + 32) = v38;
  *(_OWORD *)(v37 + 48) = *(_OWORD *)(v2 + 32);
  *(_QWORD *)(v37 + 64) = *(_QWORD *)(v2 + 48);
  sub_22F87ABDC((uint64_t)v13, (uint64_t)v15, &qword_255E22F60);
  v39 = (uint64_t (**)())&v15[*(int *)(v52 + 36)];
  *v39 = sub_22F8D6C90;
  v39[1] = (uint64_t (*)())v37;
  v39[2] = 0;
  v39[3] = 0;
  sub_22F8D6CDC(v2);
  sub_22F87AC20((uint64_t)v13, &qword_255E22F60);
  LOBYTE(v59) = *(_BYTE *)(v2 + 16);
  v40 = swift_allocObject();
  v41 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v40 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v40 + 32) = v41;
  *(_OWORD *)(v40 + 48) = *(_OWORD *)(v2 + 32);
  *(_QWORD *)(v40 + 64) = *(_QWORD *)(v2 + 48);
  sub_22F8D6CDC(v2);
  sub_22F87E2D8(&qword_255E22F88, &qword_255E22F68, sub_22F8D6D30, MEMORY[0x24BDF0910]);
  v42 = v53;
  sub_22F98E7A0();
  swift_release();
  sub_22F87AC20((uint64_t)v15, &qword_255E22F68);
  v59 = v61;
  sub_22F98E8FC();
  v43 = v60;
  v44 = swift_allocObject();
  v45 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v44 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v44 + 32) = v45;
  *(_OWORD *)(v44 + 48) = *(_OWORD *)(v2 + 32);
  *(_QWORD *)(v44 + 64) = *(_QWORD *)(v2 + 48);
  v47 = v56;
  v46 = v57;
  v48 = (uint64_t)v54;
  (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v54, v42, v57);
  v49 = (double *)(v48 + *(int *)(v55 + 36));
  *v49 = v43;
  v49[1] = v43;
  *((_QWORD *)v49 + 2) = sub_22F8D6E34;
  *((_QWORD *)v49 + 3) = v44;
  sub_22F8D6CDC(v2);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v42, v46);
  return sub_22F8D6E3C(v48, v58);
}

uint64_t sub_22F8D65CC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t KeyPath;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;

  v52 = a1;
  v56 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E20810);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22FB0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v55 = (uint64_t)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v54 = (char *)&v52 - v8;
  v9 = sub_22F98E878();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22FB8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v53 = (uint64_t)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v52 - v16;
  sub_22F98E884();
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BDF3FD0], v9);
  v18 = sub_22F98E890();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_22F98EA88();
  sub_22F98DCFC();
  v19 = v70;
  LOBYTE(v10) = v71;
  v20 = v72;
  v21 = v73;
  v22 = v74;
  v23 = v75;
  LOBYTE(v9) = sub_22F98E41C();
  sub_22F98DBF4();
  v57 = v18;
  v58 = v19;
  v59 = v10;
  v60 = v20;
  LOBYTE(v61) = v21;
  v62 = v22;
  v63 = v23;
  v64 = v9;
  v65 = v24;
  v66 = v25;
  v67 = v26;
  v68 = v27;
  v69 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E22FC0);
  sub_22F87E2D8(&qword_255E22FC8, &qword_255E22FC0, (uint64_t (*)(void))sub_22F8D6FA0, MEMORY[0x24BDECC60]);
  sub_22F98E704();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E249D0);
  v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_22F991B40;
  v30 = *v52;
  v29 = v52[1];
  *(_QWORD *)(v28 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v28 + 64) = sub_22F87FD04();
  *(_QWORD *)(v28 + 32) = v30;
  *(_QWORD *)(v28 + 40) = v29;
  swift_bridgeObjectRetain();
  sub_22F932EEC(1);
  sub_22F98D420();
  v31 = sub_22F98D4B0();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v4, 0, 1, v31);
  swift_bridgeObjectRetain();
  v32 = sub_22F98EDD0();
  v34 = v33;
  swift_bridgeObjectRelease();
  sub_22F87AC20((uint64_t)v4, (uint64_t *)&unk_255E20810);
  swift_bridgeObjectRelease();
  v57 = v32;
  v58 = v34;
  sub_22F863BF8();
  v35 = sub_22F98E5CC();
  v37 = v36;
  LOBYTE(v34) = v38 & 1;
  sub_22F98E4F4();
  v39 = sub_22F98E5A8();
  v41 = v40;
  LOBYTE(v22) = v42;
  v44 = v43;
  swift_release();
  LOBYTE(v22) = v22 & 1;
  sub_22F87E294(v35, v37, v34);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v57 = v39;
  v58 = v41;
  v59 = v22;
  v60 = v44;
  v61 = KeyPath;
  LOBYTE(v62) = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E20568);
  sub_22F8948D8();
  v46 = (uint64_t)v54;
  sub_22F98E704();
  sub_22F87E294(v39, v41, v22);
  swift_release();
  swift_bridgeObjectRelease();
  v47 = v53;
  sub_22F87ABDC((uint64_t)v17, v53, &qword_255E22FB8);
  v48 = v55;
  sub_22F87ABDC(v46, v55, &qword_255E22FB0);
  v49 = v56;
  sub_22F87ABDC(v47, v56, &qword_255E22FB8);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22FE0);
  sub_22F87ABDC(v48, v49 + *(int *)(v50 + 48), &qword_255E22FB0);
  sub_22F87AC20(v46, &qword_255E22FB0);
  sub_22F87AC20((uint64_t)v17, &qword_255E22FB8);
  sub_22F87AC20(v48, &qword_255E22FB0);
  return sub_22F87AC20(v47, &qword_255E22FB8);
}

uint64_t sub_22F8D6B30()
{
  sub_22F98EAE8();
  sub_22F98DE10();
  return swift_release();
}

uint64_t sub_22F8D6B9C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3C0);
  sub_22F98E908();
  sub_22F98EAE8();
  sub_22F98DE10();
  return swift_release();
}

uint64_t sub_22F8D6C4C@<X0>(uint64_t a1@<X8>)
{
  return sub_22F8D608C(a1);
}

uint64_t sub_22F8D6C90()
{
  return sub_22F98DE10();
}

uint64_t sub_22F8D6CDC(uint64_t a1)
{
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_22F8D6D28()
{
  return sub_22F8D6B30();
}

uint64_t sub_22F8D6D30()
{
  return sub_22F87E2D8(&qword_255E22F90, &qword_255E22F60, sub_22F8D6D54, MEMORY[0x24BDED5D8]);
}

uint64_t sub_22F8D6D54()
{
  return sub_22F87E2D8(&qword_255E22F98, &qword_255E22F58, (uint64_t (*)(void))sub_22F8D6D78, MEMORY[0x24BDECC60]);
}

unint64_t sub_22F8D6D78()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E22FA0;
  if (!qword_255E22FA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E22F50);
    v2[0] = sub_22F87AA84(&qword_255E22FA8, &qword_255E22F48, MEMORY[0x24BDF4700]);
    v2[1] = MEMORY[0x24BDECC38];
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E22FA0);
  }
  return result;
}

uint64_t objectdestroyTm_13()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22F8D6E34()
{
  return sub_22F8D6B9C();
}

uint64_t sub_22F8D6E3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22F8D6E84()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3C0);
  return sub_22F98E908();
}

uint64_t sub_22F8D6EDC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3C0);
  return sub_22F98E908();
}

uint64_t sub_22F8D6F30()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3C0);
  return sub_22F98E908();
}

unint64_t sub_22F8D6FA0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E22FD0;
  if (!qword_255E22FD0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E22FD8);
    v2[0] = MEMORY[0x24BDF40E8];
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E22FD0);
  }
  return result;
}

unint64_t sub_22F8D7010()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[6];

  result = qword_255E22FE8;
  if (!qword_255E22FE8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E22F78);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E22F68);
    v3 = sub_22F87E2D8(&qword_255E22F88, &qword_255E22F68, sub_22F8D6D30, MEMORY[0x24BDF0910]);
    v4[2] = v2;
    v4[3] = MEMORY[0x24BEE1328];
    v4[4] = v3;
    v4[5] = MEMORY[0x24BEE1340];
    v4[0] = swift_getOpaqueTypeConformance2();
    v4[1] = sub_22F87AA84(&qword_255E1F408, &qword_255E1F410, (uint64_t)&unk_22F99C190);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_255E22FE8);
  }
  return result;
}

void sub_22F8D70F8(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t inited;
  uint64_t v14;
  void *v15;
  _DWORD v16[2];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    if (qword_255E1DAF8 != -1)
      swift_once();
    v7 = __swift_project_value_buffer(v4, (uint64_t)qword_255E29598);
    sub_22F87BC08(v7, (uint64_t)v6);
    v8 = sub_22F98DAA4();
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
    {
      sub_22F87BC50((uint64_t)v6);
    }
    else
    {
      swift_retain();
      v10 = sub_22F98DA8C();
      v11 = sub_22F98F07C();
      if (os_log_type_enabled(v10, v11))
      {
        v12 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v12 = 67109120;
        v16[1] = *(unsigned __int8 *)(v2 + 20);
        sub_22F98F208();
        swift_release();
        _os_log_impl(&dword_22F85B000, v10, v11, "PlaySound - %{BOOL}d", v12, 8u);
        MEMORY[0x2348A6838](v12, -1, -1);
      }
      else
      {
        swift_release();
      }

      (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F5F8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_22F991B40;
    *(_QWORD *)(inited + 32) = sub_22F98EDB8();
    *(_QWORD *)(inited + 40) = v14;
    *(_BYTE *)(inited + 48) = *(_BYTE *)(v2 + 20);
    sub_22F8AC874(inited);
    v15 = (void *)sub_22F98ED10();
    swift_bridgeObjectRelease();
    AudioServicesPlaySystemSoundWithOptions();

  }
}

uint64_t sub_22F8D7344()
{
  return swift_deallocClassInstance();
}

uint64_t static SystemSoundsDefinitions.success.getter()
{
  return 1166;
}

uint64_t static SystemSoundsDefinitions.error.getter()
{
  return 1168;
}

uint64_t type metadata accessor for PlaySound()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for SystemSoundsDefinitions()
{
  return &type metadata for SystemSoundsDefinitions;
}

uint64_t sub_22F8D7394@<X0>(char a1@<W0>, unsigned __int8 a2@<W1>, uint64_t a3@<X8>)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;

  v5 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v5 == 1)
  {
    result = sub_22F932EEC(0);
    if (a1 == 3)
      v11 = 0x3FD3333333333333;
    else
      v11 = 0x3FC999999999999ALL;
    *(_QWORD *)(a3 + 40) = &type metadata for VoiceOverMessage;
    *(_QWORD *)(a3 + 16) = result;
    *(_QWORD *)(a3 + 24) = v10;
    *(_QWORD *)(a3 + 32) = v11;
    *(_BYTE *)a3 = 2;
    *(_QWORD *)(a3 + 8) = 0;
  }
  else
  {
    if (qword_255E1DB00 != -1)
      swift_once();
    v12 = __swift_project_value_buffer(v6, (uint64_t)qword_255E295B0);
    sub_22F87BC08(v12, (uint64_t)v8);
    v13 = sub_22F98DAA4();
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v8, 1, v13) == 1)
    {
      result = sub_22F87AC20((uint64_t)v8, (uint64_t *)&unk_255E206E0);
    }
    else
    {
      v15 = sub_22F98DA8C();
      v16 = sub_22F98F0A0();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v17 = 0;
        _os_log_impl(&dword_22F85B000, v15, v16, "AudioFactory: no VoiceOver message in selected mode", v17, 2u);
        MEMORY[0x2348A6838](v17, -1, -1);
      }

      result = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v8, v13);
    }
    *(_OWORD *)(a3 + 16) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)a3 = 0u;
  }
  return result;
}

double sub_22F8D75F8@<D0>(char a1@<W0>, unsigned __int8 a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double result;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  __int128 v17;
  uint64_t v18;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = 1277;
  switch(a1)
  {
    case 2:
    case 3:
    case 5:
      goto LABEL_2;
    case 7:
      if (a2 >= 2u)
        goto LABEL_17;
      v9 = 1166;
      goto LABEL_22;
    case 8:
      if (a2 >= 2u)
        goto LABEL_17;
      v9 = 1168;
      goto LABEL_22;
    case 9:
      if ((a2 & 0xFE) != 0)
        v9 = 1340;
      else
        v9 = 1344;
      goto LABEL_22;
    case 10:
      if ((a2 & 0xFE) != 0)
        v9 = 1341;
      else
        v9 = 1345;
      goto LABEL_22;
    case 11:
      if (a2 != 2)
        goto LABEL_17;
      v9 = 1342;
      goto LABEL_22;
    case 12:
      goto LABEL_22;
    case 13:
      v9 = 1276;
      goto LABEL_22;
    default:
      if (a2 == 2)
      {
LABEL_2:
        v9 = 1343;
LABEL_22:
        v18 = MEMORY[0x24BEE44F0];
        LODWORD(v17) = v9;
        *(_BYTE *)a3 = 0;
        *(_QWORD *)(a3 + 8) = 0;
        sub_22F8AD49C(&v17, (_OWORD *)(a3 + 16));
      }
      else
      {
LABEL_17:
        if (qword_255E1DB00 != -1)
          swift_once();
        v10 = __swift_project_value_buffer(v6, (uint64_t)qword_255E295B0);
        sub_22F87BC08(v10, (uint64_t)v8);
        v11 = sub_22F98DAA4();
        v12 = *(_QWORD *)(v11 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11) == 1)
        {
          sub_22F87AC20((uint64_t)v8, (uint64_t *)&unk_255E206E0);
        }
        else
        {
          v14 = sub_22F98DA8C();
          v15 = sub_22F98F0A0();
          if (os_log_type_enabled(v14, v15))
          {
            v16 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v16 = 0;
            _os_log_impl(&dword_22F85B000, v14, v15, "AudioFactory: no sound in selected mode", v16, 2u);
            MEMORY[0x2348A6838](v16, -1, -1);
          }

          (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v11);
        }
        result = 0.0;
        *(_OWORD *)(a3 + 16) = 0u;
        *(_OWORD *)(a3 + 32) = 0u;
        *(_OWORD *)a3 = 0u;
      }
      return result;
  }
}

double sub_22F8D7854@<D0>(char a1@<W2>, unsigned __int8 a2@<W3>, char a3@<W4>, _OWORD *a4@<X8>)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  double result;
  __int128 v28;

  v7 = a2;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v28 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E20810);
  MEMORY[0x24BDAC7A8](v14);
  if (v7 == 2)
  {
    if ((a3 & 1) == 0)
      __asm { BR              X10 }
    if (qword_255E1DB00 != -1)
      swift_once();
    v15 = __swift_project_value_buffer(v8, (uint64_t)qword_255E295B0);
    sub_22F87BC08(v15, (uint64_t)v13);
    v16 = sub_22F98DAA4();
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v13, 1, v16) == 1)
    {
      sub_22F87AC20((uint64_t)v13, (uint64_t *)&unk_255E206E0);
    }
    else
    {
      v24 = sub_22F98DA8C();
      v25 = sub_22F98F0A0();
      if (os_log_type_enabled(v24, v25))
      {
        v26 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v26 = 0;
        _os_log_impl(&dword_22F85B000, v24, v25, "AudioFactory: vocal message inhibited", v26, 2u);
        MEMORY[0x2348A6838](v26, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v17 + 8))(v13, v16);
    }
  }
  else
  {
    if (qword_255E1DB00 != -1)
      swift_once();
    v18 = __swift_project_value_buffer(v8, (uint64_t)qword_255E295B0);
    sub_22F87BC08(v18, (uint64_t)v11);
    v19 = sub_22F98DAA4();
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v11, 1, v19) == 1)
    {
      sub_22F87AC20((uint64_t)v11, (uint64_t *)&unk_255E206E0);
    }
    else
    {
      v21 = sub_22F98DA8C();
      v22 = sub_22F98F0A0();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v23 = 0;
        _os_log_impl(&dword_22F85B000, v21, v22, "AudioFactory: no vocal message in selected mode", v23, 2u);
        MEMORY[0x2348A6838](v23, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v20 + 8))(v11, v19);
    }
  }
  result = 0.0;
  a4[1] = 0u;
  a4[2] = 0u;
  *a4 = 0u;
  return result;
}

BOOL sub_22F8D806C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_22F8D8238(*a1, *a2);
}

uint64_t type metadata accessor for AudioFactory()
{
  return objc_opt_self();
}

uint64_t getEnumTagSinglePayload for SystemSoundType(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  unsigned int v7;

  if (!a2)
    return 0;
  if (a2 < 0xF3)
  {
    v6 = *a1;
    if (v6 >= 7)
      v7 = v6 - 6;
    else
      v7 = 0;
    if (v7 >= 8)
      return v7 - 7;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 13;
    if (a2 + 13 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_22F8D80E8 + 4 * byte_22F995EE2[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for SystemSoundType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 13;
  if (a3 + 13 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xF3)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xF2)
    return ((uint64_t (*)(void))((char *)&loc_22F8D8194 + 4 * byte_22F995EEC[v5]))();
  *a1 = a2 + 13;
  return ((uint64_t (*)(void))((char *)sub_22F8D81C8 + 4 * byte_22F995EE7[v5]))();
}

uint64_t sub_22F8D81C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22F8D81D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22F8D81D8);
  return result;
}

uint64_t sub_22F8D81E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22F8D81ECLL);
  *(_BYTE *)result = a2 + 13;
  return result;
}

uint64_t sub_22F8D81F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22F8D81F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22F8D8204(unsigned __int8 *a1)
{
  unsigned int v1;

  v1 = *a1;
  if (v1 >= 7)
    return v1 - 6;
  else
    return 0;
}

_BYTE *sub_22F8D8218(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 6;
  return result;
}

ValueMetadata *type metadata accessor for SystemSoundType()
{
  return &type metadata for SystemSoundType;
}

BOOL sub_22F8D8238(unsigned __int8 a1, unsigned __int8 a2)
{
  _BOOL8 result;

  switch(a1)
  {
    case 7u:
      if (a2 != 7)
        goto LABEL_18;
      result = 1;
      break;
    case 8u:
      if (a2 != 8)
        goto LABEL_18;
      result = 1;
      break;
    case 9u:
      if (a2 != 9)
        goto LABEL_18;
      result = 1;
      break;
    case 0xAu:
      if (a2 != 10)
        goto LABEL_18;
      result = 1;
      break;
    case 0xBu:
      if (a2 != 11)
        goto LABEL_18;
      result = 1;
      break;
    case 0xCu:
      if (a2 != 12)
        goto LABEL_18;
      result = 1;
      break;
    case 0xDu:
      if (a2 != 13)
        goto LABEL_18;
      result = 1;
      break;
    default:
      if (a2 - 7 < 7)
LABEL_18:
        result = 0;
      else
        result = a1 == a2;
      break;
  }
  return result;
}

ValueMetadata *type metadata accessor for VocalWarningType()
{
  return &type metadata for VocalWarningType;
}

uint64_t _s19ContactlessReaderUI16VocalWarningTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_22F8D8358 + 4 * byte_22F995EFD[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_22F8D838C + 4 * byte_22F995EF8[v4]))();
}

uint64_t sub_22F8D838C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22F8D8394(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22F8D839CLL);
  return result;
}

uint64_t sub_22F8D83A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22F8D83B0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_22F8D83B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22F8D83BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VocalInstructionsType()
{
  return &type metadata for VocalInstructionsType;
}

uint64_t storeEnumTagSinglePayload for VocalEndType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_22F8D8424 + 4 * byte_22F995F07[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_22F8D8458 + 4 * byte_22F995F02[v4]))();
}

uint64_t sub_22F8D8458(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22F8D8460(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22F8D8468);
  return result;
}

uint64_t sub_22F8D8474(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22F8D847CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_22F8D8480(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22F8D8488(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VocalEndType()
{
  return &type metadata for VocalEndType;
}

uint64_t getEnumTagSinglePayload for SoundWarningType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SoundWarningType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_22F8D8580 + 4 * byte_22F995F11[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_22F8D85B4 + 4 * byte_22F995F0C[v4]))();
}

uint64_t sub_22F8D85B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22F8D85BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22F8D85C4);
  return result;
}

uint64_t sub_22F8D85D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22F8D85D8);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_22F8D85DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22F8D85E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SoundWarningType()
{
  return &type metadata for SoundWarningType;
}

unint64_t sub_22F8D8604()
{
  unint64_t result;

  result = qword_255E23160;
  if (!qword_255E23160)
  {
    result = MEMORY[0x2348A6784](&unk_22F995FF4, &type metadata for SoundWarningType);
    atomic_store(result, (unint64_t *)&qword_255E23160);
  }
  return result;
}

unint64_t sub_22F8D864C()
{
  unint64_t result;

  result = qword_255E23168;
  if (!qword_255E23168)
  {
    result = MEMORY[0x2348A6784](&unk_22F99605C, &type metadata for VocalEndType);
    atomic_store(result, (unint64_t *)&qword_255E23168);
  }
  return result;
}

unint64_t sub_22F8D8694()
{
  unint64_t result;

  result = qword_255E23170;
  if (!qword_255E23170)
  {
    result = MEMORY[0x2348A6784](&unk_22F9960C4, &type metadata for VocalInstructionsType);
    atomic_store(result, (unint64_t *)&qword_255E23170);
  }
  return result;
}

unint64_t sub_22F8D86DC()
{
  unint64_t result;

  result = qword_255E23178;
  if (!qword_255E23178)
  {
    result = MEMORY[0x2348A6784](&unk_22F99612C, &type metadata for VocalWarningType);
    atomic_store(result, (unint64_t *)&qword_255E23178);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for TransactionView(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TransactionView(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for TransactionView(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TransactionView(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TransactionView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TransactionView()
{
  return &type metadata for TransactionView;
}

uint64_t sub_22F8D8888()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22F8D8898@<X0>(int a1@<W0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char v52;
  void *v53;
  uint64_t v54;
  void *v55;
  unsigned __int8 v56;
  uint64_t v57;
  uint64_t v58;
  unsigned __int8 v59;
  uint64_t v60;
  unsigned __int8 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v4 = a1;
  LODWORD(v47) = a1;
  v48 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(qword_255E1F298);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = type metadata accessor for TapView();
  MEMORY[0x24BDAC7A8](v50);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23188);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23190);
  v13 = MEMORY[0x24BDAC7A8](v49);
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v46 - v16;
  v52 = v4;
  v53 = a2;
  v18 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3B0);
  sub_22F98E914();
  v19 = v54;
  v20 = (uint64_t)v55;
  v21 = v56;
  sub_22F87BBC4();
  sub_22F98E2B4();
  LOBYTE(v45) = 0;
  sub_22F936888((uint64_t)sub_22F936AF0, 0, (uint64_t)v9, v45, v19, v20, v21, (uint64_t)v7);
  LOBYTE(v7) = v47;
  LOBYTE(v54) = v47;
  v55 = v18;
  sub_22F98E8FC();
  sub_22F8D8CCC();
  sub_22F98E6BC();
  sub_22F8D8D14((uint64_t)v9);
  sub_22F87ABDC((uint64_t)v12, (uint64_t)v15, &qword_255E23188);
  *(_QWORD *)&v15[*(int *)(v49 + 36)] = 0x3FF0000000000000;
  sub_22F87AC20((uint64_t)v12, &qword_255E23188);
  v51 = v15;
  v22 = (uint64_t)v15;
  v23 = (uint64_t)v17;
  sub_22F8D8D50(v22, (uint64_t)v17);
  LOBYTE(v54) = (_BYTE)v7;
  v55 = v18;
  sub_22F98E8FC();
  v24 = 0;
  v25 = 0;
  v26 = 0;
  v27 = 0;
  v28 = 0;
  v29 = 0;
  v30 = 0;
  v31 = 0;
  v32 = 0;
  v33 = 0;
  v34 = 0;
  v35 = 0;
  if (v52 == 1)
  {
    sub_22F8E2C78((uint64_t)&v54);
    v24 = v54;
    v25 = v55;
    v26 = v56;
    v27 = v57;
    v28 = v58;
    v29 = v59;
    v30 = v60;
    v31 = v61;
    v32 = v62;
    v33 = v63;
    v35 = 0x4000000000000000;
    v34 = v64;
  }
  v49 = v29;
  v50 = v30;
  v46 = v23;
  v47 = v31;
  v36 = v23;
  v37 = (uint64_t)v51;
  sub_22F87ABDC(v36, (uint64_t)v51, &qword_255E23190);
  v38 = v37;
  v39 = v48;
  sub_22F87ABDC(v38, v48, &qword_255E23190);
  v40 = (uint64_t *)(v39 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255E231A0) + 48));
  *v40 = v24;
  v40[1] = (uint64_t)v25;
  v40[2] = v26;
  v40[3] = v27;
  v41 = v49;
  v42 = v50;
  v40[4] = v28;
  v40[5] = v41;
  v43 = v47;
  v40[6] = v42;
  v40[7] = v43;
  v40[8] = v32;
  v40[9] = v33;
  v40[10] = v34;
  v40[11] = v35;
  sub_22F8D8D98(v24, v25, v26, v27, v28);
  sub_22F87AC20(v46, &qword_255E23190);
  sub_22F8D8E14(v24, v25, v26, v27, v28);
  return sub_22F87AC20((uint64_t)v51, &qword_255E23190);
}

uint64_t sub_22F8D8C78@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  int v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *v1;
  v4 = (void *)*((_QWORD *)v1 + 1);
  *a1 = sub_22F98EA88();
  a1[1] = v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23180);
  return sub_22F8D8898(v3, v4, (uint64_t)a1 + *(int *)(v6 + 44));
}

unint64_t sub_22F8D8CCC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255E23198;
  if (!qword_255E23198)
  {
    v1 = type metadata accessor for TapView();
    result = MEMORY[0x2348A6784](&unk_22F9996A0, v1);
    atomic_store(result, (unint64_t *)&qword_255E23198);
  }
  return result;
}

uint64_t sub_22F8D8D14(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TapView();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22F8D8D50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23190);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22F8D8D98(uint64_t result, void *a2, char a3, uint64_t a4, uint64_t a5)
{
  if (a5)
  {
    sub_22F8D8E04(result, a2, a3 & 1);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

id sub_22F8D8E04(uint64_t a1, void *a2, char a3)
{
  if ((a3 & 1) != 0)
    return a2;
  else
    return (id)swift_retain();
}

uint64_t sub_22F8D8E14(uint64_t result, void *a2, char a3, uint64_t a4, uint64_t a5)
{
  if (a5)
  {
    sub_22F8D8E80(result, a2, a3 & 1);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_22F8D8E80(uint64_t a1, void *a2, char a3)
{
  if ((a3 & 1) != 0)

  else
    swift_release();
}

unint64_t sub_22F8D8E94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255E231A8;
  if (!qword_255E231A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E231B0);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDF4750], v1);
    atomic_store(result, (unint64_t *)&qword_255E231A8);
  }
  return result;
}

uint64_t sub_22F8D8EE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v18[2];

  v1 = v0;
  v18[0] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v18[0]);
  v3 = (char *)v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_22F98F0C4();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v4);
  v6 = sub_22F98EB9C();
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_22F98F0E8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v0 + 32) = 0;
  sub_22F879058();
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x24BEE5758], v7);
  sub_22F98EB90();
  v18[1] = MEMORY[0x24BEE4AF8];
  sub_22F862548(&qword_255E232D8, v5, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E232E0);
  sub_22F8DB084(&qword_255E232E8, &qword_255E232E0);
  sub_22F98F274();
  *(_QWORD *)(v0 + 40) = sub_22F98F10C();
  if (qword_255E1DAF8 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v18[0], (uint64_t)qword_255E29598);
  sub_22F87BC08(v11, (uint64_t)v3);
  v12 = sub_22F98DAA4();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v3, 1, v12) == 1)
  {
    sub_22F87BC50((uint64_t)v3);
  }
  else
  {
    v14 = sub_22F98DA8C();
    v15 = sub_22F98F0A0();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_22F85B000, v14, v15, "MerchantdProxy created", v16, 2u);
      MEMORY[0x2348A6838](v16, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v13 + 8))(v3, v12);
  }
  return v1;
}

uint64_t sub_22F8D91F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v12;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DAF8 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_255E29598);
  sub_22F87BC08(v5, (uint64_t)v4);
  v6 = sub_22F98DAA4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_22F87BC50((uint64_t)v4);
  }
  else
  {
    v8 = sub_22F98DA8C();
    v9 = sub_22F98F0A0();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_22F85B000, v8, v9, "MerchantdProxy destroyed", v10, 2u);
      MEMORY[0x2348A6838](v10, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  sub_22F8847A8(v1 + 16);
  sub_22F8847A8(v1 + 24);
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MerchantdProxy()
{
  return objc_opt_self();
}

uint64_t sub_22F8D93AC(uint64_t a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v11;
  _QWORD aBlock[6];

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1988]), sel_initWithListenerEndpoint_, a1);
  objc_msgSend(v2, sel_setExportedObject_, v1);
  v3 = (void *)objc_opt_self();
  v4 = objc_msgSend(v3, sel_interfaceWithProtocol_, &unk_255E43FD8);
  objc_msgSend(v2, sel_setExportedInterface_, v4);

  v5 = objc_msgSend(v3, sel_interfaceWithProtocol_, &unk_255E492A0);
  objc_msgSend(v2, sel_setRemoteObjectInterface_, v5);

  v6 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_22F8DB07C;
  aBlock[5] = v6;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22F8736DC;
  aBlock[3] = &block_descriptor_16;
  v7 = _Block_copy(aBlock);
  swift_release();
  v8 = objc_msgSend(v2, sel_remoteObjectProxyWithErrorHandler_, v7);
  _Block_release(v7);
  sub_22F98F25C();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E232D0);
  if (swift_dynamicCast())
    v9 = v11;
  else
    v9 = 0;
  objc_msgSend(v2, sel_resume);

  *(_QWORD *)(v1 + 32) = v9;
  return swift_unknownObjectRelease();
}

uint64_t sub_22F8D9598(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  void *v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21[3];

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DAF0 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_255E29580);
  sub_22F87BC08(v5, (uint64_t)v4);
  v6 = sub_22F98DAA4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_22F87BC50((uint64_t)v4);
  }
  else
  {
    v8 = a1;
    v9 = a1;
    v10 = sub_22F98DA8C();
    v11 = sub_22F98F0A0();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v21[0] = v19;
      *(_DWORD *)v12 = 136315138;
      v18 = v12 + 4;
      swift_getErrorValue();
      v13 = sub_22F98F49C();
      v20 = sub_22F878880(v13, v14, v21);
      sub_22F98F208();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22F85B000, v10, v11, "TapUI connection invalidated with error: %s", v12, 0xCu);
      v15 = v19;
      swift_arrayDestroy();
      MEMORY[0x2348A6838](v15, -1, -1);
      MEMORY[0x2348A6838](v12, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v17 = (void *)MEMORY[0x2348A68F8](result + 16);
    result = swift_release();
    if (v17)
    {
      objc_msgSend(v17, sel_updateWithTransactionEvent_, 12);
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

id sub_22F8D9894(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id result;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DAF8 != -1)
    swift_once();
  v9 = __swift_project_value_buffer(v6, (uint64_t)qword_255E29598);
  sub_22F87BC08(v9, (uint64_t)v8);
  v10 = sub_22F98DAA4();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) == 1)
  {
    sub_22F87BC50((uint64_t)v8);
    result = *(id *)(v3 + 32);
    if (!result)
      return result;
    return objc_msgSend(result, sel_tapUIFinishedWithExpected_issuerPIN_, a1 & 1, a2 & 1);
  }
  v13 = sub_22F98DA8C();
  v14 = sub_22F98F07C();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v15 = 0;
    _os_log_impl(&dword_22F85B000, v13, v14, "tapUIFinished", v15, 2u);
    MEMORY[0x2348A6838](v15, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
  result = *(id *)(v3 + 32);
  if (result)
    return objc_msgSend(result, sel_tapUIFinishedWithExpected_issuerPIN_, a1 & 1, a2 & 1);
  return result;
}

id sub_22F8D9A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, SEL *a8)
{
  id result;

  result = *(id *)(a1 + 32);
  if (result)
    return objc_msgSend(result, *a8);
  return result;
}

uint64_t sub_22F8D9AA0(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[6];

  v7 = sub_22F98EB84();
  v19 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_22F98EB9C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[1] = *(_QWORD *)(v3 + 40);
  v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v14;
  *(_BYTE *)(v15 + 24) = a1;
  *(_QWORD *)(v15 + 32) = a2;
  *(_QWORD *)(v15 + 40) = a3;
  aBlock[4] = sub_22F8DB048;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22F8644F0;
  aBlock[3] = &block_descriptor_10_0;
  v16 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_22F98EB90();
  v20 = MEMORY[0x24BEE4AF8];
  sub_22F862548((unint64_t *)&qword_255E22DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E22070);
  sub_22F8DB084((unint64_t *)&qword_255E22DB0, (uint64_t *)&unk_255E22070);
  sub_22F98F274();
  MEMORY[0x2348A5CD4](0, v13, v9, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  swift_release();
  return swift_release();
}

uint64_t sub_22F8D9CD0(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t result;
  void *v5;
  void *v6;

  v3 = a1 + 16;
  swift_beginAccess();
  result = MEMORY[0x2348A68F8](v3);
  if (result)
  {
    v5 = (void *)result;
    v6 = (void *)sub_22F98ED94();
    objc_msgSend(v5, sel_reportGuidanceUpdateWithVisible_trigger_, a2 & 1, v6);

    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_22F8D9DBC(char a1, int a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  _QWORD v17[2];
  uint64_t v18;
  uint64_t v19;
  _QWORD aBlock[6];

  v5 = sub_22F98EB84();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v18 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_22F98EB9C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[1] = *(_QWORD *)(v2 + 40);
  v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v13;
  *(_BYTE *)(v14 + 24) = a1;
  *(_DWORD *)(v14 + 28) = a2;
  aBlock[4] = sub_22F8DAFF4;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22F8644F0;
  aBlock[3] = &block_descriptor_20;
  v15 = _Block_copy(aBlock);
  swift_retain();
  sub_22F98EB90();
  v19 = MEMORY[0x24BEE4AF8];
  sub_22F862548((unint64_t *)&qword_255E22DA0, v6, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E22070);
  sub_22F8DB084((unint64_t *)&qword_255E22DB0, (uint64_t *)&unk_255E22070);
  sub_22F98F274();
  MEMORY[0x2348A5CD4](0, v12, v8, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  swift_release();
  return swift_release();
}

void *sub_22F8D9FE4(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v5;
  void *result;

  v5 = a1 + 16;
  swift_beginAccess();
  result = (void *)MEMORY[0x2348A68F8](v5);
  if (result)
  {
    objc_msgSend(result, sel_reportProxEventInRange_inRangeTime_, a2 & 1, a3);
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

void sub_22F8DA0FC(uint64_t a1, void *a2, char a3)
{
  uint64_t v3;
  void *v4;
  void *v6;

  v4 = *(void **)(v3 + 32);
  if (v4)
  {
    v6 = a2;
    if (a2)
    {
      swift_unknownObjectRetain();
      v6 = (void *)sub_22F98ED94();
    }
    else
    {
      swift_unknownObjectRetain();
    }
    objc_msgSend(v4, sel_pinAuthResultWithError_cancelsFlow_, v6, a3 & 1);

    swift_unknownObjectRelease();
  }
}

uint64_t sub_22F8DA270()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t result;
  void *v12;
  void *v13;
  uint64_t v14;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DAF8 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_255E29598);
  sub_22F87BC08(v5, (uint64_t)v4);
  v6 = sub_22F98DAA4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_22F87BC50((uint64_t)v4);
  }
  else
  {
    v8 = sub_22F98DA8C();
    v9 = sub_22F98F0A0();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_22F85B000, v8, v9, "MerchantdProxy | vasReadSuccess", v10, 2u);
      MEMORY[0x2348A6838](v10, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  result = MEMORY[0x2348A68F8](v1 + 16);
  if (result)
  {
    v12 = (void *)result;
    v13 = (void *)sub_22F98EF38();
    objc_msgSend(v12, sel_vasReadSuccessWithMerchantNames_, v13);

    return swift_unknownObjectRelease();
  }
  return result;
}

void *sub_22F8DA480(const char *a1, SEL *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  void *result;
  uint64_t v16;

  v5 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DAF8 != -1)
    swift_once();
  v9 = __swift_project_value_buffer(v6, (uint64_t)qword_255E29598);
  sub_22F87BC08(v9, (uint64_t)v8);
  v10 = sub_22F98DAA4();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) == 1)
  {
    sub_22F87BC50((uint64_t)v8);
  }
  else
  {
    v12 = sub_22F98DA8C();
    v13 = sub_22F98F0A0();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_22F85B000, v12, v13, a1, v14, 2u);
      MEMORY[0x2348A6838](v14, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
  }
  result = (void *)MEMORY[0x2348A68F8](v5 + 16);
  if (result)
  {
    objc_msgSend(result, *a2);
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_22F8DA628(uint64_t a1, uint64_t a2, const char *a3, SEL *a4)
{
  swift_retain();
  sub_22F8DA480(a3, a4);
  return swift_release();
}

void *sub_22F8DA668(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  void *result;
  uint64_t v14;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DAF8 != -1)
    swift_once();
  v7 = __swift_project_value_buffer(v4, (uint64_t)qword_255E29598);
  sub_22F87BC08(v7, (uint64_t)v6);
  v8 = sub_22F98DAA4();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
  {
    sub_22F87BC50((uint64_t)v6);
  }
  else
  {
    v10 = sub_22F98DA8C();
    v11 = sub_22F98F0A0();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_22F85B000, v10, v11, "MerchantdProxy | requiredsCardPIN", v12, 2u);
      MEMORY[0x2348A6838](v12, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  result = (void *)MEMORY[0x2348A68F8](v2 + 16);
  if (result)
  {
    objc_msgSend(result, sel_requiresCardPIN_, a1);
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

void *sub_22F8DA838()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  void *result;
  uint64_t v12;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DAF8 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_255E29598);
  sub_22F87BC08(v5, (uint64_t)v4);
  v6 = sub_22F98DAA4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_22F87BC50((uint64_t)v4);
  }
  else
  {
    v8 = sub_22F98DA8C();
    v9 = sub_22F98F0A0();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_22F85B000, v8, v9, "MerchantdProxy | closePIN", v10, 2u);
      MEMORY[0x2348A6838](v10, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  result = (void *)MEMORY[0x2348A68F8](v1 + 24);
  if (result)
  {
    objc_msgSend(result, sel_closePINUI);
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

void sub_22F8DAA48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(_QWORD, _QWORD, _QWORD);
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint8_t *v21;
  uint8_t *v22;
  void *v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  char *v27;
  unsigned int v28;
  void *v29;
  void *v30;
  unsigned int (*v31)(_QWORD, _QWORD, _QWORD);
  uint64_t v32;
  uint64_t v33;

  v33 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = (char *)&v31 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v31 - v9;
  if (qword_255E1DAF8 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v2, (uint64_t)qword_255E29598);
  sub_22F87BC08(v11, (uint64_t)v10);
  v12 = sub_22F98DAA4();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v13 + 48);
  if (v14(v10, 1, v12) == 1)
  {
    sub_22F87BC50((uint64_t)v10);
  }
  else
  {
    v32 = v1;
    v15 = sub_22F98DA8C();
    v16 = sub_22F98F0A0();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v31 = v14;
      v18 = v11;
      v19 = v13;
      v20 = v5;
      v21 = v17;
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_22F85B000, v15, v16, "MerchantdProxy | errorInDaemon", v17, 2u);
      v22 = v21;
      v5 = v20;
      v13 = v19;
      v11 = v18;
      v14 = v31;
      MEMORY[0x2348A6838](v22, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    v1 = v32;
  }
  v23 = (void *)MEMORY[0x2348A68F8](v1 + 24);
  if (v23)
  {
    objc_msgSend(v23, sel_errorInDaemonWithError_, v33);
    swift_unknownObjectRelease();
  }
  else
  {
    sub_22F87BC08(v11, (uint64_t)v8);
    if (v14(v8, 1, v12) == 1)
    {
      sub_22F87BC50((uint64_t)v8);
    }
    else
    {
      v24 = sub_22F98DA8C();
      v25 = sub_22F98F0A0();
      if (os_log_type_enabled(v24, v25))
      {
        v26 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v26 = 0;
        _os_log_impl(&dword_22F85B000, v24, v25, "pinUI not connected - forcing close on Host", v26, 2u);
        MEMORY[0x2348A6838](v26, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v12);
    }
    if (qword_255E1DB70 != -1)
      swift_once();
    swift_beginAccess();
    v27 = (char *)off_255E211B8;
    sub_22F87BC08(v11, (uint64_t)v5);
    v28 = v14(v5, 1, v12);
    swift_retain();
    if (v28 == 1)
    {
      sub_22F87BC50((uint64_t)v5);
    }
    else
    {
      sub_22F863858((uint64_t)v27, 0x736F4865736F6C63, 0xEB00000000292874, 0, 0xE000000000000000);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v5, v12);
    }
    v29 = (void *)MEMORY[0x2348A68F8](v27 + 56);
    if (v29)
    {
      v30 = v29;
      objc_msgSend(v29, sel_dismissViewControllerAnimated_completion_, 1, 0);
      swift_release();

    }
    else
    {
      swift_release();
    }
  }
}

void *sub_22F8DAE0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  void *result;
  uint64_t v14;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DAF8 != -1)
    swift_once();
  v7 = __swift_project_value_buffer(v4, (uint64_t)qword_255E29598);
  sub_22F87BC08(v7, (uint64_t)v6);
  v8 = sub_22F98DAA4();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
  {
    sub_22F87BC50((uint64_t)v6);
  }
  else
  {
    v10 = sub_22F98DA8C();
    v11 = sub_22F98F0A0();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_22F85B000, v10, v11, "MerchantdProxy | updateSessionEvent", v12, 2u);
      MEMORY[0x2348A6838](v12, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  result = (void *)MEMORY[0x2348A68F8](v2 + 24);
  if (result)
  {
    objc_msgSend(result, sel_updateSessionEventWithSessionEvent_, a1);
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_22F8DAFAC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_22F8DAFD0()
{
  swift_release();
  return swift_deallocObject();
}

void *sub_22F8DAFF4()
{
  uint64_t v0;

  return sub_22F8D9FE4(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(unsigned int *)(v0 + 28));
}

uint64_t block_copy_helper_19(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_19()
{
  return swift_release();
}

uint64_t sub_22F8DB01C()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_22F8DB048()
{
  uint64_t v0;

  return sub_22F8D9CD0(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_22F8DB058()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_22F8DB07C(void *a1)
{
  return sub_22F8D9598(a1);
}

uint64_t sub_22F8DB084(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x2348A6784](MEMORY[0x24BEE12C8], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for PINView(uint64_t a1)
{
  sub_22F8D8E80(*(_QWORD *)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for PINView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)a2;
  v5 = *(void **)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_22F8D8E04(*(_QWORD *)a2, v5, v6);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for PINView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  char v6;
  uint64_t v7;
  void *v8;
  char v9;

  v4 = *(_QWORD *)a2;
  v5 = *(void **)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_22F8D8E04(*(_QWORD *)a2, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(void **)(a1 + 8);
  v9 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  sub_22F8D8E80(v7, v8, v9);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for PINView(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  void *v6;
  char v7;
  uint64_t v8;

  v4 = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)a1;
  v6 = *(void **)(a1 + 8);
  v7 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v4;
  sub_22F8D8E80(v5, v6, v7);
  v8 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v8;
  swift_release();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  swift_release();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for PINView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PINView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PINView()
{
  return &type metadata for PINView;
}

uint64_t sub_22F8DB404()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_22F8DB414()
{
  return objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CoarseRotationManager(0)), sel_init);
}

uint64_t sub_22F8DB438@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  uint64_t (**v52)();
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  _OWORD v90[2];

  v84 = a2;
  v74 = sub_22F98E098();
  v3 = *(_QWORD *)(v74 - 8);
  v4 = MEMORY[0x24BDAC7A8](v74);
  v6 = (char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v70 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23300);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t *)((char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23308);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23310);
  MEMORY[0x24BDAC7A8](v71);
  v16 = (char *)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23318);
  MEMORY[0x24BDAC7A8](v17);
  v73 = (char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23320);
  MEMORY[0x24BDAC7A8](v75);
  v20 = (char *)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23328);
  MEMORY[0x24BDAC7A8](v76);
  v72 = (uint64_t)&v70 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23330);
  MEMORY[0x24BDAC7A8](v78);
  v77 = (uint64_t)&v70 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23338);
  MEMORY[0x24BDAC7A8](v80);
  v79 = (uint64_t)&v70 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23340);
  v25 = *(_QWORD *)(v24 - 8);
  v82 = v24;
  v83 = v25;
  MEMORY[0x24BDAC7A8](v24);
  v81 = (char *)&v70 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22F98DDB0();
  v28 = v27 / 22.0;
  v29 = v27 / 22.0 * 15.0;
  if (v29 <= 433.0)
    v30 = v29;
  else
    v30 = 433.0;
  if (v28 * 3.0 > 90.0)
    v31 = v28 * 3.0;
  else
    v31 = 90.0;
  v32 = v28 + v28;
  *v11 = sub_22F98EA70();
  v11[1] = v33;
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23348);
  sub_22F8DBD2C((_OWORD *)a1, (uint64_t)v11 + *(int *)(v34 + 44), v32, v31, v30, v32);
  v35 = sub_22F98EA88();
  sub_22F8FA384(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v14, 0.0, 1, INFINITY, 0, v35, v36);
  sub_22F87AC20((uint64_t)v11, &qword_255E23300);
  sub_22F98E08C();
  v37 = v74;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v74);
  sub_22F862548((unint64_t *)&qword_255E1F0A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEE630], MEMORY[0x24BDEE620]);
  v38 = v37;
  v39 = sub_22F98DD80();
  sub_22F87ABDC((uint64_t)v14, (uint64_t)v16, &qword_255E23308);
  *(_QWORD *)&v16[*(int *)(v71 + 36)] = v39;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v38);
  sub_22F87AC20((uint64_t)v14, &qword_255E23308);
  v90[0] = *(_OWORD *)(a1 + 24);
  v40 = *((_QWORD *)&v90[0] + 1);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  sub_22F8E24E8((uint64_t)v90);
  sub_22F8E2510();
  v41 = (uint64_t)v73;
  sub_22F98E6BC();
  sub_22F87AC20((uint64_t)v16, &qword_255E23310);
  v42 = sub_22F98E818();
  v43 = sub_22F98E41C();
  sub_22F87ABDC(v41, (uint64_t)v20, &qword_255E23318);
  v44 = &v20[*(int *)(v75 + 36)];
  *(_QWORD *)v44 = v42;
  v44[8] = v43;
  sub_22F87AC20(v41, &qword_255E23318);
  type metadata accessor for PINViewModel();
  sub_22F862548((unint64_t *)&qword_255E20110, (uint64_t (*)(uint64_t))type metadata accessor for PINViewModel, (uint64_t)&unk_22F991FD4);
  swift_retain();
  v45 = sub_22F98DB64();
  v46 = v72;
  sub_22F87ABDC((uint64_t)v20, v72, &qword_255E23320);
  v47 = (uint64_t *)(v46 + *(int *)(v76 + 36));
  *v47 = v45;
  v47[1] = v40;
  sub_22F87AC20((uint64_t)v20, &qword_255E23320);
  v48 = swift_allocObject();
  v49 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v48 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v48 + 64) = v49;
  *(_OWORD *)(v48 + 80) = *(_OWORD *)(a1 + 64);
  *(_QWORD *)(v48 + 96) = *(_QWORD *)(a1 + 80);
  v50 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v48 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v48 + 32) = v50;
  v51 = v77;
  sub_22F87ABDC(v46, v77, &qword_255E23328);
  v52 = (uint64_t (**)())(v51 + *(int *)(v78 + 36));
  *v52 = sub_22F8E261C;
  v52[1] = (uint64_t (*)())v48;
  v52[2] = 0;
  v52[3] = 0;
  sub_22F8E23D8(a1);
  sub_22F87AC20(v46, &qword_255E23328);
  v53 = swift_allocObject();
  v54 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v53 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v53 + 64) = v54;
  *(_OWORD *)(v53 + 80) = *(_OWORD *)(a1 + 64);
  *(_QWORD *)(v53 + 96) = *(_QWORD *)(a1 + 80);
  v55 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v53 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v53 + 32) = v55;
  v56 = v79;
  sub_22F87ABDC(v51, v79, &qword_255E23330);
  v57 = v80;
  v58 = (_QWORD *)(v56 + *(int *)(v80 + 36));
  *v58 = 0;
  v58[1] = 0;
  v58[2] = sub_22F8E2628;
  v58[3] = v53;
  sub_22F8E23D8(a1);
  sub_22F87AC20(v51, &qword_255E23330);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  sub_22F8E24E8((uint64_t)v90);
  v59 = swift_allocObject();
  v60 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v59 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v59 + 64) = v60;
  *(_OWORD *)(v59 + 80) = *(_OWORD *)(a1 + 64);
  *(_QWORD *)(v59 + 96) = *(_QWORD *)(a1 + 80);
  v61 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v59 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v59 + 32) = v61;
  sub_22F8E23D8(a1);
  v62 = sub_22F87E2D8(&qword_255E23368, &qword_255E23338, sub_22F8E2644, MEMORY[0x24BDF0910]);
  v63 = MEMORY[0x24BEE1328];
  v64 = v81;
  sub_22F98E7A0();
  swift_release();
  sub_22F87AC20(v56, &qword_255E23338);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  sub_22F8E24E8((uint64_t)v90);
  v89 = v85;
  v65 = swift_allocObject();
  v66 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v65 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v65 + 64) = v66;
  *(_OWORD *)(v65 + 80) = *(_OWORD *)(a1 + 64);
  *(_QWORD *)(v65 + 96) = *(_QWORD *)(a1 + 80);
  v67 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v65 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v65 + 32) = v67;
  sub_22F8E23D8(a1);
  v85 = v57;
  v86 = v63;
  v87 = v62;
  v88 = MEMORY[0x24BEE1340];
  swift_getOpaqueTypeConformance2();
  v68 = v82;
  sub_22F98E7A0();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v83 + 8))(v64, v68);
}

uint64_t sub_22F8DBD2C@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  __int128 v78;
  char *v79;
  uint64_t v80;
  void (*v81)(void);
  uint64_t v82;
  uint64_t v83;
  void *v84;
  char v85;
  uint64_t v86;
  __int128 v87;
  __int128 v88;
  BOOL v89;
  void *v90;
  int v91;
  double v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  __int128 v98;
  __int128 v99;
  uint64_t v100;
  __int128 v101;
  __int128 v102;
  uint64_t v103;
  uint64_t KeyPath;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void *v128;
  int v129;
  double v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  __int128 v147;
  __int128 v148;
  uint64_t v149;
  char v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  __int128 v162;
  __int128 v163;
  uint64_t v164;
  void (**v165)();
  uint64_t v166;
  _QWORD *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  void (*v175)(char *, char *, uint64_t);
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  int *v181;
  uint64_t v182;
  uint64_t v183;
  void (*v184)(char *, uint64_t);
  uint64_t v186;
  __int128 v187;
  __int128 v188;
  uint64_t v189;
  char v190;
  void *v191;
  int v192;
  double v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  _BYTE *v207;
  uint64_t v208;
  char *v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  uint64_t *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  char *v229;
  char *v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  char *v237;
  __int128 v238;
  char *v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  char *v244;
  uint64_t v245;
  uint64_t v246;
  _OWORD *v247;
  uint64_t v248;
  char *v249;
  uint64_t v250;
  uint64_t v251;
  _BYTE v252[344];
  _BYTE v253[208];
  _QWORD v254[26];
  _OWORD v255[13];
  uint64_t v256;
  _QWORD v257[26];
  __int128 v258;
  __int128 v259;
  __int128 v260;
  __int128 v261;
  __int128 v262;
  __int128 v263;
  __int128 v264;
  __int128 v265;
  __int128 v266;
  __int128 v267;
  __int128 v268;
  __int128 v269;
  __int128 v270;
  uint64_t v271;
  __int128 v272;
  double v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t (*v276)();
  uint64_t v277;
  __int128 v278;
  __int128 v279;
  uint64_t (*v280)();
  uint64_t v281;
  uint64_t v282;
  _BYTE *(*v283)(_BYTE *);
  uint64_t v284;
  __int128 v285;
  __int128 v286;
  __int128 v287;
  __int128 v288;
  __int128 v289;
  __int128 v290;
  __int128 v291;
  __int128 v292;
  __int128 v293;
  __int128 v294;
  __int128 v295;
  uint64_t v296;
  char v297;
  double v298;
  uint64_t v299;
  _BYTE v300[208];
  _BYTE v301[104];
  __int128 v302;
  _OWORD v303[8];
  uint64_t v304;
  char v305;
  uint64_t (*v306)@<X0>(uint64_t@<X8>);
  uint64_t v307;

  v242 = a2;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E233B0);
  MEMORY[0x24BDAC7A8](v11);
  v198 = (uint64_t *)((char *)&v194 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v197 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E233B8);
  MEMORY[0x24BDAC7A8](v197);
  v202 = (uint64_t)&v194 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v200 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E233C0);
  MEMORY[0x24BDAC7A8](v200);
  v201 = (uint64_t)&v194 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v199 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E233C8);
  MEMORY[0x24BDAC7A8](v199);
  v204 = (uint64_t)&v194 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v203 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E233D0);
  v16 = MEMORY[0x24BDAC7A8](v203);
  v206 = (uint64_t)&v194 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v205 = (uint64_t)&v194 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E233D8);
  v220 = *(_QWORD *)(v19 - 8);
  v221 = v19;
  v20 = MEMORY[0x24BDAC7A8](v19);
  v207 = (char *)&v194 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v214 = (uint64_t)&v194 - v22;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E233E0);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v241 = (uint64_t)&v194 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v248 = (uint64_t)&v194 - v26;
  v208 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E233E8);
  MEMORY[0x24BDAC7A8](v208);
  v213 = (uint64_t *)((char *)&v194 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  v212 = sub_22F98DE7C();
  v218 = *(_QWORD *)(v212 - 8);
  MEMORY[0x24BDAC7A8](v212);
  v209 = (char *)&v194 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E233F0);
  v222 = *(_QWORD *)(v29 - 8);
  v223 = v29;
  v30 = MEMORY[0x24BDAC7A8](v29);
  v211 = (char *)&v194 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30);
  v210 = (uint64_t)&v194 - v32;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E233F8);
  v34 = MEMORY[0x24BDAC7A8](v33);
  v240 = (uint64_t)&v194 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v34);
  v251 = (uint64_t)&v194 - v36;
  v37 = sub_22F98E350();
  *(_QWORD *)&v238 = *(_QWORD *)(v37 - 8);
  *((_QWORD *)&v238 + 1) = v37;
  MEMORY[0x24BDAC7A8](v37);
  v237 = (char *)&v194 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_22F98E098();
  v231 = *(_QWORD *)(v39 - 8);
  v232 = v39;
  v40 = MEMORY[0x24BDAC7A8](v39);
  v229 = (char *)&v194 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v40);
  v230 = (char *)&v194 - v42;
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23400);
  MEMORY[0x24BDAC7A8](v43);
  v225 = (uint64_t *)((char *)&v194 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0));
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23408);
  MEMORY[0x24BDAC7A8](v45);
  v228 = (uint64_t)&v194 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v226 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23410);
  MEMORY[0x24BDAC7A8](v226);
  v227 = (uint64_t)&v194 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v234 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23418);
  MEMORY[0x24BDAC7A8](v234);
  v243 = (uint64_t)&v194 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v235 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23420);
  MEMORY[0x24BDAC7A8](v235);
  v236 = (uint64_t)&v194 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v246 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23428);
  v250 = *(_QWORD *)(v246 - 8);
  v50 = MEMORY[0x24BDAC7A8](v246);
  v239 = (char *)&v194 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = MEMORY[0x24BDAC7A8](v50);
  v233 = (uint64_t)&v194 - v53;
  MEMORY[0x24BDAC7A8](v52);
  v249 = (char *)&v194 - v54;
  v55 = sub_22F98EA4C();
  v56 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55);
  v58 = (char *)&v194 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  v215 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E21098);
  MEMORY[0x24BDAC7A8](v215);
  v60 = (char *)&v194 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  v217 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23430);
  MEMORY[0x24BDAC7A8](v217);
  v62 = (char *)&v194 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  v216 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23438);
  MEMORY[0x24BDAC7A8](v216);
  v64 = (char *)&v194 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  v224 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23440);
  v244 = *(char **)(v224 - 8);
  MEMORY[0x24BDAC7A8](v224);
  v66 = (char *)&v194 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23448);
  v68 = MEMORY[0x24BDAC7A8](v67);
  v245 = (uint64_t)&v194 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v68);
  v71 = (char *)&v194 - v70;
  v247 = a1;
  v285 = *(_OWORD *)((char *)a1 + 40);
  v219 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3B0);
  sub_22F98E8FC();
  if (v258 == 1)
  {
    sub_22F98EA28();
    (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v60, v58, v55);
    *(_WORD *)&v60[*(int *)(v215 + 56)] = 256;
    (*(void (**)(char *, uint64_t))(v56 + 8))(v58, v55);
    v72 = sub_22F98DEDC();
    v73 = sub_22F98E41C();
    sub_22F87ABDC((uint64_t)v60, (uint64_t)v62, &qword_255E21098);
    v74 = &v62[*(int *)(v217 + 36)];
    *(_QWORD *)v74 = v72;
    v74[8] = v73;
    sub_22F87AC20((uint64_t)v60, &qword_255E21098);
    sub_22F87ABDC((uint64_t)v62, (uint64_t)v64, &qword_255E23430);
    *(_QWORD *)&v64[*(int *)(v216 + 36)] = 0x3FF0000000000000;
    sub_22F87AC20((uint64_t)v62, &qword_255E23430);
    v75 = swift_allocObject();
    v76 = (uint64_t)v247;
    v77 = v247[3];
    *(_OWORD *)(v75 + 48) = v247[2];
    *(_OWORD *)(v75 + 64) = v77;
    *(_OWORD *)(v75 + 80) = *(_OWORD *)(v76 + 64);
    *(_QWORD *)(v75 + 96) = *(_QWORD *)(v76 + 80);
    v78 = *(_OWORD *)(v76 + 16);
    *(_OWORD *)(v75 + 16) = *(_OWORD *)v76;
    *(_OWORD *)(v75 + 32) = v78;
    sub_22F87ABDC((uint64_t)v64, (uint64_t)v66, &qword_255E23438);
    v79 = &v66[*(int *)(v224 + 36)];
    *(_QWORD *)v79 = 0;
    *((_QWORD *)v79 + 1) = 0;
    *((_QWORD *)v79 + 2) = sub_22F8E3828;
    *((_QWORD *)v79 + 3) = v75;
    sub_22F8E23D8(v76);
    sub_22F87AC20((uint64_t)v64, &qword_255E23438);
    sub_22F87B2B4((uint64_t)v66, (uint64_t)v71, &qword_255E23440);
  }
  else
  {
    v76 = (uint64_t)v247;
  }
  v80 = v243;
  v81 = (void (*)(void))*((_QWORD *)v244 + 7);
  v244 = v71;
  v81();
  v302 = *(_OWORD *)(v76 + 24);
  v82 = *((_QWORD *)&v302 + 1);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  sub_22F8E24E8((uint64_t)&v302);
  if (v285 != 1)
    goto LABEL_7;
  v285 = *(_OWORD *)(v76 + 56);
  sub_22F98E8FC();
  if (v258 != 1)
    goto LABEL_7;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  sub_22F8E24E8((uint64_t)&v302);
  if ((v285 & 1) == 0)
  {
    v186 = swift_allocObject();
    v187 = *(_OWORD *)(v76 + 48);
    *(_OWORD *)(v186 + 48) = *(_OWORD *)(v76 + 32);
    *(_OWORD *)(v186 + 64) = v187;
    *(_OWORD *)(v186 + 80) = *(_OWORD *)(v76 + 64);
    *(_QWORD *)(v186 + 96) = *(_QWORD *)(v76 + 80);
    v188 = *(_OWORD *)(v76 + 16);
    *(_OWORD *)(v186 + 16) = *(_OWORD *)v76;
    *(_OWORD *)(v186 + 32) = v188;
    v258 = 0u;
    v259 = 0u;
    sub_22F8E23D8(v76);
    type metadata accessor for CGRect(0);
    sub_22F98E8F0();
    v303[6] = v285;
    v303[7] = v286;
    v304 = v287;
    v305 = 1;
    v306 = sub_22F8E381C;
    v307 = v186;
    sub_22F98EA88();
    sub_22F8FA3E8(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, &v258, 0.0, 1, 0.0, 1);
    swift_release();
    swift_release();
    v189 = sub_22F98DEDC();
    v190 = sub_22F98E41C();
    type metadata accessor for CoarseRotationManager(0);
    sub_22F862548(&qword_255E233A8, type metadata accessor for CoarseRotationManager, (uint64_t)&unk_22F992DC4);
    v191 = (void *)sub_22F98DC6C();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_22F98DBA0();
    swift_release();
    swift_release();
    v192 = v285;

    v80 = v243;
    v193 = 1.0;
    if (v192)
      v193 = 0.0;
    v293 = v266;
    v294 = v267;
    v295 = v268;
    v289 = v262;
    v290 = v263;
    v291 = v264;
    v292 = v265;
    v285 = v258;
    v286 = v259;
    v287 = v260;
    v288 = v261;
    v296 = v189;
    v297 = v190;
    v298 = v193;
    v299 = 0x4000000000000000;
    nullsub_1(&v285);
  }
  else
  {
LABEL_7:
    sub_22F8E2FC8(&v285);
  }
  sub_22F87B2B4((uint64_t)&v285, (uint64_t)v300, &qword_255E23450);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  sub_22F8E24E8((uint64_t)&v302);
  v224 = v82;
  if (v285 == 1
    && (swift_getKeyPath(),
        swift_getKeyPath(),
        swift_retain(),
        sub_22F98DBA0(),
        swift_release(),
        swift_release(),
        sub_22F8E24E8((uint64_t)&v302),
        (v285 & 1) == 0))
  {
    v258 = *(_OWORD *)(v76 + 72);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E233A0);
    sub_22F98E914();
    v215 = v285;
    v195 = v286;
    v196 = *((_QWORD *)&v285 + 1);
    v217 = *(_QWORD *)v76;
    LODWORD(v216) = *(unsigned __int8 *)(v76 + 16);
    type metadata accessor for CoarseRotationManager(0);
    sub_22F862548(&qword_255E233A8, type metadata accessor for CoarseRotationManager, (uint64_t)&unk_22F992DC4);
    v84 = (void *)sub_22F98DC6C();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_22F98DBA0();
    swift_release();
    swift_release();
    v85 = v285;

    v86 = swift_allocObject();
    v87 = *(_OWORD *)(v76 + 48);
    *(_OWORD *)(v86 + 48) = *(_OWORD *)(v76 + 32);
    *(_OWORD *)(v86 + 64) = v87;
    *(_OWORD *)(v86 + 80) = *(_OWORD *)(v76 + 64);
    *(_QWORD *)(v86 + 96) = *(_QWORD *)(v76 + 80);
    v88 = *(_OWORD *)(v76 + 16);
    *(_OWORD *)(v86 + 16) = *(_OWORD *)v76;
    *(_OWORD *)(v86 + 32) = v88;
    sub_22F8E23D8(v76);
    sub_22F897F78((uint64_t)&unk_24FD1BD88, (uint64_t)&unk_24FD1BDB0, v215, v196, v195, v85, (uint64_t)sub_22F8E3680, v86, (uint64_t)v301);
    sub_22F98EA88();
    v89 = 1;
    sub_22F8FA58C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v255, 0.0, 1, INFINITY, 0);
    sub_22F8E3688((uint64_t)v301);
    v90 = (void *)sub_22F98DC6C();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_22F98DBA0();
    swift_release();
    swift_release();
    v91 = v285;

    if (v91)
      v92 = -3.14159265;
    else
      v92 = 0.0;
    sub_22F98EB6C();
    v94 = v93;
    v96 = v95;
    v97 = swift_allocObject();
    v98 = *(_OWORD *)(v76 + 48);
    *(_OWORD *)(v97 + 48) = *(_OWORD *)(v76 + 32);
    *(_OWORD *)(v97 + 64) = v98;
    *(_OWORD *)(v97 + 80) = *(_OWORD *)(v76 + 64);
    *(_QWORD *)(v97 + 96) = *(_QWORD *)(v76 + 80);
    v99 = *(_OWORD *)(v76 + 16);
    *(_OWORD *)(v97 + 16) = *(_OWORD *)v76;
    *(_OWORD *)(v97 + 32) = v99;
    v100 = swift_allocObject();
    v101 = *(_OWORD *)(v76 + 48);
    *(_OWORD *)(v100 + 48) = *(_OWORD *)(v76 + 32);
    *(_OWORD *)(v100 + 64) = v101;
    *(_OWORD *)(v100 + 80) = *(_OWORD *)(v76 + 64);
    *(_QWORD *)(v100 + 96) = *(_QWORD *)(v76 + 80);
    v102 = *(_OWORD *)(v76 + 16);
    *(_OWORD *)(v100 + 16) = *(_OWORD *)v76;
    *(_OWORD *)(v100 + 32) = v102;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_22F8E23D8(v76);
    sub_22F8E23D8(v76);
    sub_22F8E2EB8((uint64_t)&v302);
    sub_22F98DBA0();
    swift_release();
    swift_release();
    sub_22F8E24E8((uint64_t)&v302);
    v103 = *((_QWORD *)&v287 + 1);
    sub_22F87A26C(v285, *((uint64_t *)&v285 + 1), v286, *((uint64_t *)&v286 + 1), v287, *((uint64_t *)&v287 + 1));
    if (!v103)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      sub_22F98DBA0();
      swift_release();
      swift_release();
      sub_22F8E24E8((uint64_t)&v302);
      v89 = v285 != 1;
    }
    KeyPath = swift_getKeyPath();
    v105 = swift_allocObject();
    *(_BYTE *)(v105 + 16) = v89;
    v268 = v255[10];
    v269 = v255[11];
    v270 = v255[12];
    v271 = v256;
    v264 = v255[6];
    v265 = v255[7];
    v266 = v255[8];
    v267 = v255[9];
    v260 = v255[2];
    v261 = v255[3];
    v262 = v255[4];
    v263 = v255[5];
    v258 = v255[0];
    v259 = v255[1];
    v272 = xmmword_22F996260;
    v273 = v92;
    v274 = v94;
    v275 = v96;
    v276 = sub_22F8E3724;
    v277 = v97;
    v278 = 0u;
    v279 = 0u;
    v280 = sub_22F8E3748;
    v281 = v100;
    v282 = KeyPath;
    v283 = sub_22F8E37B8;
    v284 = v105;
    nullsub_1(&v258);
    sub_22F87B2B4((uint64_t)&v258, (uint64_t)&v285, &qword_255E23458);
    v83 = v243;
  }
  else
  {
    v83 = v80;
    sub_22F8E2FF4((uint64_t)&v258);
    sub_22F87B2B4((uint64_t)&v258, (uint64_t)&v285, &qword_255E23458);
  }
  v106 = sub_22F98E128();
  v107 = (uint64_t)v225;
  *v225 = v106;
  *(_QWORD *)(v107 + 8) = 0;
  *(_BYTE *)(v107 + 16) = 1;
  v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23460);
  sub_22F8DE1F4(v76, v107 + *(int *)(v108 + 44), a3, a4, a5, a6);
  v109 = sub_22F98EA88();
  v110 = v228;
  sub_22F8FA74C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v228, 0.0, 1, INFINITY, 0, v109, v111);
  sub_22F87AC20(v107, &qword_255E23400);
  v112 = v230;
  sub_22F98E08C();
  v114 = v231;
  v113 = v232;
  (*(void (**)(char *, char *, uint64_t))(v231 + 16))(v229, v112, v232);
  sub_22F862548((unint64_t *)&qword_255E1F0A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEE630], MEMORY[0x24BDEE620]);
  v115 = sub_22F98DD80();
  v116 = v227;
  sub_22F87ABDC(v110, v227, &qword_255E23408);
  *(_QWORD *)(v116 + *(int *)(v226 + 36)) = v115;
  (*(void (**)(char *, uint64_t))(v114 + 8))(v112, v113);
  sub_22F87AC20(v110, &qword_255E23408);
  sub_22F87ABDC(v116, v83, &qword_255E23410);
  *(_QWORD *)(v83 + *(int *)(v234 + 36)) = 0x4010000000000000;
  sub_22F87AC20(v116, &qword_255E23410);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  sub_22F8E24E8((uint64_t)&v302);
  v117 = *((_QWORD *)&v260 + 1);
  sub_22F87A26C(v258, *((uint64_t *)&v258 + 1), v259, *((uint64_t *)&v259 + 1), v260, *((uint64_t *)&v260 + 1));
  if (!v117)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_22F98DBA0();
    swift_release();
    swift_release();
    sub_22F8E24E8((uint64_t)&v302);
  }
  sub_22F8E3034();
  v118 = v236;
  sub_22F98E6BC();
  sub_22F87AC20(v83, &qword_255E23418);
  v119 = v237;
  sub_22F98E344();
  sub_22F8E31C0();
  v120 = v233;
  sub_22F98E6D4();
  (*(void (**)(char *, _QWORD))(v238 + 8))(v119, *((_QWORD *)&v238 + 1));
  sub_22F87AC20(v118, &qword_255E23420);
  (*(void (**)(char *, uint64_t, uint64_t))(v250 + 32))(v249, v120, v246);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  sub_22F8E24E8((uint64_t)&v302);
  if (v258 == 1
    && (swift_getKeyPath(),
        swift_getKeyPath(),
        swift_retain(),
        sub_22F98DBA0(),
        swift_release(),
        swift_release(),
        sub_22F8E24E8((uint64_t)&v302),
        (v258 & 1) == 0))
  {
    v255[0] = *(_OWORD *)((char *)v247 + 72);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E233A0);
    sub_22F98E914();
    v123 = sub_22F9301E0(v258);
    v243 = v124;
    v126 = v125;
    *((_QWORD *)&v238 + 1) = v127;
    type metadata accessor for CoarseRotationManager(0);
    sub_22F862548(&qword_255E233A8, type metadata accessor for CoarseRotationManager, (uint64_t)&unk_22F992DC4);
    v128 = (void *)sub_22F98DC6C();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_22F98DBA0();
    swift_release();
    swift_release();
    v129 = v258;

    if (v129)
      v130 = -3.14159265;
    else
      v130 = 0.0;
    sub_22F98EB6C();
    v132 = v131;
    v134 = v133;
    v135 = swift_getKeyPath();
    v136 = v218;
    v137 = v209;
    v138 = v212;
    (*(void (**)(char *, _QWORD, uint64_t))(v218 + 104))(v209, *MEMORY[0x24BDED100], v212);
    v139 = v213;
    (*(void (**)(char *, char *, uint64_t))(v136 + 16))((char *)v213 + *(int *)(v208 + 28), v137, v138);
    *v139 = v135;
    v122 = v223;
    v140 = (uint64_t)v211;
    sub_22F87ABDC((uint64_t)v139, (uint64_t)&v211[*(int *)(v223 + 36)], &qword_255E233E8);
    *(_QWORD *)&v238 = v123;
    v141 = v243;
    *(_QWORD *)v140 = v123;
    *(_QWORD *)(v140 + 8) = v141;
    v142 = *((_QWORD *)&v238 + 1);
    *(_QWORD *)(v140 + 16) = v126;
    *(_QWORD *)(v140 + 24) = v142;
    *(double *)(v140 + 32) = v130;
    *(_QWORD *)(v140 + 40) = v132;
    *(_QWORD *)(v140 + 48) = v134;
    *(_QWORD *)(v140 + 56) = 0x4000000000000000;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_22F87AC20((uint64_t)v139, &qword_255E233E8);
    (*(void (**)(char *, uint64_t))(v218 + 8))(v137, v138);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    v143 = v210;
    sub_22F87B2B4(v140, v210, &qword_255E233F0);
    sub_22F87B2B4(v143, v251, &qword_255E233F0);
    v121 = 0;
  }
  else
  {
    v121 = 1;
    v122 = v223;
  }
  v144 = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v222 + 56))(v251, v121, 1, v122);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  sub_22F8E24E8((uint64_t)&v302);
  v145 = *((_QWORD *)&v260 + 1);
  if (*((_QWORD *)&v260 + 1))
  {
    v146 = *((_QWORD *)&v258 + 1);
    v147 = v262;
    v148 = v263;
    v235 = v261;
    v236 = v258;
    v303[0] = v258;
    v238 = v259;
    v303[1] = v259;
    v243 = v260;
    v303[2] = v260;
    v237 = (char *)*((_QWORD *)&v261 + 1);
    v303[3] = v261;
    v303[4] = v262;
    v303[5] = v263;
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_22F98DBA0();
    swift_release();
    swift_release();
    sub_22F8E24E8((uint64_t)&v302);
    if ((v258 & 1) != 0)
    {
      sub_22F87A26C(v236, v146, v238, *((uint64_t *)&v238 + 1), v243, v145);
      v144 = 1;
    }
    else
    {
      v229 = (char *)*((_QWORD *)&v148 + 1);
      v230 = (char *)v148;
      v231 = *((_QWORD *)&v147 + 1);
      v232 = v147;
      v233 = v145;
      v234 = v146;
      v149 = (uint64_t)v247;
      v258 = *(_OWORD *)((char *)v247 + 56);
      sub_22F98E8FC();
      if (LOBYTE(v255[0]) == 1)
      {
        v150 = sub_22F98E41C();
        sub_22F98E80C();
        v151 = sub_22F98E830();
        swift_release();
        v152 = swift_getKeyPath();
        v153 = sub_22F98E128();
        v154 = (uint64_t)v198;
        *v198 = v153;
        *(_QWORD *)(v154 + 8) = 0;
        *(_BYTE *)(v154 + 16) = 1;
        v155 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E234A0);
        sub_22F8E17F8((uint64_t)v303, v154 + *(int *)(v155 + 44));
        v156 = sub_22F98E41C();
        v157 = v202;
        sub_22F87ABDC(v154, v202, &qword_255E233B0);
        *(_BYTE *)(v157 + *(int *)(v197 + 36)) = v156;
        sub_22F87AC20(v154, &qword_255E233B0);
        sub_22F98DD20();
        sub_22F98DD20();
        sub_22F98DD50();
        sub_22F98DD5C();
        swift_release();
        swift_release();
        v158 = sub_22F98DD14();
        swift_release();
        swift_release();
        v159 = v201;
        sub_22F87ABDC(v157, v201, &qword_255E233B8);
        *(_QWORD *)(v159 + *(int *)(v200 + 36)) = v158;
        sub_22F87AC20(v157, &qword_255E233B8);
        v160 = v204;
        sub_22F87ABDC(v159, v204, &qword_255E233C0);
        *(_QWORD *)(v160 + *(int *)(v199 + 36)) = 0x4018000000000000;
        sub_22F87AC20(v159, &qword_255E233C0);
        v161 = swift_allocObject();
        v162 = *(_OWORD *)(v149 + 48);
        *(_OWORD *)(v161 + 48) = *(_OWORD *)(v149 + 32);
        *(_OWORD *)(v161 + 64) = v162;
        *(_OWORD *)(v161 + 80) = *(_OWORD *)(v149 + 64);
        *(_QWORD *)(v161 + 96) = *(_QWORD *)(v149 + 80);
        v163 = *(_OWORD *)(v149 + 16);
        *(_OWORD *)(v161 + 16) = *(_OWORD *)v149;
        *(_OWORD *)(v161 + 32) = v163;
        v164 = v206;
        sub_22F87ABDC(v160, v206, &qword_255E233C8);
        v165 = (void (**)())(v164 + *(int *)(v203 + 36));
        *v165 = sub_22F8E35E8;
        v165[1] = (void (*)())v161;
        v165[2] = 0;
        v165[3] = 0;
        sub_22F8E23D8(v149);
        sub_22F87AC20(v160, &qword_255E233C8);
        v166 = v205;
        sub_22F87B2B4(v164, v205, &qword_255E233D0);
        sub_22F87ABDC(v166, v164, &qword_255E233D0);
        v167 = v207;
        *v207 = v150;
        v167[1] = v152;
        v167[2] = v151;
        v167[3] = 0x4014000000000000;
        v168 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E234A8);
        sub_22F87ABDC(v164, (uint64_t)v167 + *(int *)(v168 + 48), &qword_255E233D0);
        swift_retain_n();
        swift_retain_n();
        sub_22F87A26C(v236, v234, v238, *((uint64_t *)&v238 + 1), v243, v233);
        sub_22F87AC20(v166, &qword_255E233D0);
        swift_release();
        swift_release();
        sub_22F87AC20(v164, &qword_255E233D0);
        swift_release();
        swift_release();
        v169 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23498);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v169 - 8) + 56))(v167, 0, 1, v169);
        v170 = (uint64_t)v167;
        v171 = v214;
        sub_22F87B2B4(v170, v214, &qword_255E233D8);
      }
      else
      {
        sub_22F87A26C(v236, v234, v238, *((uint64_t *)&v238 + 1), v243, v233);
        v172 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23498);
        v171 = v214;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v172 - 8) + 56))(v214, 1, 1, v172);
      }
      sub_22F87B2B4(v171, v248, &qword_255E233D8);
      v144 = 0;
    }
  }
  v173 = v248;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v220 + 56))(v248, v144, 1, v221);
  v174 = v245;
  sub_22F87ABDC((uint64_t)v244, v245, &qword_255E23448);
  sub_22F87B2B4((uint64_t)v300, (uint64_t)v253, &qword_255E23450);
  sub_22F87B2B4((uint64_t)&v285, (uint64_t)v252, &qword_255E23458);
  v175 = *(void (**)(char *, char *, uint64_t))(v250 + 16);
  v176 = v239;
  v177 = v246;
  v175(v239, v249, v246);
  v178 = v240;
  sub_22F87ABDC(v251, v240, &qword_255E233F8);
  v179 = v241;
  sub_22F87ABDC(v173, v241, &qword_255E233E0);
  v180 = v242;
  sub_22F87ABDC(v174, v242, &qword_255E23448);
  v181 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255E23490);
  v182 = v180 + v181[12];
  sub_22F87B2B4((uint64_t)v253, (uint64_t)v254, &qword_255E23450);
  sub_22F87B2B4((uint64_t)v254, v182, &qword_255E23450);
  v183 = v180 + v181[16];
  sub_22F87B2B4((uint64_t)v252, (uint64_t)v255, &qword_255E23458);
  sub_22F87B2B4((uint64_t)v255, v183, &qword_255E23458);
  v175((char *)(v180 + v181[20]), v176, v177);
  sub_22F87ABDC(v178, v180 + v181[24], &qword_255E233F8);
  sub_22F87ABDC(v179, v180 + v181[28], &qword_255E233E0);
  sub_22F8E3540(v254, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22F8E3244);
  sub_22F8E3390((uint64_t)v255, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22F8E3274);
  sub_22F87AC20(v248, &qword_255E233E0);
  sub_22F87AC20(v251, &qword_255E233F8);
  v184 = *(void (**)(char *, uint64_t))(v250 + 8);
  v184(v249, v177);
  sub_22F87AC20((uint64_t)v244, &qword_255E23448);
  sub_22F87AC20(v179, &qword_255E233E0);
  sub_22F87AC20(v178, &qword_255E233F8);
  v184(v176, v177);
  sub_22F87B2B4((uint64_t)v252, (uint64_t)&v258, &qword_255E23458);
  sub_22F8E3390((uint64_t)&v258, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22F8E3424);
  sub_22F87B2B4((uint64_t)v253, (uint64_t)v257, &qword_255E23450);
  sub_22F8E3540(v257, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22F8E35AC);
  return sub_22F87AC20(v245, &qword_255E23448);
}

uint64_t sub_22F8DDC98(uint64_t a1)
{
  char v2;
  __int128 v3;

  v3 = *(_OWORD *)(a1 + 24);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  sub_22F8E24E8((uint64_t)&v3);
  if (v2 == 1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_22F98DBAC();
  }
  swift_retain();
  sub_22F870580();
  return sub_22F8E24E8((uint64_t)&v3);
}

uint64_t sub_22F8DDD7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t KeyPath;
  void *v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;

  v24 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1FFE8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_22F98E878();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E234B0);
  MEMORY[0x24BDAC7A8](v23);
  v22 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22F98E86C();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BDF3FD0], v4);
  v21 = sub_22F98E890();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_22F98EA88();
  sub_22F98DCFC();
  v9 = v36;
  LOBYTE(v7) = v37;
  v10 = v38;
  v11 = v39;
  v13 = v40;
  v12 = v41;
  v14 = sub_22F98E4A0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v3, 1, 1, v14);
  sub_22F98E4DC();
  sub_22F87AC20((uint64_t)v3, &qword_255E1FFE8);
  sub_22F98E4D0();
  v15 = sub_22F98E50C();
  swift_release();
  KeyPath = swift_getKeyPath();
  v25 = v21;
  v26 = 0;
  v27 = 1;
  v28 = v9;
  v29 = (char)v7;
  v30 = v10;
  v31 = v11;
  v32 = v13;
  v33 = v12;
  v34 = KeyPath;
  v35 = v15;
  type metadata accessor for CoarseRotationManager(0);
  sub_22F862548(&qword_255E233A8, type metadata accessor for CoarseRotationManager, (uint64_t)&unk_22F992DC4);
  v17 = (void *)sub_22F98DC6C();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();

  __swift_instantiateConcreteTypeFromMangledName(&qword_255E20BC8);
  sub_22F8A08CC();
  v18 = (uint64_t)v22;
  sub_22F98E6BC();
  swift_release();
  swift_release();
  swift_release();
  sub_22F98DEB8();
  return sub_22F87AC20(v18, &qword_255E234B0);
}

uint64_t sub_22F8DE0F4(_BYTE *a1, uint64_t a2)
{
  __int128 v4;

  v4 = *(_OWORD *)(a2 + 24);
  swift_retain();
  sub_22F874C58(a1);
  return sub_22F8E24E8((uint64_t)&v4);
}

uint64_t sub_22F8DE13C(uint64_t a1)
{
  __int128 v2;
  uint64_t v3;
  _BYTE v4[8];

  v2 = *(_OWORD *)(a1 + 72);
  sub_22F87B2B4((uint64_t)&v2 + 8, (uint64_t)v4, &qword_255E234B8);
  v3 = v2;
  sub_22F8E3880((uint64_t)&v3);
  sub_22F89B6F0((uint64_t)v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E233A0);
  sub_22F98E8FC();
  swift_bridgeObjectRelease();
  sub_22F98E908();
  sub_22F898A34((uint64_t)&v3);
  return sub_22F8E38A8((uint64_t)v4);
}

uint64_t sub_22F8DE1F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  int v52;
  double v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  char *v63;
  uint64_t *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _OWORD v78[2];

  v76 = a2;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E234C8);
  MEMORY[0x24BDAC7A8](v11);
  v70 = (uint64_t *)((char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E234D0);
  v13 = MEMORY[0x24BDAC7A8](v73);
  v71 = (uint64_t)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v72 = (uint64_t)&v62 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E234D8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for PINPrivacyLockView();
  MEMORY[0x24BDAC7A8](v19);
  v21 = (uint64_t *)((char *)&v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E234E0);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v62 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v62 - v26;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E234E8);
  v74 = *(_QWORD *)(v28 - 8);
  v75 = v28;
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&v62 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78[0] = *(_OWORD *)(a1 + 56);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3B0);
  sub_22F98E8FC();
  if (v77 == 1)
  {
    v62 = v19;
    v63 = v25;
    v64 = v21;
    v65 = v27;
    v66 = v30;
    v67 = v22;
    v68 = v16;
    v69 = v18;
    v78[0] = *(_OWORD *)(a1 + 24);
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_22F98DBA0();
    swift_release();
    swift_release();
    sub_22F8E24E8((uint64_t)v78);
    if (v77 == 1
      && (swift_getKeyPath(),
          swift_getKeyPath(),
          swift_retain(),
          sub_22F98DBA0(),
          swift_release(),
          swift_release(),
          sub_22F8E24E8((uint64_t)v78),
          v77))
    {
      type metadata accessor for PINViewModel();
      sub_22F862548((unint64_t *)&qword_255E20110, (uint64_t (*)(uint64_t))type metadata accessor for PINViewModel, (uint64_t)&unk_22F991FD4);
      swift_retain();
      v31 = sub_22F98DF6C();
      v32 = (uint64_t)v64;
      *v64 = v31;
      *(_QWORD *)(v32 + 8) = v33;
      v34 = v62;
      sub_22F87BBC4();
      sub_22F98E2B4();
      v77 = 0x3FF0000000000000;
      sub_22F87CE8C();
      sub_22F98DCB4();
      v35 = (uint64_t *)(v32 + *(int *)(v34 + 28));
      type metadata accessor for PrivacyAuthenticatorModel();
      sub_22F862548(&qword_255E23518, (uint64_t (*)(uint64_t))type metadata accessor for PrivacyAuthenticatorModel, (uint64_t)&unk_22F99559C);
      *v35 = sub_22F98DE4C();
      v35[1] = v36;
      v37 = sub_22F98DEDC();
      LOBYTE(v35) = sub_22F98E41C();
      v38 = (uint64_t)v63;
      sub_22F889F68(v32, (uint64_t)v63, (uint64_t (*)(_QWORD))type metadata accessor for PINPrivacyLockView);
      v39 = v38 + *(int *)(v67 + 36);
      *(_QWORD *)v39 = v37;
      *(_BYTE *)(v39 + 8) = (_BYTE)v35;
      sub_22F8AB158(v32, (uint64_t (*)(_QWORD))type metadata accessor for PINPrivacyLockView);
      v40 = (uint64_t)v65;
      sub_22F87B2B4(v38, (uint64_t)v65, &qword_255E234E0);
      sub_22F87ABDC(v40, (uint64_t)v69, &qword_255E234E0);
      swift_storeEnumTagMultiPayload();
      sub_22F8E3940();
      sub_22F8E39C4();
      v41 = (uint64_t)v66;
      sub_22F98E1E8();
      swift_release();
      v42 = v40;
      v43 = &qword_255E234E0;
    }
    else
    {
      v48 = sub_22F98E128();
      v49 = (uint64_t)v70;
      *v70 = v48;
      *(_QWORD *)(v49 + 8) = 0;
      *(_BYTE *)(v49 + 16) = 1;
      v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E234F0);
      sub_22F8DE8A8(a1, v49 + *(int *)(v50 + 44), a3, a4, a5, a6);
      type metadata accessor for CoarseRotationManager(0);
      sub_22F862548(&qword_255E233A8, type metadata accessor for CoarseRotationManager, (uint64_t)&unk_22F992DC4);
      v51 = (void *)sub_22F98DC6C();
      swift_getKeyPath();
      swift_getKeyPath();
      sub_22F98DBA0();
      swift_release();
      swift_release();
      v52 = v77;

      if (v52)
        v53 = -3.14159265;
      else
        v53 = 0.0;
      sub_22F98EB6C();
      v55 = v54;
      v57 = v56;
      v58 = v71;
      sub_22F87ABDC(v49, v71, &qword_255E234C8);
      v59 = v58 + *(int *)(v73 + 36);
      *(double *)v59 = v53;
      *(_QWORD *)(v59 + 8) = v55;
      *(_QWORD *)(v59 + 16) = v57;
      sub_22F87AC20(v49, &qword_255E234C8);
      v60 = v72;
      sub_22F87B2B4(v58, v72, &qword_255E234D0);
      sub_22F87ABDC(v60, (uint64_t)v69, &qword_255E234D0);
      swift_storeEnumTagMultiPayload();
      sub_22F8E3940();
      sub_22F8E39C4();
      v41 = (uint64_t)v66;
      sub_22F98E1E8();
      v42 = v60;
      v43 = &qword_255E234D0;
    }
    sub_22F87AC20(v42, v43);
    v47 = v76;
    sub_22F87B2B4(v41, v76, &qword_255E234E8);
    v44 = 0;
    v46 = v74;
    v45 = v75;
  }
  else
  {
    v44 = 1;
    v46 = v74;
    v45 = v75;
    v47 = v76;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 56))(v47, v44, 1, v45);
}

uint64_t sub_22F8DE8A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  double v47;
  BOOL v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  double v72;
  char v73;
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  _BYTE *v81;
  _BYTE *v82;
  uint64_t v83;
  __int128 v84;
  __int128 v85;
  _BYTE *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _OWORD *v90;
  __int128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _BYTE *v100;
  _BYTE *v101;
  uint64_t v102;
  uint64_t v103;
  _BYTE *v104;
  uint64_t *v105;
  double v106;
  _BYTE *v107;
  _BYTE *v108;
  _BYTE *v109;
  uint64_t v110;
  uint64_t v111;
  _BYTE *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _BYTE *v118;
  uint64_t v119;
  _BYTE *v120;
  _BYTE *v121;
  _BYTE *v122;
  _BYTE *v123;
  uint64_t v124;
  uint64_t v125;
  _BYTE v127[12];
  int v128;
  uint64_t KeyPath;
  int v130;
  int v131;
  uint64_t v132;
  int v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _BYTE *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  double v145;
  double v146;
  double v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  _BYTE *v151;
  uint64_t v152;
  uint64_t v153;
  _BYTE *v154;
  uint64_t v155;
  uint64_t v156;
  _BYTE *v157;
  _BYTE *v158;
  _BYTE *v159;
  _BYTE *v160;
  uint64_t v161;
  _BYTE *v162;
  _BYTE *v163;
  _BYTE *v164;
  uint64_t v165;
  _BYTE *v166;
  _BYTE *v167;
  _BYTE *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  _BYTE *v173;
  uint64_t v174;
  uint64_t v175;
  _BYTE *v176;
  _BYTE *v177;
  uint64_t v178;
  char v179;
  _BYTE v180[416];
  _OWORD v181[26];
  __int128 v182;
  __int128 v183;
  __int128 v184;
  __int128 v185;
  __int128 v186;
  __int128 v187;
  __int128 v188;
  __int128 v189;
  __int128 v190;
  __int128 v191;
  __int128 v192;
  __int128 v193;
  __int128 v194;
  char v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  char v200;
  char v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  char v206;
  char v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  char v212;
  uint64_t v213;
  _BYTE *(*v214)(_BYTE *);
  uint64_t v215;
  double v216;
  uint64_t (*v217)();
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  __int128 v221;
  __int128 v222;
  __int128 v223;
  __int128 v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  double v233;
  __int128 v234;
  uint64_t v235;
  __int128 v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;

  v12 = sub_22F98DE40();
  v169 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v166 = &v127[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v170 = sub_22F98E098();
  v165 = *(_QWORD *)(v170 - 8);
  MEMORY[0x24BDAC7A8](v170);
  v163 = &v127[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23520);
  v171 = *(_QWORD *)(v15 - 8);
  v172 = v15;
  v16 = MEMORY[0x24BDAC7A8](v15);
  v164 = &v127[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v16);
  v168 = &v127[-v18];
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23528);
  v152 = *(_QWORD *)(v19 - 8);
  v153 = v19;
  MEMORY[0x24BDAC7A8](v19);
  v151 = &v127[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23530);
  MEMORY[0x24BDAC7A8](v149);
  v154 = &v127[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v150 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23538);
  MEMORY[0x24BDAC7A8](v150);
  v157 = &v127[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v155 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23540);
  MEMORY[0x24BDAC7A8](v155);
  v158 = &v127[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23548);
  MEMORY[0x24BDAC7A8](v156);
  v159 = &v127[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v161 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23550);
  MEMORY[0x24BDAC7A8](v161);
  v162 = &v127[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23558);
  v27 = MEMORY[0x24BDAC7A8](v26);
  v173 = &v127[-((v28 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v29 = MEMORY[0x24BDAC7A8](v27);
  v160 = &v127[-v30];
  MEMORY[0x24BDAC7A8](v29);
  v167 = &v127[-v31];
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23560);
  MEMORY[0x24BDAC7A8](v32);
  v34 = &v127[-((v33 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23568);
  v35 = MEMORY[0x24BDAC7A8](v148);
  v176 = &v127[-((v36 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v35);
  v177 = &v127[-v37];
  v224 = *(_OWORD *)(a1 + 24);
  v38 = *((_QWORD *)&v224 + 1);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  sub_22F8E24E8((uint64_t)&v224);
  v39 = *((_QWORD *)&v236 + 1);
  v174 = v12;
  v175 = a2;
  v178 = v38;
  if (*((_QWORD *)&v236 + 1))
  {
    v139 = v34;
    v142 = a1;
    v145 = a4;
    v146 = a5;
    v147 = a6;
    v40 = v236;
    v41 = v237;
    v42 = v238;
    v43 = v239;
    v44 = v240;
    v45 = v241;
    v46 = v242;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (sub_22F8B9AFC())
      v47 = 10.0;
    else
      v47 = 0.0;
    type metadata accessor for CGSize(0);
    v182 = 0uLL;
    sub_22F98E8F0();
    v138 = v40;
    v225 = v40;
    v226 = v39;
    v140 = v41;
    v141 = v43;
    v227 = v41;
    v228 = v42;
    v229 = v43;
    v230 = v44;
    v143 = v45;
    v231 = v45;
    v232 = v46;
    v233 = v47;
    v234 = v236;
    v235 = v237;
    sub_22F98EA70();
    v48 = 1;
    sub_22F8FA7B0(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, v181, 0.0, 1, a3, 0);
    v144 = v46;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    v49 = sub_22F98E410();
    sub_22F98DBF4();
    v136 = v51;
    v137 = v50;
    v134 = v53;
    v135 = v52;
    v133 = sub_22F98E428();
    sub_22F8B9AFC();
    LOBYTE(v221) = 0;
    sub_22F98DBF4();
    v55 = v54;
    v132 = v56;
    v58 = v57;
    v60 = v59;
    v130 = v221;
    v180[0] = 0;
    v131 = sub_22F98E434();
    sub_22F98DBF4();
    v62 = v61;
    v64 = v63;
    v66 = v65;
    v68 = v67;
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_22F98DBA0();
    swift_release();
    swift_release();
    sub_22F8E24E8((uint64_t)&v224);
    v69 = v240;
    sub_22F87A26C(v236, *((uint64_t *)&v236 + 1), v237, v238, v239, v240);
    if (!v69)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      sub_22F98DBA0();
      swift_release();
      swift_release();
      sub_22F8E24E8((uint64_t)&v224);
      v48 = v236 != 1;
    }
    v128 = v180[0];
    v179 = 0;
    KeyPath = swift_getKeyPath();
    v70 = swift_allocObject();
    *(_BYTE *)(v70 + 16) = v48;
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_22F98DBA0();
    swift_release();
    swift_release();
    sub_22F8E24E8((uint64_t)&v224);
    v71 = v240;
    sub_22F87A26C(v236, *((uint64_t *)&v236 + 1), v237, v238, v239, v240);
    if (v71)
    {
      sub_22F8E3F3C(v138, v39);
      v72 = 0.25;
    }
    else
    {
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      sub_22F98DBA0();
      swift_release();
      swift_release();
      sub_22F8E3F3C(v138, v39);
      sub_22F8E24E8((uint64_t)&v224);
      if (v236 == 1)
        v72 = 1.0;
      else
        v72 = 0.25;
    }
    a1 = v142;
    v34 = v139;
    v192 = v181[10];
    v193 = v181[11];
    v194 = v181[12];
    v188 = v181[6];
    v189 = v181[7];
    v190 = v181[8];
    v191 = v181[9];
    v184 = v181[2];
    v185 = v181[3];
    v186 = v181[4];
    v187 = v181[5];
    v182 = v181[0];
    v183 = v181[1];
    v73 = v179;
    v74 = swift_allocObject();
    v75 = *(_OWORD *)(a1 + 48);
    *(_OWORD *)(v74 + 48) = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v74 + 64) = v75;
    *(_OWORD *)(v74 + 80) = *(_OWORD *)(a1 + 64);
    *(_QWORD *)(v74 + 96) = *(_QWORD *)(a1 + 80);
    v76 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v74 + 16) = *(_OWORD *)a1;
    *(_OWORD *)(v74 + 32) = v76;
    v195 = v49;
    v196 = v137;
    v197 = v136;
    v198 = v135;
    v199 = v134;
    v200 = v130;
    v201 = v133;
    v202 = v55;
    v203 = v132;
    v204 = v58;
    v205 = v60;
    v206 = v128;
    v207 = v131;
    v208 = v62;
    v209 = v64;
    v210 = v66;
    v211 = v68;
    v212 = v73;
    v213 = KeyPath;
    v214 = sub_22F8E45C4;
    v215 = v70;
    v216 = v72;
    v217 = sub_22F8E3F90;
    v218 = v74;
    v220 = 0;
    v219 = 0;
    nullsub_1(&v182);
    sub_22F8E23D8(a1);
    sub_22F87B2B4((uint64_t)&v182, (uint64_t)&v236, &qword_255E23570);
    a5 = v146;
    a4 = v145;
  }
  else
  {
    sub_22F8E3A58(&v182);
    sub_22F87B2B4((uint64_t)&v182, (uint64_t)&v236, &qword_255E23570);
  }
  v77 = v148;
  *(_QWORD *)v34 = sub_22F98E128();
  *((_QWORD *)v34 + 1) = 0;
  v34[16] = 0;
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23578);
  sub_22F8DF930(a1, (uint64_t)&v34[*(int *)(v78 + 44)], a4, a5);
  v79 = sub_22F98EB0C();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  sub_22F8E24E8((uint64_t)&v224);
  v80 = v182;
  v81 = v176;
  sub_22F87ABDC((uint64_t)v34, (uint64_t)v176, &qword_255E23560);
  v82 = &v81[*(int *)(v77 + 36)];
  *(_QWORD *)v82 = v79;
  v82[8] = v80;
  sub_22F87AC20((uint64_t)v34, &qword_255E23560);
  sub_22F87B2B4((uint64_t)v81, (uint64_t)v177, &qword_255E23568);
  v83 = swift_allocObject();
  v84 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v83 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v83 + 64) = v84;
  *(_OWORD *)(v83 + 80) = *(_OWORD *)(a1 + 64);
  *(_QWORD *)(v83 + 96) = *(_QWORD *)(a1 + 80);
  v85 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v83 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v83 + 32) = v85;
  MEMORY[0x24BDAC7A8](v83);
  sub_22F8E23D8(a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E23580);
  sub_22F8E3AA8();
  v86 = v151;
  sub_22F98E920();
  sub_22F98EA88();
  sub_22F98DCFC();
  v88 = v152;
  v87 = v153;
  v89 = (uint64_t)v154;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v152 + 16))(v154, v86, v153);
  v90 = (_OWORD *)(v89 + *(int *)(v149 + 36));
  v91 = v222;
  *v90 = v221;
  v90[1] = v91;
  v90[2] = v223;
  (*(void (**)(_BYTE *, uint64_t))(v88 + 8))(v86, v87);
  LOBYTE(v87) = sub_22F98E410();
  sub_22F98DBF4();
  v93 = v92;
  v95 = v94;
  v97 = v96;
  v99 = v98;
  v100 = v157;
  sub_22F87ABDC(v89, (uint64_t)v157, &qword_255E23530);
  v101 = &v100[*(int *)(v150 + 36)];
  *v101 = v87;
  *((_QWORD *)v101 + 1) = v93;
  *((_QWORD *)v101 + 2) = v95;
  *((_QWORD *)v101 + 3) = v97;
  *((_QWORD *)v101 + 4) = v99;
  v101[40] = 0;
  sub_22F87AC20(v89, &qword_255E23530);
  LOBYTE(v87) = sub_22F8E16B4();
  v102 = swift_getKeyPath();
  v103 = swift_allocObject();
  *(_BYTE *)(v103 + 16) = v87 & 1;
  v104 = v158;
  sub_22F87ABDC((uint64_t)v100, (uint64_t)v158, &qword_255E23538);
  v105 = (uint64_t *)&v104[*(int *)(v155 + 36)];
  *v105 = v102;
  v105[1] = (uint64_t)sub_22F8E45C4;
  v105[2] = v103;
  sub_22F87AC20((uint64_t)v100, &qword_255E23538);
  if ((sub_22F8E16B4() & 1) != 0)
    v106 = 0.25;
  else
    v106 = 1.0;
  v107 = v159;
  sub_22F87ABDC((uint64_t)v104, (uint64_t)v159, &qword_255E23540);
  *(double *)&v107[*(int *)(v156 + 36)] = v106;
  sub_22F87AC20((uint64_t)v104, &qword_255E23540);
  v108 = v163;
  sub_22F98E08C();
  v109 = v166;
  sub_22F98DE34();
  v110 = sub_22F862548((unint64_t *)&qword_255E1F0A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEE630], MEMORY[0x24BDEE620]);
  v111 = sub_22F862548(&qword_255E1FFB0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC860], MEMORY[0x24BDEC858]);
  v112 = v168;
  v113 = v170;
  v114 = v174;
  sub_22F98DC0C();
  (*(void (**)(_BYTE *, uint64_t))(v169 + 8))(v109, v114);
  (*(void (**)(_BYTE *, uint64_t))(v165 + 8))(v108, v113);
  v116 = v171;
  v115 = v172;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v171 + 16))(v164, v112, v172);
  *(_QWORD *)&v182 = v113;
  *((_QWORD *)&v182 + 1) = v114;
  *(_QWORD *)&v183 = v110;
  *((_QWORD *)&v183 + 1) = v111;
  swift_getOpaqueTypeConformance2();
  v117 = sub_22F98DD80();
  v118 = v162;
  sub_22F87ABDC((uint64_t)v107, (uint64_t)v162, &qword_255E23548);
  *(_QWORD *)&v118[*(int *)(v161 + 36)] = v117;
  (*(void (**)(_BYTE *, uint64_t))(v116 + 8))(v112, v115);
  sub_22F87AC20((uint64_t)v107, &qword_255E23548);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  sub_22F8E24E8((uint64_t)&v224);
  sub_22F8E3B54();
  v119 = (uint64_t)v160;
  sub_22F98E704();
  swift_bridgeObjectRelease();
  sub_22F87AC20((uint64_t)v118, &qword_255E23550);
  v120 = v167;
  sub_22F87B2B4(v119, (uint64_t)v167, &qword_255E23558);
  sub_22F87B2B4((uint64_t)&v236, (uint64_t)v180, &qword_255E23570);
  v121 = v176;
  v122 = v177;
  sub_22F87ABDC((uint64_t)v177, (uint64_t)v176, &qword_255E23568);
  v123 = v173;
  sub_22F87ABDC((uint64_t)v120, (uint64_t)v173, &qword_255E23558);
  sub_22F87B2B4((uint64_t)v180, (uint64_t)v181, &qword_255E23570);
  v124 = v175;
  sub_22F87B2B4((uint64_t)v181, v175, &qword_255E23570);
  v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E235D0);
  sub_22F87ABDC((uint64_t)v121, v124 + *(int *)(v125 + 48), &qword_255E23568);
  sub_22F87ABDC((uint64_t)v123, v124 + *(int *)(v125 + 64), &qword_255E23558);
  sub_22F8E3DD4((uint64_t)v181, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22F8E3D20);
  sub_22F87AC20((uint64_t)v120, &qword_255E23558);
  sub_22F87AC20((uint64_t)v122, &qword_255E23568);
  sub_22F87AC20((uint64_t)v123, &qword_255E23558);
  sub_22F87AC20((uint64_t)v121, &qword_255E23568);
  sub_22F87B2B4((uint64_t)v180, (uint64_t)&v182, &qword_255E23570);
  return sub_22F8E3DD4((uint64_t)&v182, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22F8E3E78);
}

uint64_t sub_22F8DF8EC(uint64_t a1, void (*a2)(uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  __int128 v6;

  v6 = *(_OWORD *)(a1 + 24);
  v3 = swift_retain();
  a2(v3, v4);
  return sub_22F8E24E8((uint64_t)&v6);
}

void sub_22F8DF930(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t KeyPath;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  char *v88;
  char *v89;
  char *v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  double v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  char *v101;
  char *v102;
  char *v103;
  char *v104;
  char *v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  _QWORD v125[36];
  char v126;
  __int128 v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char v133;
  uint64_t v134;
  _OWORD v135[10];
  uint64_t v136;
  char v137;
  _BYTE v138[7];
  char v139;
  _BYTE v140[7];
  _BYTE v141[7];
  _OWORD v142[19];

  v95 = a4;
  v115 = a1;
  v123 = a2;
  v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E235D8);
  MEMORY[0x24BDAC7A8](v122);
  v105 = (char *)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E235E0);
  v6 = MEMORY[0x24BDAC7A8](v98);
  v97 = (char *)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v99 = (char *)&v80 - v8;
  v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E235E8);
  MEMORY[0x24BDAC7A8](v96);
  v101 = (char *)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E235F0);
  v10 = MEMORY[0x24BDAC7A8](v100);
  v102 = (char *)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v104 = (char *)&v80 - v12;
  v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E235F8);
  MEMORY[0x24BDAC7A8](v119);
  v121 = (char *)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23600);
  MEMORY[0x24BDAC7A8](v120);
  v103 = (char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_22F98DE7C();
  v93 = *(_QWORD *)(v15 - 8);
  v94 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v92 = (char *)&v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23608);
  MEMORY[0x24BDAC7A8](v17);
  v82 = (char *)&v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23610);
  MEMORY[0x24BDAC7A8](v81);
  v85 = (char *)&v80 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23618);
  MEMORY[0x24BDAC7A8](v20);
  v88 = (char *)&v80 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23620);
  MEMORY[0x24BDAC7A8](v83);
  v87 = (char *)&v80 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23628);
  MEMORY[0x24BDAC7A8](v84);
  v89 = (char *)&v80 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23630);
  v24 = MEMORY[0x24BDAC7A8](v86);
  v90 = (char *)&v80 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v91 = (char *)&v80 - v26;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23638);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v118 = (char *)&v80 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v117 = (char *)&v80 - v30;
  v31 = sub_22F98E098();
  v32 = *(_QWORD *)(v31 - 8);
  v111 = v31;
  v112 = v32;
  MEMORY[0x24BDAC7A8](v31);
  v34 = (char *)&v80 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_22F98DE40();
  v110 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v37 = (char *)&v80 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1FFE0);
  v108 = *(_QWORD *)(v38 - 8);
  v109 = v38;
  v39 = MEMORY[0x24BDAC7A8](v38);
  v107 = (char *)&v80 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)&v80 - v41;
  v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23640);
  v43 = MEMORY[0x24BDAC7A8](v114);
  v116 = (char *)&v80 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = MEMORY[0x24BDAC7A8](v43);
  v106 = (char *)&v80 - v46;
  v47 = MEMORY[0x24BDAC7A8](v45);
  v113 = (char *)&v80 - v48;
  MEMORY[0x24BDAC7A8](v47);
  v124 = (char *)&v80 - v49;
  type metadata accessor for PINViewModel();
  sub_22F862548((unint64_t *)&qword_255E20110, (uint64_t (*)(uint64_t))type metadata accessor for PINViewModel, (uint64_t)&unk_22F991FD4);
  v50 = sub_22F98DF6C();
  v52 = v51;
  *(_QWORD *)&v142[0] = 0;
  sub_22F98E8F0();
  v53 = v125[0];
  v54 = v125[1];
  LOBYTE(v142[0]) = 0;
  sub_22F98E8F0();
  v128 = v50;
  v129 = v52;
  v130 = 0x4014000000000000;
  v131 = v53;
  v132 = v54;
  v133 = v125[0];
  v134 = v125[1];
  sub_22F98EA7C();
  sub_22F8FA95C(0.0, 1, 0.0, 1, INFINITY, 0, a3, 0, (uint64_t)v135, 0.0, 1, 0.0, 1);
  swift_release();
  swift_release();
  swift_release();
  sub_22F98DE34();
  sub_22F98E08C();
  v55 = sub_22F862548(&qword_255E1FFB0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC860], MEMORY[0x24BDEC858]);
  v56 = sub_22F862548((unint64_t *)&qword_255E1F0A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEE630], MEMORY[0x24BDEE620]);
  v57 = v111;
  sub_22F98DC0C();
  (*(void (**)(char *, uint64_t))(v112 + 8))(v34, v57);
  (*(void (**)(char *, uint64_t))(v110 + 8))(v37, v35);
  v58 = v108;
  v59 = v109;
  (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v107, v42, v109);
  v125[0] = v35;
  v125[1] = v57;
  v125[2] = v55;
  v125[3] = v56;
  v60 = v115;
  swift_getOpaqueTypeConformance2();
  v61 = v59;
  v62 = sub_22F98DD80();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v42, v61);
  LOBYTE(v61) = sub_22F98E434();
  sub_22F98DBF4();
  v64 = v63;
  v66 = v65;
  v68 = v67;
  v70 = v69;
  v137 = 0;
  LOBYTE(v35) = sub_22F98E410();
  sub_22F98DBF4();
  v72 = v71;
  v74 = v73;
  v76 = v75;
  v78 = v77;
  LOBYTE(v42) = v137;
  v139 = 0;
  KeyPath = swift_getKeyPath();
  v142[7] = v135[7];
  v142[8] = v135[8];
  v142[9] = v135[9];
  v142[3] = v135[3];
  v142[4] = v135[4];
  v142[5] = v135[5];
  v142[6] = v135[6];
  v142[0] = v135[0];
  v142[1] = v135[1];
  v142[2] = v135[2];
  *(_QWORD *)&v142[10] = v136;
  *((_QWORD *)&v142[10] + 1) = v62;
  LOBYTE(v142[11]) = v61;
  *(_DWORD *)((char *)&v142[11] + 1) = *(_DWORD *)v138;
  DWORD1(v142[11]) = *(_DWORD *)&v138[3];
  *((_QWORD *)&v142[11] + 1) = v64;
  *(_QWORD *)&v142[12] = v66;
  *((_QWORD *)&v142[12] + 1) = v68;
  *(_QWORD *)&v142[13] = v70;
  BYTE8(v142[13]) = (_BYTE)v42;
  *(_DWORD *)((char *)&v142[13] + 9) = *(_DWORD *)v141;
  HIDWORD(v142[13]) = *(_DWORD *)&v141[3];
  LOBYTE(v142[14]) = v35;
  *(_DWORD *)((char *)&v142[14] + 1) = *(_DWORD *)v140;
  DWORD1(v142[14]) = *(_DWORD *)&v140[3];
  *((_QWORD *)&v142[14] + 1) = v72;
  *(_QWORD *)&v142[15] = v74;
  *((_QWORD *)&v142[15] + 1) = v76;
  *(_QWORD *)&v142[16] = v78;
  BYTE8(v142[16]) = v139;
  *(_QWORD *)&v142[17] = KeyPath;
  *((_QWORD *)&v142[17] + 1) = 0x3FD3333333333333;
  memcpy(v125, v142, sizeof(v125));
  v126 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E23648);
  sub_22F890C18(&qword_255E23650, &qword_255E23648, (uint64_t (*)(void))sub_22F8E408C);
  sub_22F98E71C();
  sub_22F8E423C((uint64_t)v142);
  v127 = *(_OWORD *)(v60 + 24);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  sub_22F8E24E8((uint64_t)&v127);
  __asm { BR              X10 }
}

uint64_t sub_22F8E02FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;

  v3 = sub_22F932EEC(0);
  v5 = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 624) = v3;
  *(_QWORD *)(v0 + 632) = v5;
  sub_22F863BF8();
  v6 = *(_QWORD *)(v0 + 264);
  sub_22F98DE88();
  swift_bridgeObjectRelease();
  sub_22F87AC20(v2, &qword_255E23640);
  sub_22F87B2B4(v6, *(_QWORD *)(v0 + 352), &qword_255E23640);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  sub_22F8E24E8(v0 + 928);
  if ((*(_BYTE *)(v0 + 624) & 1) != 0)
  {
    *(_QWORD *)(v0 + 624) = sub_22F932EEC(1);
    *(_QWORD *)(v0 + 632) = v7;
    v8 = sub_22F98E5CC();
    v10 = v9;
    v12 = v11 & 1;
    sub_22F98E488();
    v13 = sub_22F98E5A8();
    v15 = v14;
    v17 = v16;
    v19 = v18;
    swift_release();
    sub_22F87E294(v8, v10, v12);
    swift_bridgeObjectRelease();
    KeyPath = swift_getKeyPath();
    if (qword_255E1DBE0 != -1)
      swift_once();
    v21 = qword_255E29778;
    v22 = swift_getKeyPath();
    swift_retain();
    v23 = sub_22F98E410();
    sub_22F98DBF4();
    v25 = v24;
    v27 = v26;
    v29 = v28;
    v31 = v30;
    v32 = sub_22F98E458();
    sub_22F98DBF4();
    v34 = v33;
    v36 = v35;
    v38 = v37;
    v40 = v39;
    *(_BYTE *)(v0 + 440) = v17 & 1;
    *(_BYTE *)(v0 + 416) = 0;
    *(_BYTE *)(v0 + 400) = 0;
    v41 = swift_getKeyPath();
    *(_QWORD *)(v0 + 448) = v13;
    *(_QWORD *)(v0 + 456) = v15;
    *(_BYTE *)(v0 + 464) = *(_BYTE *)(v0 + 440);
    *(_DWORD *)(v0 + 465) = *(_DWORD *)(v0 + 433);
    *(_DWORD *)(v0 + 468) = *(_DWORD *)(v0 + 436);
    *(_QWORD *)(v0 + 472) = v19;
    *(_QWORD *)(v0 + 480) = KeyPath;
    *(_BYTE *)(v0 + 488) = 1;
    *(_DWORD *)(v0 + 489) = *(_DWORD *)(v0 + 426);
    *(_DWORD *)(v0 + 492) = *(_DWORD *)(v0 + 429);
    *(_QWORD *)(v0 + 496) = v22;
    *(_QWORD *)(v0 + 504) = v21;
    *(_BYTE *)(v0 + 512) = v23;
    *(_DWORD *)(v0 + 516) = *(_DWORD *)(v0 + 422);
    *(_DWORD *)(v0 + 513) = *(_DWORD *)(v0 + 419);
    *(_QWORD *)(v0 + 520) = v25;
    *(_QWORD *)(v0 + 528) = v27;
    *(_QWORD *)(v0 + 536) = v29;
    *(_QWORD *)(v0 + 544) = v31;
    *(_BYTE *)(v0 + 552) = *(_BYTE *)(v0 + 416);
    *(_DWORD *)(v0 + 553) = *(_DWORD *)(v0 + 409);
    *(_DWORD *)(v0 + 556) = *(_DWORD *)(v0 + 412);
    *(_BYTE *)(v0 + 560) = v32;
    v42 = *(_DWORD *)(v0 + 402);
    *(_DWORD *)(v0 + 564) = *(_DWORD *)(v0 + 405);
    *(_DWORD *)(v0 + 561) = v42;
    *(_QWORD *)(v0 + 568) = v34;
    *(_QWORD *)(v0 + 576) = v36;
    *(_QWORD *)(v0 + 584) = v38;
    *(_QWORD *)(v0 + 592) = v40;
    *(_BYTE *)(v0 + 600) = *(_BYTE *)(v0 + 400);
    *(_QWORD *)(v0 + 608) = v41;
    *(_QWORD *)(v0 + 616) = 0x3FD3333333333333;
    v43 = *(_OWORD *)(v0 + 560);
    v44 = *(_OWORD *)(v0 + 592);
    v45 = *(_OWORD *)(v0 + 608);
    *(_OWORD *)(v0 + 752) = *(_OWORD *)(v0 + 576);
    *(_OWORD *)(v0 + 768) = v44;
    *(_OWORD *)(v0 + 784) = v45;
    v46 = *(_OWORD *)(v0 + 496);
    v47 = *(_OWORD *)(v0 + 528);
    v48 = *(_OWORD *)(v0 + 544);
    *(_OWORD *)(v0 + 688) = *(_OWORD *)(v0 + 512);
    *(_OWORD *)(v0 + 704) = v47;
    *(_OWORD *)(v0 + 720) = v48;
    *(_OWORD *)(v0 + 736) = v43;
    v49 = *(_OWORD *)(v0 + 464);
    *(_OWORD *)(v0 + 624) = *(_OWORD *)(v0 + 448);
    *(_OWORD *)(v0 + 640) = v49;
    *(_OWORD *)(v0 + 656) = *(_OWORD *)(v0 + 480);
    *(_OWORD *)(v0 + 672) = v46;
    *(_BYTE *)(v0 + 800) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E236F0);
    sub_22F890C18(&qword_255E236F8, &qword_255E236F0, (uint64_t (*)(void))sub_22F8E4390);
    v50 = *(_QWORD *)(v0 + 136);
    sub_22F98E71C();
    sub_22F8E4458(v0 + 448);
    v51 = *(_QWORD *)(v0 + 152);
    sub_22F98DEB8();
    sub_22F87AC20(v50, &qword_255E235E0);
    v52 = *(_QWORD *)(v0 + 168);
    sub_22F87ABDC(v51, v52, &qword_255E235E0);
    *(_QWORD *)(v52 + *(int *)(*(_QWORD *)(v0 + 128) + 36)) = 0x4000000000000000;
    sub_22F87AC20(v51, &qword_255E235E0);
    *(_OWORD *)(v0 + 624) = xmmword_22F992830;
    *(_OWORD *)(v0 + 640) = xmmword_22F992810;
    *(_QWORD *)(v0 + 360) = 0;
    *(_QWORD *)(v0 + 368) = 0;
    __asm { FMOV            V0.2D, #1.0 }
    *(_OWORD *)(v0 + 376) = _Q0;
    sub_22F883CC8();
    v58 = sub_22F98DD68();
    v59 = *(_QWORD *)(v0 + 176);
    sub_22F87ABDC(v52, v59, &qword_255E235E8);
    *(_QWORD *)(v59 + *(int *)(*(_QWORD *)(v0 + 160) + 36)) = v58;
    sub_22F87AC20(v52, &qword_255E235E8);
    v60 = &qword_255E235F0;
    v61 = *(_QWORD *)(v0 + 192);
    sub_22F87B2B4(v59, v61, &qword_255E235F0);
    sub_22F87ABDC(v61, v59, &qword_255E235F0);
    v62 = *(_QWORD *)(v0 + 200);
    *(_QWORD *)v62 = 0;
    *(_BYTE *)(v62 + 8) = 1;
    v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23730);
    sub_22F87ABDC(v59, v62 + *(int *)(v63 + 48), &qword_255E235F0);
    sub_22F87AC20(v59, &qword_255E235F0);
    v64 = &qword_255E235D8;
    sub_22F87ABDC(v62, *(_QWORD *)(v0 + 328), &qword_255E235D8);
    swift_storeEnumTagMultiPayload();
    v65 = MEMORY[0x24BDF5428];
    sub_22F87AA84(&qword_255E236D8, &qword_255E23600, MEMORY[0x24BDF5428]);
  }
  else
  {
    swift_retain();
    v66 = sub_22F863C3C();
    sub_22F8E24E8(v0 + 928);
    *(_QWORD *)(v0 + 624) = v66;
    swift_getKeyPath();
    v67 = swift_allocObject();
    v68 = *(_OWORD *)(v1 + 48);
    *(_OWORD *)(v67 + 48) = *(_OWORD *)(v1 + 32);
    *(_OWORD *)(v67 + 64) = v68;
    *(_OWORD *)(v67 + 80) = *(_OWORD *)(v1 + 64);
    *(_QWORD *)(v67 + 96) = *(_QWORD *)(v1 + 80);
    v69 = *(_OWORD *)(v1 + 16);
    *(_OWORD *)(v67 + 16) = *(_OWORD *)v1;
    *(_OWORD *)(v67 + 32) = v69;
    sub_22F8E23D8(v1);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E236B0);
    sub_22F87AA84(&qword_255E236B8, &qword_255E236B0, MEMORY[0x24BEE12D8]);
    sub_22F862548((unint64_t *)&qword_255E236C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_22F8E4300();
    v70 = *(_QWORD *)(v0 + 16);
    sub_22F98E9EC();
    sub_22F98DD50();
    sub_22F98DD2C();
    sub_22F98DD5C();
    swift_release();
    swift_release();
    *(_OWORD *)(v0 + 624) = xmmword_22F992830;
    *(_OWORD *)(v0 + 640) = xmmword_22F992810;
    *(_QWORD *)(v0 + 448) = 0;
    *(_QWORD *)(v0 + 456) = 0;
    __asm { FMOV            V0.2D, #1.0 }
    *(_OWORD *)(v0 + 464) = _Q0;
    sub_22F883CC8();
    sub_22F98DD68();
    v72 = sub_22F98DD14();
    swift_release();
    swift_release();
    v73 = *(_QWORD *)(v0 + 40);
    sub_22F87ABDC(v70, v73, &qword_255E23608);
    *(_QWORD *)(v73 + *(int *)(*(_QWORD *)(v0 + 8) + 36)) = v72;
    sub_22F87AC20(v70, &qword_255E23608);
    v74 = sub_22F98EA88();
    v75 = *(_QWORD *)(v0 + 64);
    sub_22F8FAB14(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v75, 0.0, 1, *(double *)(v0 + 120), 0, v74, v76);
    sub_22F87AC20(v73, &qword_255E23610);
    LOBYTE(v66) = sub_22F98E410();
    sub_22F98DBF4();
    v78 = v77;
    v80 = v79;
    v82 = v81;
    v84 = v83;
    v85 = *(_QWORD *)(v0 + 56);
    sub_22F87ABDC(v75, v85, &qword_255E23618);
    v86 = v85 + *(int *)(*(_QWORD *)(v0 + 24) + 36);
    *(_BYTE *)v86 = v66;
    *(_QWORD *)(v86 + 8) = v78;
    *(_QWORD *)(v86 + 16) = v80;
    *(_QWORD *)(v86 + 24) = v82;
    *(_QWORD *)(v86 + 32) = v84;
    *(_BYTE *)(v86 + 40) = 0;
    sub_22F87AC20(v75, &qword_255E23618);
    v87 = *(_QWORD *)(v0 + 72);
    sub_22F87ABDC(v85, v87, &qword_255E23620);
    *(_QWORD *)(v87 + *(int *)(*(_QWORD *)(v0 + 32) + 36)) = 0x3FF0000000000000;
    sub_22F87AC20(v85, &qword_255E23620);
    v88 = swift_getKeyPath();
    v90 = *(_QWORD *)(v0 + 96);
    v89 = *(_QWORD *)(v0 + 104);
    v91 = *(_QWORD *)(v0 + 112);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v89 + 104))(v90, *MEMORY[0x24BDED100], v91);
    v92 = *(_QWORD *)(v0 + 80);
    v93 = (uint64_t *)(v92 + *(int *)(*(_QWORD *)(v0 + 48) + 36));
    v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E233E8);
    (*(void (**)(char *, uint64_t, uint64_t))(v89 + 16))((char *)v93 + *(int *)(v94 + 28), v90, v91);
    *v93 = v88;
    sub_22F87ABDC(v87, v92, &qword_255E23628);
    (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v90, v91);
    sub_22F87AC20(v87, &qword_255E23628);
    v60 = &qword_255E23630;
    v61 = *(_QWORD *)(v0 + 88);
    sub_22F87B2B4(v92, v61, &qword_255E23630);
    sub_22F87ABDC(v61, v92, &qword_255E23630);
    v62 = *(_QWORD *)(v0 + 184);
    *(_QWORD *)v62 = 0;
    *(_BYTE *)(v62 + 8) = 1;
    v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E236D0);
    sub_22F87ABDC(v92, v62 + *(int *)(v95 + 48), &qword_255E23630);
    v96 = v62 + *(int *)(v95 + 64);
    *(_QWORD *)v96 = 0;
    *(_BYTE *)(v96 + 8) = 1;
    sub_22F87AC20(v92, &qword_255E23630);
    v64 = &qword_255E23600;
    sub_22F87ABDC(v62, *(_QWORD *)(v0 + 328), &qword_255E23600);
    swift_storeEnumTagMultiPayload();
    v65 = MEMORY[0x24BDF5428];
    sub_22F87AA84(&qword_255E236D8, &qword_255E23600, MEMORY[0x24BDF5428]);
  }
  sub_22F87AA84(&qword_255E236E0, &qword_255E235D8, v65);
  v97 = *(_QWORD *)(v0 + 296);
  sub_22F98E1E8();
  sub_22F87AC20(v62, v64);
  sub_22F87AC20(v61, v60);
  v98 = *(_QWORD *)(v0 + 352);
  v99 = *(_QWORD *)(v0 + 288);
  sub_22F87ABDC(v98, v99, &qword_255E23640);
  v100 = *(_QWORD *)(v0 + 304);
  sub_22F87ABDC(v97, v100, &qword_255E23638);
  v101 = *(_QWORD *)(v0 + 344);
  sub_22F87ABDC(v99, v101, &qword_255E23640);
  v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E236E8);
  sub_22F87ABDC(v100, v101 + *(int *)(v102 + 48), &qword_255E23638);
  sub_22F87AC20(v97, &qword_255E23638);
  sub_22F87AC20(v98, &qword_255E23640);
  sub_22F87AC20(v100, &qword_255E23638);
  return sub_22F87AC20(v99, &qword_255E23640);
}

uint64_t sub_22F8E0DEC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char v4;

  v3 = *a1;
  swift_retain();
  v4 = sub_22F8E0E44();
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  *(_QWORD *)(a2 + 24) = &off_24FD1E050;
  return swift_unknownObjectWeakInit();
}

uint64_t sub_22F8E0E44()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  v8 = *(_OWORD *)(v0 + 24);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  sub_22F8E24E8((uint64_t)&v8);
  sub_22F87A26C(v2, v3, v4, v5, v6, v7);
  if (v7)
    return 1;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  sub_22F8E24E8((uint64_t)&v8);
  if (v2 != 1)
    return 1;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  sub_22F8E24E8((uint64_t)&v8);
  return v2;
}

uint64_t sub_22F8E0FAC()
{
  return sub_22F98DFC0();
}

uint64_t sub_22F8E0FCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22F8E2168(a1, a2, a3, a4, (void (*)(_QWORD))MEMORY[0x24BDED130], MEMORY[0x24BDEE080]);
}

uint64_t sub_22F8E0FE0(uint64_t a1)
{
  __int128 v2;

  v2 = *(_OWORD *)(a1 + 24);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_22F98DBAC();
  swift_retain();
  sub_22F86CE58();
  sub_22F8E24E8((uint64_t)&v2);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  sub_22F8E24E8((uint64_t)&v2);
  swift_retain();
  sub_22F874320();
  return sub_22F8E24E8((uint64_t)&v2);
}

uint64_t sub_22F8E1144(uint64_t a1)
{
  __int128 v2;
  char v3;

  v2 = *(_OWORD *)(a1 + 24);
  swift_getKeyPath();
  swift_getKeyPath();
  v3 = 1;
  swift_retain_n();
  sub_22F98DBAC();
  sub_22F868614();
  return sub_22F8E24E8((uint64_t)&v2);
}

uint64_t sub_22F8E11D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t KeyPath;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  unint64_t v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  unint64_t v91;
  __int128 v92;

  v56 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1FFE8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_22F98E530();
  v51 = *(_QWORD *)(v6 - 8);
  v52 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v50 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = *(_OWORD *)(a1 + 24);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  sub_22F8E24E8((uint64_t)&v92);
  if ((_BYTE)v80)
    v8 = 0xD000000000000017;
  else
    v8 = 0xD00000000000001BLL;
  if ((_BYTE)v80)
    v9 = 0x800000022F9A0830;
  else
    v9 = 0x800000022F9A0810;
  v53 = v8;
  v54 = v9;
  *(_QWORD *)&v80 = sub_22F932EEC(1);
  *((_QWORD *)&v80 + 1) = v10;
  v55 = sub_22F863BF8();
  v11 = sub_22F98E5CC();
  v13 = v12;
  v15 = v14;
  if (qword_255E1DBE0 != -1)
    swift_once();
  v16 = sub_22F98E590();
  v48 = v17;
  v49 = v18;
  v20 = v19 & 1;
  sub_22F87E294(v11, v13, v15 & 1);
  swift_bridgeObjectRelease();
  v21 = v50;
  v22 = v51;
  v23 = v52;
  (*(void (**)(char *, _QWORD, uint64_t))(v51 + 104))(v50, *MEMORY[0x24BDF1878], v52);
  v24 = *MEMORY[0x24BDF1668];
  v25 = sub_22F98E4A0();
  v26 = *(_QWORD *)(v25 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 104))(v5, v24, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v5, 0, 1, v25);
  sub_22F98E4E8();
  sub_22F87AC20((uint64_t)v5, &qword_255E1FFE8);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v21, v23);
  v27 = v48;
  v28 = sub_22F98E5A8();
  v30 = v29;
  LOBYTE(v26) = v31;
  v33 = v32;
  swift_release();
  sub_22F87E294(v16, v27, v20);
  swift_bridgeObjectRelease();
  v34 = sub_22F98EA88();
  sub_22F8F8CA0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v80, 0.0, 1, 0.0, 1, v34, v35, v28, v30, v26 & 1, v33);
  sub_22F87E294(v28, v30, v26 & 1);
  swift_bridgeObjectRelease();
  v77 = v86;
  v78 = v87;
  v79 = v88;
  v73 = v82;
  v74 = v83;
  v75 = v84;
  v76 = v85;
  v71 = v80;
  v72 = v81;
  KeyPath = swift_getKeyPath();
  v80 = xmmword_22F992830;
  v81 = xmmword_22F992810;
  v59 = 0uLL;
  __asm { FMOV            V0.2D, #1.0 }
  v60 = _Q0;
  sub_22F883CC8();
  v42 = sub_22F98DD68();
  v86 = v77;
  v87 = v78;
  v88 = v79;
  v82 = v73;
  v83 = v74;
  v84 = v75;
  v85 = v76;
  v80 = v71;
  v81 = v72;
  *(_QWORD *)&v89 = KeyPath;
  *((_QWORD *)&v89 + 1) = 0x3FD999999999999ALL;
  *(_QWORD *)&v90 = v42;
  *((_QWORD *)&v90 + 1) = v53;
  v91 = v54;
  v67 = v79;
  v68 = v89;
  v69 = v90;
  v70 = v54;
  v63 = v75;
  v64 = v76;
  v65 = v77;
  v66 = v78;
  v59 = v71;
  v60 = v72;
  v61 = v73;
  v62 = v74;
  swift_bridgeObjectRetain();
  v43 = sub_22F932EEC(0);
  v45 = v44;
  swift_bridgeObjectRelease();
  v57 = v43;
  v58 = v45;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E23598);
  sub_22F87AA84(&qword_255E23590, &qword_255E23598, MEMORY[0x24BDF44C8]);
  sub_22F98E698();
  swift_bridgeObjectRelease();
  return sub_22F8E4004((uint64_t)&v80);
}

uint64_t sub_22F8E16B4()
{
  uint64_t v0;
  unsigned __int8 v2;
  __int128 v3;

  v3 = *(_OWORD *)(v0 + 24);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  sub_22F8E24E8((uint64_t)&v3);
  if ((v2 & 1) != 0)
    return 1;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  sub_22F8E24E8((uint64_t)&v3);
  if (v2 != 1)
    return 1;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  sub_22F8E24E8((uint64_t)&v3);
  return v2;
}

uint64_t sub_22F8E17F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  _BYTE v18[8];
  uint64_t v19;
  uint64_t v20;
  char v21;

  v4 = type metadata accessor for BottomErrorView();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v5);
  v9 = &v18[-v8];
  v18[7] = 0;
  sub_22F8E38D0((uint64_t *)a1);
  sub_22F98E9B0();
  v10 = v19;
  v11 = v20;
  v12 = v21;
  *(_OWORD *)(v9 + 120) = xmmword_22F996270;
  sub_22F87BBC4();
  sub_22F98E2B4();
  v13 = *(_OWORD *)(a1 + 48);
  *((_OWORD *)v9 + 2) = *(_OWORD *)(a1 + 32);
  *((_OWORD *)v9 + 3) = v13;
  v14 = *(_OWORD *)(a1 + 80);
  *((_OWORD *)v9 + 4) = *(_OWORD *)(a1 + 64);
  *((_OWORD *)v9 + 5) = v14;
  v15 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v9 = *(_OWORD *)a1;
  *((_OWORD *)v9 + 1) = v15;
  *((_QWORD *)v9 + 12) = v10;
  *((_QWORD *)v9 + 13) = v11;
  v9[112] = v12;
  sub_22F889F68((uint64_t)v9, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for BottomErrorView);
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = 1;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E234C0);
  sub_22F889F68((uint64_t)v7, a2 + *(int *)(v16 + 48), (uint64_t (*)(_QWORD))type metadata accessor for BottomErrorView);
  sub_22F8AB158((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for BottomErrorView);
  return sub_22F8AB158((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for BottomErrorView);
}

void sub_22F8E1964()
{
  char *v0;

  type metadata accessor for CoarseRotationManager(0);
  sub_22F862548(&qword_255E233A8, type metadata accessor for CoarseRotationManager, (uint64_t)&unk_22F992DC4);
  v0 = (char *)sub_22F98DC6C();
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC19ContactlessReaderUI21CoarseRotationManager_accelerometer], sel_setOrientationEventsEnabled_, 0);

  UIAccessibilityPostNotification(*MEMORY[0x24BEBDEC8], 0);
}

uint64_t sub_22F8E1A00(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  void *v8;
  char *v9;
  void *v10;
  __int128 v12;

  v12 = *(_OWORD *)(a1 + 24);
  v2 = *((_QWORD *)&v12 + 1);
  swift_retain();
  sub_22F8660D4();
  sub_22F8E24E8((uint64_t)&v12);
  v3 = swift_allocObject();
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 32) = v4;
  *(_QWORD *)(v3 + 96) = *(_QWORD *)(a1 + 80);
  v5 = *(_OWORD *)(a1 + 64);
  v6 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v3 + 80) = v5;
  *(_OWORD *)(v3 + 48) = v6;
  v7 = *(_QWORD *)(v2 + 88);
  if (!v7)
  {
    sub_22F8E23D8(a1);
    sub_22F8E2EB8((uint64_t)&v12);
    sub_22F8E23D8(a1);
    type metadata accessor for CoarseRotationManager(0);
    sub_22F862548(&qword_255E233A8, type metadata accessor for CoarseRotationManager, (uint64_t)&unk_22F992DC4);
    v8 = (void *)sub_22F98DC6C();
    swift_getKeyPath();
    swift_getKeyPath();
    v9 = v8;
    sub_22F98DBAC();
    objc_msgSend(*(id *)&v9[OBJC_IVAR____TtC19ContactlessReaderUI21CoarseRotationManager_accelerometer], sel_setOrientationEventsEnabled_, 1);
LABEL_6:
    swift_release();

    goto LABEL_7;
  }
  if ((*(_BYTE *)(v7 + OBJC_IVAR____TtC19ContactlessReaderUI10PINContext_issuerPIN) & 1) == 0)
  {
    sub_22F8E23D8(a1);
    sub_22F8E2EB8((uint64_t)&v12);
    sub_22F8E23D8(a1);
    type metadata accessor for CoarseRotationManager(0);
    sub_22F862548(&qword_255E233A8, type metadata accessor for CoarseRotationManager, (uint64_t)&unk_22F992DC4);
    swift_retain();
    v10 = (void *)sub_22F98DC6C();
    swift_getKeyPath();
    swift_getKeyPath();
    v9 = v10;
    sub_22F98DBAC();
    objc_msgSend(*(id *)&v9[OBJC_IVAR____TtC19ContactlessReaderUI21CoarseRotationManager_accelerometer], sel_setOrientationEventsEnabled_, 1);
    swift_release();
    goto LABEL_6;
  }
  sub_22F8E23D8(a1);
  sub_22F8E2EB8((uint64_t)&v12);
  sub_22F8E23D8(a1);
  swift_retain();
  sub_22F863CD4();
  sub_22F88B674((uint64_t)sub_22F8E2EAC, v3);
  swift_release();
  swift_release();
  swift_release();
LABEL_7:
  sub_22F8E2F08(a1);
  return sub_22F8E24E8((uint64_t)&v12);
}

void sub_22F8E1CD4()
{
  void *v0;
  char *v1;

  type metadata accessor for CoarseRotationManager(0);
  sub_22F862548(&qword_255E233A8, type metadata accessor for CoarseRotationManager, (uint64_t)&unk_22F992DC4);
  v0 = (void *)sub_22F98DC6C();
  swift_getKeyPath();
  swift_getKeyPath();
  v1 = v0;
  sub_22F98DBAC();
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC19ContactlessReaderUI21CoarseRotationManager_accelerometer], sel_setOrientationEventsEnabled_, 1);

}

void sub_22F8E1DB4()
{
  char *v0;

  type metadata accessor for CoarseRotationManager(0);
  sub_22F862548(&qword_255E233A8, type metadata accessor for CoarseRotationManager, (uint64_t)&unk_22F992DC4);
  v0 = (char *)sub_22F98DC6C();
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC19ContactlessReaderUI21CoarseRotationManager_accelerometer], sel_setOrientationEventsEnabled_, 0);

}

uint64_t sub_22F8E1E48(uint64_t a1)
{
  char v2;
  __int128 v3;

  v3 = *(_OWORD *)(a1 + 24);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  sub_22F8E24E8((uint64_t)&v3);
  return sub_22F8E1ED8(v2);
}

uint64_t sub_22F8E1ED8(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = sub_22F98EAF4();
  if ((a1 & 1) != 0)
  {
    MEMORY[0x24BDAC7A8](v2);
    sub_22F98DE10();
    swift_release();
    sub_22F98EAF4();
    sub_22F98EAD0();
    v3 = swift_release();
  }
  else
  {
    sub_22F98EAD0();
    v4 = swift_release();
    MEMORY[0x24BDAC7A8](v4);
    sub_22F98DE10();
    swift_release();
    v3 = sub_22F98EAF4();
  }
  MEMORY[0x24BDAC7A8](v3);
  sub_22F98DE10();
  return swift_release();
}

uint64_t sub_22F8E2070(uint64_t a1)
{
  uint64_t result;
  char v2;
  __int128 v3;

  v3 = *(_OWORD *)(a1 + 24);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  result = sub_22F8E24E8((uint64_t)&v3);
  if ((v2 & 1) == 0)
  {
    sub_22F8AD398(MEMORY[0x24BEE4AF8]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E233A0);
    return sub_22F98E908();
  }
  return result;
}

uint64_t sub_22F8E2134()
{
  return sub_22F98E014();
}

uint64_t sub_22F8E2154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22F8E2168(a1, a2, a3, a4, (void (*)(_QWORD))MEMORY[0x24BDCEEA8], MEMORY[0x24BDEE3D8]);
}

uint64_t sub_22F8E2168(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), uint64_t (*a6)(char *))
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  a5(0);
  MEMORY[0x24BDAC7A8]();
  v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

uint64_t sub_22F8E21E4@<X0>(uint64_t (**a1)@<X0>(uint64_t a1@<X8>)@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t KeyPath;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD v18[5];
  uint64_t v19;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E232F0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (uint64_t *)((char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0) + 16);
  v6 = *(_OWORD *)(v1 + 48);
  v18[2] = *(_OWORD *)(v1 + 32);
  v18[3] = v6;
  v18[4] = *(_OWORD *)(v1 + 64);
  v19 = *(_QWORD *)(v1 + 80);
  v7 = *(_OWORD *)(v1 + 16);
  v18[0] = *(_OWORD *)v1;
  v18[1] = v7;
  v8 = swift_allocObject();
  v9 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v8 + 48) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v8 + 64) = v9;
  *(_OWORD *)(v8 + 80) = *(_OWORD *)(v1 + 64);
  *(_QWORD *)(v8 + 96) = *(_QWORD *)(v1 + 80);
  v10 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v8 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v8 + 32) = v10;
  KeyPath = swift_getKeyPath();
  sub_22F8E23D8((uint64_t)v18);
  if (qword_255E1DB70 != -1)
    swift_once();
  swift_beginAccess();
  v12 = (char *)off_255E211B8 + OBJC_IVAR____TtC19ContactlessReaderUI10AppManager_merchantLocale;
  v13 = (char *)v5 + *(int *)(v3 + 28);
  v14 = sub_22F98D4B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v13, v12, v14);
  *v5 = KeyPath;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E232F8);
  sub_22F87ABDC((uint64_t)v5, (uint64_t)a1 + *(int *)(v15 + 36), &qword_255E232F0);
  *a1 = sub_22F8E238C;
  a1[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v8;
  return sub_22F87AC20((uint64_t)v5, &qword_255E232F0);
}

uint64_t sub_22F8E238C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_22F8DB438(v1 + 16, a1);
}

uint64_t sub_22F8E2394()
{
  return sub_22F98E014();
}

uint64_t sub_22F8E23B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22F8E2168(a1, a2, a3, a4, (void (*)(_QWORD))MEMORY[0x24BDCEEA8], MEMORY[0x24BDEE3D8]);
}

uint64_t sub_22F8E23D8(uint64_t a1)
{
  sub_22F8D8E04(*(_QWORD *)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_22F8E2450@<X0>(_BYTE *a1@<X8>)
{
  return sub_22F878708(a1);
}

uint64_t sub_22F8E2464()
{
  return sub_22F878814();
}

uint64_t sub_22F8E2478@<X0>(_BYTE *a1@<X8>)
{
  return sub_22F878708(a1);
}

uint64_t sub_22F8E248C@<X0>(_BYTE *a1@<X8>)
{
  return sub_22F878708(a1);
}

uint64_t sub_22F8E24B0()
{
  return sub_22F878814();
}

uint64_t sub_22F8E24C4()
{
  return sub_22F878814();
}

uint64_t sub_22F8E24E8(uint64_t a1)
{
  swift_release();
  return a1;
}

unint64_t sub_22F8E2510()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E23350;
  if (!qword_255E23350)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E23310);
    v2[0] = sub_22F8E2594();
    v2[1] = sub_22F87AA84(&qword_255E1F118, &qword_255E1F120, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E23350);
  }
  return result;
}

unint64_t sub_22F8E2594()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E23358;
  if (!qword_255E23358)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E23308);
    v2[0] = sub_22F87AA84(&qword_255E23360, &qword_255E23300, MEMORY[0x24BDF4750]);
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E23358);
  }
  return result;
}

uint64_t sub_22F8E261C()
{
  uint64_t v0;

  return sub_22F8E1A00(v0 + 16);
}

void sub_22F8E2628()
{
  sub_22F8E1DB4();
}

uint64_t sub_22F8E263C()
{
  uint64_t v0;

  return sub_22F8E1E48(v0 + 16);
}

uint64_t sub_22F8E2644()
{
  return sub_22F87E2D8(&qword_255E23370, &qword_255E23330, (uint64_t (*)(void))sub_22F8E2668, MEMORY[0x24BDF0910]);
}

unint64_t sub_22F8E2668()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E23378;
  if (!qword_255E23378)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E23328);
    v2[0] = sub_22F8E26EC();
    v2[1] = sub_22F87AA84(&qword_255E23390, &qword_255E23398, MEMORY[0x24BDF1028]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E23378);
  }
  return result;
}

unint64_t sub_22F8E26EC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E23380;
  if (!qword_255E23380)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E23320);
    v2[0] = sub_22F8E2770();
    v2[1] = sub_22F87AA84(&qword_255E21D18, &qword_255E21D20, MEMORY[0x24BDF06D0]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E23380);
  }
  return result;
}

unint64_t sub_22F8E2770()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E23388;
  if (!qword_255E23388)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E23318);
    v2[0] = sub_22F8E2510();
    v2[1] = sub_22F862548((unint64_t *)&qword_255E1F478, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E23388);
  }
  return result;
}

uint64_t sub_22F8E27F4@<X0>(_BYTE *a1@<X8>)
{
  return sub_22F878708(a1);
}

uint64_t sub_22F8E2818()
{
  return sub_22F878814();
}

uint64_t sub_22F8E2840()
{
  uint64_t v0;

  return sub_22F8E2070(v0 + 16);
}

uint64_t sub_22F8E2848@<X0>(_BYTE *a1@<X8>)
{
  return sub_22F878708(a1);
}

uint64_t sub_22F8E285C()
{
  return sub_22F878814();
}

uint64_t sub_22F8E2870@<X0>(_BYTE *a1@<X8>)
{
  return sub_22F878708(a1);
}

uint64_t sub_22F8E2884()
{
  return sub_22F878814();
}

uint64_t sub_22F8E2898@<X0>(_BYTE *a1@<X8>)
{
  return sub_22F878708(a1);
}

uint64_t sub_22F8E28AC()
{
  return sub_22F878814();
}

double sub_22F8E28C0@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  result = *(double *)&v3;
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  return result;
}

uint64_t sub_22F8E2944(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F8E44D4(v1, v2);
  swift_retain();
  return sub_22F98DBAC();
}

uint64_t sub_22F8E2A08@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_22F8E2A84()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  swift_retain();
  return sub_22F98DBAC();
}

uint64_t sub_22F8E2AFC@<X0>(_BYTE *a1@<X8>)
{
  return sub_22F878708(a1);
}

uint64_t sub_22F8E2B10(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  v3 = v2;
  return sub_22F98DBAC();
}

uint64_t sub_22F8E2B7C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_22F98DFFC();
  *a1 = result;
  return result;
}

uint64_t sub_22F8E2BA4()
{
  swift_retain();
  return sub_22F98E008();
}

uint64_t sub_22F8E2BCC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22F98DFE4();
  *a1 = result;
  return result;
}

uint64_t sub_22F8E2BF4()
{
  return sub_22F98DFF0();
}

uint64_t sub_22F8E2C18@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_22F98DFCC();
  *a1 = v3;
  return result;
}

uint64_t sub_22F8E2C40()
{
  return sub_22F98DFD8();
}

_BYTE *sub_22F8E2C64(_BYTE *result, char a2)
{
  *result &= a2 ^ 1;
  return result;
}

uint64_t sub_22F8E2C78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  type metadata accessor for PINViewModel();
  swift_allocObject();
  sub_22F86458C();
  sub_22F862548((unint64_t *)&qword_255E20110, (uint64_t (*)(uint64_t))type metadata accessor for PINViewModel, (uint64_t)&unk_22F991FD4);
  v2 = sub_22F98DE4C();
  v4 = v3;
  sub_22F98E8F0();
  sub_22F98E8F0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E23738);
  result = sub_22F98E8F0();
  *(_QWORD *)a1 = sub_22F8DB414;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = v2;
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  *(_BYTE *)(a1 + 56) = v6;
  *(_QWORD *)(a1 + 64) = v7;
  *(_QWORD *)(a1 + 72) = v6;
  *(_QWORD *)(a1 + 80) = v7;
  return result;
}

uint64_t sub_22F8E2DA4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3B0);
  return sub_22F98E908();
}

uint64_t sub_22F8E2DF8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3B0);
  return sub_22F98E908();
}

uint64_t sub_22F8E2E50()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F3B0);
  return sub_22F98E908();
}

void sub_22F8E2EAC()
{
  sub_22F8E1CD4();
}

uint64_t sub_22F8E2EB8(uint64_t a1)
{
  swift_retain();
  return a1;
}

uint64_t sub_22F8E2EE0@<X0>(_BYTE *a1@<X8>)
{
  return sub_22F878708(a1);
}

uint64_t sub_22F8E2F08(uint64_t a1)
{
  sub_22F8D8E80(*(_QWORD *)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_22F8E2F80@<X0>(_BYTE *a1@<X8>)
{
  return sub_22F878708(a1);
}

uint64_t sub_22F8E2FA4()
{
  return sub_22F878814();
}

double sub_22F8E2FC8(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[11] = 0u;
  a1[12] = 0u;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

double sub_22F8E2FF4(uint64_t a1)
{
  double result;

  *(_QWORD *)(a1 + 336) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

unint64_t sub_22F8E3034()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E23468;
  if (!qword_255E23468)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E23418);
    v2[0] = sub_22F8E30B8();
    v2[1] = sub_22F87AA84(&qword_255E20BD0, &qword_255E20BD8, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E23468);
  }
  return result;
}

unint64_t sub_22F8E30B8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E23470;
  if (!qword_255E23470)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E23410);
    v2[0] = sub_22F8E313C();
    v2[1] = sub_22F87AA84(&qword_255E1F118, &qword_255E1F120, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E23470);
  }
  return result;
}

unint64_t sub_22F8E313C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E23478;
  if (!qword_255E23478)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E23408);
    v2[0] = sub_22F87AA84(&qword_255E23480, &qword_255E23400, MEMORY[0x24BDF4700]);
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E23478);
  }
  return result;
}

unint64_t sub_22F8E31C0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E23488;
  if (!qword_255E23488)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E23420);
    v2[0] = sub_22F8E3034();
    v2[1] = sub_22F862548((unint64_t *)&qword_255E1F478, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E23488);
  }
  return result;
}

uint64_t sub_22F8E3244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result;

  if (a7)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_22F8E3274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  id v39;
  uint64_t result;

  if (a3)
  {
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v39 = a11;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_22F88BD70(a33);
    sub_22F88BD70(a35);
    sub_22F88BD70(a37);
    sub_22F88BD70(a39);
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_22F8E3390(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;

  v8 = *(_OWORD *)(a1 + 304);
  v9 = *(_OWORD *)(a1 + 320);
  v6 = *(_OWORD *)(a1 + 272);
  v7 = *(_OWORD *)(a1 + 288);
  v4 = *(_OWORD *)(a1 + 240);
  v5 = *(_OWORD *)(a1 + 256);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    *(_QWORD *)(a1 + 224),
    *(_QWORD *)(a1 + 232),
    v4,
    *((_QWORD *)&v4 + 1),
    v5,
    *((_QWORD *)&v5 + 1),
    v6,
    *((_QWORD *)&v6 + 1),
    v7,
    *((_QWORD *)&v7 + 1),
    v8,
    *((_QWORD *)&v8 + 1),
    v9,
    *((_QWORD *)&v9 + 1),
    *(_QWORD *)(a1 + 336));
  return a1;
}

uint64_t sub_22F8E3424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  uint64_t result;

  if (a3)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();

    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    sub_22F87A9B8(a33);
    sub_22F87A9B8(a35);
    sub_22F87A9B8(a37);
    sub_22F87A9B8(a39);
    swift_release();
    return swift_release();
  }
  return result;
}

_QWORD *sub_22F8E3540(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23],
    a1[24],
    a1[25]);
  return a1;
}

uint64_t sub_22F8E35AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result;

  if (a7)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_22F8E35E8()
{
  sub_22F8E1964();
}

uint64_t sub_22F8E35F0@<X0>(_BYTE *a1@<X8>)
{
  return sub_22F878708(a1);
}

uint64_t sub_22F8E3614()
{
  return sub_22F878814();
}

uint64_t sub_22F8E3638()
{
  return sub_22F98DFC0();
}

uint64_t sub_22F8E3658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22F8E2168(a1, a2, a3, a4, (void (*)(_QWORD))MEMORY[0x24BDED130], MEMORY[0x24BDEE080]);
}

uint64_t sub_22F8E3680(_BYTE *a1)
{
  uint64_t v1;

  return sub_22F8DE0F4(a1, v1 + 16);
}

uint64_t sub_22F8E3688(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 80);
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

uint64_t sub_22F8E3724()
{
  uint64_t v0;

  return sub_22F8DF8EC(v0 + 16, (void (*)(uint64_t, uint64_t))sub_22F874174);
}

uint64_t sub_22F8E3748()
{
  uint64_t v0;

  return sub_22F8DE13C(v0 + 16);
}

uint64_t sub_22F8E3758@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22F98E044();
  *a1 = result & 1;
  return result;
}

uint64_t sub_22F8E3784()
{
  return sub_22F98E050();
}

uint64_t sub_22F8E37A8()
{
  return swift_deallocObject();
}

_BYTE *sub_22F8E37B8(_BYTE *result)
{
  uint64_t v1;

  *result &= ~*(_BYTE *)(v1 + 16) & 1;
  return result;
}

uint64_t sub_22F8E37D0@<X0>(_BYTE *a1@<X8>)
{
  return sub_22F878708(a1);
}

uint64_t sub_22F8E37F4()
{
  return sub_22F878814();
}

uint64_t sub_22F8E381C@<X0>(uint64_t a1@<X8>)
{
  return sub_22F8DDD7C(a1);
}

uint64_t sub_22F8E3828()
{
  uint64_t v0;

  return sub_22F8DDC98(v0 + 16);
}

uint64_t sub_22F8E3830@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_22F98DFFC();
  *a1 = result;
  return result;
}

uint64_t sub_22F8E3858()
{
  swift_retain();
  return sub_22F98E008();
}

uint64_t sub_22F8E3880(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_22F8E38A8(uint64_t a1)
{
  swift_release();
  return a1;
}

uint64_t *sub_22F8E38D0(uint64_t *a1)
{
  sub_22F87A498(*a1, a1[1]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

unint64_t sub_22F8E3940()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E234F8;
  if (!qword_255E234F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E234E0);
    v2[0] = sub_22F862548(&qword_255E23500, (uint64_t (*)(uint64_t))type metadata accessor for PINPrivacyLockView, (uint64_t)&unk_22F992F78);
    v2[1] = MEMORY[0x24BDF1050];
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E234F8);
  }
  return result;
}

unint64_t sub_22F8E39C4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E23508;
  if (!qword_255E23508)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E234D0);
    v2[0] = sub_22F87AA84(&qword_255E23510, &qword_255E234C8, MEMORY[0x24BDF4700]);
    v2[1] = MEMORY[0x24BDED5D8];
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E23508);
  }
  return result;
}

double sub_22F8E3A58(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[24] = 0u;
  a1[25] = 0u;
  a1[22] = 0u;
  a1[23] = 0u;
  a1[20] = 0u;
  a1[21] = 0u;
  a1[18] = 0u;
  a1[19] = 0u;
  a1[16] = 0u;
  a1[17] = 0u;
  a1[14] = 0u;
  a1[15] = 0u;
  a1[12] = 0u;
  a1[13] = 0u;
  a1[10] = 0u;
  a1[11] = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_22F8E3A98()
{
  uint64_t v0;

  return sub_22F8E0FE0(v0 + 16);
}

uint64_t sub_22F8E3AA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_22F8E11D4(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_22F8E3AA8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E23588;
  if (!qword_255E23588)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E23580);
    v2[0] = sub_22F87AA84(&qword_255E23590, &qword_255E23598, MEMORY[0x24BDF44C8]);
    v2[1] = sub_22F862548((unint64_t *)&qword_255E1F478, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E23588);
  }
  return result;
}

uint64_t sub_22F8E3B44()
{
  return swift_deallocObject();
}

unint64_t sub_22F8E3B54()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E235A0;
  if (!qword_255E235A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E23550);
    v2[0] = sub_22F87E2D8(&qword_255E235A8, &qword_255E23548, (uint64_t (*)(void))sub_22F8E3BF8, MEMORY[0x24BDECC38]);
    v2[1] = sub_22F87AA84(&qword_255E1F118, &qword_255E1F120, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E235A0);
  }
  return result;
}

unint64_t sub_22F8E3BF8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E235B0;
  if (!qword_255E235B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E23540);
    v2[0] = sub_22F87E2D8(&qword_255E235B8, &qword_255E23538, (uint64_t (*)(void))sub_22F8E3C9C, MEMORY[0x24BDECC60]);
    v2[1] = sub_22F87AA84((unint64_t *)&qword_255E21D98, &qword_255E21DA0, MEMORY[0x24BDF1248]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E235B0);
  }
  return result;
}

unint64_t sub_22F8E3C9C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E235C0;
  if (!qword_255E235C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E23530);
    v2[0] = sub_22F87AA84(&qword_255E235C8, &qword_255E23528, MEMORY[0x24BDF43B0]);
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E235C0);
  }
  return result;
}

uint64_t sub_22F8E3D20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51)
{
  uint64_t result;

  if (a2)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_22F88BD70(a49);
    return sub_22F88BD70(a51);
  }
  return result;
}

uint64_t sub_22F8E3DD4(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v13 = *(_OWORD *)(a1 + 368);
  v14 = *(_OWORD *)(a1 + 384);
  v11 = *(_OWORD *)(a1 + 336);
  v12 = *(_OWORD *)(a1 + 352);
  v9 = *(_OWORD *)(a1 + 304);
  v10 = *(_OWORD *)(a1 + 320);
  v7 = *(_OWORD *)(a1 + 272);
  v8 = *(_OWORD *)(a1 + 288);
  v5 = *(_OWORD *)(a1 + 240);
  v6 = *(_OWORD *)(a1 + 256);
  v4 = *(_OWORD *)(a1 + 208);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    v4,
    *((_QWORD *)&v4 + 1),
    *(_QWORD *)(a1 + 224),
    *(_QWORD *)(a1 + 232),
    v5,
    *((_QWORD *)&v5 + 1),
    v6,
    *((_QWORD *)&v6 + 1),
    v7,
    *((_QWORD *)&v7 + 1),
    v8,
    *((_QWORD *)&v8 + 1),
    v9,
    *((_QWORD *)&v9 + 1),
    v10,
    *((_QWORD *)&v10 + 1),
    v11,
    *((_QWORD *)&v11 + 1),
    v12,
    *((_QWORD *)&v12 + 1),
    v13,
    *((_QWORD *)&v13 + 1),
    v14,
    *((_QWORD *)&v14 + 1),
    *(_QWORD *)(a1 + 400),
    *(_QWORD *)(a1 + 408));
  return a1;
}

uint64_t sub_22F8E3E78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    sub_22F87A9B8(a49);
    return sub_22F87A9B8(a51);
  }
  return result;
}

uint64_t sub_22F8E3F2C()
{
  return swift_deallocObject();
}

uint64_t sub_22F8E3F3C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_22F8E3F90()
{
  uint64_t v0;

  return sub_22F8DF8EC(v0 + 16, (void (*)(uint64_t, uint64_t))sub_22F871CC0);
}

uint64_t sub_22F8E3FB8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_22F98DFCC();
  *a1 = v3;
  return result;
}

uint64_t sub_22F8E3FE0()
{
  return sub_22F98DFD8();
}

uint64_t sub_22F8E4004(uint64_t a1)
{
  sub_22F87E294(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22F8E4074()
{
  uint64_t v0;

  return sub_22F8E1144(*(_QWORD *)(v0 + 16));
}

unint64_t sub_22F8E408C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E23658;
  if (!qword_255E23658)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E23660);
    v2[0] = sub_22F87E2D8(&qword_255E23668, &qword_255E23670, sub_22F8E4130, MEMORY[0x24BDECC60]);
    v2[1] = sub_22F87AA84(&qword_255E1FA18, &qword_255E1FA20, MEMORY[0x24BDF1028]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E23658);
  }
  return result;
}

uint64_t sub_22F8E4130()
{
  return sub_22F87E2D8(&qword_255E23678, &qword_255E23680, (uint64_t (*)(void))sub_22F8E4154, MEMORY[0x24BDECC60]);
}

unint64_t sub_22F8E4154()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E23688;
  if (!qword_255E23688)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E23690);
    v2[0] = sub_22F87E2D8(&qword_255E23698, &qword_255E236A0, (uint64_t (*)(void))sub_22F8E41F8, MEMORY[0x24BDEDBB8]);
    v2[1] = sub_22F87AA84(&qword_255E1F118, &qword_255E1F120, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E23688);
  }
  return result;
}

unint64_t sub_22F8E41F8()
{
  unint64_t result;

  result = qword_255E236A8;
  if (!qword_255E236A8)
  {
    result = MEMORY[0x2348A6784](&unk_22F993214, &type metadata for PINPromptView);
    atomic_store(result, (unint64_t *)&qword_255E236A8);
  }
  return result;
}

uint64_t sub_22F8E423C(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t objectdestroyTm_14()
{
  uint64_t v0;

  sub_22F8D8E80(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_BYTE *)(v0 + 32));
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22F8E42F8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22F8E0DEC(a1, a2);
}

unint64_t sub_22F8E4300()
{
  unint64_t result;

  result = qword_255E236C8;
  if (!qword_255E236C8)
  {
    result = MEMORY[0x2348A6784](&unk_22F9973F4, &type metadata for PINButtonView);
    atomic_store(result, (unint64_t *)&qword_255E236C8);
  }
  return result;
}

uint64_t sub_22F8E4344@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22F98DFE4();
  *a1 = result;
  return result;
}

uint64_t sub_22F8E436C()
{
  return sub_22F98DFF0();
}

unint64_t sub_22F8E4390()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E23700;
  if (!qword_255E23700)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E23708);
    v2[0] = sub_22F87E2D8(&qword_255E23710, &qword_255E23718, sub_22F8E4434, MEMORY[0x24BDECC60]);
    v2[1] = sub_22F87AA84(&qword_255E1FA18, &qword_255E1FA20, MEMORY[0x24BDF1028]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E23700);
  }
  return result;
}

uint64_t sub_22F8E4434()
{
  return sub_22F87E2D8(&qword_255E23720, &qword_255E23728, (uint64_t (*)(void))sub_22F8C50B4, MEMORY[0x24BDECC60]);
}

uint64_t sub_22F8E4458(uint64_t a1)
{
  sub_22F87E294(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

uint64_t sub_22F8E44D4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_22F8E4528()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E23740;
  if (!qword_255E23740)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E232F8);
    v2[0] = sub_22F87AA84(&qword_255E23748, &qword_255E23750, MEMORY[0x24BDEC6F8]);
    v2[1] = sub_22F87AA84((unint64_t *)&qword_255E23758, &qword_255E232F0, MEMORY[0x24BDF1028]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E23740);
  }
  return result;
}

uint64_t sub_22F8E45C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(void);
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t result;
  _UNKNOWN **v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v40 - v6;
  v8 = (uint64_t (*)(void))sub_22F98D9FC();
  v9 = v8();
  swift_release();
  if ((v9 & 1) == 0)
    goto LABEL_15;
  if (qword_255E1DBA0 != -1)
    swift_once();
  v10 = qword_255E22848;
  v11 = unk_255E22850;
  v12 = byte_255E22858;
  v13 = (void *)qword_255E22860;
  swift_bridgeObjectRetain();
  v14 = v13;
  LOBYTE(v10) = sub_22F8E7468(v10, v11, v12, v14);

  swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
    goto LABEL_11;
  if (qword_255E1DB98 != -1)
    swift_once();
  v15 = qword_255E22828;
  v16 = unk_255E22830;
  v17 = byte_255E22838;
  v18 = (void *)qword_255E22840;
  swift_bridgeObjectRetain();
  v19 = v18;
  LOBYTE(v15) = sub_22F8E7468(v15, v16, v17, v19);

  swift_bridgeObjectRelease();
  if ((v15 & 1) != 0)
    goto LABEL_11;
  if (qword_255E1DBA8 != -1)
    swift_once();
  v20 = qword_255E22868;
  v21 = unk_255E22870;
  v22 = byte_255E22878;
  v23 = (void *)qword_255E22880;
  swift_bridgeObjectRetain();
  v24 = v23;
  LOBYTE(v20) = sub_22F8E7468(v20, v21, v22, v24);

  swift_bridgeObjectRelease();
  if ((v20 & 1) != 0)
  {
LABEL_11:
    if (qword_255E1DB00 != -1)
      swift_once();
    v25 = __swift_project_value_buffer(v2, (uint64_t)qword_255E295B0);
    sub_22F87BC08(v25, (uint64_t)v7);
    v26 = sub_22F98DAA4();
    v27 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v7, 1, v26) == 1)
    {
      sub_22F87BC50((uint64_t)v7);
    }
    else
    {
      v37 = sub_22F98DA8C();
      v38 = sub_22F98F0A0();
      if (os_log_type_enabled(v37, v38))
      {
        v39 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v39 = 0;
        _os_log_impl(&dword_22F85B000, v37, v38, "Using MockPINController", v39, 2u);
        MEMORY[0x2348A6838](v39, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v26);
    }
    v34 = type metadata accessor for MockPINController();
    result = swift_allocObject();
    v36 = &off_24FD25AF8;
  }
  else
  {
LABEL_15:
    if (qword_255E1DB00 != -1)
      swift_once();
    v28 = __swift_project_value_buffer(v2, (uint64_t)qword_255E295B0);
    sub_22F87BC08(v28, (uint64_t)v5);
    v29 = sub_22F98DAA4();
    v30 = *(_QWORD *)(v29 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v5, 1, v29) == 1)
    {
      sub_22F87BC50((uint64_t)v5);
    }
    else
    {
      v31 = sub_22F98DA8C();
      v32 = sub_22F98F0A0();
      if (os_log_type_enabled(v31, v32))
      {
        v33 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v33 = 0;
        _os_log_impl(&dword_22F85B000, v31, v32, "Using SPRPINController", v33, 2u);
        MEMORY[0x2348A6838](v33, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v30 + 8))(v5, v29);
    }
    v34 = type metadata accessor for SPRPINController();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = 0;
    v36 = &off_24FD22E60;
  }
  a1[3] = v34;
  a1[4] = (uint64_t)v36;
  *a1 = result;
  return result;
}

void *sub_22F8E4A0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  id v38;
  id v39;
  NSObject *v40;
  os_log_type_t v41;
  int v42;
  NSObject *v43;
  uint64_t v44;
  uint8_t *v45;
  void *v46;
  id v47;
  uint64_t v48;
  unint64_t v49;
  uint8_t *v50;
  void *v51;
  id v52;
  void *v53;
  id v54;
  char v55;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  id v60;
  id v61;
  id v62;
  void *v63;
  void *v64;
  void *v65;
  uint8_t *v66;
  uint8_t *v67;
  int v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  id v73[2];

  v1 = v0;
  v73[1] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = (char *)&v66 - v7;
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v66 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v66 - v12;
  v14 = *(void **)(v1 + 16);
  if (!v14)
  {
    if (qword_255E1DB00 != -1)
      swift_once();
    v71 = __swift_project_value_buffer(v2, (uint64_t)qword_255E295B0);
    sub_22F87BC08(v71, (uint64_t)v11);
    v20 = sub_22F98DAA4();
    v21 = *(_QWORD *)(v20 - 8);
    v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
    if (v22(v11, 1, v20) == 1)
    {
      sub_22F87BC50((uint64_t)v11);
    }
    else
    {
      v26 = sub_22F98DA8C();
      v27 = sub_22F98F0A0();
      if (os_log_type_enabled(v26, v27))
      {
        v28 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v28 = 0;
        _os_log_impl(&dword_22F85B000, v26, v27, "SPRPINController making new one", v28, 2u);
        MEMORY[0x2348A6838](v28, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v20);
    }
    v29 = (void *)objc_opt_self();
    v30 = objc_msgSend(v29, sel_shared);
    v73[0] = 0;
    v31 = objc_msgSend(v30, sel_makePINControllerAndReturnError_, v73);

    v32 = v73[0];
    if (v31)
    {
      v33 = *(void **)(v1 + 16);
      *(_QWORD *)(v1 + 16) = v31;
      v34 = v32;

LABEL_18:
      v14 = *(void **)(v1 + 16);
      v35 = v14;
      return v14;
    }
    v36 = v73[0];
    v37 = (void *)sub_22F98D2C4();

    swift_willThrow();
    sub_22F87BC08(v71, (uint64_t)v8);
    if (v22(v8, 1, v20) == 1)
    {
      sub_22F87BC50((uint64_t)v8);
    }
    else
    {
      v70 = v29;
      v38 = v37;
      v39 = v37;
      v40 = sub_22F98DA8C();
      v41 = sub_22F98F088();
      v42 = v41;
      v43 = v40;
      if (os_log_type_enabled(v40, v41))
      {
        v69 = v21;
        v44 = swift_slowAlloc();
        v68 = v42;
        v45 = (uint8_t *)v44;
        v46 = (void *)swift_slowAlloc();
        v73[0] = v46;
        v67 = v45;
        *(_DWORD *)v45 = 136315138;
        v66 = v45 + 4;
        v72 = (uint64_t)v37;
        v47 = v37;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E249C0);
        v48 = sub_22F98EE18();
        v72 = sub_22F878880(v48, v49, (uint64_t *)v73);
        sub_22F98F208();
        v21 = v69;
        swift_bridgeObjectRelease();

        v50 = v67;
        _os_log_impl(&dword_22F85B000, v43, (os_log_type_t)v68, "SPRPINController: Could not start SPR controller. SPR error: [%s]", v67, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2348A6838](v46, -1, -1);
        MEMORY[0x2348A6838](v50, -1, -1);

      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v20);
      v29 = v70;
    }
    v51 = *(void **)(v1 + 16);
    *(_QWORD *)(v1 + 16) = 0;

    v73[0] = v37;
    v52 = v37;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E249C0);
    type metadata accessor for SPRXPCError(0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v53 = (void *)v72;
      type metadata accessor for Code(0);
      v73[0] = (id)14001;
      sub_22F862548(&qword_255E1E058, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_22F9917BC);
      v54 = v53;
      v55 = sub_22F98D24C();

      if ((v55 & 1) != 0)
      {
        sub_22F87BC08(v71, (uint64_t)v5);
        if (v22(v5, 1, v20) == 1)
        {
          sub_22F87BC50((uint64_t)v5);
        }
        else
        {
          v57 = sub_22F98DA8C();
          v58 = sub_22F98F088();
          if (os_log_type_enabled(v57, v58))
          {
            v59 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v59 = 0;
            _os_log_impl(&dword_22F85B000, v57, v58, "SPRPINController stale, trying again", v59, 2u);
            MEMORY[0x2348A6838](v59, -1, -1);
          }

          (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v20);
        }
        v60 = objc_msgSend(v29, sel_shared);
        v73[0] = 0;
        v61 = objc_msgSend(v60, sel_makePINControllerAndReturnError_, v73);

        v62 = v73[0];
        if (v61)
        {

        }
        else
        {
          v63 = v62;
          v64 = (void *)sub_22F98D2C4();

          swift_willThrow();
          v61 = 0;
        }
        v65 = *(void **)(v1 + 16);
        *(_QWORD *)(v1 + 16) = v61;

        goto LABEL_18;
      }

    }
    else
    {

    }
    return 0;
  }
  v15 = qword_255E1DB00;
  v16 = v14;
  if (v15 != -1)
    swift_once();
  v17 = __swift_project_value_buffer(v2, (uint64_t)qword_255E295B0);
  sub_22F87BC08(v17, (uint64_t)v13);
  v18 = sub_22F98DAA4();
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v13, 1, v18) == 1)
  {
    sub_22F87BC50((uint64_t)v13);
  }
  else
  {
    v23 = sub_22F98DA8C();
    v24 = sub_22F98F0A0();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v25 = 0;
      _os_log_impl(&dword_22F85B000, v23, v24, "SPRPINController Cached controller", v25, 2u);
      MEMORY[0x2348A6838](v25, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v19 + 8))(v13, v18);
  }
  return v14;
}

void sub_22F8E5164(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  void *v28;
  void *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  void *v36;
  double v37;
  double v38;
  void *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  id v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  _BYTE *v49;
  NSObject *v50;
  os_log_type_t v51;
  BOOL v52;
  uint8_t *v53;
  char *v54;
  NSObject *v55;
  os_log_type_t v56;
  uint64_t v57;
  uint8_t *v58;
  uint8_t *v59;
  _BYTE *v60;
  id v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  id v66;
  NSObject *v67;
  os_log_type_t v68;
  uint8_t *v69;
  void *v70;
  uint64_t v71;
  unint64_t v72;
  uint8_t *v73;
  uint64_t v74;
  id v75;
  BOOL v76;
  BOOL *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  char *v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t (*v88)(char *, uint64_t, uint64_t);
  uint64_t v89;
  id v90[2];

  v5 = v4;
  v83 = a4;
  v80 = a3;
  v85 = a1;
  v86 = a2;
  v90[1] = *(id *)MEMORY[0x24BDAC8D0];
  v6 = sub_22F98D5A0();
  v81 = *(_QWORD *)(v6 - 8);
  v82 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v79 = (uint64_t)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v78 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12);
  v84 = (char *)&v78 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v78 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v78 - v20;
  if (qword_255E1DB00 != -1)
    swift_once();
  v22 = __swift_project_value_buffer(v9, (uint64_t)qword_255E295B0);
  sub_22F87BC08(v22, (uint64_t)v21);
  v23 = sub_22F98DAA4();
  v24 = *(_QWORD *)(v23 - 8);
  v88 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48);
  v25 = v88(v21, 1, v23);
  v87 = v24;
  if (v25 == 1)
  {
    v26 = v23;
    sub_22F87BC50((uint64_t)v21);
  }
  else
  {
    sub_22F863858(v5, 0xD00000000000001CLL, 0x800000022F9A0970, 0, 0xE000000000000000);
    v27 = *(void (**)(char *, uint64_t))(v24 + 8);
    v26 = v23;
    v27(v21, v23);
  }
  v28 = sub_22F8E4A0C();
  if (v28)
  {
    v29 = v28;
    v30 = sub_22F98D330();
    if (v31 >> 60 == 15)
    {
      sub_22F87BC08(v22, (uint64_t)v19);
      v32 = v26;
      if (v88(v19, 1, v26) == 1)
      {
        sub_22F87BC50((uint64_t)v19);
        v33 = v87;
      }
      else
      {
        v50 = sub_22F98DA8C();
        v51 = sub_22F98F0A0();
        v52 = os_log_type_enabled(v50, v51);
        v33 = v87;
        if (v52)
        {
          v53 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v53 = 0;
          _os_log_impl(&dword_22F85B000, v50, v51, "SPRPINController: getSPRPINParameters - could not decode digest", v53, 2u);
          MEMORY[0x2348A6838](v53, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v33 + 8))(v19, v32);
      }
LABEL_24:
      v54 = v84;
      sub_22F87BC08(v22, (uint64_t)v84);
      if (v88(v54, 1, v32) == 1)
      {
        sub_22F87BC50((uint64_t)v54);
      }
      else
      {
        v55 = sub_22F98DA8C();
        v56 = sub_22F98F0A0();
        if (os_log_type_enabled(v55, v56))
        {
          v57 = v33;
          v58 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v58 = 0;
          _os_log_impl(&dword_22F85B000, v55, v56, "SPRPINController: capturePIN - could not build PIN parameters", v58, 2u);
          v59 = v58;
          v33 = v57;
          MEMORY[0x2348A6838](v59, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v33 + 8))(v54, v32);
      }
      sub_22F8E7538();
      swift_allocError();
      *v60 = 1;
      swift_willThrow();

      return;
    }
    v34 = v30;
    v35 = v31;
    v36 = v83;
    swift_bridgeObjectRetain();
    sub_22F98D9E4();
    v38 = v37;
    v39 = (void *)sub_22F98D360();
    if (v36)
    {
      v36 = (void *)sub_22F98ED94();
      swift_bridgeObjectRelease();
    }
    v40 = (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x24BEAE698]), sel_initWithDigest_pinToken_transactionDataLifetime_, v39, v36, v38);
    v41 = v34;
    v42 = v40;
    sub_22F87A9E0(v41, v35);

    v32 = v26;
    v33 = v87;
    if (!v42)
      goto LABEL_24;
    v86 = v32;
    sub_22F98D4C8();
    sub_22F98D588();
    v43 = v82;
    v44 = *(void (**)(char *, uint64_t))(v81 + 8);
    v44(v8, v82);
    v90[0] = 0;
    if ((objc_msgSend(v29, sel_capturePINWithParameters_error_, v42, v90) & 1) != 0)
    {
      v45 = v90[0];
      sub_22F98D4C8();
      sub_22F98D57C();
      v44(v8, v43);

    }
    else
    {
      v84 = v42;
      v85 = v29;
      v61 = v90[0];
      v62 = (void *)sub_22F98D2C4();

      swift_willThrow();
      sub_22F98D4C8();
      sub_22F98D57C();
      v44(v8, v43);
      v63 = v79;
      sub_22F87BC08(v22, v79);
      v64 = v86;
      if (v88((char *)v63, 1, v86) == 1)
      {
        sub_22F87BC50(v63);
      }
      else
      {
        v65 = v62;
        v66 = v62;
        v67 = sub_22F98DA8C();
        v68 = sub_22F98F07C();
        if (os_log_type_enabled(v67, v68))
        {
          v69 = (uint8_t *)swift_slowAlloc();
          v70 = (void *)swift_slowAlloc();
          v90[0] = v70;
          *(_DWORD *)v69 = 136315138;
          swift_getErrorValue();
          v71 = sub_22F98F49C();
          v89 = sub_22F878880(v71, v72, (uint64_t *)v90);
          sub_22F98F208();
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_22F85B000, v67, v68, "SPRPINController: capturePIN - SPR error: %s", v69, 0xCu);
          swift_arrayDestroy();
          v63 = v79;
          MEMORY[0x2348A6838](v70, -1, -1);
          v73 = v69;
          v74 = v87;
          MEMORY[0x2348A6838](v73, -1, -1);

        }
        else
        {

          v74 = v87;
        }
        (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v63, v64);
      }
      v75 = v62;
      v76 = sub_22F8E757C(v62);
      sub_22F8E7538();
      swift_allocError();
      *v77 = v76;
      swift_willThrow();

    }
  }
  else
  {
    sub_22F87BC08(v22, (uint64_t)v14);
    if (v88(v14, 1, v26) == 1)
    {
      sub_22F87BC50((uint64_t)v14);
    }
    else
    {
      v46 = sub_22F98DA8C();
      v47 = sub_22F98F0A0();
      if (os_log_type_enabled(v46, v47))
      {
        v48 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v48 = 0;
        _os_log_impl(&dword_22F85B000, v46, v47, "SPRPINController: capturePIN - controller nil", v48, 2u);
        MEMORY[0x2348A6838](v48, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v87 + 8))(v14, v26);
    }
    sub_22F8E7538();
    swift_allocError();
    *v49 = 1;
    swift_willThrow();
  }
}

void sub_22F8E59B0(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  void *v19;
  void *v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  _BYTE *v35;
  id v36;
  id v37;
  NSObject *v38;
  void *v39;
  os_log_type_t v40;
  uint8_t *v41;
  void *v42;
  uint64_t v43;
  unint64_t v44;
  id v45;
  BOOL v46;
  BOOL *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  id v54[2];

  v2 = v1;
  LODWORD(v51) = a1;
  v54[1] = *(id *)MEMORY[0x24BDAC8D0];
  v52 = sub_22F98D5A0();
  v3 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v49 = (uint64_t)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v48 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v48 - v12;
  if (qword_255E1DB00 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v6, (uint64_t)qword_255E295B0);
  sub_22F87BC08(v14, (uint64_t)v13);
  v15 = sub_22F98DAA4();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v50 = v16;
  if (v18 == 1)
  {
    sub_22F87BC50((uint64_t)v13);
  }
  else
  {
    sub_22F863858(v2, 0xD000000000000014, 0x800000022F9A0950, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
  }
  v19 = sub_22F8E4A0C();
  if (v19)
  {
    v20 = v19;
    sub_22F98D4EC();
    sub_22F98D588();
    v21 = *(void (**)(char *, uint64_t))(v3 + 8);
    v22 = v52;
    v21(v5, v52);
    v54[0] = 0;
    if ((objc_msgSend(v20, sel_addDigitWithValue_error_, v51, v54) & 1) != 0)
    {
      v23 = v54[0];
      sub_22F98D4EC();
      sub_22F98D57C();
      v21(v5, v22);

    }
    else
    {
      v51 = v20;
      v24 = v15;
      v25 = v22;
      v26 = v54[0];
      v27 = (void *)sub_22F98D2C4();

      swift_willThrow();
      sub_22F98D4EC();
      sub_22F98D57C();
      v28 = v25;
      v29 = v24;
      v21(v5, v28);
      v30 = v49;
      sub_22F87BC08(v14, v49);
      if (v17((char *)v30, 1, v24) == 1)
      {
        sub_22F87BC50(v30);
        v31 = v51;
      }
      else
      {
        v36 = v27;
        v37 = v27;
        v38 = sub_22F98DA8C();
        v39 = v27;
        v40 = sub_22F98F07C();
        if (os_log_type_enabled(v38, v40))
        {
          v41 = (uint8_t *)swift_slowAlloc();
          v42 = (void *)swift_slowAlloc();
          v54[0] = v42;
          *(_DWORD *)v41 = 136315138;
          v52 = (uint64_t)(v41 + 4);
          swift_getErrorValue();
          v43 = sub_22F98F49C();
          v53 = sub_22F878880(v43, v44, (uint64_t *)v54);
          sub_22F98F208();
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_22F85B000, v38, v40, "SPRPINController: addDigit - SPR error: %s", v41, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2348A6838](v42, -1, -1);
          MEMORY[0x2348A6838](v41, -1, -1);

        }
        else
        {

        }
        v31 = v51;
        v27 = v39;
        (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v30, v29);
      }
      v45 = v27;
      v46 = sub_22F8E757C(v27);
      sub_22F8E7538();
      swift_allocError();
      *v47 = v46;
      swift_willThrow();

    }
  }
  else
  {
    sub_22F87BC08(v14, (uint64_t)v11);
    if (v17(v11, 1, v15) == 1)
    {
      sub_22F87BC50((uint64_t)v11);
    }
    else
    {
      v32 = sub_22F98DA8C();
      v33 = sub_22F98F0A0();
      if (os_log_type_enabled(v32, v33))
      {
        v34 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v34 = 0;
        _os_log_impl(&dword_22F85B000, v32, v33, "SPRPINController: addDigit - controller nil", v34, 2u);
        MEMORY[0x2348A6838](v34, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v50 + 8))(v11, v15);
    }
    sub_22F8E7538();
    swift_allocError();
    *v35 = 1;
    swift_willThrow();
  }
}

void sub_22F8E5F38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void (*v21)(char *, uint64_t);
  id v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  _BYTE *v31;
  id v32;
  id v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  void *v37;
  uint64_t v38;
  unint64_t v39;
  id v40;
  BOOL v41;
  BOOL *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49[2];

  v1 = v0;
  v49[1] = *(id *)MEMORY[0x24BDAC8D0];
  v47 = sub_22F98D5A0();
  v2 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  v4 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v45 = (uint64_t)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v43 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v43 - v11;
  if (qword_255E1DB00 != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v5, (uint64_t)qword_255E295B0);
  sub_22F87BC08(v13, (uint64_t)v12);
  v14 = sub_22F98DAA4();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v46 = v14;
  v44 = v15;
  if (v17 == 1)
  {
    sub_22F87BC50((uint64_t)v12);
  }
  else
  {
    sub_22F863858(v1, 0xD000000000000011, 0x800000022F9A0930, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
  }
  v18 = sub_22F8E4A0C();
  v19 = v47;
  if (v18)
  {
    v20 = v18;
    sub_22F98D510();
    sub_22F98D588();
    v21 = *(void (**)(char *, uint64_t))(v2 + 8);
    v21(v4, v19);
    v49[0] = 0;
    if ((objc_msgSend(v20, sel_removeLastDigitAndReturnError_, v49) & 1) != 0)
    {
      v22 = v49[0];
      sub_22F98D510();
      sub_22F98D57C();
      v21(v4, v19);

    }
    else
    {
      v24 = v49[0];
      v25 = (void *)sub_22F98D2C4();

      swift_willThrow();
      sub_22F98D510();
      sub_22F98D57C();
      v21(v4, v19);
      v26 = v45;
      sub_22F87BC08(v13, v45);
      v27 = v46;
      if (v16((char *)v26, 1, v46) == 1)
      {
        sub_22F87BC50(v26);
      }
      else
      {
        v32 = v25;
        v33 = v25;
        v34 = sub_22F98DA8C();
        v35 = sub_22F98F07C();
        if (os_log_type_enabled(v34, v35))
        {
          v36 = (uint8_t *)swift_slowAlloc();
          v37 = (void *)swift_slowAlloc();
          v49[0] = v37;
          *(_DWORD *)v36 = 136315138;
          v47 = (uint64_t)(v36 + 4);
          swift_getErrorValue();
          v38 = sub_22F98F49C();
          v48 = sub_22F878880(v38, v39, (uint64_t *)v49);
          sub_22F98F208();
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_22F85B000, v34, v35, "SPRPINController: removeLastDigit - SPR error: %s", v36, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2348A6838](v37, -1, -1);
          v26 = v45;
          MEMORY[0x2348A6838](v36, -1, -1);

        }
        else
        {

        }
        (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v26, v27);
      }
      v40 = v25;
      v41 = sub_22F8E757C(v25);
      sub_22F8E7538();
      swift_allocError();
      *v42 = v41;
      swift_willThrow();

    }
  }
  else
  {
    sub_22F87BC08(v13, (uint64_t)v10);
    v23 = v46;
    if (v16(v10, 1, v46) == 1)
    {
      sub_22F87BC50((uint64_t)v10);
    }
    else
    {
      v28 = sub_22F98DA8C();
      v29 = sub_22F98F0A0();
      if (os_log_type_enabled(v28, v29))
      {
        v30 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v30 = 0;
        _os_log_impl(&dword_22F85B000, v28, v29, "SPRPINController: removeLastDigit - controller nil", v30, 2u);
        MEMORY[0x2348A6838](v30, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v44 + 8))(v10, v23);
    }
    sub_22F8E7538();
    swift_allocError();
    *v31 = 1;
    swift_willThrow();
  }
}

void sub_22F8E64A4(uint64_t a1, void (*a2)(id))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  void *v19;
  uint64_t v20;
  void *v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  id v24;
  id v25;
  void *v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  _BYTE *v31;
  id v32;
  id v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  void *v37;
  uint64_t v38;
  unint64_t v39;
  id v40;
  BOOL v41;
  BOOL *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52[2];

  v3 = v2;
  v49 = a1;
  v52[1] = *(id *)MEMORY[0x24BDAC8D0];
  v50 = sub_22F98D5A0();
  v5 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v45 = (uint64_t)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v43 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v43 - v14;
  if (qword_255E1DB00 != -1)
    swift_once();
  v47 = __swift_project_value_buffer(v8, (uint64_t)qword_255E295B0);
  sub_22F87BC08(v47, (uint64_t)v15);
  v16 = sub_22F98DAA4();
  v17 = *(_QWORD *)(v16 - 8);
  v48 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  v18 = v48(v15, 1, v16);
  v46 = v17;
  if (v18 == 1)
  {
    sub_22F87BC50((uint64_t)v15);
  }
  else
  {
    sub_22F863858(v3, 0xD000000000000022, 0x800000022F9A0900, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v15, v16);
  }
  v19 = sub_22F8E4A0C();
  v20 = v50;
  if (v19)
  {
    v21 = v19;
    v44 = v16;
    sub_22F98D504();
    sub_22F98D588();
    v22 = *(void (**)(char *, uint64_t))(v5 + 8);
    v22(v7, v20);
    if (v49 < 1)
    {
LABEL_13:
      sub_22F98D504();
      sub_22F98D57C();
      v22(v7, v20);

    }
    else
    {
      v23 = v49 + 1;
      while (1)
      {
        v52[0] = 0;
        if (!objc_msgSend(v21, sel_removeLastDigitAndReturnError_, v52))
          break;
        v24 = v52[0];
        if (a2)
          a2(v24);
        if (--v23 <= 1)
          goto LABEL_13;
      }
      v25 = v52[0];
      v26 = (void *)sub_22F98D2C4();

      swift_willThrow();
      sub_22F98D504();
      sub_22F98D57C();
      v22(v7, v20);
      v27 = v45;
      sub_22F87BC08(v47, v45);
      if (v48((char *)v27, 1, v44) == 1)
      {
        sub_22F87BC50(v27);
      }
      else
      {
        v32 = v26;
        v33 = v26;
        v34 = sub_22F98DA8C();
        v35 = sub_22F98F07C();
        if (os_log_type_enabled(v34, v35))
        {
          v36 = (uint8_t *)swift_slowAlloc();
          v37 = (void *)swift_slowAlloc();
          v52[0] = v37;
          *(_DWORD *)v36 = 136315138;
          swift_getErrorValue();
          v38 = sub_22F98F49C();
          v51 = sub_22F878880(v38, v39, (uint64_t *)v52);
          sub_22F98F208();
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_22F85B000, v34, v35, "SPRPINController: removeAllDigits - SPR error: %s", v36, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2348A6838](v37, -1, -1);
          v27 = v45;
          MEMORY[0x2348A6838](v36, -1, -1);

        }
        else
        {

        }
        (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v27, v44);
      }
      v40 = v26;
      v41 = sub_22F8E757C(v26);
      sub_22F8E7538();
      swift_allocError();
      *v42 = v41;
      swift_willThrow();

    }
  }
  else
  {
    sub_22F87BC08(v47, (uint64_t)v13);
    if (v48(v13, 1, v16) == 1)
    {
      sub_22F87BC50((uint64_t)v13);
    }
    else
    {
      v28 = sub_22F98DA8C();
      v29 = sub_22F98F0A0();
      if (os_log_type_enabled(v28, v29))
      {
        v30 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v30 = 0;
        _os_log_impl(&dword_22F85B000, v28, v29, "SPRPINController: removeAllDigits - controller nil", v30, 2u);
        MEMORY[0x2348A6838](v30, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v46 + 8))(v13, v16);
    }
    sub_22F8E7538();
    swift_allocError();
    *v31 = 1;
    swift_willThrow();
  }
}

uint64_t sub_22F8E6A4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  void *v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  _BYTE *v45;
  id v46;
  id v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  unint64_t v52;
  id v53;
  BOOL v54;
  BOOL *v55;
  _QWORD v57[6];
  uint64_t v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  id v63[2];

  v1 = v0;
  v63[1] = *(id *)MEMORY[0x24BDAC8D0];
  v61 = sub_22F98D5A0();
  v2 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v4 = (char *)v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v58 = (uint64_t)v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v57 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v57 - v11;
  if (qword_255E1DB00 != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v5, (uint64_t)qword_255E295B0);
  sub_22F87BC08(v13, (uint64_t)v12);
  v14 = sub_22F98DAA4();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v59 = v15;
  if (v17 == 1)
  {
    sub_22F87BC50((uint64_t)v12);
  }
  else
  {
    sub_22F863858(v1, 0x6C424E4950746567, 0xED000029286B636FLL, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
  }
  v18 = sub_22F8E4A0C();
  if (v18)
  {
    v19 = v18;
    sub_22F98D534();
    sub_22F98D588();
    v15 = *(_QWORD *)(v2 + 8);
    ((void (*)(char *, uint64_t))v15)(v4, v61);
    v63[0] = 0;
    v20 = objc_msgSend(v19, sel_generatePINBlockAndReturnError_, v63);
    if (v20)
    {
      v21 = v20;
      v22 = v63[0];
      LODWORD(v58) = objc_msgSend(v21, sel_isPinBypass);
      v23 = objc_msgSend(v21, sel_pinKEKHash);
      v24 = sub_22F98D36C();
      v59 = v15;
      v25 = v24;
      v27 = v26;

      sub_22F92E28C(v25, v27);
      v63[0] = v28;
      __swift_instantiateConcreteTypeFromMangledName(&qword_255E1EDC8);
      v60 = v19;
      sub_22F8E7664();
      v29 = sub_22F98ED4C();
      v57[4] = v30;
      v57[5] = v29;
      swift_bridgeObjectRelease();
      sub_22F87A9F4(v25, v27);
      v31 = objc_msgSend(v21, sel_pinCipherBlob);
      v32 = sub_22F98D36C();
      v57[2] = v33;
      v57[3] = v32;

      v34 = objc_msgSend(v21, sel_pinKeyBlob);
      v57[1] = sub_22F98D36C();

      v35 = objc_msgSend(v21, sel_pinAppletAttestationData);
      sub_22F98D36C();

      v36 = objc_msgSend(v21, sel_casd);
      sub_22F98D36C();

      v37 = objc_allocWithZone((Class)sub_22F98D900());
      v15 = sub_22F98D8DC();

      sub_22F98D534();
      sub_22F98D57C();
      ((void (*)(char *, uint64_t))v59)(v4, v61);

    }
    else
    {
      v38 = v19;
      v39 = v63[0];
      v40 = (void *)sub_22F98D2C4();

      swift_willThrow();
      sub_22F98D534();
      sub_22F98D57C();
      ((void (*)(char *, uint64_t))v15)(v4, v61);
      v41 = v58;
      sub_22F87BC08(v13, v58);
      if (v16((char *)v41, 1, v14) == 1)
      {
        sub_22F87BC50(v41);
      }
      else
      {
        v46 = v40;
        v47 = v40;
        v48 = sub_22F98DA8C();
        v49 = sub_22F98F07C();
        if (os_log_type_enabled(v48, v49))
        {
          v50 = (uint8_t *)swift_slowAlloc();
          v15 = swift_slowAlloc();
          v63[0] = (id)v15;
          *(_DWORD *)v50 = 136315138;
          v61 = (uint64_t)(v50 + 4);
          swift_getErrorValue();
          v51 = sub_22F98F49C();
          v62 = sub_22F878880(v51, v52, (uint64_t *)v63);
          v41 = v58;
          sub_22F98F208();
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_22F85B000, v48, v49, "SPRPINController: getPINBlock - SPR error: %s", v50, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2348A6838](v15, -1, -1);
          MEMORY[0x2348A6838](v50, -1, -1);

        }
        else
        {

        }
        (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v41, v14);
      }
      v53 = v40;
      v54 = sub_22F8E757C(v40);
      sub_22F8E7538();
      swift_allocError();
      *v55 = v54;
      swift_willThrow();

    }
  }
  else
  {
    sub_22F87BC08(v13, (uint64_t)v10);
    if (v16(v10, 1, v14) == 1)
    {
      sub_22F87BC50((uint64_t)v10);
    }
    else
    {
      v42 = sub_22F98DA8C();
      v43 = sub_22F98F0A0();
      if (os_log_type_enabled(v42, v43))
      {
        v44 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v44 = 0;
        _os_log_impl(&dword_22F85B000, v42, v43, "SPRPINController: getPINBlock - controller nil", v44, 2u);
        MEMORY[0x2348A6838](v44, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v59 + 8))(v10, v14);
    }
    sub_22F8E7538();
    swift_allocError();
    *v45 = 1;
    swift_willThrow();
  }
  return v15;
}

void sub_22F8E7178()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;

  v1 = v0;
  v2 = sub_22F98D5A0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB00 != -1)
    swift_once();
  v9 = __swift_project_value_buffer(v6, (uint64_t)qword_255E295B0);
  sub_22F87BC08(v9, (uint64_t)v8);
  v10 = sub_22F98DAA4();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) == 1)
  {
    sub_22F87BC50((uint64_t)v8);
  }
  else
  {
    sub_22F863858(v1, 0xD000000000000012, 0x800000022F9A08E0, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
  }
  v12 = sub_22F8E4A0C();
  if (v12)
  {
    v13 = v12;
    sub_22F98D528();
    sub_22F98D588();
    v14 = *(void (**)(char *, uint64_t))(v3 + 8);
    v14(v5, v2);
    objc_msgSend(v13, sel_cancelPINCapture);
    sub_22F98D528();
    sub_22F98D57C();
    v14(v5, v2);

  }
}

uint64_t sub_22F8E7330()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SPRPINController()
{
  return objc_opt_self();
}

BOOL sub_22F8E7374()
{
  void *v0;
  void *v1;

  v0 = sub_22F8E4A0C();
  v1 = v0;
  if (v0)

  return v1 != 0;
}

void sub_22F8E73A8(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  sub_22F8E5164(a1, a2, a3, a4);
}

void sub_22F8E73C8(int a1)
{
  sub_22F8E59B0(a1);
}

void sub_22F8E73E8()
{
  sub_22F8E5F38();
}

void sub_22F8E7408(uint64_t a1, void (*a2)(id))
{
  sub_22F8E64A4(a1, a2);
}

uint64_t sub_22F8E7428()
{
  return sub_22F8E6A4C();
}

void sub_22F8E7448()
{
  sub_22F8E7178();
}

uint64_t sub_22F8E7468(uint64_t a1, uint64_t a2, char a3, void *a4)
{
  void *v6;
  id v7;
  __int128 v9;
  _OWORD v10[2];

  v6 = (void *)sub_22F98ED94();
  v7 = objc_msgSend(a4, sel_objectForKey_, v6);

  if (v7)
  {
    sub_22F98F25C();
    swift_unknownObjectRelease();
    sub_22F8AD49C(&v9, v10);
  }
  else
  {
    memset(v10, 0, sizeof(v10));
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E22DD0);
  if (swift_dynamicCast() && v9 != 2)
    a3 = v9 & 1;
  return a3 & 1;
}

unint64_t sub_22F8E7538()
{
  unint64_t result;

  result = qword_255E23860;
  if (!qword_255E23860)
  {
    result = MEMORY[0x2348A6784](&unk_22F996918, &type metadata for PINError);
    atomic_store(result, (unint64_t *)&qword_255E23860);
  }
  return result;
}

BOOL sub_22F8E757C(void *a1)
{
  id v2;
  id v3;
  void *v5;

  v2 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E249C0);
  type metadata accessor for PINControllerError(0);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_22F862548(&qword_255E1E0B0, (uint64_t (*)(uint64_t))type metadata accessor for PINControllerError, (uint64_t)&unk_22F9917F8);
    v3 = v5;
    sub_22F98D288();

    return a1 != (void *)11013;
  }
  else
  {

    return 1;
  }
}

unint64_t sub_22F8E7664()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255E1EDD0;
  if (!qword_255E1EDD0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E1EDC8);
    result = MEMORY[0x2348A6784](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_255E1EDD0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PINError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22F8E76FC + 4 * byte_22F996855[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22F8E7730 + 4 * byte_22F996850[v4]))();
}

uint64_t sub_22F8E7730(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22F8E7738(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22F8E7740);
  return result;
}

uint64_t sub_22F8E774C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22F8E7754);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22F8E7758(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22F8E7760(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PINError()
{
  return &type metadata for PINError;
}

unint64_t sub_22F8E7780()
{
  unint64_t result;

  result = qword_255E23868;
  if (!qword_255E23868)
  {
    result = MEMORY[0x2348A6784](&unk_22F9968F0, &type metadata for PINError);
    atomic_store(result, (unint64_t *)&qword_255E23868);
  }
  return result;
}

uint64_t sub_22F8E77C4(uint64_t a1)
{
  return sub_22F8E79F4(a1, 0xD000000000000014, 0x800000022F9A0A10, &qword_255E29750);
}

uint64_t sub_22F8E77E8(uint64_t a1)
{
  return sub_22F8E79F4(a1, 0x6365735F74786574, 0xEE00797261646E6FLL, &qword_255E29758);
}

uint64_t sub_22F8E7814(uint64_t a1)
{
  return sub_22F8E79F4(a1, 0x72616D6B63656863, 0xEF6E656572675F6BLL, &qword_255E29760);
}

uint64_t sub_22F8E7840(uint64_t a1)
{
  return sub_22F8E79F4(a1, 0xD000000000000015, 0x800000022F9A09B0, &qword_255E29768);
}

uint64_t sub_22F8E7864(uint64_t a1)
{
  return sub_22F8E79F4(a1, 0xD000000000000016, 0x800000022F9A09D0, &qword_255E29770);
}

uint64_t sub_22F8E7888(uint64_t a1)
{
  return sub_22F8E79F4(a1, 0xD000000000000010, 0x800000022F9A0990, &qword_255E29778);
}

uint64_t sub_22F8E78AC(uint64_t a1)
{
  return sub_22F8E79F4(a1, 0xD000000000000010, 0x800000022F9A09F0, &qword_255E29780);
}

uint64_t sub_22F8E78D0(uint64_t a1)
{
  return sub_22F8E79F4(a1, 0xD000000000000012, 0x800000022F9A0A90, &qword_255E29788);
}

uint64_t sub_22F8E78F4(uint64_t a1)
{
  return sub_22F8E79F4(a1, 0x74736F685F676572, 0xEB0000000067625FLL, &qword_255E29790);
}

uint64_t sub_22F8E791C(uint64_t a1)
{
  return sub_22F8E79F4(a1, 0x79646F625F676572, 0xEB0000000067625FLL, &qword_255E29798);
}

uint64_t sub_22F8E7944(uint64_t a1)
{
  return sub_22F8E79F4(a1, 0x6F7272655F706174, 0xED00006465725F72, &qword_255E297A0);
}

uint64_t sub_22F8E7970(uint64_t a1)
{
  return sub_22F8E79F4(a1, 1802398060, 0xE400000000000000, &qword_255E297A8);
}

uint64_t sub_22F8E7988(uint64_t a1)
{
  return sub_22F8E79F4(a1, 0xD000000000000012, 0x800000022F9A0A50, &qword_255E297B0);
}

uint64_t sub_22F8E79AC(uint64_t a1)
{
  return sub_22F8E79F4(a1, 0xD000000000000014, 0x800000022F9A0A30, &qword_255E297B8);
}

uint64_t sub_22F8E79D0(uint64_t a1)
{
  return sub_22F8E79F4(a1, 0xD00000000000001ELL, 0x800000022F9A0A70, &qword_255E297C0);
}

uint64_t sub_22F8E79F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  id v5;
  uint64_t result;

  if (qword_255E1DC30 != -1)
    swift_once();
  v5 = (id)qword_255E29840;
  result = sub_22F98E854();
  *a4 = result;
  return result;
}

uint64_t storeEnumTagSinglePayload for CenterState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_22F8E7AB4 + 4 * byte_22F996965[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_22F8E7AE8 + 4 * byte_22F996960[v4]))();
}

uint64_t sub_22F8E7AE8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22F8E7AF0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22F8E7AF8);
  return result;
}

uint64_t sub_22F8E7B04(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22F8E7B0CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_22F8E7B10(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22F8E7B18(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CenterState()
{
  return &type metadata for CenterState;
}

unint64_t sub_22F8E7B38()
{
  unint64_t result;

  result = qword_255E23870;
  if (!qword_255E23870)
  {
    result = MEMORY[0x2348A6784](&unk_22F9969C0, &type metadata for CenterState);
    atomic_store(result, (unint64_t *)&qword_255E23870);
  }
  return result;
}

void *sub_22F8E7B7C@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  __int128 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  void *result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _BYTE v13[351];
  _BYTE __src[344];
  _BYTE v15[360];
  _OWORD v16[30];

  v2 = v1;
  v4 = sub_22F98E128();
  sub_22F8E7CCC(v2, (uint64_t)__src);
  v15[352] = 1;
  memcpy(&v15[7], __src, 0x158uLL);
  v10 = v4;
  v11 = 0;
  v12 = 1;
  memcpy(v13, v15, sizeof(v13));
  sub_22F98EA88();
  sub_22F8FAB78(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v16, 0.0, 1, 0.0, 1);
  sub_22F8E8838((uint64_t)__src);
  if (qword_255E1DC58 != -1)
    swift_once();
  v5 = qword_255E298E0;
  swift_retain();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23878);
  MEMORY[0x2348A5560](&v9, v6);
  v7 = v9;
  result = memcpy((void *)a1, v16, 0x1E0uLL);
  *(_QWORD *)(a1 + 480) = v5;
  *(_BYTE *)(a1 + 488) = v7;
  return result;
}

uint64_t sub_22F8E7CCC@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  __int128 v12;
  double v13;
  char v14;
  BOOL v15;
  char v16;
  uint64_t v17;
  char v18;
  char v19;
  double v20;
  double v21;
  __int128 v22;
  __int128 v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  _BYTE v62[32];
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  BOOL v74;
  char v75;
  __int128 v76;
  char v77;
  uint64_t v78;
  double v79;
  _BYTE v80[16];
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;

  v4 = a1[7];
  v92 = a1[6];
  v93 = v4;
  v5 = a1[9];
  v94 = a1[8];
  v95 = v5;
  v6 = a1[3];
  v88 = a1[2];
  v89 = v6;
  v7 = a1[5];
  v90 = a1[4];
  v91 = v7;
  v8 = a1[1];
  v86 = *a1;
  v87 = v8;
  v64 = *(__int128 *)((char *)a1 + 200);
  LOBYTE(v65) = *((_BYTE *)a1 + 216);
  sub_22F8E8958((uint64_t)&v86);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23878);
  MEMORY[0x2348A5560](&v52);
  v10 = (_BYTE)v52 == 0;
  v64 = a1[11];
  LOBYTE(v65) = *((_BYTE *)a1 + 192);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F098);
  MEMORY[0x2348A5560](&v52);
  v41 = v52;
  *(_QWORD *)&v52 = 0;
  sub_22F98E8F0();
  v12 = v64;
  LOBYTE(v52) = 0;
  sub_22F98E8F0();
  v40 = v64;
  v39 = *((_QWORD *)&v64 + 1);
  v13 = *(double *)&qword_255E270F0 * 72.0;
  v48 = v92;
  v49 = v93;
  v50 = v94;
  v51 = v95;
  v44 = v88;
  v45 = v89;
  v46 = v90;
  v47 = v91;
  v42 = v86;
  v43 = v87;
  v64 = *(__int128 *)((char *)a1 + 200);
  LOBYTE(v65) = *((_BYTE *)a1 + 216);
  MEMORY[0x2348A5560](&v52, v9);
  v14 = v52 == 1;
  v64 = a1[11];
  LOBYTE(v65) = *((_BYTE *)a1 + 192);
  MEMORY[0x2348A5560](&v52, v11);
  sub_22F94C250(v14, v52, (uint64_t)v80);
  v15 = sub_22F8E80EC();
  v64 = a1[11];
  LOBYTE(v65) = *((_BYTE *)a1 + 192);
  MEMORY[0x2348A5560](&v52, v11);
  v16 = v52;
  v17 = *((_QWORD *)a1 + 21);
  v38 = *((_QWORD *)a1 + 20);
  v64 = *(__int128 *)((char *)a1 + 200);
  LOBYTE(v65) = *((_BYTE *)a1 + 216);
  swift_bridgeObjectRetain();
  MEMORY[0x2348A5560](&v52, v9);
  if (v52 == 3)
    v18 = 3;
  else
    v18 = 4;
  if (v52 == 2)
    v19 = 2;
  else
    v19 = v18;
  v20 = *(double *)&qword_255E270F0 * 72.0 + -6.0;
  v21 = *(double *)&qword_255E270F0 * 32.0 + 3.0;
  *(_QWORD *)&v52 = 0x3FF0000000000000;
  sub_22F98E8F0();
  v22 = v64;
  *(_QWORD *)&v52 = 0;
  sub_22F98E8F0();
  v23 = v64;
  v24 = v80[8];
  v25 = v81;
  v26 = v82;
  v27 = v83;
  v28 = v84;
  v29 = v85;
  v58 = v48;
  v59 = v49;
  v60 = v50;
  v61 = v51;
  v54 = v44;
  v55 = v45;
  v56 = v46;
  v57 = v47;
  v52 = v42;
  v53 = v43;
  v62[0] = v10;
  v62[1] = v41;
  *(_OWORD *)&v62[8] = v12;
  v62[24] = v40;
  *(_QWORD *)&v63 = v39;
  *((double *)&v63 + 1) = v13;
  v30 = v80[0] & 1;
  v31 = v80[1] & 1;
  *(_OWORD *)(a2 + 96) = v48;
  *(_OWORD *)(a2 + 112) = v49;
  v32 = v61;
  *(_OWORD *)(a2 + 128) = v60;
  *(_OWORD *)(a2 + 144) = v32;
  v33 = v55;
  *(_OWORD *)(a2 + 32) = v54;
  *(_OWORD *)(a2 + 48) = v33;
  v34 = v57;
  *(_OWORD *)(a2 + 64) = v56;
  *(_OWORD *)(a2 + 80) = v34;
  v35 = v53;
  *(_OWORD *)a2 = v52;
  *(_OWORD *)(a2 + 16) = v35;
  v36 = *(_OWORD *)&v62[16];
  *(_OWORD *)(a2 + 160) = *(_OWORD *)v62;
  *(_OWORD *)(a2 + 176) = v36;
  *(_OWORD *)(a2 + 192) = v63;
  *(_BYTE *)(a2 + 208) = v30;
  *(_BYTE *)(a2 + 209) = v31;
  *(_BYTE *)(a2 + 216) = v24;
  *(_QWORD *)(a2 + 224) = v25;
  *(_QWORD *)(a2 + 232) = v26;
  *(_QWORD *)(a2 + 240) = v27;
  *(_QWORD *)(a2 + 248) = v28;
  *(_QWORD *)(a2 + 256) = v29;
  *(_BYTE *)(a2 + 264) = v15;
  *(_BYTE *)(a2 + 265) = v16;
  *(_QWORD *)(a2 + 272) = v38;
  *(_QWORD *)(a2 + 280) = v17;
  *(_BYTE *)(a2 + 288) = v19;
  *(double *)(a2 + 296) = v20;
  *(double *)(a2 + 304) = v21;
  *(_OWORD *)(a2 + 312) = v22;
  *(_OWORD *)(a2 + 328) = v23;
  sub_22F8E8A00((uint64_t)&v52);
  v70 = v48;
  v71 = v49;
  v72 = v50;
  v73 = v51;
  v66 = v44;
  v67 = v45;
  v68 = v46;
  v69 = v47;
  v64 = v42;
  v65 = v43;
  v74 = v10;
  v75 = v41;
  v76 = v12;
  v77 = v40;
  v78 = v39;
  v79 = v13;
  return sub_22F8E8AD0((uint64_t)&v64);
}

BOOL sub_22F8E80EC()
{
  uint64_t v0;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23878);
  MEMORY[0x2348A5560](&v2);
  if (v2 == 2)
    return 1;
  MEMORY[0x2348A5560](&v2, v0);
  return v2 == 3;
}

void *sub_22F8E8188@<X0>(uint64_t a1@<X8>)
{
  return sub_22F8E7B7C(a1);
}

uint64_t destroy for TapCenterView(uint64_t a1)
{

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for TapCenterView(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v15;
  uint64_t v16;
  uint64_t v17;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v7;
  v8 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v8;
  v9 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v9;
  v10 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v10;
  v15 = *(void **)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v15;
  v11 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v11;
  v16 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v16;
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  v17 = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v17;
  *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  v12 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = v15;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TapCenterView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  v6 = v4;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(void **)(a2 + 152);
  v8 = *(void **)(a1 + 152);
  *(_QWORD *)(a1 + 152) = v7;
  v9 = v7;

  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  return a1;
}

__n128 __swift_memcpy240_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __n128 result;
  __int128 v11;
  __int128 v12;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  v7 = a2[7];
  v8 = a2[8];
  v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  result = (__n128)a2[11];
  v11 = a2[12];
  v12 = a2[14];
  *(_OWORD *)(a1 + 208) = a2[13];
  *(_OWORD *)(a1 + 224) = v12;
  *(__n128 *)(a1 + 176) = result;
  *(_OWORD *)(a1 + 192) = v11;
  return result;
}

uint64_t assignWithTake for TapCenterView(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v10;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRelease();
  v11 = *(void **)(a1 + 152);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);

  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  swift_release();
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_release();
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  swift_release();
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  swift_release();
  *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  return a1;
}

uint64_t getEnumTagSinglePayload for TapCenterView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 240))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TapCenterView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 232) = 0;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 240) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 240) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TapCenterView()
{
  return &type metadata for TapCenterView;
}

uint64_t sub_22F8E8828()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22F8E8838(uint64_t a1)
{
  void *v2;
  void *v3;

  v2 = *(void **)(a1 + 8);
  v3 = *(void **)(a1 + 152);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_22F8E8958(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;

  v2 = *(void **)(a1 + 8);
  v3 = *(void **)(a1 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v4 = v3;
  v5 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_22F8E8A00(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  void *v6;

  v2 = *(void **)(a1 + 8);
  v6 = *(void **)(a1 + 152);
  swift_retain();
  v3 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v4 = v6;
  swift_retain();
  return a1;
}

uint64_t sub_22F8E8AD0(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 8);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return a1;
}

unint64_t sub_22F8E8BA4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E23880;
  if (!qword_255E23880)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E23888);
    v2[0] = sub_22F8E8C28();
    v2[1] = sub_22F87AA84(&qword_255E238C0, &qword_255E238C8, MEMORY[0x24BDEEC10]);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E23880);
  }
  return result;
}

unint64_t sub_22F8E8C28()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E23890;
  if (!qword_255E23890)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E23898);
    v2[0] = sub_22F8E8C94();
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E23890);
  }
  return result;
}

unint64_t sub_22F8E8C94()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E238A0;
  if (!qword_255E238A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E238A8);
    v2[0] = sub_22F87AA84(&qword_255E238B0, &qword_255E238B8, MEMORY[0x24BDF4700]);
    v2[1] = sub_22F8A0C0C();
    result = MEMORY[0x2348A6784](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E238A0);
  }
  return result;
}

uint64_t type metadata accessor for TransactionDetailsFactory()
{
  return objc_opt_self();
}

void destroy for TransactionDetails(uint64_t a1)
{

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

uint64_t initializeWithCopy for TransactionDetails(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v7;
  v8 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v8;
  v9 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v9;
  v10 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v10;
  v11 = *(void **)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v11;
  v12 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = v11;
  return a1;
}

uint64_t assignWithCopy for TransactionDetails(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  v6 = v4;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(void **)(a2 + 152);
  v8 = *(void **)(a1 + 152);
  *(_QWORD *)(a1 + 152) = v7;
  v9 = v7;

  return a1;
}

__n128 __swift_memcpy160_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;
  __int128 v8;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  result = *(__n128 *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(__n128 *)(a1 + 96) = result;
  *(_OWORD *)(a1 + 112) = v7;
  return result;
}

uint64_t assignWithTake for TransactionDetails(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v10;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRelease();
  v11 = *(void **)(a1 + 152);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);

  return a1;
}

uint64_t getEnumTagSinglePayload for TransactionDetails(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 160))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TransactionDetails(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 160) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 160) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TransactionDetails()
{
  return &type metadata for TransactionDetails;
}

uint64_t sub_22F8E91A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t result;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  void *v56;
  void *v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  void (*v71)(char *, _QWORD, uint64_t, uint64_t);
  void *v72;
  void *v73;
  id v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  void (*v80)(char *, _QWORD, uint64_t, uint64_t);
  void *v81;
  void *v82;
  id v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  void (*v93)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  __int128 v127;
  uint64_t v128;
  unint64_t v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  int v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  unint64_t v142;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E20810);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v121 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_22F98D684();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v121 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1 + *(int *)(type metadata accessor for TapContext(0) + 20);
  v139 = v8;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  sub_22F98D81C();
  v12 = sub_22F98D90C();
  v14 = v13;
  v15 = sub_22F98D90C();
  v140 = v7;
  if (v12 != v15 || v14 != v16)
  {
    v17 = sub_22F98F430();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v17 & 1) != 0)
      goto LABEL_5;
    sub_22F98D81C();
    v51 = sub_22F98D90C();
    v53 = v52;
    if (v51 == sub_22F98D90C() && v53 == v54)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v55 = sub_22F98F430();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v55 & 1) == 0)
        goto LABEL_18;
    }
    sub_22F8E9AA0();
    v56 = (void *)sub_22F98D810();
    v57 = (void *)sub_22F98F178();
    v58 = sub_22F98F19C();

    if ((v58 & 1) != 0)
    {
      v134 = sub_22F98D81C();
      v59 = sub_22F98D810();
      v60 = sub_22F98D7D4();
      v62 = v61;
      v63 = sub_22F98D7EC();
      sub_22F98D7F8();
      v137 = v60;
      v138 = v59;
      v135 = v63;
      v136 = v62;
      v108 = sub_22F932EEC(1);
      v130 = v109;
      v131 = v108;
      swift_bridgeObjectRelease();
      v110 = sub_22F98D66C();
      v132 = v111;
      v133 = v110;
      v112 = sub_22F98D66C();
      v128 = v113;
      v129 = v112;
      v114 = sub_22F98D648();
      v126 = v115;
      *(_QWORD *)&v127 = v114;
      v32 = sub_22F98D66C();
      v34 = v116;
      v117 = sub_22F98D654();
      v119 = v118;
      v120 = sub_22F98D678();
      v39 = sub_22F87C038(v117, v119, v120, 0);
      v40 = 0;
      v41 = 0;
      v42 = 0;
      v43 = 0xE000000000000000;
      goto LABEL_11;
    }
LABEL_18:
    sub_22F98D7EC();
    v64 = sub_22F98D894();
    v65 = sub_22F98D894();
    if (v64 == v65)
      v66 = 0x45525F4C4542414CLL;
    else
      v66 = 0x41505F4C4542414CLL;
    if (v64 == v65)
      v67 = 0xEC000000444E5546;
    else
      v67 = 0xE900000000000059;
    v141 = v66;
    v142 = v67;
    v129 = v67;
    swift_bridgeObjectRetain();
    sub_22F98EE9C();
    v130 = v141;
    v131 = v142;
    v68 = sub_22F98D7D4();
    v70 = v69;
    v71 = (void (*)(char *, _QWORD, uint64_t, uint64_t))sub_22F98D7C8();
    v72 = (void *)sub_22F8B8504(v68, v70, v71);
    swift_bridgeObjectRelease();
    v73 = (void *)sub_22F98D810();
    v74 = objc_msgSend(v72, sel_stringFromNumber_, v73);

    if (v74)
    {
      v125 = sub_22F98EDB8();
      v76 = v75;

    }
    else
    {
      v125 = 0;
      v76 = 0xE000000000000000;
    }
    v77 = sub_22F98D7D4();
    v124 = v76;
    if (v77 == 5390675 && v78 == 0xE300000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v79 = sub_22F98F430();
      swift_bridgeObjectRelease();
      if ((v79 & 1) == 0)
        goto LABEL_34;
    }
    if (sub_22F98D7C8() == 682)
    {
      v80 = (void (*)(char *, _QWORD, uint64_t, uint64_t))sub_22F98DA08();
      v81 = (void *)sub_22F8B8504(844251475, 0xE400000000000000, v80);
      v82 = (void *)sub_22F98D810();
      v83 = objc_msgSend(v81, sel_stringFromNumber_, v82);

      if (v83)
      {
        v123 = sub_22F98EDB8();
        v122 = v84;

      }
      else
      {
        v123 = 0;
        v122 = 0xE000000000000000;
      }
      goto LABEL_35;
    }
LABEL_34:
    v123 = 0;
    v122 = 0;
LABEL_35:
    v134 = sub_22F98D81C();
    v138 = sub_22F98D810();
    v85 = sub_22F98D7D4();
    v136 = v86;
    v137 = v85;
    v135 = sub_22F98D7EC();
    v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E249D0);
    v87 = swift_allocObject();
    v127 = xmmword_22F991B40;
    *(_OWORD *)(v87 + 16) = xmmword_22F991B40;
    v88 = sub_22F98D66C();
    v90 = v89;
    *(_QWORD *)(v87 + 56) = MEMORY[0x24BEE0D00];
    v91 = sub_22F87FD04();
    *(_QWORD *)(v87 + 64) = v91;
    *(_QWORD *)(v87 + 32) = v88;
    *(_QWORD *)(v87 + 40) = v90;
    sub_22F932EEC(1);
    sub_22F98D420();
    v92 = sub_22F98D4B0();
    v93 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 56);
    v93(v6, 0, 1, v92);
    swift_bridgeObjectRetain();
    v94 = sub_22F98EDD0();
    v132 = v95;
    v133 = v94;
    swift_bridgeObjectRelease();
    sub_22F8E9A60((uint64_t)v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v96 = swift_allocObject();
    *(_OWORD *)(v96 + 16) = v127;
    v97 = sub_22F98D66C();
    *(_QWORD *)(v96 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v96 + 64) = v91;
    *(_QWORD *)(v96 + 32) = v97;
    *(_QWORD *)(v96 + 40) = v98;
    sub_22F932EEC(1);
    sub_22F98D420();
    v93(v6, 0, 1, v92);
    swift_bridgeObjectRetain();
    v99 = sub_22F98EDD0();
    v128 = v100;
    v129 = v99;
    swift_bridgeObjectRelease();
    sub_22F8E9A60((uint64_t)v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v101 = sub_22F98D648();
    v126 = v102;
    *(_QWORD *)&v127 = v101;
    v32 = sub_22F98D66C();
    v34 = v103;
    v104 = sub_22F98D654();
    v106 = v105;
    v107 = sub_22F98D678();
    v39 = sub_22F87C038(v104, v106, v107, 0);
    v130 = 0xE000000000000000;
    v131 = 0;
    v43 = v124;
    v40 = v125;
    v41 = v123;
    v42 = v122;
    goto LABEL_11;
  }
  swift_bridgeObjectRelease_n();
LABEL_5:
  v18 = sub_22F98D7E0();
  v20 = v19;
  swift_bridgeObjectRelease();
  v21 = HIBYTE(v20) & 0xF;
  if ((v20 & 0x2000000000000000) == 0)
    v21 = v18 & 0xFFFFFFFFFFFFLL;
  if (v21)
    v22 = sub_22F98D7E0();
  else
    v22 = sub_22F932EEC(1);
  v130 = v23;
  v131 = v22;
  v138 = sub_22F98D810();
  v24 = sub_22F98D7D4();
  v136 = v25;
  v137 = v24;
  v135 = sub_22F98D7EC();
  v26 = sub_22F98D66C();
  v132 = v27;
  v133 = v26;
  v28 = sub_22F98D66C();
  v128 = v29;
  v129 = v28;
  v30 = sub_22F98D648();
  v126 = v31;
  *(_QWORD *)&v127 = v30;
  v32 = sub_22F98D66C();
  v34 = v33;
  v35 = sub_22F98D654();
  v37 = v36;
  v38 = sub_22F98D678();
  v39 = sub_22F87C038(v35, v37, v38, 0);
  v40 = 0;
  v41 = 0;
  v42 = 0;
  v43 = 0xE000000000000000;
  v134 = 2;
LABEL_11:
  swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(char *, uint64_t))(v139 + 8))(v10, v140);
  *(_BYTE *)a2 = v134;
  *(_DWORD *)(a2 + 1) = v141;
  *(_DWORD *)(a2 + 4) = *(_DWORD *)((char *)&v141 + 3);
  *(_QWORD *)(a2 + 8) = v138;
  *(_QWORD *)(a2 + 16) = v40;
  *(_QWORD *)(a2 + 24) = v43;
  *(_QWORD *)(a2 + 32) = v41;
  v45 = v137;
  *(_QWORD *)(a2 + 40) = v42;
  *(_QWORD *)(a2 + 48) = v45;
  v46 = v135;
  *(_QWORD *)(a2 + 56) = v136;
  *(_QWORD *)(a2 + 64) = v46;
  v47 = v130;
  *(_QWORD *)(a2 + 72) = v131;
  *(_QWORD *)(a2 + 80) = v47;
  v48 = v132;
  *(_QWORD *)(a2 + 88) = v133;
  *(_QWORD *)(a2 + 96) = v48;
  v49 = v128;
  *(_QWORD *)(a2 + 104) = v129;
  *(_QWORD *)(a2 + 112) = v49;
  v50 = v126;
  *(_QWORD *)(a2 + 120) = v127;
  *(_QWORD *)(a2 + 128) = v50;
  *(_QWORD *)(a2 + 136) = v32;
  *(_QWORD *)(a2 + 144) = v34;
  *(_QWORD *)(a2 + 152) = v39;
  return result;
}

uint64_t sub_22F8E9A60(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E20810);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_22F8E9AA0()
{
  unint64_t result;

  result = qword_255E23968;
  if (!qword_255E23968)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255E23968);
  }
  return result;
}

uint64_t sub_22F8E9ADC@<X0>(_BYTE *a1@<X8>)
{
  return sub_22F8F4638(a1);
}

uint64_t sub_22F8E9AF0()
{
  return sub_22F878814();
}

uint64_t sub_22F8E9B04()
{
  unsigned __int8 *v0;
  int v1;

  v1 = *v0;
  sub_22F98F4FC();
  if (v1 != 2)
    sub_22F98F508();
  sub_22F98F508();
  return sub_22F98F520();
}

uint64_t sub_22F8E9B64()
{
  _BYTE *v0;

  if (*v0 != 2)
    sub_22F98F508();
  return sub_22F98F508();
}

uint64_t sub_22F8E9BAC()
{
  unsigned __int8 *v0;
  int v1;

  v1 = *v0;
  sub_22F98F4FC();
  if (v1 != 2)
    sub_22F98F508();
  sub_22F98F508();
  return sub_22F98F520();
}

BOOL sub_22F8E9C0C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;
  _BOOL8 result;

  v2 = *a1;
  v3 = *a2;
  result = v3 == 2 && v2 == 2;
  if (v2 != 2 && v3 != 2)
    return ((v3 ^ v2) & 1) == 0;
  return result;
}

uint64_t sub_22F8E9C40()
{
  return sub_22F8E9CA4();
}

uint64_t sub_22F8E9C54()
{
  return sub_22F8E9CA4();
}

uint64_t sub_22F8E9C68()
{
  return sub_22F8E9CA4();
}

uint64_t sub_22F8E9C7C()
{
  return sub_22F8E9CA4();
}

uint64_t sub_22F8E9C90()
{
  return sub_22F8E9CA4();
}

uint64_t sub_22F8E9CA4()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_22F8E9D0C()
{
  return sub_22F8E9CA4();
}

double sub_22F8E9D20@<D0>(uint64_t a1@<X8>)
{
  double result;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  char v6;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 40) = v6;
  return result;
}

uint64_t sub_22F8E9DA8()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_22F8E9E18()
{
  return sub_22F8E9E40();
}

uint64_t sub_22F8E9E2C()
{
  return sub_22F8E9E40();
}

uint64_t sub_22F8E9E40()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  return swift_release();
}

uint64_t sub_22F8E9E9C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  return swift_release();
}

double sub_22F8E9F00@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  result = *(double *)&v3;
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  return result;
}

uint64_t sub_22F8E9F88()
{
  return sub_22F8E9CA4();
}

uint64_t sub_22F8E9F9C()
{
  return sub_22F8E9CA4();
}

double sub_22F8E9FB0()
{
  double v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_22F8EA020()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_22F8EA090()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t result;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int64_t v27;
  unint64_t v28;
  unint64_t v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  void *v35;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v34 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23AD0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_22F98D8B8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v34 - v11;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_22F87AC20((uint64_t)v5, &qword_255E23AD0);
LABEL_7:
    if (qword_255E1DB30 != -1)
      swift_once();
    v15 = __swift_project_value_buffer(v0, (uint64_t)qword_255E29640);
    sub_22F87ABDC(v15, (uint64_t)v2, (uint64_t *)&unk_255E206E0);
    v16 = sub_22F98DAA4();
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v2, 1, v16) == 1)
    {
      sub_22F87AC20((uint64_t)v2, (uint64_t *)&unk_255E206E0);
    }
    else
    {
      v18 = sub_22F98DA8C();
      v19 = sub_22F98F088();
      if (os_log_type_enabled(v18, v19))
      {
        v20 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v20 = 0;
        MEMORY[0x2348A6838](v20, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v17 + 8))(v2, v16);
    }
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v5, v6);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  v13 = v35;
  if (!v35)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
  v14 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v10, v6);
  if (v14 == *MEMORY[0x24BDE4998])
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);

    return 0;
  }
  if (v14 == *MEMORY[0x24BDE4990])
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);

    return 1;
  }
  if (v14 != *MEMORY[0x24BDE49A0])
  {
    v33 = *(void (**)(char *, uint64_t))(v7 + 8);
    v33(v12, v6);

    v33(v10, v6);
    return 0;
  }
  result = sub_22F98D7A4();
  v22 = 0;
  v23 = result + 64;
  v24 = 1 << *(_BYTE *)(result + 32);
  v25 = -1;
  if (v24 < 64)
    v25 = ~(-1 << v24);
  v26 = v25 & *(_QWORD *)(result + 64);
  v27 = (unint64_t)(v24 + 63) >> 6;
  while (v26)
  {
    v28 = __clz(__rbit64(v26));
    v26 &= v26 - 1;
    v29 = v28 | (v22 << 6);
LABEL_22:
    if ((*(_BYTE *)(*(_QWORD *)(result + 56) + v29) & 1) == 0)
    {

      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      return 3;
    }
  }
  v30 = v22 + 1;
  if (__OFADD__(v22, 1))
  {
    __break(1u);
    goto LABEL_46;
  }
  if (v30 >= v27)
    goto LABEL_44;
  v31 = *(_QWORD *)(v23 + 8 * v30);
  ++v22;
  if (v31)
    goto LABEL_41;
  v22 = v30 + 1;
  if (v30 + 1 >= v27)
    goto LABEL_44;
  v31 = *(_QWORD *)(v23 + 8 * v22);
  if (v31)
    goto LABEL_41;
  v22 = v30 + 2;
  if (v30 + 2 >= v27)
    goto LABEL_44;
  v31 = *(_QWORD *)(v23 + 8 * v22);
  if (v31)
    goto LABEL_41;
  v22 = v30 + 3;
  if (v30 + 3 >= v27)
    goto LABEL_44;
  v31 = *(_QWORD *)(v23 + 8 * v22);
  if (v31)
    goto LABEL_41;
  v22 = v30 + 4;
  if (v30 + 4 >= v27)
    goto LABEL_44;
  v31 = *(_QWORD *)(v23 + 8 * v22);
  if (v31)
  {
LABEL_41:
    v26 = (v31 - 1) & v31;
    v29 = __clz(__rbit64(v31)) + (v22 << 6);
    goto LABEL_22;
  }
  v32 = v30 + 5;
  if (v32 >= v27)
  {
LABEL_44:

    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    return 2;
  }
  v31 = *(_QWORD *)(v23 + 8 * v32);
  if (v31)
  {
    v22 = v32;
    goto LABEL_41;
  }
  while (1)
  {
    v22 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v22 >= v27)
      goto LABEL_44;
    v31 = *(_QWORD *)(v23 + 8 * v22);
    ++v32;
    if (v31)
      goto LABEL_41;
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_22F8EA5B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E21AB0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB30 != -1)
    swift_once();
  v8 = __swift_project_value_buffer(v5, (uint64_t)qword_255E29640);
  sub_22F87ABDC(v8, (uint64_t)v7, (uint64_t *)&unk_255E206E0);
  v9 = sub_22F98DAA4();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9) == 1)
  {
    sub_22F87AC20((uint64_t)v7, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858(v1, 0x74696E696564, 0xE600000000000000, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
  }
  v11 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_audioManager);
  if (v11)
  {
    *(_QWORD *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_audioManager) = 0;
    v12 = sub_22F98EFD4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v4, 1, 1, v12);
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = 0;
    v13[3] = 0;
    v13[4] = v11;
    swift_retain();
    sub_22F8847CC((uint64_t)v4, (uint64_t)&unk_255E1EE48, (uint64_t)v13);
    swift_release();
    sub_22F9773E0();
    swift_release();
  }
  swift_release();
  v14 = v1 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel__identityUIIsPresented;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22E10);
  v16 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8);
  v16(v14, v15);
  v16(v1 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel__dismissViewController, v15);
  v16(v1 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel__disableSleep, v15);
  v17 = v1 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel__screenState;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E24180);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = v1 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel__particlesState;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E24178);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = v1 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel__particlesPendingState;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E24170);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
  v23 = v1 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel__readerStateModel;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E24168);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
  v25 = v1 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel__identityInformation;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E24160);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
  v27 = v1 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel__merchantDetails;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E24158);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
  v29 = v1 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel__requestType;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E24150);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);
  v31 = v1 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel__requestValidationMode;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E24148);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v31, v32);
  v33 = v1 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel__bottomError;
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1ED98);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v33, v34);
  v16(v1 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel__scanQRCodeFlag, v15);
  v35 = v1 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel__qrCodeScanningState;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E24140);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v35, v36);
  v37 = v1 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel__platterSize;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E24138);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(v37, v38);
  v39 = v1 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel__requestedDocument;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E24130);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v39, v40);
  swift_unknownObjectRelease();
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();

  return v1;
}

uint64_t sub_22F8EAA74()
{
  sub_22F8EA5B0();
  return swift_deallocClassInstance();
}

uint64_t sub_22F8EAA98()
{
  return type metadata accessor for IdentityViewModel();
}

uint64_t type metadata accessor for IdentityViewModel()
{
  uint64_t result;

  result = qword_255E23A68;
  if (!qword_255E23A68)
    return swift_getSingletonMetadata();
  return result;
}

void sub_22F8EAADC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;

  sub_22F8687C4(319, (unint64_t *)&qword_255E1E428);
  if (v0 <= 0x3F)
  {
    sub_22F8687C4(319, &qword_255E23A78);
    if (v1 <= 0x3F)
    {
      sub_22F8687C4(319, &qword_255E23A80);
      if (v2 <= 0x3F)
      {
        sub_22F8F07AC(319, &qword_255E23A88, &qword_255E23A90);
        if (v3 <= 0x3F)
        {
          sub_22F8687C4(319, &qword_255E23A98);
          if (v4 <= 0x3F)
          {
            sub_22F8F07AC(319, &qword_255E23AA0, &qword_255E23AA8);
            if (v5 <= 0x3F)
            {
              sub_22F8F07AC(319, &qword_255E23AB0, &qword_255E1F730);
              if (v6 <= 0x3F)
              {
                sub_22F8F07AC(319, &qword_255E23AB8, &qword_255E23AC0);
                if (v7 <= 0x3F)
                {
                  sub_22F8F07AC(319, &qword_255E23AC8, &qword_255E23AD0);
                  if (v8 <= 0x3F)
                  {
                    sub_22F8F07AC(319, &qword_255E1E450, &qword_255E1E458);
                    if (v9 <= 0x3F)
                    {
                      sub_22F8687C4(319, &qword_255E23AD8);
                      if (v10 <= 0x3F)
                      {
                        sub_22F8F0758();
                        if (v11 <= 0x3F)
                        {
                          sub_22F8F07AC(319, qword_255E23AE8, &qword_255E21808);
                          if (v12 <= 0x3F)
                            swift_updateClassMetadata2();
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_22F8EADAC(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _OWORD v20[2];
  __int128 v21;
  _OWORD v22[3];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AudioFactory();
  sub_22F8D75F8(a1, 0, (uint64_t)v20);
  if (*((_QWORD *)&v21 + 1))
  {
    v22[0] = v20[0];
    v22[1] = v20[1];
    v22[2] = v21;
    v7 = OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_audioManager;
    if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_audioManager))
    {
      type metadata accessor for AudioManager();
      swift_allocObject();
      v12 = sub_22F976E4C();
      sub_22F9764B0(0);
      *(_QWORD *)(v2 + v7) = v12;
      swift_retain();
      swift_release();
    }
    sub_22F8F54D8((uint64_t)v22, (uint64_t)v20);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E1ED38);
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_22F991B40;
    sub_22F87ABDC((uint64_t)v20, v13 + 32, &qword_255E1ED48);
    swift_retain();
    sub_22F975EF4(v13, 2, 0, 0);
    swift_release();
    swift_bridgeObjectRelease();
    sub_22F87AC20((uint64_t)v20, &qword_255E1ED48);
    return sub_22F8F5514((uint64_t)v22);
  }
  else
  {
    sub_22F87AC20((uint64_t)v20, &qword_255E1ED48);
    if (qword_255E1DB30 != -1)
      swift_once();
    v8 = __swift_project_value_buffer(v4, (uint64_t)qword_255E29640);
    sub_22F87ABDC(v8, (uint64_t)v6, (uint64_t *)&unk_255E206E0);
    v9 = sub_22F98DAA4();
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9) == 1)
    {
      return sub_22F87AC20((uint64_t)v6, (uint64_t *)&unk_255E206E0);
    }
    else
    {
      v14 = sub_22F98DA8C();
      v15 = sub_22F98F088();
      if (os_log_type_enabled(v14, v15))
      {
        v16 = (uint8_t *)swift_slowAlloc();
        v17 = swift_slowAlloc();
        *(_QWORD *)&v22[0] = v17;
        *(_DWORD *)v16 = 136315138;
        LOBYTE(v20[0]) = a1;
        v18 = sub_22F98EE18();
        *(_QWORD *)&v20[0] = sub_22F878880(v18, v19, (uint64_t *)v22);
        sub_22F98F208();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_22F85B000, v14, v15, "Could not load identity sound [ %s ]", v16, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2348A6838](v17, -1, -1);
        MEMORY[0x2348A6838](v16, -1, -1);
      }

      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v6, v9);
    }
  }
}

uint64_t sub_22F8EB0FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD aBlock[6];

  v3 = v2;
  v26 = a1;
  v27 = a2;
  v4 = sub_22F98EB84();
  v30 = *(_QWORD *)(v4 - 8);
  v31 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_22F98EB9C();
  v28 = *(_QWORD *)(v7 - 8);
  v29 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_22F98D864();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v10);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB30 != -1)
    swift_once();
  v16 = __swift_project_value_buffer(v13, (uint64_t)qword_255E29640);
  sub_22F87ABDC(v16, (uint64_t)v15, (uint64_t *)&unk_255E206E0);
  v17 = sub_22F98DAA4();
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v15, 1, v17) == 1)
  {
    sub_22F87AC20((uint64_t)v15, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858(v3, 0xD000000000000027, 0x800000022F9A0EE0, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v15, v17);
  }
  sub_22F879058();
  v19 = (void *)sub_22F98F0F4();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v26, v10);
  v20 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = v3;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v21 + v20, (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  *(_QWORD *)(v21 + ((v12 + v20 + 7) & 0xFFFFFFFFFFFFFFF8)) = v27;
  aBlock[4] = sub_22F8F547C;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22F8644F0;
  aBlock[3] = &block_descriptor_297;
  v22 = _Block_copy(aBlock);
  swift_retain();
  sub_22F98EB90();
  v32 = MEMORY[0x24BEE4AF8];
  sub_22F862548((unint64_t *)&qword_255E22DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E22070);
  sub_22F87AA84((unint64_t *)&qword_255E22DB0, (uint64_t *)&unk_255E22070, MEMORY[0x24BEE12C8]);
  v23 = v31;
  sub_22F98F274();
  MEMORY[0x2348A5CD4](0, v9, v6, v22);
  _Block_release(v22);

  (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v23);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v29);
  swift_release();
  return sub_22F8F02BC();
}

uint64_t sub_22F8EB488(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v36 = a3;
  v4 = sub_22F98D8A0();
  v32 = *(_QWORD *)(v4 - 8);
  v33 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v35 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23AD0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v34 = (uint64_t)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v31 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23AC0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v31 - v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F730);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v31 - v21;
  sub_22F98D858();
  v23 = sub_22F98D888();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 0, 1, v23);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F87ABDC((uint64_t)v22, (uint64_t)v20, &qword_255E1F730);
  swift_retain();
  sub_22F98DBAC();
  sub_22F87AC20((uint64_t)v22, &qword_255E1F730);
  sub_22F98D840();
  v25 = v32;
  v24 = v33;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v16, 0, 1, v33);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F87ABDC((uint64_t)v16, (uint64_t)v14, &qword_255E23AC0);
  swift_retain();
  sub_22F98DBAC();
  sub_22F87AC20((uint64_t)v16, &qword_255E23AC0);
  sub_22F98D84C();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F87ABDC((uint64_t)v10, v34, &qword_255E23AD0);
  swift_retain();
  sub_22F98DBAC();
  sub_22F87AC20((uint64_t)v10, &qword_255E23AD0);
  v26 = (uint64_t)v35;
  *(_QWORD *)(a1 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_qrCodeScannerSleepTimeout) = v36;
  sub_22F98D840();
  v27 = sub_22F8F4E24(v26);
  v29 = v28;
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v26, v24);
  swift_getKeyPath();
  swift_getKeyPath();
  v37 = v27;
  v38 = v29;
  swift_retain();
  return sub_22F98DBAC();
}

void sub_22F8EB800(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  int v16;
  uint64_t v17;
  void *v18;
  _QWORD v19[2];
  _QWORD aBlock[6];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB30 != -1)
    swift_once();
  v7 = __swift_project_value_buffer(v4, (uint64_t)qword_255E29640);
  sub_22F87ABDC(v7, (uint64_t)v6, (uint64_t *)&unk_255E206E0);
  v8 = sub_22F98DAA4();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
  {
    sub_22F87AC20((uint64_t)v6, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858(v2, 0xD00000000000002CLL, 0x800000022F99F130, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1988]), sel_initWithListenerEndpoint_, a1);
  objc_msgSend(v10, sel_setExportedObject_, v2);
  v11 = (void *)objc_opt_self();
  v12 = objc_msgSend(v11, sel_interfaceWithProtocol_, &unk_255E493F8);
  objc_msgSend(v10, sel_setExportedInterface_, v12);

  v13 = objc_msgSend(v11, sel_interfaceWithProtocol_, &unk_255E4C0A0);
  objc_msgSend(v10, sel_setRemoteObjectInterface_, v13);

  aBlock[4] = sub_22F8EBAD8;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22F8736DC;
  aBlock[3] = &block_descriptor_291;
  v14 = _Block_copy(aBlock);
  v15 = objc_msgSend(v10, sel_remoteObjectProxyWithErrorHandler_, v14);
  _Block_release(v14);
  sub_22F98F25C();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E24220);
  v16 = swift_dynamicCast();
  v17 = v19[1];
  if (!v16)
    v17 = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_remoteProxy) = v17;
  swift_unknownObjectRelease();
  objc_msgSend(v10, sel_resume);
  v18 = *(void **)(v2 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_connection);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_connection) = v10;

}

uint64_t sub_22F8EBAD8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD v17[3];
  uint64_t v18;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB30 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_255E29640);
  sub_22F87ABDC(v5, (uint64_t)v4, (uint64_t *)&unk_255E206E0);
  v6 = sub_22F98DAA4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
    return sub_22F87AC20((uint64_t)v4, (uint64_t *)&unk_255E206E0);
  v9 = a1;
  v10 = a1;
  v11 = sub_22F98DA8C();
  v12 = sub_22F98F088();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v18 = v14;
    *(_DWORD *)v13 = 136315138;
    v17[1] = v13 + 4;
    swift_getErrorValue();
    v15 = sub_22F98F49C();
    v17[2] = sub_22F878880(v15, v16, &v18);
    sub_22F98F208();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_22F85B000, v11, v12, "IdentityUI connection invalidated with error: %s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348A6838](v14, -1, -1);
    MEMORY[0x2348A6838](v13, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v4, v6);
}

void sub_22F8EBD38(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  char v17;
  void *v18;
  uint64_t v19;
  char v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  unsigned __int8 v29;
  unsigned __int8 v30;
  unsigned __int8 v31;
  unsigned __int8 v32;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v28 - v8;
  if (qword_255E1DB30 != -1)
    swift_once();
  v10 = __swift_project_value_buffer(v4, (uint64_t)qword_255E29640);
  sub_22F87ABDC(v10, (uint64_t)v9, (uint64_t *)&unk_255E206E0);
  v11 = sub_22F98DAA4();
  v28 = *(_QWORD *)(v11 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
  if (v12(v9, 1, v11) == 1)
  {
    sub_22F87AC20((uint64_t)v9, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    v13 = sub_22F98DA8C();
    v14 = sub_22F98F0A0();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_22F85B000, v13, v14, "Cancel button was clicked, canceling current read", v15, 2u);
      MEMORY[0x2348A6838](v15, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v11);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  if (sub_22F936434(v32) == 0x676E696E6E616373 && v16 == 0xEE0065646F435251)
    goto LABEL_10;
  v17 = sub_22F98F430();
  swift_bridgeObjectRelease();
  if ((v17 & 1) != 0)
    goto LABEL_12;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  if (sub_22F936434(v31) == 0x796C6E4F7271 && v24 == 0xE600000000000000)
  {
LABEL_10:
    swift_bridgeObjectRelease();
LABEL_12:
    objc_msgSend(v2, sel_updateUIState_, 20);
    goto LABEL_13;
  }
  v25 = sub_22F98F430();
  swift_bridgeObjectRelease();
  if ((v25 & 1) != 0)
    goto LABEL_12;
LABEL_13:
  v18 = *(void **)&v2[OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_remoteProxy];
  if (v18)
    objc_msgSend(v18, sel_requestCancelReadWithIsEngagementTransition_, a1 & 1);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  if (sub_22F936434(v30) != 0xD000000000000010 || v19 != 0x800000022F99CC00)
  {
    v20 = sub_22F98F430();
    swift_bridgeObjectRelease();
    if ((v20 & 1) != 0)
      goto LABEL_19;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_22F98DBA0();
    swift_release();
    swift_release();
    if (sub_22F936434(v29) != 0x7261655463666ELL || v26 != 0xE700000000000000)
    {
      v27 = sub_22F98F430();
      swift_bridgeObjectRelease();
      if ((v27 & 1) == 0)
        return;
      goto LABEL_19;
    }
  }
  swift_bridgeObjectRelease();
LABEL_19:
  sub_22F87ABDC(v10, (uint64_t)v7, (uint64_t *)&unk_255E206E0);
  if (v12(v7, 1, v11) == 1)
  {
    sub_22F87AC20((uint64_t)v7, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    v21 = sub_22F98DA8C();
    v22 = sub_22F98F0A0();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v23 = 0;
      _os_log_impl(&dword_22F85B000, v21, v22, "Cancelling read restart and closing UI", v23, 2u);
      MEMORY[0x2348A6838](v23, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v11);
  }
  sub_22F8EEE04();
  sub_22F8EE0D0();
}

void sub_22F8EC2A4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  unsigned int v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint8_t *v36;
  uint64_t v37;
  _QWORD *v38;
  unint64_t v39;
  char v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  char v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unsigned int (*v63)(uint64_t, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  unsigned int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  uint8_t *v72;
  void *v73;
  void *v74;
  NSObject *v75;
  os_log_type_t v76;
  uint8_t *v77;
  uint8_t *v78;
  void *v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  unsigned int (*v93)(char *, uint64_t, uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;

  v3 = v2;
  v97 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E241F0);
  v91 = *(_QWORD *)(v5 - 8);
  v92 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v89 = (char *)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E241F8);
  MEMORY[0x24BDAC7A8](v7);
  v90 = (char *)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E24200);
  v95 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v87 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v86 = (uint64_t)&v81 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v88 = (uint64_t)&v81 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v81 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v81 - v22;
  if (qword_255E1DB30 != -1)
    swift_once();
  v24 = __swift_project_value_buffer(v11, (uint64_t)qword_255E29640);
  sub_22F87ABDC(v24, (uint64_t)v23, (uint64_t *)&unk_255E206E0);
  v25 = sub_22F98DAA4();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
  if (v27(v23, 1, v25) == 1)
  {
    sub_22F87AC20((uint64_t)v23, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858(v3, 0xD000000000000011, 0x800000022F9A0EC0, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v23, v25);
  }
  sub_22F87ABDC(v24, (uint64_t)v21, (uint64_t *)&unk_255E206E0);
  v28 = v27(v21, 1, v25);
  v96 = v24;
  if (v28 == 1)
  {
    sub_22F87AC20((uint64_t)v21, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    v94 = v9;
    swift_bridgeObjectRetain_n();
    v29 = sub_22F98DA8C();
    v30 = sub_22F98F0A0();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = swift_slowAlloc();
      v85 = v3;
      v32 = (uint8_t *)v31;
      v33 = swift_slowAlloc();
      v84 = v26;
      v34 = v33;
      v102 = v33;
      v93 = v27;
      *(_DWORD *)v32 = 136380675;
      swift_bridgeObjectRetain();
      v100 = sub_22F878880(v97, a2, &v102);
      v27 = v93;
      sub_22F98F208();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_22F85B000, v29, v30, "Scanned payload: [ %{private}s ]", v32, 0xCu);
      swift_arrayDestroy();
      v35 = v34;
      v26 = v84;
      MEMORY[0x2348A6838](v35, -1, -1);
      v36 = v32;
      v3 = v85;
      MEMORY[0x2348A6838](v36, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v26 + 8))(v21, v25);
    v9 = v94;
  }
  if (*(_BYTE *)(v3 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_processingQRRequest) == 1)
  {
    v37 = v88;
    sub_22F87ABDC(v96, v88, (uint64_t *)&unk_255E206E0);
    if (v27((char *)v37, 1, v25) == 1)
    {
      sub_22F87AC20(v37, (uint64_t *)&unk_255E206E0);
    }
    else
    {
      v41 = sub_22F98DA8C();
      v42 = sub_22F98F0A0();
      if (os_log_type_enabled(v41, v42))
      {
        v43 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v43 = 0;
        _os_log_impl(&dword_22F85B000, v41, v42, "Processing a previous payload, skipping...", v43, 2u);
        MEMORY[0x2348A6838](v43, -1, -1);
      }

      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v37, v25);
    }
    return;
  }
  v38 = (_QWORD *)(v3 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_lastScannedQRCode);
  v39 = *(_QWORD *)(v3 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_lastScannedQRCode + 8);
  v83 = v14;
  v93 = v27;
  v82 = OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_processingQRRequest;
  if (v39)
  {
    if (*v38 == v97 && v39 == a2)
    {
      v40 = 0;
      goto LABEL_25;
    }
    v40 = sub_22F98F430() ^ 1;
  }
  else
  {
    v40 = 1;
  }
  v39 = a2;
LABEL_25:
  v88 = OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_isDifferentQRCode;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_isDifferentQRCode) = v40 & 1;
  v44 = v97;
  *v38 = v97;
  v38[1] = v39;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_22F8ED66C();
  v102 = v44;
  v103 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E24208);
  v45 = v89;
  sub_22F98DA5C();
  sub_22F8F53A4();
  sub_22F87AA84(&qword_255E24218, &qword_255E241F0, MEMORY[0x24BEE7460]);
  v46 = v92;
  v47 = (uint64_t)v90;
  sub_22F98ED40();
  (*(void (**)(char *, uint64_t))(v91 + 8))(v45, v46);
  v48 = v95;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v95 + 48))(v47, 1, v9) == 1)
  {
    sub_22F87AC20(v47, &qword_255E241F8);
    goto LABEL_31;
  }
  v84 = v26;
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 32))(v87, v47, v9);
  swift_getKeyPath();
  v94 = v9;
  sub_22F98DA68();
  swift_release();
  v49 = MEMORY[0x2348A5A10](v102, v103, v104, v105);
  v51 = v50;
  swift_bridgeObjectRelease();
  v102 = v49;
  v103 = v51;
  v100 = 45;
  v101 = 0xE100000000000000;
  v98 = 43;
  v99 = 0xE100000000000000;
  sub_22F863BF8();
  v52 = sub_22F98F22C();
  v54 = v53;
  swift_bridgeObjectRelease();
  v102 = v52;
  v103 = v54;
  v100 = 95;
  v101 = 0xE100000000000000;
  v98 = 47;
  v99 = 0xE100000000000000;
  v55 = sub_22F98F22C();
  v57 = v56;
  swift_bridgeObjectRelease();
  v58 = sub_22F98EE78();
  v85 = v3;
  if ((v58 & 3) != 0)
  {
    do
    {
      v102 = 61;
      v103 = 0xE100000000000000;
      v100 = v55;
      v101 = v57;
      swift_bridgeObjectRetain();
      v100 = sub_22F98EF08();
      v101 = v59;
      sub_22F98EE90();
      swift_bridgeObjectRelease();
      v55 = v100;
      v57 = v101;
    }
    while ((sub_22F98EE78() & 3) != 0);
  }
  v60 = sub_22F98D330();
  v62 = v61;
  sub_22F8F53E8(v60, v61);
  swift_bridgeObjectRelease();
  if (v62 >> 60 == 15)
  {
    (*(void (**)(char *, uint64_t))(v95 + 8))(v87, v94);
    v3 = v85;
    v26 = v84;
LABEL_31:
    v63 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v93;
    if ((*(_BYTE *)(v3 + v88) & 1) != 0)
    {
      v64 = (uint64_t)v83;
      sub_22F87ABDC(v96, (uint64_t)v83, (uint64_t *)&unk_255E206E0);
      if (v63(v64, 1, v25) == 1)
      {
        sub_22F87AC20(v64, (uint64_t *)&unk_255E206E0);
      }
      else
      {
        v70 = sub_22F98DA8C();
        v71 = sub_22F98F0A0();
        if (os_log_type_enabled(v70, v71))
        {
          v72 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v72 = 0;
          _os_log_impl(&dword_22F85B000, v70, v71, "Invalid format payload", v72, 2u);
          MEMORY[0x2348A6838](v72, -1, -1);
        }

        (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v64, v25);
      }
      swift_getKeyPath();
      swift_getKeyPath();
      LOBYTE(v102) = 0;
      swift_retain();
      sub_22F98DBAC();
      sub_22F8EADAC(8);
      v73 = *(void **)(v3 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_remoteProxy);
      if (v73)
      {
        swift_unknownObjectRetain();
        sub_22F98D9C0();
        v74 = (void *)sub_22F98ED94();
        swift_bridgeObjectRelease();
        objc_msgSend(v73, sel_qrCodeScanErrorWithError_, v74);
        swift_unknownObjectRelease();

      }
    }
    return;
  }
  sub_22F87A9E0(v60, v62);
  v65 = v86;
  sub_22F87ABDC(v96, v86, (uint64_t *)&unk_255E206E0);
  v66 = v93((char *)v65, 1, v25);
  v67 = v85;
  v68 = v84;
  v69 = v94;
  if (v66 == 1)
  {
    sub_22F87AC20(v65, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    v75 = sub_22F98DA8C();
    v76 = sub_22F98F0A0();
    if (os_log_type_enabled(v75, v76))
    {
      v77 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v77 = 0;
      _os_log_impl(&dword_22F85B000, v75, v76, "QR Code is mDL", v77, 2u);
      v78 = v77;
      v69 = v94;
      MEMORY[0x2348A6838](v78, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v86, v25);
  }
  *(_BYTE *)(v67 + v82) = 1;
  v79 = *(void **)(v67 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_remoteProxy);
  if (v79)
  {
    swift_unknownObjectRetain();
    v80 = (void *)sub_22F98D360();
    objc_msgSend(v79, sel_readDocumentFromScannedQRCodeWithPayload_, v80);
    sub_22F87A9E0(v60, v62);

    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v95 + 8))(v87, v69);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v95 + 8))(v87, v69);
    sub_22F87A9E0(v60, v62);
  }
}

id sub_22F8ECE24()
{
  void *v0;
  uint64_t v1;
  char v3;
  uint64_t v4;
  id result;
  char v6;
  unsigned __int8 v7;
  unsigned __int8 v8;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  if (sub_22F936434(v8) == 0x676E696E6E616373 && v1 == 0xEE0065646F435251)
  {
    swift_bridgeObjectRelease();
    return objc_msgSend(v0, sel_updateUIState_, 19);
  }
  v3 = sub_22F98F430();
  swift_bridgeObjectRelease();
  if ((v3 & 1) != 0)
    return objc_msgSend(v0, sel_updateUIState_, 19);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  if (sub_22F936434(v7) == 0xD000000000000011 && v4 == 0x800000022F99CBA0)
    return (id)swift_bridgeObjectRelease();
  v6 = sub_22F98F430();
  result = (id)swift_bridgeObjectRelease();
  if ((v6 & 1) == 0)
    return objc_msgSend(v0, sel_updateUIState_, 18);
  return result;
}

void sub_22F8ECFF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  double v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB30 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_255E29640);
  sub_22F87ABDC(v5, (uint64_t)v4, (uint64_t *)&unk_255E206E0);
  v6 = sub_22F98DAA4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_22F87AC20((uint64_t)v4, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    swift_retain();
    v8 = sub_22F98DA8C();
    v9 = sub_22F98F0A0();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v10 = 134217984;
      aBlock[0] = *(_QWORD *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_qrCodeScannerSleepTimeout);
      sub_22F98F208();
      swift_release();
      _os_log_impl(&dword_22F85B000, v8, v9, "Start QR code scanner timer [ %lds ]", v10, 0xCu);
      MEMORY[0x2348A6838](v10, -1, -1);
    }
    else
    {
      swift_release();
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  v11 = (double)*(uint64_t *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_qrCodeScannerSleepTimeout);
  v12 = (void *)objc_opt_self();
  v13 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_22F8F5328;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22F8736DC;
  aBlock[3] = &block_descriptor_282;
  v14 = _Block_copy(aBlock);
  swift_release();
  v15 = objc_msgSend(v12, sel_scheduledTimerWithTimeInterval_repeats_block_, 0, v14, v11);
  _Block_release(v14);
  v16 = *(void **)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_qrCodeScannerSleepTimer);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_qrCodeScannerSleepTimer) = v15;

}

uint64_t sub_22F8ED2A0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E21AB0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v4 = result;
    v5 = sub_22F98EFD4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v2, 1, 1, v5);
    sub_22F98EFBC();
    swift_retain();
    v6 = sub_22F98EFB0();
    v7 = (_QWORD *)swift_allocObject();
    v8 = MEMORY[0x24BEE6930];
    v7[2] = v6;
    v7[3] = v8;
    v7[4] = v4;
    sub_22F884920((uint64_t)v2, (uint64_t)&unk_255E241E8, (uint64_t)v7);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_22F8ED3B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  sub_22F98EFBC();
  *(_QWORD *)(v4 + 24) = sub_22F98EFB0();
  sub_22F98EF8C();
  return swift_task_switch();
}

uint64_t sub_22F8ED424()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release();
  v2 = *(void **)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_qrCodeScannerSleepTimer);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_qrCodeScannerSleepTimer) = 0;

  swift_getKeyPath();
  swift_getKeyPath();
  *(_BYTE *)(v0 + 32) = 0;
  swift_retain();
  sub_22F98DBAC();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_22F8ED4B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  void *v15;
  uint64_t v16;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_qrCodeScannerSleepTimer;
  v6 = *(void **)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_qrCodeScannerSleepTimer);
  if (v6)
  {
    v7 = qword_255E1DB30;
    v8 = v6;
    if (v7 != -1)
      swift_once();
    v9 = __swift_project_value_buffer(v2, (uint64_t)qword_255E29640);
    sub_22F87ABDC(v9, (uint64_t)v4, (uint64_t *)&unk_255E206E0);
    v10 = sub_22F98DAA4();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v4, 1, v10) == 1)
    {
      sub_22F87AC20((uint64_t)v4, (uint64_t *)&unk_255E206E0);
    }
    else
    {
      v12 = sub_22F98DA8C();
      v13 = sub_22F98F0A0();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v14 = 0;
        _os_log_impl(&dword_22F85B000, v12, v13, "Stop QR code scanner timer", v14, 2u);
        MEMORY[0x2348A6838](v14, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v11 + 8))(v4, v10);
    }
    v15 = *(void **)(v1 + v5);
    *(_QWORD *)(v1 + v5) = 0;

    objc_msgSend(v8, sel_invalidate);
  }
}

void sub_22F8ED66C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB30 != -1)
    swift_once();
  v3 = __swift_project_value_buffer(v0, (uint64_t)qword_255E29640);
  sub_22F87ABDC(v3, (uint64_t)v2, (uint64_t *)&unk_255E206E0);
  v4 = sub_22F98DAA4();
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v4) == 1)
  {
    sub_22F87AC20((uint64_t)v2, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    v6 = sub_22F98DA8C();
    v7 = sub_22F98F0A0();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_22F85B000, v6, v7, "Restart QR code scanner timer", v8, 2u);
      MEMORY[0x2348A6838](v8, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v2, v4);
  }
  sub_22F8ED4B4();
  sub_22F8ECFF4();
}

uint64_t sub_22F8ED7F0(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v2;
  int v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t result;
  double v9;
  uint64_t v10;
  uint64_t v11;
  double *v12;
  uint64_t v13;
  _BYTE v14[14];
  char v15;
  unsigned __int8 v16;

  v2 = v1;
  v4 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E21AB0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (v4 == 4)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    v14[12] = 5;
    swift_retain();
    sub_22F98DBAC();
    swift_getKeyPath();
    swift_getKeyPath();
    v14[11] = 4;
    swift_retain();
    result = sub_22F98DBAC();
    *(_BYTE *)(v2 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_delayParticlesSet) = 0;
    return result;
  }
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_delayParticlesSet) == 1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    v14[13] = a1;
    swift_retain();
    return sub_22F98DBAC();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  v16 = a1;
  swift_retain();
  sub_22F98DBAC();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  result = swift_release();
  if (v15 == 2)
  {
    v9 = 1.0;
  }
  else
  {
    if (v15 != 3)
      return result;
    v9 = 3.0;
  }
  v10 = sub_22F98EFD4();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
  sub_22F98EFBC();
  swift_retain();
  v11 = sub_22F98EFB0();
  v12 = (double *)swift_allocObject();
  v13 = MEMORY[0x24BEE6930];
  *((_QWORD *)v12 + 2) = v11;
  *((_QWORD *)v12 + 3) = v13;
  *((_QWORD *)v12 + 4) = v2;
  v12[5] = v9;
  sub_22F884920((uint64_t)v7, (uint64_t)&unk_255E241D8, (uint64_t)v12);
  return swift_release();
}

uint64_t sub_22F8EDA90(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(double *)(v5 + 24) = a1;
  *(_QWORD *)(v5 + 16) = a5;
  v6 = sub_22F98F364();
  *(_QWORD *)(v5 + 32) = v6;
  *(_QWORD *)(v5 + 40) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 48) = swift_task_alloc();
  sub_22F98EFBC();
  *(_QWORD *)(v5 + 56) = sub_22F98EFB0();
  *(_QWORD *)(v5 + 64) = sub_22F98EF8C();
  *(_QWORD *)(v5 + 72) = v7;
  return swift_task_switch();
}

uint64_t sub_22F8EDB28()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  v1 = v0[2];
  v2 = OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_delayParticlesSet;
  v0[10] = OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_delayParticlesSet;
  *(_BYTE *)(v1 + v2) = 1;
  v3 = sub_22F98F52C();
  v5 = v4;
  sub_22F98F358();
  v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_255E28318 + dword_255E28318);
  v6 = (_QWORD *)swift_task_alloc();
  v0[11] = v6;
  *v6 = v0;
  v6[1] = sub_22F8EDBD4;
  return v8(v3, v5, 0, 0, 1);
}

uint64_t sub_22F8EDBD4()
{
  void *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (_QWORD *)*v1;
  swift_task_dealloc();
  v4 = v2[5];
  v3 = v2[6];
  v5 = v2[4];
  if (v0)
  {

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v4 + 8))(v2[6], v2[4]);
  }
  return swift_task_switch();
}

uint64_t sub_22F8EDC74()
{
  uint64_t v0;
  int v1;

  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  v1 = *(unsigned __int8 *)(v0 + 96);
  if (v1 != 5)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    *(_BYTE *)(v0 + 97) = v1;
    swift_retain();
    sub_22F98DBAC();
  }
  *(_BYTE *)(*(_QWORD *)(v0 + 16) + *(_QWORD *)(v0 + 80)) = 0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22F8EDD68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint8_t *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[6];

  v23 = a1;
  v1 = sub_22F98EB84();
  v25 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_22F98EB9C();
  v4 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB30 != -1)
    swift_once();
  v10 = __swift_project_value_buffer(v7, (uint64_t)qword_255E29640);
  sub_22F87ABDC(v10, (uint64_t)v9, (uint64_t *)&unk_255E206E0);
  v11 = sub_22F98DAA4();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11) == 1)
  {
    sub_22F87AC20((uint64_t)v9, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    v13 = sub_22F98DA8C();
    v14 = sub_22F98F0A0();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v22 = v4;
      v16 = v15;
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_22F85B000, v13, v14, "close ui after delay", v15, 2u);
      v4 = v22;
      MEMORY[0x2348A6838](v16, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
  }
  sub_22F879058();
  v17 = (void *)sub_22F98F0F4();
  v18 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_22F8F50A8;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22F8644F0;
  aBlock[3] = &block_descriptor_267;
  v19 = _Block_copy(aBlock);
  swift_retain();
  sub_22F98EB90();
  v26 = MEMORY[0x24BEE4AF8];
  sub_22F862548((unint64_t *)&qword_255E22DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E22070);
  sub_22F87AA84((unint64_t *)&qword_255E22DB0, (uint64_t *)&unk_255E22070, MEMORY[0x24BEE12C8]);
  sub_22F98F274();
  MEMORY[0x2348A5CA4](v23, v6, v3, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v25 + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v24);
  swift_release();
  return swift_release();
}

void sub_22F8EE0D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  char *v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  unsigned __int8 v32;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = (char *)&v25 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v25 - v9;
  if (qword_255E1DB30 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v2, (uint64_t)qword_255E29640);
  sub_22F87ABDC(v11, (uint64_t)v10, (uint64_t *)&unk_255E206E0);
  v12 = sub_22F98DAA4();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v25 = v5;
  if (v15 == 1)
  {
    sub_22F87AC20((uint64_t)v10, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858(v1, 0x28495565736F6C63, 0xE900000000000029, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  if (sub_22F936434(v32) == 0x676E696E6E616373 && v16 == 0xEE0065646F435251)
  {
    swift_bridgeObjectRelease();
LABEL_10:
    swift_getKeyPath();
    swift_getKeyPath();
    sub_22F98DBA0();
    swift_release();
    swift_release();
    if (v27 == 1)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      v26 = 0;
      swift_retain();
      sub_22F98DBAC();
      sub_22F8ED4B4();
    }
    sub_22F8EBD38(0);
    goto LABEL_27;
  }
  v17 = sub_22F98F430();
  swift_bridgeObjectRelease();
  if ((v17 & 1) != 0)
    goto LABEL_10;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  if (v31 == 1)
  {
    sub_22F87ABDC(v11, (uint64_t)v8, (uint64_t *)&unk_255E206E0);
    if (v14(v8, 1, v12) == 1)
    {
      sub_22F87AC20((uint64_t)v8, (uint64_t *)&unk_255E206E0);
    }
    else
    {
      v19 = sub_22F98DA8C();
      v20 = sub_22F98F0A0();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v21 = 0;
        _os_log_impl(&dword_22F85B000, v19, v20, "Closing Identity UI", v21, 2u);
        MEMORY[0x2348A6838](v21, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v12);
    }
    swift_getKeyPath();
    swift_getKeyPath();
    v28 = 0;
    swift_retain();
  }
  else
  {
    v18 = (uint64_t)v25;
    sub_22F87ABDC(v11, (uint64_t)v25, (uint64_t *)&unk_255E206E0);
    if (v14((char *)v18, 1, v12) == 1)
    {
      sub_22F87AC20(v18, (uint64_t *)&unk_255E206E0);
    }
    else
    {
      v22 = sub_22F98DA8C();
      v23 = sub_22F98F0A0();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v24 = 0;
        _os_log_impl(&dword_22F85B000, v22, v23, "Received closeUI before UI finished presenting - forcing close.", v24, 2u);
        MEMORY[0x2348A6838](v24, -1, -1);
      }

      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v18, v12);
    }
    swift_getKeyPath();
    swift_getKeyPath();
    v30 = 1;
    swift_retain();
  }
  sub_22F98DBAC();
LABEL_27:
  swift_getKeyPath();
  swift_getKeyPath();
  v29 = 0;
  swift_retain();
  sub_22F98DBAC();
  sub_22F8EEE04();
  if (qword_255E1DB78 != -1)
    swift_once();
  BrightnessManager.resetBrightnessToSystemDefault()();
}

uint64_t sub_22F8EE688()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _BYTE v9[16];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v9[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_255E1DB30 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_255E29640);
  sub_22F87ABDC(v5, (uint64_t)v4, (uint64_t *)&unk_255E206E0);
  v6 = sub_22F98DAA4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_22F87AC20((uint64_t)v4, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858(v1, 0x6465736F6C436975, 0xEA00000000002928, 0, 0xE000000000000000);
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v4, v6);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  result = swift_release();
  if ((v9[15] & 1) == 0)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    v9[14] = 1;
    swift_retain();
    return sub_22F98DBAC();
  }
  return result;
}

void sub_22F8EE840(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  void *v33;
  _QWORD v34[2];
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD aBlock[6];

  v36 = a2;
  v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v4 = MEMORY[0x24BDAC7A8](v37);
  v6 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v35 = (uint64_t)v34 - v7;
  v8 = sub_22F98EB84();
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_22F98EBC0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22F8EEE04();
  v13 = v2;
  v14 = *(void **)(v2 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_remoteProxy);
  if (v14)
  {
    swift_unknownObjectRetain();
    sub_22F98EBB4();
    v15 = sub_22F98EBA8();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    if ((v15 & 1) != 0)
    {
      objc_msgSend(v14, sel_requestRestartReadWithTriggeredByMultipleCheck_, v36 & 1);
      swift_unknownObjectRelease();
    }
    else
    {
      v34[1] = a1;
      v19 = swift_allocObject();
      v20 = v13;
      swift_weakInit();
      v21 = swift_allocObject();
      *(_QWORD *)(v21 + 16) = v19;
      *(_QWORD *)(v21 + 24) = v14;
      *(_BYTE *)(v21 + 32) = v36 & 1;
      aBlock[4] = sub_22F8F5200;
      aBlock[5] = v21;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_22F8644F0;
      aBlock[3] = &block_descriptor_251;
      _Block_copy(aBlock);
      v38 = MEMORY[0x24BEE4AF8];
      sub_22F862548((unint64_t *)&qword_255E22DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      swift_unknownObjectRetain();
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E22070);
      sub_22F87AA84((unint64_t *)&qword_255E22DB0, (uint64_t *)&unk_255E22070, MEMORY[0x24BEE12C8]);
      sub_22F98F274();
      sub_22F98EBE4();
      swift_allocObject();
      v22 = sub_22F98EBCC();
      swift_release();
      swift_release();
      if (qword_255E1DB30 != -1)
        swift_once();
      v23 = __swift_project_value_buffer(v37, (uint64_t)qword_255E29640);
      v24 = v35;
      sub_22F87ABDC(v23, v35, (uint64_t *)&unk_255E206E0);
      v25 = sub_22F98DAA4();
      v26 = *(_QWORD *)(v25 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25) == 1)
      {
        sub_22F87AC20(v24, (uint64_t *)&unk_255E206E0);
      }
      else
      {
        v30 = sub_22F98DA8C();
        v31 = sub_22F98F0A0();
        if (os_log_type_enabled(v30, v31))
        {
          v32 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v32 = 0;
          _os_log_impl(&dword_22F85B000, v30, v31, "Scheduling identity read restart", v32, 2u);
          MEMORY[0x2348A6838](v32, -1, -1);
        }

        (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
      }
      sub_22F879058();
      v33 = (void *)sub_22F98F0F4();
      sub_22F98F0DC();
      swift_unknownObjectRelease();

      *(_QWORD *)(v20 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_requestRestartOperation) = v22;
      swift_release();
    }
  }
  else
  {
    if (qword_255E1DB30 != -1)
      swift_once();
    v16 = __swift_project_value_buffer(v37, (uint64_t)qword_255E29640);
    sub_22F87ABDC(v16, (uint64_t)v6, (uint64_t *)&unk_255E206E0);
    v17 = sub_22F98DAA4();
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v6, 1, v17) == 1)
    {
      sub_22F87AC20((uint64_t)v6, (uint64_t *)&unk_255E206E0);
    }
    else
    {
      v27 = sub_22F98DA8C();
      v28 = sub_22F98F088();
      if (os_log_type_enabled(v27, v28))
      {
        v29 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v29 = 0;
        _os_log_impl(&dword_22F85B000, v27, v28, "Unable to retrieve remote proxy and restart reader, closing", v29, 2u);
        MEMORY[0x2348A6838](v29, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v17);
    }
    sub_22F8EE0D0();
  }
}

id sub_22F8EED80(uint64_t a1, void *a2, char a3)
{
  uint64_t Strong;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    *(_QWORD *)(Strong + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_requestRestartOperation) = 0;
    swift_release();
    swift_release();
  }
  return objc_msgSend(a2, sel_requestRestartReadWithTriggeredByMultipleCheck_, a3 & 1);
}

uint64_t sub_22F8EEE04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  result = MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_requestRestartOperation))
  {
    *(_QWORD *)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_requestRestartOperation) = 0;
    if (qword_255E1DB30 != -1)
      swift_once();
    v5 = __swift_project_value_buffer(v1, (uint64_t)qword_255E29640);
    sub_22F87ABDC(v5, (uint64_t)v4, (uint64_t *)&unk_255E206E0);
    v6 = sub_22F98DAA4();
    v7 = *(_QWORD *)(v6 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
    {
      sub_22F87AC20((uint64_t)v4, (uint64_t *)&unk_255E206E0);
    }
    else
    {
      v8 = sub_22F98DA8C();
      v9 = sub_22F98F0A0();
      if (os_log_type_enabled(v8, v9))
      {
        v10 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v10 = 0;
        _os_log_impl(&dword_22F85B000, v8, v9, "Cancelling restart read operation", v10, 2u);
        MEMORY[0x2348A6838](v10, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
    }
    sub_22F98EBD8();
    return swift_release();
  }
  return result;
}

uint64_t sub_22F8EEFA0()
{
  sub_22F98EAF4();
  sub_22F98DE10();
  return swift_release();
}

uint64_t sub_22F8EF000()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_22F98DBAC();
}

uint64_t sub_22F8EF078(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  unint64_t v8;
  uint64_t (*v9)();
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint8_t *v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[5];
  char v26;
  _QWORD v27[12];
  char v28[40];
  uint64_t v29;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v7 = result;
    v8 = 8 * a2;
    v9 = off_24FD23B68[v8 / 8];
    v10 = asc_22F9971FA[a2];
    v24 = *(_QWORD *)&aStatusWstatusW[v8];
    v11 = *(_QWORD *)&aStatusWstatusW_0[v8 + 32];
    v12 = swift_allocObject();
    swift_weakInit();
    v13 = swift_allocObject();
    *(_QWORD *)(v13 + 16) = v9;
    *(_QWORD *)(v13 + 24) = v12;
    swift_retain();
    sub_22F917018(a2);
    sub_22F8F4FA8((uint64_t)v27, (uint64_t)v28);
    if (v29)
    {
      sub_22F98DA50();
      v14 = swift_allocObject();
      *(_QWORD *)(v14 + 16) = v7;
      *(_BYTE *)(v14 + 24) = v10;
      swift_retain();
      sub_22F98DA38();
      swift_release();
      swift_getKeyPath();
      swift_getKeyPath();
      sub_22F8F4FA8((uint64_t)v27, (uint64_t)v25);
      swift_retain();
      sub_22F8F5054(v27, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22F87A440);
      sub_22F98DBAC();
      sub_22F8EADAC(8);
      sub_22F8ED7F0(0);
      swift_getKeyPath();
      swift_getKeyPath();
      v25[0] = v24;
      v25[1] = v11;
      memset(&v25[2], 0, 24);
      v26 = 2;
      swift_bridgeObjectRetain();
      swift_retain();
      sub_22F98DBAC();
      swift_getKeyPath();
      swift_getKeyPath();
      LOBYTE(v25[0]) = 0;
      swift_retain();
      sub_22F98DBAC();
      swift_release();
      swift_bridgeObjectRelease();
      sub_22F8F5054(v27, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22F87A26C);
      swift_release();
      return swift_release();
    }
    else
    {
      if (qword_255E1DB30 != -1)
        swift_once();
      v15 = __swift_project_value_buffer(v3, (uint64_t)qword_255E29640);
      sub_22F87ABDC(v15, (uint64_t)v5, (uint64_t *)&unk_255E206E0);
      v16 = sub_22F98DAA4();
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v5, 1, v16) == 1)
      {
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        return sub_22F87AC20((uint64_t)v5, (uint64_t *)&unk_255E206E0);
      }
      else
      {
        v18 = sub_22F98DA8C();
        v19 = sub_22F98F088();
        if (os_log_type_enabled(v18, v19))
        {
          v20 = (uint8_t *)swift_slowAlloc();
          v24 = v17;
          v21 = v20;
          *(_WORD *)v20 = 0;
          _os_log_impl(&dword_22F85B000, v18, v19, "Unexpected identity bottom error event", v20, 2u);
          v22 = v21;
          v17 = v24;
          MEMORY[0x2348A6838](v22, -1, -1);
        }
        swift_release();

        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v5, v16);
      }
    }
  }
  return result;
}

uint64_t sub_22F8EF4AC(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  unint64_t v8;
  uint64_t (*v9)();
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint8_t *v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[5];
  char v26;
  _QWORD v27[12];
  char v28[40];
  uint64_t v29;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v7 = result;
    v8 = 8 * a2;
    v9 = off_24FD23BB0[v8 / 8];
    v10 = asc_22F9971FA[a2];
    v24 = *(_QWORD *)&aStatusWstatusW[v8];
    v11 = *(_QWORD *)&aStatusWstatusW_0[v8 + 32];
    v12 = swift_allocObject();
    swift_weakInit();
    v13 = swift_allocObject();
    *(_QWORD *)(v13 + 16) = v9;
    *(_QWORD *)(v13 + 24) = v12;
    swift_retain();
    sub_22F917018(a2);
    sub_22F8F4FA8((uint64_t)v27, (uint64_t)v28);
    if (v29)
    {
      sub_22F98DA50();
      v14 = swift_allocObject();
      *(_QWORD *)(v14 + 16) = v7;
      *(_BYTE *)(v14 + 24) = v10;
      swift_retain();
      sub_22F98DA38();
      swift_release();
      swift_getKeyPath();
      swift_getKeyPath();
      sub_22F8F4FA8((uint64_t)v27, (uint64_t)v25);
      swift_retain();
      sub_22F8F5054(v27, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22F87A440);
      sub_22F98DBAC();
      sub_22F8EADAC(8);
      sub_22F8ED7F0(0);
      swift_getKeyPath();
      swift_getKeyPath();
      v25[0] = v24;
      v25[1] = v11;
      memset(&v25[2], 0, 24);
      v26 = 2;
      swift_bridgeObjectRetain();
      swift_retain();
      sub_22F98DBAC();
      swift_getKeyPath();
      swift_getKeyPath();
      LOBYTE(v25[0]) = 0;
      swift_retain();
      sub_22F98DBAC();
      swift_release();
      swift_bridgeObjectRelease();
      sub_22F8F5054(v27, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22F87A26C);
      swift_release();
      return swift_release();
    }
    else
    {
      if (qword_255E1DB30 != -1)
        swift_once();
      v15 = __swift_project_value_buffer(v3, (uint64_t)qword_255E29640);
      sub_22F87ABDC(v15, (uint64_t)v5, (uint64_t *)&unk_255E206E0);
      v16 = sub_22F98DAA4();
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v5, 1, v16) == 1)
      {
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        return sub_22F87AC20((uint64_t)v5, (uint64_t *)&unk_255E206E0);
      }
      else
      {
        v18 = sub_22F98DA8C();
        v19 = sub_22F98F088();
        if (os_log_type_enabled(v18, v19))
        {
          v20 = (uint8_t *)swift_slowAlloc();
          v24 = v17;
          v21 = v20;
          *(_WORD *)v20 = 0;
          _os_log_impl(&dword_22F85B000, v18, v19, "Unexpected identity bottom error event", v20, 2u);
          v22 = v21;
          v17 = v24;
          MEMORY[0x2348A6838](v22, -1, -1);
        }
        swift_release();

        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v5, v16);
      }
    }
  }
  return result;
}

void *sub_22F8EF8E4()
{
  void *result;

  swift_beginAccess();
  result = (void *)swift_weakLoadStrong();
  if (result)
  {
    objc_msgSend(result, sel_updateUIState_, 21);
    return (void *)swift_release();
  }
  return result;
}

uint64_t sub_22F8EF944()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t Strong;
  uint64_t v18;
  unsigned int (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char v23;
  void (*v24)(char *, uint64_t);
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v0 = sub_22F98EBC0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v29 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_22F98D8B8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v28 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E241C0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23AD0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v32 = (uint64_t)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v27 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v27 - v15;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  v30 = v1;
  v31 = v0;
  if (Strong)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_22F98DBA0();
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v16, 1, 1, v3);
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v14, *MEMORY[0x24BDE4990], v3);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v14, 0, 1, v3);
  v18 = (uint64_t)&v8[*(int *)(v6 + 48)];
  sub_22F87ABDC((uint64_t)v16, (uint64_t)v8, &qword_255E23AD0);
  sub_22F87ABDC((uint64_t)v14, v18, &qword_255E23AD0);
  v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v19((uint64_t)v8, 1, v3) == 1)
  {
    sub_22F87AC20((uint64_t)v14, &qword_255E23AD0);
    sub_22F87AC20((uint64_t)v16, &qword_255E23AD0);
    if (v19(v18, 1, v3) == 1)
    {
      sub_22F87AC20((uint64_t)v8, &qword_255E23AD0);
      goto LABEL_11;
    }
    goto LABEL_9;
  }
  v20 = v32;
  sub_22F87ABDC((uint64_t)v8, v32, &qword_255E23AD0);
  if (v19(v18, 1, v3) == 1)
  {
    sub_22F87AC20((uint64_t)v14, &qword_255E23AD0);
    sub_22F87AC20((uint64_t)v16, &qword_255E23AD0);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v20, v3);
LABEL_9:
    sub_22F87AC20((uint64_t)v8, &qword_255E241C0);
    goto LABEL_13;
  }
  v21 = v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v28, v18, v3);
  sub_22F862548(&qword_255E241C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDE49A8], MEMORY[0x24BDE49B8]);
  v22 = v20;
  v23 = sub_22F98ED70();
  v24 = *(void (**)(char *, uint64_t))(v4 + 8);
  v24(v21, v3);
  sub_22F87AC20((uint64_t)v14, &qword_255E23AD0);
  sub_22F87AC20((uint64_t)v16, &qword_255E23AD0);
  v24((char *)v22, v3);
  sub_22F87AC20((uint64_t)v8, &qword_255E23AD0);
  if ((v23 & 1) != 0)
  {
LABEL_11:
    swift_beginAccess();
    result = swift_weakLoadStrong();
    if (result)
    {
      v26 = (uint64_t)v29;
      sub_22F98EBB4();
      sub_22F8EE840(v26, 0);
      swift_release();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8))(v26, v31);
    }
    return result;
  }
LABEL_13:
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_22F8EE0D0();
    return swift_release();
  }
  return result;
}

uint64_t sub_22F8EFDA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t result;
  uint64_t v5;

  v0 = sub_22F98EBC0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_22F98EBB4();
    sub_22F8EE840((uint64_t)v3, 0);
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return result;
}

uint64_t sub_22F8EFE5C()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_22F8EE0D0();
    return swift_release();
  }
  return result;
}

_QWORD *sub_22F8EFEB0()
{
  id v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  int64_t v30;
  unint64_t v31;
  unint64_t v32;
  int64_t v33;
  unint64_t v34;
  int64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  void *v41;
  void *v42;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  swift_release();
  v1 = v42;
  if (!v42)
    return 0;
  v2 = sub_22F98D798();
  if (v3 >> 60 == 15
    || (v4 = v2,
        v0 = (id)v3,
        v5 = objc_allocWithZone(MEMORY[0x24BEBD640]),
        v6 = (void *)sub_22F98D360(),
        v7 = objc_msgSend(v5, sel_initWithData_, v6),
        sub_22F87A9E0(v4, (unint64_t)v0),
        v6,
        !v7))
  {
    v8 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v12 = sub_22F98D7BC();
    if (!v13)
      goto LABEL_13;
  }
  else
  {
    v0 = v7;
    v8 = sub_22F979B60(0, 1, 1, MEMORY[0x24BEE4AF8]);
    v10 = v8[2];
    v9 = v8[3];
    if (v10 >= v9 >> 1)
      v8 = sub_22F979B60((_QWORD *)(v9 > 1), v10 + 1, 1, v8);
    v8[2] = v10 + 1;
    v11 = &v8[3 * v10];
    v11[4] = v7;
    v11[5] = 0;
    *((_BYTE *)v11 + 48) = 0;

    v12 = sub_22F98D7BC();
    if (!v13)
      goto LABEL_13;
  }
  v14 = v12;
  v0 = v13;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
    goto LABEL_10;
LABEL_48:
  v8 = sub_22F979B60(0, v8[2] + 1, 1, v8);
LABEL_10:
  v16 = v8[2];
  v15 = v8[3];
  if (v16 >= v15 >> 1)
    v8 = sub_22F979B60((_QWORD *)(v15 > 1), v16 + 1, 1, v8);
  v8[2] = v16 + 1;
  v17 = &v8[3 * v16];
  v17[4] = v14;
  v17[5] = v0;
  *((_BYTE *)v17 + 48) = 1;
LABEL_13:
  v18 = sub_22F98D7B0();
  if ((v19 & 1) == 0)
  {
    v20 = v18;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v8 = sub_22F979B60(0, v8[2] + 1, 1, v8);
    v22 = v8[2];
    v21 = v8[3];
    v0 = (id)(v22 + 1);
    if (v22 >= v21 >> 1)
      v8 = sub_22F979B60((_QWORD *)(v21 > 1), v22 + 1, 1, v8);
    v8[2] = v0;
    v23 = &v8[3 * v22];
    v23[4] = v20;
    v23[5] = 0;
    *((_BYTE *)v23 + 48) = 2;
  }
  v41 = v1;
  v24 = sub_22F98D7A4();
  v14 = v24;
  v25 = 0;
  v26 = v24 + 64;
  v27 = 1 << *(_BYTE *)(v24 + 32);
  v28 = -1;
  if (v27 < 64)
    v28 = ~(-1 << v27);
  v29 = v28 & *(_QWORD *)(v24 + 64);
  v30 = (unint64_t)(v27 + 63) >> 6;
  if (v29)
  {
LABEL_22:
    v31 = __clz(__rbit64(v29));
    v29 &= v29 - 1;
    v32 = v31 | (v25 << 6);
    goto LABEL_37;
  }
  while (1)
  {
    v33 = v25 + 1;
    if (__OFADD__(v25, 1))
    {
      __break(1u);
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
    if (v33 >= v30)
      goto LABEL_43;
    v34 = *(_QWORD *)(v26 + 8 * v33);
    ++v25;
    if (!v34)
    {
      v25 = v33 + 1;
      if (v33 + 1 >= v30)
        goto LABEL_43;
      v34 = *(_QWORD *)(v26 + 8 * v25);
      if (!v34)
      {
        v25 = v33 + 2;
        if (v33 + 2 >= v30)
          goto LABEL_43;
        v34 = *(_QWORD *)(v26 + 8 * v25);
        if (!v34)
          break;
      }
    }
LABEL_36:
    v29 = (v34 - 1) & v34;
    v32 = __clz(__rbit64(v34)) + (v25 << 6);
LABEL_37:
    v1 = *(void **)(*(_QWORD *)(v14 + 48) + 8 * v32);
    v36 = *(unsigned __int8 *)(*(_QWORD *)(v14 + 56) + v32);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v8 = sub_22F979B60(0, v8[2] + 1, 1, v8);
    v38 = v8[2];
    v37 = v8[3];
    v0 = (id)(v38 + 1);
    if (v38 >= v37 >> 1)
      v8 = sub_22F979B60((_QWORD *)(v37 > 1), v38 + 1, 1, v8);
    v8[2] = v0;
    v39 = &v8[3 * v38];
    v39[4] = v1;
    v39[5] = v36;
    *((_BYTE *)v39 + 48) = 3;
    if (v29)
      goto LABEL_22;
  }
  v35 = v33 + 3;
  if (v35 < v30)
  {
    v34 = *(_QWORD *)(v26 + 8 * v35);
    if (!v34)
    {
      while (1)
      {
        v25 = v35 + 1;
        if (__OFADD__(v35, 1))
          goto LABEL_47;
        if (v25 >= v30)
          goto LABEL_43;
        v34 = *(_QWORD *)(v26 + 8 * v25);
        ++v35;
        if (v34)
          goto LABEL_36;
      }
    }
    v25 = v35;
    goto LABEL_36;
  }
LABEL_43:
  swift_release();

  return v8;
}

uint64_t sub_22F8F02BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E21AB0);
  MEMORY[0x24BDAC7A8](v2);
  v32 = (uint64_t)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = swift_allocObject();
  swift_weakInit();
  v5 = swift_allocObject();
  swift_weakInit();
  v6 = swift_allocObject();
  swift_weakInit();
  v31 = swift_allocObject();
  swift_weakInit();
  v25 = swift_allocObject();
  swift_weakInit();
  v29 = swift_allocObject();
  swift_weakInit();
  v30 = swift_allocObject();
  swift_weakInit();
  v7 = swift_allocObject();
  swift_weakInit();
  v27 = swift_allocObject();
  swift_weakInit();
  v26 = swift_allocObject();
  swift_weakInit();
  v28 = swift_allocObject();
  swift_weakInit();
  v24 = swift_allocObject();
  swift_weakInit();
  v22 = swift_allocObject();
  swift_weakInit();
  v23 = swift_allocObject();
  swift_weakInit();
  v8 = sub_22F98EFD4();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v32, 1, 1, v8);
  sub_22F98EFBC();
  swift_retain();
  swift_retain();
  swift_retain();
  v21[1] = v6;
  swift_retain();
  v9 = v5;
  v21[0] = v5;
  swift_retain();
  v10 = v7;
  v21[2] = v7;
  swift_retain();
  v11 = v29;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v12 = v27;
  swift_retain();
  v13 = v26;
  swift_retain();
  v14 = v28;
  swift_retain();
  swift_retain();
  v15 = sub_22F98EFB0();
  v16 = (_QWORD *)swift_allocObject();
  v17 = MEMORY[0x24BEE6930];
  v16[2] = v15;
  v16[3] = v17;
  v16[4] = v1;
  v16[5] = sub_22F8F4B78;
  v16[6] = v4;
  v16[7] = sub_22F8F4B98;
  v16[8] = v25;
  v16[9] = sub_22F8F4B88;
  v16[10] = v6;
  v16[11] = sub_22F8F4B80;
  v16[12] = v9;
  v16[13] = sub_22F8F4BB0;
  v16[14] = v10;
  v16[15] = sub_22F8F4BA0;
  v16[16] = v11;
  v16[17] = sub_22F8F4BD0;
  v18 = v23;
  v16[18] = v24;
  v16[19] = sub_22F8F4BE0;
  v16[20] = v18;
  v16[21] = sub_22F8F4BD8;
  v16[22] = v22;
  v16[23] = sub_22F8F4BA8;
  v19 = v31;
  v16[24] = v30;
  v16[25] = sub_22F8F4BB8;
  v16[26] = v12;
  v16[27] = sub_22F8F4BC0;
  v16[28] = v13;
  v16[29] = sub_22F8F4BC8;
  v16[30] = v14;
  v16[31] = sub_22F8F4B90;
  v16[32] = v19;
  sub_22F884920(v32, (uint64_t)&unk_255E241A8, (uint64_t)v16);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void sub_22F8F0758()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255E23AE0)
  {
    type metadata accessor for CGSize(255);
    v0 = sub_22F98DBB8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255E23AE0);
  }
}

void sub_22F8F07AC(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    v4 = sub_22F98DBB8();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_22F8F07F8()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    sub_22F98DA50();
    v2 = swift_allocObject();
    *(_QWORD *)(v2 + 16) = v1;
    *(_BYTE *)(v2 + 24) = 1;
    swift_retain();
    sub_22F98DA38();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_22F98DBAC();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_22F98DBAC();
    swift_getKeyPath();
    swift_getKeyPath();
    return sub_22F98DBAC();
  }
  return result;
}

uint64_t sub_22F8F0970()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    sub_22F98DA50();
    v2 = swift_allocObject();
    *(_QWORD *)(v2 + 16) = v1;
    *(_BYTE *)(v2 + 24) = 14;
    swift_retain();
    sub_22F98DA38();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_22F98DBAC();
    sub_22F8EE0D0();
    return swift_release();
  }
  return result;
}

uint64_t sub_22F8F0A60()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    sub_22F98DA50();
    v2 = swift_allocObject();
    *(_QWORD *)(v2 + 16) = v1;
    *(_BYTE *)(v2 + 24) = 15;
    swift_retain();
    sub_22F98DA38();
    swift_release();
    sub_22F8ED7F0(4u);
    sub_22F8EE0D0();
    swift_getKeyPath();
    swift_getKeyPath();
    return sub_22F98DBAC();
  }
  return result;
}

uint64_t sub_22F8F0B44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  UIAccessibilityNotifications v15;
  id v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  _OWORD v19[2];
  uint64_t v20;
  char v21;

  v0 = sub_22F98EBC0();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v19 - v5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23AD0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v11 = result;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_22F98DBA0();
    swift_release();
    swift_release();
    v12 = sub_22F98D8B8();
    v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v9, 1, v12);
    sub_22F87AC20((uint64_t)v9, &qword_255E23AD0);
    sub_22F98DA50();
    if (v13 == 1)
    {
      v14 = swift_allocObject();
      *(_QWORD *)(v14 + 16) = v11;
      *(_BYTE *)(v14 + 24) = 9;
      swift_retain();
      sub_22F98DA38();
      swift_release();
      sub_22F932EEC(0);
      if (UIAccessibilityIsVoiceOverRunning())
      {
        v15 = *MEMORY[0x24BEBDDB0];
        v16 = sub_22F933BD0(0);
        UIAccessibilityPostNotification(v15, v16);

      }
      swift_bridgeObjectRelease();
      sub_22F98EBB4();
      MEMORY[0x2348A57D0](v4, 1.3);
      v17 = *(void (**)(char *, uint64_t))(v1 + 8);
      v17(v4, v0);
      sub_22F8EDD68((uint64_t)v6);
      v17(v6, v0);
    }
    else
    {
      v18 = swift_allocObject();
      *(_QWORD *)(v18 + 16) = v11;
      *(_BYTE *)(v18 + 24) = 8;
      swift_retain();
      sub_22F98DA38();
      swift_release();
    }
    sub_22F8ED7F0(4u);
    sub_22F8EADAC(13);
    swift_getKeyPath();
    swift_getKeyPath();
    v20 = 0;
    memset(v19, 0, sizeof(v19));
    v21 = 2;
    return sub_22F98DBAC();
  }
  return result;
}

uint64_t sub_22F8F0E50()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_22F98DBAC();
    sub_22F98DA50();
    v2 = swift_allocObject();
    *(_QWORD *)(v2 + 16) = v1;
    *(_BYTE *)(v2 + 24) = 2;
    swift_retain();
    sub_22F98DA38();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_22F98DBAC();
    sub_22F8ED7F0(1u);
    return swift_release();
  }
  return result;
}

uint64_t sub_22F8F0FAC()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  char v4;
  uint64_t v5;
  UIAccessibilityNotifications v6;
  id v7;
  unsigned __int8 v8;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_22F98DBA0();
    swift_release();
    swift_release();
    if (sub_22F936434(v8) == 0x676E696E6E616373 && v2 == 0xEE0065646F435251)
    {
      swift_bridgeObjectRelease();
      v3 = 4;
    }
    else
    {
      v4 = sub_22F98F430();
      swift_bridgeObjectRelease();
      if ((v4 & 1) != 0)
        v3 = 4;
      else
        v3 = 3;
    }
    *(_BYTE *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_processingQRRequest) = 0;
    sub_22F98DA50();
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v1;
    *(_BYTE *)(v5 + 24) = 3;
    swift_retain();
    sub_22F98DA38();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_22F98DBAC();
    sub_22F8EADAC(12);
    sub_22F8ED7F0(v3);
    sub_22F932EEC(0);
    if (UIAccessibilityIsVoiceOverRunning())
    {
      v6 = *MEMORY[0x24BEBDDB0];
      v7 = sub_22F933BD0(0);
      UIAccessibilityPostNotification(v6, v7);

    }
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_22F8F1214()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    sub_22F98DA50();
    v2 = swift_allocObject();
    *(_QWORD *)(v2 + 16) = v1;
    *(_BYTE *)(v2 + 24) = 7;
    swift_retain();
    sub_22F98DA38();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_22F98DBAC();
    sub_22F8ED7F0(0);
    return swift_release();
  }
  return result;
}

uint64_t sub_22F8F1318()
{
  uint64_t result;
  uint64_t v1;
  void *v2;
  uint64_t v3;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    v2 = *(void **)(result + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_remoteProxy);
    if (v2)
      objc_msgSend(v2, sel_notifyUIButtonTapWithButton_, 1);
    sub_22F98DA50();
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v1;
    *(_BYTE *)(v3 + 24) = 4;
    swift_retain();
    sub_22F98DA38();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_22F98DBAC();
    swift_getKeyPath();
    swift_getKeyPath();
    return sub_22F98DBAC();
  }
  return result;
}

uint64_t sub_22F8F145C()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  char **v4;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    sub_22F98DA50();
    v2 = swift_allocObject();
    *(_QWORD *)(v2 + 16) = v1;
    *(_BYTE *)(v2 + 24) = 5;
    swift_retain();
    sub_22F98DA38();
    swift_release();
    if (*(_BYTE *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_processingQRRequest) == 1)
    {
      *(_BYTE *)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_processingQRRequest) = 0;
      v3 = *(void **)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_remoteProxy);
      if (v3)
      {
        v4 = &selRef_requestCancelReadWithIsEngagementTransition_;
LABEL_7:
        objc_msgSend(v3, *v4);
      }
    }
    else
    {
      v3 = *(void **)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_remoteProxy);
      if (v3)
      {
        v4 = &selRef_requestRestartReadWithTriggeredByMultipleCheck_;
        goto LABEL_7;
      }
    }
    return swift_release();
  }
  return result;
}

void sub_22F8F1558()
{
  uint64_t Strong;
  uint64_t v1;
  int v2;
  void *v3;
  void *v4;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v1 = Strong;
    *(_BYTE *)(Strong + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_processingQRRequest) = 0;
    v2 = *(unsigned __int8 *)(Strong + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_isDifferentQRCode);
    if (v2 != 2
      && (v2 & 1) != 0
      && (swift_getKeyPath(),
          swift_getKeyPath(),
          swift_retain(),
          sub_22F98DBAC(),
          sub_22F8EADAC(8),
          (v3 = *(void **)(v1 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_remoteProxy)) != 0))
    {
      swift_unknownObjectRetain();
      sub_22F98D9CC();
      v4 = (void *)sub_22F98ED94();
      swift_bridgeObjectRelease();
      objc_msgSend(v3, sel_qrCodeScanErrorWithError_, v4);
      swift_unknownObjectRelease();
      swift_release();

    }
    else
    {
      swift_release();
    }
  }
}

uint64_t sub_22F8F167C()
{
  uint64_t result;
  _BYTE v1[8];

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    *(_BYTE *)(result + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_processingQRRequest) = 0;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_22F98DBA0();
    swift_release();
    swift_release();
    if (v1[0] == 1)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      v1[0] = 0;
      swift_retain();
      sub_22F98DBAC();
      sub_22F8ED4B4();
    }
    swift_weakInit();
    sub_22F8EF078((uint64_t)v1, 7);
    swift_weakDestroy();
    return swift_release();
  }
  return result;
}

uint64_t sub_22F8F1794()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  _OWORD v11[2];
  uint64_t v12;
  char v13;

  v0 = sub_22F98EBC0();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v11 - v5;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v8 = result;
    sub_22F98DA50();
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = v8;
    *(_BYTE *)(v9 + 24) = 13;
    swift_retain();
    sub_22F98DA38();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    v12 = 0;
    memset(v11, 0, sizeof(v11));
    v13 = 1;
    swift_retain();
    sub_22F98DBAC();
    sub_22F8EADAC(8);
    sub_22F8ED7F0(2u);
    sub_22F98EBB4();
    MEMORY[0x2348A57D0](v4, 3.0);
    v10 = *(void (**)(char *, uint64_t))(v1 + 8);
    v10(v4, v0);
    sub_22F8EE840((uint64_t)v6, 0);
    swift_release();
    return ((uint64_t (*)(char *, uint64_t))v10)(v6, v0);
  }
  return result;
}

uint64_t sub_22F8F1948()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    sub_22F8EEE04();
    sub_22F98DA50();
    v2 = swift_allocObject();
    *(_QWORD *)(v2 + 16) = v1;
    *(_BYTE *)(v2 + 24) = 4;
    swift_retain();
    sub_22F98DA38();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    return sub_22F98DBAC();
  }
  return result;
}

uint64_t sub_22F8F1A4C()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_22F98DBAC();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_22F98DBAC();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_22F98DBAC();
    sub_22F98DA50();
    v2 = swift_allocObject();
    *(_QWORD *)(v2 + 16) = v1;
    *(_BYTE *)(v2 + 24) = 6;
    swift_retain();
    sub_22F98DA38();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    return sub_22F98DBAC();
  }
  return result;
}

uint64_t sub_22F8F1C1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;

  *(_QWORD *)(v8 + 240) = v24;
  *(_OWORD *)(v8 + 208) = v22;
  *(_OWORD *)(v8 + 224) = v23;
  *(_OWORD *)(v8 + 176) = v20;
  *(_OWORD *)(v8 + 192) = v21;
  *(_OWORD *)(v8 + 144) = v18;
  *(_OWORD *)(v8 + 160) = v19;
  *(_OWORD *)(v8 + 112) = v16;
  *(_OWORD *)(v8 + 128) = v17;
  *(_OWORD *)(v8 + 96) = v15;
  *(_QWORD *)(v8 + 88) = v14;
  *(_OWORD *)(v8 + 72) = v13;
  *(_QWORD *)(v8 + 56) = v11;
  *(_QWORD *)(v8 + 64) = v12;
  *(_QWORD *)(v8 + 40) = a7;
  *(_QWORD *)(v8 + 48) = a8;
  *(_QWORD *)(v8 + 24) = a5;
  *(_QWORD *)(v8 + 32) = a6;
  *(_QWORD *)(v8 + 16) = a4;
  sub_22F98EFBC();
  *(_QWORD *)(v8 + 248) = sub_22F98EFB0();
  *(_QWORD *)(v8 + 256) = sub_22F98EF8C();
  *(_QWORD *)(v8 + 264) = v9;
  return swift_task_switch();
}

uint64_t sub_22F8F1CEC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v64 = v0[30];
  v54 = v0[29];
  v62 = v0[28];
  v53 = v0[27];
  v63 = v0[26];
  v51 = v0[23];
  v52 = v0[25];
  v56 = v0[22];
  v57 = v0[24];
  v50 = v0[21];
  v61 = v0[20];
  v49 = v0[19];
  v60 = v0[18];
  v48 = v0[17];
  v59 = v0[16];
  v47 = v0[15];
  v66 = v0[14];
  v1 = v0[12];
  v58 = v0[13];
  v55 = v0[11];
  v2 = v0[9];
  v65 = v0[10];
  v3 = v0[7];
  v4 = v0[8];
  v5 = v0[5];
  v6 = v0[6];
  v8 = v0[3];
  v7 = v0[4];
  v0[34] = *(_QWORD *)(v0[2] + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E241B0);
  v9 = swift_allocObject();
  v0[35] = v9;
  *(_OWORD *)(v9 + 16) = xmmword_22F996AA0;
  *(_WORD *)(v9 + 32) = 256;
  *(_QWORD *)(v9 + 40) = &unk_24FD1BDF0;
  *(_QWORD *)(v9 + 48) = v8;
  *(_QWORD *)(v9 + 56) = v7;
  *(_WORD *)(v9 + 64) = 512;
  *(_QWORD *)(v9 + 72) = &unk_24FD1BE18;
  *(_QWORD *)(v9 + 80) = v5;
  *(_QWORD *)(v9 + 88) = v6;
  *(_WORD *)(v9 + 96) = 3840;
  *(_QWORD *)(v9 + 104) = &unk_24FD1BE40;
  *(_QWORD *)(v9 + 112) = v3;
  *(_QWORD *)(v9 + 120) = v4;
  *(_WORD *)(v9 + 128) = 3584;
  *(_QWORD *)(v9 + 136) = &unk_24FD1BE70;
  *(_QWORD *)(v9 + 144) = v2;
  *(_QWORD *)(v9 + 152) = v65;
  *(_WORD *)(v9 + 160) = 513;
  *(_QWORD *)(v9 + 168) = &unk_24FD1BE98;
  *(_QWORD *)(v9 + 176) = v5;
  *(_QWORD *)(v9 + 184) = v6;
  *(_WORD *)(v9 + 192) = 1025;
  *(_QWORD *)(v9 + 200) = &unk_24FD1BEC0;
  *(_QWORD *)(v9 + 208) = v55;
  *(_QWORD *)(v9 + 216) = v1;
  *(_WORD *)(v9 + 224) = 3841;
  *(_QWORD *)(v9 + 232) = &unk_24FD1BEE8;
  *(_QWORD *)(v9 + 240) = v3;
  *(_QWORD *)(v9 + 248) = v4;
  *(_WORD *)(v9 + 256) = 3585;
  *(_QWORD *)(v9 + 264) = &unk_24FD1BF18;
  *(_QWORD *)(v9 + 272) = v2;
  *(_QWORD *)(v9 + 280) = v65;
  v10 = swift_allocObject();
  swift_weakInit();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v10;
  *(_BYTE *)(v11 + 24) = 1;
  *(_WORD *)(v9 + 288) = 2561;
  *(_QWORD *)(v9 + 296) = &unk_24FD1BF40;
  *(_QWORD *)(v9 + 304) = sub_22F8F4DC4;
  *(_QWORD *)(v9 + 312) = v11;
  v12 = swift_allocObject();
  swift_weakInit();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v12;
  *(_BYTE *)(v13 + 24) = 0;
  *(_WORD *)(v9 + 320) = 2561;
  *(_QWORD *)(v9 + 328) = &unk_24FD1BF68;
  *(_QWORD *)(v9 + 336) = sub_22F8F57B8;
  *(_QWORD *)(v9 + 344) = v13;
  v14 = swift_allocObject();
  swift_weakInit();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v14;
  *(_BYTE *)(v15 + 24) = 5;
  *(_WORD *)(v9 + 352) = 2561;
  *(_QWORD *)(v9 + 360) = &unk_24FD1BF90;
  *(_QWORD *)(v9 + 368) = sub_22F8F57B8;
  *(_QWORD *)(v9 + 376) = v15;
  v16 = swift_allocObject();
  swift_weakInit();
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  *(_BYTE *)(v17 + 24) = 6;
  *(_WORD *)(v9 + 384) = 2561;
  *(_QWORD *)(v9 + 392) = &unk_24FD1BFB8;
  *(_QWORD *)(v9 + 400) = sub_22F8F57B8;
  *(_QWORD *)(v9 + 408) = v17;
  v18 = swift_allocObject();
  swift_weakInit();
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = v18;
  *(_BYTE *)(v19 + 24) = 7;
  *(_WORD *)(v9 + 416) = 2561;
  *(_QWORD *)(v9 + 424) = &unk_24FD1BFE0;
  *(_QWORD *)(v9 + 432) = sub_22F8F57B8;
  *(_QWORD *)(v9 + 440) = v19;
  *(_WORD *)(v9 + 448) = 770;
  *(_QWORD *)(v9 + 456) = &unk_24FD1C008;
  *(_QWORD *)(v9 + 464) = v58;
  *(_QWORD *)(v9 + 472) = v66;
  *(_WORD *)(v9 + 480) = 1026;
  *(_QWORD *)(v9 + 488) = &unk_24FD1C030;
  *(_QWORD *)(v9 + 496) = v55;
  *(_QWORD *)(v9 + 504) = v1;
  *(_WORD *)(v9 + 512) = 3842;
  *(_QWORD *)(v9 + 520) = &unk_24FD1C058;
  *(_QWORD *)(v9 + 528) = v3;
  *(_QWORD *)(v9 + 536) = v4;
  *(_WORD *)(v9 + 544) = 3586;
  *(_QWORD *)(v9 + 552) = &unk_24FD1C088;
  *(_QWORD *)(v9 + 560) = v2;
  *(_QWORD *)(v9 + 568) = v65;
  v20 = swift_allocObject();
  swift_weakInit();
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = v20;
  *(_BYTE *)(v21 + 24) = 2;
  *(_WORD *)(v9 + 576) = 2562;
  *(_QWORD *)(v9 + 584) = &unk_24FD1C0B0;
  *(_QWORD *)(v9 + 592) = sub_22F8F57B8;
  *(_QWORD *)(v9 + 600) = v21;
  v22 = swift_allocObject();
  swift_weakInit();
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = v22;
  *(_BYTE *)(v23 + 24) = 1;
  *(_WORD *)(v9 + 608) = 2562;
  *(_QWORD *)(v9 + 616) = &unk_24FD1C0D8;
  *(_QWORD *)(v9 + 624) = sub_22F8F57B8;
  *(_QWORD *)(v9 + 632) = v23;
  v24 = swift_allocObject();
  swift_weakInit();
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = v24;
  *(_BYTE *)(v25 + 24) = 5;
  *(_WORD *)(v9 + 640) = 2562;
  *(_QWORD *)(v9 + 648) = &unk_24FD1C100;
  *(_QWORD *)(v9 + 656) = sub_22F8F57B8;
  *(_QWORD *)(v9 + 664) = v25;
  v26 = swift_allocObject();
  swift_weakInit();
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = v26;
  *(_BYTE *)(v27 + 24) = 0;
  *(_WORD *)(v9 + 672) = 2562;
  *(_QWORD *)(v9 + 680) = &unk_24FD1C128;
  *(_QWORD *)(v9 + 688) = sub_22F8F57B8;
  *(_QWORD *)(v9 + 696) = v27;
  v28 = swift_allocObject();
  swift_weakInit();
  v29 = swift_allocObject();
  *(_QWORD *)(v29 + 16) = v28;
  *(_BYTE *)(v29 + 24) = 7;
  *(_WORD *)(v9 + 704) = 2562;
  *(_QWORD *)(v9 + 712) = &unk_24FD1C150;
  *(_QWORD *)(v9 + 720) = sub_22F8F57B8;
  *(_QWORD *)(v9 + 728) = v29;
  v30 = swift_allocObject();
  swift_weakInit();
  v31 = swift_allocObject();
  *(_QWORD *)(v31 + 16) = v30;
  *(_BYTE *)(v31 + 24) = 6;
  *(_WORD *)(v9 + 736) = 2562;
  *(_QWORD *)(v9 + 744) = &unk_24FD1C178;
  *(_QWORD *)(v9 + 752) = sub_22F8F57B8;
  *(_QWORD *)(v9 + 760) = v31;
  *(_WORD *)(v9 + 768) = 3330;
  *(_QWORD *)(v9 + 776) = &unk_24FD1C1A0;
  *(_QWORD *)(v9 + 784) = v47;
  *(_QWORD *)(v9 + 792) = v59;
  *(_WORD *)(v9 + 800) = 1030;
  *(_QWORD *)(v9 + 808) = &unk_24FD1C1C8;
  *(_QWORD *)(v9 + 816) = v55;
  *(_QWORD *)(v9 + 824) = v1;
  *(_WORD *)(v9 + 832) = 3846;
  *(_QWORD *)(v9 + 840) = &unk_24FD1C1F0;
  *(_QWORD *)(v9 + 848) = v3;
  *(_QWORD *)(v9 + 856) = v4;
  *(_WORD *)(v9 + 864) = 266;
  *(_QWORD *)(v9 + 872) = &unk_24FD1C220;
  *(_QWORD *)(v9 + 880) = v8;
  *(_QWORD *)(v9 + 888) = v7;
  *(_WORD *)(v9 + 896) = 3594;
  *(_QWORD *)(v9 + 904) = &unk_24FD1C248;
  *(_QWORD *)(v9 + 912) = v2;
  *(_QWORD *)(v9 + 920) = v65;
  *(_WORD *)(v9 + 928) = 1546;
  *(_QWORD *)(v9 + 936) = &unk_24FD1C270;
  *(_QWORD *)(v9 + 944) = v48;
  *(_QWORD *)(v9 + 952) = v60;
  *(_WORD *)(v9 + 960) = 3850;
  *(_QWORD *)(v9 + 968) = &unk_24FD1C298;
  *(_QWORD *)(v9 + 976) = v3;
  *(_QWORD *)(v9 + 984) = v4;
  *(_WORD *)(v9 + 992) = 269;
  *(_QWORD *)(v9 + 1000) = &unk_24FD1C2C0;
  *(_QWORD *)(v9 + 1008) = v8;
  *(_QWORD *)(v9 + 1016) = v7;
  *(_WORD *)(v9 + 1024) = 3853;
  *(_QWORD *)(v9 + 1032) = &unk_24FD1C2E8;
  *(_QWORD *)(v9 + 1040) = v3;
  *(_QWORD *)(v9 + 1048) = v4;
  *(_WORD *)(v9 + 1056) = 1037;
  *(_QWORD *)(v9 + 1064) = &unk_24FD1C310;
  *(_QWORD *)(v9 + 1072) = v49;
  *(_QWORD *)(v9 + 1080) = v61;
  *(_WORD *)(v9 + 1088) = 268;
  *(_QWORD *)(v9 + 1096) = &unk_24FD1C338;
  *(_QWORD *)(v9 + 1104) = v8;
  *(_QWORD *)(v9 + 1112) = v7;
  *(_WORD *)(v9 + 1120) = 3852;
  *(_QWORD *)(v9 + 1128) = &unk_24FD1C360;
  *(_QWORD *)(v9 + 1136) = v3;
  *(_QWORD *)(v9 + 1144) = v4;
  *(_WORD *)(v9 + 1152) = 1795;
  *(_QWORD *)(v9 + 1160) = &unk_24FD1C388;
  *(_QWORD *)(v9 + 1168) = v50;
  *(_QWORD *)(v9 + 1176) = v56;
  *(_WORD *)(v9 + 1184) = 3843;
  *(_QWORD *)(v9 + 1192) = &unk_24FD1C3B0;
  *(_QWORD *)(v9 + 1200) = v3;
  *(_QWORD *)(v9 + 1208) = v4;
  *(_WORD *)(v9 + 1216) = 3587;
  *(_QWORD *)(v9 + 1224) = &unk_24FD1C3E0;
  *(_QWORD *)(v9 + 1232) = v2;
  *(_QWORD *)(v9 + 1240) = v65;
  v32 = swift_allocObject();
  swift_retain_n();
  swift_weakInit();
  v33 = swift_allocObject();
  *(_QWORD *)(v33 + 16) = v32;
  *(_BYTE *)(v33 + 24) = 7;
  *(_WORD *)(v9 + 1248) = 2563;
  *(_QWORD *)(v9 + 1256) = &unk_24FD1C408;
  *(_QWORD *)(v9 + 1264) = sub_22F8F57B8;
  *(_QWORD *)(v9 + 1272) = v33;
  *(_WORD *)(v9 + 1280) = 1284;
  *(_QWORD *)(v9 + 1288) = &unk_24FD1C430;
  *(_QWORD *)(v9 + 1296) = v51;
  *(_QWORD *)(v9 + 1304) = v57;
  *(_WORD *)(v9 + 1312) = 3844;
  *(_QWORD *)(v9 + 1320) = &unk_24FD1C458;
  *(_QWORD *)(v9 + 1328) = v3;
  *(_QWORD *)(v9 + 1336) = v4;
  *(_WORD *)(v9 + 1344) = 772;
  *(_QWORD *)(v9 + 1352) = &unk_24FD1C488;
  *(_QWORD *)(v9 + 1360) = v58;
  *(_QWORD *)(v9 + 1368) = v66;
  *(_WORD *)(v9 + 1376) = 1796;
  *(_QWORD *)(v9 + 1384) = &unk_24FD1C4B0;
  *(_QWORD *)(v9 + 1392) = v50;
  *(_QWORD *)(v9 + 1400) = v56;
  *(_WORD *)(v9 + 1408) = 1028;
  *(_QWORD *)(v9 + 1416) = &unk_24FD1C4D8;
  *(_QWORD *)(v9 + 1424) = v52;
  *(_QWORD *)(v9 + 1432) = v63;
  *(_WORD *)(v9 + 1440) = 4;
  *(_QWORD *)(v9 + 1448) = &unk_24FD1C500;
  *(_QWORD *)(v9 + 1456) = v53;
  *(_QWORD *)(v9 + 1464) = v62;
  *(_WORD *)(v9 + 1472) = 5;
  *(_QWORD *)(v9 + 1480) = &unk_24FD1C528;
  *(_QWORD *)(v9 + 1488) = v51;
  *(_QWORD *)(v9 + 1496) = v57;
  *(_WORD *)(v9 + 1504) = 3845;
  *(_QWORD *)(v9 + 1512) = &unk_24FD1C550;
  *(_QWORD *)(v9 + 1520) = v3;
  *(_QWORD *)(v9 + 1528) = v4;
  *(_WORD *)(v9 + 1536) = 261;
  *(_QWORD *)(v9 + 1544) = &unk_24FD1C578;
  *(_OWORD *)(v9 + 1552) = 0u;
  v34 = swift_allocObject();
  swift_retain_n();
  swift_weakInit();
  v35 = swift_allocObject();
  *(_QWORD *)(v35 + 16) = v34;
  *(_BYTE *)(v35 + 24) = 1;
  *(_BYTE *)(v9 + 1568) = 5;
  *(_BYTE *)(v9 + 1569) = 10;
  *(_QWORD *)(v9 + 1576) = &unk_24FD1C5A0;
  *(_QWORD *)(v9 + 1584) = sub_22F8F57B8;
  *(_QWORD *)(v9 + 1592) = v35;
  *(_BYTE *)(v9 + 1600) = 7;
  *(_BYTE *)(v9 + 1601) = 8;
  *(_QWORD *)(v9 + 1608) = &unk_24FD1C5C8;
  *(_QWORD *)(v9 + 1616) = v54;
  *(_QWORD *)(v9 + 1624) = v64;
  *(_BYTE *)(v9 + 1632) = 7;
  *(_BYTE *)(v9 + 1633) = 15;
  *(_QWORD *)(v9 + 1640) = &unk_24FD1C5F0;
  *(_QWORD *)(v9 + 1648) = v3;
  *(_QWORD *)(v9 + 1656) = v4;
  v36 = swift_allocObject();
  swift_retain();
  swift_weakInit();
  v37 = swift_allocObject();
  *(_QWORD *)(v37 + 16) = v36;
  *(_BYTE *)(v37 + 24) = 4;
  *(_BYTE *)(v9 + 1664) = 7;
  *(_BYTE *)(v9 + 1665) = 12;
  *(_QWORD *)(v9 + 1672) = &unk_24FD1C620;
  *(_QWORD *)(v9 + 1680) = sub_22F8F57B8;
  *(_QWORD *)(v9 + 1688) = v37;
  v38 = swift_allocObject();
  swift_weakInit();
  v39 = swift_allocObject();
  *(_QWORD *)(v39 + 16) = v38;
  *(_BYTE *)(v39 + 24) = 8;
  *(_BYTE *)(v9 + 1696) = 7;
  *(_BYTE *)(v9 + 1697) = 12;
  *(_QWORD *)(v9 + 1704) = &unk_24FD1C648;
  *(_QWORD *)(v9 + 1712) = sub_22F8F57B8;
  *(_QWORD *)(v9 + 1720) = v39;
  v40 = swift_allocObject();
  swift_weakInit();
  v41 = swift_allocObject();
  *(_QWORD *)(v41 + 16) = v40;
  *(_BYTE *)(v41 + 24) = 3;
  *(_BYTE *)(v9 + 1728) = 7;
  *(_BYTE *)(v9 + 1729) = 12;
  *(_QWORD *)(v9 + 1736) = &unk_24FD1C670;
  *(_QWORD *)(v9 + 1744) = sub_22F8F57B8;
  *(_QWORD *)(v9 + 1752) = v41;
  v42 = swift_allocObject();
  swift_weakInit();
  v43 = swift_allocObject();
  *(_QWORD *)(v43 + 16) = v42;
  *(_BYTE *)(v43 + 24) = 2;
  *(_BYTE *)(v9 + 1760) = 7;
  *(_BYTE *)(v9 + 1761) = 10;
  *(_QWORD *)(v9 + 1768) = &unk_24FD1C698;
  *(_QWORD *)(v9 + 1776) = sub_22F8F57B8;
  *(_QWORD *)(v9 + 1784) = v43;
  v44 = swift_allocObject();
  swift_weakInit();
  v45 = swift_allocObject();
  *(_QWORD *)(v45 + 16) = v44;
  *(_BYTE *)(v45 + 24) = 7;
  *(_BYTE *)(v9 + 1792) = 7;
  *(_BYTE *)(v9 + 1793) = 10;
  *(_QWORD *)(v9 + 1800) = &unk_24FD1C6C0;
  *(_QWORD *)(v9 + 1808) = sub_22F8F57B8;
  *(_QWORD *)(v9 + 1816) = v45;
  *(_BYTE *)(v9 + 1824) = 7;
  *(_BYTE *)(v9 + 1825) = 14;
  *(_QWORD *)(v9 + 1832) = &unk_24FD1C6E8;
  *(_QWORD *)(v9 + 1840) = v2;
  *(_QWORD *)(v9 + 1848) = v65;
  *(_BYTE *)(v9 + 1856) = 8;
  *(_BYTE *)(v9 + 1857) = 1;
  *(_QWORD *)(v9 + 1864) = &unk_24FD1C710;
  *(_QWORD *)(v9 + 1872) = v8;
  *(_QWORD *)(v9 + 1880) = v7;
  *(_BYTE *)(v9 + 1888) = 8;
  *(_BYTE *)(v9 + 1889) = 15;
  *(_QWORD *)(v9 + 1896) = &unk_24FD1C738;
  *(_QWORD *)(v9 + 1904) = v3;
  *(_QWORD *)(v9 + 1912) = v4;
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_22F8F2AE8()
{
  uint64_t v0;
  uint64_t i;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRetain();
  for (i = 0; i != 1888; i += 32)
  {
    v2 = *(_QWORD *)(v0 + 280) + i;
    v3 = *(_QWORD *)(v2 + 40);
    v4 = *(_QWORD *)(v2 + 48);
    v5 = *(_QWORD *)(v2 + 56);
    v6 = *(unsigned __int16 *)(v2 + 32);
    swift_bridgeObjectRetain();
    sub_22F88BD70(v4);
    sub_22F95C194(v6, v3, v4, v5);
    swift_bridgeObjectRelease();
    sub_22F87A9B8(v4);
  }
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E241B8);
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_22F8F2BE0()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22F8F2C10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E24130);
  v110 = *(_QWORD *)(v1 - 8);
  v111 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v109 = (char *)&v70 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E24138);
  v107 = *(_QWORD *)(v3 - 8);
  v108 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v106 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E24140);
  v104 = *(_QWORD *)(v5 - 8);
  v105 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v103 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1ED98);
  v101 = *(_QWORD *)(v102 - 8);
  MEMORY[0x24BDAC7A8](v102);
  v100 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E24148);
  v98 = *(_QWORD *)(v99 - 8);
  MEMORY[0x24BDAC7A8](v99);
  v97 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23AD0);
  v9 = MEMORY[0x24BDAC7A8](v96);
  v95 = (uint64_t)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v94 = (char *)&v70 - v11;
  v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E24150);
  v92 = *(_QWORD *)(v93 - 8);
  MEMORY[0x24BDAC7A8](v93);
  v91 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23AC0);
  v13 = MEMORY[0x24BDAC7A8](v90);
  v89 = (uint64_t)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v88 = (char *)&v70 - v15;
  v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E24158);
  v86 = *(_QWORD *)(v87 - 8);
  MEMORY[0x24BDAC7A8](v87);
  v85 = (char *)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1F730);
  v17 = MEMORY[0x24BDAC7A8](v84);
  v83 = (uint64_t)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v82 = (char *)&v70 - v19;
  v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E24160);
  v80 = *(_QWORD *)(v81 - 8);
  MEMORY[0x24BDAC7A8](v81);
  v79 = (char *)&v70 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E24168);
  v77 = *(_QWORD *)(v78 - 8);
  MEMORY[0x24BDAC7A8](v78);
  v76 = (char *)&v70 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E24170);
  v74 = *(_QWORD *)(v75 - 8);
  MEMORY[0x24BDAC7A8](v75);
  v73 = (char *)&v70 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E24178);
  v71 = *(_QWORD *)(v72 - 8);
  MEMORY[0x24BDAC7A8](v72);
  v24 = (char *)&v70 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E24180);
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v70 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E22E10);
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v32 = (char *)&v70 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E24188);
  v33 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v33 + 120) = sub_22F8AC984(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)(v33 + 128) = 0;
  *(_WORD *)(v33 + 112) = 0;
  *(_QWORD *)(v0 + 16) = v33;
  v34 = v0 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel__identityUIIsPresented;
  LOBYTE(v112) = 0;
  sub_22F98DB7C();
  v35 = *(void (**)(uint64_t, char *, uint64_t))(v30 + 32);
  v35(v34, v32, v29);
  v36 = v0 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel__dismissViewController;
  LOBYTE(v112) = 0;
  sub_22F98DB7C();
  v35(v36, v32, v29);
  v37 = v0 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel__disableSleep;
  LOBYTE(v112) = 0;
  sub_22F98DB7C();
  v35(v37, v32, v29);
  v38 = v0 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel__screenState;
  LOBYTE(v112) = 1;
  sub_22F98DB7C();
  (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(v38, v28, v25);
  v39 = v0 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel__particlesState;
  LOBYTE(v112) = 1;
  sub_22F98DB7C();
  (*(void (**)(uint64_t, char *, uint64_t))(v71 + 32))(v39, v24, v72);
  v40 = v0 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel__particlesPendingState;
  LOBYTE(v112) = 5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E23A90);
  v41 = v73;
  sub_22F98DB7C();
  (*(void (**)(uint64_t, char *, uint64_t))(v74 + 32))(v40, v41, v75);
  *(_BYTE *)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_delayParticlesSet) = 0;
  v42 = v0 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel__readerStateModel;
  v112 = xmmword_22F996A90;
  *(_QWORD *)&v114 = 0;
  v113 = 0uLL;
  BYTE8(v114) = 2;
  v43 = v76;
  sub_22F98DB7C();
  (*(void (**)(uint64_t, char *, uint64_t))(v77 + 32))(v42, v43, v78);
  v44 = v0 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel__identityInformation;
  *(_QWORD *)&v112 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E23AA8);
  v45 = v79;
  sub_22F98DB7C();
  (*(void (**)(uint64_t, char *, uint64_t))(v80 + 32))(v44, v45, v81);
  v46 = v0 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel__merchantDetails;
  v47 = sub_22F98D888();
  v48 = (uint64_t)v82;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v82, 1, 1, v47);
  sub_22F87ABDC(v48, v83, &qword_255E1F730);
  v49 = v85;
  sub_22F98DB7C();
  sub_22F87AC20(v48, &qword_255E1F730);
  (*(void (**)(uint64_t, char *, uint64_t))(v86 + 32))(v46, v49, v87);
  v50 = v0 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel__requestType;
  v51 = sub_22F98D8A0();
  v52 = (uint64_t)v88;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v88, 1, 1, v51);
  sub_22F87ABDC(v52, v89, &qword_255E23AC0);
  v53 = v91;
  sub_22F98DB7C();
  sub_22F87AC20(v52, &qword_255E23AC0);
  (*(void (**)(uint64_t, char *, uint64_t))(v92 + 32))(v50, v53, v93);
  v54 = v0 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel__requestValidationMode;
  v55 = sub_22F98D8B8();
  v56 = (uint64_t)v94;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v94, 1, 1, v55);
  sub_22F87ABDC(v56, v95, &qword_255E23AD0);
  v57 = v97;
  sub_22F98DB7C();
  sub_22F87AC20(v56, &qword_255E23AD0);
  (*(void (**)(uint64_t, char *, uint64_t))(v98 + 32))(v54, v57, v99);
  v58 = v0 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel__bottomError;
  v116 = 0u;
  v117 = 0u;
  v114 = 0u;
  v115 = 0u;
  v112 = 0u;
  v113 = 0u;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E1E458);
  v59 = v100;
  sub_22F98DB7C();
  (*(void (**)(uint64_t, char *, uint64_t))(v101 + 32))(v58, v59, v102);
  v60 = v0 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel__scanQRCodeFlag;
  LOBYTE(v112) = 0;
  sub_22F98DB7C();
  v35(v60, v32, v29);
  v61 = v0 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel__qrCodeScanningState;
  LOBYTE(v112) = 2;
  v62 = v103;
  sub_22F98DB7C();
  (*(void (**)(uint64_t, char *, uint64_t))(v104 + 32))(v61, v62, v105);
  v63 = v0 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel__platterSize;
  v112 = xmmword_22F996AB0;
  type metadata accessor for CGSize(0);
  v64 = v106;
  sub_22F98DB7C();
  (*(void (**)(uint64_t, char *, uint64_t))(v107 + 32))(v63, v64, v108);
  v65 = v0 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel__requestedDocument;
  v112 = 0uLL;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E21808);
  v66 = v109;
  sub_22F98DB7C();
  (*(void (**)(uint64_t, char *, uint64_t))(v110 + 32))(v65, v66, v111);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_remoteProxy) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_audioManager) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_connection) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_requestRestartOperation) = 0;
  v67 = (_QWORD *)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_lastScannedQRCode);
  *v67 = 0;
  v67[1] = 0;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_isDifferentQRCode) = 2;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_processingQRRequest) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_qrCodeScannerSleepTimer) = 0;
  v68 = OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_qrCodeScannerSleepTimeout;
  *(_QWORD *)(v0 + v68) = sub_22F98DA2C();
  return v0;
}

uint64_t sub_22F8F3778@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for IdentityViewModel();
  result = sub_22F98DB70();
  *a1 = result;
  return result;
}

uint64_t sub_22F8F37B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD v26[2];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E21AB0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB30 != -1)
    swift_once();
  v10 = __swift_project_value_buffer(v7, (uint64_t)qword_255E29640);
  sub_22F87ABDC(v10, (uint64_t)v9, (uint64_t *)&unk_255E206E0);
  v11 = sub_22F98DAA4();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11) == 1)
  {
    sub_22F87AC20((uint64_t)v9, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    v13 = sub_22F98DA8C();
    v14 = sub_22F98F0A0();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = swift_slowAlloc();
      v27 = v2;
      v16 = (uint8_t *)v15;
      v17 = swift_slowAlloc();
      v28 = a1;
      v18 = v17;
      v30 = v17;
      *(_DWORD *)v16 = 136446210;
      v26[1] = v16 + 4;
      v19 = sub_22F98D63C();
      v29 = sub_22F878880(v19, v20, &v30);
      sub_22F98F208();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22F85B000, v13, v14, "Received transaction state update: %{public}s", v16, 0xCu);
      swift_arrayDestroy();
      v21 = v18;
      a1 = v28;
      MEMORY[0x2348A6838](v21, -1, -1);
      v22 = v16;
      v2 = v27;
      MEMORY[0x2348A6838](v22, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
  }
  v23 = sub_22F98EFD4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v6, 1, 1, v23);
  v24 = (_QWORD *)swift_allocObject();
  v24[2] = 0;
  v24[3] = 0;
  v24[4] = v2;
  v24[5] = a1;
  swift_retain();
  sub_22F884940((uint64_t)v6, (uint64_t)&unk_255E24198, (uint64_t)v24);
  return swift_release();
}

uint64_t sub_22F8F3A74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[3] = a4;
  v5[4] = a5;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_22F8F3A90()
{
  uint64_t v0;

  sub_22F98EFBC();
  *(_QWORD *)(v0 + 40) = sub_22F98EFB0();
  sub_22F98EF8C();
  return swift_task_switch();
}

uint64_t sub_22F8F3AF8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release();
  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v1 + 16);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_22F8F3B48()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 56) = sub_22F95D288(*(_QWORD *)(v0 + 32)) & 1;
  swift_release();
  return swift_task_switch();
}

uint64_t sub_22F8F3B98()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 16) = *(_BYTE *)(v0 + 56);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22F8F3BDC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  id v20;
  _QWORD v22[2];
  _QWORD aBlock[6];

  v2 = v1;
  v4 = sub_22F98EB84();
  v22[0] = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_22F98EB9C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255E1DB30 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v11, (uint64_t)qword_255E29640);
  sub_22F87ABDC(v14, (uint64_t)v13, (uint64_t *)&unk_255E206E0);
  v15 = sub_22F98DAA4();
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15) == 1)
  {
    sub_22F87AC20((uint64_t)v13, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    sub_22F863858(v2, 0xD00000000000001ELL, 0x800000022F9A0E20, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
  }
  sub_22F879058();
  v17 = (void *)sub_22F98F0F4();
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v2;
  *(_QWORD *)(v18 + 24) = a1;
  aBlock[4] = sub_22F8F4AB4;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22F8644F0;
  aBlock[3] = &block_descriptor_21;
  v19 = _Block_copy(aBlock);
  swift_retain();
  v20 = a1;
  sub_22F98EB90();
  v22[1] = MEMORY[0x24BEE4AF8];
  sub_22F862548((unint64_t *)&qword_255E22DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E22070);
  sub_22F87AA84((unint64_t *)&qword_255E22DB0, (uint64_t *)&unk_255E22070, MEMORY[0x24BEE12C8]);
  sub_22F98F274();
  MEMORY[0x2348A5CD4](0, v10, v6, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v22[0] + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

id sub_22F8F3EE0(void *a1, void *a2)
{
  id v4;

  swift_getKeyPath();
  swift_getKeyPath();
  v4 = a2;
  swift_retain();
  sub_22F98DBAC();
  return objc_msgSend(a1, sel_updateUIState_, 5);
}

uint64_t getEnumTagSinglePayload for IdentityViewModel.QRCodeScanningState(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
  {
    v6 = *a1;
    v7 = v6 >= 2;
    v8 = v6 - 2;
    if (!v7)
      v8 = -1;
    if (v8 + 1 >= 2)
      return v8;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 2;
    if (a2 + 2 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_22F8F3FF4 + 4 * byte_22F996AC0[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for IdentityViewModel.QRCodeScanningState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 2;
  if (a3 + 2 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFE)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_22F8F409C + 4 * byte_22F996ACA[v5]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_22F8F40D0 + 4 * byte_22F996AC5[v5]))();
}

uint64_t sub_22F8F40D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22F8F40D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22F8F40E0);
  return result;
}

uint64_t sub_22F8F40EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22F8F40F4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_22F8F40F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22F8F4100(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22F8F410C(unsigned __int8 *a1)
{
  unsigned int v1;

  v1 = *a1;
  if (v1 >= 2)
    return v1 - 1;
  else
    return 0;
}

_BYTE *sub_22F8F4120(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 1;
  return result;
}

ValueMetadata *type metadata accessor for IdentityViewModel.QRCodeScanningState()
{
  return &type metadata for IdentityViewModel.QRCodeScanningState;
}

unint64_t sub_22F8F4144()
{
  unint64_t result;

  result = qword_255E24128;
  if (!qword_255E24128)
  {
    result = MEMORY[0x2348A6784](&unk_22F996BA4, &type metadata for IdentityViewModel.QRCodeScanningState);
    atomic_store(result, (unint64_t *)&qword_255E24128);
  }
  return result;
}

void sub_22F8F4188()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  _QWORD v21[5];
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v0 = sub_22F98EBC0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255E206E0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v21 - v8;
  if (qword_255E1DB30 != -1)
    swift_once();
  v24 = __swift_project_value_buffer(v4, (uint64_t)qword_255E29640);
  sub_22F87ABDC(v24, (uint64_t)v9, (uint64_t *)&unk_255E206E0);
  v10 = sub_22F98DAA4();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_22F87AC20((uint64_t)v9, (uint64_t *)&unk_255E206E0);
  }
  else
  {
    v22 = v11;
    v23 = v3;
    swift_retain_n();
    v12 = sub_22F98DA8C();
    v13 = sub_22F98F0A0();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = swift_slowAlloc();
      v21[4] = v7;
      v15 = (uint8_t *)v14;
      v16 = swift_slowAlloc();
      v21[3] = v0;
      v17 = v16;
      v26 = v16;
      v21[2] = v1;
      *(_DWORD *)v15 = 136315138;
      v21[1] = v15 + 4;
      LOBYTE(v25) = sub_22F8EA090();
      v18 = sub_22F98EE18();
      v25 = sub_22F878880(v18, v19, &v26);
      sub_22F98F208();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22F85B000, v12, v13, "Handling button click for validation mode: [ %s ]", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348A6838](v17, -1, -1);
      MEMORY[0x2348A6838](v15, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    (*(void (**)(char *, uint64_t))(v22 + 8))(v9, v10);
  }
  v20 = (char *)&loc_22F8F443C + 4 * byte_22F996ACF[sub_22F8EA090()];
  __asm { BR              X10 }
}

void sub_22F8F45CC()
{
  sub_22F8F4188();
}

void sub_22F8F45EC(char a1)
{
  _QWORD *v1;
  void *v3;
  uint64_t v4;

  v3 = *(void **)(*v1 + OBJC_IVAR____TtC19ContactlessReaderUI17IdentityViewModel_remoteProxy);
  if (v3)
  {
    if ((a1 & 1) != 0)
      v4 = 3;
    else
      v4 = 4;
    objc_msgSend(v3, sel_notifyUIButtonTapWithButton_, v4);
  }
  sub_22F8EE0D0();
}

uint64_t sub_22F8F4638@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_22F8F46B0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_22F8F472C(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  v2 = v1;
  swift_retain();
  return sub_22F98DBAC();
}

uint64_t sub_22F8F47A0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  return swift_release();
}

uint64_t sub_22F8F4808(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23AC0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v9 - v6;
  sub_22F87ABDC(a1, (uint64_t)&v9 - v6, &qword_255E23AC0);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F87ABDC((uint64_t)v7, (uint64_t)v5, &qword_255E23AC0);
  swift_retain();
  sub_22F98DBAC();
  return sub_22F87AC20((uint64_t)v7, &qword_255E23AC0);
}

uint64_t sub_22F8F4900()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F98DBA0();
  swift_release();
  return swift_release();
}

uint64_t sub_22F8F4968(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E23AD0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v9 - v6;
  sub_22F87ABDC(a1, (uint64_t)&v9 - v6, &qword_255E23AD0);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22F87ABDC((uint64_t)v7, (uint64_t)v5, &qword_255E23AD0);
  swift_retain();
  sub_22F98DBAC();
  return sub_22F87AC20((uint64_t)v7, &qword_255E23AD0);
}

uint64_t sub_22F8F4A60@<X0>(_BYTE *a1@<X8>)
{
  return sub_22F8F4638(a1);
}

uint64_t sub_22F8F4A74()
{
  return sub_22F878814();
}

uint64_t sub_22F8F4A88()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

id sub_22F8F4AB4()
{
  uint64_t v0;

  return sub_22F8F3EE0(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t block_copy_helper_20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_20()
{
  return swift_release();
}

uint64_t sub_22F8F4ADC()
{
  return objectdestroy_4Tm_0();
}

uint64_t sub_22F8F4AE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v1 + 32);
  v4 = *(_QWORD *)(v1 + 40);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_22F87B58C;
  v6[3] = v5;
  v6[4] = v4;
  v6[2] = a1;
  return swift_task_switch();
}

uint64_t sub_22F8F4B54()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_22F8F4B78()
{
  return sub_22F8F07F8();
}

uint64_t sub_22F8F4B80()
{
  return sub_22F8F0970();
}

uint64_t sub_22F8F4B88()
{
  return sub_22F8F0A60();
}

uint64_t sub_22F8F4B90()
{
  return sub_22F8F0B44();
}

uint64_t sub_22F8F4B98()
{
  return sub_22F8F0E50();
}

uint64_t sub_22F8F4BA0()
{
  return sub_22F8F0FAC();
}

uint64_t sub_22F8F4BA8()
{
  return sub_22F8F1214();
}

uint64_t sub_22F8F4BB0()
{
  return sub_22F8F1318();
}

uint64_t sub_22F8F4BB8()
{
  return sub_22F8F145C();
}

void sub_22F8F4BC0()
{
  sub_22F8F1558();
}

uint64_t sub_22F8F4BC8()
{
  return sub_22F8F167C();
}

uint64_t sub_22F8F4BD0()
{
  return sub_22F8F1794();
}

uint64_t sub_22F8F4BD8()
{
  return sub_22F8F1948();
}

uint64_t sub_22F8F4BE0()
{
  return sub_22F8F1A4C();
}

uint64_t sub_22F8F4BE8()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22F8F4C84(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;

  v4 = v1[3];
  v12 = v1[2];
  v5 = v1[4];
  v6 = v1[5];
  v7 = v1[6];
  v8 = v1[7];
  v9 = v1[8];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_22F87B58C;
  return sub_22F8F1C1C(a1, v12, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_22F8F4DC4()
{
  uint64_t v0;

  return sub_22F8EF4AC(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_22F8F4DD0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22F8F4DF4()
{
  return sub_22F8EF944();
}

uint64_t sub_22F8F4DFC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22F8F4E24(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  uint64_t v8;

  v2 = sub_22F98D8A0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == *MEMORY[0x24BDE4768]
    || v6 == *MEMORY[0x24BDE4770]
    || v6 == *MEMORY[0x24BDE4750]
    || v6 == *MEMORY[0x24BDE4758]
    || v6 == *MEMORY[0x24BDE4760])
  {
    return sub_22F932EEC(0);
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return 0;
}

uint64_t sub_22F8F4FA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1E458);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22F8F4FF0()
{
  return sub_22F8EEFA0();
}

uint64_t sub_22F8F500C@<X0>(_BYTE *a1@<X8>)
{
  return sub_22F8F4638(a1);
}

uint64_t sub_22F8F5030()
{
  return sub_22F878814();
}

_QWORD *sub_22F8F5054(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11]);
  return a1;
}

uint64_t sub_22F8F50A8()
{
  return sub_22F8EFE5C();
}

void *sub_22F8F50C0()
{
  return sub_22F8EF8E4();
}

uint64_t sub_22F8F50C8()
{
  return sub_22F8EFDA4();
}

uint64_t sub_22F8F50E0()
{
  return sub_22F8EF000();
}

uint64_t sub_22F8F5114@<X0>(_BYTE *a1@<X8>)
{
  return sub_22F8F4638(a1);
}

uint64_t sub_22F8F5138()
{
  return sub_22F878814();
}

void sub_22F8F515C()
{
  uint64_t v0;

  (*(void (**)(void))(v0 + 16))();
  UIAccessibilityPostNotification(*MEMORY[0x24BEBDEC8], 0);
}

uint64_t sub_22F8F518C@<X0>(_BYTE *a1@<X8>)
{
  return sub_22F8F4638(a1);
}

uint64_t sub_22F8F51B0()
{
  return sub_22F878814();
}

uint64_t sub_22F8F51D4()
{
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

id sub_22F8F5200()
{
  uint64_t v0;

  return sub_22F8EED80(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_BYTE *)(v0 + 32));
}

uint64_t sub_22F8F520C@<X0>(_BYTE *a1@<X8>)
{
  return sub_22F8F4638(a1);
}

uint64_t sub_22F8F5230()
{
  return sub_22F878814();
}

uint64_t sub_22F8F525C()
{
  return objectdestroy_4Tm_0();
}

uint64_t sub_22F8F5264(uint64_t a1)
{
  double *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  _QWORD *v8;

  v4 = *((_QWORD *)v1 + 2);
  v5 = *((_QWORD *)v1 + 3);
  v6 = *((_QWORD *)v1 + 4);
  v7 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_22F87B58C;
  return sub_22F8EDA90(v7, a1, v4, v5, v6);
}

uint64_t sub_22F8F52E0@<X0>(_BYTE *a1@<X8>)
{
  return sub_22F8F4638(a1);
}

uint64_t sub_22F8F5304()
{
  return sub_22F878814();
}

uint64_t sub_22F8F5328()
{
  return sub_22F8ED2A0();
}

uint64_t sub_22F8F5330()
{
  return objectdestroy_4Tm_0();
}

uint64_t sub_22F8F5338(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_22F87B58C;
  return sub_22F8ED3B8(a1, v4, v5, v6);
}

unint64_t sub_22F8F53A4()
{
  unint64_t result;

  result = qword_255E24210;
  if (!qword_255E24210)
  {
    result = MEMORY[0x2348A6784](MEMORY[0x24BEE0D18], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_255E24210);
  }
  return result;
}

uint64_t sub_22F8F53E8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_22F87C28C(a1, a2);
  return a1;
}

uint64_t sub_22F8F53FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_22F98D864();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_22F8F547C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_22F98D864() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_22F8EB488(*(_QWORD *)(v0 + 16), v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_22F8F54D8(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for AudioElement(a2, a1);
  return a2;
}

uint64_t sub_22F8F5514(uint64_t a1)
{
  destroy for AudioElement(a1);
  return a1;
}

uint64_t sub_22F8F5550()
{
  return objectdestroy_4Tm_0();
}

uint64_t objectdestroy_4Tm_0()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t storeEnumTagSinglePayload for IdentityViewModel.ValidationMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_22F8F55DC + 4 * byte_22F996AD8[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_22F8F5610 + 4 * byte_22F996AD3[v4]))();
}

uint64_t sub_22F8F5610(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22F8F5618(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22F8F5620);
  return result;
}

uint64_t sub_22F8F562C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22F8F5634);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_22F8F5638(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22F8F5640(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IdentityViewModel.ValidationMode()
{
  return &type metadata for IdentityViewModel.ValidationMode;
}

uint64_t storeEnumTagSinglePayload for IdentityViewModel.QRCodePayloadInvalid(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22F8F56A8 + 4 * byte_22F996AE2[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22F8F56DC + 4 * byte_22F996ADD[v4]))();
}

uint64_t sub_22F8F56DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22F8F56E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22F8F56ECLL);
  return result;
}

uint64_t sub_22F8F56F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22F8F5700);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22F8F5704(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22F8F570C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IdentityViewModel.QRCodePayloadInvalid()
{
  return &type metadata for IdentityViewModel.QRCodePayloadInvalid;
}

unint64_t sub_22F8F572C()
{
  unint64_t result;

  result = qword_255E24228;
  if (!qword_255E24228)
  {
    result = MEMORY[0x2348A6784](&unk_22F997168, &type metadata for IdentityViewModel.QRCodePayloadInvalid);
    atomic_store(result, (unint64_t *)&qword_255E24228);
  }
  return result;
}

unint64_t sub_22F8F5774()
{
  unint64_t result;

  result = qword_255E24230;
  if (!qword_255E24230)
  {
    result = MEMORY[0x2348A6784](&unk_22F9971D0, &type metadata for IdentityViewModel.ValidationMode);
    atomic_store(result, (unint64_t *)&qword_255E24230);
  }
  return result;
}

uint64_t sub_22F8F5870@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t KeyPath;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  char v35;
  char *v36;
  uint64_t v37;
  double v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  unint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;

  v2 = v1;
  v81 = a1;
  v3 = sub_22F98E284();
  v82 = *(_QWORD *)(v3 - 8);
  v83 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v80 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_22F98E11C();
  v78 = *(_QWORD *)(v5 - 8);
  v79 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v77 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_22F98E350();
  v75 = *(_QWORD *)(v7 - 8);
  v76 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v74 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E24388);
  v59 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60);
  v10 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E24390);
  MEMORY[0x24BDAC7A8](v57);
  v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E24398);
  MEMORY[0x24BDAC7A8](v58);
  v14 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E243A0);
  MEMORY[0x24BDAC7A8](v64);
  v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E243A8);
  MEMORY[0x24BDAC7A8](v63);
  v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E243B0);
  MEMORY[0x24BDAC7A8](v62);
  v61 = (uint64_t)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E243B8);
  MEMORY[0x24BDAC7A8](v67);
  v65 = (uint64_t)&v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E243C0);
  v68 = *(_QWORD *)(v69 - 8);
  MEMORY[0x24BDAC7A8](v69);
  v66 = (char *)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E243C8);
  v22 = MEMORY[0x24BDAC7A8](v73);
  v70 = (char *)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v71 = (char *)&v56 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v72 = (char *)&v56 - v26;
  sub_22F8F7524(v1, (uint64_t)&v85);
  v27 = swift_allocObject();
  sub_22F8F7584((uint64_t)&v85, v27 + 16);
  v84 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255E243D0);
  sub_22F8F75DC();
  sub_22F98E920();
  v28 = *(_BYTE *)(v1 + 8);
  KeyPath = swift_getKeyPath();
  v30 = swift_allocObject();
  *(_BYTE *)(v30 + 16) = v28;
  v31 = v59;
  v32 = v60;
  (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v12, v10, v60);
  v33 = (uint64_t *)&v12[*(int *)(v57 + 36)];
  *v33 = KeyPath;
  v33[1] = (uint64_t)sub_22F8BB4B4;
  v33[2] = v30;
  (*(void (**)(char *, uint64_t))(v31 + 8))(v10, v32);
  LOBYTE(KeyPath) = *(_BYTE *)(v2 + 8);
  sub_22F87ABDC((uint64_t)v12, (uint64_t)v14, &qword_255E24390);
  v14[*(int *)(v58 + 36)] = (KeyPath & 1) == 0;
  sub_22F87AC20((uint64_t)v12, &qword_255E24390);
  if (qword_255E1DBD0 != -1)
    swift_once();
  v34 = qword_255E29768;
  swift_retain();
  v35 = sub_22F98E41C();
  sub_22F87ABDC((uint64_t)v14, (uint64_t)v16, &qword_255E24398);
  v36 = &v16[*(int *)(v64 + 36)];
  *(_QWORD *)v36 = v34;
  v36[8] = v35;
  sub_22F87AC20((uint64_t)v14, &qword_255E24398);
  sub_22F87ABDC((uint64_t)v16, (uint64_t)v18, &qword_255E243A0);
  *(_WORD *)&v18[*(int *)(v63 + 36)] = 256;
  sub_22F87AC20((uint64_t)v16, &qword_255E243A0);
  v37 = v61;
  sub_22F87ABDC((uint64_t)v18, v61, &qword_255E243A8);
  *(_BYTE *)(v37 + *(int *)(v62 + 36)) = 0;
  sub_22F87AC20((uint64_t)v18, &qword_255E243A8);
  v38 = *(double *)&qword_255E270F0 * 88.0;
  v39 = *(double *)&qword_255E270F0 * 88.0;
  v40 = sub_22F98EA88();
  v41 = v65;
  sub_22F8FAD20(0.0, 1, 0.0, 1, v39, 0, 0.0, 1, v65, 0.0, 1, v38, 0, v40, v42);
  sub_22F87AC20(v37, &qword_255E243B0);
  v43 = v74;
  sub_22F98E32C();
  v44 = sub_22F8F7784();
  v45 = v66;
  v46 = v67;
  sub_22F98E6D4();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v43, v76);
  sub_22F87AC20(v41, &qword_255E243B8);
  v47 = v77;
  sub_22F98E104();
  v85 = v46;
  v86 = v44;
  swift_getOpaqueTypeConformance2();
  v48 = (uint64_t)v70;
  v49 = v69;
  sub_22F98E6F8();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v47, v79);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v45, v49);
  v85 = sub_22F8F65F4();
  v86 = v50;
  sub_22F863BF8();
  v51 = (uint64_t)v71;
  sub_22F98DE88();
  swift_bridgeObjectRelease();
  sub_22F87AC20(v48, &qword_255E243C8);
  sub_22F8F66E0();
  v52 = (uint64_t)v72;
  sub_22F98DEB8();
  swift_bridgeObjectRelease();
  sub_22F87AC20(v51, &qword_255E243C8);
  sub_22F8F7524(v2, (uint64_t)&v85);
  v53 = swift_allocObject();
  sub_22F8F7584((uint64_t)&v85, v53 + 16);
  v54 = v80;
  sub_22F98E278();
  sub_22F98DEA0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v54, v83);
  return sub_22F87AC20(v52, &qword_255E243C8);
}

unint64_t sub_22F8F60A4(_QWORD *a1)
{
  unint64_t result;
  uint64_t v3;
  uint64_t ObjectType;
  unint64_t v5;
  void (*v6)(unint64_t, uint64_t, uint64_t);

  result = MEMORY[0x2348A68F8](a1 + 2);
  if (result)
  {
    v3 = a1[3];
    ObjectType = swift_getObjectType();
    v5 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC19ContactlessReaderUI14PINButtonModel_action);
    v6 = *(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 16);
    sub_22F8712EC(v5);
    v6(v5, ObjectType, v3);
    swift_unknownObjectRelease();
    return sub_22F8F7ABC(v5);
  }
  return result;
}

uint64_t sub_22F8F613C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[32];
  char v21;
  _BYTE v22[184];
  _BYTE __dst[320];
  char v24;
  _BYTE v25[328];
  _BYTE v26[328];
  uint64_t v27;
  uint64_t v28;
  char v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  _OWORD __src[20];

  type metadata accessor for PINDigit(0);
  v4 = swift_dynamicCastClass();
  if (v4)
  {
    v5 = v4;
    swift_retain();
    v6 = sub_22F98E128();
    sub_22F8F68A0(v5, a1, (uint64_t)&v11);
    *(_OWORD *)&v22[135] = v19;
    *(_OWORD *)&v22[151] = *(_OWORD *)v20;
    *(_OWORD *)&v22[167] = *(_OWORD *)&v20[16];
    v22[183] = v21;
    *(_OWORD *)&v22[71] = v15;
    *(_OWORD *)&v22[87] = v16;
    *(_OWORD *)&v22[103] = v17;
    *(_OWORD *)&v22[119] = v18;
    *(_OWORD *)&v22[7] = v11;
    *(_OWORD *)&v22[23] = v12;
    *(_OWORD *)&v22[39] = v13;
    *(_OWORD *)&v22[55] = v14;
    v38 = *(_OWORD *)&v22[128];
    v39 = *(_OWORD *)&v22[144];
    v40 = *(_OWORD *)&v22[160];
    v34 = *(_OWORD *)&v22[64];
    v35 = *(_OWORD *)&v22[80];
    v36 = *(_OWORD *)&v22[96];
    v37 = *(_OWORD *)&v22[112];
    v30 = *(_OWORD *)v22;
    v31 = *(_OWORD *)&v22[16];
    v32 = *(_OWORD *)&v22[32];
    v24 = 0;
    v27 = v6;
    v28 = 0;
    v29 = 0;
    v41 = *(_QWORD *)&v22[176];
    v33 = *(_OWORD *)&v22[48];
    sub_22F98EA88();
    sub_22F8FAD84(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, __src, 0.0, 1, INFINITY, 0);
    sub_22F8F7C54((uint64_t)&v11);
    memcpy(__dst, __src, sizeof(__dst));
    memcpy(v25, __dst, 0x140uLL);
    sub_22F8F7D4C((uint64_t)v25);
    sub_22F87B2B4((uint64_t)v25, (uint64_t)v26, &qword_255E24468);
    sub_22F8F7D54((uint64_t)__dst);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E243F8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E24418);
    sub_22F8F76EC(&qword_255E243F0, &qword_255E243F8, &qword_255E24400, &qword_255E24408);
    sub_22F8F76EC(&qword_255E24410, &qword_255E24418, &qword_255E24420, &qword_255E24428);
    sub_22F98E1E8();
    swift_release();
    sub_22F8F7E4C((uint64_t)__dst);
  }
  else
  {
    type metadata accessor for PINImageButton(0);
    v7 = swift_dynamicCastClass();
    if (!v7)
    {
      sub_22F8F7ACC((uint64_t)v26);
      goto LABEL_6;
    }
    v8 = v7;
    swift_retain();
    v9 = sub_22F98E128();
    sub_22F8F7104(v8, a1, (uint64_t)&v11);
    *(_OWORD *)&v22[71] = v15;
    *(_OWORD *)&v22[55] = v14;
    *(_OWORD *)&v22[119] = v18;
    *(_OWORD *)&v22[135] = v19;
    *(_OWORD *)&v22[151] = *(_OWORD *)v20;
    *(_OWORD *)&v22[160] = *(_OWORD *)&v20[9];
    *(_OWORD *)&v22[87] = v16;
    *(_OWORD *)&v22[103] = v17;
    *(_OWORD *)&v22[7] = v11;
    *(_OWORD *)&v22[23] = v12;
    *(_OWORD *)&v22[39] = v13;
    v37 = *(_OWORD *)&v22[112];
    v38 = *(_OWORD *)&v22[128];
    v39 = *(_OWORD *)&v22[144];
    v40 = *(_OWORD *)&v20[9];
    v33 = *(_OWORD *)&v22[48];
    v34 = *(_OWORD *)&v22[64];
    v35 = *(_OWORD *)&v22[80];
    v36 = *(_OWORD *)&v22[96];
    v30 = *(_OWORD *)v22;
    v31 = *(_OWORD *)&v22[16];
    v24 = 1;
    v27 = v9;
    v28 = 0;
    v29 = 1;
    v32 = *(_OWORD *)&v22[32];
    sub_22F98EA88();
    sub_22F8FAF50(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)__src, 0.0, 1, INFINITY, 0);
    sub_22F8F7B04((uint64_t)&v11);
    memcpy(__dst, __src, 0x138uLL);
    memcpy(v25, __dst, 0x138uLL);
    sub_22F8F7B70((uint64_t)v25);
    sub_22F87B2B4((uint64_t)v25, (uint64_t)v26, &qword_255E24468);
    sub_22F8F7B7C((uint64_t)__dst);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E243F8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255E24418);
    sub_22F8F76EC(&qword_255E243F0, &qword_255E243F8, &qword_255E24400, &qword_255E24408);
    sub_22F8F76EC(&qword_255E24410, &qword_255E24418, &qword_255E24420, &qword_255E24428);
    sub_22F98E1E8();
    swift_release();
    sub_22F8F7BE8((uint64_t)__dst);
  }
  memcpy(v26, __src, 0x141uLL);
  nullsub_1(v26);
LABEL_6:
  sub_22F87B2B4((uint64_t)v26, (uint64_t)__src, &qword_255E243D0);
  return sub_22F87B2B4((uint64_t)__src, a2, &qword_255E243D0);
}

uint64_t sub_22F8F65F4()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*v0 + OBJC_IVAR____TtC19ContactlessReaderUI14PINButtonModel_action);
  if (v1)
  {
    if (v1 == 1 || v1 == 2)
    {
      return sub_22F932EEC(0);
    }
    else
    {
      swift_bridgeObjectRetain();
      v2 = sub_22F932EEC(0);
      sub_22F8F7ABC(v1);
      return v2;
    }
  }
  return v1;
}

uint64_t sub_22F8F66E0()
{
  _QWORD *v0;
  uint64_t (*v1)(void);
  char v2;
  unint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = (uint64_t (*)(void))sub_22F98D9FC();
  v2 = v1();
  swift_release();
  if ((v2 & 1) == 0)
    return 0;
  v3 = *(_QWORD *)(*v0 + OBJC_IVAR____TtC19ContactlessReaderUI14PINButtonModel_action);
  switch(v3)
  {
    case 0uLL:
      return 0;
    case 1uLL:
      return 0xD000000000000013;
    case 2uLL:
      return 0xD000000000000011;
  }
  type metadata accessor for PINDigit(0);
  result = swift_dynamicCastClass();
  if (result)
  {
    v5 = result;
    sub_22F8712EC(v3);
    swift_retain();
    sub_22F98F31C();
    swift_bridgeObjectRelease();
    v6 = *(_QWORD *)(v5 + OBJC_IVAR____TtC19ContactlessReaderUI8PINDigit_stringMasker + 24);
    v7 = *(_QWORD *)(v5 + OBJC_IVAR____TtC19ContactlessReaderUI8PINDigit_stringMasker + 32);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v5 + OBJC_IVAR____TtC19ContactlessReaderUI8PINDigit_stringMasker), v6);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v5 + OBJC_IVAR____TtC19ContactlessReaderUI8PINDigit_maskedLabel), v6, v7);
    sub_22F98EE9C();
    swift_release();
    swift_bridgeObjectRelease();
    sub_22F8F7ABC(v3);
    return 0xD000000000000010;
  }
  return result;
}

uint64_t sub_22F8F6850(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t ObjectType;

  result = MEMORY[0x2348A68F8](a1 + 16);
  if (result)
  {
    v3 = *(_QWORD *)(a1 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(ObjectType, v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_22F8F68A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t KeyPath;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  char v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  unsigned __int8 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  void (*v96)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1FFE8);
  MEMORY[0x24BDAC7A8](v6);
  v102 = (char *)&v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ContactlessReaderUI8PINDigit_maskedText);
  v100 = v8;
  if (!v8)
    goto LABEL_6;
  v9 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ContactlessReaderUI8PINDigit_stringMasker + 24);
  v10 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ContactlessReaderUI8PINDigit_stringMasker + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + OBJC_IVAR____TtC19ContactlessReaderUI8PINDigit_stringMasker), v9);
  v109 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v8, v9, v10);
  v110 = v11;
  v107 = 95;
  v108 = 0xE100000000000000;
  v105 = 0;
  v106 = 0xE000000000000000;
  sub_22F863BF8();
  v12 = sub_22F98F22C();
  v14 = v13;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0)
    v15 = v12 & 0xFFFFFFFFFFFFLL;
  if (v15)
  {
    v95 = 0xC000000000000000;
    v94 = 0x4008000000000000;
  }
  else
  {
LABEL_6:
    v94 = 0;
    v95 = 0;
  }
  v16 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ContactlessReaderUI8PINDigit_stringMasker + 24);
  v17 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ContactlessReaderUI8PINDigit_stringMasker + 32);
  v98 = (_QWORD *)(a1 + OBJC_IVAR____TtC19ContactlessReaderUI8PINDigit_stringMasker);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + OBJC_IVAR____TtC19ContactlessReaderUI8PINDigit_stringMasker), v16);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v17 + 32))(*(_QWORD *)(a1 + OBJC_IVAR____TtC19ContactlessReaderUI8PINDigit_maskedLabel), v16, v17);
  v97 = a2;
  if (*(_BYTE *)(a2 + 8) == 1)
  {
    sub_22F98E800();
  }
  else
  {
    if (qword_255E1DBD8 != -1)
      swift_once();
    swift_retain();
  }
  v18 = sub_22F98E590();
  v20 = v19;
  v22 = v21;
  swift_bridgeObjectRelease();
  swift_release();
  if (qword_255E1DBD8 != -1)
    swift_once();
  v109 = qword_255E29770;
  swift_retain();
  v23 = v22 & 1;
  v24 = sub_22F98E59C();
  v26 = v25;
  v28 = v27 & 1;
  sub_22F87E294(v18, v20, v23);
  swift_release();
  swift_bridgeObjectRelease();
  sub_22F98E4D0();
  v29 = sub_22F98E4A0();
  v30 = (uint64_t)v102;
  v96 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56);
  v96(v102, 1, 1, v29);
  sub_22F98E4DC();
  sub_22F87AC20(v30, &qword_255E1FFE8);
  v31 = sub_22F98E5A8();
  v33 = v32;
  LODWORD(v99) = v34;
  v36 = v35;
  swift_release();
  sub_22F87E294(v24, v26, v28);
  swift_bridgeObjectRelease();
  v37 = sub_22F98E41C();
  v38 = v100;
  v103 = v33;
  v104 = v36;
  v101 = v31;
  if (v100)
  {
    HIDWORD(v93) = v37;
    v39 = v98[3];
    v40 = v98[4];
    __swift_project_boxed_opaque_existential_1(v98, v39);
    v109 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40 + 32))(v38, v39, v40);
    v110 = v41;
    v107 = 95;
    v108 = 0xE100000000000000;
    v105 = 0;
    v106 = 0xE000000000000000;
    sub_22F863BF8();
    v42 = sub_22F98F22C();
    v44 = v43;
    swift_bridgeObjectRelease();
    v45 = HIBYTE(v44) & 0xF;
    if ((v44 & 0x2000000000000000) == 0)
      v45 = v42 & 0xFFFFFFFFFFFFLL;
    if (v45)
    {
      if (*(_BYTE *)(v97 + 8) == 1)
      {
        sub_22F98E800();
        v46 = (_QWORD *)&unk_255E29000;
      }
      else
      {
        v46 = &unk_255E29000;
        swift_retain();
      }
      v58 = sub_22F98E590();
      v60 = v59;
      v62 = v61;
      swift_bridgeObjectRelease();
      swift_release();
      v63 = v62 & 1;
      v109 = v46[238];
      swift_retain();
      v64 = sub_22F98E59C();
      v66 = v65;
      v100 = v67;
      v69 = v68 & 1;
      sub_22F87E294(v58, v60, v63);
      swift_release();
      swift_bridgeObjectRelease();
      sub_22F98E4D0();
      v70 = (uint64_t)v102;
      v96(v102, 1, 1, v29);
      sub_22F98E4DC();
      sub_22F87AC20(v70, &qword_255E1FFE8);
      v71 = v64;
      v72 = sub_22F98E5A8();
      v74 = v73;
      LOBYTE(v70) = v75;
      v102 = v76;
      swift_release();
      LOBYTE(v64) = v70 & 1;
      sub_22F87E294(v71, v66, v69);
      swift_bridgeObjectRelease();
      v96 = (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_22F98E5B4();
      v47 = v77;
      v79 = v78;
      v48 = (_QWORD *)(v80 & 1);
      sub_22F87E294(v72, v74, v64);
      swift_bridgeObjectRelease();
      KeyPath = swift_getKeyPath();
      v81 = sub_22F98E434();
      sub_22F98DBF4();
      v49 = v79;
      v53 = v82;
      v54 = v83;
      v55 = v84;
      v56 = v85;
      v52 = v81;
      v51 = 0x3FD999999999999ALL;
      v31 = v101;
    }
    else
    {
      swift_bridgeObjectRelease();
      v96 = 0;
      v47 = 0;
      v48 = 0;
      v49 = 0;
      KeyPath = 0;
      v51 = 0;
      v52 = 0;
      v53 = 0;
      v54 = 0;
      v55 = 0;
      v56 = 0;
    }
    v57 = v99;
    LOBYTE(v37) = BYTE4(v93);
  }
  else
  {
    v96 = 0;
    v47 = 0;
    v48 = 0;
    v49 = 0;
    KeyPath = 0;
    v51 = 0;
    v52 = 0;
    v53 = 0;
    v54 = 0;
    v55 = 0;
    v56 = 0;
    v57 = v99;
  }
  v97 = v49;
  v98 = v48;
  v86 = v57 & 1;
  LOBYTE(v109) = v86;
  LOBYTE(v107) = 0;
  v87 = v103;
  v88 = v104;
  *(_QWORD *)a3 = v31;
  *(_QWORD *)(a3 + 8) = v87;
  *(_BYTE *)(a3 + 16) = v86;
  LODWORD(v102) = v86;
  *(_QWORD *)(a3 + 24) = v88;
  *(_BYTE *)(a3 + 32) = v37;
  *(_QWORD *)(a3 + 40) = v94;
  *(_QWORD *)(a3 + 48) = 0;
  *(_QWORD *)(a3 + 56) = v95;
  *(_QWORD *)(a3 + 64) = 0;
  *(_BYTE *)(a3 + 72) = 0;
  v89 = (uint64_t)v96;
  *(_QWORD *)(a3 + 80) = 0x3FF0000000000000;
  *(_QWORD *)(a3 + 88) = v89;
  *(_QWORD *)(a3 + 96) = v47;
  *(_QWORD *)(a3 + 104) = v48;
  *(_QWORD *)(a3 + 112) = v49;
  *(_QWORD *)(a3 + 120) = KeyPath;
  *(_QWORD *)(a3 + 128) = v51;
  *(_QWORD *)(a3 + 136) = v52;
  *(_QWORD *)(a3 + 144) = v53;
  *(_QWORD *)(a3 + 152) = v54;
  *(_QWORD *)(a3 + 160) = v55;
  *(_QWORD *)(a3 + 168) = v56;
  *(_BYTE *)(a3 + 176) = 0;
  v99 = v47;
  v100 = KeyPath;
  sub_22F8AB8E0(v31, v87, v86);
  swift_bridgeObjectRetain();
  v90 = (char)v98;
  v91 = v97;
  sub_22F8F7E10(v89, v47, (char)v98, v97);
  sub_22F8F7D10(v89, v99, v90, v91);
  sub_22F87E294(v101, v103, (char)v102);
  return swift_bridgeObjectRelease();
}

uint64_t sub_22F8F7104@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t result;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[8];
  char v37;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255E1FFE8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = &v36[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_bridgeObjectRetain();
  v9 = sub_22F98E86C();
  sub_22F98EB6C();
  v11 = v10;
  v13 = v12;
  v14 = sub_22F98E4A0();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v8, 1, 1, v14);
  v15 = sub_22F98E4DC();
  sub_22F87AC20((uint64_t)v8, &qword_255E1FFE8);
  KeyPath = swift_getKeyPath();
  if (*(_BYTE *)(a2 + 8) == 1)
  {
    v17 = sub_22F98E800();
  }
  else
  {
    v17 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ContactlessReaderUI14PINImageButton_color);
    swift_retain();
  }
  v18 = swift_getKeyPath();
  v19 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ContactlessReaderUI14PINImageButton_color);
  swift_retain();
  v20 = sub_22F98E440();
  sub_22F98DBF4();
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v36[0] = 0;
  v29 = sub_22F98E44C();
  result = sub_22F98DBF4();
  v31 = v36[0];
  v37 = 0;
  *(_QWORD *)a3 = v9;
  *(int64x2_t *)(a3 + 8) = vdupq_n_s64(0x3FEC8B4395810625uLL);
  *(_QWORD *)(a3 + 24) = v11;
  *(_QWORD *)(a3 + 32) = v13;
  *(_QWORD *)(a3 + 40) = KeyPath;
  *(_QWORD *)(a3 + 48) = v15;
  *(_QWORD *)(a3 + 56) = v18;
  *(_QWORD *)(a3 + 64) = v17;
  *(_QWORD *)(a3 + 72) = v19;
  *(_BYTE *)(a3 + 80) = v20;
  *(_QWORD *)(a3 + 88) = v22;
  *(_QWORD *)(a3 + 96) = v24;
  *(_QWORD *)(a3 + 104) = v26;
  *(_QWORD *)(a3 + 112) = v28;
  *(_BYTE *)(a3 + 120) = v31;
  *(_BYTE *)(a3 + 128) = v29;
  *(_QWORD *)(a3 + 136) = v32;
  *(_QWORD *)(a3 + 144) = v33;
  *(_QWORD *)(a3 + 152) = v34;
  *(_QWORD *)(a3 + 160) = v35;
  *(_BYTE *)(a3 + 168) = v37;
  return result;
}

uint64_t type metadata accessor for $s19ContactlessReaderUI0024PINButtonViewswift_ynAHffMX110_0_33_CE3BC02D3BCD858588B86816BF5DF0F6Ll7PreviewfMf_15PreviewRegistryfMu_.Handler()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for $s19ContactlessReaderUI0024PINButtonViewswift_ynAHffMX137_0_33_CE3BC02D3BCD858588B86816BF5DF0F6Ll7PreviewfMf0_15PreviewRegistryfMu_.Handler()
{
  return objc_opt_self();
}

uint64_t destroy for PINButtonView()
{
  swift_release();
  return swift_unknownObjectWeakDestroy();
}

uint64_t initializeWithCopy for PINButtonView(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  swift_retain();
  swift_unknownObjectWeakCopyInit();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

uint64_t assignWithCopy for PINButtonView(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  swift_unknownObjectWeakCopyAssign();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

uint64_t initializeWithTake for PINButtonView(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  swift_unknownObjectWeakTakeInit();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for PINButtonView(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  swift_unknownObjectWeakTakeAssign();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for PINButtonView()
{
  return &type metadata for PINButtonView;
}

uint64_t sub_22F8F7514()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22F8F7524(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a2 = *(_QWORD *)a1;
  *(_BYTE *)(a2 + 8) = *(_BYTE *)(a1 + 8);
  swift_retain();
  swift_unknownObjectWeakCopyInit();
  *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 24);
  return a2;
}

uint64_t sub_22F8F7584(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a2 = *(_QWORD *)a1;
  *(_BYTE *)(a2 + 8) = *(_BYTE *)(a1 + 8);
  swift_unknownObjectWeakTakeInit();
  *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 24);
  return a2;
}

unint64_t sub_22F8F75CC()
{
  uint64_t v0;

  return sub_22F8F60A4((_QWORD *)(v0 + 16));
}

uint64_t sub_22F8F75D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_22F8F613C(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_22F8F75DC()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_255E243D8;
  if (!qword_255E243D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E243D0);
    v2 = sub_22F8F7640();
    result = MEMORY[0x2348A6784](MEMORY[0x24BDF5578], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_255E243D8);
  }
  return result;
}

unint64_t sub_22F8F7640()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255E243E0;
  if (!qword_255E243E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255E243E8);
    v2[0] = sub_22F8F76EC(&qword_255E243F0, &qword_255E243F8, &qword_255E24400, &qword_255E24408);
    v2[1] = sub_22F8F76EC(&qword_255E24410, &qword_255E24418, &qword_255E24420, &qword_255E24428);
    result = MEMORY[0x2348A6784](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255E243E0);
  }
  return result;
}

