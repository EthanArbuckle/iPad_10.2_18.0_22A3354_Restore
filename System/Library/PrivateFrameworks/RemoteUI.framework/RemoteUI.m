uint64_t RemoteUISubheaderTextColor()
{
  return objc_msgSend(MEMORY[0x24BEBD4B8], "secondaryLabelColor");
}

uint64_t RemoteUIHeaderTextColor()
{
  return objc_msgSend(MEMORY[0x24BEBD4B8], "secondaryLabelColor");
}

uint64_t RemoteUIFooterTextColor()
{
  return objc_msgSend(MEMORY[0x24BEBD4B8], "secondaryLabelColor");
}

uint64_t RemoteUIFooterFont()
{
  return objc_msgSend(MEMORY[0x24BEBB520], "_preferredFontForTextStyle:variant:", *MEMORY[0x24BEBE1F0], 256);
}

uint64_t RemoteUIDetailHeaderTextColor()
{
  return objc_msgSend(MEMORY[0x24BEBD4B8], "colorWithWhite:alpha:", 0.5, 1.0);
}

void sub_209E901C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_209E903EC(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_209E909D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  id *v17;
  uint64_t v18;

  objc_destroyWeak(v17);
  _Block_object_dispose(&a17, 8);
  objc_destroyWeak((id *)(v18 - 56));
  _Unwind_Resume(a1);
}

void sub_209E90C5C(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

JSValueRef RUIJSElement_getProperty(const OpaqueJSContext *a1, JSObjectRef object, OpaqueJSString *a3)
{
  void *v5;
  __CFString *v6;
  uint64_t v7;
  void *v8;
  JSValueRef Boolean;
  void *v10;
  __CFString *v11;
  __CFString *v12;
  NSObject *v13;
  int v15;
  __CFString *v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  JSObjectGetPrivate(object);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
    goto LABEL_19;
  v6 = (__CFString *)JSStringCopyCFString(0, a3);
  if (-[__CFString isEqualToString:](v6, "isEqualToString:", CFSTR("identifier")))
  {
    objc_msgSend(v5, "identifier");
    v7 = objc_claimAutoreleasedReturnValue();
LABEL_8:
    v10 = (void *)v7;
    v11 = &stru_24C29B280;
    if (v7)
      v11 = (__CFString *)v7;
    v12 = v11;

    Boolean = RUIMakeJSValueFromString(a1, v12);
    goto LABEL_11;
  }
  if (!-[__CFString isEqualToString:](v6, "isEqualToString:", CFSTR("page")))
  {
    if (-[__CFString isEqualToString:](v6, "isEqualToString:", CFSTR("body")))
    {
      objc_msgSend(v5, "body");
      v7 = objc_claimAutoreleasedReturnValue();
      goto LABEL_8;
    }
    if (-[__CFString isEqualToString:](v6, "isEqualToString:", CFSTR("enabled")))
    {
      Boolean = JSValueMakeBoolean(a1, objc_msgSend(v5, "enabled"));
      goto LABEL_11;
    }
    if (_isInternalInstall())
    {
      _RUILoggingFacility();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        v15 = 138412290;
        v16 = v6;
        _os_log_impl(&dword_209E87000, v13, OS_LOG_TYPE_DEFAULT, "Not allowed to fetch element property '%@'", (uint8_t *)&v15, 0xCu);
      }

    }
LABEL_19:
    Boolean = JSValueMakeUndefined(a1);
    goto LABEL_20;
  }
  objc_msgSend(v5, "pageElement");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  Boolean = (JSValueRef)objc_msgSend(v8, "JSValueForContext:", a1);

LABEL_11:
LABEL_20:

  return Boolean;
}

uint64_t RUIJSElement_setProperty(const OpaqueJSContext *a1, JSObjectRef object, OpaqueJSString *a3, const OpaqueJSValue *a4)
{
  void *v7;
  __CFString *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  NSObject *v12;
  const char *v13;
  NSObject *v14;
  uint32_t v15;
  int v17;
  __CFString *v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  JSObjectGetPrivate(object);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
    goto LABEL_21;
  v8 = (__CFString *)JSStringCopyCFString(0, a3);
  if (!-[__CFString isEqualToString:](v8, "isEqualToString:", CFSTR("body")))
  {
    if (-[__CFString isEqualToString:](v8, "isEqualToString:", CFSTR("enabled")))
    {
      if (JSValueIsBoolean(a1, a4))
      {
        objc_msgSend(v7, "setEnabled:", JSValueToBoolean(a1, a4));
      }
      else if (_isInternalInstall())
      {
        _RUILoggingFacility();
        v12 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
        {
          LOWORD(v17) = 0;
          v13 = "element.enabled must be BOOLean";
          goto LABEL_17;
        }
LABEL_19:

      }
    }
    else if (_isInternalInstall())
    {
      _RUILoggingFacility();
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        v17 = 138412290;
        v18 = v8;
        v13 = "Not allowed to set element property '%@'";
        v14 = v12;
        v15 = 12;
LABEL_18:
        _os_log_impl(&dword_209E87000, v14, OS_LOG_TYPE_DEFAULT, v13, (uint8_t *)&v17, v15);
        goto LABEL_19;
      }
      goto LABEL_19;
    }
LABEL_20:

LABEL_21:
    v11 = 0;
    goto LABEL_22;
  }
  RUIStringFromJSValue(a1, a4);
  v9 = objc_claimAutoreleasedReturnValue();
  if (!v9)
  {
    if (_isInternalInstall())
    {
      _RUILoggingFacility();
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(v17) = 0;
        v13 = "element.body must be a string";
LABEL_17:
        v14 = v12;
        v15 = 2;
        goto LABEL_18;
      }
      goto LABEL_19;
    }
    goto LABEL_20;
  }
  v10 = (void *)v9;
  objc_msgSend(v7, "setBody:", v9);

  v11 = 1;
LABEL_22:

  return v11;
}

JSValueRef RUIJSElement_activate(const OpaqueJSContext *a1, int a2, JSObjectRef object, uint64_t a4)
{
  NSObject *v5;
  uint8_t v7[16];

  if (!a4)
  {
    JSObjectGetPrivate(object);
    v5 = objc_claimAutoreleasedReturnValue();
    -[NSObject performAction:completion:](v5, "performAction:completion:", 2, 0);
LABEL_6:

    return JSValueMakeUndefined(a1);
  }
  if (_isInternalInstall())
  {
    _RUILoggingFacility();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_209E87000, v5, OS_LOG_TYPE_DEFAULT, "element.activate(): invalid arguments", v7, 2u);
    }
    goto LABEL_6;
  }
  return JSValueMakeUndefined(a1);
}

JSValueRef RUIJSElement_getAttribute(JSContextRef ctx, uint64_t a2, OpaqueJSValue *a3, uint64_t a4, JSValueRef *a5)
{
  OpaqueJSString *v8;
  const __CFAllocator *Default;
  NSObject *v10;
  void *v11;
  void *v12;
  __CFString *v13;
  JSValueRef v14;
  uint8_t v16[16];

  if (a4 == 1 && *a5 && JSValueIsString(ctx, *a5))
  {
    v8 = JSValueToStringCopy(ctx, *a5, 0);
    Default = CFAllocatorGetDefault();
    v10 = JSStringCopyCFString(Default, v8);
    JSStringRelease(v8);
    if (-[NSObject length](v10, "length"))
    {
      JSObjectGetPrivate(a3);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "attributes");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "objectForKeyedSubscript:", v10);
      v13 = (__CFString *)objc_claimAutoreleasedReturnValue();

      v14 = RUIMakeJSValueFromString(ctx, v13);
      return v14;
    }
    goto LABEL_9;
  }
  if (_isInternalInstall())
  {
    _RUILoggingFacility();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_209E87000, v10, OS_LOG_TYPE_DEFAULT, "element.getAttribute(): invalid arguments", v16, 2u);
    }
LABEL_9:

  }
  return JSValueMakeUndefined(ctx);
}

void sub_209E92F90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id getBFFStyleClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getBFFStyleClass_softClass;
  v7 = getBFFStyleClass_softClass;
  if (!getBFFStyleClass_softClass)
  {
    v3[0] = MEMORY[0x24BDAC760];
    v3[1] = 3221225472;
    v3[2] = __getBFFStyleClass_block_invoke;
    v3[3] = &unk_24C297758;
    v3[4] = &v4;
    __getBFFStyleClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_209E94CA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getBFFStyleClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  v3 = 0;
  if (!SetupAssistantUILibraryCore_frameworkLibrary)
  {
    v4 = xmmword_24C297778;
    v5 = 0;
    SetupAssistantUILibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!SetupAssistantUILibraryCore_frameworkLibrary)
    __getBFFStyleClass_block_invoke_cold_1(&v3);
  result = objc_getClass("BFFStyle");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    __getBFFStyleClass_block_invoke_cold_2();
  getBFFStyleClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

JSValueRef RUIJSSection_getProperty(const OpaqueJSContext *a1, JSObjectRef object, OpaqueJSString *a3)
{
  void *v5;
  __CFString *v6;
  void *v7;
  JSValueRef Number;
  void *v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  NSObject *v13;
  int v15;
  __CFString *v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  JSObjectGetPrivate(object);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
    goto LABEL_15;
  v6 = (__CFString *)JSStringCopyCFString(0, a3);
  if (!-[__CFString isEqualToString:](v6, "isEqualToString:", CFSTR("rowCount")))
  {
    if (-[__CFString isEqualToString:](v6, "isEqualToString:", CFSTR("sectionIndex")))
    {
      objc_msgSend(v5, "tableElement");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "sections");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v11 = objc_msgSend(v10, "indexOfObject:", v5);

      if (v11 == 0x7FFFFFFFFFFFFFFFLL)
        v12 = -1;
      else
        v12 = v11;
      Number = JSValueMakeNumber(a1, (double)v12);
      goto LABEL_9;
    }
    if (_isInternalInstall())
    {
      _RUILoggingFacility();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        v15 = 138412290;
        v16 = v6;
        _os_log_impl(&dword_209E87000, v13, OS_LOG_TYPE_DEFAULT, "Not allowed to fetch element property '%@'", (uint8_t *)&v15, 0xCu);
      }

    }
LABEL_15:
    Number = JSValueMakeUndefined(a1);
    goto LABEL_16;
  }
  objc_msgSend(v5, "rows");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  Number = JSValueMakeNumber(a1, (double)(unint64_t)objc_msgSend(v7, "count"));

LABEL_9:
LABEL_16:

  return Number;
}

JSValueRef RUIJSSection_insertRow(const OpaqueJSContext *a1, int a2, JSObjectRef object, uint64_t a4, JSValueRef *a5)
{
  void *v8;
  const OpaqueJSValue *v9;
  const OpaqueJSValue *v10;
  int v11;
  void *v12;
  unint64_t v13;
  JSValueRef Undefined;
  void *v15;
  JSValueRef v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  OpaqueJSString *v21;
  const __CFAllocator *Default;
  __CFString *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  void *v30;
  void *v31;
  NSObject *v32;
  const char *v33;
  NSObject *v34;
  uint32_t v35;
  NSObject *v37;
  NSObject *v38;
  __CFString *v39;
  uint8_t buf[4];
  __CFString *v41;
  uint64_t v42;

  v42 = *MEMORY[0x24BDAC8D0];
  JSObjectGetPrivate(object);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if (a4 != 3
    || !*a5
    || !JSValueIsNumber(a1, *a5)
    || (v9 = a5[1]) == 0
    || !JSValueIsString(a1, v9)
    || (v10 = a5[2]) == 0
    || !JSValueIsObject(a1, v10))
  {
    if (!_isInternalInstall())
      goto LABEL_18;
    _RUILoggingFacility();
    v32 = objc_claimAutoreleasedReturnValue();
    if (!os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
    {
LABEL_17:

      goto LABEL_18;
    }
    *(_WORD *)buf = 0;
    v33 = "section.insertRow(): invalid arguments";
    v34 = v32;
    v35 = 2;
LABEL_16:
    _os_log_impl(&dword_209E87000, v34, OS_LOG_TYPE_DEFAULT, v33, buf, v35);
    goto LABEL_17;
  }
  v11 = (int)JSValueToNumber(a1, *a5, 0);
  objc_msgSend(v8, "rows");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = objc_msgSend(v12, "count");

  if (v11 < 0 || (Undefined = (JSValueRef)v11, v13 < v11))
  {
    if (!_isInternalInstall())
      goto LABEL_18;
    _RUILoggingFacility();
    v32 = objc_claimAutoreleasedReturnValue();
    if (!os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
      goto LABEL_17;
    *(_DWORD *)buf = 67109120;
    LODWORD(v41) = v11;
    v33 = "section.insertRow() invalid row index %i.";
    v34 = v32;
    v35 = 8;
    goto LABEL_16;
  }
  v15 = (void *)MEMORY[0x24BDDA730];
  v16 = a5[2];
  objc_msgSend(MEMORY[0x24BDDA720], "contextWithJSGlobalContextRef:", JSContextGetGlobalContext(a1));
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "valueWithJSValueRef:inContext:", v16, v17);
  v18 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v18, "toDictionary");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v20 = (void *)objc_msgSend(v19, "mutableCopy");

  if (v20)
  {
    v21 = JSValueToStringCopy(a1, a5[1], 0);
    Default = CFAllocatorGetDefault();
    v23 = (__CFString *)JSStringCopyCFString(Default, v21);
    JSStringRelease(v21);
    +[RUIParser tableRowClassForElementName:](RUIParser, "tableRowClassForElementName:", v23);
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    if (v24)
    {
      objc_msgSend(v20, "setObject:forKey:", v24, CFSTR("class"));
      v39 = v23;
      objc_msgSend(v8, "tableElement");
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      +[RUIParser rowWithAttributeDict:delegate:parent:](RUIParser, "rowWithAttributeDict:delegate:parent:", v20, v25, v8);
      v26 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v8, "tableElement");
      v27 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v27, "sections");
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      v29 = objc_msgSend(v28, "indexOfObject:", v8);

      objc_msgSend(v8, "tableElement");
      v30 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x24BDD15D8], "indexPathForRow:inSection:", Undefined, v29);
      v31 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v30, "insertRow:atIndexPath:", v26, v31);

      v23 = v39;
    }
    else
    {
      if (_isInternalInstall())
      {
        _RUILoggingFacility();
        v38 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v38, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412290;
          v41 = v23;
          _os_log_impl(&dword_209E87000, v38, OS_LOG_TYPE_DEFAULT, "section.insertRow() unknown row type %@.", buf, 0xCu);
        }

      }
      Undefined = JSValueMakeUndefined(a1);
    }

    if (!v24)
      goto LABEL_19;
LABEL_18:
    Undefined = JSValueMakeUndefined(a1);
    goto LABEL_19;
  }
  if (_isInternalInstall())
  {
    _RUILoggingFacility();
    v37 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_209E87000, v37, OS_LOG_TYPE_DEFAULT, "section.insertRow() unable to handle attributes dict.", buf, 2u);
    }

  }
  Undefined = JSValueMakeUndefined(a1);

LABEL_19:
  return Undefined;
}

JSValueRef RUIJSSection_removeRow(const OpaqueJSContext *a1, int a2, JSObjectRef object, uint64_t a4, JSValueRef *a5)
{
  void *v8;
  int v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  NSObject *v16;
  void *v17;
  JSValueRef Undefined;

  JSObjectGetPrivate(object);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if (a4 == 1 && *a5 && JSValueIsNumber(a1, *a5))
  {
    v9 = (int)JSValueToNumber(a1, *a5, 0);
    objc_msgSend(v8, "tableElement");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "sections");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = objc_msgSend(v11, "indexOfObject:", v8);

    objc_msgSend(v8, "tableElement");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "tableView");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = objc_msgSend(v14, "numberOfRowsInSection:", v12);

    if (v15 <= v9)
    {
      _RUILoggingFacility();
      v16 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
        RUIJSSection_removeRow_cold_1(v12, v9, v16);
    }
    else
    {
      objc_msgSend(v8, "tableElement");
      v16 = objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x24BDD15D8], "indexPathForRow:inSection:", v9, v12);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      -[NSObject removeRowAtIndexPath:](v16, "removeRowAtIndexPath:", v17);

    }
  }
  Undefined = JSValueMakeUndefined(a1);

  return Undefined;
}

JSValueRef RUIJSSection_updateHTMLFooterContent(const OpaqueJSContext *a1, int a2, JSObjectRef object, uint64_t a4, JSValueRef *a5)
{
  void *v8;
  OpaqueJSString *v9;
  const __CFAllocator *Default;
  NSObject *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  JSValueRef Undefined;
  NSObject *v22;
  uint8_t v23[16];

  JSObjectGetPrivate(object);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if (a4 == 1 && *a5 && JSValueIsString(a1, *a5))
  {
    v9 = JSValueToStringCopy(a1, *a5, 0);
    Default = CFAllocatorGetDefault();
    v11 = JSStringCopyCFString(Default, v9);
    JSStringRelease(v9);
    objc_msgSend(v8, "footerView");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_opt_respondsToSelector() & 1) != 0)
    {
      objc_msgSend(v12, "setText:attributes:", v11, 0);
    }
    else if (_isInternalInstall())
    {
      _RUILoggingFacility();
      v22 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v23 = 0;
        _os_log_impl(&dword_209E87000, v22, OS_LOG_TYPE_DEFAULT, "Section footer view doesn't respond to setText:attributes:, can't update the footer content.", v23, 2u);
      }

    }
  }
  else
  {
    _RUILoggingFacility();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      RUIJSSection_updateHTMLFooterContent_cold_1(v11, v13, v14, v15, v16, v17, v18, v19);
  }

  Undefined = JSValueMakeUndefined(a1);
  return Undefined;
}

JSValueRef RUIJSSection_updateHTMLHeaderContent(const OpaqueJSContext *a1, int a2, JSObjectRef object, uint64_t a4, JSValueRef *a5)
{
  void *v8;
  OpaqueJSString *v9;
  const __CFAllocator *Default;
  NSObject *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  JSValueRef Undefined;
  NSObject *v22;
  uint8_t v23[16];

  JSObjectGetPrivate(object);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if (a4 == 1 && *a5 && JSValueIsString(a1, *a5))
  {
    v9 = JSValueToStringCopy(a1, *a5, 0);
    Default = CFAllocatorGetDefault();
    v11 = JSStringCopyCFString(Default, v9);
    JSStringRelease(v9);
    objc_msgSend(v8, "headerView");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_opt_respondsToSelector() & 1) != 0)
    {
      objc_msgSend(v12, "setText:attributes:", v11, 0);
    }
    else if (_isInternalInstall())
    {
      _RUILoggingFacility();
      v22 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v23 = 0;
        _os_log_impl(&dword_209E87000, v22, OS_LOG_TYPE_DEFAULT, "Section header view doesn't respond to setText:attributes:, can't update the header content.", v23, 2u);
      }

    }
  }
  else
  {
    _RUILoggingFacility();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      RUIJSSection_updateHTMLFooterContent_cold_1(v11, v13, v14, v15, v16, v17, v18, v19);
  }

  Undefined = JSValueMakeUndefined(a1);
  return Undefined;
}

void OUTLINED_FUNCTION_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

JSValueRef RUIMakeJSValueFromString(JSContextRef ctx, CFStringRef string)
{
  OpaqueJSString *v3;
  JSValueRef v4;

  if (!string)
    return JSValueMakeUndefined(ctx);
  v3 = JSStringCreateWithCFString(string);
  v4 = JSValueMakeString(ctx, v3);
  JSStringRelease(v3);
  return v4;
}

__CFString *RUIStringFromJSValue(const OpaqueJSContext *a1, const OpaqueJSValue *a2)
{
  OpaqueJSString *v4;
  const __CFAllocator *Default;
  __CFString *v6;

  if (JSValueIsString(a1, a2))
  {
    v4 = JSValueToStringCopy(a1, a2, 0);
    Default = CFAllocatorGetDefault();
    v6 = (__CFString *)JSStringCopyCFString(Default, v4);
    JSStringRelease(v4);
  }
  else
  {
    v6 = 0;
  }
  return v6;
}

void RUILogException(const OpaqueJSContext *a1, const OpaqueJSValue *a2)
{
  OpaqueJSString *v4;
  const __CFAllocator *Default;
  __CFString *v6;
  OpaqueJSValue *v7;
  OpaqueJSString *v8;
  const OpaqueJSValue *Property;
  int v10;
  NSObject *v11;
  _DWORD v12[2];
  __int16 v13;
  __CFString *v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  if (a2)
  {
    v4 = JSValueToStringCopy(a1, a2, 0);
    Default = CFAllocatorGetDefault();
    v6 = (__CFString *)JSStringCopyCFString(Default, v4);
    JSStringRelease(v4);
    v7 = JSValueToObject(a1, a2, 0);
    v8 = JSStringCreateWithCFString(CFSTR("line"));
    Property = JSObjectGetProperty(a1, v7, v8, 0);
    JSStringRelease(v8);
    if (JSValueGetType(a1, Property) == kJSTypeNumber)
      v10 = (int)JSValueToNumber(a1, Property, 0);
    else
      v10 = 0;
    if (_isInternalInstall())
    {
      _RUILoggingFacility();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        v12[0] = 67109378;
        v12[1] = v10;
        v13 = 2112;
        v14 = v6;
        _os_log_impl(&dword_209E87000, v11, OS_LOG_TYPE_DEFAULT, "JavaScript Error at Line %d, %@", (uint8_t *)v12, 0x12u);
      }

    }
  }
}

void _loadImages(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  void *v4;
  id v5;
  id v6;
  id *v7;

  v7 = a1;
  objc_msgSend(v7[1], "lock");
  v1 = objc_msgSend(v7[2], "count");
  if (v1)
  {
    v2 = v1;
    for (i = 0; i != v2; ++i)
    {
      objc_msgSend(v7[2], "objectAtIndex:", i);
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "_locked_imageLoadStarted:", v4);
      objc_msgSend(v4, "start");

    }
    objc_msgSend(v7, "_loadingStatusChanged");
  }
  v5 = objc_alloc_init(MEMORY[0x24BDBCEB8]);
  v6 = v7[2];
  v7[2] = v5;

  objc_msgSend(v7[1], "unlock");
}

void sub_209E9BDB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_209E9BF80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_209E9C34C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_209E9C498(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_209E9C5E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

JSClassRef RUIJSObjectModel_class()
{
  JSClassRef result;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  JSClassDefinition v5;

  result = (JSClassRef)RUIJSObjectModel_class_jsClass;
  if (!RUIJSObjectModel_class_jsClass)
  {
    v1 = *(_OWORD *)(MEMORY[0x24BDDA880] + 48);
    *(_OWORD *)&v5.staticFunctions = *(_OWORD *)(MEMORY[0x24BDDA880] + 32);
    *(_OWORD *)&v5.finalize = v1;
    v2 = *(_OWORD *)(MEMORY[0x24BDDA880] + 80);
    *(_OWORD *)&v5.getProperty = *(_OWORD *)(MEMORY[0x24BDDA880] + 64);
    *(_OWORD *)&v5.deleteProperty = v2;
    v3 = *(_OWORD *)(MEMORY[0x24BDDA880] + 112);
    *(_OWORD *)&v5.callAsFunction = *(_OWORD *)(MEMORY[0x24BDDA880] + 96);
    *(_OWORD *)&v5.hasInstance = v3;
    v4 = *(_OWORD *)(MEMORY[0x24BDDA880] + 16);
    *(_OWORD *)&v5.version = *MEMORY[0x24BDDA880];
    *(_OWORD *)&v5.parentClass = v4;
    v5.staticFunctions = (const JSStaticFunction *)&RUIJSObjectModel_staticFunctions;
    v5.initialize = (JSObjectInitializeCallback)RUIJSObjectModel_initialize;
    v5.finalize = (JSObjectFinalizeCallback)RUIJSObjectModel_finalize;
    result = JSClassCreate(&v5);
    RUIJSObjectModel_class_jsClass = (uint64_t)result;
  }
  return result;
}

JSValueRef RUIJSObjectModel_alert(const OpaqueJSContext *a1, int a2, JSObjectRef object, void *a4, JSValueRef *a5)
{
  void *v8;
  void *v9;
  char v10;
  void *v11;
  void *v12;
  void *v13;
  const OpaqueJSValue *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  int v21;
  void *v22;
  void *v23;
  const OpaqueJSValue *Property;
  JSObjectRef v25;
  uint64_t v26;
  unsigned int v27;
  const OpaqueJSValue *PropertyAtIndex;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  id v35;
  void *v36;
  void *v37;
  NSObject *v38;
  uint64_t v39;
  void *v40;
  BOOL v41;
  JSStringRef v42;
  NSObject *v43;
  void *v44;
  OpaqueJSString *v45;
  const __CFAllocator *Default;
  CFStringRef v47;
  CFStringRef v48;
  __CFString *v49;
  OpaqueJSString *v50;
  OpaqueJSString *v51;
  const OpaqueJSValue *v52;
  const __CFAllocator *v53;
  const OpaqueJSValue *v54;
  const __CFAllocator *v55;
  NSObject *v56;
  __CFString *v57;
  __CFString *v58;
  void *v59;
  void *v60;
  void *v61;
  JSValueRef Undefined;
  NSObject *v64;
  void *v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  JSStringRef string;
  OpaqueJSString *stringa;
  OpaqueJSValue *objecta;
  OpaqueJSString *objectb;
  void *v74;
  void *v75;
  _QWORD aBlock[4];
  id v77;
  id v78;
  uint8_t buf[8];
  JSValueRef exception;

  JSObjectGetPrivate(object);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "delegate");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_opt_respondsToSelector();

  objc_msgSend(v8, "delegate");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = v11;
  if ((v10 & 1) != 0)
    objc_msgSend(v11, "viewControllerForAlertPresentation");
  else
    objc_msgSend(v11, "parentViewControllerForObjectModel:", v8);
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  if (!a4)
    goto LABEL_48;
  if (a4 == (void *)1)
  {
    if (!*a5)
      goto LABEL_48;
    if (JSValueIsObject(a1, *a5))
    {
      v74 = v13;
      v14 = *a5;
      objc_msgSend(MEMORY[0x24BDDA720], "contextWithJSGlobalContextRef:", JSContextGetGlobalContext(a1));
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x24BDDA730], "valueWithJSValueRef:inContext:", v14, v15);
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v16, "valueForProperty:", CFSTR("title"));
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v17, "toString");
      v68 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v16, "valueForProperty:", CFSTR("message"));
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v18, "toString");
      v67 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v16, "valueForProperty:", CFSTR("style"));
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v19, "toString");
      v20 = (void *)objc_claimAutoreleasedReturnValue();

      v66 = v20;
      v21 = objc_msgSend(v20, "isEqualToString:", CFSTR("sheet"));
      objc_msgSend(v16, "valueForProperty:", CFSTR("buttons"));
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v22, "toArray");
      v23 = (void *)objc_claimAutoreleasedReturnValue();

      exception = 0;
      Property = RUIJSValueGetProperty(a1, v14, CFSTR("buttons"));
      v25 = JSValueToObject(a1, Property, &exception);
      RUILogException(a1, exception);
      objecta = v25;
      if (v25 && objc_msgSend(v23, "count"))
      {
        v65 = v16;
        objc_msgSend(MEMORY[0x24BEBD3B0], "alertControllerWithTitle:message:preferredStyle:", v68, v67, v21 ^ 1u);
        string = (JSStringRef)objc_claimAutoreleasedReturnValue();
        if (!objc_msgSend(v23, "count"))
        {
LABEL_33:
          -[OpaqueJSString actions](string, "actions");
          v29 = (void *)objc_claimAutoreleasedReturnValue();
          if (objc_msgSend(v29, "count"))
            v42 = string;
          else
            v42 = 0;
          v43 = v42;
          goto LABEL_37;
        }
        v26 = 0;
        v27 = 1;
        v69 = v15;
        while (1)
        {
          exception = 0;
          PropertyAtIndex = JSObjectGetPropertyAtIndex(a1, objecta, v27 - 1, &exception);
          RUILogException(a1, exception);
          if (JSValueIsUndefined(a1, PropertyAtIndex))
          {
            v43 = 0;
            v13 = v74;
            v16 = v65;
            v44 = v66;
            goto LABEL_72;
          }
          objc_msgSend(v23, "objectAtIndexedSubscript:", v26);
          v29 = (void *)objc_claimAutoreleasedReturnValue();
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) == 0)
          {
            if (_isInternalInstall())
            {
              _RUILoggingFacility();
              v64 = objc_claimAutoreleasedReturnValue();
              v13 = v74;
              v16 = v65;
              v44 = v66;
              if (os_log_type_enabled(v64, OS_LOG_TYPE_DEFAULT))
              {
                *(_WORD *)buf = 0;
                _os_log_impl(&dword_209E87000, v64, OS_LOG_TYPE_DEFAULT, "xmlui.alert buttons must be an array of dictionaries", buf, 2u);
              }

              v43 = 0;
LABEL_38:

LABEL_72:
              goto LABEL_73;
            }
            v43 = 0;
LABEL_37:
            v13 = v74;
            v16 = v65;
            v44 = v66;
            goto LABEL_38;
          }
          objc_msgSend(MEMORY[0x24BDDA730], "valueWithJSValueRef:inContext:", RUIJSValueGetProperty(a1, PropertyAtIndex, CFSTR("handler")), v15);
          v30 = (void *)objc_claimAutoreleasedReturnValue();
          v31 = v30;
          if (v30)
          {
            aBlock[0] = MEMORY[0x24BDAC760];
            aBlock[1] = 3221225472;
            aBlock[2] = ___alertFromObject_block_invoke;
            aBlock[3] = &unk_24C2979E8;
            v77 = v30;
            v78 = v15;
            v32 = _Block_copy(aBlock);

          }
          else
          {
            v32 = 0;
          }
          objc_msgSend(v29, "objectForKeyedSubscript:", CFSTR("title"));
          v33 = (void *)objc_claimAutoreleasedReturnValue();
          objc_opt_class();
          v34 = (objc_opt_isKindOfClass() & 1) != 0 ? v33 : 0;
          v35 = v34;

          if (v35)
            break;
          if (_isInternalInstall())
          {
            _RUILoggingFacility();
            v38 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v38, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)buf = 0;
              _os_log_impl(&dword_209E87000, v38, OS_LOG_TYPE_DEFAULT, "xmlui.alert: Buttons must have a title", buf, 2u);
            }
            goto LABEL_31;
          }
LABEL_32:

          v26 = v27;
          v41 = objc_msgSend(v23, "count") > (unint64_t)v27++;
          v15 = v69;
          if (!v41)
            goto LABEL_33;
        }
        objc_msgSend(v29, "objectForKeyedSubscript:", CFSTR("style"));
        v36 = (void *)objc_claimAutoreleasedReturnValue();
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
          v37 = v36;
        else
          v37 = 0;
        v38 = v37;

        if ((-[NSObject isEqualToString:](v38, "isEqualToString:", CFSTR("destructive")) & 1) != 0)
          v39 = 2;
        else
          v39 = -[NSObject isEqualToString:](v38, "isEqualToString:", CFSTR("cancel"));
        objc_msgSend(MEMORY[0x24BEBD3A8], "actionWithTitle:style:handler:", v35, v39, v32);
        v40 = (void *)objc_claimAutoreleasedReturnValue();
        -[OpaqueJSString addAction:](string, "addAction:", v40);

LABEL_31:
        goto LABEL_32;
      }
      if (_isInternalInstall())
      {
        _RUILoggingFacility();
        v56 = objc_claimAutoreleasedReturnValue();
        string = (JSStringRef)v56;
        if (os_log_type_enabled(v56, OS_LOG_TYPE_DEFAULT))
        {
          LOWORD(aBlock[0]) = 0;
          _os_log_impl(&dword_209E87000, v56, OS_LOG_TYPE_DEFAULT, "Can't display an alert with no buttons!", (uint8_t *)aBlock, 2u);
        }
        v43 = 0;
        v13 = v74;
        v44 = v66;
        goto LABEL_72;
      }
      v43 = 0;
      v13 = v74;
      v44 = v66;
LABEL_73:

      if (v43)
        goto LABEL_74;
      goto LABEL_76;
    }
  }
  if (!*a5 || !JSValueIsString(a1, *a5))
  {
LABEL_48:
    if (_isInternalInstall())
    {
      _RUILoggingFacility();
      v43 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(aBlock[0]) = 0;
        _os_log_impl(&dword_209E87000, v43, OS_LOG_TYPE_DEFAULT, "xmlui.alert called with bogus args", (uint8_t *)aBlock, 2u);
      }
      goto LABEL_75;
    }
    goto LABEL_76;
  }
  v75 = v13;
  v45 = JSValueToStringCopy(a1, *a5, 0);
  Default = CFAllocatorGetDefault();
  objectb = v45;
  v47 = JSStringCopyCFString(Default, v45);
  v48 = 0;
  v49 = 0;
  v50 = 0;
  v51 = 0;
  if ((unint64_t)a4 < 2)
    goto LABEL_59;
  v52 = a5[1];
  if (v52 && JSValueIsString(a1, v52))
  {
    v50 = JSValueToStringCopy(a1, a5[1], 0);
    v53 = CFAllocatorGetDefault();
    v48 = JSStringCopyCFString(v53, v50);
    if ((unint64_t)a4 >= 3)
    {
      v54 = a5[2];
      if (v54)
      {
        if (JSValueIsString(a1, v54))
        {
          v51 = JSValueToStringCopy(a1, a5[2], 0);
          v55 = CFAllocatorGetDefault();
          v49 = (__CFString *)JSStringCopyCFString(v55, v51);
          goto LABEL_59;
        }
      }
    }
    v49 = 0;
  }
  else
  {
    v48 = 0;
    v49 = 0;
    v50 = 0;
  }
  v51 = 0;
LABEL_59:
  stringa = v50;
  v57 = (__CFString *)v48;
  v58 = (__CFString *)v47;
  objc_msgSend(MEMORY[0x24BEBD3B0], "alertControllerWithTitle:message:preferredStyle:", v48, v47, 1);
  v43 = objc_claimAutoreleasedReturnValue();
  v59 = (void *)MEMORY[0x24BEBD3A8];
  v60 = v49;
  if (!v49)
  {
    objc_msgSend(MEMORY[0x24BDD1488], "bundleForClass:", objc_opt_class());
    a4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(a4, "localizedStringForKey:value:table:", CFSTR("OK"), &stru_24C29B280, CFSTR("Localizable"));
    v60 = (void *)objc_claimAutoreleasedReturnValue();
  }
  objc_msgSend(v59, "actionWithTitle:style:handler:", v60, 0, 0);
  v61 = (void *)objc_claimAutoreleasedReturnValue();
  -[NSObject addAction:](v43, "addAction:", v61);

  if (!v49)
  {

  }
  if (objectb)
    JSStringRelease(objectb);
  if (stringa)
    JSStringRelease(stringa);
  if (v51)
    JSStringRelease(v51);

  v13 = v75;
  if (v43)
  {
LABEL_74:
    objc_msgSend(v13, "presentViewController:animated:completion:", v43, 1, 0);
LABEL_75:

  }
LABEL_76:
  Undefined = JSValueMakeUndefined(a1);

  return Undefined;
}

JSValueRef RUIJSObjectModel_log(JSContextRef ctx, uint64_t a2, uint64_t a3, uint64_t a4, JSValueRef *a5)
{
  OpaqueJSString *v7;
  const __CFAllocator *Default;
  NSObject *v9;
  NSObject *v10;
  int v12;
  NSObject *v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  if (a4 && *a5 && JSValueIsString(ctx, *a5))
  {
    v7 = JSValueToStringCopy(ctx, *a5, 0);
    Default = CFAllocatorGetDefault();
    v9 = JSStringCopyCFString(Default, v7);
    if (_isInternalInstall())
    {
      _RUILoggingFacility();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        v12 = 138412290;
        v13 = v9;
        _os_log_impl(&dword_209E87000, v10, OS_LOG_TYPE_DEFAULT, "xmlui.log: %@", (uint8_t *)&v12, 0xCu);
      }

    }
    JSStringRelease(v7);
LABEL_12:

    return JSValueMakeUndefined(ctx);
  }
  if (_isInternalInstall())
  {
    _RUILoggingFacility();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v12) = 0;
      _os_log_impl(&dword_209E87000, v9, OS_LOG_TYPE_DEFAULT, "xmlui.log called with bogus args", (uint8_t *)&v12, 2u);
    }
    goto LABEL_12;
  }
  return JSValueMakeUndefined(ctx);
}

JSValueRef RUIJSObjectModel_getFieldValue(JSContextRef ctx, uint64_t a2, OpaqueJSValue *a3, uint64_t a4, JSValueRef *a5)
{
  OpaqueJSString *v8;
  const __CFAllocator *Default;
  __CFString *v10;
  void *v11;
  void *v12;
  void *v13;
  JSValueRef v14;
  NSObject *v15;
  uint8_t v17[16];

  if (!a4 || !*a5 || !JSValueIsString(ctx, *a5))
  {
    if (_isInternalInstall())
    {
      _RUILoggingFacility();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v17 = 0;
        _os_log_impl(&dword_209E87000, v15, OS_LOG_TYPE_DEFAULT, "xmlui.getFieldValue called with bogus args", v17, 2u);
      }

    }
    return JSValueMakeUndefined(ctx);
  }
  v8 = JSValueToStringCopy(ctx, *a5, 0);
  Default = CFAllocatorGetDefault();
  v10 = (__CFString *)JSStringCopyCFString(Default, v8);
  JSObjectGetPrivate(a3);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "postbackDictionary");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "objectForKey:", v10);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = JSValueFromValue(v13, ctx);
  JSStringRelease(v8);

  if (!v14)
    return JSValueMakeUndefined(ctx);
  return v14;
}

JSValueRef RUIJSObjectModel_setFieldValue(JSContextRef ctx, uint64_t a2, OpaqueJSValue *a3, unint64_t a4, JSValueRef *a5)
{
  const OpaqueJSValue *v9;
  OpaqueJSString *v10;
  const __CFAllocator *Default;
  NSObject *v12;
  OpaqueJSString *v13;
  const __CFAllocator *v14;
  __CFString *v15;
  void *v16;
  void *v17;
  intptr_t v18;
  NSObject *v19;
  uint8_t v21[16];
  uint8_t buf[16];

  if (RUIJSObjectModel_setFieldValue_onceToken != -1)
    dispatch_once(&RUIJSObjectModel_setFieldValue_onceToken, &__block_literal_global_2);
  if (a4 >= 2)
  {
    if (*a5)
    {
      if (JSValueIsString(ctx, *a5))
      {
        v9 = a5[1];
        if (v9)
        {
          if (JSValueIsString(ctx, v9))
          {
            v10 = JSValueToStringCopy(ctx, *a5, 0);
            Default = CFAllocatorGetDefault();
            v12 = JSStringCopyCFString(Default, v10);
            v13 = JSValueToStringCopy(ctx, a5[1], 0);
            v14 = CFAllocatorGetDefault();
            v15 = (__CFString *)JSStringCopyCFString(v14, v13);
            JSObjectGetPrivate(a3);
            v16 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v16, "rowForFormField:", v12);
            v17 = (void *)objc_claimAutoreleasedReturnValue();
            v18 = dispatch_semaphore_wait((dispatch_semaphore_t)RUIJSObjectModel_setFieldValue_reentrancy_sema, 0);
            objc_msgSend(v17, "setValueFromString:notify:", v15, v18 == 0);
            if (v18 && _isInternalInstall())
            {
              _RUILoggingFacility();
              v19 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
              {
                *(_WORD *)buf = 0;
                _os_log_impl(&dword_209E87000, v19, OS_LOG_TYPE_DEFAULT, "Skipping row change notification due to too many reentrant calls to xmlui.setFieldValue", buf, 2u);
              }

            }
            dispatch_semaphore_signal((dispatch_semaphore_t)RUIJSObjectModel_setFieldValue_reentrancy_sema);

LABEL_17:
            return JSValueMakeUndefined(ctx);
          }
        }
      }
    }
  }
  if (_isInternalInstall())
  {
    _RUILoggingFacility();
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v21 = 0;
      _os_log_impl(&dword_209E87000, v12, OS_LOG_TYPE_DEFAULT, "xmlui.setFieldValue called with bogus args", v21, 2u);
    }
    goto LABEL_17;
  }
  return JSValueMakeUndefined(ctx);
}

JSValueRef RUIJSObjectModel_setFieldInvalid(JSContextRef ctx, uint64_t a2, OpaqueJSValue *a3, unint64_t a4, JSValueRef *a5)
{
  OpaqueJSString *v9;
  const __CFAllocator *Default;
  __CFString *v11;
  const OpaqueJSValue *v12;
  _BOOL8 v13;
  NSObject *v14;
  void *v15;
  void *v16;
  uint8_t v18[16];

  if (a4 && *a5 && JSValueIsString(ctx, *a5))
  {
    v9 = JSValueToStringCopy(ctx, *a5, 0);
    Default = CFAllocatorGetDefault();
    v11 = (__CFString *)JSStringCopyCFString(Default, v9);
    v13 = a4 < 2 || (v12 = a5[1]) == 0 || !JSValueIsBoolean(ctx, v12) || JSValueToBoolean(ctx, a5[1]);
    JSObjectGetPrivate(a3);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "rowForFormField:", v11);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "setRowInvalid:", v13);

  }
  else if (_isInternalInstall())
  {
    _RUILoggingFacility();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_209E87000, v14, OS_LOG_TYPE_DEFAULT, "xmlui.setFieldInvalid called with bogus args", v18, 2u);
    }

  }
  return JSValueMakeUndefined(ctx);
}

JSValueRef RUIJSObjectModel_setPostbackValueForKey(JSContextRef ctx, uint64_t a2, OpaqueJSValue *a3, uint64_t a4, JSValueRef *a5)
{
  const OpaqueJSValue *v7;
  OpaqueJSString *v9;
  const __CFAllocator *Default;
  NSObject *v11;
  _BOOL4 IsBoolean;
  const OpaqueJSValue *v13;
  uint64_t v14;
  _BOOL4 IsNumber;
  const OpaqueJSValue *v16;
  __CFString *v17;
  void *v18;
  void *v19;
  id v20;
  OpaqueJSString *v22;
  const __CFAllocator *v23;
  NSObject *v24;
  uint8_t v25[16];
  uint8_t buf[16];

  if (a4 == 2)
  {
    if (*a5)
    {
      v7 = a5[1];
      if (v7)
      {
        if (JSValueIsString(ctx, v7))
        {
          v9 = JSValueToStringCopy(ctx, a5[1], 0);
          Default = CFAllocatorGetDefault();
          v11 = JSStringCopyCFString(Default, v9);
          IsBoolean = JSValueIsBoolean(ctx, *a5);
          v13 = *a5;
          if (IsBoolean)
          {
            objc_msgSend(MEMORY[0x24BDD16E0], "numberWithBool:", JSValueToBoolean(ctx, v13));
            v14 = objc_claimAutoreleasedReturnValue();
          }
          else
          {
            IsNumber = JSValueIsNumber(ctx, v13);
            v16 = *a5;
            if (!IsNumber)
            {
              if (JSValueIsString(ctx, v16))
              {
                v22 = JSValueToStringCopy(ctx, *a5, 0);
                v23 = CFAllocatorGetDefault();
                v17 = (__CFString *)JSStringCopyCFString(v23, v22);
                JSStringRelease(v22);
              }
              else
              {
                if (_isInternalInstall())
                {
                  _RUILoggingFacility();
                  v24 = objc_claimAutoreleasedReturnValue();
                  if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
                  {
                    *(_WORD *)buf = 0;
                    _os_log_impl(&dword_209E87000, v24, OS_LOG_TYPE_DEFAULT, "xmlui.setPostbackValueForKey called with invalid value type", buf, 2u);
                  }

                }
                v17 = 0;
              }
              goto LABEL_13;
            }
            objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", JSValueToNumber(ctx, v16, 0));
            v14 = objc_claimAutoreleasedReturnValue();
          }
          v17 = (__CFString *)v14;
LABEL_13:
          JSObjectGetPrivate(a3);
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v18, "updateInfo");
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          v20 = (id)objc_msgSend(v19, "mutableCopy");

          if (!v20)
            v20 = objc_alloc_init(MEMORY[0x24BDBCED8]);
          if (v17)
            objc_msgSend(v20, "setObject:forKey:", v17, v11);
          objc_msgSend(v18, "setUpdateInfo:", v20);
          JSStringRelease(v9);

LABEL_18:
          return JSValueMakeUndefined(ctx);
        }
      }
    }
  }
  if (_isInternalInstall())
  {
    _RUILoggingFacility();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v25 = 0;
      _os_log_impl(&dword_209E87000, v11, OS_LOG_TYPE_DEFAULT, "xmlui.setPostbackValueForKey called with bogus args", v25, 2u);
    }
    goto LABEL_18;
  }
  return JSValueMakeUndefined(ctx);
}

JSValueRef RUIJSObjectModel_getElementById(JSContextRef ctx, uint64_t a2, OpaqueJSValue *a3, uint64_t a4, JSValueRef *a5)
{
  OpaqueJSString *v8;
  const __CFAllocator *Default;
  __CFString *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  void *v16;
  uint8_t v17[16];

  if (a4 != 1 || !*a5 || !JSValueIsString(ctx, *a5))
  {
    if (_isInternalInstall())
    {
      _RUILoggingFacility();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v17 = 0;
        _os_log_impl(&dword_209E87000, v14, OS_LOG_TYPE_DEFAULT, "xmlui.getElementById called with bogus args", v17, 2u);
      }

    }
    return JSValueMakeUndefined(ctx);
  }
  v8 = JSValueToStringCopy(ctx, *a5, 0);
  Default = CFAllocatorGetDefault();
  v10 = (__CFString *)JSStringCopyCFString(Default, v8);
  JSStringRelease(v8);
  JSObjectGetPrivate(a3);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = objc_msgSend(v11, "jsInterfaceForElementId:", v10);
  if (!v12)
  {
    objc_msgSend(v11, "subElementWithID:", v10);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = objc_msgSend(v16, "JSValueForContext:", ctx);

    if (v13)
      return (JSValueRef)v13;
    return JSValueMakeUndefined(ctx);
  }
  v13 = v12;

  return (JSValueRef)v13;
}

uint64_t RUIJSObjectModel_loadURL(const OpaqueJSContext *a1, uint64_t a2, OpaqueJSValue *a3, unint64_t a4, uint64_t a5)
{
  void *v9;
  void *v10;
  __CFString *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  __CFString *v15;
  void *v16;
  NSObject *v17;
  void *v18;
  uint64_t v19;
  NSObject *v21;
  id v22;
  void *v23;
  __CFString *v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  _QWORD v29[4];
  id v30;
  id v31;
  __CFString *v32;
  id v33;
  id v34;
  _QWORD aBlock[4];
  id v36;
  id v37;
  uint8_t buf[4];
  uint64_t v39;
  uint64_t v40;

  v40 = *MEMORY[0x24BDAC8D0];
  objc_msgSend(MEMORY[0x24BDDA720], "contextWithJSGlobalContextRef:", JSContextGetGlobalContext(a1));
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  if (a4 && *(_QWORD *)a5 && JSValueIsString(a1, *(JSValueRef *)a5))
  {
    RUIStringFromJSValue(a1, *(const OpaqueJSValue **)a5);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    if (v10)
    {
      v11 = CFSTR("GET");
      v12 = MEMORY[0x24BDAC760];
      if (a4 < 2
        || ((RUIStringFromJSValue(a1, *(const OpaqueJSValue **)(a5 + 8)),
             v13 = objc_claimAutoreleasedReturnValue(),
             (v14 = (void *)v13) != 0)
          ? (v15 = (__CFString *)v13)
          : (v15 = CFSTR("GET")),
            v11 = v15,
            v14,
            a4 == 2))
      {
        v16 = 0;
      }
      else
      {
        objc_msgSend(MEMORY[0x24BDDA730], "valueWithJSValueRef:inContext:", *(_QWORD *)(a5 + 16), v9);
        aBlock[0] = v12;
        aBlock[1] = 3221225472;
        aBlock[2] = __RUIJSObjectModel_loadURL_block_invoke;
        aBlock[3] = &unk_24C297A10;
        v36 = (id)objc_claimAutoreleasedReturnValue();
        v37 = v9;
        v25 = v36;
        v16 = _Block_copy(aBlock);

      }
      JSObjectGetPrivate(a3);
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      v27 = (void *)MEMORY[0x24BDDA730];
      v29[0] = v12;
      v29[1] = 3221225472;
      v29[2] = __RUIJSObjectModel_loadURL_block_invoke_52;
      v29[3] = &unk_24C297A60;
      v30 = v26;
      v31 = v10;
      v32 = v11;
      v34 = v16;
      v33 = v9;
      v28 = v16;
      v24 = v11;
      v22 = v26;
      v19 = objc_msgSend(v27, "valueWithNewPromiseInContext:fromExecutor:", v33, v29);

    }
    else
    {
      if (_isInternalInstall())
      {
        _RUILoggingFacility();
        v21 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412290;
          v39 = 0;
          _os_log_impl(&dword_209E87000, v21, OS_LOG_TYPE_DEFAULT, "xmlui.loadURL: Invalid URL: %@", buf, 0xCu);
        }

      }
      objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("xmlui.loadURL: Invalid URL: %@"), 0);
      v22 = (id)objc_claimAutoreleasedReturnValue();
      v23 = (void *)MEMORY[0x24BDDA730];
      objc_msgSend(MEMORY[0x24BDDA730], "valueWithNewErrorFromMessage:inContext:", v22, v9);
      v24 = (__CFString *)objc_claimAutoreleasedReturnValue();
      v19 = objc_msgSend(v23, "valueWithNewPromiseRejectedWithReason:inContext:", v24, v9);
    }

  }
  else
  {
    if (_isInternalInstall())
    {
      _RUILoggingFacility();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_209E87000, v17, OS_LOG_TYPE_DEFAULT, "xmlui.loadURL called with bogus args", buf, 2u);
      }

    }
    v18 = (void *)MEMORY[0x24BDDA730];
    objc_msgSend(MEMORY[0x24BDDA730], "valueWithNewErrorFromMessage:inContext:", CFSTR("xmlui.loadURL called with bogus args"), v9);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v19 = objc_msgSend(v18, "valueWithNewPromiseRejectedWithReason:inContext:", v10, v9);
  }

  return v19;
}

JSValueRef RUIJSObjectModel_showWebView(JSContextRef ctx, uint64_t a2, OpaqueJSValue *a3, uint64_t a4, uint64_t a5)
{
  NSObject *v9;
  void *v10;
  NSObject *v11;
  void *v12;
  NSObject *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  _QWORD v21[4];
  id v22;
  NSObject *v23;
  uint8_t buf[4];
  uint64_t v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  if (a4 && *(_QWORD *)a5 && JSValueIsString(ctx, *(JSValueRef *)a5))
  {
    RUIStringFromJSValue(ctx, *(const OpaqueJSValue **)a5);
    v9 = objc_claimAutoreleasedReturnValue();
    if (!v9)
    {
      if (!_isInternalInstall())
      {
LABEL_20:

        return JSValueMakeUndefined(ctx);
      }
      _RUILoggingFacility();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        v25 = 0;
        _os_log_impl(&dword_209E87000, v13, OS_LOG_TYPE_DEFAULT, "xmlui.showWebView: Invalid URL: %@", buf, 0xCu);
      }
LABEL_19:

      goto LABEL_20;
    }
    objc_msgSend(MEMORY[0x24BDDA720], "contextWithJSGlobalContextRef:", JSContextGetGlobalContext(ctx));
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = 0;
    if (a4 == 2)
    {
      v15 = 1;
      v12 = 0;
    }
    else
    {
      v12 = 0;
      v13 = 0;
      if (a4 != 3)
      {
LABEL_18:
        JSObjectGetPrivate(a3);
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v16, "absoluteURLWithString:", v9);
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "objectForKeyedSubscript:", CFSTR("dismissButtonLabel"));
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "objectForKeyedSubscript:", CFSTR("dismissButtonAlignment"));
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v16, "showModalWebViewWithLinkURL:dismissButtonLabel:dismissButtonAlignment:scaleToFit:loadCompletion:dismissHandler:", v17, v18, v19, 1, 0, v13);

        goto LABEL_19;
      }
      objc_msgSend(MEMORY[0x24BDDA730], "valueWithJSValueRef:inContext:", *(_QWORD *)(a5 + 8), v10);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "toDictionary");
      v12 = (void *)objc_claimAutoreleasedReturnValue();

      v15 = 2;
    }
    objc_msgSend(MEMORY[0x24BDDA730], "valueWithJSValueRef:inContext:", *(_QWORD *)(a5 + 8 * v15), v10);
    v13 = objc_claimAutoreleasedReturnValue();
    if (v13)
    {
      v21[0] = MEMORY[0x24BDAC760];
      v21[1] = 3221225472;
      v21[2] = __RUIJSObjectModel_showWebView_block_invoke;
      v21[3] = &unk_24C297A88;
      v22 = v10;
      v11 = v13;
      v23 = v11;
      v13 = _Block_copy(v21);

    }
    else
    {
      v11 = 0;
    }
    goto LABEL_18;
  }
  if (_isInternalInstall())
  {
    _RUILoggingFacility();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_209E87000, v9, OS_LOG_TYPE_DEFAULT, "xmlui.showWebView called with bogus args", buf, 2u);
    }
    goto LABEL_20;
  }
  return JSValueMakeUndefined(ctx);
}

const OpaqueJSValue *RUIJSValueGetProperty(const OpaqueJSContext *a1, const OpaqueJSValue *a2, void *a3)
{
  __CFString *v5;
  OpaqueJSValue *v6;
  OpaqueJSString *v7;
  const OpaqueJSValue *Property;
  JSValueRef exception;

  v5 = a3;
  exception = 0;
  v6 = JSValueToObject(a1, a2, &exception);
  RUILogException(a1, exception);
  if (!v6
    || (v7 = JSStringCreateWithCFString(v5),
        Property = JSObjectGetProperty(a1, v6, v7, &exception),
        RUILogException(a1, exception),
        JSStringRelease(v7),
        JSValueIsUndefined(a1, Property)))
  {
    Property = 0;
  }

  return Property;
}

void ___alertFromObject_block_invoke(uint64_t a1)
{
  id v2;
  void *v3;
  NSObject *v4;
  void *v5;
  int v6;
  void *v7;
  uint64_t v8;

  v8 = *MEMORY[0x24BDAC8D0];
  v2 = (id)objc_msgSend(*(id *)(a1 + 32), "callWithArguments:", MEMORY[0x24BDBD1A8]);
  objc_msgSend(*(id *)(a1 + 40), "exception");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3 && _isInternalInstall())
  {
    _RUILoggingFacility();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(*(id *)(a1 + 40), "exception");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      v6 = 138412290;
      v7 = v5;
      _os_log_impl(&dword_209E87000, v4, OS_LOG_TYPE_DEFAULT, "xmlui.alert button handler: %@", (uint8_t *)&v6, 0xCu);

    }
  }
}

JSValueRef JSValueFromValue(void *a1, const OpaqueJSContext *a2)
{
  __CFString *v3;
  OpaqueJSString *v4;
  JSValueRef String;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  __CFString *v10;
  OpaqueJSString *v11;
  float v12;
  size_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  const JSValueRef *v17;
  size_t v18;
  uint64_t i;
  void *v20;
  NSObject *v22;
  JSValueRef arguments[2];

  arguments[1] = *(JSValueRef *)MEMORY[0x24BDAC8D0];
  v3 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v4 = JSStringCreateWithCFString(v3);
    String = JSValueMakeString(a2, v4);
    JSStringRelease(v4);
  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v6 = (void *)JSValueFromValue_formatter;
      if (!JSValueFromValue_formatter)
      {
        v7 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDBCEA0]), "initWithLocaleIdentifier:", CFSTR("en_US"));
        v8 = objc_alloc_init(MEMORY[0x24BDD1500]);
        v9 = (void *)JSValueFromValue_formatter;
        JSValueFromValue_formatter = (uint64_t)v8;

        objc_msgSend((id)JSValueFromValue_formatter, "setDateFormat:", CFSTR("MMM d yyyy"));
        objc_msgSend((id)JSValueFromValue_formatter, "setLocale:", v7);

        v6 = (void *)JSValueFromValue_formatter;
      }
      objc_msgSend(v6, "stringFromDate:", v3);
      v10 = (__CFString *)objc_claimAutoreleasedReturnValue();
      v11 = JSStringCreateWithCFString(v10);
      arguments[0] = JSValueMakeString(a2, v11);
      String = JSObjectMakeDate(a2, 1uLL, arguments, 0);
      JSStringRelease(v11);

    }
    else
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
      {
        -[__CFString floatValue](v3, "floatValue");
        String = JSValueMakeNumber(a2, v12);
      }
      else
      {
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) == 0)
        {
          if (_isInternalInstall())
          {
            _RUILoggingFacility();
            v22 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
            {
              LOWORD(arguments[0]) = 0;
              _os_log_impl(&dword_209E87000, v22, OS_LOG_TYPE_DEFAULT, "JSValueFromValue unhandled data type", (uint8_t *)arguments, 2u);
            }

          }
          goto LABEL_18;
        }
        v13 = -[__CFString count](v3, "count");
        MEMORY[0x24BDAC7A8](v13, v14);
        v17 = (JSValueRef *)((char *)arguments - v16);
        if (v15 >= 0x200)
          v18 = 512;
        else
          v18 = v15;
        bzero((char *)arguments - v16, v18);
        if (v13)
        {
          for (i = 0; i != v13; ++i)
          {
            -[__CFString objectAtIndex:](v3, "objectAtIndex:", i);
            v20 = (void *)objc_claimAutoreleasedReturnValue();
            v17[i] = (const JSValueRef)JSValueFromValue(v20, a2);

          }
        }
        String = JSObjectMakeArray(a2, v13, v17, 0);
      }
    }
  }
  if (!String)
LABEL_18:
    String = JSValueMakeUndefined(a2);

  return String;
}

void sub_209EA6DDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{

}

void sub_209EA72AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_209EAC038(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__0(uint64_t a1)
{

}

void sub_209EAC7DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getAKAppleIDAuthenticationErrorDomain()
{
  id *v0;
  void *v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v3 = 0;
  v4 = &v3;
  v5 = 0x2020000000;
  v0 = (id *)getAKAppleIDAuthenticationErrorDomainSymbolLoc_ptr;
  v6 = getAKAppleIDAuthenticationErrorDomainSymbolLoc_ptr;
  if (!getAKAppleIDAuthenticationErrorDomainSymbolLoc_ptr)
  {
    v1 = (void *)AuthKitLibrary();
    v0 = (id *)dlsym(v1, "AKAppleIDAuthenticationErrorDomain");
    v4[3] = (uint64_t)v0;
    getAKAppleIDAuthenticationErrorDomainSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v3, 8);
  if (!v0)
    getAKAppleIDAuthenticationErrorDomain_cold_1();
  return *v0;
}

void sub_209EAC87C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _Block_object_dispose(&a9, 8);
  _Unwind_Resume(a1);
}

id getAKAuthenticationPasswordKey()
{
  id *v0;
  void *v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v3 = 0;
  v4 = &v3;
  v5 = 0x2020000000;
  v0 = (id *)getAKAuthenticationPasswordKeySymbolLoc_ptr;
  v6 = getAKAuthenticationPasswordKeySymbolLoc_ptr;
  if (!getAKAuthenticationPasswordKeySymbolLoc_ptr)
  {
    v1 = (void *)AuthKitLibrary();
    v0 = (id *)dlsym(v1, "AKAuthenticationPasswordKey");
    v4[3] = (uint64_t)v0;
    getAKAuthenticationPasswordKeySymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v3, 8);
  if (!v0)
    getAKAuthenticationPasswordKey_cold_1();
  return *v0;
}

void sub_209EAC914(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _Block_object_dispose(&a9, 8);
  _Unwind_Resume(a1);
}

Class __getAKAppleIDAuthenticationInAppContextClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  v3 = 0;
  if (!AuthKitUILibraryCore_frameworkLibrary)
  {
    v4 = xmmword_24C297E48;
    v5 = 0;
    AuthKitUILibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!AuthKitUILibraryCore_frameworkLibrary)
    __getAKAppleIDAuthenticationInAppContextClass_block_invoke_cold_1(&v3);
  result = objc_getClass("AKAppleIDAuthenticationInAppContext");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    __getAKAppleIDAuthenticationInAppContextClass_block_invoke_cold_2();
  getAKAppleIDAuthenticationInAppContextClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

Class __getACAccountStoreClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  v3 = 0;
  if (!AppleAccountLibraryCore_frameworkLibrary)
  {
    v4 = xmmword_24C297E60;
    v5 = 0;
    AppleAccountLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!AppleAccountLibraryCore_frameworkLibrary)
    __getACAccountStoreClass_block_invoke_cold_1(&v3);
  result = objc_getClass("ACAccountStore");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    __getACAccountStoreClass_block_invoke_cold_2();
  getACAccountStoreClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

Class __getAKAppleIDAuthenticationControllerClass_block_invoke(uint64_t a1)
{
  Class result;

  AuthKitLibrary();
  result = objc_getClass("AKAppleIDAuthenticationController");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    __getAKAppleIDAuthenticationControllerClass_block_invoke_cold_1();
  getAKAppleIDAuthenticationControllerClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t AuthKitLibrary()
{
  void *v1;
  __int128 v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *MEMORY[0x24BDAC8D0];
  v1 = 0;
  if (!AuthKitLibraryCore_frameworkLibrary)
  {
    v2 = xmmword_24C297E78;
    v3 = 0;
    AuthKitLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!AuthKitLibraryCore_frameworkLibrary)
    AuthKitLibrary_cold_1(&v1);
  return AuthKitLibraryCore_frameworkLibrary;
}

char *OUTLINED_FUNCTION_0_0()
{
  return dlerror();
}

double RUIRoundToPixel(double a1)
{
  double v2;
  void *v3;
  uint64_t v4;

  v2 = *(double *)&RUIRoundToPixel_scale;
  if (*(double *)&RUIRoundToPixel_scale == -1.0)
  {
    objc_msgSend(MEMORY[0x24BEBD8F8], "mainScreen", *(double *)&RUIRoundToPixel_scale);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "scale");
    RUIRoundToPixel_scale = v4;

    v2 = *(double *)&RUIRoundToPixel_scale;
  }
  return round(v2 * a1) / v2;
}

double FARectRoundMetrics(double a1)
{
  return round(a1);
}

double FASizeRoundMetrics(double a1)
{
  return round(a1);
}

JSValueRef RUIJSTable_getProperty(const OpaqueJSContext *a1, JSObjectRef object, OpaqueJSString *a3)
{
  void *v5;
  __CFString *v6;
  void *v7;
  JSValueRef Boolean;
  JSValueRef Undefined;
  NSObject *v10;
  int v12;
  __CFString *v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  JSObjectGetPrivate(object);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
    goto LABEL_12;
  v6 = (__CFString *)JSStringCopyCFString(0, a3);
  if (!-[__CFString isEqualToString:](v6, "isEqualToString:", CFSTR("sectionCount")))
  {
    if (-[__CFString isEqualToString:](v6, "isEqualToString:", CFSTR("editing")))
    {
      objc_msgSend(v5, "tableView");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      Boolean = JSValueMakeBoolean(a1, objc_msgSend(v7, "isEditing"));
      goto LABEL_6;
    }
    if (_isInternalInstall())
    {
      _RUILoggingFacility();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        v12 = 138412290;
        v13 = v6;
        _os_log_impl(&dword_209E87000, v10, OS_LOG_TYPE_DEFAULT, "Not allowed to fetch table property '%@'", (uint8_t *)&v12, 0xCu);
      }

    }
LABEL_12:
    Undefined = JSValueMakeUndefined(a1);
    goto LABEL_13;
  }
  objc_msgSend(v5, "sections");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  Boolean = JSValueMakeNumber(a1, (double)(unint64_t)objc_msgSend(v7, "count"));
LABEL_6:
  Undefined = Boolean;

LABEL_13:
  return Undefined;
}

uint64_t RUIJSTable_setProperty(const OpaqueJSContext *a1, JSObjectRef object, OpaqueJSString *a3, const OpaqueJSValue *a4)
{
  void *v7;
  _BOOL4 IsEqualToUTF8CString;
  uint64_t v9;
  NSObject *v10;
  uint8_t v12[16];

  JSObjectGetPrivate(object);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
LABEL_11:
    v9 = 0;
    goto LABEL_12;
  }
  if (!a3
    || (IsEqualToUTF8CString = JSStringIsEqualToUTF8CString(a3, "editing"), !a4)
    || !IsEqualToUTF8CString
    || !JSValueIsBoolean(a1, a4))
  {
    if (_isInternalInstall())
    {
      _RUILoggingFacility();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v12 = 0;
        _os_log_impl(&dword_209E87000, v10, OS_LOG_TYPE_DEFAULT, "table.editing: must be set to a BOOLean", v12, 2u);
      }

    }
    goto LABEL_11;
  }
  objc_msgSend(v7, "setEditing:", JSValueToBoolean(a1, a4));
  v9 = 1;
LABEL_12:

  return v9;
}

const OpaqueJSValue *getObjectProperty(const OpaqueJSContext *a1, OpaqueJSValue *a2, CFStringRef string)
{
  OpaqueJSString *v5;
  const OpaqueJSValue *Property;
  JSValueRef exception;

  v5 = JSStringCreateWithCFString(string);
  exception = 0;
  Property = JSObjectGetProperty(a1, a2, v5, &exception);
  RUILogException(a1, exception);
  JSStringRelease(v5);
  if (!Property)
    return 0;
  if (JSValueIsObject(a1, Property))
    return Property;
  return 0;
}

void sub_209EB402C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  _Block_object_dispose(&a24, 8);
  _Block_object_dispose(&a28, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__1(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__1(uint64_t a1)
{

}

void sub_209EB443C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v8;
  va_list va;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  va_list va1;

  va_start(va1, a7);
  va_start(va, a7);
  v8 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_209EB6974(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 144));
  _Unwind_Resume(a1);
}

void sub_209EB8458(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_209EB86B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _Block_object_dispose(&a9, 8);
  _Unwind_Resume(a1);
}

uint64_t HSAAuthenticationLibrary()
{
  void *v1;
  __int128 v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *MEMORY[0x24BDAC8D0];
  v1 = 0;
  if (!HSAAuthenticationLibraryCore_frameworkLibrary)
  {
    v2 = xmmword_24C298110;
    v3 = 0;
    HSAAuthenticationLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!HSAAuthenticationLibraryCore_frameworkLibrary)
    HSAAuthenticationLibrary_cold_1(&v1);
  return HSAAuthenticationLibraryCore_frameworkLibrary;
}

void OUTLINED_FUNCTION_3(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_209EBB408(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_209EBBC58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _Block_object_dispose(&a9, 8);
  _Unwind_Resume(a1);
}

id getMCProfileConnectionClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getMCProfileConnectionClass_softClass;
  v7 = getMCProfileConnectionClass_softClass;
  if (!getMCProfileConnectionClass_softClass)
  {
    v3[0] = MEMORY[0x24BDAC760];
    v3[1] = 3221225472;
    v3[2] = __getMCProfileConnectionClass_block_invoke;
    v3[3] = &unk_24C297758;
    v3[4] = &v4;
    __getMCProfileConnectionClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_209EBBD18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getPSListControllerClass_block_invoke(uint64_t a1)
{
  Class result;

  PreferencesLibrary();
  result = objc_getClass("PSListController");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    __getPSListControllerClass_block_invoke_cold_1();
  getPSListControllerClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void PreferencesLibrary()
{
  void *v0;
  __int128 v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *MEMORY[0x24BDAC8D0];
  v0 = 0;
  if (!PreferencesLibraryCore_frameworkLibrary)
  {
    v1 = xmmword_24C298190;
    v2 = 0;
    PreferencesLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!PreferencesLibraryCore_frameworkLibrary)
    PreferencesLibrary_cold_1(&v0);
}

Class __getMCProfileConnectionClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  v3 = 0;
  if (!ManagedConfigurationLibraryCore_frameworkLibrary)
  {
    v4 = xmmword_24C2981A8;
    v5 = 0;
    ManagedConfigurationLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!ManagedConfigurationLibraryCore_frameworkLibrary)
    __getMCProfileConnectionClass_block_invoke_cold_1(&v3);
  result = objc_getClass("MCProfileConnection");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    __getMCProfileConnectionClass_block_invoke_cold_2();
  getMCProfileConnectionClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

Class __getPSPasscodeFieldClass_block_invoke(uint64_t a1)
{
  Class result;

  PreferencesLibrary();
  result = objc_getClass("PSPasscodeField");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    __getPSPasscodeFieldClass_block_invoke_cold_1();
  getPSPasscodeFieldClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_209EBE488(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_209EBEA34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10;
  va_list va;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v10 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__2(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__2(uint64_t a1)
{

}

uint64_t UIResolvedNaturalAlignment(uint64_t result)
{
  void *v1;
  _BOOL4 v2;

  if (result == 4)
  {
    objc_msgSend(MEMORY[0x24BEBD3C8], "sharedApplication");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    v2 = objc_msgSend(v1, "userInterfaceLayoutDirection") != 0;

    return 2 * v2;
  }
  return result;
}

double RemoteUIDefaultLeftTableMargin()
{
  return 15.0;
}

id RemoteUIHeaderFont()
{
  _BOOL4 v0;
  _QWORD *v1;

  v0 = +[RUIPlatform isAppleTV](RUIPlatform, "isAppleTV");
  v1 = (_QWORD *)MEMORY[0x24BEBE200];
  if (!v0)
    v1 = (_QWORD *)MEMORY[0x24BEBE1F0];
  objc_msgSend(MEMORY[0x24BEBB520], "preferredFontForTextStyle:", *v1);
  return (id)objc_claimAutoreleasedReturnValue();
}

uint64_t RemoteUISubheaderFont()
{
  return objc_msgSend(MEMORY[0x24BEBB520], "preferredFontForTextStyle:", *MEMORY[0x24BEBE1F0]);
}

const __CFString *RemoteUIHeaderCSSTextColor()
{
  return CFSTR("-apple-system-secondary-label");
}

const __CFString *RemoteUIFooterCSSTextColor()
{
  return CFSTR("-apple-system-secondary-label");
}

uint64_t RemoteUINavHeaderTextColor()
{
  return objc_msgSend(MEMORY[0x24BEBD4B8], "secondaryLabelColor");
}

uint64_t RemoteUINavSubHeaderFont()
{
  return objc_msgSend(MEMORY[0x24BEBB520], "preferredFontForTextStyle:", *MEMORY[0x24BEBE1F0]);
}

uint64_t RemoteUINavSubHeaderTextColor()
{
  return objc_msgSend(MEMORY[0x24BEBD4B8], "secondaryLabelColor");
}

double RemoteUIPreferredContentSize()
{
  return *MEMORY[0x24BDBF148];
}

void sub_209EC3DB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

JSValueRef RUIJSPage_getProperty(const OpaqueJSContext *a1, JSObjectRef object, OpaqueJSString *a3)
{
  void *v5;
  __CFString *v6;
  __CFString *v7;
  JSValueRef Boolean;
  NSObject *v9;
  int v11;
  __CFString *v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  JSObjectGetPrivate(object);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
    goto LABEL_12;
  v6 = (__CFString *)JSStringCopyCFString(0, a3);
  if (!-[__CFString isEqualToString:](v6, "isEqualToString:", CFSTR("title")))
  {
    if (-[__CFString isEqualToString:](v6, "isEqualToString:", CFSTR("loading")))
    {
      Boolean = JSValueMakeBoolean(a1, objc_msgSend(v5, "isLoading"));
      goto LABEL_6;
    }
    if (_isInternalInstall())
    {
      _RUILoggingFacility();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        v11 = 138412290;
        v12 = v6;
        _os_log_impl(&dword_209E87000, v9, OS_LOG_TYPE_DEFAULT, "Not allowed to fetch page property '%@'", (uint8_t *)&v11, 0xCu);
      }

    }
LABEL_12:
    Boolean = JSValueMakeUndefined(a1);
    goto LABEL_13;
  }
  objc_msgSend(v5, "title");
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  Boolean = RUIMakeJSValueFromString(a1, v7);

LABEL_6:
LABEL_13:

  return Boolean;
}

uint64_t RUIJSPage_setProperty(const OpaqueJSContext *a1, JSObjectRef object, OpaqueJSString *a3, const OpaqueJSValue *a4)
{
  void *v7;
  char isKindOfClass;
  NSObject *v9;
  void *v10;
  uint64_t v11;
  NSObject *v12;
  const char *v13;
  uint8_t *v14;
  uint8_t v16[16];
  uint8_t buf[2];
  __int16 v18;

  JSObjectGetPrivate(object);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  isKindOfClass = objc_opt_isKindOfClass();
  if (!a4 || !a3 || (isKindOfClass & 1) == 0)
  {
    if (!_isInternalInstall())
    {
LABEL_23:
      v11 = 0;
      goto LABEL_24;
    }
    _RUILoggingFacility();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_209E87000, v9, OS_LOG_TYPE_DEFAULT, "page.setProperty: bogus arguments", v16, 2u);
    }
    goto LABEL_22;
  }
  v9 = JSStringCopyCFString(0, a3);
  if (!-[NSObject isEqualToString:](v9, "isEqualToString:", CFSTR("title")))
  {
    if (!-[NSObject isEqualToString:](v9, "isEqualToString:", CFSTR("loading")))
      goto LABEL_22;
    if (JSValueIsBoolean(a1, a4))
    {
      objc_msgSend(v7, "setLoading:", JSValueToBoolean(a1, a4));
      goto LABEL_13;
    }
    if (!_isInternalInstall())
      goto LABEL_22;
    _RUILoggingFacility();
    v12 = objc_claimAutoreleasedReturnValue();
    if (!os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      goto LABEL_21;
    *(_WORD *)buf = 0;
    v13 = "page.loading: must be set to a BOOLean";
    v14 = buf;
    goto LABEL_20;
  }
  if (!JSValueIsString(a1, a4))
  {
    if (_isInternalInstall())
    {
      _RUILoggingFacility();
      v12 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
LABEL_21:

        goto LABEL_22;
      }
      v18 = 0;
      v13 = "page.title: must be set to a string";
      v14 = (uint8_t *)&v18;
LABEL_20:
      _os_log_impl(&dword_209E87000, v12, OS_LOG_TYPE_DEFAULT, v13, v14, 2u);
      goto LABEL_21;
    }
LABEL_22:

    goto LABEL_23;
  }
  RUIStringFromJSValue(a1, a4);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setTitle:", v10);

LABEL_13:
  v11 = 1;
LABEL_24:

  return v11;
}

void sub_209EC7050(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__3(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__3(uint64_t a1)
{

}

void sub_209ECAA78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, char a17)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_209ECC8E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_209ED2C64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getOBPrivacyLinkControllerClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  v3 = 0;
  if (!OnBoardingKitLibraryCore_frameworkLibrary)
  {
    v4 = xmmword_24C2985F0;
    v5 = 0;
    OnBoardingKitLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!OnBoardingKitLibraryCore_frameworkLibrary)
    __getOBPrivacyLinkControllerClass_block_invoke_cold_1(&v3);
  result = objc_getClass("OBPrivacyLinkController");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    __getOBPrivacyLinkControllerClass_block_invoke_cold_2();
  getOBPrivacyLinkControllerClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

id _RUILoggingFacility()
{
  if (_RUILoggingFacility_onceToken != -1)
    dispatch_once(&_RUILoggingFacility_onceToken, &__block_literal_global_8);
  return (id)_RUILoggingFacility_oslog;
}

uint64_t _isInternalInstall()
{
  return MGGetBoolAnswer();
}

void sub_209ED4044(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_209ED8DE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  _Block_object_dispose(&a19, 8);
  _Unwind_Resume(a1);
}

void sub_209ED90B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_209ED9AFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_209ED9C30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *__getCTSettingCopyMyPhoneNumberSymbolLoc_block_invoke(uint64_t a1)
{
  void *result;
  void *v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  v3 = 0;
  if (!CoreTelephonyLibraryCore_frameworkLibrary)
  {
    v4 = xmmword_24C2986A0;
    v5 = 0;
    CoreTelephonyLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!CoreTelephonyLibraryCore_frameworkLibrary)
    __getCTSettingCopyMyPhoneNumberSymbolLoc_block_invoke_cold_1(&v3);
  result = dlsym((void *)CoreTelephonyLibraryCore_frameworkLibrary, "CTSettingCopyMyPhoneNumber");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  getCTSettingCopyMyPhoneNumberSymbolLoc_ptr = *(_UNKNOWN **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t ResourceLoader.baseURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_209EDF8C0(v1 + OBJC_IVAR____TtC8RemoteUI14ResourceLoader_baseURL, a1);
}

uint64_t sub_209EDF8C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x20BD1DB04]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_209EDF948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;

  v8 = swift_allocObject();
  sub_209F66B44();
  *(_QWORD *)(v8 + 16) = a1;
  sub_209EDF9D0(a2, v8 + OBJC_IVAR____TtC8RemoteUI14ResourceLoader_baseURL);
  v9 = (_QWORD *)(v8 + OBJC_IVAR____TtC8RemoteUI14ResourceLoader_dataSource);
  *v9 = a3;
  v9[1] = a4;
  return v8;
}

uint64_t sub_209EDF9D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_209EDFA18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  uint64_t v14;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (void *)*sub_209EFD1A0();
  sub_209EDF8C0(a1, (uint64_t)v10);
  v12 = (*(uint64_t (**)(void *, char *, uint64_t, uint64_t))(v3 + 112))(v11, v10, a2, a3);
  sub_209EE017C(a1, &qword_2545BB600);
  return v12;
}

uint64_t sub_209EDFAD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  uint64_t result;
  void (*v17)(char *, uint64_t);
  uint64_t v18;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_209F66A90();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD **)(v3 + 16);
  sub_209F66A3C();
  sub_209F66A78();
  swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_209F66A30();
    v17 = *(void (**)(char *, uint64_t))(v11 + 8);
    v17(v9, v10);
    (*(void (**)(uint64_t, char *, uint64_t))((*MEMORY[0x24BEE4EA0] & *v15) + 0x98))(a1, v14, a3);
    return ((uint64_t (*)(char *, uint64_t))v17)(v14, v10);
  }
  return result;
}

uint64_t sub_209EDFC34()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **(_QWORD **)(v0 + 16)) + 0xA0))() & 1;
}

uint64_t sub_209EDFC70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  void (*v18)(char *, uint64_t);
  uint64_t v19;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_209F66A90();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_209F66A3C();
  sub_209F66A78();
  swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_209F66A30();
    v18 = *(void (**)(char *, uint64_t))(v13 + 8);
    v18(v11, v12);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))((*MEMORY[0x24BEE4EA0] & **(_QWORD **)(v4 + 16)) + 0xB0))(v16, a2, a3, a4);
    return ((uint64_t (*)(char *, uint64_t))v18)(v16, v12);
  }
  return result;
}

uint64_t sub_209EDFDCC()
{
  type metadata accessor for HTTPDataSource();
  return HTTPDataSource.__allocating_init()();
}

uint64_t sub_209EDFDFC(__int128 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  __int128 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, void *, uint64_t, _QWORD);
  __int128 v32;
  char v33;
  __int128 v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char v38;
  uint64_t v39;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BAF08);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (_QWORD *)((char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BAF10);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (_QWORD *)((char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  LOBYTE(v15) = *((_BYTE *)a1 + 16);
  v17 = *(__int128 *)((char *)a1 + 24);
  v18 = *((_QWORD *)a1 + 5);
  v19 = *((_BYTE *)a1 + 48);
  v20 = *((_QWORD *)a1 + 7);
  v21 = *((_BYTE *)a1 + 64);
  v22 = *((_QWORD *)a1 + 9);
  v32 = *a1;
  v33 = v15;
  v34 = v17;
  v35 = v18;
  v36 = v19;
  v37 = v20;
  v38 = v21;
  v39 = v22;
  RUIImage.resourceForMaxScreenScale()(v11);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    v23 = &qword_2545BAF08;
    v24 = (uint64_t)v11;
  }
  else
  {
    v25 = *(int *)(v12 + 48);
    v26 = (char *)v16 + v25;
    v27 = (char *)v11 + v25;
    *v16 = *v11;
    v28 = sub_209F66A90();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
    v29 = swift_allocObject();
    *(_QWORD *)(v29 + 16) = a2;
    *(_QWORD *)(v29 + 24) = a3;
    v30 = *(void (**)(char *, void *, uint64_t, _QWORD))(*(_QWORD *)v4 + 152);
    swift_unknownObjectRetain();
    v30(v26, &unk_2545BAF20, v29, MEMORY[0x24BDCDDE8]);
    swift_release();
    v23 = &qword_2545BAF10;
    v24 = (uint64_t)v16;
  }
  return sub_209EE017C(v24, v23);
}

uint64_t sub_209EDFFC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t ObjectType;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)(v4 + 16) = a1;
  ObjectType = swift_getObjectType();
  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 24) + *(_QWORD *)(a4 + 24));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 24) = v8;
  *v8 = v4;
  v8[1] = sub_209EE0050;
  return v10(a2, ObjectType, a4);
}

uint64_t sub_209EE0050(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;

  v6 = *v3;
  v7 = *v3;
  swift_task_dealloc();
  if (v2)
    return (*(uint64_t (**)(void))(v7 + 8))();
  *(_QWORD *)(v6 + 32) = a2;
  *(_QWORD *)(v6 + 40) = a1;
  return swift_task_switch();
}

uint64_t sub_209EE00D0()
{
  uint64_t v0;

  *(int8x16_t *)*(_QWORD *)(v0 + 16) = vextq_s8(*(int8x16_t *)(v0 + 32), *(int8x16_t *)(v0 + 32), 8uLL);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_209EE00EC()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_209EE0110(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v7 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_209EE06B8;
  return sub_209EDFFC8(a1, a2, v7, v6);
}

uint64_t sub_209EE017C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_209EE01B8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_209EE01D0()
{
  uint64_t v0;
  int *v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v1 = *(int **)((*MEMORY[0x24BEE4EA0] & **(_QWORD **)(*(_QWORD *)(v0 + 16) + 16)) + 0xB8);
  v4 = (uint64_t (*)(void))((char *)v1 + *v1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v2;
  *v2 = v0;
  v2[1] = sub_209EE0240;
  return v4();
}

uint64_t sub_209EE0240()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_209EE0288()
{
  sub_209EE02DC();
  return sub_209F66B20();
}

unint64_t sub_209EE02DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2545BAF30;
  if (!qword_2545BAF30)
  {
    v1 = type metadata accessor for ResourceLoader();
    result = MEMORY[0x20BD1DB1C](&protocol conformance descriptor for ResourceLoader, v1);
    atomic_store(result, (unint64_t *)&qword_2545BAF30);
  }
  return result;
}

uint64_t type metadata accessor for ResourceLoader()
{
  uint64_t result;

  result = qword_2545BCAB0;
  if (!qword_2545BCAB0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_209EE0360()
{
  sub_209EE02DC();
  return sub_209F66B14();
}

uint64_t ResourceLoader.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_209EE017C(v0 + OBJC_IVAR____TtC8RemoteUI14ResourceLoader_baseURL, &qword_2545BB600);
  swift_unknownObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC8RemoteUI14ResourceLoader___observationRegistrar;
  v2 = sub_209F66B50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t ResourceLoader.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_209EE017C(v0 + OBJC_IVAR____TtC8RemoteUI14ResourceLoader_baseURL, &qword_2545BB600);
  swift_unknownObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC8RemoteUI14ResourceLoader___observationRegistrar;
  v2 = sub_209F66B50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_209EE04E0()
{
  return type metadata accessor for ResourceLoader();
}

void sub_209EE04E8()
{
  unint64_t v0;
  unint64_t v1;

  sub_209EE0664();
  if (v0 <= 0x3F)
  {
    sub_209F66B50();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for ResourceLoader()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ResourceLoader.get<A>(_:for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of ResourceLoader.hasPendingResources.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of ResourceLoader.registerFetch<A>(for:with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of ResourceLoader.register(image:dataSource:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of ResourceLoader.load()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 168) + *(_QWORD *)(*(_QWORD *)v0 + 168));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_209EE061C;
  return v4();
}

uint64_t sub_209EE061C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

void sub_209EE0664()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2545BAF40)
  {
    sub_209F66A90();
    v0 = sub_209F675DC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2545BAF40);
  }
}

uint64_t sub_209EE06BC()
{
  return 1;
}

uint64_t sub_209EE06C4()
{
  sub_209F67B10();
  sub_209F6733C();
  return sub_209F67B28();
}

uint64_t sub_209EE0718()
{
  return sub_209F6733C();
}

uint64_t sub_209EE0734()
{
  sub_209F67B10();
  sub_209F6733C();
  return sub_209F67B28();
}

uint64_t sub_209EE0784@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_209F67840();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_209EE07D4(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000017;
  a1[1] = 0x8000000209F71BE0;
}

unint64_t sub_209EE07F4()
{
  return 0xD000000000000017;
}

uint64_t sub_209EE0810@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_209F67840();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_209EE0864()
{
  return 0;
}

void sub_209EE0870(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_209EE087C()
{
  sub_209EE0DB4();
  return sub_209F67B88();
}

uint64_t sub_209EE08A4()
{
  sub_209EE0DB4();
  return sub_209F67B94();
}

uint64_t sub_209EE08CC(_QWORD *a1)
{
  return sub_209EE0908(a1);
}

uint64_t sub_209EE08E0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = sub_209EE0908(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_209EE0908(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t countAndFlagsBits;
  uint64_t v13;
  _QWORD v15[4];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BAF68);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v15[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_209EE0DB4();
  sub_209F67B58();
  if (!v1)
  {
    v8 = sub_209F6787C();
    v11 = v10;
    sub_209EE0E3C((uint64_t)a1, (uint64_t)v15);
    if (v11)
      goto LABEL_6;
    v8 = (uint64_t)__swift_project_boxed_opaque_existential_1(v15, v15[3]);
    countAndFlagsBits = Decoder.decodeRUIID()()._countAndFlagsBits;
    if (!v13)
    {
      v8 = countAndFlagsBits;
LABEL_6:
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      return v8;
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v8;
}

unint64_t sub_209EE0A9C()
{
  unint64_t result;

  result = qword_2545BAF48;
  if (!qword_2545BAF48)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F760FC, &type metadata for AccessibilityInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BAF48);
  }
  return result;
}

unint64_t sub_209EE0AE4()
{
  unint64_t result;

  result = qword_2545BAF50;
  if (!qword_2545BAF50)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F76214, &type metadata for AccessibilityInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BAF50);
  }
  return result;
}

unint64_t sub_209EE0B2C()
{
  unint64_t result;

  result = qword_2545BAF58;
  if (!qword_2545BAF58)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F761EC, &type metadata for AccessibilityInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BAF58);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for AccessibilityInfo(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for AccessibilityInfo()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for AccessibilityInfo(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

_QWORD *assignWithTake for AccessibilityInfo(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AccessibilityInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AccessibilityInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessibilityInfo()
{
  return &type metadata for AccessibilityInfo;
}

uint64_t getEnumTagSinglePayload for AccessibilityInfo.CodingKeys(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for AccessibilityInfo.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_209EE0D4C + 4 * byte_209F760F0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_209EE0D6C + 4 * byte_209F760F5[v4]))();
}

_BYTE *sub_209EE0D4C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_209EE0D6C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_209EE0D74(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_209EE0D7C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_209EE0D84(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_209EE0D8C(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_209EE0D98()
{
  return 0;
}

ValueMetadata *type metadata accessor for AccessibilityInfo.CodingKeys()
{
  return &type metadata for AccessibilityInfo.CodingKeys;
}

unint64_t sub_209EE0DB4()
{
  unint64_t result;

  result = qword_2545BAF60;
  if (!qword_2545BAF60)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7619C, &type metadata for AccessibilityInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BAF60);
  }
  return result;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_209EE0E3C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void *sub_209EE0E84(uint64_t a1)
{
  return sub_209EE0F1C(a1, &qword_2545BCE48);
}

uint64_t sub_209EE0E90(uint64_t a1, uint64_t a2)
{
  return sub_209EE0ED4(a1, a2, &qword_2545BCE40, (uint64_t)&qword_2545BCE48);
}

void *sub_209EE0EAC(uint64_t a1)
{
  return sub_209EE0F1C(a1, &qword_2545BCE58);
}

uint64_t sub_209EE0EB8(uint64_t a1, uint64_t a2)
{
  return sub_209EE0ED4(a1, a2, &qword_2545BCE50, (uint64_t)&qword_2545BCE58);
}

uint64_t sub_209EE0ED4(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  if (*a3 != -1)
    swift_once();
  return *(_QWORD *)a4;
}

void *sub_209EE0F10(uint64_t a1)
{
  return sub_209EE0F1C(a1, qword_2545BCE68);
}

void *sub_209EE0F1C(uint64_t a1, _QWORD *a2)
{
  void *result;

  result = malloc(1uLL);
  if (result)
    *a2 = result;
  else
    __break(1u);
  return result;
}

uint64_t sub_209EE0F4C(uint64_t a1, uint64_t a2)
{
  return sub_209EE0ED4(a1, a2, &qword_2545BCE60, (uint64_t)qword_2545BCE68);
}

uint64_t sub_209EE0F68()
{
  uint64_t v0;

  swift_beginAccess();
  return MEMORY[0x20BD1DC9C](v0 + 16);
}

void sub_209EE0FA8(void *a1)
{
  swift_beginAccess();
  swift_unknownObjectWeakAssign();

}

void (*sub_209EE0FF4(_QWORD *a1))(id **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_beginAccess();
  v3[3] = MEMORY[0x20BD1DC9C](v1 + 16);
  return sub_209EE105C;
}

void sub_209EE105C(id **a1, char a2)
{
  id *v3;
  id v4;

  v3 = *a1;
  v4 = (*a1)[3];
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {

    swift_endAccess();
  }
  else
  {
    swift_endAccess();

  }
  free(v3);
}

uint64_t sub_209EE10C4(void *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_beginAccess();
  swift_unknownObjectWeakAssign();

  return v2;
}

uint64_t sub_209EE1138@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 120))();
  *a2 = result;
  return result;
}

uint64_t sub_209EE1168(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 128);
  v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

unint64_t sub_209EE1198()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  unint64_t v5;

  v1 = (void *)(*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
  if (!v1
    || (v2 = v1, v3 = objc_msgSend(v1, sel_updateInfo), v2, !v3)
    || (v4 = sub_209F67258(), v3, v5 = sub_209EE1244(v4), swift_bridgeObjectRelease(), !v5))
  {
    v5 = sub_209EE1614(MEMORY[0x24BEE4AF8]);
    swift_bridgeObjectRelease();
  }
  return v5;
}

unint64_t sub_209EE1244(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t result;
  int64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  __int128 v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  __int128 v24;
  _OWORD v25[2];
  _OWORD v26[2];
  __int128 v27;
  _OWORD v28[2];
  _OWORD v29[2];
  _OWORD v30[2];
  _OWORD v31[2];
  uint64_t v32;
  _OWORD v33[2];
  _OWORD v34[2];
  uint64_t v35;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BAF88);
    v2 = (_QWORD *)sub_209F67810();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  v23 = a1 + 64;
  v3 = -1;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v3 = ~(-1 << -(char)v4);
  v5 = v3 & *(_QWORD *)(a1 + 64);
  v22 = (unint64_t)(63 - v4) >> 6;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  while (1)
  {
    if (v5)
    {
      v10 = (v5 - 1) & v5;
      v11 = __clz(__rbit64(v5)) | (v7 << 6);
      v12 = v7;
    }
    else
    {
      v13 = v7 + 1;
      if (__OFADD__(v7, 1))
        goto LABEL_37;
      if (v13 >= v22)
      {
LABEL_33:
        sub_209EE3520();
        return (unint64_t)v2;
      }
      v14 = *(_QWORD *)(v23 + 8 * v13);
      v12 = v7 + 1;
      if (!v14)
      {
        v12 = v7 + 2;
        if (v7 + 2 >= v22)
          goto LABEL_33;
        v14 = *(_QWORD *)(v23 + 8 * v12);
        if (!v14)
        {
          v12 = v7 + 3;
          if (v7 + 3 >= v22)
            goto LABEL_33;
          v14 = *(_QWORD *)(v23 + 8 * v12);
          if (!v14)
          {
            v12 = v7 + 4;
            if (v7 + 4 >= v22)
              goto LABEL_33;
            v14 = *(_QWORD *)(v23 + 8 * v12);
            if (!v14)
            {
              v15 = v7 + 5;
              if (v7 + 5 >= v22)
                goto LABEL_33;
              v14 = *(_QWORD *)(v23 + 8 * v15);
              if (!v14)
              {
                while (1)
                {
                  v12 = v15 + 1;
                  if (__OFADD__(v15, 1))
                    goto LABEL_38;
                  if (v12 >= v22)
                    goto LABEL_33;
                  v14 = *(_QWORD *)(v23 + 8 * v12);
                  ++v15;
                  if (v14)
                    goto LABEL_26;
                }
              }
              v12 = v7 + 5;
            }
          }
        }
      }
LABEL_26:
      v10 = (v14 - 1) & v14;
      v11 = __clz(__rbit64(v14)) + (v12 << 6);
    }
    sub_209EE34D4(*(_QWORD *)(a1 + 48) + 40 * v11, (uint64_t)v33);
    sub_209EE3288(*(_QWORD *)(a1 + 56) + 32 * v11, (uint64_t)v34 + 8);
    v31[0] = v34[0];
    v31[1] = v34[1];
    v32 = v35;
    v30[0] = v33[0];
    v30[1] = v33[1];
    sub_209EE34D4((uint64_t)v30, (uint64_t)v25);
    if (!swift_dynamicCast())
    {
      sub_209EE017C((uint64_t)v30, &qword_2545BAF90);
      swift_bridgeObjectRelease();
      sub_209EE3520();
      swift_release();
      return 0;
    }
    sub_209EE3288((uint64_t)v31 + 8, (uint64_t)v25);
    sub_209EE017C((uint64_t)v30, &qword_2545BAF90);
    sub_209EE3510(v25, v26);
    v27 = v24;
    sub_209EE3510(v26, v28);
    v16 = v27;
    sub_209EE3510(v28, v29);
    sub_209EE3510(v29, &v27);
    result = sub_209EE31C0(v16, *((uint64_t *)&v16 + 1));
    v17 = result;
    if ((v18 & 1) != 0)
    {
      v8 = (_OWORD *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v8 = v16;
      v9 = (_OWORD *)(v2[7] + 32 * v17);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
      result = (unint64_t)sub_209EE3510(&v27, v9);
      goto LABEL_8;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_OWORD *)(v2[6] + 16 * result) = v16;
    result = (unint64_t)sub_209EE3510(&v27, (_OWORD *)(v2[7] + 32 * result));
    v19 = v2[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_36;
    v2[2] = v21;
LABEL_8:
    v7 = v12;
    v5 = v10;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

unint64_t sub_209EE1614(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BAF88);
  v2 = sub_209F67810();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_209EE3528(v6, (uint64_t)&v15, &qword_2545BAF98);
    v7 = v15;
    v8 = v16;
    result = sub_209EE31C0(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_209EE3510(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_209EE1748(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  void *v5;

  v3 = (*(uint64_t (**)(void))(*(_QWORD *)v1 + 88))();
  if (v3)
  {
    v4 = (void *)v3;
    sub_209EE1810(a1);
    swift_bridgeObjectRelease();
    v5 = (void *)sub_209F6724C();
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel_setUpdateInfo_, v5);

  }
  else
  {
    swift_bridgeObjectRelease();
  }
  type metadata accessor for XMLUIData();
  sub_209EE1BF4();
  sub_209F66C70();
  sub_209F66C88();
  return swift_release();
}

uint64_t sub_209EE1810(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  _OWORD v32[2];
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[2];
  _OWORD v37[3];
  _OWORD v38[2];
  __int128 v39;
  _OWORD v40[2];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB760);
    v2 = sub_209F67810();
  }
  else
  {
    v2 = MEMORY[0x24BEE4B00];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_37;
      v14 = *(_QWORD *)(v28 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v27)
          goto LABEL_37;
        v14 = *(_QWORD *)(v28 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v27)
            goto LABEL_37;
          v14 = *(_QWORD *)(v28 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    sub_209EE3288(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(_QWORD *)&v39 = v19;
    *((_QWORD *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(_QWORD *)&v37[0] = v19;
    *((_QWORD *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_209EE3510(v38, v32);
    v33 = v29;
    v34 = v30;
    v35 = v31;
    sub_209EE3510(v32, v36);
    v29 = v33;
    v30 = v34;
    v31 = v35;
    sub_209EE3510(v36, v37);
    sub_209EE3510(v37, &v33);
    result = sub_209F67684();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(_QWORD *)(v10 + 32) = v31;
    result = (uint64_t)sub_209EE3510(&v33, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_209EE3520();
    return v2;
  }
  v14 = *(_QWORD *)(v28 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for XMLUIData()
{
  return objc_opt_self();
}

unint64_t sub_209EE1BF4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2545BAF70;
  if (!qword_2545BAF70)
  {
    v1 = type metadata accessor for XMLUIData();
    result = MEMORY[0x20BD1DB1C](&protocol conformance descriptor for XMLUIData, v1);
    atomic_store(result, (unint64_t *)&qword_2545BAF70);
  }
  return result;
}

uint64_t (*sub_209EE1C38(unint64_t *a1))(uint64_t *a1, char a2)
{
  unint64_t v1;
  uint64_t (*v3)(void);
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  unint64_t v8;

  a1[1] = v1;
  v3 = *(uint64_t (**)(void))(*(_QWORD *)v1 + 88);
  a1[2] = (unint64_t)v3;
  v4 = (void *)v3();
  if (!v4
    || (v5 = v4, v6 = objc_msgSend(v4, sel_updateInfo), v5, !v6)
    || (v7 = sub_209F67258(), v6, v8 = sub_209EE1244(v7), swift_bridgeObjectRelease(), !v8))
  {
    v8 = sub_209EE1614(MEMORY[0x24BEE4AF8]);
    swift_bridgeObjectRelease();
  }
  *a1 = v8;
  return sub_209EE1D04;
}

uint64_t sub_209EE1D04(uint64_t *a1, char a2)
{
  uint64_t (*v2)(void);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;

  v2 = (uint64_t (*)(void))a1[2];
  v3 = *a1;
  if ((a2 & 1) != 0)
  {
    v4 = swift_bridgeObjectRetain();
    v5 = ((uint64_t (*)(uint64_t))v2)(v4);
    if (v5)
    {
      v6 = (void *)v5;
      sub_209EE1810(v3);
      swift_bridgeObjectRelease();
      v7 = (void *)sub_209F6724C();
      swift_bridgeObjectRelease();
      objc_msgSend(v6, sel_setUpdateInfo_, v7);

    }
    else
    {
      swift_bridgeObjectRelease();
    }
    type metadata accessor for XMLUIData();
    sub_209EE1BF4();
    sub_209F66C70();
    sub_209F66C88();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v8 = v2();
    if (v8)
    {
      v9 = (void *)v8;
      sub_209EE1810(v3);
      swift_bridgeObjectRelease();
      v10 = (void *)sub_209F6724C();
      swift_bridgeObjectRelease();
      objc_msgSend(v9, sel_setUpdateInfo_, v10);

    }
    else
    {
      swift_bridgeObjectRelease();
    }
    type metadata accessor for XMLUIData();
    sub_209EE1BF4();
    sub_209F66C70();
    sub_209F66C88();
    return swift_release();
  }
}

uint64_t XMLUIData.deinit()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy();
  return v0;
}

uint64_t XMLUIData.__deallocating_deinit()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocClassInstance();
}

uint64_t sub_209EE1ED8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for XMLUIData();
  result = sub_209F66C70();
  *a1 = result;
  return result;
}

Swift::Void __swiftcall RUIObjectModel.initializeSwift()()
{
  void *v0;
  RUIDecodingUserInfo *v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[3];

  type metadata accessor for RUIDecodingUserInfo();
  RUIDecodingUserInfo.init()(v1);
  v8[0] = v2;
  v3 = v2;
  sub_209EE5AE8((uint64_t)v8, (uint64_t)&type metadata for DecodingUserInfoAssociatedKey, (uint64_t)&type metadata for DecodingUserInfoAssociatedKey, (uint64_t)&off_2545B94A8);

  v4 = objc_msgSend((id)objc_opt_self(), sel_contextWithJSGlobalContextRef_, objc_msgSend(v0, sel_jsContextRef));
  if (v4)
  {
    v5 = v4;
    type metadata accessor for ScriptEnvironment();
    v8[0] = sub_209EE66E0(v5);
    swift_retain();
    sub_209EE5AE8((uint64_t)v8, (uint64_t)&type metadata for ScriptEnvironmentAssociatedKey, (uint64_t)&type metadata for ScriptEnvironmentAssociatedKey, (uint64_t)&off_2545B94C0);
    swift_release();
    type metadata accessor for XMLUIData();
    v6 = swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_beginAccess();
    swift_unknownObjectWeakAssign();
    v7 = v6;
    sub_209EE5AE8((uint64_t)&v7, (uint64_t)&type metadata for XMLUIDataAssociatedKey, (uint64_t)&type metadata for XMLUIDataAssociatedKey, (uint64_t)&off_2545B93A0);
    type metadata accessor for ActivityIndicatorManager(0);
    v7 = sub_209F2F630();
    swift_retain();
    sub_209EE5AE8((uint64_t)&v7, (uint64_t)&type metadata for ActivityIndicatorManagerAssociatedKey, (uint64_t)&type metadata for ActivityIndicatorManagerAssociatedKey, (uint64_t)&off_2545B94D8);
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

void RUIObjectModel.decodingUserInfo.setter(void *a1)
{
  id v1;
  void *v2;

  v2 = a1;
  v1 = a1;
  sub_209EE5AE8((uint64_t)&v2, (uint64_t)&type metadata for DecodingUserInfoAssociatedKey, (uint64_t)&type metadata for DecodingUserInfoAssociatedKey, (uint64_t)&off_2545B94A8);

}

uint64_t RUIObjectModel.scriptEnvironment.setter(uint64_t a1)
{
  return sub_209EE213C(a1, (uint64_t)&type metadata for ScriptEnvironmentAssociatedKey, (uint64_t)&off_2545B94C0);
}

uint64_t RUIObjectModel.xmlUIData.setter(uint64_t a1)
{
  return sub_209EE213C(a1, (uint64_t)&type metadata for XMLUIDataAssociatedKey, (uint64_t)&off_2545B93A0);
}

uint64_t RUIObjectModel.activityIndicatorManager.setter(uint64_t a1)
{
  return sub_209EE213C(a1, (uint64_t)&type metadata for ActivityIndicatorManagerAssociatedKey, (uint64_t)&off_2545B94D8);
}

uint64_t sub_209EE213C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = a1;
  swift_retain();
  sub_209EE5AE8((uint64_t)&v6, a2, a2, a3);
  return swift_release();
}

uint64_t RUIObjectModel.decodingUserInfo.getter()
{
  uint64_t v1;

  sub_209EE596C((uint64_t)&type metadata for DecodingUserInfoAssociatedKey, (uint64_t)&off_2545B94A8, (uint64_t)&v1);
  return v1;
}

void sub_209EE2200(_QWORD *a1@<X8>)
{
  uint64_t v2;

  sub_209EE596C((uint64_t)&type metadata for DecodingUserInfoAssociatedKey, (uint64_t)&off_2545B94A8, (uint64_t)&v2);
  *a1 = v2;
}

uint64_t sub_209EE224C(id *a1)
{
  id v1;
  id v3;

  v3 = *a1;
  v1 = v3;
  return sub_209EE5AE8((uint64_t)&v3, (uint64_t)&type metadata for DecodingUserInfoAssociatedKey, (uint64_t)&type metadata for DecodingUserInfoAssociatedKey, (uint64_t)&off_2545B94A8);
}

void (*RUIObjectModel.decodingUserInfo.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 16) = v1;
  sub_209EE596C((uint64_t)&type metadata for DecodingUserInfoAssociatedKey, (uint64_t)&off_2545B94A8, a1);
  return sub_209EE22E0;
}

void sub_209EE22E0(uint64_t a1, char a2)
{
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  void *v8;
  id v9;

  v4 = *(void **)a1;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)a1;
  v5 = a1 + 8;
  v6 = v4;
  if ((a2 & 1) != 0)
  {
    v7 = v6;
    sub_209EE5AE8(v5, (uint64_t)&type metadata for DecodingUserInfoAssociatedKey, (uint64_t)&type metadata for DecodingUserInfoAssociatedKey, (uint64_t)&off_2545B94A8);

    v8 = *(void **)a1;
  }
  else
  {
    v9 = v6;
    sub_209EE5AE8(v5, (uint64_t)&type metadata for DecodingUserInfoAssociatedKey, (uint64_t)&type metadata for DecodingUserInfoAssociatedKey, (uint64_t)&off_2545B94A8);
    v8 = v9;
  }

}

uint64_t RUIObjectModel.scriptEnvironment.getter()
{
  uint64_t v1;

  sub_209EE596C((uint64_t)&type metadata for ScriptEnvironmentAssociatedKey, (uint64_t)&off_2545B94C0, (uint64_t)&v1);
  return v1;
}

void sub_209EE23B4(_QWORD *a1@<X8>)
{
  uint64_t v2;

  sub_209EE596C((uint64_t)&type metadata for ScriptEnvironmentAssociatedKey, (uint64_t)&off_2545B94C0, (uint64_t)&v2);
  *a1 = v2;
}

uint64_t sub_209EE2400(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_209EE25FC(a1, a2, a3, a4, (uint64_t)&type metadata for ScriptEnvironmentAssociatedKey, (uint64_t)&off_2545B94C0);
}

uint64_t (*RUIObjectModel.scriptEnvironment.modify(uint64_t a1))(_QWORD *a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 16) = v1;
  sub_209EE596C((uint64_t)&type metadata for ScriptEnvironmentAssociatedKey, (uint64_t)&off_2545B94C0, a1);
  return sub_209EE245C;
}

uint64_t sub_209EE245C(_QWORD *a1, char a2)
{
  return sub_209EE26AC(a1, a2, (uint64_t)&type metadata for ScriptEnvironmentAssociatedKey, (uint64_t)&off_2545B94C0);
}

uint64_t RUIObjectModel.xmlUIData.getter()
{
  uint64_t v1;

  sub_209EE596C((uint64_t)&type metadata for XMLUIDataAssociatedKey, (uint64_t)&off_2545B93A0, (uint64_t)&v1);
  return v1;
}

void sub_209EE24A8(_QWORD *a1@<X8>)
{
  uint64_t v2;

  sub_209EE596C((uint64_t)&type metadata for XMLUIDataAssociatedKey, (uint64_t)&off_2545B93A0, (uint64_t)&v2);
  *a1 = v2;
}

uint64_t sub_209EE24F4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_209EE25FC(a1, a2, a3, a4, (uint64_t)&type metadata for XMLUIDataAssociatedKey, (uint64_t)&off_2545B93A0);
}

uint64_t (*RUIObjectModel.xmlUIData.modify(uint64_t a1))(_QWORD *a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 16) = v1;
  sub_209EE596C((uint64_t)&type metadata for XMLUIDataAssociatedKey, (uint64_t)&off_2545B93A0, a1);
  return sub_209EE2550;
}

uint64_t sub_209EE2550(_QWORD *a1, char a2)
{
  return sub_209EE26AC(a1, a2, (uint64_t)&type metadata for XMLUIDataAssociatedKey, (uint64_t)&off_2545B93A0);
}

uint64_t RUIObjectModel.activityIndicatorManager.getter()
{
  uint64_t v1;

  sub_209EE596C((uint64_t)&type metadata for ActivityIndicatorManagerAssociatedKey, (uint64_t)&off_2545B94D8, (uint64_t)&v1);
  return v1;
}

void sub_209EE259C(_QWORD *a1@<X8>)
{
  uint64_t v2;

  sub_209EE596C((uint64_t)&type metadata for ActivityIndicatorManagerAssociatedKey, (uint64_t)&off_2545B94D8, (uint64_t)&v2);
  *a1 = v2;
}

uint64_t sub_209EE25E8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_209EE25FC(a1, a2, a3, a4, (uint64_t)&type metadata for ActivityIndicatorManagerAssociatedKey, (uint64_t)&off_2545B94D8);
}

uint64_t sub_209EE25FC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;

  v9 = *a1;
  swift_retain();
  return sub_209EE5AE8((uint64_t)&v9, a5, a5, a6);
}

uint64_t (*RUIObjectModel.activityIndicatorManager.modify(uint64_t a1))(_QWORD *a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 16) = v1;
  sub_209EE596C((uint64_t)&type metadata for ActivityIndicatorManagerAssociatedKey, (uint64_t)&off_2545B94D8, a1);
  return sub_209EE2698;
}

uint64_t sub_209EE2698(_QWORD *a1, char a2)
{
  return sub_209EE26AC(a1, a2, (uint64_t)&type metadata for ActivityIndicatorManagerAssociatedKey, (uint64_t)&off_2545B94D8);
}

uint64_t sub_209EE26AC(_QWORD *a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;

  a1[1] = *a1;
  v7 = (uint64_t)(a1 + 1);
  swift_retain();
  if ((a2 & 1) != 0)
  {
    swift_retain();
    sub_209EE5AE8(v7, a3, a3, a4);
    swift_release();
  }
  else
  {
    sub_209EE5AE8(v7, a3, a3, a4);
  }
  return swift_release();
}

Swift::Void __swiftcall RUIObjectModel.setDecodingUserInfo(_:)(RUIDecodingUserInfo *a1)
{
  RUIDecodingUserInfo *v1;
  RUIDecodingUserInfo *v2;

  v2 = a1;
  v1 = a1;
  sub_209EE5AE8((uint64_t)&v2, (uint64_t)&type metadata for DecodingUserInfoAssociatedKey, (uint64_t)&type metadata for DecodingUserInfoAssociatedKey, (uint64_t)&off_2545B94A8);
}

void RUIObjectModel.jsInterface(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t ObjectType;
  id v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[4];

  sub_209EE596C((uint64_t)&type metadata for ScriptEnvironmentAssociatedKey, (uint64_t)&off_2545B94C0, (uint64_t)v15);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v15[0] + 144))(a1, a2);
  swift_release();
  if (v4)
  {
    ObjectType = swift_getObjectType();
    v15[3] = ObjectType;
    v15[0] = v4;
    swift_unknownObjectRetain();
    sub_209EE596C((uint64_t)&type metadata for ScriptEnvironmentAssociatedKey, (uint64_t)&off_2545B94C0, (uint64_t)&v14);
    v6 = *(id *)(v14 + 16);
    swift_release();
    if (ObjectType)
    {
      v7 = __swift_project_boxed_opaque_existential_1(v15, ObjectType);
      v8 = *(_QWORD *)(ObjectType - 8);
      MEMORY[0x24BDAC7A8](v7, v7);
      v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v8 + 16))(v10);
      v11 = sub_209F6799C();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, ObjectType);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    }
    else
    {
      v11 = 0;
    }
    v12 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, v11, v6);
    swift_unknownObjectRelease();

    if (v12)
    {
      objc_msgSend(v12, sel_JSValueRef);
      swift_unknownObjectRelease();

    }
    else
    {
      __break(1u);
    }
  }
}

Swift::Void __swiftcall RUIObjectModel.notifyXMLUIDataChange()()
{
  uint64_t v0;

  sub_209EE596C((uint64_t)&type metadata for XMLUIDataAssociatedKey, (uint64_t)&off_2545B93A0, (uint64_t)&v0);
  type metadata accessor for XMLUIData();
  sub_209EE1BF4();
  sub_209F66C70();
  swift_release();
  sub_209F66C88();
  swift_release();
}

uint64_t sub_209EE2B2C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  id v31;
  void *v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v34)(char *, uint64_t, uint64_t);
  id v35;
  id v36;
  void *v37;
  char *v38;
  uint64_t result;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  void *v44;
  id v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  void (*v52)(char *, char *, uint64_t);
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  id v57;
  uint64_t v58;
  uint64_t *v59;

  v3 = v2;
  v59 = a2;
  v5 = sub_209F66A90();
  v6 = *(_QWORD *)(v5 - 8);
  v8 = MEMORY[0x24BDAC7A8](v5, v7);
  v54 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v10);
  v56 = (char *)&v54 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
  v14 = MEMORY[0x24BDAC7A8](v12, v13);
  v55 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14, v16);
  v19 = (char *)&v54 - v18;
  v21 = MEMORY[0x24BDAC7A8](v17, v20);
  v23 = (char *)&v54 - v22;
  v25 = MEMORY[0x24BDAC7A8](v21, v24);
  v27 = (char *)&v54 - v26;
  MEMORY[0x24BDAC7A8](v25, v28);
  v30 = (char *)&v54 - v29;
  v58 = a1;
  sub_209F66A3C();
  v57 = v3;
  v31 = objc_msgSend(v3, sel_sourceURL);
  if (v31)
  {
    v32 = v31;
    sub_209F66A60();

    v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    v33(v27, 0, 1, v5);
  }
  else
  {
    v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    v33(v27, 1, 1, v5);
  }
  sub_209F66A78();
  swift_bridgeObjectRelease();
  sub_209EE017C((uint64_t)v27, &qword_2545BB600);
  sub_209EE3528((uint64_t)v30, (uint64_t)v23, &qword_2545BB600);
  v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (v34(v23, 1, v5) == 1)
  {
    sub_209EE017C((uint64_t)v23, &qword_2545BB600);
    goto LABEL_12;
  }
  v35 = v57;
  v36 = objc_msgSend(v57, sel_sourceURL);
  if (v36)
  {
    v37 = v36;
    v38 = v56;
    sub_209F66A60();

    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v19, v38, v5);
    v33(v19, 0, 1, v5);
    result = ((uint64_t (*)(char *, uint64_t, uint64_t))v34)(v19, 1, v5);
    if ((_DWORD)result != 1)
    {
      v40 = sub_209F11100((uint64_t)v19);
      v42 = v41;
      v43 = *(void (**)(char *, uint64_t))(v6 + 8);
      v43(v19, v5);
      v43(v23, v5);
      if (v42)
      {
        v44 = (void *)sub_209F672A0();
        v45 = objc_msgSend(v35, sel_alertWithName_, v44);

        sub_209EE017C((uint64_t)v30, &qword_2545BB600);
        if (v45)

        v46 = v59;
        *v59 = v40;
        v46[1] = v42;
        type metadata accessor for NavigationDestination();
        return swift_storeEnumTagMultiPayload();
      }
LABEL_12:
      v47 = v58;
      sub_209F66A6C();
      v49 = v48;
      swift_bridgeObjectRelease();
      if (v49 || (v50 = (uint64_t)v30, v30 = v55, sub_209EDF9D0(v50, (uint64_t)v55), v34(v30, 1, v5) == 1))
      {
        v51 = v59;
        sub_209EE017C((uint64_t)v30, &qword_2545BB600);
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 16))(v51, v47, v5);
        type metadata accessor for NavigationDestination();
      }
      else
      {
        v52 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
        v53 = v54;
        v52(v54, v30, v5);
        v52((char *)v59, v53, v5);
        type metadata accessor for NavigationDestination();
      }
      return swift_storeEnumTagMultiPayload();
    }
  }
  else
  {
    result = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v33)(v19, 1, 1, v5);
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall RUIObjectModel.setActivityIndicatorStatus(_:forElement:)(Swift::Bool _, RUIElement *forElement)
{
  NSDictionary *v4;
  NSDictionary *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  NSString *v11;
  NSString *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  __int128 v22;
  __int128 v23;

  v4 = -[RUIElement attributes](forElement, sel_attributes);
  if (!v4)
  {
    v22 = 0u;
    v23 = 0u;
LABEL_10:
    sub_209EE017C((uint64_t)&v22, &qword_2545BAF78);
    goto LABEL_11;
  }
  v5 = v4;
  v6 = sub_209F67258();

  sub_209F672C4();
  sub_209F6769C();
  if (*(_QWORD *)(v6 + 16) && (v7 = sub_209EE3224((uint64_t)&v19), (v8 & 1) != 0))
  {
    sub_209EE3288(*(_QWORD *)(v6 + 56) + 32 * v7, (uint64_t)&v22);
  }
  else
  {
    v22 = 0u;
    v23 = 0u;
  }
  sub_209EE3254((uint64_t)&v19);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v23 + 1))
    goto LABEL_10;
  if (swift_dynamicCast())
  {
    v10 = v19;
    v9 = v20;
    goto LABEL_13;
  }
LABEL_11:
  v11 = -[RUIElement identifier](forElement, sel_identifier);
  if (!v11)
    return;
  v12 = v11;
  v10 = sub_209F672C4();
  v9 = v13;

LABEL_13:
  sub_209EE596C((uint64_t)&type metadata for ActivityIndicatorManagerAssociatedKey, (uint64_t)&off_2545B94D8, (uint64_t)&v19);
  v14 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v19 + 144))(v10, v9);
  v16 = v15;
  v18 = v17;
  swift_release();
  swift_bridgeObjectRelease();
  v19 = v14;
  v20 = v16;
  v21 = v18 & 1;
  LOBYTE(v22) = _;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BAF80);
  sub_209F671E0();
  swift_release();
  swift_release();
}

unint64_t sub_209EE31C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_209F67B10();
  sub_209F6733C();
  v4 = sub_209F67B28();
  return sub_209EE3330(a1, a2, v4);
}

unint64_t sub_209EE3224(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_209F67684();
  return sub_209EE3410(a1, v2);
}

uint64_t sub_209EE3254(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 8))();
  return a1;
}

uint64_t sub_209EE3288(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_209EE32C4()
{
  return MEMORY[0x24BDB9D70];
}

uint64_t method lookup function for XMLUIData()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of XMLUIData.postbackDictionary.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of XMLUIData.postbackDictionary.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of XMLUIData.postbackDictionary.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

ValueMetadata *type metadata accessor for ActivityIndicatorManagerAssociatedKey()
{
  return &type metadata for ActivityIndicatorManagerAssociatedKey;
}

ValueMetadata *type metadata accessor for XMLUIDataAssociatedKey()
{
  return &type metadata for XMLUIDataAssociatedKey;
}

ValueMetadata *type metadata accessor for ScriptEnvironmentAssociatedKey()
{
  return &type metadata for ScriptEnvironmentAssociatedKey;
}

unint64_t sub_209EE3330(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_209F679A8() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_209F679A8() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_209EE3410(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_209EE34D4(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x20BD1CA48](v9, a1);
      sub_209EE3254((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_209EE34D4(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 16))(a2, a1);
  return a2;
}

_OWORD *sub_209EE3510(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_209EE3520()
{
  return swift_release();
}

uint64_t sub_209EE3528(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

id sub_209EE356C()
{
  id *v0;
  id v1;
  id v2;

  v1 = *v0;
  v2 = *v0;
  return v1;
}

id sub_209EE3590()
{
  id *v0;

  return objc_msgSend(*v0, sel_leadingAnchor);
}

id sub_209EE35B4()
{
  id *v0;

  return objc_msgSend(*v0, sel_trailingAnchor);
}

id sub_209EE35D8()
{
  id *v0;

  return objc_msgSend(*v0, sel_topAnchor);
}

id sub_209EE35FC()
{
  id *v0;

  return objc_msgSend(*v0, sel_bottomAnchor);
}

id sub_209EE3620()
{
  id *v0;

  return objc_msgSend(*v0, sel_owningView);
}

unint64_t sub_209EE3644()
{
  unint64_t result;

  result = qword_2545BAFA0;
  if (!qword_2545BAFA0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2545BAFA0);
  }
  return result;
}

uint64_t sub_209EE3690(char *a1, char *a2)
{
  return sub_209EE369C(*a1, *a2);
}

uint64_t sub_209EE369C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6574636572616863;
  else
    v3 = 25705;
  if (v2)
    v4 = 0xE200000000000000;
  else
    v4 = 0xED00006174614472;
  if ((a2 & 1) != 0)
    v5 = 0x6574636572616863;
  else
    v5 = 25705;
  if ((a2 & 1) != 0)
    v6 = 0xED00006174614472;
  else
    v6 = 0xE200000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_209F679A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_209EE3740()
{
  sub_209F67B10();
  sub_209F6733C();
  swift_bridgeObjectRelease();
  return sub_209F67B28();
}

uint64_t sub_209EE37C0()
{
  sub_209F6733C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_209EE381C()
{
  sub_209F67B10();
  sub_209F6733C();
  swift_bridgeObjectRelease();
  return sub_209F67B28();
}

uint64_t sub_209EE3898@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_209F67840();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_209EE38F4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 25705;
  if (*v1)
    v2 = 0x6574636572616863;
  v3 = 0xE200000000000000;
  if (*v1)
    v3 = 0xED00006174614472;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_209EE3934()
{
  _BYTE *v0;

  if (*v0)
    return 0x6574636572616863;
  else
    return 25705;
}

uint64_t sub_209EE3970@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_209F67840();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_209EE39D0(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_209EE39DC()
{
  sub_209EE529C();
  return sub_209F67B88();
}

uint64_t sub_209EE3A04()
{
  sub_209EE529C();
  return sub_209F67B94();
}

uint64_t type metadata accessor for HtmlLabelRowElement()
{
  uint64_t result;

  result = qword_2545BD3F0;
  if (!qword_2545BD3F0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_209EE3A68@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::String *v11;
  Swift::String v12;
  uint64_t v13;
  _QWORD v16[5];

  v4 = type metadata accessor for HTMLContent(0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v16[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for HtmlLabelRowElement();
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (Swift::String *)((char *)&v16[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v12 = Decoder.decodeRUIID()();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *v11 = v12;
  sub_209EE0E3C((uint64_t)a1, (uint64_t)v16);
  sub_209EF1E94(v16, (uint64_t)v7);
  sub_209EE3BCC((uint64_t)v7, (uint64_t)v11 + *(int *)(v8 + 20));
  sub_209EE3C10((uint64_t)v11, a2, (uint64_t (*)(_QWORD))type metadata accessor for HtmlLabelRowElement);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_209EE3C54((uint64_t)v11);
}

uint64_t sub_209EE3BCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HTMLContent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_209EE3C10(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_209EE3C54(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for HtmlLabelRowElement();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_209EE3C98()
{
  return sub_209F6712C();
}

uint64_t sub_209EE3CB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;

  v5 = sub_209F669E8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for HTMLContent(0);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_209F66F34();
  v15 = sub_209F66EBC();
  sub_209EE3C10(v2 + *(int *)(a1 + 20), (uint64_t)v13, type metadata accessor for HTMLContent);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v13, v5);
  result = sub_209F670E4();
  *(_QWORD *)a2 = v14;
  *(_QWORD *)(a2 + 8) = 0x4010000000000000;
  *(_BYTE *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = v15;
  *(_QWORD *)(a2 + 32) = 0;
  *(_BYTE *)(a2 + 40) = 1;
  *(_QWORD *)(a2 + 48) = result;
  *(_QWORD *)(a2 + 56) = v17;
  *(_BYTE *)(a2 + 64) = v18 & 1;
  *(_QWORD *)(a2 + 72) = v19;
  return result;
}

uint64_t sub_209EE3DD0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_209EE3A68(a1, a2);
}

uint64_t sub_209EE3DE4@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

id sub_209EE3DF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  void (*v8)(char *, uint64_t);
  id v9;
  uint64_t inited;
  void **v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  id v22;
  uint64_t v24;

  v0 = sub_209F67300();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_209F672E8();
  v5 = sub_209F672D0();
  v7 = v6;
  v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v4, v0);
  v9 = 0;
  if (v7 >> 60 != 15)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BAFA8);
    inited = swift_initStackObject();
    v11 = (void **)MEMORY[0x24BEBB350];
    *(_OWORD *)(inited + 16) = xmmword_209F76440;
    v12 = *v11;
    *(_QWORD *)(inited + 32) = *v11;
    v13 = (void *)*MEMORY[0x24BEBB370];
    type metadata accessor for DocumentType(0);
    *(_QWORD *)(inited + 40) = v13;
    v14 = (void *)*MEMORY[0x24BEBB340];
    *(_QWORD *)(inited + 64) = v15;
    *(_QWORD *)(inited + 72) = v14;
    sub_209EE403C(v5, v7);
    v16 = v12;
    v17 = v13;
    v18 = v14;
    sub_209F672E8();
    v19 = sub_209F672F4();
    v8(v4, v0);
    *(_QWORD *)(inited + 104) = MEMORY[0x24BEE1E88];
    *(_QWORD *)(inited + 80) = v19;
    v20 = sub_209EE4094(inited);
    v21 = objc_allocWithZone(MEMORY[0x24BDD1458]);
    v22 = sub_209EE47EC(v5, v7, v20, 0);
    sub_209EE4914(v5, v7);
    v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1688]), sel_initWithAttributedString_, v22);

    objc_msgSend(v9, sel_removeAttribute_range_, *MEMORY[0x24BEBB360], 0, objc_msgSend(v9, sel_length));
    sub_209EE4914(v5, v7);
  }
  return v9;
}

void type metadata accessor for DocumentType(uint64_t a1)
{
  sub_209EE5150(a1, &qword_2545BAFF0);
}

uint64_t sub_209EE403C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_209EE4050(a1, a2);
  return a1;
}

uint64_t sub_209EE4050(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

unint64_t sub_209EE4094(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB058);
  v2 = sub_209F67810();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_209EE52E0(v6, (uint64_t)&v13);
    v7 = v13;
    result = sub_209EE45F8(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_209EE3510(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_209EE41AC(uint64_t a1, uint64_t a2)
{
  return sub_209EE4484(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

uint64_t sub_209EE41C4(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_209F672AC();
  *a2 = 0;
  return result;
}

uint64_t sub_209EE4238(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_209F672B8();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_209EE42B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_209F672C4();
  v2 = sub_209F672A0();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_209EE4304()
{
  sub_209EE4ABC(&qword_2545BB040, (uint64_t (*)(uint64_t))type metadata accessor for DocumentReadingOptionKey, (uint64_t)&unk_209F767F4);
  sub_209EE4ABC(&qword_2545BB048, (uint64_t (*)(uint64_t))type metadata accessor for DocumentReadingOptionKey, (uint64_t)&unk_209F7679C);
  return sub_209F67834();
}

uint64_t sub_209EE4388@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_209F672A0();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_209EE43CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_209F672C4();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_209EE43F4()
{
  sub_209EE4ABC(&qword_2545BB030, (uint64_t (*)(uint64_t))type metadata accessor for DocumentType, (uint64_t)&unk_209F76934);
  sub_209EE4ABC(&qword_2545BB038, (uint64_t (*)(uint64_t))type metadata accessor for DocumentType, (uint64_t)&unk_209F768DC);
  return sub_209F67834();
}

uint64_t sub_209EE4478(uint64_t a1, uint64_t a2)
{
  return sub_209EE4484(a1, a2, MEMORY[0x24BEE0CD8]);
}

uint64_t sub_209EE4484(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_209F672C4();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_209EE44C0()
{
  sub_209F672C4();
  sub_209F6733C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_209EE4500()
{
  uint64_t v0;

  sub_209F672C4();
  sub_209F67B10();
  sub_209F6733C();
  v0 = sub_209F67B28();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_209EE4570()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_209F672C4();
  v2 = v1;
  if (v0 == sub_209F672C4() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_209F679A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

unint64_t sub_209EE45F8(uint64_t a1)
{
  uint64_t v2;

  sub_209F672C4();
  sub_209F67B10();
  sub_209F6733C();
  v2 = sub_209F67B28();
  swift_bridgeObjectRelease();
  return sub_209EE4678(a1, v2);
}

unint64_t sub_209EE4678(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_209F672C4();
    v8 = v7;
    if (v6 == sub_209F672C4() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_209F679A8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_209F672C4();
          v15 = v14;
          if (v13 == sub_209F672C4() && v15 == v16)
            break;
          v18 = sub_209F679A8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

id sub_209EE47EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v12[2];

  v12[1] = *(id *)MEMORY[0x24BDAC8D0];
  v6 = (void *)sub_209F66AA8();
  type metadata accessor for DocumentReadingOptionKey(0);
  sub_209EE4ABC(&qword_2545BB040, (uint64_t (*)(uint64_t))type metadata accessor for DocumentReadingOptionKey, (uint64_t)&unk_209F767F4);
  v7 = (void *)sub_209F6724C();
  swift_bridgeObjectRelease();
  v12[0] = 0;
  v8 = objc_msgSend(v4, sel_initWithData_options_documentAttributes_error_, v6, v7, a4, v12);

  if (v8)
  {
    v9 = v12[0];
  }
  else
  {
    v10 = v12[0];
    sub_209F66A18();

    swift_willThrow();
  }
  return v8;
}

uint64_t sub_209EE4914(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_209EE4928(a1, a2);
  return a1;
}

uint64_t sub_209EE4928(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

unint64_t sub_209EE4970()
{
  unint64_t result;

  result = qword_2545BAFB0;
  if (!qword_2545BAFB0)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7645C, &type metadata for HtmlLabelRowElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BAFB0);
  }
  return result;
}

unint64_t sub_209EE49B8()
{
  unint64_t result;

  result = qword_2545BAFB8;
  if (!qword_2545BAFB8)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F76574, &type metadata for HtmlLabelRowElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BAFB8);
  }
  return result;
}

unint64_t sub_209EE4A00()
{
  unint64_t result;

  result = qword_2545BAFC0;
  if (!qword_2545BAFC0)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7654C, &type metadata for HtmlLabelRowElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BAFC0);
  }
  return result;
}

uint64_t sub_209EE4A44(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_209EE4ABC(&qword_2545BAFC8, (uint64_t (*)(uint64_t))type metadata accessor for HtmlLabelRowElement, (uint64_t)"I$2Bԧ");
  a1[2] = sub_209EE4ABC(&qword_2545BAFD0, (uint64_t (*)(uint64_t))type metadata accessor for HtmlLabelRowElement, (uint64_t)&unk_209F76630);
  result = sub_209EE4ABC(&qword_2545BAFD8, (uint64_t (*)(uint64_t))type metadata accessor for HtmlLabelRowElement, (uint64_t)&unk_209F765B8);
  a1[3] = result;
  return result;
}

uint64_t sub_209EE4ABC(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x20BD1DB1C](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_209EE4AFC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_209EE4B0C()
{
  return MEMORY[0x24BEE0D10];
}

uint64_t *sub_209EE4B18(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_209F669E8();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_209EE4BB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_209F669E8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_209EE4BFC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_209F669E8();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *sub_209EE4C6C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_209F669E8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_209EE4CE8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_209F669E8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_209EE4D44(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_209F669E8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_209EE4DB0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_209EE4DBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for HTMLContent(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_209EE4E38()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_209EE4E44(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for HTMLContent(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_209EE4EB8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_209F669E8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for HtmlLabelRowElement.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for HtmlLabelRowElement.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_209EE5014 + 4 * byte_209F76455[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_209EE5048 + 4 * byte_209F76450[v4]))();
}

uint64_t sub_209EE5048(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_209EE5050(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x209EE5058);
  return result;
}

uint64_t sub_209EE5064(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x209EE506CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_209EE5070(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_209EE5078(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_209EE5084(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_209EE508C(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for HtmlLabelRowElement.CodingKeys()
{
  return &type metadata for HtmlLabelRowElement.CodingKeys;
}

unint64_t sub_209EE50AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2545BAFE0;
  if (!qword_2545BAFE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BAFE8);
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BDF46F8], v1);
    atomic_store(result, (unint64_t *)&qword_2545BAFE0);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x20BD1DB10](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

void type metadata accessor for DocumentReadingOptionKey(uint64_t a1)
{
  sub_209EE5150(a1, &qword_2545BAFF8);
}

void sub_209EE5150(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_209EE5194()
{
  return sub_209EE4ABC(&qword_2545BB000, (uint64_t (*)(uint64_t))type metadata accessor for DocumentReadingOptionKey, (uint64_t)&unk_209F76764);
}

uint64_t sub_209EE51C0()
{
  return sub_209EE4ABC(&qword_2545BB008, (uint64_t (*)(uint64_t))type metadata accessor for DocumentReadingOptionKey, (uint64_t)&unk_209F7673C);
}

uint64_t sub_209EE51EC()
{
  return sub_209EE4ABC(&qword_2545BB010, (uint64_t (*)(uint64_t))type metadata accessor for DocumentReadingOptionKey, (uint64_t)&unk_209F767CC);
}

uint64_t sub_209EE5218()
{
  return sub_209EE4ABC(&qword_2545BB018, (uint64_t (*)(uint64_t))type metadata accessor for DocumentType, (uint64_t)&unk_209F768A4);
}

uint64_t sub_209EE5244()
{
  return sub_209EE4ABC(&qword_2545BB020, (uint64_t (*)(uint64_t))type metadata accessor for DocumentType, (uint64_t)&unk_209F7687C);
}

uint64_t sub_209EE5270()
{
  return sub_209EE4ABC(&qword_2545BB028, (uint64_t (*)(uint64_t))type metadata accessor for DocumentType, (uint64_t)&unk_209F7690C);
}

unint64_t sub_209EE529C()
{
  unint64_t result;

  result = qword_2545BB050;
  if (!qword_2545BB050)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F764FC, &type metadata for HtmlLabelRowElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BB050);
  }
  return result;
}

uint64_t sub_209EE52E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB060);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_209EE535C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SubjectBox();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_209EE539C()
{
  void *v0;
  id v1;
  uint64_t v2;
  char *v4;
  _OWORD v5[2];
  _BYTE v6[24];
  uint64_t v7;

  swift_beginAccess();
  v1 = objc_getAssociatedObject(v0, &off_2545BB068);
  swift_endAccess();
  if (v1)
  {
    sub_209F67654();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_209EE5864((uint64_t)v5, (uint64_t)v6);
  if (!v7)
  {
    sub_209EE58AC((uint64_t)v6);
    return 0;
  }
  type metadata accessor for SubjectBox();
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  v2 = *(_QWORD *)&v4[OBJC_IVAR____TtC8RemoteUIP33_4FB534BE5016ADAD8486BA58D927C77010SubjectBox_subject];
  swift_retain();

  return v2;
}

uint64_t sub_209EE5488()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  objc_class *v4;
  char *v5;
  id v6;
  objc_super v8;

  v1 = v0;
  v2 = sub_209EE539C();
  if (v2)
    return v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545BB590);
  swift_allocObject();
  v3 = sub_209F66C7C();
  v4 = (objc_class *)type metadata accessor for SubjectBox();
  v5 = (char *)objc_allocWithZone(v4);
  *(_QWORD *)&v5[OBJC_IVAR____TtC8RemoteUIP33_4FB534BE5016ADAD8486BA58D927C77010SubjectBox_subject] = v3;
  v8.receiver = v5;
  v8.super_class = v4;
  swift_retain();
  v6 = objc_msgSendSuper2(&v8, sel_init);
  swift_beginAccess();
  objc_setAssociatedObject(v1, &off_2545BB068, v6, (void *)1);
  swift_endAccess();

  return v3;
}

Swift::Void __swiftcall RUIPage.notifyPageDidChangePublisher()()
{
  void *v0;
  void *v1;
  uint64_t v2;
  objc_class *v3;
  char *v4;
  id v5;
  objc_super v6;

  v1 = v0;
  if (!sub_209EE539C())
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545BB590);
    swift_allocObject();
    v2 = sub_209F66C7C();
    v3 = (objc_class *)type metadata accessor for SubjectBox();
    v4 = (char *)objc_allocWithZone(v3);
    *(_QWORD *)&v4[OBJC_IVAR____TtC8RemoteUIP33_4FB534BE5016ADAD8486BA58D927C77010SubjectBox_subject] = v2;
    v6.receiver = v4;
    v6.super_class = v3;
    swift_retain();
    v5 = objc_msgSendSuper2(&v6, sel_init);
    swift_beginAccess();
    objc_setAssociatedObject(v1, &off_2545BB068, v5, (void *)1);
    swift_endAccess();

  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545BB590);
  sub_209EE5820(&qword_2545BB088, MEMORY[0x24BDB9CA8]);
  sub_209F66CA0();
  swift_release();
}

uint64_t type metadata accessor for SubjectBox()
{
  return objc_opt_self();
}

uint64_t RUIPage.pageDidChange.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  objc_class *v3;
  char *v4;
  id v5;
  uint64_t v6;
  objc_super v8;

  v1 = v0;
  if (!sub_209EE539C())
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545BB590);
    swift_allocObject();
    v2 = sub_209F66C7C();
    v3 = (objc_class *)type metadata accessor for SubjectBox();
    v4 = (char *)objc_allocWithZone(v3);
    *(_QWORD *)&v4[OBJC_IVAR____TtC8RemoteUIP33_4FB534BE5016ADAD8486BA58D927C77010SubjectBox_subject] = v2;
    v8.receiver = v4;
    v8.super_class = v3;
    swift_retain();
    v5 = objc_msgSendSuper2(&v8, sel_init);
    swift_beginAccess();
    objc_setAssociatedObject(v1, &off_2545BB068, v5, (void *)1);
    swift_endAccess();

  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545BB590);
  sub_209EE5820(&qword_2545BB090, MEMORY[0x24BDB9CB0]);
  v6 = sub_209F66D00();
  swift_release();
  return v6;
}

uint64_t sub_209EE5820(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2545BB590);
    result = MEMORY[0x20BD1DB1C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_209EE5864(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BAF78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_209EE58AC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BAF78);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_209EE58EC()
{
  sub_209EE5DB0();
}

id sub_209EE58F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for Box(0, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x50), a3, a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

uint64_t sub_209EE5944(char *a1)
{
  return (*(uint64_t (**)(char *))(*(_QWORD *)(*(_QWORD *)((*MEMORY[0x24BEE4EA0] & *(_QWORD *)a1) + 0x50)
                                                       - 8)
                                           + 8))(&a1[*(_QWORD *)((*MEMORY[0x24BEE4EA0] & *(_QWORD *)a1) + 0x58)]);
}

void sub_209EE596C(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  void *v3;
  const void *v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _OWORD v10[2];
  _BYTE v11[24];
  uint64_t v12;

  v5 = (const void *)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  if (objc_getAssociatedObject(v3, v5))
  {
    sub_209F67654();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v10, 0, sizeof(v10));
  }
  sub_209EE5864((uint64_t)v10, (uint64_t)v11);
  if (v12)
  {
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    type metadata accessor for Box(0, AssociatedTypeWitness, v7, v8);
    if ((swift_dynamicCast() & 1) != 0)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a3, &v9[*(_QWORD *)((*MEMORY[0x24BEE4EA0] & *(_QWORD *)v9) + 0x58)], AssociatedTypeWitness);

      return;
    }
  }
  else
  {
    sub_209EE58AC((uint64_t)v11);
  }
  sub_209F677E0();
  __break(1u);
}

uint64_t type metadata accessor for Box(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Box);
}

uint64_t sub_209EE5AE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness;

  sub_209EE5DDC(a1, a2, a3, a4);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
}

void sub_209EE5B44(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  void *v3;
  const void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  char *v10;
  _OWORD v11[2];
  _BYTE v12[24];
  uint64_t v13;

  v5 = (const void *)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  if (objc_getAssociatedObject(v3, v5))
  {
    sub_209F67654();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v11, 0, sizeof(v11));
  }
  sub_209EE5864((uint64_t)v11, (uint64_t)v12);
  if (v13)
  {
    swift_getAssociatedTypeWitness();
    v6 = sub_209F675DC();
    type metadata accessor for Box(0, v6, v7, v8);
    if ((swift_dynamicCast() & 1) != 0)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a3, &v10[*(_QWORD *)((*MEMORY[0x24BEE4EA0] & *(_QWORD *)v10) + 0x58)], v6);

      return;
    }
  }
  else
  {
    sub_209EE58AC((uint64_t)v12);
  }
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(a3, 1, 1, AssociatedTypeWitness);
}

uint64_t sub_209EE5CB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;

  sub_209EE5E84(a1, a2, a3, a4);
  swift_getAssociatedTypeWitness();
  v5 = sub_209F675DC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
}

id sub_209EE5D20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  objc_super v11;

  v6 = (char *)objc_allocWithZone((Class)type metadata accessor for Box(0, *(_QWORD *)(v4 + 80), a3, a4));
  v7 = *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *(_QWORD *)v6) + 0x50);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(&v6[*(_QWORD *)((*MEMORY[0x24BEE4EA0] & *(_QWORD *)v6) + 0x58)], a1, v7);
  v11.receiver = v6;
  v11.super_class = (Class)type metadata accessor for Box(0, v7, v8, v9);
  return objc_msgSendSuper2(&v11, sel_init);
}

void sub_209EE5DB0()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_209EE5DDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  const void *v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;

  v6 = (const void *)(*(uint64_t (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for Box(0, AssociatedTypeWitness, v8, v9);
  v13 = sub_209EE5D20(a1, v10, v11, v12);
  objc_setAssociatedObject(v4, v6, v13, (void *)1);

}

void sub_209EE5E84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;

  v6 = (const void *)(*(uint64_t (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  swift_getAssociatedTypeWitness();
  v7 = sub_209F675DC();
  type metadata accessor for Box(0, v7, v8, v9);
  v13 = sub_209EE5D20(a1, v10, v11, v12);
  objc_setAssociatedObject(v4, v6, v13, (void *)1);

}

uint64_t sub_209EE5F3C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x20BD1DAA4](a1, v6, a5);
}

uint64_t DecodingContext.resourceLoader.getter()
{
  return swift_retain();
}

id DecodingContext.userInfo.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

uint64_t sub_209EE5FE8@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t sub_209EE5FF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB098);
  MEMORY[0x24BDAC7A8](v0, v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_209F677B0();
  __swift_allocate_value_buffer(v4, qword_2545C6EC0);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_2545C6EC0);
  sub_209F677A4();
  v6 = *(_QWORD *)(v4 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v3, 1, v4);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(v5, v3, v4);
  __break(1u);
  return result;
}

uint64_t sub_209EE60D0()
{
  uint64_t v0;

  if (qword_2545BDA80 != -1)
    swift_once();
  v0 = sub_209F677B0();
  return __swift_project_value_buffer(v0, (uint64_t)qword_2545C6EC0);
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t Decoder.ruiDecodingContext.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t result;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v0 = sub_209F677B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_209F67B4C();
  if (qword_2545BDA80 != -1)
    swift_once();
  v6 = __swift_project_value_buffer(v0, (uint64_t)qword_2545C6EC0);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v4, v6, v0);
  if (*(_QWORD *)(v5 + 16) && (v7 = sub_209EE628C((uint64_t)v4), (v8 & 1) != 0))
  {
    sub_209EE3288(*(_QWORD *)(v5 + 56) + 32 * v7, (uint64_t)&v10);
  }
  else
  {
    v10 = 0u;
    v11 = 0u;
  }
  result = swift_bridgeObjectRelease();
  if (*((_QWORD *)&v11 + 1))
  {
    (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
    sub_209EE3510(&v10, &v12);
    return swift_dynamicCast();
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_209EE628C(uint64_t a1)
{
  uint64_t v2;

  sub_209F677B0();
  v2 = sub_209F67264();
  return sub_209EE645C(a1, v2);
}

_QWORD *initializeBufferWithCopyOfBuffer for DecodingContext(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  id v4;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  v4 = v3;
  return a1;
}

void destroy for DecodingContext(uint64_t a1)
{
  swift_release();

}

_QWORD *assignWithCopy for DecodingContext(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v4 = (void *)a2[1];
  v5 = (void *)a1[1];
  a1[1] = v4;
  v6 = v4;

  return a1;
}

uint64_t assignWithTake for DecodingContext(uint64_t a1, _OWORD *a2)
{
  void *v4;

  swift_release();
  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for DecodingContext(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DecodingContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DecodingContext()
{
  return &type metadata for DecodingContext;
}

unint64_t sub_209EE645C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, unint64_t, uint64_t);
  char v15;
  _QWORD v17[2];

  v3 = v2;
  v17[1] = a1;
  v5 = sub_209F677B0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = -1 << *(_BYTE *)(v3 + 32);
  v11 = a2 & ~v10;
  if (((*(_QWORD *)(v3 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
  {
    v12 = ~v10;
    v13 = *(_QWORD *)(v6 + 72);
    v14 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v14(v9, *(_QWORD *)(v3 + 48) + v13 * v11, v5);
      v15 = sub_209F67294();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      if ((v15 & 1) != 0)
        break;
      v11 = (v11 + 1) & v12;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  }
  return v11;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

unint64_t sub_209EE65C8(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB180);
  v2 = (_QWORD *)sub_209F67810();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    result = sub_209EE31C0(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_209EE66E0(void *a1)
{
  uint64_t v2;
  unint64_t v3;
  void *v4;
  _QWORD v6[6];

  v2 = swift_allocObject();
  v3 = sub_209EE65C8(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v3;
  v6[4] = sub_209EE6794;
  v6[5] = 0;
  v6[0] = MEMORY[0x24BDAC760];
  v6[1] = 1107296256;
  v6[2] = sub_209EE696C;
  v6[3] = &block_descriptor;
  v4 = _Block_copy(v6);
  objc_msgSend(a1, sel_setExceptionHandler_, v4);
  _Block_release(v4);
  return v2;
}

uint64_t sub_209EE6794(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD v18[3];
  uint64_t v19;

  v3 = sub_209F66BA4();
  v4 = *(_QWORD *)(v3 - 8);
  result = MEMORY[0x24BDAC7A8](v3, v5);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v9 = a2;
    v10 = sub_209F01740();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v8, v10, v3);
    v11 = v9;
    v12 = sub_209F66B8C();
    v13 = sub_209F67534();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v19 = v15;
      *(_DWORD *)v14 = 136315138;
      v18[1] = v14 + 4;
      sub_209F3F2A8();
      v18[2] = sub_209EE75A0(v16, v17, &v19);
      sub_209F675E8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_209E87000, v12, v13, "%s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x20BD1DC00](v15, -1, -1);
      MEMORY[0x20BD1DC00](v14, -1, -1);

    }
    else
    {

    }
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v8, v3);
  }
  return result;
}

void sub_209EE696C(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

id sub_209EE69F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;

  if (!a2)
    return 0;
  v3 = *(void **)(v2 + 16);
  v4 = (void *)sub_209F672A0();
  v5 = objc_msgSend(v3, sel_objectForKeyedSubscript_, v4);

  return v5;
}

uint64_t sub_209EE6A50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;

  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *(_QWORD *)(v3 + 24);
  *(_QWORD *)(v3 + 24) = 0x8000000000000000;
  sub_209EE7EF4(a1, a2, a3, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v3 + 24) = v9;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_209EE6B08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;

  if (!a2)
    return 0;
  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 24);
  if (!*(_QWORD *)(v5 + 16))
    return 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = sub_209EE31C0(a1, a2);
  if ((v7 & 1) != 0)
  {
    v8 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v6);
    swift_unknownObjectRetain();
  }
  else
  {
    v8 = 0;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8;
}

id sub_209EE6BB0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  id v5;

  v1 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
  if (!v1)
    return 0;
  v2 = (void *)v1;
  v3 = (void *)sub_209F673FC();
  v4 = objc_msgSend(v2, sel_callWithArguments_, v3);

  if (v4)
  {
    v5 = objc_msgSend(v4, sel_toBool);

  }
  else
  {
    v5 = 0;
  }

  return v5;
}

uint64_t ScriptEnvironment.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ScriptEnvironment.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_209EE6CA8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for ScriptEnvironment();
  result = sub_209F66C70();
  *a1 = result;
  return result;
}

uint64_t sub_209EE6CE0(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  v3 = result + a2;
  if (__OFADD__(result, a2))
  {
    __break(1u);
  }
  else if (!(a3 >> 62))
  {
    v4 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3 < 0)
      goto LABEL_8;
    goto LABEL_4;
  }
  swift_bridgeObjectRetain();
  v4 = sub_209F677EC();
  result = swift_bridgeObjectRelease();
  if (v3 < 0)
    goto LABEL_8;
LABEL_4:
  if (v4 >= v3)
    return v3;
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_209EE6D64(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = result;
  if (a4 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_209F677EC();
    result = swift_bridgeObjectRelease();
    if (v7 >= a3)
      goto LABEL_3;
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v7 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v7 < a3)
    goto LABEL_17;
LABEL_3:
  if ((a3 | v6) < 0 || v7 < v6)
    goto LABEL_17;
  v8 = a3 - v6;
  if (a2 >= 1)
  {
    if (v8 < 0 || v8 >= a2)
      goto LABEL_12;
    return 0;
  }
  if (v8 <= 0 && v8 > a2)
    return 0;
LABEL_12:
  result = v6 + a2;
  if (__OFADD__(v6, a2))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    return result;
  }
  if (result < 0 || v7 < result)
    goto LABEL_19;
  return result;
}

uint64_t sub_209EE6E50(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = result;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_209F677EC();
    result = swift_bridgeObjectRelease();
    if (v5 < a2)
      goto LABEL_7;
  }
  else
  {
    v5 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v5 < a2)
      goto LABEL_7;
  }
  if (((a2 | v4) & 0x8000000000000000) == 0 && v5 >= v4)
    return a2 - v4;
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_209EE6EDC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t *v2;
  uint64_t result;

  result = sub_209EE6F08(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t sub_209EE6F08(uint64_t result, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = result - 1;
  if (__OFSUB__(result, 1))
  {
    __break(1u);
  }
  else if (!(a2 >> 62))
  {
    v3 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v2 < 0)
      goto LABEL_8;
    goto LABEL_4;
  }
  swift_bridgeObjectRetain();
  v3 = sub_209F677EC();
  result = swift_bridgeObjectRelease();
  if (v2 < 0)
    goto LABEL_8;
LABEL_4:
  if (v2 < v3)
    return v2;
LABEL_8:
  __break(1u);
  return result;
}

uint64_t *sub_209EE6F88(uint64_t *result)
{
  uint64_t *v1;
  unint64_t *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = *result - 1;
  if (__OFSUB__(*result, 1))
  {
    __break(1u);
  }
  else
  {
    v1 = result;
    v4 = *v2;
    if (!(v4 >> 62))
    {
      v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v3 < 0)
        goto LABEL_8;
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRetain();
  v5 = sub_209F677EC();
  result = (uint64_t *)swift_bridgeObjectRelease();
  if (v3 < 0)
    goto LABEL_8;
LABEL_4:
  if (v3 < v5)
  {
    *v1 = v3;
    return result;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_209EE7010@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  unint64_t *v3;
  uint64_t result;

  result = sub_209EE6CE0(*a1, a2, *v3);
  *a3 = result;
  return result;
}

uint64_t sub_209EE703C(uint64_t *a1, uint64_t *a2)
{
  unint64_t *v2;

  return sub_209EE6E50(*a1, *a2, *v2);
}

void sub_209EE704C(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

void sub_209EE7054(uint64_t *a1@<X8>)
{
  unint64_t *v1;
  unint64_t v3;
  uint64_t v4;

  v3 = *v1;
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    v4 = sub_209F677EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *a1 = v4;
}

void (*sub_209EE70BC(void (**a1)(id *a1), unint64_t *a2))(_QWORD *a1)
{
  uint64_t *v2;
  void (*v5)(id *);
  void (*v6)(id *);
  uint64_t v7;

  v5 = (void (*)(id *))malloc(0x30uLL);
  *a1 = v5;
  v6 = sub_209EE713C(v5, *a2, *v2);
  *((_QWORD *)v5 + 4) = v7;
  *((_QWORD *)v5 + 5) = v6;
  return sub_209EE7110;
}

void sub_209EE7110(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 40))(*a1);
  free(v1);
}

void (*sub_209EE713C(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x20BD1CAB4](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return sub_209EE71A8;
  }
  __break(1u);
  return result;
}

void sub_209EE71A8(id *a1)
{

}

uint64_t sub_209EE71B0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  *a2 = sub_209EE8D70(*a1, a1[1], *v2);
  a2[1] = v4;
  a2[2] = v5;
  return swift_bridgeObjectRetain();
}

void sub_209EE71E8(_QWORD *a1@<X8>)
{
  unint64_t *v1;
  unint64_t v3;
  uint64_t v4;

  v3 = *v1;
  if (!(v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
    *a1 = 0;
    a1[1] = v4;
    return;
  }
  swift_bridgeObjectRetain();
  v4 = sub_209F677EC();
  swift_bridgeObjectRelease();
  if ((v4 & 0x8000000000000000) == 0)
    goto LABEL_3;
  __break(1u);
}

BOOL sub_209EE7254()
{
  _QWORD *v0;
  uint64_t v1;

  if (*v0 >> 62)
  {
    swift_bridgeObjectRetain();
    v1 = sub_209F677EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v1 = *(_QWORD *)((*v0 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  return v1 == 0;
}

void sub_209EE72B8(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_WORD *)(a1 + 8) = 256;
}

uint64_t sub_209EE72C8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t *v4;
  uint64_t result;
  char v7;

  result = sub_209EE6D64(*a1, a2, *a3, *v4);
  *(_QWORD *)a4 = result;
  *(_BYTE *)(a4 + 8) = v7 & 1;
  return result;
}

uint64_t *sub_209EE7300(uint64_t *result, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  BOOL v5;

  v2 = *result;
  v3 = a2[1];
  if (*result >= *a2)
  {
    v5 = __OFSUB__(v2, v3);
    v4 = v2 - v3 < 0;
  }
  else
  {
    v5 = 0;
    v4 = 0;
  }
  if (v4 == v5)
    __break(1u);
  return result;
}

_QWORD *sub_209EE731C(_QWORD *result, _QWORD *a2)
{
  if (*result < *a2 || a2[1] < *result)
    __break(1u);
  return result;
}

_QWORD *sub_209EE7338(_QWORD *result, _QWORD *a2)
{
  if (*result < *a2 || a2[1] < result[1])
    __break(1u);
  return result;
}

uint64_t sub_209EE7354@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t *v2;
  uint64_t result;

  result = sub_209EE7380(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t sub_209EE7380(uint64_t result, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = result;
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_209F677EC();
    result = swift_bridgeObjectRelease();
    if (v2 < 0)
      goto LABEL_6;
  }
  else
  {
    v3 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (result < 0)
      goto LABEL_6;
  }
  if (v3 > v2)
    return v2 + 1;
LABEL_6:
  __break(1u);
  return result;
}

_QWORD *sub_209EE73F8(_QWORD *result)
{
  unint64_t *v1;
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = result;
  v3 = *v1;
  v4 = *result;
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_209F677EC();
    result = (_QWORD *)swift_bridgeObjectRelease();
    if (v4 < 0)
      goto LABEL_6;
  }
  else
  {
    v5 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v4 < 0)
      goto LABEL_6;
  }
  if (v4 < v5)
  {
    *v2 = v4 + 1;
    return result;
  }
LABEL_6:
  __break(1u);
  return result;
}

void sub_209EE7478(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = 0;
}

uint64_t sub_209EE7484()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;

  if (!(*v0 >> 62))
    return *(_QWORD *)((*v0 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v1 = sub_209F677EC();
  result = swift_bridgeObjectRelease();
  if ((v1 & 0x8000000000000000) == 0)
    return v1;
  __break(1u);
  return result;
}

uint64_t sub_209EE74E4()
{
  return 2;
}

uint64_t sub_209EE74EC()
{
  unint64_t *v0;
  uint64_t v1;

  v1 = sub_209EE8B08(*v0);
  swift_bridgeObjectRelease();
  return v1;
}

unint64_t *sub_209EE7520(unint64_t *a1, unint64_t **a2, uint64_t a3)
{
  unint64_t *v3;

  return sub_209EE8BFC(a1, a2, a3, *v3);
}

uint64_t sub_209EE7528()
{
  return sub_209F673A8();
}

void sub_209EE7548(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

uint64_t sub_209EE7550()
{
  sub_209EE88F8();
  return sub_209F66DCC();
}

uint64_t sub_209EE75A0(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_209EE7670(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_209EE3288((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_209EE3288((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_209EE7670(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_209F675F4();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_209EE7828(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_209F6772C();
  if (!v8)
  {
    sub_209F677D4();
    __break(1u);
LABEL_17:
    result = sub_209F6781C();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_209EE7828(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_209EE78BC(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_209EE7A94(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_209EE7A94(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_209EE78BC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_209EE7A30(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_209F676D8();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_209F677D4();
      __break(1u);
LABEL_10:
      v2 = sub_209F6736C();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_209F6781C();
    __break(1u);
LABEL_14:
    result = sub_209F677D4();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_209EE7A30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545BC300);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_209EE7A94(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545BC300);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_209F6781C();
  __break(1u);
  return result;
}

uint64_t sub_209EE7BE0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB180);
  v36 = a2;
  v6 = sub_209F67804();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
    }
    sub_209F67B10();
    sub_209F6733C();
    result = sub_209F67B28();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_209EE7EF4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v5 = v4;
  v10 = *v4;
  v12 = sub_209EE31C0(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_209EE8954();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      result = swift_unknownObjectRelease();
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v23 = (uint64_t *)(v18[6] + 16 * v12);
    *v23 = a2;
    v23[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v24 = v18[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v18[2] = v26;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_209EE7BE0(v15, a4 & 1);
  v21 = sub_209EE31C0(a2, a3);
  if ((v16 & 1) == (v22 & 1))
  {
    v12 = v21;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_209F67AA4();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ScriptEnvironment.LoadURLParams()
{
  uint64_t result;

  result = qword_2545BDD10;
  if (!qword_2545BDD10)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_209EE8090()
{
  unint64_t result;

  result = qword_2545BB0A0;
  if (!qword_2545BB0A0)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F76AD8, &type metadata for JSValueCollection);
    atomic_store(result, (unint64_t *)&qword_2545BB0A0);
  }
  return result;
}

uint64_t sub_209EE80D4()
{
  return sub_209EE8324(&qword_2545BB0A8, MEMORY[0x24BEE1BD0]);
}

unint64_t sub_209EE80F8()
{
  unint64_t result;

  result = qword_2545BB0B8;
  if (!qword_2545BB0B8)
  {
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BEE1790], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_2545BB0B8);
  }
  return result;
}

uint64_t sub_209EE813C()
{
  return sub_209EE8244(&qword_2545BB0C0, (uint64_t (*)(void))sub_209EE8168, MEMORY[0x24BEE4230]);
}

unint64_t sub_209EE8168()
{
  unint64_t result;

  result = qword_2545BB0D0;
  if (!qword_2545BB0D0)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F76A88, &type metadata for JSValueCollection);
    atomic_store(result, (unint64_t *)&qword_2545BB0D0);
  }
  return result;
}

unint64_t sub_209EE81B0()
{
  unint64_t result;

  result = qword_2545BB0D8;
  if (!qword_2545BB0D8)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F76B38, &type metadata for JSValueCollection);
    atomic_store(result, (unint64_t *)&qword_2545BB0D8);
  }
  return result;
}

uint64_t sub_209EE81F4()
{
  return sub_209EE8324(&qword_2545BB0E0, MEMORY[0x24BEE1BA8]);
}

uint64_t sub_209EE8218()
{
  return sub_209EE8244(&qword_2545BB0E8, (uint64_t (*)(void))sub_209EE8090, MEMORY[0x24BEE4218]);
}

uint64_t sub_209EE8244(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BB0C8);
    v8 = a2();
    result = MEMORY[0x20BD1DB1C](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_209EE82B0()
{
  unint64_t result;

  result = qword_2545BB0F0;
  if (!qword_2545BB0F0)
  {
    result = MEMORY[0x20BD1DB1C](") 2Bܣ", &type metadata for JSValueCollection);
    atomic_store(result, (unint64_t *)&qword_2545BB0F0);
  }
  return result;
}

uint64_t sub_209EE82F4()
{
  return MEMORY[0x24BEE1780];
}

uint64_t sub_209EE8300()
{
  return sub_209EE8324(&qword_2545BB0F8, MEMORY[0x24BEE1BD8]);
}

uint64_t sub_209EE8324(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BB0B0);
    v6 = sub_209EE80F8();
    v7[0] = MEMORY[0x24BEE17A8];
    v7[1] = v6;
    result = MEMORY[0x20BD1DB1C](a2, v5, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_209EE8390()
{
  return sub_209EE83E8(&qword_2545BB100, &qword_2545BB0C8, MEMORY[0x24BEE4238]);
}

uint64_t sub_209EE83BC()
{
  return sub_209EE83E8(&qword_2545BB108, &qword_2545BB110, MEMORY[0x24BEE2C18]);
}

uint64_t sub_209EE83E8(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x20BD1DB1C](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for ScriptEnvironment()
{
  return objc_opt_self();
}

uint64_t method lookup function for ScriptEnvironment()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ScriptEnvironment.validate(withFunctionName:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

ValueMetadata *type metadata accessor for JSValueCollection()
{
  return &type metadata for JSValueCollection;
}

uint64_t *sub_209EE8470(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_209F66A90();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = *(void **)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + v9) = (uint64_t)v13;
    swift_bridgeObjectRetain();
    v14 = v13;
  }
  return a1;
}

void sub_209EE8510(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_209F66A90();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();

}

uint64_t sub_209EE8564(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  id v13;

  v6 = sub_209F66A90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = *(void **)(a2 + v8);
  *(_QWORD *)(a1 + v8) = v12;
  swift_bridgeObjectRetain();
  v13 = v12;
  return a1;
}

uint64_t sub_209EE85D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;

  v6 = sub_209F66A90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 24);
  v11 = *(void **)(a1 + v10);
  v12 = *(void **)(a2 + v10);
  *(_QWORD *)(a1 + v10) = v12;
  v13 = v12;

  return a1;
}

uint64_t sub_209EE866C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_209F66A90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_209EE86D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;

  v6 = sub_209F66A90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = *(int *)(a3 + 24);
  v13 = *(void **)(a1 + v12);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);

  return a1;
}

uint64_t sub_209EE8750()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_209EE875C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_209F66A90();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_209EE87DC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_209EE87E8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_209F66A90();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_209EE8864()
{
  uint64_t result;
  unint64_t v1;

  result = sub_209F66A90();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of ScriptableElement.makeScriptInterface()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

ValueMetadata *type metadata accessor for ScriptSourceEnvironmentKey()
{
  return &type metadata for ScriptSourceEnvironmentKey;
}

unint64_t sub_209EE88F8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2545BB178;
  if (!qword_2545BB178)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BC5C0);
    v2 = MEMORY[0x24BEE0D28];
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BEE4AB8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2545BB178);
  }
  return result;
}

void *sub_209EE8954()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB180);
  v2 = *v0;
  v3 = sub_209F677F8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_unknownObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_209EE8B08(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  unint64_t *v6;
  uint64_t result;
  unint64_t v8;

  if (!(a1 >> 62))
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_3;
  }
  swift_bridgeObjectRetain();
  v2 = sub_209F677EC();
  result = swift_bridgeObjectRelease();
  if ((v2 & 0x8000000000000000) == 0)
  {
LABEL_3:
    if (v2)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545BB750);
      v3 = swift_allocObject();
      v4 = _swift_stdlib_malloc_size((const void *)v3);
      v5 = v4 - 32;
      if (v4 < 32)
        v5 = v4 - 25;
      *(_QWORD *)(v3 + 16) = v2;
      *(_QWORD *)(v3 + 24) = (2 * (v5 >> 3)) | 1;
      swift_bridgeObjectRetain();
      v6 = sub_209EE8BFC(&v8, (unint64_t **)(v3 + 32), v2, a1);
      swift_bridgeObjectRelease();
      if (v6 == (unint64_t *)v2)
        return v3;
      __break(1u);
    }
    return MEMORY[0x24BEE4AF8];
  }
  __break(1u);
  return result;
}

unint64_t *sub_209EE8BFC(unint64_t *result, unint64_t **a2, uint64_t a3, unint64_t a4)
{
  unint64_t **v4;
  unint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;

  v6 = result;
  if (!a2)
  {
    v7 = 0;
    goto LABEL_25;
  }
  v7 = a3;
  if (!a3)
  {
LABEL_25:
    *v6 = a4;
    v6[1] = v7;
    return (unint64_t *)v7;
  }
  if (a3 < 0)
    goto LABEL_22;
  v4 = a2;
  if (a4 >> 62)
    goto LABEL_23;
  v8 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v8)
  {
LABEL_24:
    v7 = v8;
    goto LABEL_25;
  }
  while ((a4 & 0xC000000000000001) != 0)
  {
    result = (unint64_t *)MEMORY[0x20BD1CAB4](0, a4);
    v9 = v8 - 1;
    if (v8 < 1)
      goto LABEL_27;
LABEL_9:
    *v4 = result;
    v10 = v7 - 1;
    if (v7 == 1)
      goto LABEL_25;
    v11 = 0;
    ++v4;
    while (v10 != v11)
    {
      if (v9 == v11)
      {
        v7 = v8;
        goto LABEL_25;
      }
      v13 = v11 + 1;
      if ((a4 & 0xC000000000000001) != 0)
      {
        v12 = (unint64_t *)MEMORY[0x20BD1CAB4](v13, a4);
      }
      else
      {
        if (v13 >= *(_QWORD *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_21;
        v12 = (unint64_t *)*(id *)(a4 + 40 + 8 * v11);
      }
      v4[v11++] = v12;
      if (v10 == v11)
        goto LABEL_25;
    }
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    v8 = sub_209F677EC();
    result = (unint64_t *)swift_bridgeObjectRelease();
    if (!v8)
      goto LABEL_24;
  }
  if (!*(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_28;
  result = (unint64_t *)*(id *)(a4 + 32);
  v9 = v8 - 1;
  if (v8 >= 1)
    goto LABEL_9;
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_209EE8D70(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = result;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_209F677EC();
    result = swift_bridgeObjectRelease();
    if (v5 < 0)
    {
      __break(1u);
      goto LABEL_8;
    }
  }
  else
  {
    v5 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v4 < 0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v5 >= a2)
    return v4;
LABEL_9:
  __break(1u);
  return result;
}

void sub_209EE8E08(char *a1)
{
  sub_209EE8E14(*a1);
}

void sub_209EE8E14(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_209EE8E4C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_209EE8F08 + 4 * byte_209F76DA8[a2]))(0x6C6562616CLL);
}

uint64_t sub_209EE8F08(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6C6562616CLL && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = sub_209F679A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_209EE901C()
{
  char *v0;

  sub_209EE911C(0, *v0);
}

void sub_209EE9028(uint64_t a1)
{
  char *v1;

  sub_209EE9030(a1, *v1);
}

void sub_209EE9030(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_209EE9064()
{
  sub_209F6733C();
  return swift_bridgeObjectRelease();
}

void sub_209EE9114(uint64_t a1)
{
  char *v1;

  sub_209EE911C(a1, *v1);
}

void sub_209EE911C(uint64_t a1, char a2)
{
  sub_209F67B10();
  __asm { BR              X10 }
}

uint64_t sub_209EE915C()
{
  sub_209F6733C();
  swift_bridgeObjectRelease();
  return sub_209F67B28();
}

uint64_t sub_209EE9220@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_209EEAF14();
  *a1 = result;
  return result;
}

uint64_t sub_209EE924C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_209EE9270 + 4 * byte_209F76DC0[*v0]))();
}

void sub_209EE9270(_QWORD *a1@<X8>)
{
  *a1 = 0x6C6562616CLL;
  a1[1] = 0xE500000000000000;
}

void sub_209EE9288(_QWORD *a1@<X8>)
{
  *a1 = 0x65756C6176;
  a1[1] = 0xE500000000000000;
}

uint64_t sub_209EE9324()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_209EE9348 + 4 * byte_209F76DC8[*v0]))(25705, 0xE200000000000000);
}

uint64_t sub_209EE9348()
{
  return 0x6C6562616CLL;
}

uint64_t sub_209EE935C()
{
  return 0x65756C6176;
}

uint64_t sub_209EE9370()
{
  return 0x6C6562616C627573;
}

uint64_t sub_209EE9388()
{
  return 7107189;
}

uint64_t sub_209EE9398()
{
  return 0x6874654D70747468;
}

uint64_t sub_209EE93B4()
{
  return 0x4C6275536C6D7468;
}

uint64_t sub_209EE93D4()
{
  return 0x6567616D69;
}

uint64_t sub_209EE93E8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_209EEAF14();
  *a1 = result;
  return result;
}

void sub_209EE940C(_BYTE *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_209EE9418()
{
  sub_209EEAFFC();
  return sub_209F67B88();
}

uint64_t sub_209EE9440()
{
  sub_209EEAFFC();
  return sub_209F67B94();
}

uint64_t sub_209EE9468@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v44 = a2;
  v3 = type metadata accessor for SwitchRowElement();
  v4 = *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64);
  v42 = *(_QWORD *)(v3 - 8);
  v43 = v4;
  MEMORY[0x24BDAC7A8](v3, v5);
  v41 = (uint64_t)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_209F66ED4();
  v8 = *(_QWORD *)(v7 - 8);
  v37 = v7;
  v38 = v8;
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB228);
  v36 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB230);
  v39 = *(_QWORD *)(v16 - 8);
  v40 = v16;
  MEMORY[0x24BDAC7A8](v16, v17);
  v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(int *)(v3 + 36);
  v34 = a1;
  v21 = a1 + v20;
  v22 = *(_QWORD *)(a1 + v20 + 8);
  v46 = *(_BYTE *)(a1 + v20);
  v47 = v22;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB198);
  sub_209F671B0();
  v45 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB238);
  sub_209EE83E8(&qword_2545BB240, &qword_2545BB238, MEMORY[0x24BDF41A0]);
  sub_209F671BC();
  sub_209F66EC8();
  sub_209EE83E8(&qword_2545BB248, &qword_2545BB228, MEMORY[0x24BDF46C8]);
  sub_209EE4ABC(&qword_2545BB250, (uint64_t (*)(uint64_t))MEMORY[0x24BDEE920], MEMORY[0x24BDEE900]);
  v23 = v37;
  sub_209F67120();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v11, v23);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v12);
  v24 = *(_QWORD *)(v21 + 8);
  LOBYTE(v48) = *(_BYTE *)v21;
  v49 = v24;
  sub_209F671A4();
  LOBYTE(v3) = v46;
  v25 = v41;
  sub_209EE3C10(v34, v41, (uint64_t (*)(_QWORD))type metadata accessor for SwitchRowElement);
  v26 = (*(unsigned __int8 *)(v42 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
  v27 = swift_allocObject();
  sub_209EF1E50(v25, v27 + v26, (uint64_t (*)(_QWORD))type metadata accessor for SwitchRowElement);
  v29 = v39;
  v28 = v40;
  v30 = v44;
  (*(void (**)(uint64_t, char *, uint64_t))(v39 + 16))(v44, v19, v40);
  v31 = v30 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545BB258) + 36);
  *(_BYTE *)v31 = v3;
  *(_QWORD *)(v31 + 8) = sub_209EF1B84;
  *(_QWORD *)(v31 + 16) = v27;
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v19, v28);
}

uint64_t sub_209EE9798@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;

  v53 = a2;
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB288);
  MEMORY[0x24BDAC7A8](v50, v3);
  v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB190);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for HTMLContentElement(0);
  v49 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52, v10);
  v48 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB188);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for SubLabelElement();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16, v18);
  v20 = (char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB290);
  v23 = MEMORY[0x24BDAC7A8](v21, v22);
  v25 = (char *)&v48 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23, v26);
  v28 = (char *)&v48 - v27;
  v29 = sub_209F66F04();
  MEMORY[0x24BDAC7A8](v29, v30);
  sub_209F66EF8();
  sub_209F66EEC();
  sub_209F66EE0();
  sub_209F66EEC();
  sub_209F66F10();
  v31 = sub_209F670D8();
  v55 = v32;
  v56 = v31;
  v54 = v33;
  v51 = v34;
  v35 = type metadata accessor for SwitchRowElement();
  sub_209EE3528(a1 + *(int *)(v35 + 28), (uint64_t)v15, &qword_2545BB188);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    v36 = (uint64_t)v48;
    sub_209EE017C((uint64_t)v15, &qword_2545BB188);
    sub_209EE3528(a1 + *(int *)(v35 + 32), (uint64_t)v9, &qword_2545BB190);
    v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v49 + 48))(v9, 1, v52);
    v38 = v53;
    v39 = v51;
    if (v37 == 1)
    {
      sub_209EE017C((uint64_t)v9, &qword_2545BB190);
      v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB298);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v28, 1, 1, v40);
    }
    else
    {
      sub_209EF1E50((uint64_t)v9, v36, type metadata accessor for HTMLContentElement);
      sub_209EE3C10(v36, (uint64_t)v5, type metadata accessor for HTMLContentElement);
      swift_storeEnumTagMultiPayload();
      sub_209EE4ABC(&qword_2545BB2A8, (uint64_t (*)(uint64_t))type metadata accessor for SubLabelElement, (uint64_t)"}\n2B̍");
      sub_209EE4ABC(&qword_2545BB2B0, type metadata accessor for HTMLContentElement, (uint64_t)&unk_209F7721C);
      sub_209F66F64();
      sub_209EEF010(v36, type metadata accessor for HTMLContentElement);
      v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB298);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v25, 0, 1, v42);
      sub_209EF1E0C((uint64_t)v25, (uint64_t)v28, &qword_2545BB290);
    }
  }
  else
  {
    sub_209EF1E50((uint64_t)v15, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for SubLabelElement);
    sub_209EE3C10((uint64_t)v20, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for SubLabelElement);
    swift_storeEnumTagMultiPayload();
    sub_209EE4ABC(&qword_2545BB2A8, (uint64_t (*)(uint64_t))type metadata accessor for SubLabelElement, (uint64_t)"}\n2B̍");
    sub_209EE4ABC(&qword_2545BB2B0, type metadata accessor for HTMLContentElement, (uint64_t)&unk_209F7721C);
    sub_209F66F64();
    sub_209EEF010((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for SubLabelElement);
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB298);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v25, 0, 1, v41);
    sub_209EF1E0C((uint64_t)v25, (uint64_t)v28, &qword_2545BB290);
    v38 = v53;
    v39 = v51;
  }
  v43 = v54 & 1;
  sub_209EE3528((uint64_t)v28, (uint64_t)v25, &qword_2545BB290);
  v45 = v55;
  v44 = v56;
  *(_QWORD *)v38 = v56;
  *(_QWORD *)(v38 + 8) = v45;
  *(_BYTE *)(v38 + 16) = v43;
  *(_QWORD *)(v38 + 24) = v39;
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB2A0);
  sub_209EE3528((uint64_t)v25, v38 + *(int *)(v46 + 48), &qword_2545BB290);
  sub_209EF1DEC(v44, v45, v43);
  swift_bridgeObjectRetain();
  sub_209EE017C((uint64_t)v28, &qword_2545BB290);
  sub_209EE017C((uint64_t)v25, &qword_2545BB290);
  sub_209EF1DFC(v44, v45, v43);
  return swift_bridgeObjectRelease();
}

uint64_t sub_209EE9D20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  _OWORD v9[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_209EE3510((_OWORD *)a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v3;
    *v3 = 0x8000000000000000;
    sub_209EEAB98(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_209EE017C(a1, &qword_2545BAF78);
    sub_209EEA5D8(a2, a3, v9);
    swift_bridgeObjectRelease();
    return sub_209EE017C((uint64_t)v9, &qword_2545BAF78);
  }
}

uint64_t sub_209EE9DF4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  Swift::String *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  Swift::String v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  Swift::String *v58;
  _BYTE v59[40];
  __int128 v60;
  unsigned __int8 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unsigned __int8 v65;
  uint64_t v66;
  unsigned __int8 v67;
  uint64_t v68;
  unsigned __int8 v69;
  __int128 v70;
  unsigned __int8 v71;
  uint64_t v72;
  uint64_t v73;

  v55 = a2;
  v4 = type metadata accessor for URLLoader(0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v56 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB190);
  MEMORY[0x24BDAC7A8](v7, v8);
  v57 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB188);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1A8);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14, v16);
  v18 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = type metadata accessor for SwitchRowElement();
  MEMORY[0x24BDAC7A8](v73, v19);
  v21 = (Swift::String *)((char *)&v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for XMLUIData();
  sub_209EE4ABC((unint64_t *)&qword_2545BAF70, (uint64_t (*)(uint64_t))type metadata accessor for XMLUIData, (uint64_t)&protocol conformance descriptor for XMLUIData);
  v21->_countAndFlagsBits = sub_209F66E38();
  v21->_object = v22;
  v58 = v21;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_209EEAFFC();
  sub_209F67B58();
  if (v2)
    goto LABEL_4;
  v23 = (uint64_t)v13;
  v54 = v18;
  v24 = v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v25 = Decoder.decodeRUIID()();
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v54, v14);
LABEL_4:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return swift_release();
  }
  v28 = (uint64_t)v58;
  v58[1] = v25;
  LOBYTE(v60) = 1;
  v29 = sub_209F6787C();
  if (v30)
    v31 = v29;
  else
    v31 = 0;
  v32 = 0xE000000000000000;
  if (v30)
    v32 = v30;
  *(_QWORD *)(v28 + 32) = v31;
  *(_QWORD *)(v28 + 40) = v32;
  type metadata accessor for SubLabelElement();
  LOBYTE(v60) = 3;
  sub_209EE4ABC(&qword_2545BB1B8, (uint64_t (*)(uint64_t))type metadata accessor for SubLabelElement, (uint64_t)&unk_209F79034);
  sub_209F67894();
  v33 = v73;
  sub_209EF1E0C(v23, v28 + *(int *)(v73 + 28), &qword_2545BB188);
  LOBYTE(v60) = 2;
  v34 = sub_209F67888();
  v35 = v28 + *(int *)(v33 + 36);
  *(_BYTE *)v35 = v34 & 1;
  *(_QWORD *)(v35 + 8) = 0;
  type metadata accessor for HTMLContentElement(0);
  LOBYTE(v60) = 6;
  sub_209EE4ABC(&qword_2545BB1C0, type metadata accessor for HTMLContentElement, (uint64_t)&unk_209F7726C);
  v36 = (uint64_t)v57;
  sub_209F67894();
  v37 = (int *)v73;
  sub_209EF1E0C(v36, v28 + *(int *)(v73 + 32), &qword_2545BB190);
  sub_209EE0E3C((uint64_t)a1, (uint64_t)v59);
  RUIImageView.init(from:)((uint64_t)v59, (uint64_t)&v60);
  v38 = v61;
  v39 = v62;
  v40 = v63;
  v41 = v64;
  v42 = v65;
  v43 = v66;
  v44 = v67;
  v45 = v68;
  v46 = v69;
  v47 = v70;
  v48 = v71;
  v49 = v72;
  v50 = (uint64_t)v56;
  v51 = v28 + v37[10];
  *(_OWORD *)v51 = v60;
  *(_QWORD *)(v51 + 16) = v38;
  *(_QWORD *)(v51 + 24) = v39;
  *(_QWORD *)(v51 + 32) = v40;
  *(_QWORD *)(v51 + 40) = v41;
  *(_QWORD *)(v51 + 48) = v42;
  *(_QWORD *)(v51 + 56) = v43;
  *(_QWORD *)(v51 + 64) = v44;
  *(_QWORD *)(v51 + 72) = v45;
  *(_QWORD *)(v51 + 80) = v46;
  *(_OWORD *)(v51 + 88) = v47;
  *(_QWORD *)(v51 + 104) = v48;
  *(_QWORD *)(v51 + 112) = v49;
  sub_209EE0E3C((uint64_t)a1, (uint64_t)&v60);
  URLLoader.init(from:defaultHTTPMethod:)((uint64_t)&v60, 1414745936, 0xE400000000000000, v50);
  v52 = v28 + v37[11];
  sub_209EF1E50(v50, v52, type metadata accessor for URLLoader);
  *(_BYTE *)(v52 + *(int *)(type metadata accessor for URLLoadingParameters(0) + 40)) = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v53 = Decoder.decodeRUIAttributeDictionary()();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v54, v24);
  *(_QWORD *)(v28 + v37[12]) = v53;
  sub_209EE3C10(v28, v55, (uint64_t (*)(_QWORD))type metadata accessor for SwitchRowElement);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_209EEF010(v28, (uint64_t (*)(_QWORD))type metadata accessor for SwitchRowElement);
}

uint64_t sub_209EEA570@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = sub_209F66F34();
  *(_QWORD *)(a1 + 8) = 0x4010000000000000;
  *(_BYTE *)(a1 + 16) = 0;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1A0);
  return sub_209EE9468(v1, a1 + *(int *)(v3 + 44));
}

uint64_t sub_209EEA5B8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_209EE9DF4(a1, a2);
}

uint64_t sub_209EEA5CC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 24);
  *a1 = *(_QWORD *)(v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

double sub_209EEA5D8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  double result;
  uint64_t v13;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_209EE31C0(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v13 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_209EEAD30();
      v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_209EE3510((_OWORD *)(*(_QWORD *)(v11 + 56) + 32 * v8), a3);
    sub_209EEA9C4(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_209EEA6C8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  _OWORD v35[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BAF88);
  v6 = sub_209F67804();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v34 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33)
          goto LABEL_34;
        v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v33)
            goto LABEL_34;
          v19 = v34[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              v3 = v2;
              if ((a2 & 1) != 0)
              {
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 >= 64)
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_41;
                if (v13 >= v33)
                  goto LABEL_34;
                v19 = v34[v13];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v13 = v20;
          }
        }
LABEL_21:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_209EE3510(v24, v35);
      }
      else
      {
        sub_209EE3288((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_209F67B10();
      sub_209F6733C();
      result = sub_209F67B28();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      result = (uint64_t)sub_209EE3510(v35, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

unint64_t sub_209EEA9C4(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_209F67678();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_209F67B10();
        swift_bridgeObjectRetain();
        sub_209F6733C();
        v10 = sub_209F67B28();
        result = swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8)
            goto LABEL_5;
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(a2 + 48);
          v13 = (_OWORD *)(v12 + 16 * v3);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1)
            *v13 = *v14;
          v15 = *(_QWORD *)(a2 + 56);
          v16 = (_OWORD *)(v15 + 32 * v3);
          v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v16 >= v17 + 2))
          {
            v9 = v17[1];
            *v16 = *v17;
            v16[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

_OWORD *sub_209EEAB98(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_209EE31C0(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_OWORD *)(v18[7] + 32 * v12);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
        return sub_209EE3510(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_209EEAD30();
      goto LABEL_7;
    }
    sub_209EEA6C8(v15, a4 & 1);
    v21 = sub_209EE31C0(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_209EEACC8(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)sub_209F67AA4();
  __break(1u);
  return result;
}

_OWORD *sub_209EEACC8(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_209EE3510(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

void *sub_209EEAD30()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BAF88);
  v2 = *v0;
  v3 = sub_209F677F8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_209EE3288(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_209EE3510(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_209EEAF14()
{
  unint64_t v0;

  v0 = sub_209F67840();
  swift_bridgeObjectRelease();
  if (v0 >= 8)
    return 8;
  else
    return v0;
}

uint64_t type metadata accessor for SwitchRowElement()
{
  uint64_t result;

  result = qword_2545BE2A0;
  if (!qword_2545BE2A0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_209EEAF98(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  id v6;
  uint64_t result;

  if (a5)
  {
    sub_209EEAFF0();
    swift_retain();
    swift_retain();
    v6 = a4;
    return swift_retain();
  }
  return result;
}

uint64_t sub_209EEAFF0()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_209EEAFFC()
{
  unint64_t result;

  result = qword_2545BB1B0;
  if (!qword_2545BB1B0)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F76E7C, &type metadata for SwitchRowElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BB1B0);
  }
  return result;
}

uint64_t sub_209EEB040(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t result;

  if (a5)
  {
    sub_209EEB098();
    swift_release();
    swift_release();

    return swift_release();
  }
  return result;
}

uint64_t sub_209EEB098()
{
  return swift_bridgeObjectRelease();
}

unint64_t sub_209EEB0A8()
{
  unint64_t result;

  result = qword_2545BB1C8;
  if (!qword_2545BB1C8)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F76DDC, &type metadata for SwitchRowElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BB1C8);
  }
  return result;
}

unint64_t sub_209EEB0F0()
{
  unint64_t result;

  result = qword_2545BB1D0;
  if (!qword_2545BB1D0)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F76EF4, &type metadata for SwitchRowElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BB1D0);
  }
  return result;
}

unint64_t sub_209EEB138()
{
  unint64_t result;

  result = qword_2545BB1D8;
  if (!qword_2545BB1D8)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F76ECC, &type metadata for SwitchRowElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BB1D8);
  }
  return result;
}

uint64_t sub_209EEB17C(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_209EE4ABC(&qword_2545BB1E0, (uint64_t (*)(uint64_t))type metadata accessor for SwitchRowElement, (uint64_t)&unk_209F76F88);
  a1[2] = sub_209EE4ABC(&qword_2545BB1E8, (uint64_t (*)(uint64_t))type metadata accessor for SwitchRowElement, (uint64_t)&unk_209F76FB0);
  result = sub_209EE4ABC(&qword_2545BB1F0, (uint64_t (*)(uint64_t))type metadata accessor for SwitchRowElement, (uint64_t)&unk_209F76F38);
  a1[3] = result;
  return result;
}

uint64_t sub_209EEB1F4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_209EEB204(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  int *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  int *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  int *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  void *v56;
  char v57;
  uint64_t v58;
  char *v59;
  char *v60;
  id v61;
  char v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  int *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  int *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  void (*v89)(uint64_t *, _QWORD, uint64_t, uint64_t);
  uint64_t v90;
  uint64_t *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  unsigned int (*v104)(char *, uint64_t, uint64_t);
  uint64_t v105;
  int *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  void *v135;
  char v136;
  int *v137;
  uint64_t v138;
  char *v139;
  char *v140;
  id v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  char v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  unsigned int (*v171)(char *, uint64_t, uint64_t);
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char v182;
  void *v183;
  uint64_t v184;
  id v185;
  __int128 v186;
  __int128 v187;
  __int128 v188;
  uint64_t v189;
  char *v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  int *v195;
  uint64_t v196;
  char *v197;
  char *v198;
  uint64_t v199;
  char *v200;
  char *v201;
  uint64_t v202;
  char *v203;
  char *v204;
  uint64_t v205;
  char *v206;
  char *v207;
  uint64_t v208;
  char *v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  char *v223;
  void *v224;
  char v225;
  int *v226;
  uint64_t v227;
  char *v228;
  char *v229;
  id v230;
  uint64_t v231;
  char *v232;
  char *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  char *v237;
  char *v238;
  uint64_t v239;
  uint64_t v240;
  char *v241;
  char *v242;
  uint64_t v243;
  uint64_t v244;
  char v245;
  uint64_t v246;
  char *v247;
  char *v248;
  uint64_t v249;
  uint64_t v250;
  char *v251;
  char *v252;
  uint64_t v253;
  uint64_t v255;
  uint64_t v256;
  unsigned int (*v257)(char *, uint64_t, uint64_t);
  unsigned int (*v258)(char *, uint64_t, uint64_t);
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  unsigned int (*v267)(char *, uint64_t, uint64_t);
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  char *v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t *__dst;
  char *__dsta;
  void *__dstb;
  uint64_t *v283;
  uint64_t v284;
  int *v285;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v15 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v5 = a3;
    v6 = a2;
    v7 = a1;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    v8 = a2[4];
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = v8;
    *(_QWORD *)(a1 + 40) = a2[5];
    v9 = a3[7];
    __dst = (uint64_t *)(a1 + v9);
    v10 = (char *)a2 + v9;
    v11 = type metadata accessor for SubLabelElement();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v283 = v6;
    v284 = v7;
    v285 = v5;
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB188);
      memcpy(__dst, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v274 = v12;
      v16 = *(_QWORD *)v10;
      v17 = v10[8];
      sub_209EEC00C(*(_QWORD *)v10, v17);
      *__dst = v16;
      *((_BYTE *)__dst + 8) = v17;
      v18 = *((_QWORD *)v10 + 3);
      __dst[2] = *((_QWORD *)v10 + 2);
      __dst[3] = v18;
      v19 = *((_QWORD *)v10 + 5);
      __dst[4] = *((_QWORD *)v10 + 4);
      __dst[5] = v19;
      v20 = *(int *)(v11 + 28);
      v21 = (char *)__dst + v20;
      v22 = &v10[v20];
      v23 = sub_209F66A90();
      v24 = *(_QWORD *)(v23 - 8);
      v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v277 = v11;
      v258 = v25;
      v260 = v23;
      v256 = v24;
      if (v25(v22, 1, v23))
      {
        v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      }
      v27 = (int *)type metadata accessor for URLLoadingParameters(0);
      v28 = v27[5];
      v29 = &v21[v28];
      v30 = &v22[v28];
      v271 = *((_QWORD *)v30 + 1);
      *(_QWORD *)v29 = *(_QWORD *)v30;
      *((_QWORD *)v29 + 1) = v271;
      v31 = v27[6];
      v32 = &v21[v31];
      v33 = &v22[v31];
      v268 = *((_QWORD *)v33 + 1);
      *(_QWORD *)v32 = *(_QWORD *)v33;
      *((_QWORD *)v32 + 1) = v268;
      v21[v27[7]] = v22[v27[7]];
      v34 = v27[8];
      v35 = &v21[v34];
      v36 = &v22[v34];
      v265 = *((_QWORD *)v36 + 1);
      *(_QWORD *)v35 = *(_QWORD *)v36;
      *((_QWORD *)v35 + 1) = v265;
      v37 = v27[9];
      v38 = &v21[v37];
      v39 = &v22[v37];
      v262 = *((_QWORD *)v39 + 1);
      *(_QWORD *)v38 = *(_QWORD *)v39;
      *((_QWORD *)v38 + 1) = v262;
      v21[v27[10]] = v22[v27[10]];
      *(_QWORD *)&v21[v27[11]] = *(_QWORD *)&v22[v27[11]];
      v40 = v27[12];
      v41 = &v21[v40];
      v42 = &v22[v40];
      v43 = *((_QWORD *)v42 + 1);
      *(_QWORD *)v41 = *(_QWORD *)v42;
      *((_QWORD *)v41 + 1) = v43;
      v44 = v27[13];
      v45 = &v21[v44];
      v46 = &v22[v44];
      v47 = *((_QWORD *)v46 + 1);
      *(_QWORD *)v45 = *(_QWORD *)v46;
      *((_QWORD *)v45 + 1) = v47;
      v48 = v27[14];
      v49 = &v21[v48];
      v50 = &v22[v48];
      v51 = *((_QWORD *)v50 + 1);
      *(_QWORD *)v49 = *(_QWORD *)v50;
      *((_QWORD *)v49 + 1) = v51;
      v52 = (int *)type metadata accessor for URLLoader(0);
      v53 = v52[5];
      v54 = &v21[v53];
      v55 = &v22[v53];
      v56 = *(void **)v55;
      v57 = v55[8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_209EEC018(v56, v57);
      *(_QWORD *)v54 = v56;
      v54[8] = v57;
      v58 = v52[6];
      v59 = &v21[v58];
      v60 = &v22[v58];
      v61 = *(id *)v60;
      v62 = v60[8];
      sub_209EEC018(*(id *)v60, v62);
      *(_QWORD *)v59 = v61;
      v59[8] = v62;
      v63 = v52[7];
      v64 = &v21[v63];
      v65 = &v22[v63];
      v66 = *(_QWORD *)v65;
      v67 = *((_QWORD *)v65 + 1);
      LOBYTE(v59) = v65[16];
      sub_209EEC024(*(_QWORD *)v65, v67, (char)v59);
      *(_QWORD *)v64 = v66;
      *((_QWORD *)v64 + 1) = v67;
      v64[16] = (char)v59;
      v68 = v52;
      v69 = v52[8];
      v70 = &v21[v69];
      v71 = &v22[v69];
      __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v6 = v283;
        v72 = v277;
        if (v258(v71, 1, v260))
        {
          v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
          memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v256 + 16))(v70, v71, v260);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v256 + 56))(v70, 0, 1, v260);
        }
      }
      else
      {
        *(_QWORD *)v70 = *(_QWORD *)v71;
        swift_retain();
        v6 = v283;
        v72 = v277;
      }
      swift_storeEnumTagMultiPayload();
      v74 = v68;
      v75 = v68[9];
      v76 = &v21[v75];
      v77 = &v22[v75];
      v78 = *(_QWORD *)v77;
      v79 = *((_QWORD *)v77 + 1);
      v80 = v77[16];
      sub_209EEC024(*(_QWORD *)v77, v79, v80);
      *(_QWORD *)v76 = v78;
      *((_QWORD *)v76 + 1) = v79;
      v76[16] = v80;
      v81 = v74[10];
      v82 = &v21[v81];
      v83 = &v22[v81];
      v84 = *(_QWORD *)v83;
      LOBYTE(v79) = v83[8];
      sub_209EEC030(*(_QWORD *)v83, v79);
      *(_QWORD *)v82 = v84;
      v82[8] = v79;
      v85 = v74[11];
      v86 = &v21[v85];
      v87 = &v22[v85];
      v88 = *(_QWORD *)v87;
      LOBYTE(v87) = v87[8];
      *(_QWORD *)v86 = v88;
      v86[8] = (char)v87;
      v89 = *(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v274 + 56);
      swift_retain();
      v89(__dst, 0, 1, v72);
      v7 = v284;
      v5 = v285;
    }
    v90 = v5[8];
    v91 = (uint64_t *)(v7 + v90);
    v92 = (char *)v6 + v90;
    v93 = type metadata accessor for HTMLContentElement(0);
    v94 = *(_QWORD *)(v93 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v94 + 48))(v92, 1, v93))
    {
      v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB190);
      memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
    }
    else
    {
      v96 = *(_QWORD *)v92;
      v97 = v92[8];
      sub_209EEC00C(*(_QWORD *)v92, v97);
      *v91 = v96;
      *((_BYTE *)v91 + 8) = v97;
      v98 = *((_QWORD *)v92 + 3);
      v91[2] = *((_QWORD *)v92 + 2);
      v91[3] = v98;
      v278 = v93;
      __dsta = (char *)v91;
      v99 = *(int *)(v93 + 24);
      v100 = (char *)v91 + v99;
      v101 = &v92[v99];
      v102 = sub_209F66A90();
      v103 = *(_QWORD *)(v102 - 8);
      v104 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v103 + 48);
      swift_bridgeObjectRetain();
      v259 = v102;
      v261 = v94;
      v275 = v92;
      v255 = v103;
      v257 = v104;
      if (v104(v101, 1, v102))
      {
        v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
        memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v100, v101, v102);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v103 + 56))(v100, 0, 1, v102);
      }
      v106 = (int *)type metadata accessor for URLLoadingParameters(0);
      v107 = v106[5];
      v108 = &v100[v107];
      v109 = &v101[v107];
      v272 = *((_QWORD *)v109 + 1);
      *(_QWORD *)v108 = *(_QWORD *)v109;
      *((_QWORD *)v108 + 1) = v272;
      v110 = v106[6];
      v111 = &v100[v110];
      v112 = &v101[v110];
      v269 = *((_QWORD *)v112 + 1);
      *(_QWORD *)v111 = *(_QWORD *)v112;
      *((_QWORD *)v111 + 1) = v269;
      v100[v106[7]] = v101[v106[7]];
      v113 = v106[8];
      v114 = &v100[v113];
      v115 = &v101[v113];
      v266 = *((_QWORD *)v115 + 1);
      *(_QWORD *)v114 = *(_QWORD *)v115;
      *((_QWORD *)v114 + 1) = v266;
      v116 = v106[9];
      v117 = &v100[v116];
      v118 = &v101[v116];
      v263 = *((_QWORD *)v118 + 1);
      *(_QWORD *)v117 = *(_QWORD *)v118;
      *((_QWORD *)v117 + 1) = v263;
      v100[v106[10]] = v101[v106[10]];
      *(_QWORD *)&v100[v106[11]] = *(_QWORD *)&v101[v106[11]];
      v119 = v106[12];
      v120 = &v100[v119];
      v121 = &v101[v119];
      v122 = *((_QWORD *)v121 + 1);
      *(_QWORD *)v120 = *(_QWORD *)v121;
      *((_QWORD *)v120 + 1) = v122;
      v123 = v106[13];
      v124 = &v100[v123];
      v125 = &v101[v123];
      v126 = *((_QWORD *)v125 + 1);
      *(_QWORD *)v124 = *(_QWORD *)v125;
      *((_QWORD *)v124 + 1) = v126;
      v127 = v106[14];
      v128 = &v100[v127];
      v129 = &v101[v127];
      v130 = *((_QWORD *)v129 + 1);
      *(_QWORD *)v128 = *(_QWORD *)v129;
      *((_QWORD *)v128 + 1) = v130;
      v131 = type metadata accessor for URLLoader(0);
      v132 = *(int *)(v131 + 20);
      v133 = &v100[v132];
      v134 = &v101[v132];
      v135 = *(void **)v134;
      v136 = v134[8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v137 = (int *)v131;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_209EEC018(v135, v136);
      *(_QWORD *)v133 = v135;
      v133[8] = v136;
      v138 = *(int *)(v131 + 24);
      v139 = &v100[v138];
      v140 = &v101[v138];
      v141 = *(id *)v140;
      LOBYTE(v131) = v140[8];
      sub_209EEC018(*(id *)v140, v131);
      *(_QWORD *)v139 = v141;
      v139[8] = v131;
      v142 = v137[7];
      v143 = &v100[v142];
      v144 = &v101[v142];
      v145 = *(_QWORD *)v144;
      v146 = *((_QWORD *)v144 + 1);
      LOBYTE(v139) = v144[16];
      sub_209EEC024(*(_QWORD *)v144, v146, (char)v139);
      *(_QWORD *)v143 = v145;
      *((_QWORD *)v143 + 1) = v146;
      v143[16] = (char)v139;
      v147 = v137[8];
      v148 = &v100[v147];
      v149 = &v101[v147];
      __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v150 = v275;
        if (v257(v149, 1, v259))
        {
          v151 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
          memcpy(v148, v149, *(_QWORD *)(*(_QWORD *)(v151 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v255 + 16))(v148, v149, v259);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v255 + 56))(v148, 0, 1, v259);
        }
        v7 = v284;
      }
      else
      {
        *(_QWORD *)v148 = *(_QWORD *)v149;
        swift_retain();
        v7 = v284;
        v150 = v275;
      }
      swift_storeEnumTagMultiPayload();
      v152 = v137[9];
      v153 = &v100[v152];
      v154 = &v101[v152];
      v155 = *(_QWORD *)v154;
      v156 = *((_QWORD *)v154 + 1);
      v157 = v154[16];
      sub_209EEC024(*(_QWORD *)v154, v156, v157);
      *(_QWORD *)v153 = v155;
      *((_QWORD *)v153 + 1) = v156;
      v153[16] = v157;
      v158 = v137[10];
      v159 = &v100[v158];
      v160 = &v101[v158];
      v161 = *(_QWORD *)v160;
      LOBYTE(v156) = v160[8];
      sub_209EEC030(*(_QWORD *)v160, v156);
      *(_QWORD *)v159 = v161;
      v159[8] = v156;
      v162 = v137[11];
      v163 = &v100[v162];
      v164 = &v101[v162];
      v165 = *(_QWORD *)v164;
      LOBYTE(v164) = v164[8];
      *(_QWORD *)v163 = v165;
      v163[8] = (char)v164;
      v166 = *(int *)(v278 + 28);
      v167 = &__dsta[v166];
      v168 = &v150[v166];
      v169 = sub_209F669E8();
      v170 = *(_QWORD *)(v169 - 8);
      v171 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v170 + 48);
      swift_retain();
      if (v171(v168, 1, v169))
      {
        v172 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB200);
        memcpy(v167, v168, *(_QWORD *)(*(_QWORD *)(v172 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v170 + 16))(v167, v168, v169);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v170 + 56))(v167, 0, 1, v169);
      }
      v6 = v283;
      v5 = v285;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v261 + 56))(__dsta, 0, 1, v278);
    }
    v173 = v5[9];
    v174 = v5[10];
    v175 = v7 + v173;
    v176 = (uint64_t)v6 + v173;
    *(_BYTE *)v175 = *(_BYTE *)v176;
    *(_QWORD *)(v175 + 8) = *(_QWORD *)(v176 + 8);
    v177 = v7 + v174;
    v178 = (uint64_t *)((char *)v6 + v174);
    v179 = *(uint64_t *)((char *)v6 + v174 + 32);
    swift_retain();
    if (v179)
    {
      v180 = *v178;
      v181 = v178[1];
      v182 = *((_BYTE *)v178 + 16);
      sub_209EEAFF0();
      *(_QWORD *)v177 = v180;
      *(_QWORD *)(v177 + 8) = v181;
      *(_BYTE *)(v177 + 16) = v182;
      v183 = (void *)v178[3];
      v184 = v178[4];
      *(_QWORD *)(v177 + 24) = v183;
      *(_QWORD *)(v177 + 32) = v184;
      *(_QWORD *)(v177 + 40) = v178[5];
      *(_BYTE *)(v177 + 48) = *((_BYTE *)v178 + 48);
      *(_QWORD *)(v177 + 56) = v178[7];
      *(_BYTE *)(v177 + 64) = *((_BYTE *)v178 + 64);
      *(_QWORD *)(v177 + 72) = v178[9];
      *(_BYTE *)(v177 + 80) = *((_BYTE *)v178 + 80);
      *(_OWORD *)(v177 + 88) = *(_OWORD *)(v178 + 11);
      *(_BYTE *)(v177 + 104) = *((_BYTE *)v178 + 104);
      *(_QWORD *)(v177 + 112) = v178[14];
      v185 = v183;
      swift_retain();
      v5 = v285;
      swift_retain();
      swift_retain();
    }
    else
    {
      v186 = *((_OWORD *)v178 + 5);
      *(_OWORD *)(v177 + 64) = *((_OWORD *)v178 + 4);
      *(_OWORD *)(v177 + 80) = v186;
      *(_OWORD *)(v177 + 96) = *((_OWORD *)v178 + 6);
      *(_QWORD *)(v177 + 112) = v178[14];
      v187 = *((_OWORD *)v178 + 1);
      *(_OWORD *)v177 = *(_OWORD *)v178;
      *(_OWORD *)(v177 + 16) = v187;
      v188 = *((_OWORD *)v178 + 3);
      *(_OWORD *)(v177 + 32) = *((_OWORD *)v178 + 2);
      *(_OWORD *)(v177 + 48) = v188;
    }
    v189 = v5[11];
    v190 = (char *)(v7 + v189);
    v191 = (char *)v6 + v189;
    v192 = sub_209F66A90();
    v193 = *(_QWORD *)(v192 - 8);
    v267 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v193 + 48);
    v270 = v192;
    v264 = v193;
    if (v267(v191, 1, v192))
    {
      v194 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
      memcpy(v190, v191, *(_QWORD *)(*(_QWORD *)(v194 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v193 + 16))(v190, v191, v192);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v193 + 56))(v190, 0, 1, v192);
    }
    v195 = (int *)type metadata accessor for URLLoadingParameters(0);
    v196 = v195[5];
    v197 = &v190[v196];
    v198 = &v191[v196];
    __dstb = (void *)*((_QWORD *)v198 + 1);
    *(_QWORD *)v197 = *(_QWORD *)v198;
    *((_QWORD *)v197 + 1) = __dstb;
    v199 = v195[6];
    v200 = &v190[v199];
    v201 = &v191[v199];
    v279 = *((_QWORD *)v201 + 1);
    *(_QWORD *)v200 = *(_QWORD *)v201;
    *((_QWORD *)v200 + 1) = v279;
    v190[v195[7]] = v191[v195[7]];
    v202 = v195[8];
    v203 = &v190[v202];
    v204 = &v191[v202];
    v276 = *((_QWORD *)v204 + 1);
    *(_QWORD *)v203 = *(_QWORD *)v204;
    *((_QWORD *)v203 + 1) = v276;
    v205 = v195[9];
    v206 = &v190[v205];
    v207 = &v191[v205];
    v273 = *((_QWORD *)v207 + 1);
    *(_QWORD *)v206 = *(_QWORD *)v207;
    *((_QWORD *)v206 + 1) = v273;
    v190[v195[10]] = v191[v195[10]];
    *(_QWORD *)&v190[v195[11]] = *(_QWORD *)&v191[v195[11]];
    v208 = v195[12];
    v209 = &v190[v208];
    v210 = &v191[v208];
    v211 = *((_QWORD *)v210 + 1);
    *(_QWORD *)v209 = *(_QWORD *)v210;
    *((_QWORD *)v209 + 1) = v211;
    v212 = v195[13];
    v213 = &v190[v212];
    v214 = &v191[v212];
    v215 = *((_QWORD *)v214 + 1);
    *(_QWORD *)v213 = *(_QWORD *)v214;
    *((_QWORD *)v213 + 1) = v215;
    v216 = v195[14];
    v217 = &v190[v216];
    v218 = &v191[v216];
    v219 = *((_QWORD *)v218 + 1);
    *(_QWORD *)v217 = *(_QWORD *)v218;
    *((_QWORD *)v217 + 1) = v219;
    v220 = type metadata accessor for URLLoader(0);
    v221 = *(int *)(v220 + 20);
    v222 = &v190[v221];
    v223 = &v191[v221];
    v224 = *(void **)v223;
    v225 = v223[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v226 = (int *)v220;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_209EEC018(v224, v225);
    *(_QWORD *)v222 = v224;
    v222[8] = v225;
    v227 = *(int *)(v220 + 24);
    v228 = &v190[v227];
    v229 = &v191[v227];
    v230 = *(id *)v229;
    LOBYTE(v220) = v229[8];
    sub_209EEC018(*(id *)v229, v220);
    *(_QWORD *)v228 = v230;
    v228[8] = v220;
    v231 = v226[7];
    v232 = &v190[v231];
    v233 = &v191[v231];
    v234 = *(_QWORD *)v233;
    v235 = *((_QWORD *)v233 + 1);
    LOBYTE(v228) = v233[16];
    sub_209EEC024(*(_QWORD *)v233, v235, (char)v228);
    *(_QWORD *)v232 = v234;
    *((_QWORD *)v232 + 1) = v235;
    v232[16] = (char)v228;
    v236 = v226[8];
    v237 = &v190[v236];
    v238 = &v191[v236];
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if (v267(v238, 1, v270))
      {
        v239 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
        memcpy(v237, v238, *(_QWORD *)(*(_QWORD *)(v239 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v264 + 16))(v237, v238, v270);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v264 + 56))(v237, 0, 1, v270);
      }
    }
    else
    {
      *(_QWORD *)v237 = *(_QWORD *)v238;
      swift_retain();
    }
    v15 = v284;
    swift_storeEnumTagMultiPayload();
    v240 = v226[9];
    v241 = &v190[v240];
    v242 = &v191[v240];
    v243 = *(_QWORD *)v242;
    v244 = *((_QWORD *)v242 + 1);
    v245 = v242[16];
    sub_209EEC024(*(_QWORD *)v242, v244, v245);
    *(_QWORD *)v241 = v243;
    *((_QWORD *)v241 + 1) = v244;
    v241[16] = v245;
    v246 = v226[10];
    v247 = &v190[v246];
    v248 = &v191[v246];
    v249 = *(_QWORD *)v248;
    LOBYTE(v244) = v248[8];
    sub_209EEC030(*(_QWORD *)v248, v244);
    *(_QWORD *)v247 = v249;
    v247[8] = v244;
    v250 = v226[11];
    v251 = &v190[v250];
    v252 = &v191[v250];
    v253 = *(_QWORD *)v252;
    LOBYTE(v252) = v252[8];
    *(_QWORD *)v251 = v253;
    v251[8] = (char)v252;
    *(_QWORD *)(v284 + v285[12]) = *(uint64_t *)((char *)v283 + v285[12]);
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return v15;
}

uint64_t sub_209EEC00C(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
    return swift_bridgeObjectRetain();
  else
    return swift_retain();
}

id sub_209EEC018(id a1, char a2)
{
  if ((a2 & 1) != 0)
    return a1;
  else
    return (id)swift_retain();
}

uint64_t sub_209EEC024(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_unknownObjectRetain();
  else
    return swift_retain();
}

uint64_t sub_209EEC030(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_retain();
  return result;
}

uint64_t sub_209EEC03C(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t, uint64_t, uint64_t);
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(uint64_t, uint64_t, uint64_t);
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  int *v28;
  uint64_t v29;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[7];
  v5 = type metadata accessor for SubLabelElement();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    sub_209EEC68C(*(_QWORD *)v4, *(_BYTE *)(v4 + 8));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = v4 + *(int *)(v5 + 28);
    v7 = sub_209F66A90();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    if (!v9(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    type metadata accessor for URLLoadingParameters(0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v10 = (int *)type metadata accessor for URLLoader(0);
    sub_209EEC698(*(id *)(v6 + v10[5]), *(_BYTE *)(v6 + v10[5] + 8));
    sub_209EEC698(*(id *)(v6 + v10[6]), *(_BYTE *)(v6 + v10[6] + 8));
    sub_209EEC6A4(*(_QWORD *)(v6 + v10[7]), *(_QWORD *)(v6 + v10[7] + 8), *(_BYTE *)(v6 + v10[7] + 16));
    v11 = v6 + v10[8];
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if (!v9(v11, 1, v7))
        (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v11, v7);
    }
    else
    {
      swift_release();
    }
    sub_209EEC6A4(*(_QWORD *)(v6 + v10[9]), *(_QWORD *)(v6 + v10[9] + 8), *(_BYTE *)(v6 + v10[9] + 16));
    sub_209EEC6B0(*(_QWORD *)(v6 + v10[10]), *(_BYTE *)(v6 + v10[10] + 8));
    swift_release();
  }
  v12 = a1 + a2[8];
  v13 = type metadata accessor for HTMLContentElement(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13))
  {
    sub_209EEC68C(*(_QWORD *)v12, *(_BYTE *)(v12 + 8));
    swift_bridgeObjectRelease();
    v14 = v12 + *(int *)(v13 + 24);
    v15 = sub_209F66A90();
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
    if (!v17(v14, 1, v15))
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
    type metadata accessor for URLLoadingParameters(0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v18 = (int *)type metadata accessor for URLLoader(0);
    sub_209EEC698(*(id *)(v14 + v18[5]), *(_BYTE *)(v14 + v18[5] + 8));
    sub_209EEC698(*(id *)(v14 + v18[6]), *(_BYTE *)(v14 + v18[6] + 8));
    sub_209EEC6A4(*(_QWORD *)(v14 + v18[7]), *(_QWORD *)(v14 + v18[7] + 8), *(_BYTE *)(v14 + v18[7] + 16));
    v19 = v14 + v18[8];
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if (!v17(v19, 1, v15))
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v19, v15);
    }
    else
    {
      swift_release();
    }
    sub_209EEC6A4(*(_QWORD *)(v14 + v18[9]), *(_QWORD *)(v14 + v18[9] + 8), *(_BYTE *)(v14 + v18[9] + 16));
    sub_209EEC6B0(*(_QWORD *)(v14 + v18[10]), *(_BYTE *)(v14 + v18[10] + 8));
    swift_release();
    v20 = v12 + *(int *)(v13 + 28);
    v21 = sub_209F669E8();
    v22 = *(_QWORD *)(v21 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
  }
  swift_release();
  v23 = a1 + a2[10];
  if (*(_QWORD *)(v23 + 32))
  {
    sub_209EEB098();

    swift_release();
    swift_release();
    swift_release();
  }
  v24 = a1 + a2[11];
  v25 = sub_209F66A90();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  if (!v27(v24, 1, v25))
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
  type metadata accessor for URLLoadingParameters(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v28 = (int *)type metadata accessor for URLLoader(0);
  sub_209EEC698(*(id *)(v24 + v28[5]), *(_BYTE *)(v24 + v28[5] + 8));
  sub_209EEC698(*(id *)(v24 + v28[6]), *(_BYTE *)(v24 + v28[6] + 8));
  sub_209EEC6A4(*(_QWORD *)(v24 + v28[7]), *(_QWORD *)(v24 + v28[7] + 8), *(_BYTE *)(v24 + v28[7] + 16));
  v29 = v24 + v28[8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    if (!v27(v29, 1, v25))
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v29, v25);
  }
  else
  {
    swift_release();
  }
  sub_209EEC6A4(*(_QWORD *)(v24 + v28[9]), *(_QWORD *)(v24 + v28[9] + 8), *(_BYTE *)(v24 + v28[9] + 16));
  sub_209EEC6B0(*(_QWORD *)(v24 + v28[10]), *(_BYTE *)(v24 + v28[10] + 8));
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_209EEC68C(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
    return swift_bridgeObjectRelease();
  else
    return swift_release();
}

void sub_209EEC698(id a1, char a2)
{
  if ((a2 & 1) != 0)

  else
    swift_release();
}

uint64_t sub_209EEC6A4(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_unknownObjectRelease();
  else
    return swift_release();
}

uint64_t sub_209EEC6B0(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_release();
  return result;
}

uint64_t sub_209EEC6BC(uint64_t a1, uint64_t a2, int *a3)
{
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  int *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  void *v53;
  char v54;
  uint64_t v55;
  char *v56;
  char *v57;
  id v58;
  char v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  int *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  int *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  void (*v86)(uint64_t *, _QWORD, uint64_t, uint64_t);
  uint64_t v87;
  uint64_t *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  unsigned int (*v101)(char *, uint64_t, uint64_t);
  uint64_t v102;
  int *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  void *v132;
  char v133;
  int *v134;
  uint64_t v135;
  char *v136;
  char *v137;
  id v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  char v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  unsigned int (*v168)(char *, uint64_t, uint64_t);
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char v179;
  void *v180;
  uint64_t v181;
  id v182;
  __int128 v183;
  __int128 v184;
  __int128 v185;
  uint64_t v186;
  char *v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  int *v192;
  uint64_t v193;
  char *v194;
  char *v195;
  uint64_t v196;
  char *v197;
  char *v198;
  uint64_t v199;
  char *v200;
  char *v201;
  uint64_t v202;
  char *v203;
  char *v204;
  uint64_t v205;
  char *v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  char *v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  char *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  char *v220;
  void *v221;
  char v222;
  int *v223;
  uint64_t v224;
  char *v225;
  char *v226;
  id v227;
  uint64_t v228;
  char *v229;
  char *v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  char *v234;
  char *v235;
  uint64_t v236;
  uint64_t v237;
  char *v238;
  char *v239;
  uint64_t v240;
  uint64_t v241;
  char v242;
  uint64_t v243;
  char *v244;
  char *v245;
  uint64_t v246;
  uint64_t v247;
  char *v248;
  char *v249;
  uint64_t v250;
  uint64_t v252;
  uint64_t v253;
  unsigned int (*v254)(char *, uint64_t, uint64_t);
  unsigned int (*v255)(char *, uint64_t, uint64_t);
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  unsigned int (*v264)(char *, uint64_t, uint64_t);
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  char *v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t *__dst;
  char *__dsta;
  void *__dstb;
  uint64_t v280;
  uint64_t v281;
  int *v282;

  v3 = a3;
  v4 = a2;
  v5 = a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v7 = a3[7];
  __dst = (uint64_t *)(a1 + v7);
  v8 = (char *)(a2 + v7);
  v9 = type metadata accessor for SubLabelElement();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v280 = v4;
  v281 = v5;
  v282 = v3;
  if (v11(v8, 1, v9))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB188);
    memcpy(__dst, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v271 = v10;
    v13 = *(_QWORD *)v8;
    v14 = v8[8];
    sub_209EEC00C(*(_QWORD *)v8, v14);
    *__dst = v13;
    *((_BYTE *)__dst + 8) = v14;
    v15 = *((_QWORD *)v8 + 3);
    __dst[2] = *((_QWORD *)v8 + 2);
    __dst[3] = v15;
    v16 = *((_QWORD *)v8 + 5);
    __dst[4] = *((_QWORD *)v8 + 4);
    __dst[5] = v16;
    v17 = *(int *)(v9 + 28);
    v18 = (char *)__dst + v17;
    v19 = &v8[v17];
    v20 = sub_209F66A90();
    v21 = *(_QWORD *)(v20 - 8);
    v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v274 = v9;
    v255 = v22;
    v257 = v20;
    v253 = v21;
    if (v22(v19, 1, v20))
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    v24 = (int *)type metadata accessor for URLLoadingParameters(0);
    v25 = v24[5];
    v26 = &v18[v25];
    v27 = &v19[v25];
    v268 = *((_QWORD *)v27 + 1);
    *(_QWORD *)v26 = *(_QWORD *)v27;
    *((_QWORD *)v26 + 1) = v268;
    v28 = v24[6];
    v29 = &v18[v28];
    v30 = &v19[v28];
    v265 = *((_QWORD *)v30 + 1);
    *(_QWORD *)v29 = *(_QWORD *)v30;
    *((_QWORD *)v29 + 1) = v265;
    v18[v24[7]] = v19[v24[7]];
    v31 = v24[8];
    v32 = &v18[v31];
    v33 = &v19[v31];
    v262 = *((_QWORD *)v33 + 1);
    *(_QWORD *)v32 = *(_QWORD *)v33;
    *((_QWORD *)v32 + 1) = v262;
    v34 = v24[9];
    v35 = &v18[v34];
    v36 = &v19[v34];
    v259 = *((_QWORD *)v36 + 1);
    *(_QWORD *)v35 = *(_QWORD *)v36;
    *((_QWORD *)v35 + 1) = v259;
    v18[v24[10]] = v19[v24[10]];
    *(_QWORD *)&v18[v24[11]] = *(_QWORD *)&v19[v24[11]];
    v37 = v24[12];
    v38 = &v18[v37];
    v39 = &v19[v37];
    v40 = *((_QWORD *)v39 + 1);
    *(_QWORD *)v38 = *(_QWORD *)v39;
    *((_QWORD *)v38 + 1) = v40;
    v41 = v24[13];
    v42 = &v18[v41];
    v43 = &v19[v41];
    v44 = *((_QWORD *)v43 + 1);
    *(_QWORD *)v42 = *(_QWORD *)v43;
    *((_QWORD *)v42 + 1) = v44;
    v45 = v24[14];
    v46 = &v18[v45];
    v47 = &v19[v45];
    v48 = *((_QWORD *)v47 + 1);
    *(_QWORD *)v46 = *(_QWORD *)v47;
    *((_QWORD *)v46 + 1) = v48;
    v49 = (int *)type metadata accessor for URLLoader(0);
    v50 = v49[5];
    v51 = &v18[v50];
    v52 = &v19[v50];
    v53 = *(void **)v52;
    v54 = v52[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_209EEC018(v53, v54);
    *(_QWORD *)v51 = v53;
    v51[8] = v54;
    v55 = v49[6];
    v56 = &v18[v55];
    v57 = &v19[v55];
    v58 = *(id *)v57;
    v59 = v57[8];
    sub_209EEC018(*(id *)v57, v59);
    *(_QWORD *)v56 = v58;
    v56[8] = v59;
    v60 = v49[7];
    v61 = &v18[v60];
    v62 = &v19[v60];
    v63 = *(_QWORD *)v62;
    v64 = *((_QWORD *)v62 + 1);
    LOBYTE(v56) = v62[16];
    sub_209EEC024(*(_QWORD *)v62, v64, (char)v56);
    *(_QWORD *)v61 = v63;
    *((_QWORD *)v61 + 1) = v64;
    v61[16] = (char)v56;
    v65 = v49;
    v66 = v49[8];
    v67 = &v18[v66];
    v68 = &v19[v66];
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = v280;
      v69 = v274;
      if (v255(v68, 1, v257))
      {
        v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
        memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v253 + 16))(v67, v68, v257);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v253 + 56))(v67, 0, 1, v257);
      }
    }
    else
    {
      *(_QWORD *)v67 = *(_QWORD *)v68;
      swift_retain();
      v4 = v280;
      v69 = v274;
    }
    swift_storeEnumTagMultiPayload();
    v71 = v65;
    v72 = v65[9];
    v73 = &v18[v72];
    v74 = &v19[v72];
    v75 = *(_QWORD *)v74;
    v76 = *((_QWORD *)v74 + 1);
    v77 = v74[16];
    sub_209EEC024(*(_QWORD *)v74, v76, v77);
    *(_QWORD *)v73 = v75;
    *((_QWORD *)v73 + 1) = v76;
    v73[16] = v77;
    v78 = v71[10];
    v79 = &v18[v78];
    v80 = &v19[v78];
    v81 = *(_QWORD *)v80;
    LOBYTE(v76) = v80[8];
    sub_209EEC030(*(_QWORD *)v80, v76);
    *(_QWORD *)v79 = v81;
    v79[8] = v76;
    v82 = v71[11];
    v83 = &v18[v82];
    v84 = &v19[v82];
    v85 = *(_QWORD *)v84;
    LOBYTE(v84) = v84[8];
    *(_QWORD *)v83 = v85;
    v83[8] = (char)v84;
    v86 = *(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v271 + 56);
    swift_retain();
    v86(__dst, 0, 1, v69);
    v5 = v281;
    v3 = v282;
  }
  v87 = v3[8];
  v88 = (uint64_t *)(v5 + v87);
  v89 = (char *)(v4 + v87);
  v90 = type metadata accessor for HTMLContentElement(0);
  v91 = *(_QWORD *)(v90 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48))(v89, 1, v90))
  {
    v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB190);
    memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
  }
  else
  {
    v93 = *(_QWORD *)v89;
    v94 = v89[8];
    sub_209EEC00C(*(_QWORD *)v89, v94);
    *v88 = v93;
    *((_BYTE *)v88 + 8) = v94;
    v95 = *((_QWORD *)v89 + 3);
    v88[2] = *((_QWORD *)v89 + 2);
    v88[3] = v95;
    v275 = v90;
    __dsta = (char *)v88;
    v96 = *(int *)(v90 + 24);
    v97 = (char *)v88 + v96;
    v98 = &v89[v96];
    v99 = sub_209F66A90();
    v100 = *(_QWORD *)(v99 - 8);
    v101 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v100 + 48);
    swift_bridgeObjectRetain();
    v256 = v99;
    v258 = v91;
    v272 = v89;
    v252 = v100;
    v254 = v101;
    if (v101(v98, 1, v99))
    {
      v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
      memcpy(v97, v98, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v97, v98, v99);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v100 + 56))(v97, 0, 1, v99);
    }
    v103 = (int *)type metadata accessor for URLLoadingParameters(0);
    v104 = v103[5];
    v105 = &v97[v104];
    v106 = &v98[v104];
    v269 = *((_QWORD *)v106 + 1);
    *(_QWORD *)v105 = *(_QWORD *)v106;
    *((_QWORD *)v105 + 1) = v269;
    v107 = v103[6];
    v108 = &v97[v107];
    v109 = &v98[v107];
    v266 = *((_QWORD *)v109 + 1);
    *(_QWORD *)v108 = *(_QWORD *)v109;
    *((_QWORD *)v108 + 1) = v266;
    v97[v103[7]] = v98[v103[7]];
    v110 = v103[8];
    v111 = &v97[v110];
    v112 = &v98[v110];
    v263 = *((_QWORD *)v112 + 1);
    *(_QWORD *)v111 = *(_QWORD *)v112;
    *((_QWORD *)v111 + 1) = v263;
    v113 = v103[9];
    v114 = &v97[v113];
    v115 = &v98[v113];
    v260 = *((_QWORD *)v115 + 1);
    *(_QWORD *)v114 = *(_QWORD *)v115;
    *((_QWORD *)v114 + 1) = v260;
    v97[v103[10]] = v98[v103[10]];
    *(_QWORD *)&v97[v103[11]] = *(_QWORD *)&v98[v103[11]];
    v116 = v103[12];
    v117 = &v97[v116];
    v118 = &v98[v116];
    v119 = *((_QWORD *)v118 + 1);
    *(_QWORD *)v117 = *(_QWORD *)v118;
    *((_QWORD *)v117 + 1) = v119;
    v120 = v103[13];
    v121 = &v97[v120];
    v122 = &v98[v120];
    v123 = *((_QWORD *)v122 + 1);
    *(_QWORD *)v121 = *(_QWORD *)v122;
    *((_QWORD *)v121 + 1) = v123;
    v124 = v103[14];
    v125 = &v97[v124];
    v126 = &v98[v124];
    v127 = *((_QWORD *)v126 + 1);
    *(_QWORD *)v125 = *(_QWORD *)v126;
    *((_QWORD *)v125 + 1) = v127;
    v128 = type metadata accessor for URLLoader(0);
    v129 = *(int *)(v128 + 20);
    v130 = &v97[v129];
    v131 = &v98[v129];
    v132 = *(void **)v131;
    v133 = v131[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v134 = (int *)v128;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_209EEC018(v132, v133);
    *(_QWORD *)v130 = v132;
    v130[8] = v133;
    v135 = *(int *)(v128 + 24);
    v136 = &v97[v135];
    v137 = &v98[v135];
    v138 = *(id *)v137;
    LOBYTE(v128) = v137[8];
    sub_209EEC018(*(id *)v137, v128);
    *(_QWORD *)v136 = v138;
    v136[8] = v128;
    v139 = v134[7];
    v140 = &v97[v139];
    v141 = &v98[v139];
    v142 = *(_QWORD *)v141;
    v143 = *((_QWORD *)v141 + 1);
    LOBYTE(v136) = v141[16];
    sub_209EEC024(*(_QWORD *)v141, v143, (char)v136);
    *(_QWORD *)v140 = v142;
    *((_QWORD *)v140 + 1) = v143;
    v140[16] = (char)v136;
    v144 = v134[8];
    v145 = &v97[v144];
    v146 = &v98[v144];
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v147 = v272;
      if (v254(v146, 1, v256))
      {
        v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
        memcpy(v145, v146, *(_QWORD *)(*(_QWORD *)(v148 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v252 + 16))(v145, v146, v256);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v252 + 56))(v145, 0, 1, v256);
      }
      v5 = v281;
    }
    else
    {
      *(_QWORD *)v145 = *(_QWORD *)v146;
      swift_retain();
      v5 = v281;
      v147 = v272;
    }
    swift_storeEnumTagMultiPayload();
    v149 = v134[9];
    v150 = &v97[v149];
    v151 = &v98[v149];
    v152 = *(_QWORD *)v151;
    v153 = *((_QWORD *)v151 + 1);
    v154 = v151[16];
    sub_209EEC024(*(_QWORD *)v151, v153, v154);
    *(_QWORD *)v150 = v152;
    *((_QWORD *)v150 + 1) = v153;
    v150[16] = v154;
    v155 = v134[10];
    v156 = &v97[v155];
    v157 = &v98[v155];
    v158 = *(_QWORD *)v157;
    LOBYTE(v153) = v157[8];
    sub_209EEC030(*(_QWORD *)v157, v153);
    *(_QWORD *)v156 = v158;
    v156[8] = v153;
    v159 = v134[11];
    v160 = &v97[v159];
    v161 = &v98[v159];
    v162 = *(_QWORD *)v161;
    LOBYTE(v161) = v161[8];
    *(_QWORD *)v160 = v162;
    v160[8] = (char)v161;
    v163 = *(int *)(v275 + 28);
    v164 = &__dsta[v163];
    v165 = &v147[v163];
    v166 = sub_209F669E8();
    v167 = *(_QWORD *)(v166 - 8);
    v168 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v167 + 48);
    swift_retain();
    if (v168(v165, 1, v166))
    {
      v169 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB200);
      memcpy(v164, v165, *(_QWORD *)(*(_QWORD *)(v169 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v167 + 16))(v164, v165, v166);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v167 + 56))(v164, 0, 1, v166);
    }
    v4 = v280;
    v3 = v282;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v258 + 56))(__dsta, 0, 1, v275);
  }
  v170 = v3[9];
  v171 = v3[10];
  v172 = v5 + v170;
  v173 = v4 + v170;
  *(_BYTE *)v172 = *(_BYTE *)v173;
  *(_QWORD *)(v172 + 8) = *(_QWORD *)(v173 + 8);
  v174 = v5 + v171;
  v175 = (uint64_t *)(v4 + v171);
  v176 = *(_QWORD *)(v4 + v171 + 32);
  swift_retain();
  if (v176)
  {
    v177 = *v175;
    v178 = v175[1];
    v179 = *((_BYTE *)v175 + 16);
    sub_209EEAFF0();
    *(_QWORD *)v174 = v177;
    *(_QWORD *)(v174 + 8) = v178;
    *(_BYTE *)(v174 + 16) = v179;
    v180 = (void *)v175[3];
    v181 = v175[4];
    *(_QWORD *)(v174 + 24) = v180;
    *(_QWORD *)(v174 + 32) = v181;
    *(_QWORD *)(v174 + 40) = v175[5];
    *(_BYTE *)(v174 + 48) = *((_BYTE *)v175 + 48);
    *(_QWORD *)(v174 + 56) = v175[7];
    *(_BYTE *)(v174 + 64) = *((_BYTE *)v175 + 64);
    *(_QWORD *)(v174 + 72) = v175[9];
    *(_BYTE *)(v174 + 80) = *((_BYTE *)v175 + 80);
    *(_OWORD *)(v174 + 88) = *(_OWORD *)(v175 + 11);
    *(_BYTE *)(v174 + 104) = *((_BYTE *)v175 + 104);
    *(_QWORD *)(v174 + 112) = v175[14];
    v182 = v180;
    swift_retain();
    v3 = v282;
    swift_retain();
    swift_retain();
  }
  else
  {
    v183 = *((_OWORD *)v175 + 5);
    *(_OWORD *)(v174 + 64) = *((_OWORD *)v175 + 4);
    *(_OWORD *)(v174 + 80) = v183;
    *(_OWORD *)(v174 + 96) = *((_OWORD *)v175 + 6);
    *(_QWORD *)(v174 + 112) = v175[14];
    v184 = *((_OWORD *)v175 + 1);
    *(_OWORD *)v174 = *(_OWORD *)v175;
    *(_OWORD *)(v174 + 16) = v184;
    v185 = *((_OWORD *)v175 + 3);
    *(_OWORD *)(v174 + 32) = *((_OWORD *)v175 + 2);
    *(_OWORD *)(v174 + 48) = v185;
  }
  v186 = v3[11];
  v187 = (char *)(v5 + v186);
  v188 = (char *)(v4 + v186);
  v189 = sub_209F66A90();
  v190 = *(_QWORD *)(v189 - 8);
  v264 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v190 + 48);
  v267 = v189;
  v261 = v190;
  if (v264(v188, 1, v189))
  {
    v191 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(v187, v188, *(_QWORD *)(*(_QWORD *)(v191 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v190 + 16))(v187, v188, v189);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v190 + 56))(v187, 0, 1, v189);
  }
  v192 = (int *)type metadata accessor for URLLoadingParameters(0);
  v193 = v192[5];
  v194 = &v187[v193];
  v195 = &v188[v193];
  __dstb = (void *)*((_QWORD *)v195 + 1);
  *(_QWORD *)v194 = *(_QWORD *)v195;
  *((_QWORD *)v194 + 1) = __dstb;
  v196 = v192[6];
  v197 = &v187[v196];
  v198 = &v188[v196];
  v276 = *((_QWORD *)v198 + 1);
  *(_QWORD *)v197 = *(_QWORD *)v198;
  *((_QWORD *)v197 + 1) = v276;
  v187[v192[7]] = v188[v192[7]];
  v199 = v192[8];
  v200 = &v187[v199];
  v201 = &v188[v199];
  v273 = *((_QWORD *)v201 + 1);
  *(_QWORD *)v200 = *(_QWORD *)v201;
  *((_QWORD *)v200 + 1) = v273;
  v202 = v192[9];
  v203 = &v187[v202];
  v204 = &v188[v202];
  v270 = *((_QWORD *)v204 + 1);
  *(_QWORD *)v203 = *(_QWORD *)v204;
  *((_QWORD *)v203 + 1) = v270;
  v187[v192[10]] = v188[v192[10]];
  *(_QWORD *)&v187[v192[11]] = *(_QWORD *)&v188[v192[11]];
  v205 = v192[12];
  v206 = &v187[v205];
  v207 = &v188[v205];
  v208 = *((_QWORD *)v207 + 1);
  *(_QWORD *)v206 = *(_QWORD *)v207;
  *((_QWORD *)v206 + 1) = v208;
  v209 = v192[13];
  v210 = &v187[v209];
  v211 = &v188[v209];
  v212 = *((_QWORD *)v211 + 1);
  *(_QWORD *)v210 = *(_QWORD *)v211;
  *((_QWORD *)v210 + 1) = v212;
  v213 = v192[14];
  v214 = &v187[v213];
  v215 = &v188[v213];
  v216 = *((_QWORD *)v215 + 1);
  *(_QWORD *)v214 = *(_QWORD *)v215;
  *((_QWORD *)v214 + 1) = v216;
  v217 = type metadata accessor for URLLoader(0);
  v218 = *(int *)(v217 + 20);
  v219 = &v187[v218];
  v220 = &v188[v218];
  v221 = *(void **)v220;
  v222 = v220[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v223 = (int *)v217;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_209EEC018(v221, v222);
  *(_QWORD *)v219 = v221;
  v219[8] = v222;
  v224 = *(int *)(v217 + 24);
  v225 = &v187[v224];
  v226 = &v188[v224];
  v227 = *(id *)v226;
  LOBYTE(v217) = v226[8];
  sub_209EEC018(*(id *)v226, v217);
  *(_QWORD *)v225 = v227;
  v225[8] = v217;
  v228 = v223[7];
  v229 = &v187[v228];
  v230 = &v188[v228];
  v231 = *(_QWORD *)v230;
  v232 = *((_QWORD *)v230 + 1);
  LOBYTE(v225) = v230[16];
  sub_209EEC024(*(_QWORD *)v230, v232, (char)v225);
  *(_QWORD *)v229 = v231;
  *((_QWORD *)v229 + 1) = v232;
  v229[16] = (char)v225;
  v233 = v223[8];
  v234 = &v187[v233];
  v235 = &v188[v233];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    if (v264(v235, 1, v267))
    {
      v236 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
      memcpy(v234, v235, *(_QWORD *)(*(_QWORD *)(v236 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v261 + 16))(v234, v235, v267);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v261 + 56))(v234, 0, 1, v267);
    }
  }
  else
  {
    *(_QWORD *)v234 = *(_QWORD *)v235;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v237 = v223[9];
  v238 = &v187[v237];
  v239 = &v188[v237];
  v240 = *(_QWORD *)v239;
  v241 = *((_QWORD *)v239 + 1);
  v242 = v239[16];
  sub_209EEC024(*(_QWORD *)v239, v241, v242);
  *(_QWORD *)v238 = v240;
  *((_QWORD *)v238 + 1) = v241;
  v238[16] = v242;
  v243 = v223[10];
  v244 = &v187[v243];
  v245 = &v188[v243];
  v246 = *(_QWORD *)v245;
  LOBYTE(v241) = v245[8];
  sub_209EEC030(*(_QWORD *)v245, v241);
  *(_QWORD *)v244 = v246;
  v244[8] = v241;
  v247 = v223[11];
  v248 = &v187[v247];
  v249 = &v188[v247];
  v250 = *(_QWORD *)v249;
  LOBYTE(v249) = v249[8];
  *(_QWORD *)v248 = v250;
  v248[8] = (char)v249;
  *(_QWORD *)(v281 + v282[12]) = *(_QWORD *)(v280 + v282[12]);
  swift_retain();
  swift_bridgeObjectRetain();
  return v281;
}

_QWORD *sub_209EED49C(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(char *, uint64_t, uint64_t);
  int v34;
  int *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  int *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  void *v61;
  char v62;
  uint64_t v63;
  char *v64;
  char *v65;
  id v66;
  char v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  int *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  char *v98;
  char *v99;
  int *v100;
  uint64_t v101;
  char *v102;
  char *v103;
  id v104;
  char v105;
  void *v106;
  char v107;
  uint64_t v108;
  char *v109;
  char *v110;
  id v111;
  char v112;
  void *v113;
  char v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  void (*v141)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char v147;
  uint64_t v148;
  uint64_t v149;
  char v150;
  uint64_t v151;
  char *v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  char v156;
  uint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t (*v166)(uint64_t, uint64_t, uint64_t);
  int v167;
  int v168;
  uint64_t v169;
  char v170;
  uint64_t v171;
  char *v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  unsigned int (*v176)(char *, uint64_t, uint64_t);
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char v180;
  uint64_t v181;
  char v182;
  uint64_t v183;
  char *v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t (*v188)(char *, uint64_t, uint64_t);
  int v189;
  int *v190;
  uint64_t v191;
  char *v192;
  char *v193;
  uint64_t v194;
  char *v195;
  char *v196;
  uint64_t v197;
  char *v198;
  char *v199;
  uint64_t v200;
  char *v201;
  char *v202;
  uint64_t v203;
  char *v204;
  char *v205;
  uint64_t v206;
  char *v207;
  char *v208;
  uint64_t v209;
  char *v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  char *v215;
  void *v216;
  char v217;
  int *v218;
  uint64_t v219;
  char *v220;
  char *v221;
  id v222;
  uint64_t v223;
  char *v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  char *v229;
  char *v230;
  uint64_t v231;
  uint64_t v232;
  int *v233;
  uint64_t v234;
  char *v235;
  char *v236;
  uint64_t v237;
  char *v238;
  char *v239;
  uint64_t v240;
  char *v241;
  char *v242;
  uint64_t v243;
  char *v244;
  char *v245;
  uint64_t v246;
  char *v247;
  char *v248;
  uint64_t v249;
  char *v250;
  char *v251;
  uint64_t v252;
  char *v253;
  char *v254;
  int *v255;
  uint64_t v256;
  char *v257;
  char *v258;
  id v259;
  char v260;
  void *v261;
  char v262;
  uint64_t v263;
  char *v264;
  char *v265;
  id v266;
  char v267;
  void *v268;
  char v269;
  uint64_t v270;
  char *v271;
  char *v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  char v277;
  uint64_t v278;
  char *v279;
  char *v280;
  uint64_t v281;
  uint64_t v282;
  char *v283;
  char *v284;
  uint64_t v285;
  uint64_t v286;
  char v287;
  uint64_t v288;
  char *v289;
  char *v290;
  uint64_t v291;
  uint64_t v292;
  char *v293;
  char *v294;
  uint64_t v295;
  uint64_t v296;
  void *v297;
  char *v298;
  uint64_t v299;
  uint64_t v300;
  unsigned int (*v301)(char *, uint64_t, uint64_t);
  uint64_t v302;
  uint64_t v303;
  char *v304;
  char *v305;
  uint64_t v306;
  uint64_t v307;
  char v308;
  uint64_t v309;
  uint64_t v310;
  char v311;
  uint64_t v312;
  char *v313;
  char *v314;
  uint64_t v315;
  uint64_t v316;
  char v317;
  uint64_t v318;
  char *v319;
  char *v320;
  uint64_t v321;
  uint64_t v322;
  void *v323;
  char *v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t (*v327)(void *, uint64_t, uint64_t);
  int v328;
  uint64_t v329;
  uint64_t v330;
  char *v331;
  char *v332;
  uint64_t v333;
  uint64_t v334;
  char *v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  char v340;
  void *v341;
  void *v342;
  id v343;
  uint64_t v344;
  __int128 v345;
  uint64_t v346;
  uint64_t v347;
  char v348;
  void *v349;
  uint64_t v350;
  uint64_t v351;
  __int128 v352;
  id v353;
  __int128 v354;
  __int128 v355;
  __int128 v356;
  __int128 v357;
  __int128 v358;
  __int128 v359;
  __int128 v360;
  __int128 v361;
  __int128 v362;
  __int128 v363;
  __int128 v364;
  __int128 v365;
  uint64_t v366;
  char *v367;
  char *v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t (*v371)(char *, uint64_t, uint64_t);
  int v372;
  int v373;
  uint64_t v374;
  int *v375;
  uint64_t v376;
  char *v377;
  char *v378;
  uint64_t v379;
  char *v380;
  char *v381;
  uint64_t v382;
  char *v383;
  char *v384;
  uint64_t v385;
  char *v386;
  char *v387;
  uint64_t v388;
  char *v389;
  char *v390;
  uint64_t v391;
  char *v392;
  char *v393;
  uint64_t v394;
  char *v395;
  char *v396;
  int *v397;
  uint64_t v398;
  char *v399;
  char *v400;
  id v401;
  char v402;
  void *v403;
  char v404;
  uint64_t v405;
  char *v406;
  char *v407;
  id v408;
  char v409;
  void *v410;
  char v411;
  uint64_t v412;
  char *v413;
  char *v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  char v419;
  _QWORD *v420;
  uint64_t v421;
  char *v422;
  char *v423;
  uint64_t v424;
  uint64_t v425;
  char *v426;
  char *v427;
  uint64_t v428;
  uint64_t v429;
  char v430;
  uint64_t v431;
  uint64_t v432;
  char v433;
  uint64_t v434;
  char *v435;
  char *v436;
  uint64_t v437;
  uint64_t v438;
  char v439;
  uint64_t v440;
  char *v441;
  char *v442;
  uint64_t v443;
  uint64_t v445;
  uint64_t v446;
  unsigned int (*v447)(char *, uint64_t, uint64_t);
  unsigned int (*v448)(char *, uint64_t, uint64_t);
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  char *v453;
  char *v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  _QWORD *v461;
  int *v462;
  _QWORD *v463;

  v4 = a2;
  v5 = a1;
  *a1 = *a2;
  swift_retain();
  swift_release();
  v5[1] = v4[1];
  v5[2] = v4[2];
  v5[3] = v4[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[4] = v4[4];
  v5[5] = v4[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[7];
  v7 = (uint64_t)v5 + v6;
  v8 = (char *)v4 + v6;
  v9 = type metadata accessor for SubLabelElement();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11((uint64_t)v8, 1, v9);
  v461 = v5;
  v463 = v4;
  v462 = a3;
  if (!v12)
  {
    if (v13)
    {
      sub_209EEF010(v7, (uint64_t (*)(_QWORD))type metadata accessor for SubLabelElement);
      goto LABEL_7;
    }
    v24 = *(_QWORD *)v8;
    v25 = v8[8];
    sub_209EEC00C(*(_QWORD *)v8, v25);
    v26 = *(_QWORD *)v7;
    v27 = *(_BYTE *)(v7 + 8);
    *(_QWORD *)v7 = v24;
    *(_BYTE *)(v7 + 8) = v25;
    sub_209EEC68C(v26, v27);
    *(_QWORD *)(v7 + 16) = *((_QWORD *)v8 + 2);
    *(_QWORD *)(v7 + 24) = *((_QWORD *)v8 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v7 + 32) = *((_QWORD *)v8 + 4);
    *(_QWORD *)(v7 + 40) = *((_QWORD *)v8 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v28 = *(int *)(v9 + 28);
    v29 = (char *)(v7 + v28);
    v30 = &v8[v28];
    v31 = sub_209F66A90();
    v32 = *(_QWORD *)(v31 - 8);
    v33 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 48);
    LODWORD(v24) = v33(v29, 1, v31);
    v34 = v33(v30, 1, v31);
    if ((_DWORD)v24)
    {
      if (!v34)
      {
        (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v29, v30, v31);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
LABEL_19:
        v78 = (int *)type metadata accessor for URLLoadingParameters(0);
        v79 = v78[5];
        v80 = &v29[v79];
        v81 = &v30[v79];
        *(_QWORD *)v80 = *(_QWORD *)v81;
        *((_QWORD *)v80 + 1) = *((_QWORD *)v81 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v82 = v78[6];
        v83 = &v29[v82];
        v84 = &v30[v82];
        *(_QWORD *)v83 = *(_QWORD *)v84;
        *((_QWORD *)v83 + 1) = *((_QWORD *)v84 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v29[v78[7]] = v30[v78[7]];
        v85 = v78[8];
        v86 = &v29[v85];
        v87 = &v30[v85];
        *(_QWORD *)v86 = *(_QWORD *)v87;
        *((_QWORD *)v86 + 1) = *((_QWORD *)v87 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v88 = v78[9];
        v89 = &v29[v88];
        v90 = &v30[v88];
        *(_QWORD *)v89 = *(_QWORD *)v90;
        *((_QWORD *)v89 + 1) = *((_QWORD *)v90 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v29[v78[10]] = v30[v78[10]];
        *(_QWORD *)&v29[v78[11]] = *(_QWORD *)&v30[v78[11]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v91 = v78[12];
        v92 = &v29[v91];
        v93 = &v30[v91];
        *(_QWORD *)v92 = *(_QWORD *)v93;
        *((_QWORD *)v92 + 1) = *((_QWORD *)v93 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v94 = v78[13];
        v95 = &v29[v94];
        v96 = &v30[v94];
        *(_QWORD *)v95 = *(_QWORD *)v96;
        *((_QWORD *)v95 + 1) = *((_QWORD *)v96 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v97 = v78[14];
        v98 = &v29[v97];
        v99 = &v30[v97];
        *(_QWORD *)v98 = *(_QWORD *)v99;
        *((_QWORD *)v98 + 1) = *((_QWORD *)v99 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v100 = (int *)type metadata accessor for URLLoader(0);
        v101 = v100[5];
        v102 = &v29[v101];
        v103 = &v30[v101];
        v104 = *(id *)v103;
        v105 = v103[8];
        sub_209EEC018(*(id *)v103, v105);
        v106 = *(void **)v102;
        v107 = v102[8];
        *(_QWORD *)v102 = v104;
        v102[8] = v105;
        sub_209EEC698(v106, v107);
        v108 = v100[6];
        v109 = &v29[v108];
        v110 = &v30[v108];
        v111 = *(id *)v110;
        v112 = v110[8];
        sub_209EEC018(*(id *)v110, v112);
        v113 = *(void **)v109;
        v114 = v109[8];
        *(_QWORD *)v109 = v111;
        v109[8] = v112;
        sub_209EEC698(v113, v114);
        v115 = v100[7];
        v116 = &v29[v115];
        v117 = &v30[v115];
        v118 = *(_QWORD *)v117;
        v119 = *((_QWORD *)v117 + 1);
        LOBYTE(v109) = v117[16];
        sub_209EEC024(*(_QWORD *)v117, v119, (char)v109);
        v120 = *(_QWORD *)v116;
        v121 = *((_QWORD *)v116 + 1);
        v122 = v116[16];
        *(_QWORD *)v116 = v118;
        *((_QWORD *)v116 + 1) = v119;
        v116[16] = (char)v109;
        sub_209EEC6A4(v120, v121, v122);
        v5 = v461;
        v4 = v463;
        if (v461 != v463)
        {
          v123 = v100[8];
          v124 = &v29[v123];
          v125 = &v30[v123];
          sub_209EE017C((uint64_t)&v29[v123], &qword_2545BB1F8);
          __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            if (v33(v125, 1, v31))
            {
              v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
              memcpy(v124, v125, *(_QWORD *)(*(_QWORD *)(v126 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v124, v125, v31);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v124, 0, 1, v31);
            }
          }
          else
          {
            *(_QWORD *)v124 = *(_QWORD *)v125;
            swift_retain();
          }
          swift_storeEnumTagMultiPayload();
          v5 = v461;
          v4 = v463;
        }
        v142 = v100[9];
        v143 = &v29[v142];
        v144 = &v30[v142];
        v145 = *(_QWORD *)v144;
        v146 = *((_QWORD *)v144 + 1);
        v147 = v144[16];
        sub_209EEC024(*(_QWORD *)v144, v146, v147);
        v148 = *(_QWORD *)v143;
        v149 = *((_QWORD *)v143 + 1);
        v150 = v143[16];
        *(_QWORD *)v143 = v145;
        *((_QWORD *)v143 + 1) = v146;
        v143[16] = v147;
        sub_209EEC6A4(v148, v149, v150);
        v151 = v100[10];
        v152 = &v29[v151];
        v153 = &v30[v151];
        v154 = *(_QWORD *)v153;
        LOBYTE(v146) = v153[8];
        sub_209EEC030(*(_QWORD *)v153, v146);
        v155 = *(_QWORD *)v152;
        v156 = v152[8];
        *(_QWORD *)v152 = v154;
        v152[8] = v146;
        sub_209EEC6B0(v155, v156);
        v157 = v100[11];
        v158 = &v29[v157];
        v159 = &v30[v157];
        v160 = *(_QWORD *)v159;
        LOBYTE(v159) = v159[8];
        *(_QWORD *)v158 = v160;
        v158[8] = (char)v159;
        swift_retain();
        swift_release();
        goto LABEL_30;
      }
    }
    else
    {
      if (!v34)
      {
        (*(void (**)(char *, char *, uint64_t))(v32 + 24))(v29, v30, v31);
        goto LABEL_19;
      }
      (*(void (**)(char *, uint64_t))(v32 + 8))(v29, v31);
    }
    v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
    goto LABEL_19;
  }
  if (v13)
  {
LABEL_7:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB188);
    memcpy((void *)v7, v8, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_31;
  }
  v457 = v10;
  v14 = *(_QWORD *)v8;
  v15 = v8[8];
  sub_209EEC00C(*(_QWORD *)v8, v15);
  *(_QWORD *)v7 = v14;
  *(_BYTE *)(v7 + 8) = v15;
  *(_QWORD *)(v7 + 16) = *((_QWORD *)v8 + 2);
  *(_QWORD *)(v7 + 24) = *((_QWORD *)v8 + 3);
  *(_QWORD *)(v7 + 32) = *((_QWORD *)v8 + 4);
  *(_QWORD *)(v7 + 40) = *((_QWORD *)v8 + 5);
  v16 = *(int *)(v9 + 28);
  v17 = (char *)(v7 + v16);
  v18 = &v8[v16];
  v19 = sub_209F66A90();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v448 = v21;
  v450 = v19;
  v446 = v20;
  if (v21(v18, 1, v19))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  v35 = (int *)type metadata accessor for URLLoadingParameters(0);
  v36 = v35[5];
  v37 = &v17[v36];
  v38 = &v18[v36];
  *(_QWORD *)v37 = *(_QWORD *)v38;
  *((_QWORD *)v37 + 1) = *((_QWORD *)v38 + 1);
  v39 = v35[6];
  v40 = &v17[v39];
  v41 = &v18[v39];
  *(_QWORD *)v40 = *(_QWORD *)v41;
  *((_QWORD *)v40 + 1) = *((_QWORD *)v41 + 1);
  v17[v35[7]] = v18[v35[7]];
  v42 = v35[8];
  v43 = &v17[v42];
  v44 = &v18[v42];
  *(_QWORD *)v43 = *(_QWORD *)v44;
  *((_QWORD *)v43 + 1) = *((_QWORD *)v44 + 1);
  v45 = v35[9];
  v46 = &v17[v45];
  v47 = &v18[v45];
  *(_QWORD *)v46 = *(_QWORD *)v47;
  *((_QWORD *)v46 + 1) = *((_QWORD *)v47 + 1);
  v17[v35[10]] = v18[v35[10]];
  *(_QWORD *)&v17[v35[11]] = *(_QWORD *)&v18[v35[11]];
  v48 = v35[12];
  v49 = &v17[v48];
  v50 = &v18[v48];
  *(_QWORD *)v49 = *(_QWORD *)v50;
  *((_QWORD *)v49 + 1) = *((_QWORD *)v50 + 1);
  v51 = v35[13];
  v52 = &v17[v51];
  v53 = &v18[v51];
  *(_QWORD *)v52 = *(_QWORD *)v53;
  *((_QWORD *)v52 + 1) = *((_QWORD *)v53 + 1);
  v54 = v35[14];
  v55 = &v17[v54];
  v56 = &v18[v54];
  *(_QWORD *)v55 = *(_QWORD *)v56;
  *((_QWORD *)v55 + 1) = *((_QWORD *)v56 + 1);
  v57 = (int *)type metadata accessor for URLLoader(0);
  v58 = v57[5];
  v59 = &v17[v58];
  v60 = &v18[v58];
  v61 = *(void **)v60;
  v62 = v60[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_209EEC018(v61, v62);
  *(_QWORD *)v59 = v61;
  v59[8] = v62;
  v63 = v57[6];
  v64 = &v17[v63];
  v65 = &v18[v63];
  v66 = *(id *)v65;
  v67 = v65[8];
  sub_209EEC018(*(id *)v65, v67);
  *(_QWORD *)v64 = v66;
  v64[8] = v67;
  v68 = v57[7];
  v69 = &v17[v68];
  v70 = &v18[v68];
  v71 = *(_QWORD *)v70;
  v72 = *((_QWORD *)v70 + 1);
  LOBYTE(v64) = v70[16];
  sub_209EEC024(*(_QWORD *)v70, v72, (char)v64);
  *(_QWORD *)v69 = v71;
  *((_QWORD *)v69 + 1) = v72;
  v69[16] = (char)v64;
  v73 = v57[8];
  v74 = &v17[v73];
  v75 = &v18[v73];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    if (v448(v75, 1, v450))
    {
      v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
      memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v446 + 16))(v74, v75, v450);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v446 + 56))(v74, 0, 1, v450);
    }
  }
  else
  {
    *(_QWORD *)v74 = *(_QWORD *)v75;
    swift_retain();
  }
  v5 = v461;
  swift_storeEnumTagMultiPayload();
  v127 = v57[9];
  v128 = &v17[v127];
  v129 = &v18[v127];
  v130 = *(_QWORD *)v129;
  v131 = *((_QWORD *)v129 + 1);
  v132 = v129[16];
  sub_209EEC024(*(_QWORD *)v129, v131, v132);
  *(_QWORD *)v128 = v130;
  *((_QWORD *)v128 + 1) = v131;
  v128[16] = v132;
  v133 = v57[10];
  v134 = &v17[v133];
  v135 = &v18[v133];
  v136 = *(_QWORD *)v135;
  LOBYTE(v131) = v135[8];
  sub_209EEC030(*(_QWORD *)v135, v131);
  *(_QWORD *)v134 = v136;
  v134[8] = v131;
  v137 = v57[11];
  v138 = &v17[v137];
  v139 = &v18[v137];
  v140 = *(_QWORD *)v139;
  LOBYTE(v139) = v139[8];
  *(_QWORD *)v138 = v140;
  v138[8] = (char)v139;
  v141 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v457 + 56);
  swift_retain();
  v141(v7, 0, 1, v9);
  v4 = v463;
LABEL_30:
  a3 = v462;
LABEL_31:
  v161 = a3[8];
  v162 = (uint64_t)v5 + v161;
  v163 = (char *)v4 + v161;
  v164 = type metadata accessor for HTMLContentElement(0);
  v165 = *(_QWORD *)(v164 - 8);
  v166 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v165 + 48);
  v167 = v166(v162, 1, v164);
  v168 = v166((uint64_t)v163, 1, v164);
  if (!v167)
  {
    if (v168)
    {
      sub_209EEF010(v162, type metadata accessor for HTMLContentElement);
      goto LABEL_37;
    }
    v179 = *(_QWORD *)v163;
    v180 = v163[8];
    sub_209EEC00C(*(_QWORD *)v163, v180);
    v181 = *(_QWORD *)v162;
    v182 = *(_BYTE *)(v162 + 8);
    *(_QWORD *)v162 = v179;
    *(_BYTE *)(v162 + 8) = v180;
    sub_209EEC68C(v181, v182);
    *(_QWORD *)(v162 + 16) = *((_QWORD *)v163 + 2);
    *(_QWORD *)(v162 + 24) = *((_QWORD *)v163 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v183 = *(int *)(v164 + 24);
    v454 = v163;
    v456 = v162;
    v184 = (char *)(v162 + v183);
    v185 = &v163[v183];
    v186 = sub_209F66A90();
    v187 = *(_QWORD *)(v186 - 8);
    v188 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v187 + 48);
    LODWORD(v179) = v188(v184, 1, v186);
    v189 = v188(v185, 1, v186);
    v459 = v164;
    v452 = v186;
    if ((_DWORD)v179)
    {
      if (!v189)
      {
        (*(void (**)(char *, char *, uint64_t))(v187 + 16))(v184, v185, v186);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v187 + 56))(v184, 0, 1, v186);
        goto LABEL_49;
      }
    }
    else
    {
      if (!v189)
      {
        (*(void (**)(char *, char *, uint64_t))(v187 + 24))(v184, v185, v186);
LABEL_49:
        v233 = (int *)type metadata accessor for URLLoadingParameters(0);
        v234 = v233[5];
        v235 = &v184[v234];
        v236 = &v185[v234];
        *(_QWORD *)v235 = *(_QWORD *)v236;
        *((_QWORD *)v235 + 1) = *((_QWORD *)v236 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v237 = v233[6];
        v238 = &v184[v237];
        v239 = &v185[v237];
        *(_QWORD *)v238 = *(_QWORD *)v239;
        *((_QWORD *)v238 + 1) = *((_QWORD *)v239 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v184[v233[7]] = v185[v233[7]];
        v240 = v233[8];
        v241 = &v184[v240];
        v242 = &v185[v240];
        *(_QWORD *)v241 = *(_QWORD *)v242;
        *((_QWORD *)v241 + 1) = *((_QWORD *)v242 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v243 = v233[9];
        v244 = &v184[v243];
        v245 = &v185[v243];
        *(_QWORD *)v244 = *(_QWORD *)v245;
        *((_QWORD *)v244 + 1) = *((_QWORD *)v245 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v184[v233[10]] = v185[v233[10]];
        *(_QWORD *)&v184[v233[11]] = *(_QWORD *)&v185[v233[11]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v246 = v233[12];
        v247 = &v184[v246];
        v248 = &v185[v246];
        *(_QWORD *)v247 = *(_QWORD *)v248;
        *((_QWORD *)v247 + 1) = *((_QWORD *)v248 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v249 = v233[13];
        v250 = &v184[v249];
        v251 = &v185[v249];
        *(_QWORD *)v250 = *(_QWORD *)v251;
        *((_QWORD *)v250 + 1) = *((_QWORD *)v251 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v252 = v233[14];
        v253 = &v184[v252];
        v254 = &v185[v252];
        *(_QWORD *)v253 = *(_QWORD *)v254;
        *((_QWORD *)v253 + 1) = *((_QWORD *)v254 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v255 = (int *)type metadata accessor for URLLoader(0);
        v256 = v255[5];
        v257 = &v184[v256];
        v258 = &v185[v256];
        v259 = *(id *)v258;
        v260 = v258[8];
        sub_209EEC018(*(id *)v258, v260);
        v261 = *(void **)v257;
        v262 = v257[8];
        *(_QWORD *)v257 = v259;
        v257[8] = v260;
        sub_209EEC698(v261, v262);
        v263 = v255[6];
        v264 = &v184[v263];
        v265 = &v185[v263];
        v266 = *(id *)v265;
        v267 = v265[8];
        sub_209EEC018(*(id *)v265, v267);
        v268 = *(void **)v264;
        v269 = v264[8];
        *(_QWORD *)v264 = v266;
        v264[8] = v267;
        sub_209EEC698(v268, v269);
        v270 = v255[7];
        v271 = &v184[v270];
        v272 = &v185[v270];
        v273 = *(_QWORD *)v272;
        v274 = *((_QWORD *)v272 + 1);
        LOBYTE(v264) = v272[16];
        sub_209EEC024(*(_QWORD *)v272, v274, (char)v264);
        v275 = *(_QWORD *)v271;
        v276 = *((_QWORD *)v271 + 1);
        v277 = v271[16];
        *(_QWORD *)v271 = v273;
        *((_QWORD *)v271 + 1) = v274;
        v271[16] = (char)v264;
        sub_209EEC6A4(v275, v276, v277);
        if (v5 != v463)
        {
          v278 = v255[8];
          v279 = &v184[v278];
          v280 = &v185[v278];
          sub_209EE017C((uint64_t)&v184[v278], &qword_2545BB1F8);
          __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            if (v188(v280, 1, v452))
            {
              v281 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
              memcpy(v279, v280, *(_QWORD *)(*(_QWORD *)(v281 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v187 + 16))(v279, v280, v452);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v187 + 56))(v279, 0, 1, v452);
            }
          }
          else
          {
            *(_QWORD *)v279 = *(_QWORD *)v280;
            swift_retain();
          }
          swift_storeEnumTagMultiPayload();
          v5 = v461;
        }
        v303 = v255[9];
        v304 = &v184[v303];
        v305 = &v185[v303];
        v306 = *(_QWORD *)v305;
        v307 = *((_QWORD *)v305 + 1);
        v308 = v305[16];
        sub_209EEC024(*(_QWORD *)v305, v307, v308);
        v309 = *(_QWORD *)v304;
        v310 = *((_QWORD *)v304 + 1);
        v311 = v304[16];
        *(_QWORD *)v304 = v306;
        *((_QWORD *)v304 + 1) = v307;
        v304[16] = v308;
        sub_209EEC6A4(v309, v310, v311);
        v312 = v255[10];
        v313 = &v184[v312];
        v314 = &v185[v312];
        v315 = *(_QWORD *)v314;
        LOBYTE(v307) = v314[8];
        sub_209EEC030(*(_QWORD *)v314, v307);
        v316 = *(_QWORD *)v313;
        v317 = v313[8];
        *(_QWORD *)v313 = v315;
        v313[8] = v307;
        sub_209EEC6B0(v316, v317);
        v318 = v255[11];
        v319 = &v184[v318];
        v320 = &v185[v318];
        v321 = *(_QWORD *)v320;
        LOBYTE(v320) = v320[8];
        *(_QWORD *)v319 = v321;
        v319[8] = (char)v320;
        swift_retain();
        swift_release();
        v322 = *(int *)(v459 + 28);
        v323 = (void *)(v456 + v322);
        v324 = &v454[v322];
        v325 = sub_209F669E8();
        v326 = *(_QWORD *)(v325 - 8);
        v327 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v326 + 48);
        LODWORD(v315) = v327(v323, 1, v325);
        v328 = v327(v324, 1, v325);
        if ((_DWORD)v315)
        {
          if (!v328)
          {
            (*(void (**)(void *, char *, uint64_t))(v326 + 16))(v323, v324, v325);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v326 + 56))(v323, 0, 1, v325);
LABEL_68:
            v4 = v463;
            a3 = v462;
            goto LABEL_69;
          }
        }
        else
        {
          if (!v328)
          {
            (*(void (**)(void *, char *, uint64_t))(v326 + 24))(v323, v324, v325);
            goto LABEL_68;
          }
          (*(void (**)(void *, uint64_t))(v326 + 8))(v323, v325);
        }
        v329 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB200);
        memcpy(v323, v324, *(_QWORD *)(*(_QWORD *)(v329 - 8) + 64));
        goto LABEL_68;
      }
      (*(void (**)(char *, uint64_t))(v187 + 8))(v184, v186);
    }
    v232 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(v184, v185, *(_QWORD *)(*(_QWORD *)(v232 - 8) + 64));
    goto LABEL_49;
  }
  if (v168)
  {
LABEL_37:
    v178 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB190);
    memcpy((void *)v162, v163, *(_QWORD *)(*(_QWORD *)(v178 - 8) + 64));
    goto LABEL_69;
  }
  v169 = *(_QWORD *)v163;
  v170 = v163[8];
  sub_209EEC00C(*(_QWORD *)v163, v170);
  *(_QWORD *)v162 = v169;
  *(_BYTE *)(v162 + 8) = v170;
  *(_QWORD *)(v162 + 16) = *((_QWORD *)v163 + 2);
  *(_QWORD *)(v162 + 24) = *((_QWORD *)v163 + 3);
  v171 = *(int *)(v164 + 24);
  v455 = v162;
  v172 = (char *)(v162 + v171);
  v173 = &v163[v171];
  v174 = sub_209F66A90();
  v175 = *(_QWORD *)(v174 - 8);
  v176 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v175 + 48);
  swift_bridgeObjectRetain();
  v447 = v176;
  v458 = v164;
  v451 = v165;
  v453 = v163;
  v449 = v174;
  v445 = v175;
  if (v176(v173, 1, v174))
  {
    v177 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(v172, v173, *(_QWORD *)(*(_QWORD *)(v177 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v175 + 16))(v172, v173, v174);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v175 + 56))(v172, 0, 1, v174);
  }
  v190 = (int *)type metadata accessor for URLLoadingParameters(0);
  v191 = v190[5];
  v192 = &v172[v191];
  v193 = &v173[v191];
  *(_QWORD *)v192 = *(_QWORD *)v193;
  *((_QWORD *)v192 + 1) = *((_QWORD *)v193 + 1);
  v194 = v190[6];
  v195 = &v172[v194];
  v196 = &v173[v194];
  *(_QWORD *)v195 = *(_QWORD *)v196;
  *((_QWORD *)v195 + 1) = *((_QWORD *)v196 + 1);
  v172[v190[7]] = v173[v190[7]];
  v197 = v190[8];
  v198 = &v172[v197];
  v199 = &v173[v197];
  *(_QWORD *)v198 = *(_QWORD *)v199;
  *((_QWORD *)v198 + 1) = *((_QWORD *)v199 + 1);
  v200 = v190[9];
  v201 = &v172[v200];
  v202 = &v173[v200];
  *(_QWORD *)v201 = *(_QWORD *)v202;
  *((_QWORD *)v201 + 1) = *((_QWORD *)v202 + 1);
  v172[v190[10]] = v173[v190[10]];
  *(_QWORD *)&v172[v190[11]] = *(_QWORD *)&v173[v190[11]];
  v203 = v190[12];
  v204 = &v172[v203];
  v205 = &v173[v203];
  *(_QWORD *)v204 = *(_QWORD *)v205;
  *((_QWORD *)v204 + 1) = *((_QWORD *)v205 + 1);
  v206 = v190[13];
  v207 = &v172[v206];
  v208 = &v173[v206];
  *(_QWORD *)v207 = *(_QWORD *)v208;
  *((_QWORD *)v207 + 1) = *((_QWORD *)v208 + 1);
  v209 = v190[14];
  v210 = &v172[v209];
  v211 = &v173[v209];
  *(_QWORD *)v210 = *(_QWORD *)v211;
  *((_QWORD *)v210 + 1) = *((_QWORD *)v211 + 1);
  v212 = type metadata accessor for URLLoader(0);
  v213 = *(int *)(v212 + 20);
  v214 = &v172[v213];
  v215 = &v173[v213];
  v216 = *(void **)v215;
  v217 = v215[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v218 = (int *)v212;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_209EEC018(v216, v217);
  *(_QWORD *)v214 = v216;
  v214[8] = v217;
  v219 = *(int *)(v212 + 24);
  v220 = &v172[v219];
  v221 = &v173[v219];
  v222 = *(id *)v221;
  LOBYTE(v212) = v221[8];
  sub_209EEC018(*(id *)v221, v212);
  *(_QWORD *)v220 = v222;
  v220[8] = v212;
  v223 = v218[7];
  v224 = &v172[v223];
  v225 = &v173[v223];
  v226 = *(_QWORD *)v225;
  v227 = *((_QWORD *)v225 + 1);
  LOBYTE(v220) = v225[16];
  sub_209EEC024(*(_QWORD *)v225, v227, (char)v220);
  *(_QWORD *)v224 = v226;
  *((_QWORD *)v224 + 1) = v227;
  v224[16] = (char)v220;
  v228 = v218[8];
  v229 = &v172[v228];
  v230 = &v173[v228];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    if (v447(v230, 1, v449))
    {
      v231 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
      memcpy(v229, v230, *(_QWORD *)(*(_QWORD *)(v231 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v445 + 16))(v229, v230, v449);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v445 + 56))(v229, 0, 1, v449);
    }
  }
  else
  {
    *(_QWORD *)v229 = *(_QWORD *)v230;
    swift_retain();
  }
  a3 = v462;
  swift_storeEnumTagMultiPayload();
  v282 = v218[9];
  v283 = &v172[v282];
  v284 = &v173[v282];
  v285 = *(_QWORD *)v284;
  v286 = *((_QWORD *)v284 + 1);
  v287 = v284[16];
  sub_209EEC024(*(_QWORD *)v284, v286, v287);
  *(_QWORD *)v283 = v285;
  *((_QWORD *)v283 + 1) = v286;
  v283[16] = v287;
  v288 = v218[10];
  v289 = &v172[v288];
  v290 = &v173[v288];
  v291 = *(_QWORD *)v290;
  LOBYTE(v286) = v290[8];
  sub_209EEC030(*(_QWORD *)v290, v286);
  *(_QWORD *)v289 = v291;
  v289[8] = v286;
  v292 = v218[11];
  v293 = &v172[v292];
  v294 = &v173[v292];
  v295 = *(_QWORD *)v294;
  LOBYTE(v294) = v294[8];
  *(_QWORD *)v293 = v295;
  v293[8] = (char)v294;
  v296 = *(int *)(v458 + 28);
  v297 = (void *)(v455 + v296);
  v298 = &v453[v296];
  v299 = sub_209F669E8();
  v300 = *(_QWORD *)(v299 - 8);
  v301 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v300 + 48);
  swift_retain();
  if (v301(v298, 1, v299))
  {
    v302 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB200);
    memcpy(v297, v298, *(_QWORD *)(*(_QWORD *)(v302 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v300 + 16))(v297, v298, v299);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v300 + 56))(v297, 0, 1, v299);
  }
  v5 = v461;
  v4 = v463;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v451 + 56))(v455, 0, 1, v458);
LABEL_69:
  v330 = a3[9];
  v331 = (char *)v5 + v330;
  v332 = (char *)v4 + v330;
  *v331 = *v332;
  *((_QWORD *)v331 + 1) = *((_QWORD *)v332 + 1);
  swift_retain();
  swift_release();
  v333 = a3[10];
  v334 = (uint64_t)v5 + v333;
  v335 = (char *)v4 + v333;
  v336 = *(_QWORD *)((char *)v5 + v333 + 32);
  v337 = *(_QWORD *)((char *)v4 + v333 + 32);
  if (v336)
  {
    if (v337)
    {
      v338 = *(_QWORD *)v335;
      v339 = *((_QWORD *)v335 + 1);
      v340 = v335[16];
      sub_209EEAFF0();
      *(_QWORD *)v334 = v338;
      *(_QWORD *)(v334 + 8) = v339;
      *(_BYTE *)(v334 + 16) = v340;
      sub_209EEB098();
      v341 = *(void **)(v334 + 24);
      v342 = (void *)*((_QWORD *)v335 + 3);
      *(_QWORD *)(v334 + 24) = v342;
      v343 = v342;

      *(_QWORD *)(v334 + 32) = *((_QWORD *)v335 + 4);
      swift_retain();
      swift_release();
      v344 = *((_QWORD *)v335 + 5);
      *(_BYTE *)(v334 + 48) = v335[48];
      *(_QWORD *)(v334 + 40) = v344;
      LOBYTE(v344) = v335[64];
      *(_QWORD *)(v334 + 56) = *((_QWORD *)v335 + 7);
      *(_BYTE *)(v334 + 64) = v344;
      *(_QWORD *)(v334 + 72) = *((_QWORD *)v335 + 9);
      swift_retain();
      swift_release();
      *(_BYTE *)(v334 + 80) = v335[80];
      v345 = *(_OWORD *)(v335 + 88);
      *(_BYTE *)(v334 + 104) = v335[104];
      *(_OWORD *)(v334 + 88) = v345;
      *(_QWORD *)(v334 + 112) = *((_QWORD *)v335 + 14);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_209EEF04C(v334);
      v354 = *((_OWORD *)v335 + 3);
      v356 = *(_OWORD *)v335;
      v355 = *((_OWORD *)v335 + 1);
      *(_OWORD *)(v334 + 32) = *((_OWORD *)v335 + 2);
      *(_OWORD *)(v334 + 48) = v354;
      *(_OWORD *)v334 = v356;
      *(_OWORD *)(v334 + 16) = v355;
      v358 = *((_OWORD *)v335 + 5);
      v357 = *((_OWORD *)v335 + 6);
      v359 = *((_OWORD *)v335 + 4);
      *(_QWORD *)(v334 + 112) = *((_QWORD *)v335 + 14);
      *(_OWORD *)(v334 + 80) = v358;
      *(_OWORD *)(v334 + 96) = v357;
      *(_OWORD *)(v334 + 64) = v359;
    }
  }
  else if (v337)
  {
    v346 = *(_QWORD *)v335;
    v347 = *((_QWORD *)v335 + 1);
    v348 = v335[16];
    sub_209EEAFF0();
    *(_QWORD *)v334 = v346;
    *(_QWORD *)(v334 + 8) = v347;
    *(_BYTE *)(v334 + 16) = v348;
    v349 = (void *)*((_QWORD *)v335 + 3);
    *(_QWORD *)(v334 + 24) = v349;
    *(_QWORD *)(v334 + 32) = *((_QWORD *)v335 + 4);
    v350 = *((_QWORD *)v335 + 5);
    *(_BYTE *)(v334 + 48) = v335[48];
    *(_QWORD *)(v334 + 40) = v350;
    v351 = *((_QWORD *)v335 + 7);
    *(_BYTE *)(v334 + 64) = v335[64];
    *(_QWORD *)(v334 + 56) = v351;
    *(_QWORD *)(v334 + 72) = *((_QWORD *)v335 + 9);
    *(_BYTE *)(v334 + 80) = v335[80];
    v352 = *(_OWORD *)(v335 + 88);
    *(_BYTE *)(v334 + 104) = v335[104];
    *(_OWORD *)(v334 + 88) = v352;
    *(_QWORD *)(v334 + 112) = *((_QWORD *)v335 + 14);
    v353 = v349;
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    v360 = *(_OWORD *)v335;
    v361 = *((_OWORD *)v335 + 1);
    v362 = *((_OWORD *)v335 + 3);
    *(_OWORD *)(v334 + 32) = *((_OWORD *)v335 + 2);
    *(_OWORD *)(v334 + 48) = v362;
    *(_OWORD *)v334 = v360;
    *(_OWORD *)(v334 + 16) = v361;
    v363 = *((_OWORD *)v335 + 4);
    v364 = *((_OWORD *)v335 + 5);
    v365 = *((_OWORD *)v335 + 6);
    *(_QWORD *)(v334 + 112) = *((_QWORD *)v335 + 14);
    *(_OWORD *)(v334 + 80) = v364;
    *(_OWORD *)(v334 + 96) = v365;
    *(_OWORD *)(v334 + 64) = v363;
  }
  v366 = a3[11];
  v367 = (char *)v5 + v366;
  v368 = (char *)v4 + v366;
  v369 = sub_209F66A90();
  v370 = *(_QWORD *)(v369 - 8);
  v371 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v370 + 48);
  v372 = v371(v367, 1, v369);
  v373 = v371(v368, 1, v369);
  v460 = v370;
  if (v372)
  {
    if (!v373)
    {
      (*(void (**)(char *, char *, uint64_t))(v370 + 16))(v367, v368, v369);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v370 + 56))(v367, 0, 1, v369);
      goto LABEL_82;
    }
    goto LABEL_81;
  }
  if (v373)
  {
    (*(void (**)(char *, uint64_t))(v370 + 8))(v367, v369);
LABEL_81:
    v374 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(v367, v368, *(_QWORD *)(*(_QWORD *)(v374 - 8) + 64));
    goto LABEL_82;
  }
  (*(void (**)(char *, char *, uint64_t))(v370 + 24))(v367, v368, v369);
LABEL_82:
  v375 = (int *)type metadata accessor for URLLoadingParameters(0);
  v376 = v375[5];
  v377 = &v367[v376];
  v378 = &v368[v376];
  *(_QWORD *)v377 = *(_QWORD *)v378;
  *((_QWORD *)v377 + 1) = *((_QWORD *)v378 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v379 = v375[6];
  v380 = &v367[v379];
  v381 = &v368[v379];
  *(_QWORD *)v380 = *(_QWORD *)v381;
  *((_QWORD *)v380 + 1) = *((_QWORD *)v381 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v367[v375[7]] = v368[v375[7]];
  v382 = v375[8];
  v383 = &v367[v382];
  v384 = &v368[v382];
  *(_QWORD *)v383 = *(_QWORD *)v384;
  *((_QWORD *)v383 + 1) = *((_QWORD *)v384 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v385 = v375[9];
  v386 = &v367[v385];
  v387 = &v368[v385];
  *(_QWORD *)v386 = *(_QWORD *)v387;
  *((_QWORD *)v386 + 1) = *((_QWORD *)v387 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v367[v375[10]] = v368[v375[10]];
  *(_QWORD *)&v367[v375[11]] = *(_QWORD *)&v368[v375[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v388 = v375[12];
  v389 = &v367[v388];
  v390 = &v368[v388];
  *(_QWORD *)v389 = *(_QWORD *)v390;
  *((_QWORD *)v389 + 1) = *((_QWORD *)v390 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v391 = v375[13];
  v392 = &v367[v391];
  v393 = &v368[v391];
  *(_QWORD *)v392 = *(_QWORD *)v393;
  *((_QWORD *)v392 + 1) = *((_QWORD *)v393 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v394 = v375[14];
  v395 = &v367[v394];
  v396 = &v368[v394];
  *(_QWORD *)v395 = *(_QWORD *)v396;
  *((_QWORD *)v395 + 1) = *((_QWORD *)v396 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v397 = (int *)type metadata accessor for URLLoader(0);
  v398 = v397[5];
  v399 = &v367[v398];
  v400 = &v368[v398];
  v401 = *(id *)v400;
  v402 = v400[8];
  sub_209EEC018(*(id *)v400, v402);
  v403 = *(void **)v399;
  v404 = v399[8];
  *(_QWORD *)v399 = v401;
  v399[8] = v402;
  sub_209EEC698(v403, v404);
  v405 = v397[6];
  v406 = &v367[v405];
  v407 = &v368[v405];
  v408 = *(id *)v407;
  v409 = v407[8];
  sub_209EEC018(*(id *)v407, v409);
  v410 = *(void **)v406;
  v411 = v406[8];
  *(_QWORD *)v406 = v408;
  v406[8] = v409;
  sub_209EEC698(v410, v411);
  v412 = v397[7];
  v413 = &v367[v412];
  v414 = &v368[v412];
  v415 = *(_QWORD *)v414;
  v416 = *((_QWORD *)v414 + 1);
  LOBYTE(v406) = v414[16];
  sub_209EEC024(*(_QWORD *)v414, v416, (char)v406);
  v417 = *(_QWORD *)v413;
  v418 = *((_QWORD *)v413 + 1);
  v419 = v413[16];
  *(_QWORD *)v413 = v415;
  *((_QWORD *)v413 + 1) = v416;
  v413[16] = (char)v406;
  sub_209EEC6A4(v417, v418, v419);
  v420 = v463;
  if (v5 != v463)
  {
    v421 = v397[8];
    v422 = &v367[v421];
    v423 = &v368[v421];
    sub_209EE017C((uint64_t)&v367[v421], &qword_2545BB1F8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if (v371(v423, 1, v369))
      {
        v424 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
        memcpy(v422, v423, *(_QWORD *)(*(_QWORD *)(v424 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v460 + 16))(v422, v423, v369);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v460 + 56))(v422, 0, 1, v369);
      }
    }
    else
    {
      *(_QWORD *)v422 = *(_QWORD *)v423;
      swift_retain();
    }
    v5 = v461;
    swift_storeEnumTagMultiPayload();
    v420 = v463;
  }
  v425 = v397[9];
  v426 = &v367[v425];
  v427 = &v368[v425];
  v428 = *(_QWORD *)v427;
  v429 = *((_QWORD *)v427 + 1);
  v430 = v427[16];
  sub_209EEC024(*(_QWORD *)v427, v429, v430);
  v431 = *(_QWORD *)v426;
  v432 = *((_QWORD *)v426 + 1);
  v433 = v426[16];
  *(_QWORD *)v426 = v428;
  *((_QWORD *)v426 + 1) = v429;
  v426[16] = v430;
  sub_209EEC6A4(v431, v432, v433);
  v434 = v397[10];
  v435 = &v367[v434];
  v436 = &v368[v434];
  v437 = *(_QWORD *)v436;
  LOBYTE(v429) = v436[8];
  sub_209EEC030(*(_QWORD *)v436, v429);
  v438 = *(_QWORD *)v435;
  v439 = v435[8];
  *(_QWORD *)v435 = v437;
  v435[8] = v429;
  sub_209EEC6B0(v438, v439);
  v440 = v397[11];
  v441 = &v367[v440];
  v442 = &v368[v440];
  v443 = *(_QWORD *)v442;
  LOBYTE(v442) = v442[8];
  *(_QWORD *)v441 = v443;
  v441[8] = (char)v442;
  swift_retain();
  swift_release();
  *(_QWORD *)((char *)v5 + v462[12]) = *(_QWORD *)((char *)v420 + v462[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_209EEF010(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_209EEF04C(uint64_t a1)
{
  destroy for RUIImageView(a1);
  return a1;
}

_OWORD *sub_209EEF080(_OWORD *a1, _OWORD *a2, int *a3)
{
  int *v3;
  _OWORD *v4;
  _OWORD *v5;
  __int128 v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  int *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int *v57;
  int *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  unsigned int (*v101)(char *, uint64_t, uint64_t);
  uint64_t v102;
  int *v103;
  int *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  _OWORD *v119;
  int *v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v131;
  void *__dst;
  uint64_t v133;
  unsigned int (*v134)(char *, uint64_t, uint64_t);
  uint64_t v135;
  uint64_t v136;
  unsigned int (*v137)(char *, uint64_t, uint64_t);
  _QWORD *v138;
  uint64_t v139;
  _OWORD *v140;
  _OWORD *v141;
  int *v142;

  v3 = a3;
  v4 = a2;
  v5 = a1;
  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = a3[7];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for SubLabelElement();
  v11 = *(_QWORD *)(v10 - 8);
  v142 = v3;
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB188);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    *v8 = *v9;
    *((_BYTE *)v8 + 8) = *((_BYTE *)v9 + 8);
    v13 = *((_OWORD *)v9 + 2);
    *((_OWORD *)v8 + 1) = *((_OWORD *)v9 + 1);
    *((_OWORD *)v8 + 2) = v13;
    v14 = *(int *)(v10 + 28);
    v15 = (char *)v8 + v14;
    v16 = (char *)v9 + v14;
    v17 = sub_209F66A90();
    v18 = *(_QWORD *)(v17 - 8);
    v137 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
    v139 = v11;
    v133 = v18;
    v135 = v17;
    if (v137(v16, 1, v17))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    v20 = (int *)type metadata accessor for URLLoadingParameters(0);
    *(_OWORD *)&v15[v20[5]] = *(_OWORD *)&v16[v20[5]];
    *(_OWORD *)&v15[v20[6]] = *(_OWORD *)&v16[v20[6]];
    v15[v20[7]] = v16[v20[7]];
    *(_OWORD *)&v15[v20[8]] = *(_OWORD *)&v16[v20[8]];
    *(_OWORD *)&v15[v20[9]] = *(_OWORD *)&v16[v20[9]];
    v15[v20[10]] = v16[v20[10]];
    *(_QWORD *)&v15[v20[11]] = *(_QWORD *)&v16[v20[11]];
    *(_OWORD *)&v15[v20[12]] = *(_OWORD *)&v16[v20[12]];
    *(_OWORD *)&v15[v20[13]] = *(_OWORD *)&v16[v20[13]];
    *(_OWORD *)&v15[v20[14]] = *(_OWORD *)&v16[v20[14]];
    v21 = (int *)type metadata accessor for URLLoader(0);
    v22 = v21[5];
    v23 = &v15[v22];
    v24 = &v16[v22];
    *(_QWORD *)v23 = *(_QWORD *)v24;
    v23[8] = v24[8];
    v25 = v21[6];
    v26 = &v15[v25];
    v27 = &v16[v25];
    *(_QWORD *)v26 = *(_QWORD *)v27;
    v26[8] = v27[8];
    v28 = v21[7];
    v29 = &v15[v28];
    v30 = &v16[v28];
    v29[16] = v30[16];
    *(_OWORD *)v29 = *(_OWORD *)v30;
    v31 = v21[8];
    v32 = &v15[v31];
    v33 = &v16[v31];
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if (v137(v33, 1, v135))
      {
        v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v133 + 32))(v32, v33, v135);
        (*(void (**)(void))(v133 + 56))();
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    v36 = v21[9];
    v37 = &v15[v36];
    v38 = &v16[v36];
    *(_OWORD *)v37 = *(_OWORD *)v38;
    v37[16] = v38[16];
    v39 = v21[10];
    v40 = &v15[v39];
    v41 = &v16[v39];
    v40[8] = v41[8];
    *(_QWORD *)v40 = *(_QWORD *)v41;
    v42 = v21[11];
    v43 = &v15[v42];
    v44 = &v16[v42];
    *(_QWORD *)v43 = *(_QWORD *)v44;
    v43[8] = v44[8];
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v139 + 56))(v8, 0, 1, v10);
    v3 = v142;
  }
  v45 = v3[8];
  v46 = (_QWORD *)((char *)v5 + v45);
  v47 = (_QWORD *)((char *)v4 + v45);
  v48 = type metadata accessor for HTMLContentElement(0);
  v49 = *(_QWORD *)(v48 - 8);
  v141 = v4;
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
  {
    v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB190);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
  }
  else
  {
    v140 = v5;
    *v46 = *v47;
    *((_BYTE *)v46 + 8) = *((_BYTE *)v47 + 8);
    *((_OWORD *)v46 + 1) = *((_OWORD *)v47 + 1);
    v51 = *(int *)(v48 + 24);
    v52 = (char *)v46 + v51;
    v53 = (char *)v47 + v51;
    v54 = sub_209F66A90();
    v55 = *(_QWORD *)(v54 - 8);
    v134 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48);
    v136 = v49;
    v138 = v46;
    v131 = v55;
    __dst = (void *)v54;
    if (v134(v53, 1, v54))
    {
      v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
      memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v52, v53, v54);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
    }
    v5 = v140;
    v57 = (int *)type metadata accessor for URLLoadingParameters(0);
    *(_OWORD *)&v52[v57[5]] = *(_OWORD *)&v53[v57[5]];
    *(_OWORD *)&v52[v57[6]] = *(_OWORD *)&v53[v57[6]];
    v52[v57[7]] = v53[v57[7]];
    *(_OWORD *)&v52[v57[8]] = *(_OWORD *)&v53[v57[8]];
    *(_OWORD *)&v52[v57[9]] = *(_OWORD *)&v53[v57[9]];
    v52[v57[10]] = v53[v57[10]];
    *(_QWORD *)&v52[v57[11]] = *(_QWORD *)&v53[v57[11]];
    *(_OWORD *)&v52[v57[12]] = *(_OWORD *)&v53[v57[12]];
    *(_OWORD *)&v52[v57[13]] = *(_OWORD *)&v53[v57[13]];
    *(_OWORD *)&v52[v57[14]] = *(_OWORD *)&v53[v57[14]];
    v58 = (int *)type metadata accessor for URLLoader(0);
    v59 = v58[5];
    v60 = &v52[v59];
    v61 = &v53[v59];
    *(_QWORD *)v60 = *(_QWORD *)v61;
    v60[8] = v61[8];
    v62 = v58[6];
    v63 = &v52[v62];
    v64 = &v53[v62];
    *(_QWORD *)v63 = *(_QWORD *)v64;
    v63[8] = v64[8];
    v65 = v58[7];
    v66 = &v52[v65];
    v67 = &v53[v65];
    v66[16] = v67[16];
    *(_OWORD *)v66 = *(_OWORD *)v67;
    v68 = v58[8];
    v69 = &v52[v68];
    v70 = &v53[v68];
    v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if (v134(v70, 1, (uint64_t)__dst))
      {
        v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
        memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
      }
      else
      {
        (*(void (**)(void))(v131 + 32))();
        v5 = v140;
        (*(void (**)(char *, _QWORD, uint64_t, void *))(v131 + 56))(v69, 0, 1, __dst);
      }
      v73 = v138;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
      v73 = v138;
    }
    v74 = v58[9];
    v75 = &v52[v74];
    v76 = &v53[v74];
    *(_OWORD *)v75 = *(_OWORD *)v76;
    v75[16] = v76[16];
    v77 = v58[10];
    v78 = &v52[v77];
    v79 = &v53[v77];
    v78[8] = v79[8];
    *(_QWORD *)v78 = *(_QWORD *)v79;
    v80 = v58[11];
    v81 = &v52[v80];
    v82 = &v53[v80];
    *(_QWORD *)v81 = *(_QWORD *)v82;
    v81[8] = v82[8];
    v83 = *(int *)(v48 + 28);
    v84 = (char *)v73 + v83;
    v85 = (char *)v47 + v83;
    v86 = sub_209F669E8();
    v87 = *(_QWORD *)(v86 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(v85, 1, v86))
    {
      v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB200);
      memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v84, v85, v86);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v84, 0, 1, v86);
    }
    v4 = v141;
    v3 = v142;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v136 + 56))(v73, 0, 1, v48);
  }
  v89 = v3[10];
  *(_OWORD *)((char *)v5 + v3[9]) = *(_OWORD *)((char *)v4 + v3[9]);
  v90 = (char *)v5 + v89;
  v91 = (char *)v4 + v89;
  v92 = *((_OWORD *)v91 + 5);
  *((_OWORD *)v90 + 4) = *((_OWORD *)v91 + 4);
  *((_OWORD *)v90 + 5) = v92;
  *((_OWORD *)v90 + 6) = *((_OWORD *)v91 + 6);
  *((_QWORD *)v90 + 14) = *((_QWORD *)v91 + 14);
  v93 = *((_OWORD *)v91 + 1);
  *(_OWORD *)v90 = *(_OWORD *)v91;
  *((_OWORD *)v90 + 1) = v93;
  v94 = *((_OWORD *)v91 + 2);
  v95 = *((_OWORD *)v91 + 3);
  v96 = v3[11];
  v97 = (char *)v5 + v96;
  v98 = (char *)v4 + v96;
  *((_OWORD *)v90 + 2) = v94;
  *((_OWORD *)v90 + 3) = v95;
  v99 = sub_209F66A90();
  v100 = *(_QWORD *)(v99 - 8);
  v101 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v100 + 48);
  if (v101(v98, 1, v99))
  {
    v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(v97, v98, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v100 + 32))(v97, v98, v99);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v100 + 56))(v97, 0, 1, v99);
  }
  v103 = (int *)type metadata accessor for URLLoadingParameters(0);
  *(_OWORD *)&v97[v103[5]] = *(_OWORD *)&v98[v103[5]];
  *(_OWORD *)&v97[v103[6]] = *(_OWORD *)&v98[v103[6]];
  v97[v103[7]] = v98[v103[7]];
  *(_OWORD *)&v97[v103[8]] = *(_OWORD *)&v98[v103[8]];
  *(_OWORD *)&v97[v103[9]] = *(_OWORD *)&v98[v103[9]];
  v97[v103[10]] = v98[v103[10]];
  *(_QWORD *)&v97[v103[11]] = *(_QWORD *)&v98[v103[11]];
  *(_OWORD *)&v97[v103[12]] = *(_OWORD *)&v98[v103[12]];
  *(_OWORD *)&v97[v103[13]] = *(_OWORD *)&v98[v103[13]];
  *(_OWORD *)&v97[v103[14]] = *(_OWORD *)&v98[v103[14]];
  v104 = (int *)type metadata accessor for URLLoader(0);
  v105 = v104[5];
  v106 = &v97[v105];
  v107 = &v98[v105];
  *(_QWORD *)v106 = *(_QWORD *)v107;
  v106[8] = v107[8];
  v108 = v104[6];
  v109 = &v97[v108];
  v110 = &v98[v108];
  *(_QWORD *)v109 = *(_QWORD *)v110;
  v109[8] = v110[8];
  v111 = v104[7];
  v112 = &v97[v111];
  v113 = &v98[v111];
  v112[16] = v113[16];
  *(_OWORD *)v112 = *(_OWORD *)v113;
  v114 = v104[8];
  v115 = &v97[v114];
  v116 = &v98[v114];
  v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    if (v101(v116, 1, v99))
    {
      v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
      memcpy(v115, v116, *(_QWORD *)(*(_QWORD *)(v118 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v100 + 32))(v115, v116, v99);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v100 + 56))(v115, 0, 1, v99);
    }
    v119 = v141;
    v120 = v142;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v115, v116, *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64));
    v119 = v141;
    v120 = v142;
  }
  v121 = v104[9];
  v122 = &v97[v121];
  v123 = &v98[v121];
  *(_OWORD *)v122 = *(_OWORD *)v123;
  v122[16] = v123[16];
  v124 = v104[10];
  v125 = &v97[v124];
  v126 = &v98[v124];
  v125[8] = v126[8];
  *(_QWORD *)v125 = *(_QWORD *)v126;
  v127 = v104[11];
  v128 = &v97[v127];
  v129 = &v98[v127];
  *(_QWORD *)v128 = *(_QWORD *)v129;
  v128[8] = v129[8];
  *(_QWORD *)((char *)v5 + v120[12]) = *(_QWORD *)((char *)v119 + v120[12]);
  return v5;
}

_QWORD *sub_209EEFA84(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);
  int v13;
  int v14;
  __int128 v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(char *, uint64_t, uint64_t);
  int v35;
  int v36;
  void (*v37)(char *, _QWORD, uint64_t, uint64_t);
  int *v38;
  int *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  int *v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  void *v96;
  char v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  void *v102;
  char v103;
  uint64_t v104;
  char *v105;
  char *v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  char *v126;
  char *v127;
  char v128;
  uint64_t v129;
  uint64_t v130;
  char v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t (*v147)(uint64_t, uint64_t, uint64_t);
  int v148;
  int v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char v158;
  uint64_t v159;
  char v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  unsigned int (*v166)(char *, uint64_t, uint64_t);
  unsigned int v167;
  unsigned int v168;
  uint64_t v169;
  void (*v170)(char *, _QWORD, uint64_t, uint64_t);
  int *v171;
  int *v172;
  uint64_t v173;
  char *v174;
  char *v175;
  uint64_t v176;
  char *v177;
  char *v178;
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  char *v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  char *v190;
  uint64_t v191;
  char *v192;
  char *v193;
  uint64_t v194;
  char *v195;
  char *v196;
  uint64_t v197;
  void *v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  int *v203;
  uint64_t v204;
  char *v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  char *v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  char *v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  char *v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  char *v235;
  char *v236;
  uint64_t v237;
  uint64_t v238;
  int *v239;
  uint64_t v240;
  char *v241;
  char *v242;
  uint64_t v243;
  void *v244;
  char v245;
  uint64_t v246;
  char *v247;
  char *v248;
  uint64_t v249;
  void *v250;
  char v251;
  uint64_t v252;
  char *v253;
  char *v254;
  char v255;
  uint64_t v256;
  uint64_t v257;
  char v258;
  uint64_t v259;
  char *v260;
  char *v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  char *v265;
  char *v266;
  char v267;
  uint64_t v268;
  uint64_t v269;
  char v270;
  uint64_t v271;
  char *v272;
  char *v273;
  uint64_t v274;
  uint64_t v275;
  char v276;
  uint64_t v277;
  char *v278;
  char *v279;
  uint64_t v280;
  uint64_t v281;
  void *v282;
  char *v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t (*v286)(void *, uint64_t, uint64_t);
  int v287;
  int v288;
  uint64_t v289;
  uint64_t v290;
  char *v291;
  char *v292;
  uint64_t v293;
  uint64_t v294;
  char *v295;
  char v296;
  void *v297;
  __int128 v298;
  __int128 v299;
  __int128 v300;
  uint64_t v301;
  char *v302;
  char *v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t (*v306)(char *, uint64_t, uint64_t);
  int v307;
  int v308;
  uint64_t v309;
  int *v310;
  uint64_t v311;
  char *v312;
  char *v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  char *v317;
  char *v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  char *v322;
  char *v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  char *v327;
  char *v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  char *v332;
  char *v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  char *v337;
  char *v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  char *v342;
  char *v343;
  uint64_t v344;
  uint64_t v345;
  int *v346;
  uint64_t v347;
  char *v348;
  char *v349;
  uint64_t v350;
  void *v351;
  char v352;
  uint64_t v353;
  char *v354;
  char *v355;
  uint64_t v356;
  void *v357;
  char v358;
  uint64_t v359;
  char *v360;
  char *v361;
  char v362;
  uint64_t v363;
  uint64_t v364;
  char v365;
  uint64_t v366;
  char *v367;
  char *v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  char *v372;
  char *v373;
  char v374;
  uint64_t v375;
  uint64_t v376;
  char v377;
  uint64_t v378;
  char *v379;
  char *v380;
  uint64_t v381;
  uint64_t v382;
  char v383;
  uint64_t v384;
  char *v385;
  char *v386;
  uint64_t v387;
  uint64_t v389;
  unsigned int (*v390)(char *, uint64_t, uint64_t);
  uint64_t v391;
  unsigned int (*v392)(char *, uint64_t, uint64_t);
  uint64_t v393;
  unsigned int (*v394)(char *, uint64_t, uint64_t);
  uint64_t v395;
  _QWORD *v396;
  _QWORD *v397;
  int *v398;

  v4 = a2;
  v5 = a1;
  *a1 = *a2;
  swift_release();
  *(_OWORD *)(v5 + 1) = *(_OWORD *)(v4 + 1);
  v5[3] = v4[3];
  swift_bridgeObjectRelease();
  v6 = v4[5];
  v5[4] = v4[4];
  v5[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[7];
  v8 = (uint64_t)v5 + v7;
  v9 = (char *)v4 + v7;
  v10 = type metadata accessor for SubLabelElement();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12((uint64_t)v9, 1, v10);
  v396 = v5;
  v397 = v4;
  v398 = a3;
  if (v13)
  {
    if (!v14)
    {
      *(_QWORD *)v8 = *(_QWORD *)v9;
      *(_BYTE *)(v8 + 8) = v9[8];
      v15 = *((_OWORD *)v9 + 2);
      *(_OWORD *)(v8 + 16) = *((_OWORD *)v9 + 1);
      *(_OWORD *)(v8 + 32) = v15;
      v16 = *(int *)(v10 + 28);
      v17 = (char *)(v8 + v16);
      v18 = &v9[v16];
      v19 = sub_209F66A90();
      v20 = *(_QWORD *)(v19 - 8);
      v394 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
      v391 = v20;
      if (v394(v18, 1, v19))
      {
        v21 = v19;
        v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
        v37 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56);
        v21 = v19;
        v37(v17, 0, 1, v19);
      }
      v38 = (int *)type metadata accessor for URLLoadingParameters(0);
      *(_OWORD *)&v17[v38[5]] = *(_OWORD *)&v18[v38[5]];
      *(_OWORD *)&v17[v38[6]] = *(_OWORD *)&v18[v38[6]];
      v17[v38[7]] = v18[v38[7]];
      *(_OWORD *)&v17[v38[8]] = *(_OWORD *)&v18[v38[8]];
      *(_OWORD *)&v17[v38[9]] = *(_OWORD *)&v18[v38[9]];
      v17[v38[10]] = v18[v38[10]];
      *(_QWORD *)&v17[v38[11]] = *(_QWORD *)&v18[v38[11]];
      *(_OWORD *)&v17[v38[12]] = *(_OWORD *)&v18[v38[12]];
      *(_OWORD *)&v17[v38[13]] = *(_OWORD *)&v18[v38[13]];
      *(_OWORD *)&v17[v38[14]] = *(_OWORD *)&v18[v38[14]];
      v39 = (int *)type metadata accessor for URLLoader(0);
      v40 = v39[5];
      v41 = &v17[v40];
      v42 = &v18[v40];
      *(_QWORD *)v41 = *(_QWORD *)v42;
      v41[8] = v42[8];
      v43 = v39[6];
      v44 = &v17[v43];
      v45 = &v18[v43];
      *(_QWORD *)v44 = *(_QWORD *)v45;
      v44[8] = v45[8];
      v46 = v39[7];
      v47 = &v17[v46];
      v48 = &v18[v46];
      v47[16] = v48[16];
      *(_OWORD *)v47 = *(_OWORD *)v48;
      v49 = v39[8];
      v50 = &v17[v49];
      v51 = &v18[v49];
      v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        if (v394(v51, 1, v21))
        {
          v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
          memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v391 + 32))(v50, v51, v21);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v391 + 56))(v50, 0, 1, v21);
        }
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
      }
      v4 = v397;
      a3 = v398;
      v116 = v39[9];
      v117 = &v17[v116];
      v118 = &v18[v116];
      *(_OWORD *)v117 = *(_OWORD *)v118;
      v117[16] = v118[16];
      v119 = v39[10];
      v120 = &v17[v119];
      v121 = &v18[v119];
      v120[8] = v121[8];
      *(_QWORD *)v120 = *(_QWORD *)v121;
      v122 = v39[11];
      v123 = &v17[v122];
      v124 = &v18[v122];
      *(_QWORD *)v123 = *(_QWORD *)v124;
      v123[8] = v124[8];
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      v5 = v396;
      goto LABEL_32;
    }
LABEL_7:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB188);
    memcpy((void *)v8, v9, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_32;
  }
  if (v14)
  {
    sub_209EEF010(v8, (uint64_t (*)(_QWORD))type metadata accessor for SubLabelElement);
    goto LABEL_7;
  }
  v24 = v9[8];
  v25 = *(_QWORD *)v8;
  v26 = *(_BYTE *)(v8 + 8);
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = v24;
  sub_209EEC68C(v25, v26);
  v27 = *((_QWORD *)v9 + 3);
  *(_QWORD *)(v8 + 16) = *((_QWORD *)v9 + 2);
  *(_QWORD *)(v8 + 24) = v27;
  swift_bridgeObjectRelease();
  v28 = *((_QWORD *)v9 + 5);
  *(_QWORD *)(v8 + 32) = *((_QWORD *)v9 + 4);
  *(_QWORD *)(v8 + 40) = v28;
  swift_bridgeObjectRelease();
  v29 = *(int *)(v10 + 28);
  v30 = (char *)(v8 + v29);
  v31 = &v9[v29];
  v32 = sub_209F66A90();
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48);
  v35 = v34(v30, 1, v32);
  v36 = v34(v31, 1, v32);
  if (!v35)
  {
    if (!v36)
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 40))(v30, v31, v32);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v33 + 8))(v30, v32);
    goto LABEL_18;
  }
  if (v36)
  {
LABEL_18:
    v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v30, v31, v32);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
LABEL_19:
  v55 = (int *)type metadata accessor for URLLoadingParameters(0);
  v56 = v55[5];
  v57 = &v30[v56];
  v58 = &v31[v56];
  v60 = *(_QWORD *)v58;
  v59 = *((_QWORD *)v58 + 1);
  *(_QWORD *)v57 = v60;
  *((_QWORD *)v57 + 1) = v59;
  swift_bridgeObjectRelease();
  v61 = v55[6];
  v62 = &v30[v61];
  v63 = &v31[v61];
  v65 = *(_QWORD *)v63;
  v64 = *((_QWORD *)v63 + 1);
  *(_QWORD *)v62 = v65;
  *((_QWORD *)v62 + 1) = v64;
  swift_bridgeObjectRelease();
  v30[v55[7]] = v31[v55[7]];
  v66 = v55[8];
  v67 = &v30[v66];
  v68 = &v31[v66];
  v70 = *(_QWORD *)v68;
  v69 = *((_QWORD *)v68 + 1);
  *(_QWORD *)v67 = v70;
  *((_QWORD *)v67 + 1) = v69;
  swift_bridgeObjectRelease();
  v71 = v55[9];
  v72 = &v30[v71];
  v73 = &v31[v71];
  v75 = *(_QWORD *)v73;
  v74 = *((_QWORD *)v73 + 1);
  *(_QWORD *)v72 = v75;
  *((_QWORD *)v72 + 1) = v74;
  swift_bridgeObjectRelease();
  v30[v55[10]] = v31[v55[10]];
  *(_QWORD *)&v30[v55[11]] = *(_QWORD *)&v31[v55[11]];
  swift_bridgeObjectRelease();
  v76 = v55[12];
  v77 = &v30[v76];
  v78 = &v31[v76];
  v80 = *(_QWORD *)v78;
  v79 = *((_QWORD *)v78 + 1);
  *(_QWORD *)v77 = v80;
  *((_QWORD *)v77 + 1) = v79;
  swift_bridgeObjectRelease();
  v81 = v55[13];
  v82 = &v30[v81];
  v83 = &v31[v81];
  v85 = *(_QWORD *)v83;
  v84 = *((_QWORD *)v83 + 1);
  *(_QWORD *)v82 = v85;
  *((_QWORD *)v82 + 1) = v84;
  swift_bridgeObjectRelease();
  v86 = v55[14];
  v87 = &v30[v86];
  v88 = &v31[v86];
  v90 = *(_QWORD *)v88;
  v89 = *((_QWORD *)v88 + 1);
  *(_QWORD *)v87 = v90;
  *((_QWORD *)v87 + 1) = v89;
  swift_bridgeObjectRelease();
  v91 = (int *)type metadata accessor for URLLoader(0);
  v92 = v91[5];
  v93 = &v30[v92];
  v94 = &v31[v92];
  v95 = *(_QWORD *)v94;
  LOBYTE(v94) = v94[8];
  v96 = *(void **)v93;
  v97 = v93[8];
  *(_QWORD *)v93 = v95;
  v93[8] = (char)v94;
  sub_209EEC698(v96, v97);
  v98 = v91[6];
  v99 = &v30[v98];
  v100 = &v31[v98];
  v101 = *(_QWORD *)v100;
  LOBYTE(v100) = v100[8];
  v102 = *(void **)v99;
  v103 = v99[8];
  *(_QWORD *)v99 = v101;
  v99[8] = (char)v100;
  sub_209EEC698(v102, v103);
  v104 = v91[7];
  v105 = &v30[v104];
  v106 = &v31[v104];
  v107 = v106[16];
  v108 = *(_QWORD *)v105;
  v109 = *((_QWORD *)v105 + 1);
  v110 = v105[16];
  *(_OWORD *)v105 = *(_OWORD *)v106;
  v105[16] = v107;
  sub_209EEC6A4(v108, v109, v110);
  if (v5 != v4)
  {
    v111 = v91[8];
    v112 = &v30[v111];
    v113 = &v31[v111];
    sub_209EE017C((uint64_t)&v30[v111], &qword_2545BB1F8);
    v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if (v34(v113, 1, v32))
      {
        v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
        memcpy(v112, v113, *(_QWORD *)(*(_QWORD *)(v115 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v112, v113, v32);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v112, 0, 1, v32);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v112, v113, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
    }
    v5 = v396;
    v4 = v397;
  }
  v125 = v91[9];
  v126 = &v30[v125];
  v127 = &v31[v125];
  v128 = v127[16];
  v129 = *(_QWORD *)v126;
  v130 = *((_QWORD *)v126 + 1);
  v131 = v126[16];
  *(_OWORD *)v126 = *(_OWORD *)v127;
  v126[16] = v128;
  sub_209EEC6A4(v129, v130, v131);
  v132 = v91[10];
  v133 = &v30[v132];
  v134 = &v31[v132];
  v135 = *(_QWORD *)v134;
  LOBYTE(v134) = v134[8];
  v136 = *(_QWORD *)v133;
  v137 = v133[8];
  *(_QWORD *)v133 = v135;
  v133[8] = (char)v134;
  sub_209EEC6B0(v136, v137);
  v138 = v91[11];
  v139 = &v30[v138];
  v140 = &v31[v138];
  v141 = *(_QWORD *)v140;
  LOBYTE(v140) = v140[8];
  *(_QWORD *)v139 = v141;
  v139[8] = (char)v140;
  swift_release();
  a3 = v398;
LABEL_32:
  v142 = a3[8];
  v143 = (uint64_t)v5 + v142;
  v144 = (char *)v4 + v142;
  v145 = type metadata accessor for HTMLContentElement(0);
  v146 = *(_QWORD *)(v145 - 8);
  v147 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v146 + 48);
  v148 = v147(v143, 1, v145);
  v149 = v147((uint64_t)v144, 1, v145);
  if (!v148)
  {
    if (v149)
    {
      sub_209EEF010(v143, type metadata accessor for HTMLContentElement);
      goto LABEL_38;
    }
    v158 = v144[8];
    v159 = *(_QWORD *)v143;
    v160 = *(_BYTE *)(v143 + 8);
    *(_QWORD *)v143 = *(_QWORD *)v144;
    *(_BYTE *)(v143 + 8) = v158;
    sub_209EEC68C(v159, v160);
    v161 = *((_QWORD *)v144 + 3);
    *(_QWORD *)(v143 + 16) = *((_QWORD *)v144 + 2);
    *(_QWORD *)(v143 + 24) = v161;
    swift_bridgeObjectRelease();
    v162 = *(int *)(v145 + 24);
    v163 = (char *)(v143 + v162);
    v164 = &v144[v162];
    v165 = sub_209F66A90();
    v393 = *(_QWORD *)(v165 - 8);
    v166 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v393 + 48);
    v167 = v166(v163, 1, v165);
    v390 = v166;
    v168 = v166(v164, 1, v165);
    if (v167)
    {
      if (v168)
      {
        v169 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
        memcpy(v163, v164, *(_QWORD *)(*(_QWORD *)(v169 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v393 + 32))(v163, v164, v165);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v393 + 56))(v163, 0, 1, v165);
      }
    }
    else if (v168)
    {
      (*(void (**)(char *, uint64_t))(v393 + 8))(v163, v165);
      v187 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
      memcpy(v163, v164, *(_QWORD *)(*(_QWORD *)(v187 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v393 + 40))(v163, v164, v165);
    }
    v203 = (int *)type metadata accessor for URLLoadingParameters(0);
    v204 = v203[5];
    v205 = &v163[v204];
    v206 = &v164[v204];
    v208 = *(_QWORD *)v206;
    v207 = *((_QWORD *)v206 + 1);
    *(_QWORD *)v205 = v208;
    *((_QWORD *)v205 + 1) = v207;
    swift_bridgeObjectRelease();
    v209 = v203[6];
    v210 = &v163[v209];
    v211 = &v164[v209];
    v213 = *(_QWORD *)v211;
    v212 = *((_QWORD *)v211 + 1);
    *(_QWORD *)v210 = v213;
    *((_QWORD *)v210 + 1) = v212;
    swift_bridgeObjectRelease();
    v163[v203[7]] = v164[v203[7]];
    v214 = v203[8];
    v215 = &v163[v214];
    v216 = &v164[v214];
    v218 = *(_QWORD *)v216;
    v217 = *((_QWORD *)v216 + 1);
    *(_QWORD *)v215 = v218;
    *((_QWORD *)v215 + 1) = v217;
    swift_bridgeObjectRelease();
    v219 = v203[9];
    v220 = &v163[v219];
    v221 = &v164[v219];
    v223 = *(_QWORD *)v221;
    v222 = *((_QWORD *)v221 + 1);
    *(_QWORD *)v220 = v223;
    *((_QWORD *)v220 + 1) = v222;
    swift_bridgeObjectRelease();
    v163[v203[10]] = v164[v203[10]];
    *(_QWORD *)&v163[v203[11]] = *(_QWORD *)&v164[v203[11]];
    swift_bridgeObjectRelease();
    v224 = v203[12];
    v225 = &v163[v224];
    v226 = &v164[v224];
    v228 = *(_QWORD *)v226;
    v227 = *((_QWORD *)v226 + 1);
    *(_QWORD *)v225 = v228;
    *((_QWORD *)v225 + 1) = v227;
    swift_bridgeObjectRelease();
    v229 = v203[13];
    v230 = &v163[v229];
    v231 = &v164[v229];
    v233 = *(_QWORD *)v231;
    v232 = *((_QWORD *)v231 + 1);
    *(_QWORD *)v230 = v233;
    *((_QWORD *)v230 + 1) = v232;
    swift_bridgeObjectRelease();
    v234 = v203[14];
    v235 = &v163[v234];
    v236 = &v164[v234];
    v238 = *(_QWORD *)v236;
    v237 = *((_QWORD *)v236 + 1);
    *(_QWORD *)v235 = v238;
    *((_QWORD *)v235 + 1) = v237;
    swift_bridgeObjectRelease();
    v239 = (int *)type metadata accessor for URLLoader(0);
    v240 = v239[5];
    v241 = &v163[v240];
    v242 = &v164[v240];
    v243 = *(_QWORD *)v242;
    LOBYTE(v242) = v242[8];
    v244 = *(void **)v241;
    v245 = v241[8];
    *(_QWORD *)v241 = v243;
    v241[8] = (char)v242;
    sub_209EEC698(v244, v245);
    v246 = v239[6];
    v247 = &v163[v246];
    v248 = &v164[v246];
    v249 = *(_QWORD *)v248;
    LOBYTE(v248) = v248[8];
    v250 = *(void **)v247;
    v251 = v247[8];
    *(_QWORD *)v247 = v249;
    v247[8] = (char)v248;
    sub_209EEC698(v250, v251);
    v252 = v239[7];
    v253 = &v163[v252];
    v254 = &v164[v252];
    v255 = v254[16];
    v256 = *(_QWORD *)v253;
    v257 = *((_QWORD *)v253 + 1);
    v258 = v253[16];
    *(_OWORD *)v253 = *(_OWORD *)v254;
    v253[16] = v255;
    sub_209EEC6A4(v256, v257, v258);
    if (v5 != v397)
    {
      v259 = v239[8];
      v260 = &v163[v259];
      v261 = &v164[v259];
      sub_209EE017C((uint64_t)&v163[v259], &qword_2545BB1F8);
      v262 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        if (v390(v261, 1, v165))
        {
          v263 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
          memcpy(v260, v261, *(_QWORD *)(*(_QWORD *)(v263 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v393 + 32))(v260, v261, v165);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v393 + 56))(v260, 0, 1, v165);
        }
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v260, v261, *(_QWORD *)(*(_QWORD *)(v262 - 8) + 64));
      }
      v5 = v396;
    }
    v264 = v239[9];
    v265 = &v163[v264];
    v266 = &v164[v264];
    v267 = v266[16];
    v268 = *(_QWORD *)v265;
    v269 = *((_QWORD *)v265 + 1);
    v270 = v265[16];
    *(_OWORD *)v265 = *(_OWORD *)v266;
    v265[16] = v267;
    sub_209EEC6A4(v268, v269, v270);
    v271 = v239[10];
    v272 = &v163[v271];
    v273 = &v164[v271];
    v274 = *(_QWORD *)v273;
    LOBYTE(v273) = v273[8];
    v275 = *(_QWORD *)v272;
    v276 = v272[8];
    *(_QWORD *)v272 = v274;
    v272[8] = (char)v273;
    sub_209EEC6B0(v275, v276);
    v277 = v239[11];
    v278 = &v163[v277];
    v279 = &v164[v277];
    v280 = *(_QWORD *)v279;
    LOBYTE(v279) = v279[8];
    *(_QWORD *)v278 = v280;
    v278[8] = (char)v279;
    swift_release();
    v281 = *(int *)(v145 + 28);
    v282 = (void *)(v143 + v281);
    v283 = &v144[v281];
    v284 = sub_209F669E8();
    v285 = *(_QWORD *)(v284 - 8);
    v286 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v285 + 48);
    v287 = v286(v282, 1, v284);
    v288 = v286(v283, 1, v284);
    if (v287)
    {
      if (!v288)
      {
        (*(void (**)(void *, char *, uint64_t))(v285 + 32))(v282, v283, v284);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v285 + 56))(v282, 0, 1, v284);
LABEL_71:
        v4 = v397;
        a3 = v398;
        goto LABEL_72;
      }
    }
    else
    {
      if (!v288)
      {
        (*(void (**)(void *, char *, uint64_t))(v285 + 40))(v282, v283, v284);
        goto LABEL_71;
      }
      (*(void (**)(void *, uint64_t))(v285 + 8))(v282, v284);
    }
    v289 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB200);
    memcpy(v282, v283, *(_QWORD *)(*(_QWORD *)(v289 - 8) + 64));
    goto LABEL_71;
  }
  if (v149)
  {
LABEL_38:
    v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB190);
    memcpy((void *)v143, v144, *(_QWORD *)(*(_QWORD *)(v157 - 8) + 64));
    goto LABEL_72;
  }
  *(_QWORD *)v143 = *(_QWORD *)v144;
  *(_BYTE *)(v143 + 8) = v144[8];
  *(_OWORD *)(v143 + 16) = *((_OWORD *)v144 + 1);
  v150 = *(int *)(v145 + 24);
  v151 = (char *)(v143 + v150);
  v152 = &v144[v150];
  v153 = sub_209F66A90();
  v154 = *(_QWORD *)(v153 - 8);
  v392 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v154 + 48);
  v395 = v146;
  v389 = v154;
  if (v392(v152, 1, v153))
  {
    v155 = v153;
    v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(v151, v152, *(_QWORD *)(*(_QWORD *)(v156 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v154 + 32))(v151, v152, v153);
    v170 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v154 + 56);
    v155 = v153;
    v170(v151, 0, 1, v153);
  }
  v171 = (int *)type metadata accessor for URLLoadingParameters(0);
  *(_OWORD *)&v151[v171[5]] = *(_OWORD *)&v152[v171[5]];
  *(_OWORD *)&v151[v171[6]] = *(_OWORD *)&v152[v171[6]];
  v151[v171[7]] = v152[v171[7]];
  *(_OWORD *)&v151[v171[8]] = *(_OWORD *)&v152[v171[8]];
  *(_OWORD *)&v151[v171[9]] = *(_OWORD *)&v152[v171[9]];
  v151[v171[10]] = v152[v171[10]];
  *(_QWORD *)&v151[v171[11]] = *(_QWORD *)&v152[v171[11]];
  *(_OWORD *)&v151[v171[12]] = *(_OWORD *)&v152[v171[12]];
  *(_OWORD *)&v151[v171[13]] = *(_OWORD *)&v152[v171[13]];
  *(_OWORD *)&v151[v171[14]] = *(_OWORD *)&v152[v171[14]];
  v172 = (int *)type metadata accessor for URLLoader(0);
  v173 = v172[5];
  v174 = &v151[v173];
  v175 = &v152[v173];
  *(_QWORD *)v174 = *(_QWORD *)v175;
  v174[8] = v175[8];
  v176 = v172[6];
  v177 = &v151[v176];
  v178 = &v152[v176];
  *(_QWORD *)v177 = *(_QWORD *)v178;
  v177[8] = v178[8];
  v179 = v172[7];
  v180 = &v151[v179];
  v181 = &v152[v179];
  v180[16] = v181[16];
  *(_OWORD *)v180 = *(_OWORD *)v181;
  v182 = v172[8];
  v183 = &v151[v182];
  v184 = &v152[v182];
  v185 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    if (v392(v184, 1, v155))
    {
      v186 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
      memcpy(v183, v184, *(_QWORD *)(*(_QWORD *)(v186 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v389 + 32))(v183, v184, v155);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v389 + 56))(v183, 0, 1, v155);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v183, v184, *(_QWORD *)(*(_QWORD *)(v185 - 8) + 64));
  }
  v5 = v396;
  v188 = v172[9];
  v189 = &v151[v188];
  v190 = &v152[v188];
  *(_OWORD *)v189 = *(_OWORD *)v190;
  v189[16] = v190[16];
  v191 = v172[10];
  v192 = &v151[v191];
  v193 = &v152[v191];
  v192[8] = v193[8];
  *(_QWORD *)v192 = *(_QWORD *)v193;
  v194 = v172[11];
  v195 = &v151[v194];
  v196 = &v152[v194];
  *(_QWORD *)v195 = *(_QWORD *)v196;
  v195[8] = v196[8];
  v197 = *(int *)(v145 + 28);
  v198 = (void *)(v143 + v197);
  v199 = &v144[v197];
  v200 = sub_209F669E8();
  v201 = *(_QWORD *)(v200 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v201 + 48))(v199, 1, v200))
  {
    v202 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB200);
    memcpy(v198, v199, *(_QWORD *)(*(_QWORD *)(v202 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v201 + 32))(v198, v199, v200);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v201 + 56))(v198, 0, 1, v200);
  }
  v4 = v397;
  a3 = v398;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v395 + 56))(v143, 0, 1, v145);
LABEL_72:
  v290 = a3[9];
  v291 = (char *)v5 + v290;
  v292 = (char *)v4 + v290;
  *v291 = *v292;
  *((_QWORD *)v291 + 1) = *((_QWORD *)v292 + 1);
  swift_release();
  v293 = a3[10];
  v294 = (uint64_t)v5 + v293;
  v295 = (char *)v4 + v293;
  if (*(_QWORD *)((char *)v5 + v293 + 32))
  {
    if (*((_QWORD *)v295 + 4))
    {
      v296 = v295[16];
      *(_OWORD *)v294 = *(_OWORD *)v295;
      *(_BYTE *)(v294 + 16) = v296;
      sub_209EEB098();
      v297 = *(void **)(v294 + 24);
      *(_QWORD *)(v294 + 24) = *((_QWORD *)v295 + 3);

      *(_QWORD *)(v294 + 32) = *((_QWORD *)v295 + 4);
      swift_release();
      *(_QWORD *)(v294 + 40) = *((_QWORD *)v295 + 5);
      *(_BYTE *)(v294 + 48) = v295[48];
      *(_QWORD *)(v294 + 56) = *((_QWORD *)v295 + 7);
      *(_BYTE *)(v294 + 64) = v295[64];
      *(_QWORD *)(v294 + 72) = *((_QWORD *)v295 + 9);
      swift_release();
      *(_BYTE *)(v294 + 80) = v295[80];
      *(_OWORD *)(v294 + 88) = *(_OWORD *)(v295 + 88);
      *(_BYTE *)(v294 + 104) = v295[104];
      *(_QWORD *)(v294 + 112) = *((_QWORD *)v295 + 14);
      swift_release();
      goto LABEL_77;
    }
    sub_209EEF04C(v294);
  }
  v298 = *((_OWORD *)v295 + 5);
  *(_OWORD *)(v294 + 64) = *((_OWORD *)v295 + 4);
  *(_OWORD *)(v294 + 80) = v298;
  *(_OWORD *)(v294 + 96) = *((_OWORD *)v295 + 6);
  *(_QWORD *)(v294 + 112) = *((_QWORD *)v295 + 14);
  v299 = *((_OWORD *)v295 + 1);
  *(_OWORD *)v294 = *(_OWORD *)v295;
  *(_OWORD *)(v294 + 16) = v299;
  v300 = *((_OWORD *)v295 + 3);
  *(_OWORD *)(v294 + 32) = *((_OWORD *)v295 + 2);
  *(_OWORD *)(v294 + 48) = v300;
LABEL_77:
  v301 = a3[11];
  v302 = (char *)v5 + v301;
  v303 = (char *)v4 + v301;
  v304 = sub_209F66A90();
  v305 = *(_QWORD *)(v304 - 8);
  v306 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v305 + 48);
  v307 = v306(v302, 1, v304);
  v308 = v306(v303, 1, v304);
  if (v307)
  {
    if (!v308)
    {
      (*(void (**)(char *, char *, uint64_t))(v305 + 32))(v302, v303, v304);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v305 + 56))(v302, 0, 1, v304);
      goto LABEL_83;
    }
    goto LABEL_82;
  }
  if (v308)
  {
    (*(void (**)(char *, uint64_t))(v305 + 8))(v302, v304);
LABEL_82:
    v309 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(v302, v303, *(_QWORD *)(*(_QWORD *)(v309 - 8) + 64));
    goto LABEL_83;
  }
  (*(void (**)(char *, char *, uint64_t))(v305 + 40))(v302, v303, v304);
LABEL_83:
  v310 = (int *)type metadata accessor for URLLoadingParameters(0);
  v311 = v310[5];
  v312 = &v302[v311];
  v313 = &v303[v311];
  v315 = *(_QWORD *)v313;
  v314 = *((_QWORD *)v313 + 1);
  *(_QWORD *)v312 = v315;
  *((_QWORD *)v312 + 1) = v314;
  swift_bridgeObjectRelease();
  v316 = v310[6];
  v317 = &v302[v316];
  v318 = &v303[v316];
  v320 = *(_QWORD *)v318;
  v319 = *((_QWORD *)v318 + 1);
  *(_QWORD *)v317 = v320;
  *((_QWORD *)v317 + 1) = v319;
  swift_bridgeObjectRelease();
  v302[v310[7]] = v303[v310[7]];
  v321 = v310[8];
  v322 = &v302[v321];
  v323 = &v303[v321];
  v325 = *(_QWORD *)v323;
  v324 = *((_QWORD *)v323 + 1);
  *(_QWORD *)v322 = v325;
  *((_QWORD *)v322 + 1) = v324;
  swift_bridgeObjectRelease();
  v326 = v310[9];
  v327 = &v302[v326];
  v328 = &v303[v326];
  v330 = *(_QWORD *)v328;
  v329 = *((_QWORD *)v328 + 1);
  *(_QWORD *)v327 = v330;
  *((_QWORD *)v327 + 1) = v329;
  swift_bridgeObjectRelease();
  v302[v310[10]] = v303[v310[10]];
  *(_QWORD *)&v302[v310[11]] = *(_QWORD *)&v303[v310[11]];
  swift_bridgeObjectRelease();
  v331 = v310[12];
  v332 = &v302[v331];
  v333 = &v303[v331];
  v335 = *(_QWORD *)v333;
  v334 = *((_QWORD *)v333 + 1);
  *(_QWORD *)v332 = v335;
  *((_QWORD *)v332 + 1) = v334;
  swift_bridgeObjectRelease();
  v336 = v310[13];
  v337 = &v302[v336];
  v338 = &v303[v336];
  v340 = *(_QWORD *)v338;
  v339 = *((_QWORD *)v338 + 1);
  *(_QWORD *)v337 = v340;
  *((_QWORD *)v337 + 1) = v339;
  swift_bridgeObjectRelease();
  v341 = v310[14];
  v342 = &v302[v341];
  v343 = &v303[v341];
  v345 = *(_QWORD *)v343;
  v344 = *((_QWORD *)v343 + 1);
  *(_QWORD *)v342 = v345;
  *((_QWORD *)v342 + 1) = v344;
  swift_bridgeObjectRelease();
  v346 = (int *)type metadata accessor for URLLoader(0);
  v347 = v346[5];
  v348 = &v302[v347];
  v349 = &v303[v347];
  v350 = *(_QWORD *)v349;
  LOBYTE(v349) = v349[8];
  v351 = *(void **)v348;
  v352 = v348[8];
  *(_QWORD *)v348 = v350;
  v348[8] = (char)v349;
  sub_209EEC698(v351, v352);
  v353 = v346[6];
  v354 = &v302[v353];
  v355 = &v303[v353];
  v356 = *(_QWORD *)v355;
  LOBYTE(v355) = v355[8];
  v357 = *(void **)v354;
  v358 = v354[8];
  *(_QWORD *)v354 = v356;
  v354[8] = (char)v355;
  sub_209EEC698(v357, v358);
  v359 = v346[7];
  v360 = &v302[v359];
  v361 = &v303[v359];
  v362 = v361[16];
  v363 = *(_QWORD *)v360;
  v364 = *((_QWORD *)v360 + 1);
  v365 = v360[16];
  *(_OWORD *)v360 = *(_OWORD *)v361;
  v360[16] = v362;
  sub_209EEC6A4(v363, v364, v365);
  if (v5 != v4)
  {
    v366 = v346[8];
    v367 = &v302[v366];
    v368 = &v303[v366];
    sub_209EE017C((uint64_t)&v302[v366], &qword_2545BB1F8);
    v369 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if (v306(v368, 1, v304))
      {
        v370 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
        memcpy(v367, v368, *(_QWORD *)(*(_QWORD *)(v370 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v305 + 32))(v367, v368, v304);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v305 + 56))(v367, 0, 1, v304);
      }
      v5 = v396;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v367, v368, *(_QWORD *)(*(_QWORD *)(v369 - 8) + 64));
      v5 = v396;
    }
    v4 = v397;
  }
  v371 = v346[9];
  v372 = &v302[v371];
  v373 = &v303[v371];
  v374 = v373[16];
  v375 = *(_QWORD *)v372;
  v376 = *((_QWORD *)v372 + 1);
  v377 = v372[16];
  *(_OWORD *)v372 = *(_OWORD *)v373;
  v372[16] = v374;
  sub_209EEC6A4(v375, v376, v377);
  v378 = v346[10];
  v379 = &v302[v378];
  v380 = &v303[v378];
  v381 = *(_QWORD *)v380;
  LOBYTE(v380) = v380[8];
  v382 = *(_QWORD *)v379;
  v383 = v379[8];
  *(_QWORD *)v379 = v381;
  v379[8] = (char)v380;
  sub_209EEC6B0(v382, v383);
  v384 = v346[11];
  v385 = &v302[v384];
  v386 = &v303[v384];
  v387 = *(_QWORD *)v386;
  LOBYTE(v386) = v386[8];
  *(_QWORD *)v385 = v387;
  v385[8] = (char)v386;
  swift_release();
  *(_QWORD *)((char *)v5 + v398[12]) = *(_QWORD *)((char *)v4 + v398[12]);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_209EF0FB0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_209EF0FBC(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB188);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[7];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB190);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[8];
      }
      else
      {
        v10 = type metadata accessor for URLLoader(0);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[11];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_209EF1088()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_209EF1094(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB188);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[7];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB190);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[8];
      }
      else
      {
        v10 = type metadata accessor for URLLoader(0);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[11];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_209EF115C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_209EF124C(319, (unint64_t *)&qword_2545BB208, (void (*)(uint64_t))type metadata accessor for SubLabelElement);
  if (v0 <= 0x3F)
  {
    sub_209EF124C(319, &qword_2545BB210, (void (*)(uint64_t))type metadata accessor for HTMLContentElement);
    if (v1 <= 0x3F)
    {
      type metadata accessor for URLLoader(319);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void sub_209EF124C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_209F675DC();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t getEnumTagSinglePayload for SwitchRowElement.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SwitchRowElement.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_209EF1374 + 4 * byte_209F76DD5[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_209EF13A8 + 4 * byte_209F76DD0[v4]))();
}

uint64_t sub_209EF13A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_209EF13B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x209EF13B8);
  return result;
}

uint64_t sub_209EF13C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x209EF13CCLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_209EF13D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_209EF13D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_209EF13E4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for SwitchRowElement.CodingKeys()
{
  return &type metadata for SwitchRowElement.CodingKeys;
}

uint64_t sub_209EF13FC()
{
  return sub_209EE83E8(&qword_2545BB218, &qword_2545BB220, MEMORY[0x24BDF46F8]);
}

uint64_t sub_209EF1428()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB260);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB268);
  sub_209EE83E8(&qword_2545BB270, &qword_2545BB260, MEMORY[0x24BDF5420]);
  sub_209EF1D44();
  return sub_209F6718C();
}

uint64_t sub_209EF14D4()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t, uint64_t, uint64_t);
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(uint64_t, uint64_t, uint64_t);
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  int *v28;
  uint64_t v29;

  v1 = (int *)type metadata accessor for SwitchRowElement();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = v3 + v1[7];
  v5 = type metadata accessor for SubLabelElement();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    sub_209EEC68C(*(_QWORD *)v4, *(_BYTE *)(v4 + 8));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = v4 + *(int *)(v5 + 28);
    v7 = sub_209F66A90();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    if (!v9(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    type metadata accessor for URLLoadingParameters(0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v10 = (int *)type metadata accessor for URLLoader(0);
    sub_209EEC698(*(id *)(v6 + v10[5]), *(_BYTE *)(v6 + v10[5] + 8));
    sub_209EEC698(*(id *)(v6 + v10[6]), *(_BYTE *)(v6 + v10[6] + 8));
    sub_209EEC6A4(*(_QWORD *)(v6 + v10[7]), *(_QWORD *)(v6 + v10[7] + 8), *(_BYTE *)(v6 + v10[7] + 16));
    v11 = v6 + v10[8];
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if (!v9(v11, 1, v7))
        (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v11, v7);
    }
    else
    {
      swift_release();
    }
    sub_209EEC6A4(*(_QWORD *)(v6 + v10[9]), *(_QWORD *)(v6 + v10[9] + 8), *(_BYTE *)(v6 + v10[9] + 16));
    sub_209EEC6B0(*(_QWORD *)(v6 + v10[10]), *(_BYTE *)(v6 + v10[10] + 8));
    swift_release();
  }
  v12 = v3 + v1[8];
  v13 = type metadata accessor for HTMLContentElement(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13))
  {
    sub_209EEC68C(*(_QWORD *)v12, *(_BYTE *)(v12 + 8));
    swift_bridgeObjectRelease();
    v14 = v12 + *(int *)(v13 + 24);
    v15 = sub_209F66A90();
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
    if (!v17(v14, 1, v15))
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
    type metadata accessor for URLLoadingParameters(0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v18 = (int *)type metadata accessor for URLLoader(0);
    sub_209EEC698(*(id *)(v14 + v18[5]), *(_BYTE *)(v14 + v18[5] + 8));
    sub_209EEC698(*(id *)(v14 + v18[6]), *(_BYTE *)(v14 + v18[6] + 8));
    sub_209EEC6A4(*(_QWORD *)(v14 + v18[7]), *(_QWORD *)(v14 + v18[7] + 8), *(_BYTE *)(v14 + v18[7] + 16));
    v19 = v14 + v18[8];
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if (!v17(v19, 1, v15))
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v19, v15);
    }
    else
    {
      swift_release();
    }
    sub_209EEC6A4(*(_QWORD *)(v14 + v18[9]), *(_QWORD *)(v14 + v18[9] + 8), *(_BYTE *)(v14 + v18[9] + 16));
    sub_209EEC6B0(*(_QWORD *)(v14 + v18[10]), *(_BYTE *)(v14 + v18[10] + 8));
    swift_release();
    v20 = v12 + *(int *)(v13 + 28);
    v21 = sub_209F669E8();
    v22 = *(_QWORD *)(v21 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
  }
  swift_release();
  v23 = v3 + v1[10];
  if (*(_QWORD *)(v23 + 32))
  {
    sub_209EEB098();

    swift_release();
    swift_release();
    swift_release();
  }
  v24 = v3 + v1[11];
  v25 = sub_209F66A90();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  if (!v27(v24, 1, v25))
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
  type metadata accessor for URLLoadingParameters(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v28 = (int *)type metadata accessor for URLLoader(0);
  sub_209EEC698(*(id *)(v24 + v28[5]), *(_BYTE *)(v24 + v28[5] + 8));
  sub_209EEC698(*(id *)(v24 + v28[6]), *(_BYTE *)(v24 + v28[6] + 8));
  sub_209EEC6A4(*(_QWORD *)(v24 + v28[7]), *(_QWORD *)(v24 + v28[7] + 8), *(_BYTE *)(v24 + v28[7] + 16));
  v29 = v24 + v28[8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    if (!v27(v29, 1, v25))
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v29, v25);
  }
  else
  {
    swift_release();
  }
  sub_209EEC6A4(*(_QWORD *)(v24 + v28[9]), *(_QWORD *)(v24 + v28[9] + 8), *(_BYTE *)(v24 + v28[9] + 16));
  sub_209EEC6B0(*(_QWORD *)(v24 + v28[10]), *(_BYTE *)(v24 + v28[10] + 8));
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_209EF1B84(char *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_BYTE *);
  void (*v10)(_BYTE *, _QWORD);
  _BYTE v11[32];
  _BYTE v12[24];
  uint64_t v13;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SwitchRowElement() - 8) + 80);
  v4 = (uint64_t *)(v1 + ((v3 + 16) & ~v3));
  v5 = *v4;
  if (*v4)
  {
    v6 = *a1;
    v7 = v4[2];
    v8 = v4[3];
    v13 = MEMORY[0x24BEE1328];
    v12[0] = v6;
    v9 = *(uint64_t (**)(_BYTE *))(*(_QWORD *)v5 + 136);
    swift_retain();
    swift_bridgeObjectRetain();
    v10 = (void (*)(_BYTE *, _QWORD))v9(v11);
    sub_209EE9D20((uint64_t)v12, v7, v8);
    v10(v11, 0);
    swift_release();
    type metadata accessor for URLLoader(0);
    URLLoadingCapable.activate()();
  }
  else
  {
    type metadata accessor for XMLUIData();
    sub_209EE4ABC((unint64_t *)&qword_2545BAF70, (uint64_t (*)(uint64_t))type metadata accessor for XMLUIData, (uint64_t)&protocol conformance descriptor for XMLUIData);
    sub_209F66E2C();
    __break(1u);
  }
}

uint64_t sub_209EF1CB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_209EE9798(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_209EF1CB8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = (uint64_t *)(v3 + *(int *)(type metadata accessor for SwitchRowElement() + 40));
  v5 = *v4;
  v6 = v4[1];
  v7 = v4[2];
  v8 = (void *)v4[3];
  v9 = v4[4];
  v10 = v4[5];
  v11 = v4[6];
  v12 = v4[7];
  v13 = v4[8];
  v14 = v4[9];
  v15 = v4[10];
  v16 = v4[11];
  v17 = v4[12];
  v18 = v4[13];
  v19 = v4[14];
  *a1 = v5;
  a1[1] = v6;
  a1[2] = v7;
  a1[3] = (uint64_t)v8;
  a1[4] = v9;
  a1[5] = v10;
  a1[6] = v11;
  a1[7] = v12;
  a1[8] = v13;
  a1[9] = v14;
  a1[10] = v15;
  a1[11] = v16;
  a1[12] = v17;
  a1[13] = v18;
  a1[14] = v19;
  return sub_209EEAF98(v5, v6, v7, v8, v9);
}

unint64_t sub_209EF1D44()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_2545BB278;
  if (!qword_2545BB278)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BB268);
    v2 = sub_209EF1DA8();
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BDF5580], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2545BB278);
  }
  return result;
}

unint64_t sub_209EF1DA8()
{
  unint64_t result;

  result = qword_2545BB280;
  if (!qword_2545BB280)
  {
    result = MEMORY[0x20BD1DB1C](&protocol conformance descriptor for RUIImageView, &type metadata for RUIImageView);
    atomic_store(result, (unint64_t *)&qword_2545BB280);
  }
  return result;
}

uint64_t sub_209EF1DEC(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain();
  else
    return swift_bridgeObjectRetain();
}

uint64_t sub_209EF1DFC(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release();
  else
    return swift_bridgeObjectRelease();
}

uint64_t sub_209EF1E0C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_209EF1E50(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_209EF1E94@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  _QWORD v12[4];

  v5 = type metadata accessor for HTMLContent(0);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v12[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_209F67B40();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v12, v12[3]);
    sub_209F679C0();
    v9 = sub_209EE3DF0();
    swift_bridgeObjectRelease();
    if (!v9)
      objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1688]), sel_init);
    sub_209F669F4();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    sub_209EF1E50((uint64_t)v8, a2, type metadata accessor for HTMLContent);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t type metadata accessor for HTMLContent(uint64_t a1)
{
  return sub_209EF257C(a1, (uint64_t *)&unk_2545BE840);
}

uint64_t sub_209EF1FF0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_209EF1E94(a1, a2);
}

uint64_t sub_209EF2004(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  os_log_type_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v4 = sub_209F66E98();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_retain();
    v9 = sub_209F67540();
    v10 = sub_209F67030();
    if (os_log_type_enabled(v10, v9))
    {
      v11 = swift_slowAlloc();
      v12 = swift_slowAlloc();
      v15 = v12;
      *(_DWORD *)v11 = 136315138;
      *(_QWORD *)(v11 + 4) = sub_209EE75A0(0xD000000000000012, 0x8000000209F71FF0, &v15);
      _os_log_impl(&dword_209E87000, v10, v9, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x20BD1DC00](v12, -1, -1);
      MEMORY[0x20BD1DC00](v11, -1, -1);
    }

    sub_209F66E8C();
    swift_getAtKeyPath();
    sub_209EEC68C(a1, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    return v15;
  }
  return a1;
}

uint64_t sub_209EF21A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_209F19D08();
  *a1 = result;
  return result;
}

uint64_t sub_209EF21C8()
{
  swift_bridgeObjectRetain();
  return sub_209F19D84();
}

uint64_t sub_209EF21F0(char *a1, char *a2)
{
  return sub_209EF21FC(*a1, *a2);
}

uint64_t sub_209EF21FC(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x4C6275536C6D7468;
  else
    v3 = 25705;
  if (v2)
    v4 = 0xE200000000000000;
  else
    v4 = 0xEC0000006C656261;
  if ((a2 & 1) != 0)
    v5 = 0x4C6275536C6D7468;
  else
    v5 = 25705;
  if ((a2 & 1) != 0)
    v6 = 0xEC0000006C656261;
  else
    v6 = 0xE200000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_209F679A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_209EF229C()
{
  sub_209F67B10();
  sub_209F6733C();
  swift_bridgeObjectRelease();
  return sub_209F67B28();
}

uint64_t sub_209EF2318()
{
  sub_209F6733C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_209EF2370()
{
  sub_209F67B10();
  sub_209F6733C();
  swift_bridgeObjectRelease();
  return sub_209F67B28();
}

uint64_t sub_209EF23E8@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_209F67840();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_209EF2444(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 25705;
  if (*v1)
    v2 = 0x4C6275536C6D7468;
  v3 = 0xE200000000000000;
  if (*v1)
    v3 = 0xEC0000006C656261;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_209EF2480()
{
  _BYTE *v0;

  if (*v0)
    return 0x4C6275536C6D7468;
  else
    return 25705;
}

uint64_t sub_209EF24B8@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_209F67840();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_209EF2518()
{
  sub_209EF2FB8();
  return sub_209F67B88();
}

uint64_t sub_209EF2540()
{
  sub_209EF2FB8();
  return sub_209F67B94();
}

uint64_t type metadata accessor for HTMLContentElement(uint64_t a1)
{
  return sub_209EF257C(a1, (uint64_t *)&unk_2545BE850);
}

uint64_t sub_209EF257C(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_209EF25B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  char v76;

  v2 = v1;
  v71 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB2B8);
  MEMORY[0x24BDAC7A8](v3, v4);
  v65 = (uint64_t *)((char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB2C0);
  MEMORY[0x24BDAC7A8](v67, v6);
  v69 = (uint64_t)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB2C8);
  v64 = *(_QWORD *)(v70 - 8);
  MEMORY[0x24BDAC7A8](v70, v8);
  v63 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB2D0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v68 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB200);
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_209F669E8();
  v19 = *(_QWORD *)(v18 - 8);
  v21 = MEMORY[0x24BDAC7A8](v18, v20);
  v23 = (char *)&v58 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21, v24);
  v26 = (char *)&v58 - v25;
  v66 = type metadata accessor for HTMLContentElement(0);
  sub_209EE3528(v2 + *(int *)(v66 + 28), (uint64_t)v17, &qword_2545BB200);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    sub_209EE017C((uint64_t)v17, &qword_2545BB200);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v71, 1, 1, v10);
  }
  else
  {
    v60 = v11;
    v61 = v10;
    v62 = v3;
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v26, v17, v18);
    v28 = *(_QWORD *)v2;
    v59 = v2;
    v29 = *(_BYTE *)(v2 + 8);
    sub_209EEC00C(v28, v29);
    v30 = sub_209EF2004(v28, v29);
    sub_209EEC68C(v28, v29);
    v31 = *(_QWORD *)(v30 + 16);
    if (v31)
    {
      v58 = v26;
      sub_209EF2B48();
      swift_bridgeObjectRetain();
      v32 = 0;
      while (1)
      {
        LOBYTE(v72) = *(_BYTE *)(v30 + v32 + 32);
        v76 = 2;
        if ((sub_209F67294() & 1) != 0)
          break;
        if (v31 == ++v32)
        {
          swift_bridgeObjectRelease();
          v26 = v58;
          goto LABEL_8;
        }
      }
      swift_bridgeObjectRelease_n();
      v43 = v58;
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v23, v58, v18);
      v45 = sub_209F670E4();
      v47 = v46;
      v49 = v48 & 1;
      v72 = v45;
      v73 = v46;
      v74 = v48 & 1;
      v75 = v50;
      v51 = MEMORY[0x24BDF1F78];
      v52 = v63;
      sub_209F21174(v59 + *(int *)(v66 + 24), MEMORY[0x24BDF1FA0], MEMORY[0x24BDF1F78]);
      sub_209EF1DFC(v45, v47, v49);
      swift_bridgeObjectRelease();
      v53 = v64;
      v54 = v70;
      (*(void (**)(uint64_t, char *, uint64_t))(v64 + 16))(v69, v52, v70);
      swift_storeEnumTagMultiPayload();
      v72 = MEMORY[0x24BDF1FA0];
      v73 = v51;
      swift_getOpaqueTypeConformance2();
      sub_209EF2B8C();
      v44 = (uint64_t)v68;
      sub_209F66F64();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v52, v54);
    }
    else
    {
LABEL_8:
      swift_bridgeObjectRelease();
      v33 = sub_209F66F28();
      v34 = (uint64_t)v65;
      *v65 = v33;
      *(_QWORD *)(v34 + 8) = 0;
      *(_BYTE *)(v34 + 16) = 1;
      v64 = v34 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545BB2E0) + 44);
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v23, v26, v18);
      v35 = sub_209F670E4();
      v37 = v36;
      v39 = v38 & 1;
      v72 = v35;
      v73 = v36;
      v74 = v38 & 1;
      v75 = v40;
      v41 = MEMORY[0x24BDF1F78];
      sub_209F21174(v59 + *(int *)(v66 + 24), MEMORY[0x24BDF1FA0], MEMORY[0x24BDF1F78]);
      v42 = v39;
      v43 = v26;
      sub_209EF1DFC(v35, v37, v42);
      swift_bridgeObjectRelease();
      sub_209EE3528(v34, v69, &qword_2545BB2B8);
      swift_storeEnumTagMultiPayload();
      v72 = MEMORY[0x24BDF1FA0];
      v73 = v41;
      swift_getOpaqueTypeConformance2();
      sub_209EF2B8C();
      v44 = (uint64_t)v68;
      sub_209F66F64();
      sub_209EE017C(v34, &qword_2545BB2B8);
    }
    v55 = v71;
    v57 = v60;
    v56 = v61;
    sub_209EF1E0C(v44, v71, &qword_2545BB2D0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v57 + 56))(v55, 0, 1, v56);
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v43, v18);
  }
}

unint64_t sub_209EF2B48()
{
  unint64_t result;

  result = qword_2545BB2D8;
  if (!qword_2545BB2D8)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F79108, &type metadata for ViewContext);
    atomic_store(result, (unint64_t *)&qword_2545BB2D8);
  }
  return result;
}

unint64_t sub_209EF2B8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2545BB2E8;
  if (!qword_2545BB2E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BB2B8);
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BDF46F8], v1);
    atomic_store(result, (unint64_t *)&qword_2545BB2E8);
  }
  return result;
}

uint64_t sub_209EF2BD8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  Swift::String *v18;
  char *v19;
  Swift::String v20;
  uint64_t v21;
  Swift::String *v22;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  Swift::String *v33;
  _QWORD v34[4];
  char *v35;

  v31 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB200);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for URLLoader(0);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB2F0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for HTMLContentElement(0);
  MEMORY[0x24BDAC7A8](v32, v16);
  v18 = (Swift::String *)((char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18->_countAndFlagsBits = swift_getKeyPath();
  v33 = v18;
  LOBYTE(v18->_object) = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_209EF2FB8();
  v19 = v35;
  sub_209F67B58();
  if (v19)
    goto LABEL_4;
  v35 = v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v20 = Decoder.decodeRUIID()();
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
LABEL_4:
    v22 = v33;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_209EEC68C(v22->_countAndFlagsBits, (char)v22->_object);
  }
  v24 = (uint64_t)v33;
  v33[1] = v20;
  sub_209EE0E3C((uint64_t)a1, (uint64_t)v34);
  URLLoader.init(from:)((uint64_t)v34, (uint64_t)v10);
  v30 = v15;
  sub_209EF1E50((uint64_t)v10, v24 + *(int *)(v32 + 24), type metadata accessor for URLLoader);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_209F67B40();
  __swift_project_boxed_opaque_existential_1(v34, v34[3]);
  sub_209F679C0();
  v25 = sub_209EE3DF0();
  swift_bridgeObjectRelease();
  if (!v25)
    objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1688]), sel_init);
  v26 = v31;
  v27 = (uint64_t)v35;
  sub_209F669F4();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v30, v11);
  v28 = sub_209F669E8();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v27, 0, 1, v28);
  sub_209EF1E0C(v27, v24 + *(int *)(v32 + 28), &qword_2545BB200);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  sub_209EE3C10(v24, v26, type metadata accessor for HTMLContentElement);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_209EEF010(v24, type metadata accessor for HTMLContentElement);
}

unint64_t sub_209EF2FB8()
{
  unint64_t result;

  result = qword_2545BB2F8;
  if (!qword_2545BB2F8)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F77160, &type metadata for HTMLContentElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BB2F8);
  }
  return result;
}

unint64_t sub_209EF3000()
{
  unint64_t result;

  result = qword_2545BB300;
  if (!qword_2545BB300)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F770C0, &type metadata for HTMLContentElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BB300);
  }
  return result;
}

unint64_t sub_209EF3048()
{
  unint64_t result;

  result = qword_2545BB308;
  if (!qword_2545BB308)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F771D8, &type metadata for HTMLContentElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BB308);
  }
  return result;
}

unint64_t sub_209EF3090()
{
  unint64_t result;

  result = qword_2545BB310;
  if (!qword_2545BB310)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F771B0, &type metadata for HTMLContentElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BB310);
  }
  return result;
}

uint64_t sub_209EF30D4(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_209EF3138(&qword_2545BB1C0, (uint64_t)&unk_209F7726C);
  a1[2] = sub_209EF3138(&qword_2545BB318, (uint64_t)&unk_209F77294);
  result = sub_209EF3138(&qword_2545BB2B0, (uint64_t)&unk_209F7721C);
  a1[3] = result;
  return result;
}

uint64_t sub_209EF3138(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for HTMLContentElement(255);
    result = MEMORY[0x20BD1DB1C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_209EF3178()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_209EF318C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_209EF2BD8(a1, a2);
}

uint64_t sub_209EF31A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_209F669E8();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_209EF31DC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_209F669E8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_209EF3210(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_209F669E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_209EF3254(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_209F669E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_209EF3298(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_209F669E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_209EF32DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_209F669E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_209EF3320()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_209EF332C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_209F669E8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_209EF3368()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_209EF3374(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_209F669E8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_209EF33B4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_209F669E8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_209EF341C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  void *v48;
  char v49;
  int *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  id v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  const void *v80;
  uint64_t v81;
  uint64_t v82;
  unsigned int (*v83)(const void *, uint64_t, uint64_t);
  uint64_t v84;
  uint64_t v86;
  unsigned int (*v87)(char *, uint64_t, uint64_t);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v18 = v17 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_BYTE *)(a2 + 8);
    sub_209EEC00C(*(_QWORD *)a2, v8);
    *(_QWORD *)a1 = v7;
    *(_BYTE *)(a1 + 8) = v8;
    v9 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v9;
    v10 = *(int *)(a3 + 24);
    v11 = (char *)(a1 + v10);
    v12 = (char *)(a2 + v10);
    v13 = sub_209F66A90();
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    swift_bridgeObjectRetain();
    v94 = a2;
    v95 = a1;
    v93 = a3;
    v87 = v15;
    v88 = v13;
    v86 = v14;
    if (v15(v12, 1, v13))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    v19 = (int *)type metadata accessor for URLLoadingParameters(0);
    v20 = v19[5];
    v21 = &v11[v20];
    v22 = &v12[v20];
    v92 = *((_QWORD *)v22 + 1);
    *(_QWORD *)v21 = *(_QWORD *)v22;
    *((_QWORD *)v21 + 1) = v92;
    v23 = v19[6];
    v24 = &v11[v23];
    v25 = &v12[v23];
    v91 = *((_QWORD *)v25 + 1);
    *(_QWORD *)v24 = *(_QWORD *)v25;
    *((_QWORD *)v24 + 1) = v91;
    v11[v19[7]] = v12[v19[7]];
    v26 = v19[8];
    v27 = &v11[v26];
    v28 = &v12[v26];
    v90 = *((_QWORD *)v28 + 1);
    *(_QWORD *)v27 = *(_QWORD *)v28;
    *((_QWORD *)v27 + 1) = v90;
    v29 = v19[9];
    v30 = &v11[v29];
    v31 = &v12[v29];
    v89 = *((_QWORD *)v31 + 1);
    *(_QWORD *)v30 = *(_QWORD *)v31;
    *((_QWORD *)v30 + 1) = v89;
    v11[v19[10]] = v12[v19[10]];
    *(_QWORD *)&v11[v19[11]] = *(_QWORD *)&v12[v19[11]];
    v32 = v19[12];
    v33 = &v11[v32];
    v34 = &v12[v32];
    v35 = *((_QWORD *)v34 + 1);
    *(_QWORD *)v33 = *(_QWORD *)v34;
    *((_QWORD *)v33 + 1) = v35;
    v36 = v19[13];
    v37 = &v11[v36];
    v38 = &v12[v36];
    v39 = *((_QWORD *)v38 + 1);
    *(_QWORD *)v37 = *(_QWORD *)v38;
    *((_QWORD *)v37 + 1) = v39;
    v40 = v19[14];
    v41 = &v11[v40];
    v42 = &v12[v40];
    v43 = *((_QWORD *)v42 + 1);
    *(_QWORD *)v41 = *(_QWORD *)v42;
    *((_QWORD *)v41 + 1) = v43;
    v44 = type metadata accessor for URLLoader(0);
    v45 = *(int *)(v44 + 20);
    v46 = &v11[v45];
    v47 = &v12[v45];
    v48 = *(void **)v47;
    v49 = v47[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_209EEC018(v48, v49);
    *(_QWORD *)v46 = v48;
    v46[8] = v49;
    v50 = (int *)v44;
    v51 = *(int *)(v44 + 24);
    v52 = &v11[v51];
    v53 = &v12[v51];
    v54 = *(id *)v53;
    LOBYTE(v35) = v53[8];
    sub_209EEC018(*(id *)v53, v35);
    *(_QWORD *)v52 = v54;
    v52[8] = v35;
    v55 = v50[7];
    v56 = &v11[v55];
    v57 = &v12[v55];
    v58 = *(_QWORD *)v57;
    v59 = *((_QWORD *)v57 + 1);
    LOBYTE(v52) = v57[16];
    sub_209EEC024(*(_QWORD *)v57, v59, (char)v52);
    *(_QWORD *)v56 = v58;
    *((_QWORD *)v56 + 1) = v59;
    v56[16] = (char)v52;
    v60 = v50[8];
    v61 = &v11[v60];
    v62 = &v12[v60];
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if (v87(v62, 1, v88))
      {
        v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
        memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v61, v62, v88);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v61, 0, 1, v88);
      }
    }
    else
    {
      *(_QWORD *)v61 = *(_QWORD *)v62;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v64 = v50[9];
    v65 = &v11[v64];
    v66 = &v12[v64];
    v67 = *(_QWORD *)v66;
    v68 = *((_QWORD *)v66 + 1);
    v69 = v66[16];
    sub_209EEC024(*(_QWORD *)v66, v68, v69);
    *(_QWORD *)v65 = v67;
    *((_QWORD *)v65 + 1) = v68;
    v65[16] = v69;
    v70 = v50[10];
    v71 = &v11[v70];
    v72 = &v12[v70];
    v73 = *(_QWORD *)v72;
    LOBYTE(v68) = v72[8];
    sub_209EEC030(*(_QWORD *)v72, v68);
    *(_QWORD *)v71 = v73;
    v71[8] = v68;
    v74 = v50[11];
    v75 = &v11[v74];
    v76 = &v12[v74];
    v77 = *(_QWORD *)v76;
    LOBYTE(v76) = v76[8];
    *(_QWORD *)v75 = v77;
    v75[8] = (char)v76;
    v78 = *(int *)(v93 + 28);
    v18 = v95;
    v79 = (void *)(v95 + v78);
    v80 = (const void *)(v94 + v78);
    v81 = sub_209F669E8();
    v82 = *(_QWORD *)(v81 - 8);
    v83 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v82 + 48);
    swift_retain();
    if (v83(v80, 1, v81))
    {
      v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB200);
      memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v82 + 16))(v79, v80, v81);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v79, 0, 1, v81);
    }
  }
  return v18;
}

uint64_t sub_209EF38B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  sub_209EEC68C(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_209F66A90();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  type metadata accessor for URLLoadingParameters(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = (int *)type metadata accessor for URLLoader(0);
  sub_209EEC698(*(id *)(v4 + v8[5]), *(_BYTE *)(v4 + v8[5] + 8));
  sub_209EEC698(*(id *)(v4 + v8[6]), *(_BYTE *)(v4 + v8[6] + 8));
  sub_209EEC6A4(*(_QWORD *)(v4 + v8[7]), *(_QWORD *)(v4 + v8[7] + 8), *(_BYTE *)(v4 + v8[7] + 16));
  v9 = v4 + v8[8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    if (!v7(v9, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  }
  else
  {
    swift_release();
  }
  sub_209EEC6A4(*(_QWORD *)(v4 + v8[9]), *(_QWORD *)(v4 + v8[9] + 8), *(_BYTE *)(v4 + v8[9] + 16));
  sub_209EEC6B0(*(_QWORD *)(v4 + v8[10]), *(_BYTE *)(v4 + v8[10] + 8));
  swift_release();
  v10 = a1 + *(int *)(a2 + 28);
  v11 = sub_209F669E8();
  v12 = *(_QWORD *)(v11 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  return result;
}

uint64_t sub_209EF3AF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  void *v45;
  char v46;
  int *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  id v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  const void *v77;
  uint64_t v78;
  uint64_t v79;
  unsigned int (*v80)(const void *, uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v83;
  unsigned int (*v84)(char *, uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_209EEC00C(*(_QWORD *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  v8 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v8;
  v9 = *(int *)(a3 + 24);
  v10 = (char *)(a1 + v9);
  v11 = (char *)(a2 + v9);
  v12 = sub_209F66A90();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  swift_bridgeObjectRetain();
  v91 = a2;
  v92 = a1;
  v90 = a3;
  v84 = v14;
  v85 = v12;
  v83 = v13;
  if (v14(v11, 1, v12))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v16 = (int *)type metadata accessor for URLLoadingParameters(0);
  v17 = v16[5];
  v18 = &v10[v17];
  v19 = &v11[v17];
  v89 = *((_QWORD *)v19 + 1);
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *((_QWORD *)v18 + 1) = v89;
  v20 = v16[6];
  v21 = &v10[v20];
  v22 = &v11[v20];
  v88 = *((_QWORD *)v22 + 1);
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *((_QWORD *)v21 + 1) = v88;
  v10[v16[7]] = v11[v16[7]];
  v23 = v16[8];
  v24 = &v10[v23];
  v25 = &v11[v23];
  v87 = *((_QWORD *)v25 + 1);
  *(_QWORD *)v24 = *(_QWORD *)v25;
  *((_QWORD *)v24 + 1) = v87;
  v26 = v16[9];
  v27 = &v10[v26];
  v28 = &v11[v26];
  v86 = *((_QWORD *)v28 + 1);
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *((_QWORD *)v27 + 1) = v86;
  v10[v16[10]] = v11[v16[10]];
  *(_QWORD *)&v10[v16[11]] = *(_QWORD *)&v11[v16[11]];
  v29 = v16[12];
  v30 = &v10[v29];
  v31 = &v11[v29];
  v32 = *((_QWORD *)v31 + 1);
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *((_QWORD *)v30 + 1) = v32;
  v33 = v16[13];
  v34 = &v10[v33];
  v35 = &v11[v33];
  v36 = *((_QWORD *)v35 + 1);
  *(_QWORD *)v34 = *(_QWORD *)v35;
  *((_QWORD *)v34 + 1) = v36;
  v37 = v16[14];
  v38 = &v10[v37];
  v39 = &v11[v37];
  v40 = *((_QWORD *)v39 + 1);
  *(_QWORD *)v38 = *(_QWORD *)v39;
  *((_QWORD *)v38 + 1) = v40;
  v41 = type metadata accessor for URLLoader(0);
  v42 = *(int *)(v41 + 20);
  v43 = &v10[v42];
  v44 = &v11[v42];
  v45 = *(void **)v44;
  v46 = v44[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_209EEC018(v45, v46);
  *(_QWORD *)v43 = v45;
  v43[8] = v46;
  v47 = (int *)v41;
  v48 = *(int *)(v41 + 24);
  v49 = &v10[v48];
  v50 = &v11[v48];
  v51 = *(id *)v50;
  LOBYTE(v36) = v50[8];
  sub_209EEC018(*(id *)v50, v36);
  *(_QWORD *)v49 = v51;
  v49[8] = v36;
  v52 = v47[7];
  v53 = &v10[v52];
  v54 = &v11[v52];
  v55 = *(_QWORD *)v54;
  v56 = *((_QWORD *)v54 + 1);
  LOBYTE(v49) = v54[16];
  sub_209EEC024(*(_QWORD *)v54, v56, (char)v49);
  *(_QWORD *)v53 = v55;
  *((_QWORD *)v53 + 1) = v56;
  v53[16] = (char)v49;
  v57 = v47[8];
  v58 = &v10[v57];
  v59 = &v11[v57];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    if (v84(v59, 1, v85))
    {
      v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
      memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v58, v59, v85);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v58, 0, 1, v85);
    }
  }
  else
  {
    *(_QWORD *)v58 = *(_QWORD *)v59;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v61 = v47[9];
  v62 = &v10[v61];
  v63 = &v11[v61];
  v64 = *(_QWORD *)v63;
  v65 = *((_QWORD *)v63 + 1);
  v66 = v63[16];
  sub_209EEC024(*(_QWORD *)v63, v65, v66);
  *(_QWORD *)v62 = v64;
  *((_QWORD *)v62 + 1) = v65;
  v62[16] = v66;
  v67 = v47[10];
  v68 = &v10[v67];
  v69 = &v11[v67];
  v70 = *(_QWORD *)v69;
  LOBYTE(v65) = v69[8];
  sub_209EEC030(*(_QWORD *)v69, v65);
  *(_QWORD *)v68 = v70;
  v68[8] = v65;
  v71 = v47[11];
  v72 = &v10[v71];
  v73 = &v11[v71];
  v74 = *(_QWORD *)v73;
  LOBYTE(v73) = v73[8];
  *(_QWORD *)v72 = v74;
  v72[8] = (char)v73;
  v75 = *(int *)(v90 + 28);
  v76 = (void *)(v92 + v75);
  v77 = (const void *)(v91 + v75);
  v78 = sub_209F669E8();
  v79 = *(_QWORD *)(v78 - 8);
  v80 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v79 + 48);
  swift_retain();
  if (v80(v77, 1, v78))
  {
    v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB200);
    memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v79 + 16))(v76, v77, v78);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v76, 0, 1, v78);
  }
  return v92;
}

uint64_t sub_209EF3F64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  int *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  id v45;
  char v46;
  void *v47;
  char v48;
  uint64_t v49;
  char *v50;
  char *v51;
  id v52;
  char v53;
  void *v54;
  char v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t (*v92)(void *, uint64_t, uint64_t);
  int v93;
  int v94;
  uint64_t v95;
  uint64_t v97;
  unsigned int (*v98)(char *, uint64_t, uint64_t);
  uint64_t v99;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_209EEC00C(*(_QWORD *)a2, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_209EEC68C(v8, v9);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 24);
  v11 = (char *)(a1 + v10);
  v12 = (char *)(a2 + v10);
  v13 = sub_209F66A90();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  v98 = v15;
  v99 = a3;
  v97 = v14;
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
LABEL_7:
  v19 = (int *)type metadata accessor for URLLoadingParameters(0);
  v20 = v19[5];
  v21 = &v11[v20];
  v22 = &v12[v20];
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23 = v19[6];
  v24 = &v11[v23];
  v25 = &v12[v23];
  *(_QWORD *)v24 = *(_QWORD *)v25;
  *((_QWORD *)v24 + 1) = *((_QWORD *)v25 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[v19[7]] = v12[v19[7]];
  v26 = v19[8];
  v27 = &v11[v26];
  v28 = &v12[v26];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *((_QWORD *)v27 + 1) = *((_QWORD *)v28 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v29 = v19[9];
  v30 = &v11[v29];
  v31 = &v12[v29];
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *((_QWORD *)v30 + 1) = *((_QWORD *)v31 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[v19[10]] = v12[v19[10]];
  *(_QWORD *)&v11[v19[11]] = *(_QWORD *)&v12[v19[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v32 = v19[12];
  v33 = &v11[v32];
  v34 = &v12[v32];
  *(_QWORD *)v33 = *(_QWORD *)v34;
  *((_QWORD *)v33 + 1) = *((_QWORD *)v34 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v35 = v19[13];
  v36 = &v11[v35];
  v37 = &v12[v35];
  *(_QWORD *)v36 = *(_QWORD *)v37;
  *((_QWORD *)v36 + 1) = *((_QWORD *)v37 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v38 = v19[14];
  v39 = &v11[v38];
  v40 = &v12[v38];
  *(_QWORD *)v39 = *(_QWORD *)v40;
  *((_QWORD *)v39 + 1) = *((_QWORD *)v40 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v41 = (int *)type metadata accessor for URLLoader(0);
  v42 = v41[5];
  v43 = &v11[v42];
  v44 = &v12[v42];
  v45 = *(id *)v44;
  v46 = v44[8];
  sub_209EEC018(*(id *)v44, v46);
  v47 = *(void **)v43;
  v48 = v43[8];
  *(_QWORD *)v43 = v45;
  v43[8] = v46;
  sub_209EEC698(v47, v48);
  v49 = v41[6];
  v50 = &v11[v49];
  v51 = &v12[v49];
  v52 = *(id *)v51;
  v53 = v51[8];
  sub_209EEC018(*(id *)v51, v53);
  v54 = *(void **)v50;
  v55 = v50[8];
  *(_QWORD *)v50 = v52;
  v50[8] = v53;
  sub_209EEC698(v54, v55);
  v56 = v41[7];
  v57 = &v11[v56];
  v58 = &v12[v56];
  v59 = *(_QWORD *)v58;
  v60 = *((_QWORD *)v58 + 1);
  LOBYTE(v50) = v58[16];
  sub_209EEC024(*(_QWORD *)v58, v60, (char)v50);
  v61 = *(_QWORD *)v57;
  v62 = *((_QWORD *)v57 + 1);
  v63 = v57[16];
  *(_QWORD *)v57 = v59;
  *((_QWORD *)v57 + 1) = v60;
  v57[16] = (char)v50;
  sub_209EEC6A4(v61, v62, v63);
  if (a1 != a2)
  {
    v64 = v41[8];
    v65 = &v11[v64];
    v66 = &v12[v64];
    sub_209EE017C((uint64_t)&v11[v64], &qword_2545BB1F8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if (v98(v66, 1, v13))
      {
        v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
        memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v65, v66, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v65, 0, 1, v13);
      }
    }
    else
    {
      *(_QWORD *)v65 = *(_QWORD *)v66;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v68 = v41[9];
  v69 = &v11[v68];
  v70 = &v12[v68];
  v71 = *(_QWORD *)v70;
  v72 = *((_QWORD *)v70 + 1);
  v73 = v70[16];
  sub_209EEC024(*(_QWORD *)v70, v72, v73);
  v74 = *(_QWORD *)v69;
  v75 = *((_QWORD *)v69 + 1);
  v76 = v69[16];
  *(_QWORD *)v69 = v71;
  *((_QWORD *)v69 + 1) = v72;
  v69[16] = v73;
  sub_209EEC6A4(v74, v75, v76);
  v77 = v41[10];
  v78 = &v11[v77];
  v79 = &v12[v77];
  v80 = *(_QWORD *)v79;
  LOBYTE(v72) = v79[8];
  sub_209EEC030(*(_QWORD *)v79, v72);
  v81 = *(_QWORD *)v78;
  v82 = v78[8];
  *(_QWORD *)v78 = v80;
  v78[8] = v72;
  sub_209EEC6B0(v81, v82);
  v83 = v41[11];
  v84 = &v11[v83];
  v85 = &v12[v83];
  v86 = *(_QWORD *)v85;
  LOBYTE(v85) = v85[8];
  *(_QWORD *)v84 = v86;
  v84[8] = (char)v85;
  swift_retain();
  swift_release();
  v87 = *(int *)(v99 + 28);
  v88 = (void *)(a1 + v87);
  v89 = (void *)(a2 + v87);
  v90 = sub_209F669E8();
  v91 = *(_QWORD *)(v90 - 8);
  v92 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v91 + 48);
  v93 = v92(v88, 1, v90);
  v94 = v92(v89, 1, v90);
  if (!v93)
  {
    if (!v94)
    {
      (*(void (**)(void *, void *, uint64_t))(v91 + 24))(v88, v89, v90);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v91 + 8))(v88, v90);
    goto LABEL_20;
  }
  if (v94)
  {
LABEL_20:
    v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB200);
    memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v91 + 16))(v88, v89, v90);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v88, 0, 1, v90);
  return a1;
}

uint64_t sub_209EF4530(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  void *v38;
  const void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v6 = *(int *)(a3 + 24);
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = sub_209F66A90();
  v10 = *(_QWORD *)(v9 - 8);
  v44 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v45 = a3;
  if (v44(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = (int *)type metadata accessor for URLLoadingParameters(0);
  *(_OWORD *)&v7[v12[5]] = *(_OWORD *)&v8[v12[5]];
  *(_OWORD *)&v7[v12[6]] = *(_OWORD *)&v8[v12[6]];
  v7[v12[7]] = v8[v12[7]];
  *(_OWORD *)&v7[v12[8]] = *(_OWORD *)&v8[v12[8]];
  *(_OWORD *)&v7[v12[9]] = *(_OWORD *)&v8[v12[9]];
  v7[v12[10]] = v8[v12[10]];
  *(_QWORD *)&v7[v12[11]] = *(_QWORD *)&v8[v12[11]];
  *(_OWORD *)&v7[v12[12]] = *(_OWORD *)&v8[v12[12]];
  *(_OWORD *)&v7[v12[13]] = *(_OWORD *)&v8[v12[13]];
  *(_OWORD *)&v7[v12[14]] = *(_OWORD *)&v8[v12[14]];
  v13 = (int *)type metadata accessor for URLLoader(0);
  v14 = v13[5];
  v15 = &v7[v14];
  v16 = &v8[v14];
  *(_QWORD *)v15 = *(_QWORD *)v16;
  v15[8] = v16[8];
  v17 = v13[6];
  v18 = &v7[v17];
  v19 = &v8[v17];
  *(_QWORD *)v18 = *(_QWORD *)v19;
  v18[8] = v19[8];
  v20 = v13[7];
  v21 = &v7[v20];
  v22 = &v8[v20];
  v21[16] = v22[16];
  *(_OWORD *)v21 = *(_OWORD *)v22;
  v23 = v13[8];
  v24 = &v7[v23];
  v25 = &v8[v23];
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    if (v44(v25, 1, v9))
    {
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v24, v25, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v24, 0, 1, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  v28 = v13[9];
  v29 = &v7[v28];
  v30 = &v8[v28];
  *(_OWORD *)v29 = *(_OWORD *)v30;
  v29[16] = v30[16];
  v31 = v13[10];
  v32 = &v7[v31];
  v33 = &v8[v31];
  v32[8] = v33[8];
  *(_QWORD *)v32 = *(_QWORD *)v33;
  v34 = v13[11];
  v35 = &v7[v34];
  v36 = &v8[v34];
  *(_QWORD *)v35 = *(_QWORD *)v36;
  v35[8] = v36[8];
  v37 = *(int *)(v45 + 28);
  v38 = (void *)(a1 + v37);
  v39 = (const void *)(a2 + v37);
  v40 = sub_209F669E8();
  v41 = *(_QWORD *)(v40 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
  {
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB200);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v41 + 32))(v38, v39, v40);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
  }
  return a1;
}

uint64_t sub_209EF489C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  int *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  void *v61;
  char v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  void *v67;
  char v68;
  uint64_t v69;
  char *v70;
  char *v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t (*v103)(void *, uint64_t, uint64_t);
  int v104;
  int v105;
  uint64_t v106;
  uint64_t v108;
  uint64_t v109;

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_209EEC68C(v8, v9);
  v10 = a2[3];
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = v10;
  swift_bridgeObjectRelease();
  v11 = *(int *)(a3 + 24);
  v12 = (char *)(a1 + v11);
  v13 = (char *)a2 + v11;
  v14 = sub_209F66A90();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 40))(v12, v13, v14);
LABEL_7:
  v20 = (int *)type metadata accessor for URLLoadingParameters(0);
  v21 = v20[5];
  v22 = &v12[v21];
  v23 = &v13[v21];
  v25 = *(_QWORD *)v23;
  v24 = *((_QWORD *)v23 + 1);
  *(_QWORD *)v22 = v25;
  *((_QWORD *)v22 + 1) = v24;
  swift_bridgeObjectRelease();
  v26 = v20[6];
  v27 = &v12[v26];
  v28 = &v13[v26];
  v30 = *(_QWORD *)v28;
  v29 = *((_QWORD *)v28 + 1);
  *(_QWORD *)v27 = v30;
  *((_QWORD *)v27 + 1) = v29;
  swift_bridgeObjectRelease();
  v12[v20[7]] = v13[v20[7]];
  v31 = v20[8];
  v32 = &v12[v31];
  v33 = &v13[v31];
  v35 = *(_QWORD *)v33;
  v34 = *((_QWORD *)v33 + 1);
  *(_QWORD *)v32 = v35;
  *((_QWORD *)v32 + 1) = v34;
  swift_bridgeObjectRelease();
  v36 = v20[9];
  v37 = &v12[v36];
  v38 = &v13[v36];
  v40 = *(_QWORD *)v38;
  v39 = *((_QWORD *)v38 + 1);
  *(_QWORD *)v37 = v40;
  *((_QWORD *)v37 + 1) = v39;
  swift_bridgeObjectRelease();
  v12[v20[10]] = v13[v20[10]];
  *(_QWORD *)&v12[v20[11]] = *(_QWORD *)&v13[v20[11]];
  swift_bridgeObjectRelease();
  v41 = v20[12];
  v42 = &v12[v41];
  v43 = &v13[v41];
  v45 = *(_QWORD *)v43;
  v44 = *((_QWORD *)v43 + 1);
  *(_QWORD *)v42 = v45;
  *((_QWORD *)v42 + 1) = v44;
  swift_bridgeObjectRelease();
  v46 = v20[13];
  v47 = &v12[v46];
  v48 = &v13[v46];
  v50 = *(_QWORD *)v48;
  v49 = *((_QWORD *)v48 + 1);
  *(_QWORD *)v47 = v50;
  *((_QWORD *)v47 + 1) = v49;
  swift_bridgeObjectRelease();
  v51 = v20[14];
  v52 = &v12[v51];
  v53 = &v13[v51];
  v55 = *(_QWORD *)v53;
  v54 = *((_QWORD *)v53 + 1);
  *(_QWORD *)v52 = v55;
  *((_QWORD *)v52 + 1) = v54;
  swift_bridgeObjectRelease();
  v56 = (int *)type metadata accessor for URLLoader(0);
  v57 = v56[5];
  v58 = &v12[v57];
  v59 = &v13[v57];
  v60 = *(_QWORD *)v59;
  LOBYTE(v59) = v59[8];
  v61 = *(void **)v58;
  v62 = v58[8];
  *(_QWORD *)v58 = v60;
  v58[8] = (char)v59;
  sub_209EEC698(v61, v62);
  v63 = v56[6];
  v64 = &v12[v63];
  v65 = &v13[v63];
  v66 = *(_QWORD *)v65;
  LOBYTE(v65) = v65[8];
  v67 = *(void **)v64;
  v68 = v64[8];
  *(_QWORD *)v64 = v66;
  v64[8] = (char)v65;
  sub_209EEC698(v67, v68);
  v69 = v56[7];
  v70 = &v12[v69];
  v71 = &v13[v69];
  v72 = v71[16];
  v73 = *(_QWORD *)v70;
  v74 = *((_QWORD *)v70 + 1);
  v75 = v70[16];
  *(_OWORD *)v70 = *(_OWORD *)v71;
  v70[16] = v72;
  sub_209EEC6A4(v73, v74, v75);
  if ((uint64_t *)a1 != a2)
  {
    v108 = v15;
    v109 = a3;
    v76 = v56[8];
    v77 = &v12[v76];
    v78 = &v13[v76];
    sub_209EE017C((uint64_t)&v12[v76], &qword_2545BB1F8);
    v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if (v16(v78, 1, v14))
      {
        v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
        memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v77, v78, v14);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v108 + 56))(v77, 0, 1, v14);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
    }
    a3 = v109;
  }
  v81 = v56[9];
  v82 = &v12[v81];
  v83 = &v13[v81];
  v84 = v83[16];
  v85 = *(_QWORD *)v82;
  v86 = *((_QWORD *)v82 + 1);
  v87 = v82[16];
  *(_OWORD *)v82 = *(_OWORD *)v83;
  v82[16] = v84;
  sub_209EEC6A4(v85, v86, v87);
  v88 = v56[10];
  v89 = &v12[v88];
  v90 = &v13[v88];
  v91 = *(_QWORD *)v90;
  LOBYTE(v90) = v90[8];
  v92 = *(_QWORD *)v89;
  v93 = v89[8];
  *(_QWORD *)v89 = v91;
  v89[8] = (char)v90;
  sub_209EEC6B0(v92, v93);
  v94 = v56[11];
  v95 = &v12[v94];
  v96 = &v13[v94];
  v97 = *(_QWORD *)v96;
  LOBYTE(v96) = v96[8];
  *(_QWORD *)v95 = v97;
  v95[8] = (char)v96;
  swift_release();
  v98 = *(int *)(a3 + 28);
  v99 = (void *)(a1 + v98);
  v100 = (char *)a2 + v98;
  v101 = sub_209F669E8();
  v102 = *(_QWORD *)(v101 - 8);
  v103 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v102 + 48);
  v104 = v103(v99, 1, v101);
  v105 = v103(v100, 1, v101);
  if (!v104)
  {
    if (!v105)
    {
      (*(void (**)(void *, char *, uint64_t))(v102 + 40))(v99, v100, v101);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v102 + 8))(v99, v101);
    goto LABEL_21;
  }
  if (v105)
  {
LABEL_21:
    v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB200);
    memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, char *, uint64_t))(v102 + 32))(v99, v100, v101);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v102 + 56))(v99, 0, 1, v101);
  return a1;
}

uint64_t sub_209EF4D7C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_209EF4D88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for URLLoader(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 24);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB200);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_209EF4E2C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_209EF4E38(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for URLLoader(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB200);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_209EF4ED8()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for URLLoader(319);
  if (v0 <= 0x3F)
  {
    sub_209EF4F70();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_209EF4F70()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2545BB320)
  {
    sub_209F669E8();
    v0 = sub_209F675DC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2545BB320);
  }
}

uint64_t storeEnumTagSinglePayload for HTMLContentElement.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_209EF5010 + 4 * byte_209F77065[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_209EF5044 + 4 * asc_209F77060[v4]))();
}

uint64_t sub_209EF5044(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_209EF504C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x209EF5054);
  return result;
}

uint64_t sub_209EF5060(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x209EF5068);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_209EF506C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_209EF5074(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HTMLContentElement.CodingKeys()
{
  return &type metadata for HTMLContentElement.CodingKeys;
}

unint64_t sub_209EF5094()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_2545BB328;
  if (!qword_2545BB328)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BB330);
    v2 = sub_209EF50F8();
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BDF5580], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2545BB328);
  }
  return result;
}

unint64_t sub_209EF50F8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_2545BB338;
  if (!qword_2545BB338)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BB2D0);
    v2[2] = MEMORY[0x24BDF1FA0];
    v2[3] = MEMORY[0x24BDF1F78];
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_209EF2B8C();
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BDEF3D8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2545BB338);
  }
  return result;
}

uint64_t sub_209EF5188(uint64_t a1)
{
  return sub_209EF52D8(a1, qword_2545BE868);
}

uint64_t sub_209EF5194@<X0>(uint64_t a1@<X8>)
{
  return sub_209EF5358(&qword_2545BE860, (uint64_t)qword_2545BE868, a1);
}

uint64_t sub_209EF51B0()
{
  sub_209EF54F4();
  return sub_209F66DCC();
}

uint64_t sub_209EF5200()
{
  sub_209EF5234();
  return sub_209F66EA4();
}

unint64_t sub_209EF5234()
{
  unint64_t result;

  result = qword_2545BE8A0;
  if (!qword_2545BE8A0)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F773AC, &type metadata for BuddyMLURLKey);
    atomic_store(result, (unint64_t *)&qword_2545BE8A0);
  }
  return result;
}

uint64_t sub_209EF5278(uint64_t a1)
{
  return sub_209EF5438(a1, (void (*)(uint64_t))sub_209EF5234);
}

uint64_t sub_209EF528C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_209EF52CC(uint64_t a1)
{
  return sub_209EF52D8(a1, qword_2545BE888);
}

uint64_t sub_209EF52D8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
  __swift_allocate_value_buffer(v3, a2);
  v4 = __swift_project_value_buffer(v3, (uint64_t)a2);
  v5 = sub_209F66A90();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
}

uint64_t sub_209EF533C@<X0>(uint64_t a1@<X8>)
{
  return sub_209EF5358(&qword_2545BE880, (uint64_t)qword_2545BE888, a1);
}

uint64_t sub_209EF5358@<X0>(_QWORD *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
  v6 = __swift_project_value_buffer(v5, a2);
  return sub_209EDF8C0(v6, a3);
}

uint64_t sub_209EF53AC()
{
  sub_209EF53E0();
  return sub_209F66EA4();
}

unint64_t sub_209EF53E0()
{
  unint64_t result;

  result = qword_2545BE8A8[0];
  if (!qword_2545BE8A8[0])
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F77374, &type metadata for LegacyRefreshURLKey);
    atomic_store(result, qword_2545BE8A8);
  }
  return result;
}

uint64_t sub_209EF5424(uint64_t a1)
{
  return sub_209EF5438(a1, (void (*)(uint64_t))sub_209EF53E0);
}

uint64_t sub_209EF5438(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = sub_209EDF8C0(a1, (uint64_t)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  a2(v7);
  sub_209F66EB0();
  return sub_209EF528C(a1);
}

ValueMetadata *type metadata accessor for LegacyRefreshURLKey()
{
  return &type metadata for LegacyRefreshURLKey;
}

ValueMetadata *type metadata accessor for BuddyMLURLKey()
{
  return &type metadata for BuddyMLURLKey;
}

unint64_t sub_209EF54F4()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_2545BB340;
  if (!qword_2545BB340)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BB600);
    v2 = sub_209EF5558();
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BEE4AB8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2545BB340);
  }
  return result;
}

unint64_t sub_209EF5558()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2545BB348;
  if (!qword_2545BB348)
  {
    v1 = sub_209F66A90();
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BDCDB00], v1);
    atomic_store(result, (unint64_t *)&qword_2545BB348);
  }
  return result;
}

unint64_t sub_209EF55A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  _QWORD v23[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB380);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v8 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB388);
  v7 = sub_209F67810();
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = *(int *)(v2 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v23[1] = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_209EF8578(v13, (uint64_t)v6);
    result = sub_209EF74FC((uint64_t)v6);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v8[6];
    v19 = sub_209F66A90();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, v6, v19);
    *(_QWORD *)(v8[7] + 8 * v17) = *(_QWORD *)&v6[v10];
    v20 = v8[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_11;
    v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_209EF5730(uint64_t a1, char a2)
{
  uint64_t result;

  if (a2 == 1)
    return swift_bridgeObjectRetain();
  if (!a2)
    return swift_retain();
  return result;
}

id sub_209EF574C(id result, unsigned __int8 a2)
{
  if (a2 != 255)
    return sub_209EF5764(result, a2 & 1);
  return result;
}

id sub_209EF5764(id a1, char a2)
{
  if ((a2 & 1) != 0)
    return a1;
  else
    return (id)swift_bridgeObjectRetain();
}

uint64_t sub_209EF5770()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_209EF57A4(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_209EF57E8())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void *sub_209EF5824()
{
  uint64_t v0;
  void *v1;
  id v2;

  swift_beginAccess();
  v1 = *(void **)(v0 + 24);
  v2 = v1;
  return v1;
}

void sub_209EF5864(uint64_t a1)
{
  uint64_t v1;
  void *v3;

  swift_beginAccess();
  v3 = *(void **)(v1 + 24);
  *(_QWORD *)(v1 + 24) = a1;

}

uint64_t (*sub_209EF58A8())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_209EF58E8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_209EF5914()
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_209EF5940(void *a1, char a2, uint64_t *a3, void (*a4)(void *, _QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  os_log_type_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v22;
  uint64_t v23;

  v8 = sub_209F66E98();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v20 = a1;
  }
  else
  {
    swift_retain();
    v13 = sub_209F67540();
    v14 = sub_209F67030();
    v15 = v13;
    if (os_log_type_enabled(v14, v13))
    {
      v16 = swift_slowAlloc();
      v17 = swift_slowAlloc();
      v23 = v17;
      *(_DWORD *)v16 = 136315138;
      __swift_instantiateConcreteTypeFromMangledName(a3);
      v18 = sub_209F67BA0();
      *(_QWORD *)(v16 + 4) = sub_209EE75A0(v18, v19, &v23);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_209E87000, v14, v15, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x20BD1DC00](v17, -1, -1);
      MEMORY[0x20BD1DC00](v16, -1, -1);
    }

    sub_209F66E8C();
    swift_getAtKeyPath();
    a4(a1, 0);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    return v23;
  }
  return (uint64_t)a1;
}

uint64_t sub_209EF5AF0()
{
  return swift_getKeyPath();
}

uint64_t sub_209EF5B10@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.ruiObjectModel.getter();
  *a1 = result;
  return result;
}

uint64_t sub_209EF5B38(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  return EnvironmentValues.ruiObjectModel.setter((uint64_t)v1);
}

uint64_t sub_209EF5B64()
{
  return swift_getKeyPath();
}

uint64_t sub_209EF5B84@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.ruiParentElement.getter();
  *a1 = result;
  return result;
}

uint64_t sub_209EF5BAC(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  return EnvironmentValues.ruiParentElement.setter((uint64_t)v1);
}

uint64_t type metadata accessor for WelcomeController.Coordinator()
{
  return objc_opt_self();
}

void sub_209EF5BF8(unint64_t a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  char v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  void (*v14)(void);
  id v15;
  void *v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  void (*v23)(void (*)(uint64_t), uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = *(void **)(a3 + 152);
  v7 = *(_BYTE *)(a3 + 160);
  sub_209EEC018(v6, v7);
  v8 = sub_209EF5940(v6, v7, (uint64_t *)&unk_2545BB7A0, (void (*)(void *, _QWORD))sub_209EEC698);
  sub_209EEC698(v6, v7);
  v9 = (_QWORD *)MEMORY[0x24BEE4EA0];
  (*(void (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *a2) + 0x180))(v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB360);
  v10 = sub_209F67024();
  v11 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v28 + 96))(v10);
  swift_release();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (*(_QWORD *)(v11 + 16) <= a1)
  {
LABEL_7:
    __break(1u);
    return;
  }
  v12 = *(void **)(v11 + 8 * a1 + 32);
  v13 = v12;
  swift_bridgeObjectRelease();
  if (v12)
  {
    v14 = *(void (**)(void))((*v9 & *a2) + 0x160);
    v15 = v13;
    v14();
    v16 = (void *)sub_209F672A0();
    swift_bridgeObjectRelease();
    objc_msgSend(v15, sel_setAccessibilityIdentifier_, v16);

  }
  v17 = swift_allocObject();
  v18 = *(_OWORD *)(a3 + 144);
  *(_OWORD *)(v17 + 144) = *(_OWORD *)(a3 + 128);
  *(_OWORD *)(v17 + 160) = v18;
  *(_BYTE *)(v17 + 176) = *(_BYTE *)(a3 + 160);
  v19 = *(_OWORD *)(a3 + 80);
  *(_OWORD *)(v17 + 80) = *(_OWORD *)(a3 + 64);
  *(_OWORD *)(v17 + 96) = v19;
  v20 = *(_OWORD *)(a3 + 112);
  *(_OWORD *)(v17 + 112) = *(_OWORD *)(a3 + 96);
  *(_OWORD *)(v17 + 128) = v20;
  v21 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v17 + 16) = *(_OWORD *)a3;
  *(_OWORD *)(v17 + 32) = v21;
  v22 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(v17 + 48) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v17 + 64) = v22;
  v23 = *(void (**)(void (*)(uint64_t), uint64_t))((*v9 & *a2) + 0xF0);
  sub_209EF82C4(a3);
  v23(sub_209EF81EC, v17);
  v24 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(void (*)(), uint64_t))((*v9 & *a2) + 0x108))(sub_209EF83EC, v24);
  v25 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(void (*)(), uint64_t))((*v9 & *a2) + 0x120))(sub_209EF83F8, v25);
  v26 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(void (*)(char), uint64_t))((*v9 & *a2) + 0x1A8))(sub_209EF8478, v26);
  v27 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(void (*)(), uint64_t))((*v9 & *a2) + 0x1C0))(sub_209EF84D8, v27);

}

uint64_t sub_209EF5EF0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

void sub_209EF5F18(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

void sub_209EF5F78(void *a1)
{
  _QWORD *v1;
  unint64_t v3;
  uint64_t v4;
  unint64_t i;
  _QWORD *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  unint64_t v15;

  v3 = v1[6];
  v15 = v3;
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain_n();
    v4 = sub_209F677EC();
    if (!v4)
      goto LABEL_10;
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (!v4)
      goto LABEL_10;
  }
  if (v4 < 1)
  {
    __break(1u);
    return;
  }
  for (i = 0; i != v4; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0)
      v6 = (_QWORD *)MEMORY[0x20BD1CAB4](i, v3);
    else
      v6 = *(id *)(v3 + 8 * i + 32);
    v7 = v6;
    sub_209EF5BF8(i, v6, (uint64_t)v1);

  }
LABEL_10:
  sub_209EF5EF0((uint64_t)&v15);
  sub_209EF5EF0((uint64_t)&v15);
  v8 = (void *)v1[7];
  if (v8)
  {
    v9 = v8;
    v10 = objc_msgSend(a1, sel_headerView);
    objc_msgSend(v10, sel_setIcon_accessibilityLabel_, v9, 0);

    v11 = (void *)v1[9];
    if (v11)
    {
      v12 = v11;
      v13 = objc_msgSend(a1, sel_headerView);
      v14 = v12;
      objc_msgSend(v13, sel_setTintColor_, v14);

    }
  }
}

id sub_209EF6118(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  char **v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 *v22;
  void *v23;
  unint64_t v24;
  void *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v33;
  uint64_t v34;
  void *v35;
  void *v36;
  id v37;
  void *v38;
  uint64_t v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  void *v44;
  id v45;
  void *v46;
  id v47;
  _QWORD *v48;
  _QWORD *v49;
  void *v50;
  char v51;
  uint64_t v52;
  id v53;
  void *v54;
  id v55;
  void (*v56)(id);
  uint64_t v57;
  __int128 v58;
  _QWORD *v59;
  _QWORD *v60;
  char *v61;
  int v62;
  void *v63;
  id v64;
  void *v65;
  id v66;
  id v67;
  _QWORD v69[2];
  __int128 v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  id v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  __int128 v83;
  char v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  char v88;
  id v89;
  char v90;
  unint64_t v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  unint64_t v100;
  id v101;
  _QWORD *v102;

  v2 = v1;
  v73 = sub_209F66E98();
  v72 = *(_QWORD *)(v73 - 8);
  MEMORY[0x24BDAC7A8](v73, v4);
  v71 = (char *)v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_209F67018();
  MEMORY[0x24BDAC7A8](v6, v7);
  v8 = (id)(*(uint64_t (**)(uint64_t))(v1 + 120))(v1);
  v9 = &selRef_addAlertElement_;
  v10 = objc_msgSend(v8, sel_headerView);
  objc_msgSend(v10, sel_setAllowFullWidthIcon_, 1);

  objc_msgSend(v8, sel_setShouldMoveHeaderViewTitleToNavigationTitleWhenScrolledOffScreen_, 0);
  v11 = *(void **)(v2 + 72);
  if (v11)
  {
    v12 = v11;
    v13 = objc_msgSend(v8, sel_headerView);
    objc_msgSend(v13, sel_setTintColor_, v12);

  }
  v14 = *(_QWORD *)(v2 + 88);
  v15 = *(unsigned __int8 *)(v2 + 96);
  v76 = a1;
  v69[0] = v2;
  v74 = v8;
  if (!v15)
  {
    *(_QWORD *)&v92 = v14;
    v40 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_2545BB368));
    sub_209EF5730(v14, 0);
    swift_retain();
    v41 = (void *)sub_209F66F4C();
    sub_209F6700C();
    sub_209F66F40();
    objc_msgSend(v8, sel_addChildViewController_, v41);
    v42 = objc_msgSend(v8, sel_contentView);
    v43 = objc_msgSend(v41, sel_view);
    if (v43)
    {
      v44 = v43;
      objc_msgSend(v42, sel_addSubview_, v43);

      v45 = objc_msgSend(v41, sel_view);
      if (v45)
      {
        v46 = v45;
        v47 = objc_msgSend(v8, sel_contentView);
        sub_209EF6F84(v47);

        objc_msgSend(v41, sel_didMoveToParentViewController_, v8);
        sub_209EF76E8(v14, 0);
        goto LABEL_17;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    JUMPOUT(0x209EF6EB0);
  }
  if (v15 == 1)
  {
    v82 = *(_QWORD *)(v14 + 16);
    if (v82)
    {
      v16 = 1;
      sub_209EF5730(v14, 1);
      swift_bridgeObjectRetain();
      v17 = *(_OWORD *)(v14 + 112);
      v96 = *(_OWORD *)(v14 + 96);
      v97 = v17;
      v18 = *(_OWORD *)(v14 + 144);
      v98 = *(_OWORD *)(v14 + 128);
      v99 = v18;
      v19 = *(_OWORD *)(v14 + 48);
      v92 = *(_OWORD *)(v14 + 32);
      v93 = v19;
      v20 = *(_OWORD *)(v14 + 64);
      v21 = *(_OWORD *)(v14 + 80);
      v75 = v14;
      v22 = (__int128 *)(v14 + 160);
      v94 = v20;
      v95 = v21;
      do
      {
        v33 = v95;
        v34 = *((_QWORD *)&v96 + 1);
        if (v96 == 1)
        {
          sub_209EF7704((uint64_t)&v92);
          v23 = (void *)sub_209F672A0();
          v24 = sub_209F672A0();
          v25 = (void *)sub_209F672A0();
          objc_msgSend(v74, sel_addBulletedListItemWithTitle_description_symbolName_tintColor_, v23, v24, v25, v34);

          sub_209EF7798((uint64_t)&v92);
          if (v82 == v16)
            goto LABEL_13;
        }
        else
        {
          v81 = *((_QWORD *)&v99 + 1);
          LODWORD(v80) = v99;
          v79 = (id)*((_QWORD *)&v98 + 1);
          LODWORD(v78) = v98;
          v77 = *((_QWORD *)&v97 + 1);
          v24 = v97;
          sub_209EF7704((uint64_t)&v92);
          v35 = (void *)sub_209F672A0();
          v36 = (void *)sub_209F672A0();
          v83 = v33;
          v84 = 0;
          v85 = v34;
          v86 = v24;
          v87 = v77;
          v88 = v78;
          v89 = v79;
          v90 = v80;
          v91 = v81;
          v37 = RUIImage.preloadedImage.getter();
          if (!v37)
            v37 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD640]), sel_init);
          v38 = v37;
          objc_msgSend(v74, sel_addBulletedListItemWithTitle_description_image_, v35, v36, v37, v69[0]);

          sub_209EF7798((uint64_t)&v92);
          if (v82 == v16)
          {
LABEL_13:
            v39 = v75;
            sub_209EF76E8(v75, 1);
            sub_209EF76E8(v39, 1);
            v2 = v69[0];
            v8 = v74;
            v9 = &selRef_addAlertElement_;
            goto LABEL_17;
          }
        }
        v26 = *v22;
        v27 = v22[1];
        v28 = v22[3];
        v94 = v22[2];
        v95 = v28;
        v92 = v26;
        v93 = v27;
        v29 = v22[4];
        v30 = v22[5];
        v31 = v22[7];
        v98 = v22[6];
        v99 = v31;
        v96 = v29;
        v97 = v30;
        v22 += 8;
      }
      while (!__OFADD__(v16++, 1));
      __break(1u);
      goto LABEL_33;
    }
  }
LABEL_17:
  sub_209EF6EC0(v2 + 80, (uint64_t)&v101);
  sub_209EF6EC0((uint64_t)&v101, (uint64_t)&v102);
  v48 = v102;
  v49 = (_QWORD *)MEMORY[0x24BEE4EA0];
  if (v102)
  {
    v50 = *(void **)(v2 + 136);
    v51 = *(_BYTE *)(v2 + 144);
    sub_209EF7698(&v101);
    sub_209EEC018(v50, v51);
    v52 = sub_209EF5940(v50, v51, (uint64_t *)&unk_2545BB7B0, (void (*)(void *, _QWORD))sub_209EF8604);
    sub_209EEC698(v50, v51);
    (*(void (**)(uint64_t))((*v49 & *v48) + 0x78))(v52);
    v53 = objc_msgSend(v8, v9[336]);
    v54 = (void *)(*(uint64_t (**)(void))((*v49 & *v48) + 0x90))();
    objc_msgSend(v53, sel_addAccessoryButton_, v54);

    sub_209EF76C0(&v101);
  }
  v55 = objc_msgSend(v8, sel_buttonTray, v69[0]);
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB360);
  sub_209F67024();
  v56 = *(void (**)(id))(*(_QWORD *)v92 + 128);
  v79 = v55;
  v56(v55);
  swift_release();
  v24 = *(_QWORD *)(v2 + 48);
  v100 = v24;
  if (!(v24 >> 62))
  {
    v57 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    goto LABEL_21;
  }
LABEL_33:
  swift_bridgeObjectRetain();
  v57 = sub_209F677EC();
LABEL_21:
  v59 = (_QWORD *)MEMORY[0x24BEE4EA0];
  if (v57)
  {
    v81 = v24 & 0xC000000000000001;
    v77 = v69[0] + 136;
    *(_QWORD *)&v58 = 136315138;
    v70 = v58;
    v69[1] = MEMORY[0x24BEE4AD8] + 8;
    v78 = v24;
    v80 = v57;
    if ((v24 & 0xC000000000000001) != 0)
      v60 = (_QWORD *)MEMORY[0x20BD1CAB4](0, v24);
    else
      v60 = *(id *)(v24 + 32);
    v61 = (char *)&loc_209EF69CC
        + *((int *)qword_209EF6EB0 + (*(unsigned __int8 (**)(_QWORD *))((*v59 & *v60) + 0x130))(v60));
    __asm { BR              X9 }
  }
  sub_209EF5EF0((uint64_t)&v100);
  v62 = *(unsigned __int8 *)(v69[0] + 112);
  if (v62 == 255)
  {

    v64 = v74;
  }
  else
  {
    v63 = *(void **)(v69[0] + 104);
    v64 = v74;
    if ((v62 & 1) != 0)
    {
      sub_209EF5764(v63, 1);
      v67 = v79;
      objc_msgSend(v79, sel_addHeaderView_, v63);

      sub_209EF6F08(v63, v62);
    }
    else
    {
      sub_209EF5764(v63, 0);
      v65 = (void *)sub_209F673FC();
      sub_209EF6F08(v63, v62);
      v66 = v79;
      objc_msgSend(v79, sel_setPrivacyLinkForBundles_, v65);

    }
  }
  sub_209EF5F78(v64);
  return v64;
}

uint64_t sub_209EF6EC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB358);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_209EF6F08(void *a1, unsigned __int8 a2)
{
  if (a2 != 255)
    sub_209EF6F20(a1, a2 & 1);
}

void sub_209EF6F20(id a1, char a2)
{
  if ((a2 & 1) != 0)

  else
    swift_bridgeObjectRelease();
}

uint64_t sub_209EF6F2C(uint64_t a1)
{
  sub_209EEC018(*(id *)a1, *(_BYTE *)(a1 + 8));
  return a1;
}

uint64_t sub_209EF6F58(uint64_t a1)
{
  sub_209EEC698(*(id *)a1, *(_BYTE *)(a1 + 8));
  return a1;
}

void sub_209EF6F84(void *a1)
{
  void *v1;
  void *v2;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;

  v2 = v1;
  objc_msgSend(v1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v4 = (void *)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545BB750);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_209F763D0;
  v6 = objc_msgSend(v2, sel_topAnchor);
  v7 = objc_msgSend(a1, sel_topAnchor);
  v8 = objc_msgSend(v6, sel_constraintEqualToAnchor_, v7);

  *(_QWORD *)(v5 + 32) = v8;
  v9 = objc_msgSend(v2, sel_leftAnchor);
  v10 = objc_msgSend(a1, sel_leftAnchor);
  v11 = objc_msgSend(v9, sel_constraintEqualToAnchor_, v10);

  *(_QWORD *)(v5 + 40) = v11;
  v12 = objc_msgSend(v2, sel_rightAnchor);
  v13 = objc_msgSend(a1, sel_rightAnchor);
  v14 = objc_msgSend(v12, sel_constraintEqualToAnchor_, v13);

  *(_QWORD *)(v5 + 48) = v14;
  v15 = objc_msgSend(v2, sel_bottomAnchor);
  v16 = objc_msgSend(a1, sel_bottomAnchor);
  v17 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v16);

  *(_QWORD *)(v5 + 56) = v17;
  sub_209F67414();
  sub_209EE3644();
  v18 = (id)sub_209F673FC();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_activateConstraints_, v18);

}

__n128 sub_209EF71CC@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, uint64_t a11, char a12, uint64_t a13, char a14, __n128 a15, uint64_t a16, char a17, uint64_t a18, char a19)
{
  __n128 result;
  uint64_t v30;
  uint64_t v31;

  sub_209EF55A4(MEMORY[0x24BEE4AF8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB350);
  sub_209F67198();
  *(_QWORD *)a9 = v30;
  *(_QWORD *)(a9 + 8) = v31;
  *(_QWORD *)(a9 + 16) = a1;
  *(_QWORD *)(a9 + 24) = a2;
  *(_QWORD *)(a9 + 32) = a3;
  *(_QWORD *)(a9 + 40) = a4;
  *(_QWORD *)(a9 + 48) = a5;
  *(_QWORD *)(a9 + 56) = a6;
  *(double *)(a9 + 64) = a10;
  *(_QWORD *)(a9 + 72) = a7;
  *(_QWORD *)(a9 + 80) = a8;
  *(_QWORD *)(a9 + 88) = a11;
  *(_BYTE *)(a9 + 96) = a12;
  *(_QWORD *)(a9 + 104) = a13;
  *(_BYTE *)(a9 + 112) = a14;
  result = a15;
  *(__n128 *)(a9 + 120) = a15;
  *(_QWORD *)(a9 + 136) = a16;
  *(_BYTE *)(a9 + 144) = a17 & 1;
  *(_QWORD *)(a9 + 152) = a18;
  *(_BYTE *)(a9 + 160) = a19 & 1;
  return result;
}

id sub_209EF730C(uint64_t a1)
{
  return sub_209EF6118(a1);
}

void sub_209EF7364(void *a1)
{
  sub_209EF5F78(a1);
}

uint64_t sub_209EF73C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for WelcomeController.Coordinator();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(result + 24) = 0;
  *a1 = result;
  return result;
}

uint64_t sub_209EF7400()
{
  return sub_209F66FC4();
}

uint64_t sub_209EF7438()
{
  sub_209EF8108();
  return sub_209F67000();
}

uint64_t sub_209EF7488()
{
  sub_209EF8108();
  return sub_209F66FD0();
}

void sub_209EF74D8()
{
  sub_209EF8108();
  sub_209F66FF4();
  __break(1u);
}

unint64_t sub_209EF74FC(uint64_t a1)
{
  uint64_t v2;

  sub_209F66A90();
  sub_209EF85C0(&qword_2545BB390, MEMORY[0x24BDCDAF0]);
  v2 = sub_209F67264();
  return sub_209EF7560(a1, v2);
}

unint64_t sub_209EF7560(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, unint64_t, uint64_t);
  char v15;
  _QWORD v17[2];

  v3 = v2;
  v17[1] = a1;
  v5 = sub_209F66A90();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = -1 << *(_BYTE *)(v3 + 32);
  v11 = a2 & ~v10;
  if (((*(_QWORD *)(v3 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
  {
    v12 = ~v10;
    v13 = *(_QWORD *)(v6 + 72);
    v14 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v14(v9, *(_QWORD *)(v3 + 48) + v13 * v11, v5);
      sub_209EF85C0((unint64_t *)&qword_2545BB348, MEMORY[0x24BDCDB00]);
      v15 = sub_209F67294();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      if ((v15 & 1) != 0)
        break;
      v11 = (v11 + 1) & v12;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  }
  return v11;
}

id *sub_209EF7698(id *a1)
{
  id v2;

  v2 = *a1;
  return a1;
}

id *sub_209EF76C0(id *a1)
{

  return a1;
}

uint64_t sub_209EF76E8(uint64_t a1, char a2)
{
  uint64_t result;

  if (a2 == 1)
    return swift_bridgeObjectRelease();
  if (!a2)
    return swift_release();
  return result;
}

uint64_t sub_209EF7704(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_209EEAFF0();
  swift_retain();
  v3 = v2;
  swift_retain();
  return a1;
}

uint64_t sub_209EF7798(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 72);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_209EEB098();
  swift_release();

  swift_release();
  return a1;
}

unint64_t sub_209EF7830()
{
  unint64_t result;

  result = qword_2545BB370;
  if (!qword_2545BB370)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F774B8, &type metadata for WelcomeController);
    atomic_store(result, (unint64_t *)&qword_2545BB370);
  }
  return result;
}

uint64_t sub_209EF7874()
{
  return MEMORY[0x24BDF5558];
}

uint64_t initializeBufferWithCopyOfBuffer for ImageBadge(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

void destroy for WelcomeController(uint64_t a1)
{
  int v2;

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_209EF76E8(*(_QWORD *)(a1 + 88), *(_BYTE *)(a1 + 96));
  v2 = *(unsigned __int8 *)(a1 + 112);
  if (v2 != 255)
    sub_209EF6F20(*(id *)(a1 + 104), v2 & 1);
  swift_release();
  sub_209EEC698(*(id *)(a1 + 136), *(_BYTE *)(a1 + 144));
  sub_209EEC698(*(id *)(a1 + 152), *(_BYTE *)(a1 + 160));
}

uint64_t initializeWithCopy for WelcomeController(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  char v10;
  id v11;
  id v12;
  id v13;
  id *v14;
  int v15;
  char v16;
  id v17;
  uint64_t v18;
  void *v19;
  char v20;
  void *v21;
  char v22;
  uint64_t v24;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  v8 = *(void **)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  v9 = *(void **)(a2 + 80);
  v24 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v9;
  v10 = *(_BYTE *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = v7;
  v12 = v8;
  v13 = v9;
  sub_209EF5730(v24, v10);
  *(_QWORD *)(a1 + 88) = v24;
  *(_BYTE *)(a1 + 96) = v10;
  v14 = (id *)(a2 + 104);
  v15 = *(unsigned __int8 *)(a2 + 112);
  if (v15 == 255)
  {
    *(_QWORD *)(a1 + 104) = *v14;
    *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  }
  else
  {
    v16 = v15 & 1;
    v17 = *v14;
    sub_209EF5764(*v14, v15 & 1);
    *(_QWORD *)(a1 + 104) = v17;
    *(_BYTE *)(a1 + 112) = v16;
  }
  v18 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v18;
  v19 = *(void **)(a2 + 136);
  v20 = *(_BYTE *)(a2 + 144);
  swift_retain();
  sub_209EEC018(v19, v20);
  *(_QWORD *)(a1 + 136) = v19;
  *(_BYTE *)(a1 + 144) = v20;
  v21 = *(void **)(a2 + 152);
  v22 = *(_BYTE *)(a2 + 160);
  sub_209EEC018(v21, v22);
  *(_QWORD *)(a1 + 152) = v21;
  *(_BYTE *)(a1 + 160) = v22;
  return a1;
}

uint64_t assignWithCopy for WelcomeController(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  void **v17;
  void **v18;
  int v19;
  char v20;
  void *v21;
  char v22;
  void *v23;
  void *v24;
  char v25;
  char v26;
  void *v27;
  uint64_t v28;
  void *v29;
  char v30;
  void *v31;
  char v32;
  void *v33;
  char v34;
  void *v35;
  char v36;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 56);
  v5 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v5;
  v6 = v5;

  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v7 = *(void **)(a1 + 72);
  v8 = *(void **)(a2 + 72);
  *(_QWORD *)(a1 + 72) = v8;
  v9 = v8;

  v10 = *(void **)(a1 + 80);
  v11 = *(void **)(a2 + 80);
  *(_QWORD *)(a1 + 80) = v11;
  v12 = v11;

  v13 = *(_QWORD *)(a2 + 88);
  v14 = *(_BYTE *)(a2 + 96);
  sub_209EF5730(v13, v14);
  v15 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = v13;
  v16 = *(_BYTE *)(a1 + 96);
  *(_BYTE *)(a1 + 96) = v14;
  sub_209EF76E8(v15, v16);
  v17 = (void **)(a1 + 104);
  v18 = (void **)(a2 + 104);
  v19 = *(unsigned __int8 *)(a2 + 112);
  if (*(unsigned __int8 *)(a1 + 112) == 255)
  {
    if (v19 == 255)
    {
      v21 = *v18;
      *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
      *v17 = v21;
    }
    else
    {
      v26 = v19 & 1;
      v27 = *v18;
      sub_209EF5764(v27, v19 & 1);
      *(_QWORD *)(a1 + 104) = v27;
      *(_BYTE *)(a1 + 112) = v26;
    }
  }
  else if (v19 == 255)
  {
    sub_209EF7CC8(a1 + 104);
    v20 = *(_BYTE *)(a2 + 112);
    *v17 = *v18;
    *(_BYTE *)(a1 + 112) = v20;
  }
  else
  {
    v22 = v19 & 1;
    v23 = *v18;
    sub_209EF5764(v23, v19 & 1);
    v24 = *(void **)(a1 + 104);
    v25 = *(_BYTE *)(a1 + 112);
    *(_QWORD *)(a1 + 104) = v23;
    *(_BYTE *)(a1 + 112) = v22;
    sub_209EF6F20(v24, v25);
  }
  v28 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v28;
  swift_retain();
  swift_release();
  v29 = *(void **)(a2 + 136);
  v30 = *(_BYTE *)(a2 + 144);
  sub_209EEC018(v29, v30);
  v31 = *(void **)(a1 + 136);
  v32 = *(_BYTE *)(a1 + 144);
  *(_QWORD *)(a1 + 136) = v29;
  *(_BYTE *)(a1 + 144) = v30;
  sub_209EEC698(v31, v32);
  v33 = *(void **)(a2 + 152);
  v34 = *(_BYTE *)(a2 + 160);
  sub_209EEC018(v33, v34);
  v35 = *(void **)(a1 + 152);
  v36 = *(_BYTE *)(a1 + 160);
  *(_QWORD *)(a1 + 152) = v33;
  *(_BYTE *)(a1 + 160) = v34;
  sub_209EEC698(v35, v36);
  return a1;
}

uint64_t sub_209EF7CC8(uint64_t a1)
{
  sub_209EF6F20(*(id *)a1, *(_BYTE *)(a1 + 8));
  return a1;
}

__n128 __swift_memcpy161_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  result = (__n128)a2[7];
  v8 = a2[8];
  v9 = a2[9];
  *(_BYTE *)(a1 + 160) = *((_BYTE *)a2 + 160);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for WelcomeController(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  char v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;
  int v13;
  int v14;
  void *v15;
  char v16;
  void *v17;
  char v18;
  char v19;
  void *v20;
  char v21;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  v6 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);

  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v7 = *(void **)(a1 + 72);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);

  v8 = *(void **)(a1 + 80);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);

  v9 = *(_BYTE *)(a2 + 96);
  v10 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v11 = *(_BYTE *)(a1 + 96);
  *(_BYTE *)(a1 + 96) = v9;
  sub_209EF76E8(v10, v11);
  v12 = (_QWORD *)(a2 + 104);
  v13 = *(unsigned __int8 *)(a1 + 112);
  if (v13 != 255)
  {
    v14 = *(unsigned __int8 *)(a2 + 112);
    if (v14 != 255)
    {
      v15 = *(void **)(a1 + 104);
      *(_QWORD *)(a1 + 104) = *v12;
      *(_BYTE *)(a1 + 112) = v14 & 1;
      sub_209EF6F20(v15, v13 & 1);
      goto LABEL_6;
    }
    sub_209EF7CC8(a1 + 104);
  }
  *(_QWORD *)(a1 + 104) = *v12;
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
LABEL_6:
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  swift_release();
  v16 = *(_BYTE *)(a2 + 144);
  v17 = *(void **)(a1 + 136);
  v18 = *(_BYTE *)(a1 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 144) = v16;
  sub_209EEC698(v17, v18);
  v19 = *(_BYTE *)(a2 + 160);
  v20 = *(void **)(a1 + 152);
  v21 = *(_BYTE *)(a1 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_BYTE *)(a1 + 160) = v19;
  sub_209EEC698(v20, v21);
  return a1;
}

uint64_t getEnumTagSinglePayload for WelcomeController(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 161))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WelcomeController(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 160) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 161) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 161) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for WelcomeController()
{
  return &type metadata for WelcomeController;
}

uint64_t initializeBufferWithCopyOfBuffer for MultiChoiceView.ButtonTrayHeader(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_209EF5764(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

void destroy for MultiChoiceView.ButtonTrayHeader(uint64_t a1)
{
  sub_209EF6F20(*(id *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t assignWithCopy for MultiChoiceView.ButtonTrayHeader(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;
  void *v5;
  char v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_209EF5764(*(id *)a2, v4);
  v5 = *(void **)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_209EF6F20(v5, v6);
  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for MultiChoiceView.ButtonTrayHeader(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  char v6;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v5 = *(void **)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_209EF6F20(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for MultiChoiceView.ButtonTrayHeader(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MultiChoiceView.ButtonTrayHeader(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_209EF80E4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_209EF80EC(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for WelcomeController.ButtonTrayHeader()
{
  return &type metadata for WelcomeController.ButtonTrayHeader;
}

unint64_t sub_209EF8108()
{
  unint64_t result;

  result = qword_2545BB378;
  if (!qword_2545BB378)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F77440, &type metadata for WelcomeController);
    atomic_store(result, (unint64_t *)&qword_2545BB378);
  }
  return result;
}

uint64_t sub_209EF814C()
{
  uint64_t v0;
  int v1;

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_209EF76E8(*(_QWORD *)(v0 + 104), *(_BYTE *)(v0 + 112));
  v1 = *(unsigned __int8 *)(v0 + 128);
  if (v1 != 255)
    sub_209EF6F20(*(id *)(v0 + 120), v1 & 1);
  swift_release();
  sub_209EEC698(*(id *)(v0 + 152), *(_BYTE *)(v0 + 160));
  sub_209EEC698(*(id *)(v0 + 168), *(_BYTE *)(v0 + 176));
  return swift_deallocObject();
}

void sub_209EF81EC(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  char v4;
  void *v5;
  void *v6;
  _QWORD v7[6];

  v3 = *(void **)(v1 + 152);
  v4 = *(_BYTE *)(v1 + 160);
  sub_209EEC018(v3, v4);
  v5 = (void *)sub_209EF5940(v3, v4, (uint64_t *)&unk_2545BB7B0, (void (*)(void *, _QWORD))sub_209EF8604);
  sub_209EEC698(v3, v4);
  if (v5)
  {
    v7[4] = nullsub_1;
    v7[5] = 0;
    v7[0] = MEMORY[0x24BDAC760];
    v7[1] = 1107296256;
    v7[2] = sub_209EF5F18;
    v7[3] = &block_descriptor_0;
    v6 = _Block_copy(v7);
    objc_msgSend(v5, sel_activateElement_completion_, a1, v6);
    _Block_release(v6);

  }
}

uint64_t sub_209EF82C4(uint64_t a1)
{
  void *v2;
  void *v3;
  char v4;
  unsigned __int8 v5;
  id v6;
  id v7;
  id v8;
  uint64_t v10;
  void *v11;
  char v12;
  void *v13;
  char v14;
  void *v15;

  v2 = *(void **)(a1 + 56);
  v3 = *(void **)(a1 + 72);
  v10 = *(_QWORD *)(a1 + 88);
  v11 = *(void **)(a1 + 104);
  v13 = *(void **)(a1 + 136);
  v12 = *(_BYTE *)(a1 + 144);
  v15 = *(void **)(a1 + 152);
  v14 = *(_BYTE *)(a1 + 160);
  v4 = *(_BYTE *)(a1 + 96);
  v5 = *(_BYTE *)(a1 + 112);
  v6 = *(id *)(a1 + 80);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = v2;
  v8 = v3;
  sub_209EF5730(v10, v4);
  sub_209EF574C(v11, v5);
  swift_retain();
  sub_209EEC018(v13, v12);
  sub_209EEC018(v15, v14);
  return a1;
}

uint64_t sub_209EF83C8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_209EF83EC()
{
  sub_209EF8404((SEL *)&selRef_showsBusyIndicator);
}

void sub_209EF83F8()
{
  sub_209EF8404((SEL *)&selRef_hidesBusyIndicator);
}

void sub_209EF8404(SEL *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  void *v5;

  swift_beginAccess();
  v3 = MEMORY[0x20BD1DC9C](v1 + 16);
  if (v3)
  {
    v4 = (void *)v3;
    objc_opt_self();
    v5 = (void *)swift_dynamicCastObjCClass();
    if (v5)
      objc_msgSend(v5, *a1);

  }
}

void sub_209EF8478(char a1)
{
  uint64_t v1;
  void *v3;
  void *v4;

  swift_beginAccess();
  v3 = (void *)MEMORY[0x20BD1DC9C](v1 + 16);
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, sel_setEnabled_, a1 & 1);

  }
}

void sub_209EF84D8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;

  swift_beginAccess();
  v1 = MEMORY[0x20BD1DC9C](v0 + 16);
  if (v1)
  {
    v2 = (void *)v1;
    v3 = (void *)sub_209F672A0();
    objc_msgSend(v2, sel_setTitle_forState_, v3, 0);

  }
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t sub_209EF8578(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB380);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_209EF85C0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_209F66A90();
    result = MEMORY[0x20BD1DB1C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t BuddyMLContent.source.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  sub_209EE4050(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
  return v1;
}

uint64_t BuddyMLContent.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BuddyMLContent(0) + 20);
  v4 = sub_209F66A90();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for BuddyMLContent(uint64_t a1)
{
  return sub_209EF257C(a1, (uint64_t *)&unk_2545BEBD0);
}

uint64_t BuddyMLContent.init(source:url:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  char *v5;
  uint64_t v6;

  *a4 = a1;
  a4[1] = a2;
  v5 = (char *)a4 + *(int *)(type metadata accessor for BuddyMLContent(0) + 20);
  v6 = sub_209F66A90();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5, a3, v6);
}

uint64_t BuddyMLContent.hash(into:)()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *v0;
  v2 = v0[1];
  sub_209EE4050(*v0, v2);
  sub_209F66AC0();
  sub_209EE4928(v1, v2);
  type metadata accessor for BuddyMLContent(0);
  sub_209F66A90();
  sub_209EE4ABC(&qword_2545BB390, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  return sub_209F67270();
}

uint64_t BuddyMLContent.hashValue.getter()
{
  sub_209F67B10();
  sub_209F66AC0();
  type metadata accessor for BuddyMLContent(0);
  sub_209F66A90();
  sub_209EE4ABC(&qword_2545BB390, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_209F67270();
  return sub_209F67B28();
}

uint64_t sub_209EF8814()
{
  sub_209F67B10();
  sub_209F66AC0();
  sub_209F66A90();
  sub_209EE4ABC(&qword_2545BB390, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_209F67270();
  return sub_209F67B28();
}

uint64_t sub_209EF8898()
{
  sub_209F66AC0();
  sub_209F66A90();
  sub_209EE4ABC(&qword_2545BB390, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  return sub_209F67270();
}

uint64_t sub_209EF8908()
{
  sub_209F67B10();
  sub_209F66AC0();
  sub_209F66A90();
  sub_209EE4ABC(&qword_2545BB390, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_209F67270();
  return sub_209F67B28();
}

uint64_t RemoteUIAttributes.clientInfo.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RemoteUIAttributes.rawAttributes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RemoteUIAttributes.buddyMLContent.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for RemoteUIAttributes(0) + 24);
  return sub_209EF9334(v3, a1);
}

uint64_t RemoteUIAttributes.buddyMLContent.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for RemoteUIAttributes(0) + 24);
  return sub_209EF937C(a1, v3);
}

uint64_t (*RemoteUIAttributes.buddyMLContent.modify())()
{
  type metadata accessor for RemoteUIAttributes(0);
  return nullsub_1;
}

uint64_t RemoteUIAttributes.init(clientInfo:rawAttributes:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  char *v6;
  uint64_t v7;
  uint64_t result;

  v6 = (char *)a3 + *(int *)(type metadata accessor for RemoteUIAttributes(0) + 24);
  v7 = type metadata accessor for BuddyMLContent(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  *a3 = a1;
  a3[1] = a2;
  return result;
}

uint64_t RemoteUIAttributes.init(clientInfo:rawAttributes:buddyMLContent:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;

  v8 = (uint64_t)a4 + *(int *)(type metadata accessor for RemoteUIAttributes(0) + 24);
  v9 = type metadata accessor for BuddyMLContent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  *a4 = a1;
  a4[1] = a2;
  return sub_209EF937C(a3, v8);
}

uint64_t RemoteUIHookResponse.additionalPayload.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RemoteUIHookResponse.additionalPayload.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*RemoteUIHookResponse.additionalPayload.modify())()
{
  return nullsub_1;
}

uint64_t RemoteUIHookResponse.makeURLRequest.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t RemoteUIHookResponse.makeURLRequest.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = result;
  return result;
}

uint64_t (*RemoteUIHookResponse.makeURLRequest.modify())()
{
  return nullsub_1;
}

uint64_t RemoteUIHookResponse.init(additionalPayload:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

uint64_t RemoteUIHook.shouldMatchModel(name:attributes:)()
{
  return 0;
}

uint64_t sub_209EF8B74(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_209EE061C;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t RemoteUIHook.processObjectModel(name:attributes:hostingController:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_209EF8BEC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)v1 = 0;
  *(_BYTE *)(v1 + 8) = 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_209EF8C08()
{
  uint64_t v1;

  sub_209EF93C4();
  sub_209F66EA4();
  return v1;
}

uint64_t sub_209EF8C40()
{
  sub_209EF93C4();
  return sub_209F66EB0();
}

void sub_209EF8C78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_209EF8CD8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  BOOL *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  __int16 v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v42 = v39;
  v43 = v40;
  v44 = BYTE2(v40);
  v45 = BYTE3(v40);
  v46 = BYTE4(v40);
  v47 = BYTE5(v40);
  if (!v38)
  {
    __break(1u);
    JUMPOUT(0x209EF8EBCLL);
  }
  result = memcmp(v38, &v42, BYTE6(v40));
  *v37 = (_DWORD)result == 0;
  return result;
}

void sub_209EF8EE0(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_209EF8F3C()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  char v11;
  char v12;
  char v13;

  v8 = v3;
  v9 = v4;
  v10 = BYTE2(v4);
  v11 = BYTE3(v4);
  v12 = BYTE4(v4);
  v13 = BYTE5(v4);
  sub_209EF8C78((uint64_t)&v8, (uint64_t)&v8 + BYTE6(v4), v1, v0);
  sub_209EE4928(v1, v0);
  if (!v2)
    v5 = v7;
  return v5 & 1;
}

uint64_t sub_209EF9104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  result = sub_209F669C4();
  v11 = result;
  if (result)
  {
    result = sub_209F669DC();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = sub_209F669D0();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v11 + v15;
  if (v11)
    v17 = v16;
  else
    v17 = 0;
  sub_209EF8C78(v11, v17, a4, a5);
  if (!v5)
    v18 = v19;
  return v18 & 1;
}

void _s8RemoteUI14BuddyMLContentV2eeoiySbAC_ACtFZ_0(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_209EF9200()
{
  unint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_209EF9234 + *((int *)qword_209EF9310 + (v0 >> 62))))();
}

uint64_t sub_209EF9244@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;

  if (a1 == BYTE6(v4))
  {
    if (a1 < 1 || (sub_209EE4050(v3, v4), sub_209EF8EE0(v1, v2), (v5 & 1) != 0))
    {
      type metadata accessor for BuddyMLContent(0);
      JUMPOUT(0x20BD1BE0CLL);
    }
  }
  return 0;
}

uint64_t type metadata accessor for RemoteUIAttributes(uint64_t a1)
{
  return sub_209EF257C(a1, qword_2545BEBE0);
}

uint64_t sub_209EF9334(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB398);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_209EF937C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB398);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_209EF93C4()
{
  unint64_t result;

  result = qword_2545BEAC0[0];
  if (!qword_2545BEAC0[0])
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F77684, &type metadata for RemoteUIHookKey);
    atomic_store(result, qword_2545BEAC0);
  }
  return result;
}

uint64_t sub_209EF9408()
{
  return sub_209EE4ABC(&qword_2545BB3A8, type metadata accessor for BuddyMLContent, (uint64_t)&protocol conformance descriptor for BuddyMLContent);
}

uint64_t *initializeBufferWithCopyOfBuffer for BuddyMLContent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *a2;
    v8 = a2[1];
    sub_209EE4050(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    v9 = *(int *)(a3 + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_209F66A90();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  }
  return a1;
}

uint64_t destroy for BuddyMLContent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_209EE4928(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_209F66A90();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t *initializeWithCopy for BuddyMLContent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = *a2;
  v7 = a2[1];
  sub_209EE4050(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_209F66A90();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  return a1;
}

uint64_t *assignWithCopy for BuddyMLContent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v6 = *a2;
  v7 = a2[1];
  sub_209EE4050(*a2, v7);
  v8 = *a1;
  v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_209EE4928(v8, v9);
  v10 = *(int *)(a3 + 20);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_209F66A90();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

_OWORD *initializeWithTake for BuddyMLContent(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_209F66A90();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t *assignWithTake for BuddyMLContent(uint64_t *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = *a1;
  v7 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_209EE4928(v6, v7);
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_209F66A90();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for BuddyMLContent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_209EF96F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 12)
  {
    v4 = *(_QWORD *)(a1 + 8) >> 60;
    if (((4 * (_DWORD)v4) & 0xC) != 0)
      return 16 - ((4 * (_DWORD)v4) & 0xC | (v4 >> 2));
    else
      return 0;
  }
  else
  {
    v8 = sub_209F66A90();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for BuddyMLContent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_209EF9788(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 12)
  {
    *(_QWORD *)result = 0;
    *((_QWORD *)result + 1) = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * (_DWORD)a2) << 60;
  }
  else
  {
    v7 = sub_209F66A90();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_209EF9804()
{
  uint64_t result;
  unint64_t v1;

  result = sub_209F66A90();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for RemoteUIAttributes(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(uint64_t *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = a1;
    a1[1] = a2[1];
    v6 = *(int *)(a3 + 24);
    v7 = (uint64_t *)((char *)a1 + v6);
    v8 = (uint64_t *)((char *)a2 + v6);
    v9 = type metadata accessor for BuddyMLContent(0);
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB398);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v13 = *v8;
      v14 = v8[1];
      sub_209EE4050(*v8, v14);
      *v7 = v13;
      v7[1] = v14;
      v15 = *(int *)(v9 + 20);
      v16 = (char *)v7 + v15;
      v17 = (char *)v8 + v15;
      v18 = sub_209F66A90();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v5;
}

uint64_t destroy for RemoteUIAttributes(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for BuddyMLContent(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5);
  if (!(_DWORD)result)
  {
    sub_209EE4928(*(_QWORD *)v4, *(_QWORD *)(v4 + 8));
    v7 = v4 + *(int *)(v5 + 20);
    v8 = sub_209F66A90();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  return result;
}

_QWORD *initializeWithCopy for RemoteUIAttributes(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 24);
  v6 = (_QWORD *)((char *)a1 + v5);
  v7 = (_QWORD *)((char *)a2 + v5);
  v8 = type metadata accessor for BuddyMLContent(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB398);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = *v7;
    v13 = v7[1];
    sub_209EE4050(*v7, v13);
    *v6 = v12;
    v6[1] = v13;
    v14 = *(int *)(v8 + 20);
    v15 = (char *)v6 + v14;
    v16 = (char *)v7 + v14;
    v17 = sub_209F66A90();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

_QWORD *assignWithCopy for RemoteUIAttributes(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for BuddyMLContent(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      v22 = *v8;
      v23 = v8[1];
      sub_209EE4050(*v8, v23);
      v24 = *v7;
      v25 = v7[1];
      *v7 = v22;
      v7[1] = v23;
      sub_209EE4928(v24, v25);
      v26 = *(int *)(v9 + 20);
      v27 = (char *)v7 + v26;
      v28 = (char *)v8 + v26;
      v29 = sub_209F66A90();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 24))(v27, v28, v29);
      return a1;
    }
    sub_209EF9CCC((uint64_t)v7);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB398);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    return a1;
  }
  v14 = *v8;
  v15 = v8[1];
  sub_209EE4050(*v8, v15);
  *v7 = v14;
  v7[1] = v15;
  v16 = *(int *)(v9 + 20);
  v17 = (char *)v7 + v16;
  v18 = (char *)v8 + v16;
  v19 = sub_209F66A90();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t sub_209EF9CCC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for BuddyMLContent(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *initializeWithTake for RemoteUIAttributes(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  _OWORD *v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  *a1 = *a2;
  v4 = *(int *)(a3 + 24);
  v5 = (_OWORD *)((char *)a1 + v4);
  v6 = (_OWORD *)((char *)a2 + v4);
  v7 = type metadata accessor for BuddyMLContent(0);
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB398);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    *v5 = *v6;
    v10 = *(int *)(v7 + 20);
    v11 = (char *)v5 + v10;
    v12 = (char *)v6 + v10;
    v13 = sub_209F66A90();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

_QWORD *assignWithTake for RemoteUIAttributes(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for BuddyMLContent(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      v20 = *v7;
      v21 = v7[1];
      *(_OWORD *)v7 = *(_OWORD *)v8;
      sub_209EE4928(v20, v21);
      v22 = *(int *)(v9 + 20);
      v23 = (char *)v7 + v22;
      v24 = (char *)v8 + v22;
      v25 = sub_209F66A90();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 40))(v23, v24, v25);
      return a1;
    }
    sub_209EF9CCC((uint64_t)v7);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB398);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    return a1;
  }
  *(_OWORD *)v7 = *(_OWORD *)v8;
  v14 = *(int *)(v9 + 20);
  v15 = (char *)v7 + v14;
  v16 = (char *)v8 + v14;
  v17 = sub_209F66A90();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteUIAttributes()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_209EF9F58(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB398);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for RemoteUIAttributes()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_209EF9FE4(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB398);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

void sub_209EFA05C()
{
  unint64_t v0;

  sub_209EFA0D4();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_209EFA0D4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2545BB3B0)
  {
    type metadata accessor for BuddyMLContent(255);
    v0 = sub_209F675DC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2545BB3B0);
  }
}

uint64_t initializeBufferWithCopyOfBuffer for RemoteUIHookResponse(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for RemoteUIHookResponse()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for RemoteUIHookResponse(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for RemoteUIHookResponse(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteUIHookResponse(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 9))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RemoteUIHookResponse(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteUIHookResponse()
{
  return &type metadata for RemoteUIHookResponse;
}

uint64_t dispatch thunk of RemoteUIHook.shouldMatchModel(name:attributes:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of RemoteUIHook.performAction(name:attributes:hostingController:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a7 + 16)
                                                                                              + *(_QWORD *)(a7 + 16));
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_209EE061C;
  return v17(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t dispatch thunk of RemoteUIHook.processObjectModel(name:attributes:hostingController:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a7 + 24)
                                                                                              + *(_QWORD *)(a7 + 24));
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_209EE06B8;
  return v17(a1, a2, a3, a4, a5, a6, a7);
}

ValueMetadata *type metadata accessor for RemoteUIHookKey()
{
  return &type metadata for RemoteUIHookKey;
}

uint64_t sub_209EFA420()
{
  _QWORD *v0;

  swift_getKeyPath();
  (*(void (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC0))();
  swift_release();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_209EFA49C@<X0>(_QWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  _QWORD *v4;

  v3 = *a1;
  swift_getKeyPath();
  (*(void (**)(void))((*MEMORY[0x24BEE4EA0] & *v3) + 0xC0))();
  swift_release();
  v4 = (_QWORD *)((char *)v3 + OBJC_IVAR___RUIInternalResourceLoader__resources);
  swift_beginAccess();
  *a2 = *v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_209EFA52C(uint64_t *a1, _QWORD **a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t KeyPath;
  void (*v5)(uint64_t, uint64_t (*)(), _QWORD *, uint64_t);
  _QWORD v7[6];

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath();
  v7[2] = v3;
  v7[3] = v2;
  v5 = *(void (**)(uint64_t, uint64_t (*)(), _QWORD *, uint64_t))((*MEMORY[0x24BEE4EA0] & *v3) + 0xC8);
  swift_bridgeObjectRetain();
  v5(KeyPath, sub_209EFE278, v7, MEMORY[0x24BEE4AE0] + 8);
  swift_bridgeObjectRelease();
  return swift_release();
}

unint64_t sub_209EFA5CC()
{
  unint64_t result;

  result = qword_2545BB3D0;
  if (!qword_2545BB3D0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2545BB3D0);
  }
  return result;
}

unint64_t sub_209EFA608()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2545BB3E8;
  if (!qword_2545BB3E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BB3E0);
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_2545BB3E8);
  }
  return result;
}

uint64_t sub_209EFA654()
{
  sub_209F675DC();
  return sub_209F6757C();
}

uint64_t sub_209EFA6C0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  int v10;
  __int128 v12;
  _OWORD v13[2];
  char v14;
  __int128 v15;
  __int128 v16;
  unsigned __int8 v17;

  v3 = v1[2];
  v4 = (_QWORD *)v1[3];
  v5 = v1[4];
  swift_getKeyPath();
  (*(void (**)(void))((*MEMORY[0x24BEE4EA0] & *v4) + 0xC0))();
  swift_release();
  v6 = (_QWORD *)((char *)v4 + OBJC_IVAR___RUIInternalResourceLoader__resources);
  swift_beginAccess();
  v7 = *v6;
  if (*(_QWORD *)(v7 + 16))
  {
    swift_bridgeObjectRetain();
    v8 = sub_209EF74FC(v5);
    if ((v9 & 1) != 0)
    {
      sub_209EE3528(*(_QWORD *)(v7 + 56) + 40 * v8, (uint64_t)&v15, &qword_2545BB488);
    }
    else
    {
      v15 = 0u;
      v16 = 0u;
      v17 = -1;
    }
    swift_bridgeObjectRelease();
    if (v17 != 255)
    {
      sub_209EE3528((uint64_t)&v15, (uint64_t)v13, &qword_2545BB4C0);
      if ((v14 & 1) == 0)
      {
        sub_209EE3510(v13, &v12);
        v10 = swift_dynamicCast();
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a1, v10 ^ 1u, 1, v3);
        return sub_209EE017C((uint64_t)&v15, &qword_2545BB4C0);
      }
      sub_209EE017C((uint64_t)v13, &qword_2545BB488);
    }
  }
  else
  {
    v15 = 0u;
    v16 = 0u;
    v17 = -1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a1, 1, 1, v3);
  return sub_209EE017C((uint64_t)&v15, &qword_2545BB4C0);
}

uint64_t sub_209EFA874()
{
  unsigned __int8 v1;

  sub_209F6757C();
  return v1;
}

uint64_t sub_209EFA8D4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  char v5;
  uint64_t result;

  v3 = *(_QWORD **)(v1 + 16);
  swift_getKeyPath();
  (*(void (**)(void))((*MEMORY[0x24BEE4EA0] & *v3) + 0xC0))();
  swift_release();
  swift_beginAccess();
  v4 = swift_bridgeObjectRetain();
  v5 = sub_209EFA98C(v4);
  result = swift_bridgeObjectRelease();
  *a1 = v5 & 1;
  return result;
}

uint64_t sub_209EFA98C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v26[40];
  int64_t v27;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB478);
  v4 = MEMORY[0x24BDAC7A8](v2, v3);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4, v7);
  v9 = (char *)&v24 - v8;
  v10 = *(_QWORD *)(a1 + 64);
  v25 = a1 + 64;
  v11 = 1 << *(_BYTE *)(a1 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v27 = (unint64_t)(v11 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v15 = 0;
  while (v13)
  {
    v16 = __clz(__rbit64(v13));
    v13 &= v13 - 1;
    v17 = v16 | (v15 << 6);
LABEL_5:
    v18 = *(_QWORD *)(a1 + 48);
    v19 = sub_209F66A90();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v9, v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, v19);
    sub_209EE3528(*(_QWORD *)(a1 + 56) + 40 * v17, (uint64_t)&v9[*(int *)(v2 + 48)], &qword_2545BB488);
    sub_209EF1E0C((uint64_t)v9, (uint64_t)v6, &qword_2545BB478);
    sub_209EE3528((uint64_t)&v6[*(int *)(v2 + 48)], (uint64_t)v26, &qword_2545BB488);
    v20 = v26[32];
    sub_209EE017C((uint64_t)v26, &qword_2545BB488);
    result = sub_209EE017C((uint64_t)v6, &qword_2545BB478);
    if ((_DWORD)v20 == 1)
      goto LABEL_24;
  }
  v21 = v15 + 1;
  if (__OFADD__(v15, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v21 >= v27)
    goto LABEL_23;
  v22 = *(_QWORD *)(v25 + 8 * v21);
  ++v15;
  if (v22)
    goto LABEL_22;
  v15 = v21 + 1;
  if (v21 + 1 >= v27)
    goto LABEL_23;
  v22 = *(_QWORD *)(v25 + 8 * v15);
  if (v22)
    goto LABEL_22;
  v15 = v21 + 2;
  if (v21 + 2 >= v27)
    goto LABEL_23;
  v22 = *(_QWORD *)(v25 + 8 * v15);
  if (v22)
    goto LABEL_22;
  v15 = v21 + 3;
  if (v21 + 3 >= v27)
    goto LABEL_23;
  v22 = *(_QWORD *)(v25 + 8 * v15);
  if (v22)
  {
LABEL_22:
    v13 = (v22 - 1) & v22;
    v17 = __clz(__rbit64(v22)) + (v15 << 6);
    goto LABEL_5;
  }
  v23 = v21 + 4;
  if (v23 >= v27)
  {
LABEL_23:
    v20 = 0;
LABEL_24:
    swift_release();
    return v20;
  }
  v22 = *(_QWORD *)(v25 + 8 * v23);
  if (v22)
  {
    v15 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    v15 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v15 >= v27)
      goto LABEL_23;
    v22 = *(_QWORD *)(v25 + 8 * v15);
    ++v23;
    if (v22)
      goto LABEL_22;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_209EFAC20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t result;
  _QWORD v22[2];
  uint64_t v23;
  dispatch_queue_t v24;
  _QWORD aBlock[6];

  v23 = a1;
  v6 = *(_QWORD *)(a3 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](a1, a2);
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_209F66A90();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9, v12);
  v13 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = *(dispatch_queue_t *)(v3 + OBJC_IVAR___RUIInternalResourceLoader_queue);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a2, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v23, a3);
  v14 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v15 = (v11 + *(unsigned __int8 *)(v6 + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v16 = swift_allocObject();
  v17 = (void *)v22[1];
  *(_QWORD *)(v16 + 16) = a3;
  *(_QWORD *)(v16 + 24) = v17;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v16 + v14, v13, v9);
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v16 + v15, v8, a3);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = sub_209EFB09C;
  *(_QWORD *)(v18 + 24) = v16;
  aBlock[4] = sub_209EFB1F8;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_209EFB218;
  aBlock[3] = &block_descriptor_1;
  v19 = _Block_copy(aBlock);
  v20 = v17;
  swift_retain();
  swift_release();
  dispatch_sync(v24, v19);
  _Block_release(v19);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v6 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_209EFAE40(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t *boxed_opaque_existential_0;
  _QWORD *v15;
  uint64_t v16[4];
  char v17;

  v8 = sub_209F66A90();
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0) + 8;
  (*(void (**)(char *, uint64_t))(v12 + 16))(v11, a2);
  v16[3] = a4;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v16);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(boxed_opaque_existential_0, a3, a4);
  v17 = 0;
  swift_getKeyPath();
  (*(void (**)(void))((*MEMORY[0x24BEE4EA0] & *a1) + 0xC0))();
  swift_release();
  v15 = a1;
  swift_getKeyPath();
  sub_209EE4ABC(&qword_2545BB410, (uint64_t (*)(uint64_t))type metadata accessor for InternalResourceLoader, (uint64_t)&protocol conformance descriptor for InternalResourceLoader);
  sub_209F66B38();
  swift_release();
  swift_beginAccess();
  sub_209EFB0F8((uint64_t)v16, (uint64_t)v11);
  swift_endAccess();
  v15 = a1;
  swift_getKeyPath();
  sub_209F66B2C();
  return swift_release();
}

uint64_t sub_209EFAFE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = sub_209F66A90();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v1 - 8);
  v6 = (v4 + *(_QWORD *)(v3 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);

  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v1);
  return swift_deallocObject();
}

uint64_t sub_209EFB09C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(sub_209F66A90() - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return sub_209EFAE40(*(_QWORD **)(v0 + 24), v0 + v3, v0 + ((v3 + *(_QWORD *)(v2 + 64) + v4) & ~v4), v1);
}

uint64_t sub_209EFB0F8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[40];

  if (*(unsigned __int8 *)(a1 + 32) == 255)
  {
    sub_209EE017C(a1, &qword_2545BB4C0);
    sub_209EFEAA4(a2, (uint64_t)v9);
    v7 = sub_209F66A90();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a2, v7);
    return sub_209EE017C((uint64_t)v9, &qword_2545BB4C0);
  }
  else
  {
    sub_209EF1E0C(a1, (uint64_t)v9, &qword_2545BB488);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v2;
    *v2 = 0x8000000000000000;
    sub_209EFF224((uint64_t)v9, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v8;
    swift_bridgeObjectRelease();
    v5 = sub_209F66A90();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a2, v5);
  }
}

uint64_t sub_209EFB1E8()
{
  return swift_deallocObject();
}

uint64_t sub_209EFB1F8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_209EFB218(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_209EFB250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  void *v17;
  char *v18;
  uint64_t result;
  uint64_t v20;
  dispatch_queue_t v21;
  _QWORD aBlock[6];

  v9 = sub_209F66A90();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9, v12);
  v21 = *(dispatch_queue_t *)&v4[OBJC_IVAR___RUIInternalResourceLoader_queue];
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  v13 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a4;
  *(_QWORD *)(v14 + 24) = v4;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v14 + v13, (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  v15 = (_QWORD *)(v14 + ((v11 + v13 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v15 = a2;
  v15[1] = a3;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = sub_209EFB854;
  *(_QWORD *)(v16 + 24) = v14;
  aBlock[4] = sub_209EFF720;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_209EFB218;
  aBlock[3] = &block_descriptor_13;
  v17 = _Block_copy(aBlock);
  v18 = v4;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v21, v17);
  _Block_release(v17);
  LOBYTE(a3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((a3 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_209EFB424(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  char *v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD v34[2];
  char *v35;
  void (*v36)(void);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  __int128 v41;
  __int128 v42;
  unsigned __int8 v43;

  v37 = a5;
  v38 = a3;
  v39 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB428);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_209F66A90();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v15 = MEMORY[0x24BDAC7A8](v11, v14);
  v16 = (char *)v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15, v17);
  v19 = (char *)v34 - v18;
  swift_getKeyPath();
  v36 = *(void (**)(void))((*MEMORY[0x24BEE4EA0] & *a1) + 0xC0);
  v36();
  swift_release();
  v20 = (char *)a1 + OBJC_IVAR___RUIInternalResourceLoader__resources;
  swift_beginAccess();
  v21 = *(_QWORD *)v20;
  if (*(_QWORD *)(*(_QWORD *)v20 + 16))
  {
    swift_bridgeObjectRetain();
    v22 = sub_209EF74FC(a2);
    if ((v23 & 1) != 0)
    {
      sub_209EE3528(*(_QWORD *)(v21 + 56) + 40 * v22, (uint64_t)&v41, &qword_2545BB488);
    }
    else
    {
      v41 = 0u;
      v42 = 0u;
      v43 = -1;
    }
    swift_bridgeObjectRelease();
    if (v43 != 255)
      return sub_209EE017C((uint64_t)&v41, &qword_2545BB4C0);
  }
  else
  {
    v41 = 0u;
    v42 = 0u;
    v43 = -1;
  }
  sub_209EE017C((uint64_t)&v41, &qword_2545BB4C0);
  v25 = v19;
  v35 = v19;
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v26(v25, a2, v11);
  v34[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB4C8);
  v27 = sub_209F674B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v10, 1, 1, v27);
  v26(v16, a2, v11);
  v28 = (*(unsigned __int8 *)(v12 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v29 = (v13 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
  v30 = swift_allocObject();
  *(_QWORD *)(v30 + 16) = v37;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v30 + v28, v16, v11);
  v31 = (_QWORD *)(v30 + v29);
  v32 = v39;
  *v31 = v38;
  v31[1] = v32;
  *(_QWORD *)(v30 + ((v29 + 23) & 0xFFFFFFFFFFFFFFF8)) = a1;
  swift_retain();
  v33 = a1;
  *(_QWORD *)&v41 = sub_209F66B74();
  v43 = 1;
  swift_getKeyPath();
  v36();
  swift_release();
  v40 = v33;
  swift_getKeyPath();
  sub_209EE4ABC(&qword_2545BB410, (uint64_t (*)(uint64_t))type metadata accessor for InternalResourceLoader, (uint64_t)&protocol conformance descriptor for InternalResourceLoader);
  sub_209F66B38();
  swift_release();
  swift_beginAccess();
  sub_209EFB0F8((uint64_t)&v41, (uint64_t)v35);
  swift_endAccess();
  v40 = v33;
  swift_getKeyPath();
  sub_209F66B2C();
  return swift_release();
}

uint64_t sub_209EFB7C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_209F66A90();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_209EFB854()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t *v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(sub_209F66A90() - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (uint64_t *)(v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_209EFB424(*(_QWORD **)(v0 + 24), v0 + v3, *v4, v4[1], v1);
}

uint64_t sub_209EFB8AC()
{
  return swift_deallocObject();
}

uint64_t sub_209EFB8BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[7] = a5;
  v6[8] = a6;
  v6[5] = a3;
  v6[6] = a4;
  v6[3] = a1;
  v6[4] = a2;
  v6[9] = *(_QWORD *)(a6 - 8);
  v6[10] = swift_task_alloc();
  v7 = sub_209F66A90();
  v6[11] = v7;
  v6[12] = *(_QWORD *)(v7 - 8);
  v6[13] = swift_task_alloc();
  v8 = sub_209F66BA4();
  v6[14] = v8;
  v6[15] = *(_QWORD *)(v8 - 8);
  v6[16] = swift_task_alloc();
  sub_209F6748C();
  v6[17] = sub_209F67480();
  v6[18] = sub_209F67474();
  v6[19] = v9;
  return swift_task_switch();
}

uint64_t sub_209EFB99C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(_QWORD, _QWORD);
  uint64_t v27;

  v2 = *(_QWORD *)(v0 + 120);
  v1 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 88);
  v6 = *(_QWORD *)(v0 + 96);
  v7 = *(_QWORD *)(v0 + 32);
  v8 = sub_209F01578();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v8, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v7, v5);
  v9 = sub_209F66B8C();
  v10 = sub_209F6754C();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = *(_QWORD *)(v0 + 104);
    v24 = *(_QWORD *)(v0 + 112);
    v25 = *(_QWORD *)(v0 + 128);
    v12 = *(_QWORD *)(v0 + 96);
    v22 = *(_QWORD *)(v0 + 88);
    v23 = *(_QWORD *)(v0 + 120);
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v27 = v14;
    *(_DWORD *)v13 = 136315138;
    v15 = sub_209F66A3C();
    *(_QWORD *)(v0 + 16) = sub_209EE75A0(v15, v16, &v27);
    sub_209F675E8();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v22);
    _os_log_impl(&dword_209E87000, v9, v10, "loading resource with url: %s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x20BD1DC00](v14, -1, -1);
    MEMORY[0x20BD1DC00](v13, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v25, v24);
  }
  else
  {
    v18 = *(_QWORD *)(v0 + 120);
    v17 = *(_QWORD *)(v0 + 128);
    v19 = *(_QWORD *)(v0 + 112);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }
  v26 = (uint64_t (*)(_QWORD, _QWORD))(**(int **)(v0 + 40) + *(_QWORD *)(v0 + 40));
  v20 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 160) = v20;
  *v20 = v0;
  v20[1] = sub_209EFBBAC;
  return v26(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 32));
}

uint64_t sub_209EFBBAC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 168) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_209EFBC0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t *boxed_opaque_existential_0;

  v2 = *(_QWORD *)(v0 + 72);
  v1 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD **)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 64);
  v6 = *(uint64_t **)(v0 + 24);
  v5 = *(_QWORD *)(v0 + 32);
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))((*MEMORY[0x24BEE4EA0] & *v3) + 0xA8))(v1, v5, v4);
  v6[3] = v4;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v6);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v2 + 32))(boxed_opaque_existential_0, v1, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_209EFBCC4()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_209EFBD20()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_209EFBD38()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[2];
  v2 = swift_task_alloc();
  v0[3] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[4] = v3;
  *v3 = v0;
  v3[1] = sub_209EFBDC4;
  return sub_209F6784C();
}

uint64_t sub_209EFBDC4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_209EFBE30()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_209EFBE3C()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_209EFBE70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[15] = a2;
  v3[16] = a3;
  v4 = sub_209F66A90();
  v3[17] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[18] = v5;
  v3[19] = *(_QWORD *)(v5 + 64);
  v3[20] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB428);
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  v3[23] = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB478);
  v3[24] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_209EFBF30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, unint64_t, uint64_t);
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;
  char *v47;

  v1 = v0 + 16;
  v2 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 128);
  *(_QWORD *)(swift_task_alloc() + 16) = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB480);
  sub_209F6757C();
  swift_task_dealloc();
  v6 = *(_QWORD *)(v0 + 112);
  *(_QWORD *)(swift_task_alloc() + 16) = v5;
  v41 = v6 + 64;
  v7 = -1;
  v8 = -1 << *(_BYTE *)(v6 + 32);
  if (-v8 < 64)
    v7 = ~(-1 << -(char)v8);
  v9 = v7 & *(_QWORD *)(v6 + 64);
  v42 = (unint64_t)(63 - v8) >> 6;
  result = swift_bridgeObjectRetain();
  v11 = 0;
  v38 = v6;
  v39 = v3;
  v40 = v2;
  while (1)
  {
    if (v9)
    {
      v45 = (v9 - 1) & v9;
      v46 = v11;
      v12 = __clz(__rbit64(v9)) | (v11 << 6);
      goto LABEL_24;
    }
    v13 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v13 >= v42)
      goto LABEL_34;
    v14 = *(_QWORD *)(v41 + 8 * v13);
    v15 = v11 + 1;
    if (!v14)
    {
      v15 = v11 + 2;
      if (v11 + 2 >= v42)
        goto LABEL_34;
      v14 = *(_QWORD *)(v41 + 8 * v15);
      if (!v14)
      {
        v15 = v11 + 3;
        if (v11 + 3 >= v42)
          goto LABEL_34;
        v14 = *(_QWORD *)(v41 + 8 * v15);
        if (!v14)
        {
          v15 = v11 + 4;
          if (v11 + 4 >= v42)
            goto LABEL_34;
          v14 = *(_QWORD *)(v41 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_23:
    v45 = (v14 - 1) & v14;
    v46 = v15;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
LABEL_24:
    v17 = *(_QWORD *)(v0 + 192);
    v18 = *(void (**)(uint64_t, unint64_t, uint64_t))(v3 + 16);
    v18(v17, *(_QWORD *)(v6 + 48) + *(_QWORD *)(v3 + 72) * v12, *(_QWORD *)(v0 + 136));
    v19 = v17 + *(int *)(v2 + 48);
    sub_209EE3528(*(_QWORD *)(v6 + 56) + 40 * v12, v19, &qword_2545BB488);
    sub_209EE3528(v19, v1, &qword_2545BB488);
    if (*(_BYTE *)(v0 + 48) == 1)
    {
      v20 = *(_QWORD *)(v0 + 192);
      v21 = *(_QWORD *)(v0 + 176);
      v22 = *(_QWORD *)(v0 + 160);
      v23 = v3;
      v24 = *(_QWORD *)(v0 + 136);
      v43 = *(_QWORD *)(v0 + 16);
      v44 = *(_QWORD *)(v0 + 168);
      v25 = sub_209F674B0();
      v26 = *(_QWORD *)(v25 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(v21, 1, 1, v25);
      v18(v22, v20, v24);
      v27 = (*(unsigned __int8 *)(v23 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
      v28 = (char *)swift_allocObject();
      *((_QWORD *)v28 + 2) = 0;
      *((_QWORD *)v28 + 3) = 0;
      *((_QWORD *)v28 + 4) = v43;
      (*(void (**)(char *, uint64_t, uint64_t))(v23 + 32))(&v28[v27], v22, v24);
      sub_209EE3528(v21, v44, &qword_2545BB428);
      v29 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v44, 1, v25);
      v30 = *(_QWORD *)(v0 + 168);
      if (v29 == 1)
      {
        sub_209EE017C(*(_QWORD *)(v0 + 168), &qword_2545BB428);
      }
      else
      {
        sub_209F674A4();
        (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v30, v25);
      }
      v6 = v38;
      v3 = v39;
      if (*((_QWORD *)v28 + 2))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        v31 = sub_209F67474();
        v33 = v32;
        swift_unknownObjectRelease();
      }
      else
      {
        v31 = 0;
        v33 = 0;
      }
      v34 = **(_QWORD **)(v0 + 120);
      v35 = v33 | v31;
      if (v33 | v31)
      {
        v35 = v0 + 56;
        *(_QWORD *)(v0 + 56) = 0;
        *(_QWORD *)(v0 + 64) = 0;
        *(_QWORD *)(v0 + 72) = v31;
        *(_QWORD *)(v0 + 80) = v33;
      }
      v2 = v40;
      v36 = *(_QWORD *)(v0 + 176);
      *(_QWORD *)(v0 + 88) = 1;
      *(_QWORD *)(v0 + 96) = v35;
      *(_QWORD *)(v0 + 104) = v34;
      swift_task_create();
      swift_release();
      sub_209EE017C(v36, &qword_2545BB428);
      v1 = v0 + 16;
    }
    else
    {
      sub_209EE017C(v1, &qword_2545BB488);
    }
    v9 = v45;
    v11 = v46;
    result = sub_209EE017C(*(_QWORD *)(v0 + 192), &qword_2545BB478);
  }
  v16 = v11 + 5;
  if (v11 + 5 >= v42)
  {
LABEL_34:
    swift_release();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    v47 = (char *)&dword_2545BB4A0 + dword_2545BB4A0;
    v37 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 200) = v37;
    *v37 = v0;
    v37[1] = sub_209EFC408;
    return ((uint64_t (*)(_QWORD, _QWORD))v47)(0, 0);
  }
  v14 = *(_QWORD *)(v41 + 8 * v16);
  if (v14)
  {
    v15 = v11 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v42)
      goto LABEL_34;
    v14 = *(_QWORD *)(v41 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_23;
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_209EFC408()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_209EFC47C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v2 + 16);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_209EE06B8;
  return sub_209EFBE70((uint64_t)v6, a2, v5);
}

uint64_t sub_209EFC4D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v5[12] = a5;
  v6 = sub_209F66A90();
  v5[13] = v6;
  v5[14] = *(_QWORD *)(v6 - 8);
  v5[15] = swift_task_alloc();
  v7 = sub_209F66BA4();
  v5[16] = v7;
  v5[17] = *(_QWORD *)(v7 - 8);
  v5[18] = swift_task_alloc();
  v8 = (_QWORD *)swift_task_alloc();
  v5[19] = v8;
  *v8 = v5;
  v8[1] = sub_209EFC57C;
  return sub_209F66B68();
}

uint64_t sub_209EFC57C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 160) = v0;
  swift_task_dealloc();
  if (!v0)
    __swift_destroy_boxed_opaque_existential_1(v2 + 16);
  return swift_task_switch();
}

uint64_t sub_209EFC5E8()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_209EFC628()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(void **)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 144);
  v6 = *(_QWORD *)(v0 + 120);
  v5 = *(_QWORD *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 104);
  v8 = *(_QWORD *)(v0 + 112);
  v9 = sub_209F01578();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v9, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v6, v1, v7);
  v10 = v2;
  v11 = v2;
  v12 = sub_209F66B8C();
  v13 = sub_209F67534();
  if (os_log_type_enabled(v12, v13))
  {
    v30 = *(void **)(v0 + 160);
    v32 = *(_QWORD *)(v0 + 136);
    v14 = *(_QWORD *)(v0 + 120);
    v33 = *(_QWORD *)(v0 + 128);
    v34 = *(_QWORD *)(v0 + 144);
    v15 = *(_QWORD *)(v0 + 104);
    v29 = *(_QWORD *)(v0 + 112);
    v16 = swift_slowAlloc();
    v31 = swift_slowAlloc();
    v35 = v31;
    *(_DWORD *)v16 = 136315394;
    sub_209EE4ABC(&qword_2545BB4B8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
    v17 = sub_209F678F4();
    *(_QWORD *)(v0 + 72) = sub_209EE75A0(v17, v18, &v35);
    sub_209F675E8();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v14, v15);
    *(_WORD *)(v16 + 12) = 2080;
    swift_getErrorValue();
    v19 = sub_209F67AC8();
    *(_QWORD *)(v0 + 88) = sub_209EE75A0(v19, v20, &v35);
    sub_209F675E8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_209E87000, v12, v13, "failed to fetch image for url: %s error: %s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x20BD1DC00](v31, -1, -1);
    MEMORY[0x20BD1DC00](v16, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v34, v33);
  }
  else
  {
    v21 = *(void **)(v0 + 160);
    v23 = *(_QWORD *)(v0 + 136);
    v22 = *(_QWORD *)(v0 + 144);
    v25 = *(_QWORD *)(v0 + 120);
    v24 = *(_QWORD *)(v0 + 128);
    v26 = *(_QWORD *)(v0 + 104);
    v27 = *(_QWORD *)(v0 + 112);

    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_209EFC8FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  if (a1)
  {
    swift_getObjectType();
    v4 = sub_209F67474();
    v6 = v5;
  }
  else
  {
    v4 = 0;
    v6 = 0;
  }
  v3[10] = v4;
  v3[11] = v6;
  return swift_task_switch();
}

uint64_t sub_209EFC970()
{
  uint64_t v0;
  int isPlatformVersionAtLeast;
  _QWORD *v3;

  *(_QWORD *)(v0 + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB4A8);
  if ((sub_209F674E0() & 1) != 0)
    return (*(uint64_t (**)(void))(v0 + 8))();
  isPlatformVersionAtLeast = __isPlatformVersionAtLeast(2, 18, 0, 0);
  *(_DWORD *)(v0 + 128) = isPlatformVersionAtLeast;
  *(_QWORD *)(v0 + 104) = 0;
  if (!isPlatformVersionAtLeast)
    return swift_taskGroup_wait_next_throwing();
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB4B0);
  *v3 = v0;
  v3[1] = sub_209EFCA88;
  return sub_209F674D4();
}

uint64_t sub_209EFCA88()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    *(_QWORD *)(v2 + 120) = v0;
  else
    *(_BYTE *)(v2 + 134) = *(_BYTE *)(v2 + 132);
  return swift_task_switch();
}

uint64_t sub_209EFCAF4()
{
  uint64_t v0;
  uint64_t v1;

  if (v0)
    *(_QWORD *)(v1 + 120) = v0;
  else
    *(_BYTE *)(v1 + 135) = *(_BYTE *)(v1 + 133);
  return swift_task_switch();
}

uint64_t sub_209EFCB24()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;

  if ((*(_BYTE *)(v0 + 134) & 1) == 0)
    goto LABEL_7;
  v1 = *(_QWORD *)(v0 + 104);
  if ((sub_209F674E0() & 1) == 0)
  {
    *(_QWORD *)(v0 + 104) = v1;
LABEL_7:
    if (!*(_DWORD *)(v0 + 128))
      return swift_taskGroup_wait_next_throwing();
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB4B0);
    *v3 = v0;
    v3[1] = sub_209EFCA88;
    return sub_209F674D4();
  }
  if (v1)
    swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_209EFCC24()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;

  if ((*(_BYTE *)(v0 + 135) & 1) == 0)
    goto LABEL_7;
  v1 = *(_QWORD *)(v0 + 104);
  if ((sub_209F674E0() & 1) == 0)
  {
    *(_QWORD *)(v0 + 104) = v1;
LABEL_7:
    if (!*(_DWORD *)(v0 + 128))
      return swift_taskGroup_wait_next_throwing();
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB4B0);
    *v3 = v0;
    v3[1] = sub_209EFCA88;
    return sub_209F674D4();
  }
  if (v1)
    swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_209EFCD24()
{
  uint64_t v0;
  void *v1;
  _QWORD *v3;

  v1 = *(void **)(v0 + 120);
  if (*(_QWORD *)(v0 + 104))
  {

    v1 = *(void **)(v0 + 104);
  }
  if ((sub_209F674E0() & 1) != 0)
  {
    if (v1)
      swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 104) = v1;
    if (*(_DWORD *)(v0 + 128))
    {
      v3 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 112) = v3;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB4B0);
      *v3 = v0;
      v3[1] = sub_209EFCA88;
      return sub_209F674D4();
    }
    else
    {
      return swift_taskGroup_wait_next_throwing();
    }
  }
}

uint64_t sub_209EFCF50(const void *a1, void *a2)
{
  uint64_t v2;
  id v4;

  *(_QWORD *)(v2 + 16) = a2;
  *(_QWORD *)(v2 + 24) = _Block_copy(a1);
  v4 = a2;
  return swift_task_switch();
}

uint64_t sub_209EFCF98()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[2];
  v2 = swift_task_alloc();
  v0[4] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[5] = v3;
  *v3 = v0;
  v3[1] = sub_209EFD024;
  return sub_209F6784C();
}

uint64_t sub_209EFD024()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_209EFD090()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);

  (*(void (**)(uint64_t, _QWORD))(v1 + 16))(v1, 0);
  _Block_release(*(const void **)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_209EFD0D8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = *(void **)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 24);

  swift_task_dealloc();
  v3 = (void *)sub_209F66A0C();

  (*(void (**)(uint64_t, void *))(v2 + 16))(v2, v3);
  _Block_release(*(const void **)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_209EFD150()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for InternalResourceLoader()), sel_init);
  qword_2545BEC78 = (uint64_t)result;
  return result;
}

id InternalResourceLoader.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

uint64_t *sub_209EFD1A0()
{
  if (qword_2545BEC70 != -1)
    swift_once();
  return &qword_2545BEC78;
}

id static InternalResourceLoader.shared.getter()
{
  if (qword_2545BEC70 != -1)
    swift_once();
  return (id)qword_2545BEC78;
}

uint64_t sub_209EFD260()
{
  sub_209EE4ABC(&qword_2545BB410, (uint64_t (*)(uint64_t))type metadata accessor for InternalResourceLoader, (uint64_t)&protocol conformance descriptor for InternalResourceLoader);
  return sub_209F66B20();
}

uint64_t type metadata accessor for InternalResourceLoader()
{
  uint64_t result;

  result = qword_2545BED10;
  if (!qword_2545BED10)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_209EFD308()
{
  sub_209EE4ABC(&qword_2545BB410, (uint64_t (*)(uint64_t))type metadata accessor for InternalResourceLoader, (uint64_t)&protocol conformance descriptor for InternalResourceLoader);
  return sub_209F66B14();
}

id InternalResourceLoader.init()()
{
  char *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  objc_class *v13;
  uint64_t v15;
  objc_super v16;
  uint64_t v17;

  v1 = sub_209F67564();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v1, v3);
  v4 = sub_209F67240();
  MEMORY[0x24BDAC7A8](v4, v5);
  v6 = sub_209F67570();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v0[OBJC_IVAR___RUIInternalResourceLoader__resources] = MEMORY[0x24BEE4B00];
  v11 = OBJC_IVAR___RUIInternalResourceLoader_queue;
  sub_209EFA5CC();
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v10, *MEMORY[0x24BEE5758], v6);
  v12 = v0;
  sub_209F67234();
  v17 = MEMORY[0x24BEE4AF8];
  sub_209EE4ABC(&qword_2545BB3D8, v2, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB3E0);
  sub_209EFA608();
  sub_209F6766C();
  *(_QWORD *)&v0[v11] = sub_209F67588();
  sub_209F66B44();

  v13 = (objc_class *)type metadata accessor for InternalResourceLoader();
  v16.receiver = v12;
  v16.super_class = v13;
  return objc_msgSendSuper2(&v16, sel_init);
}

id InternalResourceLoader.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InternalResourceLoader();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_209EFD660()
{
  return type metadata accessor for InternalResourceLoader();
}

uint64_t sub_209EFD668()
{
  uint64_t result;
  unint64_t v1;

  result = sub_209F66B50();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for InternalResourceLoader()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InternalResourceLoader.load()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x24BEE4EA0] & *v0) + 0xB8);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_209EE06B8;
  return v5();
}

uint64_t sub_209EFD764()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_209EFD76C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_209EFD7E0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
  }
  else
  {
    v9 = *((unsigned __int8 *)a2 + v5);
    if (v9 >= 2)
    {
      if (v5 <= 3)
        v10 = v5;
      else
        v10 = 4;
      __asm { BR              X13 }
    }
    if (v9 != 1)
    {
      (*(void (**)(uint64_t *))(v4 + 16))(a1);
      *((_BYTE *)v3 + v5) = 0;
      return v3;
    }
    *a1 = *a2;
    *((_BYTE *)a1 + v5) = 1;
  }
  swift_retain();
  return v3;
}

uint64_t sub_209EFD8F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unsigned int v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  if (v3 <= 8)
    v3 = 8;
  v4 = *(unsigned __int8 *)(a1 + v3);
  if (v4 < 2)
  {
    if (v4 == 1)
      return swift_release();
    else
      return (*(uint64_t (**)(void))(v2 + 8))();
  }
  else
  {
    if (v3 <= 3)
      v5 = v3;
    else
      v5 = 4;
    return ((uint64_t (*)(void))((char *)&loc_209EFD93C + 4 * byte_209F776D5[v5]))();
  }
}

_QWORD *sub_209EFD994(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    *a1 = *a2;
    swift_retain();
    v8 = 1;
  }
  else
  {
    (*(void (**)(_QWORD *))(v4 + 16))(a1);
    v8 = 0;
  }
  *((_BYTE *)a1 + v5) = v8;
  return a1;
}

_QWORD *sub_209EFDA6C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)
      swift_release();
    else
      (*(void (**)(_QWORD *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      *a1 = *a2;
      *((_BYTE *)a1 + v7) = 1;
      swift_retain();
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
      *((_BYTE *)a1 + v7) = 0;
    }
  }
  return a1;
}

_QWORD *sub_209EFDBFC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    *a1 = *a2;
    v8 = 1;
  }
  else
  {
    (*(void (**)(_QWORD *))(v4 + 32))(a1);
    v8 = 0;
  }
  *((_BYTE *)a1 + v5) = v8;
  return a1;
}

_QWORD *sub_209EFDCD0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  char v12;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)
      swift_release();
    else
      (*(void (**)(_QWORD *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      *a1 = *a2;
      v12 = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 32))(a1, a2, v5);
      v12 = 0;
    }
    *((_BYTE *)a1 + v7) = v12;
  }
  return a1;
}

uint64_t sub_209EFDE5C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v3 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) > 8uLL)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_21;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_21:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 2)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_21;
LABEL_14:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 255);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_209EFDF20 + 4 * byte_209F776F8[(v4 - 1)]))();
}

void sub_209EFDF6C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (v5 <= 8)
    v5 = 8;
  v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    v7 = 0;
  }
  else if (v6 <= 3)
  {
    v9 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v9))
    {
      v7 = 4u;
    }
    else if (v9 >= 0x100)
    {
      v7 = 2;
    }
    else
    {
      v7 = v9 > 1;
    }
  }
  else
  {
    v7 = 1u;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v8 = a2 - 255;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v10 = v8 & ~(-1 << (8 * v6));
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v10;
        *((_BYTE *)a1 + 2) = BYTE2(v10);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v10;
      }
      else
      {
        *(_BYTE *)a1 = v10;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v8;
  }
  __asm { BR              X10 }
}

uint64_t sub_209EFE114(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) > 8uLL)
    v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v2) < 2u)
    return *(unsigned __int8 *)(a1 + v2);
  if (v2 <= 3)
    v3 = v2;
  else
    v3 = 4;
  return ((uint64_t (*)(void))((char *)&loc_209EFE15C + 4 * byte_209F77706[v3]))();
}

void sub_209EFE1A4(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  size_t v4;
  unsigned int v5;
  unsigned int v6;
  int v7;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) <= 8uLL)
    v4 = 8;
  else
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (a2 > 1)
  {
    v5 = a2 - 2;
    if (v4 < 4)
    {
      v6 = v5 >> (8 * v4);
      v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if ((_DWORD)v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if ((_DWORD)v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t type metadata accessor for InternalResourceLoader.Resource(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for InternalResourceLoader.Resource);
}

uint64_t sub_209EFE278()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = (_QWORD *)(v1 + OBJC_IVAR___RUIInternalResourceLoader__resources);
  swift_beginAccess();
  *v3 = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_209EFE2E4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_209EFE310()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_209EE061C;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_2545BB430 + dword_2545BB430))(v2, v3);
}

uint64_t sub_209EFE374(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v4;
  *v4 = v3;
  v4[1] = sub_209EE06B8;
  return v6();
}

uint64_t sub_209EFE3CC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (int *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_209EE06B8;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_2545BB440 + dword_2545BB440))(v2, v3, v4);
}

uint64_t sub_209EFE444(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = sub_209EE06B8;
  return v7();
}

uint64_t objectdestroy_23Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_209EFE4C8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_209EE06B8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_2545BB450 + dword_2545BB450))(a1, v4, v5, v6);
}

uint64_t sub_209EFE54C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_209F674B0();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_209F674A4();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_209EE017C(a1, &qword_2545BB428);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_209F67474();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_209EFE698(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_209EFE6FC;
  return v6(a1);
}

uint64_t sub_209EFE6FC()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_209EFE748()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_209EFE76C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_209EE06B8;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_2545BB460 + dword_2545BB460))(a1, v4);
}

uint64_t sub_209EFE7DC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;

  v3 = *(_QWORD **)(v1 + 16);
  swift_getKeyPath();
  (*(void (**)(void))((*MEMORY[0x24BEE4EA0] & *v3) + 0xC0))();
  swift_release();
  v4 = (_QWORD *)((char *)v3 + OBJC_IVAR___RUIInternalResourceLoader__resources);
  swift_beginAccess();
  *a1 = *v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_209EFE874()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_209F66A90();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_209EFE8F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(sub_209F66A90() - 8) + 80);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = v0 + ((v2 + 40) & ~v2);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_209EE06B8;
  return sub_209EFC4D0((uint64_t)v5, v6, v7, v3, v4);
}

uint64_t sub_209EFE95C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_209F66A90();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_209EFE9EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(sub_209F66A90() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 23) & 0xFFFFFFFFFFFFF8;
  v9 = v1 + v6;
  v10 = (uint64_t *)(v1 + v7);
  v11 = *v10;
  v12 = v10[1];
  v13 = *(_QWORD *)(v1 + v8);
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_209EE061C;
  return sub_209EFB8BC(a1, v9, v11, v12, v13, v4);
}

double sub_209EFEAA4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_209EF74FC(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v13 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_209EFF444();
      v9 = v13;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = sub_209F66A90();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
    sub_209EF1E0C(*(_QWORD *)(v9 + 56) + 40 * v6, a2, &qword_2545BB488);
    sub_209EFEF64(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_BYTE *)(a2 + 32) = -1;
  }
  return result;
}

uint64_t sub_209EFEBA4(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  _QWORD *v41;
  int v42;
  _BYTE v43[40];

  v3 = v2;
  v5 = sub_209F66A90();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB4E0);
  v42 = a2;
  v11 = sub_209F67804();
  v12 = v11;
  if (!*(_QWORD *)(v10 + 16))
    goto LABEL_41;
  v13 = 1 << *(_BYTE *)(v10 + 32);
  v14 = *(_QWORD *)(v10 + 64);
  v41 = (_QWORD *)(v10 + 64);
  if (v13 < 64)
    v15 = ~(-1 << v13);
  else
    v15 = -1;
  v16 = v15 & v14;
  v39 = v2;
  v40 = (unint64_t)(v13 + 63) >> 6;
  v17 = v11 + 64;
  result = swift_retain();
  v19 = 0;
  while (1)
  {
    if (v16)
    {
      v21 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v22 = v21 | (v19 << 6);
      goto LABEL_22;
    }
    v23 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v40)
      break;
    v24 = v41;
    v25 = v41[v23];
    ++v19;
    if (!v25)
    {
      v19 = v23 + 1;
      if (v23 + 1 >= v40)
        goto LABEL_34;
      v25 = v41[v19];
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_34:
          swift_release();
          v3 = v39;
          if ((v42 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v25 = v41[v26];
        if (!v25)
        {
          while (1)
          {
            v19 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_43;
            if (v19 >= v40)
              goto LABEL_34;
            v25 = v41[v19];
            ++v26;
            if (v25)
              goto LABEL_21;
          }
        }
        v19 = v26;
      }
    }
LABEL_21:
    v16 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v19 << 6);
LABEL_22:
    v27 = *(_QWORD *)(v6 + 72);
    v28 = *(_QWORD *)(v10 + 48) + v27 * v22;
    v29 = 40 * v22;
    if ((v42 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v9, v28, v5);
      sub_209EF1E0C(*(_QWORD *)(v10 + 56) + v29, (uint64_t)v43, &qword_2545BB488);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v9, v28, v5);
      sub_209EE3528(*(_QWORD *)(v10 + 56) + v29, (uint64_t)v43, &qword_2545BB488);
    }
    sub_209EE4ABC(&qword_2545BB390, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
    result = sub_209F67264();
    v30 = -1 << *(_BYTE *)(v12 + 32);
    v31 = result & ~v30;
    v32 = v31 >> 6;
    if (((-1 << v31) & ~*(_QWORD *)(v17 + 8 * (v31 >> 6))) != 0)
    {
      v20 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v17 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v33 = 0;
      v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v35 = v32 == v34;
        if (v32 == v34)
          v32 = 0;
        v33 |= v35;
        v36 = *(_QWORD *)(v17 + 8 * v32);
      }
      while (v36 == -1);
      v20 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    *(_QWORD *)(v17 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v12 + 48) + v20 * v27, v9, v5);
    result = sub_209EF1E0C((uint64_t)v43, *(_QWORD *)(v12 + 56) + 40 * v20, &qword_2545BB488);
    ++*(_QWORD *)(v12 + 16);
  }
  swift_release();
  v3 = v39;
  v24 = v41;
  if ((v42 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v37 = 1 << *(_BYTE *)(v10 + 32);
  if (v37 >= 64)
    bzero(v24, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v37;
  *(_QWORD *)(v10 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v12;
  return result;
}

unint64_t sub_209EFEF64(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  __int128 *v26;
  BOOL v27;
  __int128 v28;
  __int128 v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, unint64_t, uint64_t);
  unint64_t v38;
  uint64_t v39;

  v4 = sub_209F66A90();
  v39 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4, v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a2 + 64;
  v10 = -1 << *(_BYTE *)(a2 + 32);
  v11 = (a1 + 1) & ~v10;
  if (((1 << v11) & *(_QWORD *)(a2 + 64 + 8 * (v11 >> 6))) != 0)
  {
    v12 = ~v10;
    result = sub_209F67678();
    if ((*(_QWORD *)(v9 + 8 * (v11 >> 6)) & (1 << v11)) != 0)
    {
      v38 = (result + 1) & v12;
      v13 = *(_QWORD *)(v39 + 72);
      v37 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 16);
      v14 = v12;
      do
      {
        v15 = v9;
        v16 = v13;
        v17 = v13 * v11;
        v18 = v14;
        v37(v8, *(_QWORD *)(a2 + 48) + v13 * v11, v4);
        sub_209EE4ABC(&qword_2545BB390, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
        v19 = sub_209F67264();
        result = (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v8, v4);
        v14 = v18;
        v20 = v19 & v18;
        if (a1 >= (uint64_t)v38)
        {
          if (v20 >= v38 && a1 >= (uint64_t)v20)
          {
LABEL_16:
            v23 = *(_QWORD *)(a2 + 48);
            result = v23 + v16 * a1;
            v9 = v15;
            if (v16 * a1 < v17 || (v13 = v16, result >= v23 + v17 + v16))
            {
              result = swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              v14 = v18;
              v13 = v16;
            }
            else if (v16 * a1 != v17)
            {
              result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v24 = *(_QWORD *)(a2 + 56);
            v25 = v24 + 40 * a1;
            v26 = (__int128 *)(v24 + 40 * v11);
            if (40 * a1 < (uint64_t)(40 * v11) || v25 >= (unint64_t)v26 + 40 || (v27 = a1 == v11, a1 = v11, !v27))
            {
              v28 = *v26;
              v29 = v26[1];
              *(_QWORD *)(v25 + 32) = *((_QWORD *)v26 + 4);
              *(_OWORD *)v25 = v28;
              *(_OWORD *)(v25 + 16) = v29;
              a1 = v11;
            }
            goto LABEL_5;
          }
        }
        else if (v20 >= v38 || a1 >= (uint64_t)v20)
        {
          goto LABEL_16;
        }
        v9 = v15;
        v13 = v16;
LABEL_5:
        v11 = (v11 + 1) & v14;
      }
      while (((*(_QWORD *)(v9 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
    }
    v30 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    v31 = *v30;
    v32 = (-1 << a1) - 1;
  }
  else
  {
    v30 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    v32 = *v30;
    v31 = (-1 << a1) - 1;
  }
  *v30 = v32 & v31;
  v33 = *(_QWORD *)(a2 + 16);
  v34 = __OFSUB__(v33, 1);
  v35 = v33 - 1;
  if (v34)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v35;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_209EFF224(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v4 = (_QWORD **)v3;
  v8 = sub_209F66A90();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (_QWORD *)*v3;
  v15 = sub_209EF74FC(a2);
  v16 = v13[2];
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
  }
  else
  {
    v19 = v14;
    v20 = v13[3];
    if (v20 >= v18 && (a3 & 1) != 0)
    {
LABEL_7:
      v21 = *v4;
      if ((v19 & 1) != 0)
        return sub_209EFF69C(a1, v21[7] + 40 * v15);
      goto LABEL_11;
    }
    if (v20 >= v18 && (a3 & 1) == 0)
    {
      sub_209EFF444();
      goto LABEL_7;
    }
    sub_209EFEBA4(v18, a3 & 1);
    v23 = sub_209EF74FC(a2);
    if ((v19 & 1) == (v24 & 1))
    {
      v15 = v23;
      v21 = *v4;
      if ((v19 & 1) != 0)
        return sub_209EFF69C(a1, v21[7] + 40 * v15);
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a2, v8);
      return sub_209EFF398(v15, (uint64_t)v12, a1, v21);
    }
  }
  result = sub_209F67AA4();
  __break(1u);
  return result;
}

uint64_t sub_209EFF398(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_209F66A90();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  result = sub_209EF1E0C(a3, a4[7] + 40 * a1, &qword_2545BB488);
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

void *sub_209EFF444()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *result;
  unint64_t v12;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  uint64_t v26;
  int64_t v27;
  _BYTE v28[40];

  v1 = v0;
  v2 = sub_209F66A90();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB4E0);
  v7 = *v0;
  v8 = sub_209F677F8();
  v9 = v8;
  v10 = *(_QWORD *)(v7 + 16);
  if (!v10)
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v9;
    return result;
  }
  v25 = v1;
  result = (void *)(v8 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v9 + 32)) + 63) >> 6;
  if (v9 != v7 || (unint64_t)result >= v7 + 64 + 8 * v12)
  {
    result = memmove(result, (const void *)(v7 + 64), 8 * v12);
    v10 = *(_QWORD *)(v7 + 16);
  }
  v26 = v7 + 64;
  v14 = 0;
  *(_QWORD *)(v9 + 16) = v10;
  v15 = 1 << *(_BYTE *)(v7 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v7 + 64);
  v27 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      v18 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v19 = v18 | (v14 << 6);
      goto LABEL_12;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v27)
      goto LABEL_26;
    v23 = *(_QWORD *)(v26 + 8 * v22);
    ++v14;
    if (!v23)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v27)
        goto LABEL_26;
      v23 = *(_QWORD *)(v26 + 8 * v14);
      if (!v23)
        break;
    }
LABEL_25:
    v17 = (v23 - 1) & v23;
    v19 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v3 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v6, *(_QWORD *)(v7 + 48) + v20, v2);
    v21 = 40 * v19;
    sub_209EE3528(*(_QWORD *)(v7 + 56) + v21, (uint64_t)v28, &qword_2545BB488);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v9 + 48) + v20, v6, v2);
    result = (void *)sub_209EF1E0C((uint64_t)v28, *(_QWORD *)(v9 + 56) + v21, &qword_2545BB488);
  }
  v24 = v22 + 2;
  if (v24 >= v27)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v26 + 8 * v24);
  if (v23)
  {
    v14 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v14 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v14 >= v27)
      goto LABEL_26;
    v23 = *(_QWORD *)(v26 + 8 * v14);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_209EFF69C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB488);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

id sub_209EFF72C()
{
  uint64_t v0;
  objc_class *v1;
  char *v2;
  uint64_t v3;
  char *v4;
  id result;
  objc_super v6;

  if (qword_2545BEDB8 != -1)
    swift_once();
  v0 = qword_2545BEDC0;
  v1 = (objc_class *)type metadata accessor for RUIContentRegistry();
  v2 = (char *)objc_allocWithZone(v1);
  v3 = OBJC_IVAR____TtC8RemoteUI18RUIContentRegistry_deprecatedViews;
  swift_bridgeObjectRetain();
  v4 = v2;
  *(_QWORD *)&v2[v3] = sub_209EFF944(MEMORY[0x24BEE4AF8], &qword_2545BB4F8);
  *(_QWORD *)&v4[OBJC_IVAR____TtC8RemoteUI18RUIContentRegistry_views] = v0;

  v6.receiver = v4;
  v6.super_class = v1;
  result = objc_msgSendSuper2(&v6, sel_init);
  qword_2545BEDB0 = (uint64_t)result;
  return result;
}

id sub_209EFF7F8(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  uint64_t v4;
  char *v5;
  objc_super v7;

  v3 = (char *)objc_allocWithZone(v1);
  v4 = OBJC_IVAR____TtC8RemoteUI18RUIContentRegistry_deprecatedViews;
  v5 = v3;
  *(_QWORD *)&v3[v4] = sub_209EFF944(MEMORY[0x24BEE4AF8], &qword_2545BB4F8);
  *(_QWORD *)&v5[OBJC_IVAR____TtC8RemoteUI18RUIContentRegistry_views] = a1;

  v7.receiver = v5;
  v7.super_class = v1;
  return objc_msgSendSuper2(&v7, sel_init);
}

uint64_t *sub_209EFF884()
{
  if (qword_2545BEDA8 != -1)
    swift_once();
  return &qword_2545BEDB0;
}

id static RUIContentRegistry.shared.getter()
{
  if (qword_2545BEDA8 != -1)
    swift_once();
  return (id)qword_2545BEDB0;
}

unint64_t sub_209EFF944(uint64_t a1, uint64_t *a2)
{
  _QWORD *v3;
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v3 = (_QWORD *)sub_209F67810();
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (_OWORD *)(a1 + 48);
  while (1)
  {
    v6 = *((_QWORD *)v5 - 2);
    v7 = *((_QWORD *)v5 - 1);
    v14 = *v5;
    swift_bridgeObjectRetain();
    result = sub_209EE31C0(v6, v7);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v3[6] + 16 * result);
    *v10 = v6;
    v10[1] = v7;
    *(_OWORD *)(v3[7] + 16 * result) = v14;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v3[2] = v13;
    v5 += 2;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_209EFFA5C()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_209EFFAA4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC8RemoteUI18RUIContentRegistry_deprecatedViews);
  swift_beginAccess();
  *v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_209EFFAF4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  char *v6;
  uint64_t v7;
  char v8;
  char v9;
  char v10;
  char v11;

  v3 = v2;
  v6 = (char *)v2 + OBJC_IVAR____TtC8RemoteUI18RUIContentRegistry_views;
  v7 = swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v6 + 16)
    && (swift_bridgeObjectRetain(), sub_209EE31C0(a1, a2), v9 = v8, v7 = swift_bridgeObjectRelease(), (v9 & 1) != 0))
  {
    v10 = 1;
  }
  else if (*(_QWORD *)((*(uint64_t (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *v3) + 0x78))(v7) + 16))
  {
    sub_209EE31C0(a1, a2);
    v10 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v10 = 0;
  }
  return v10 & 1;
}

unint64_t sub_209EFFC40()
{
  uint64_t inited;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB508);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_209F777A0;
  *(_QWORD *)(inited + 32) = 0x69566563696F6863;
  *(_QWORD *)(inited + 40) = 0xEA00000000007765;
  v1 = sub_209F00830();
  *(_QWORD *)(inited + 48) = &type metadata for ChoiceView;
  *(_QWORD *)(inited + 56) = v1;
  *(_QWORD *)(inited + 64) = 0x6F684369746C756DLL;
  *(_QWORD *)(inited + 72) = 0xEF77656956656369;
  v2 = sub_209F00874();
  *(_QWORD *)(inited + 80) = &type metadata for MultiChoiceView;
  *(_QWORD *)(inited + 88) = v2;
  *(_QWORD *)(inited + 96) = 0xD000000000000010;
  *(_QWORD *)(inited + 104) = 0x8000000209F72220;
  *(_QWORD *)(inited + 112) = &type metadata for ChoiceView;
  *(_QWORD *)(inited + 120) = v1;
  *(_QWORD *)(inited + 128) = 0x6F5272656E6E6162;
  *(_QWORD *)(inited + 136) = 0xE900000000000077;
  v3 = type metadata accessor for BannerRowElement();
  v4 = sub_209F008B8();
  *(_QWORD *)(inited + 144) = v3;
  *(_QWORD *)(inited + 152) = v4;
  result = sub_209EFF944(inited, &qword_2545BB500);
  qword_2545BEDC0 = result;
  return result;
}

uint64_t type metadata accessor for RUIContentRegistry()
{
  return objc_opt_self();
}

uint64_t sub_209EFFD78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC8RemoteUI18RUIContentRegistry_views);
  swift_beginAccess();
  v6 = *v5;
  if (!*(_QWORD *)(v6 + 16))
    return 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_209EE31C0(a1, a2);
  if ((v8 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  v9 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 16 * v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_209EFFE34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_209EFFE5C(a1, a2, a3, a4, &OBJC_IVAR____TtC8RemoteUI18RUIContentRegistry_views, &qword_2545BB500);
}

uint64_t sub_209EFFE48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_209EFFE5C(a1, a2, a3, a4, &OBJC_IVAR____TtC8RemoteUI18RUIContentRegistry_deprecatedViews, &qword_2545BB4F8);
}

uint64_t sub_209EFFE5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t *a6)
{
  uint64_t v6;
  uint64_t *v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;

  v12 = (uint64_t *)(v6 + *a5);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v15 = *v12;
  *v12 = 0x8000000000000000;
  sub_209F004B0(a1, a2, a3, a4, isUniquelyReferenced_nonNull_native, a6);
  *v12 = v15;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_209EFFF28()
{
  type metadata accessor for SwiftUIContentView.ContentLoader();
  return sub_209F593FC();
}

id RUIContentRegistry.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void RUIContentRegistry.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id RUIContentRegistry.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RUIContentRegistry();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t View.viewType(_:named:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;

  if (qword_2545BEDA8 != -1)
    swift_once();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))((*MEMORY[0x24BEE4EA0] & *(_QWORD *)qword_2545BEDB0)
                                                             + 0xA8))(a1, a2, a3, a4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 16))(a6, v6, a5);
}

{
  uint64_t v6;

  if (qword_2545BEDA8 != -1)
    swift_once();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))((*MEMORY[0x24BEE4EA0] & *(_QWORD *)qword_2545BEDB0)
                                                             + 0xB0))(a1, a2, a3, a4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 16))(a6, v6, a5);
}

uint64_t sub_209F001A8(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  char v39;
  __int128 v40;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v39 = a2;
  v7 = sub_209F67804();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v37 = v3;
  v38 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 64;
  result = swift_retain();
  v15 = 0;
  while (1)
  {
    if (v11)
    {
      v22 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v23 = v22 | (v15 << 6);
      goto LABEL_31;
    }
    v24 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v24 >= v12)
      break;
    v25 = (_QWORD *)(v6 + 64);
    v26 = *(_QWORD *)(v38 + 8 * v24);
    ++v15;
    if (!v26)
    {
      v15 = v24 + 1;
      if (v24 + 1 >= v12)
        goto LABEL_33;
      v26 = *(_QWORD *)(v38 + 8 * v15);
      if (!v26)
      {
        v27 = v24 + 2;
        if (v27 >= v12)
        {
LABEL_33:
          swift_release();
          v4 = v37;
          if ((v39 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v26 = *(_QWORD *)(v38 + 8 * v27);
        if (!v26)
        {
          while (1)
          {
            v15 = v27 + 1;
            if (__OFADD__(v27, 1))
              goto LABEL_42;
            if (v15 >= v12)
              goto LABEL_33;
            v26 = *(_QWORD *)(v38 + 8 * v15);
            ++v27;
            if (v26)
              goto LABEL_30;
          }
        }
        v15 = v27;
      }
    }
LABEL_30:
    v11 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v15 << 6);
LABEL_31:
    v32 = 16 * v23;
    v33 = (uint64_t *)(*(_QWORD *)(v6 + 48) + v32);
    v35 = *v33;
    v34 = v33[1];
    v40 = *(_OWORD *)(*(_QWORD *)(v6 + 56) + v32);
    if ((v39 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_209F67B10();
    sub_209F6733C();
    result = sub_209F67B28();
    v16 = -1 << *(_BYTE *)(v8 + 32);
    v17 = result & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v30 = v18 == v29;
        if (v18 == v29)
          v18 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v13 + 8 * v18);
      }
      while (v31 == -1);
      v19 = __clz(__rbit64(~v31)) + (v18 << 6);
    }
    *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = 16 * v19;
    v21 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v20);
    *v21 = v35;
    v21[1] = v34;
    *(_OWORD *)(*(_QWORD *)(v8 + 56) + v20) = v40;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v4 = v37;
  v25 = (_QWORD *)(v6 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v36 = 1 << *(_BYTE *)(v6 + 32);
  if (v36 >= 64)
    bzero(v25, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v36;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_209F004B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t *a6)
{
  _QWORD *v6;
  _QWORD *v8;
  uint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t result;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  char v24;
  uint64_t *v25;
  _QWORD *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;

  v8 = v6;
  v14 = *v6;
  v16 = sub_209EE31C0(a3, a4);
  v17 = *(_QWORD *)(v14 + 16);
  v18 = (v15 & 1) == 0;
  result = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v20 = v15;
  v21 = *(_QWORD *)(v14 + 24);
  if (v21 >= result && (a5 & 1) != 0)
    goto LABEL_7;
  if (v21 >= result && (a5 & 1) == 0)
  {
    result = (uint64_t)sub_209F00690(a6);
LABEL_7:
    v22 = (_QWORD *)*v8;
    if ((v20 & 1) != 0)
    {
LABEL_8:
      v23 = (_QWORD *)(v22[7] + 16 * v16);
      *v23 = a1;
      v23[1] = a2;
      return result;
    }
LABEL_11:
    v22[(v16 >> 6) + 8] |= 1 << v16;
    v25 = (uint64_t *)(v22[6] + 16 * v16);
    *v25 = a3;
    v25[1] = a4;
    v26 = (_QWORD *)(v22[7] + 16 * v16);
    *v26 = a1;
    v26[1] = a2;
    v27 = v22[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (!v28)
    {
      v22[2] = v29;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_209F001A8(result, a5 & 1, a6);
  result = sub_209EE31C0(a3, a4);
  if ((v20 & 1) == (v24 & 1))
  {
    v16 = result;
    v22 = (_QWORD *)*v8;
    if ((v20 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_209F67AA4();
  __break(1u);
  return result;
}

uint64_t method lookup function for RUIContentRegistry()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RUIContentRegistry.supportsView(named:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of RUIContentRegistry.addViewType(_:named:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA8))();
}

{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB0))();
}

uint64_t sub_209F00688(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8);
}

void *sub_209F00690(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_209F677F8();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (uint64_t *)(*(_QWORD *)(v3 + 48) + v17);
    v20 = *v18;
    v19 = v18[1];
    v21 = *(_OWORD *)(*(_QWORD *)(v3 + 56) + v17);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = v20;
    v22[1] = v19;
    *(_OWORD *)(*(_QWORD *)(v5 + 56) + v17) = v21;
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

unint64_t sub_209F00830()
{
  unint64_t result;

  result = qword_2545BB510;
  if (!qword_2545BB510)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F787F0, &type metadata for ChoiceView);
    atomic_store(result, (unint64_t *)&qword_2545BB510);
  }
  return result;
}

unint64_t sub_209F00874()
{
  unint64_t result;

  result = qword_2545BB518;
  if (!qword_2545BB518)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F77C00, &type metadata for MultiChoiceView);
    atomic_store(result, (unint64_t *)&qword_2545BB518);
  }
  return result;
}

unint64_t sub_209F008B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2545BB520;
  if (!qword_2545BB520)
  {
    v1 = type metadata accessor for BannerRowElement();
    result = MEMORY[0x20BD1DB1C](&protocol conformance descriptor for BannerRowElement, v1);
    atomic_store(result, (unint64_t *)&qword_2545BB520);
  }
  return result;
}

uint64_t sub_209F00910(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_209F00974;
  return RemoteUIDataSource.data(for:)(a1, a2, a3);
}

uint64_t sub_209F00974(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *v3;
  v7 = swift_task_dealloc();
  if (!v2)
  {
    v7 = a1;
    v8 = a2;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
}

uint64_t RemoteUIDataSource.data(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);

  v4[3] = a3;
  v4[4] = v3;
  v4[2] = a2;
  v8 = sub_209F6691C();
  v4[5] = v8;
  v4[6] = *(_QWORD *)(v8 - 8);
  v9 = swift_task_alloc();
  v4[7] = v9;
  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 8) + *(_QWORD *)(a3 + 8));
  v10 = (_QWORD *)swift_task_alloc();
  v4[8] = v10;
  *v10 = v4;
  v10[1] = sub_209F00A90;
  return v12(v9, a1, a2, a3);
}

uint64_t sub_209F00A90()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t (*v5)(_QWORD, _QWORD, _QWORD);

  v2 = (_QWORD *)*v1;
  v2[9] = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  v5 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))(**(int **)(v2[3] + 16) + *(_QWORD *)(v2[3] + 16));
  v4 = (_QWORD *)swift_task_alloc();
  v2[10] = v4;
  *v4 = v2;
  v4[1] = sub_209F00B44;
  return v5(v2[7], v2[2], v2[3]);
}

uint64_t sub_209F00B44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 88) = v2;
  swift_task_dealloc();
  if (!v2)
  {
    *(_QWORD *)(v6 + 96) = a2;
    *(_QWORD *)(v6 + 104) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_209F00BBC()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 48) + 8))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 40));
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 96));
}

uint64_t sub_209F00C08()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_209F00C3C()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 48) + 8))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 40));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

Swift::Void __swiftcall URLRequest.addRemoteUIHeaders()()
{
  sub_209F66910();
}

uint64_t sub_209F00CAC()
{
  uint64_t v1;

  sub_209F00CE4();
  sub_209F66EA4();
  return v1;
}

unint64_t sub_209F00CE4()
{
  unint64_t result;

  result = qword_2545BEDD0[0];
  if (!qword_2545BEDD0[0])
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F77898, &type metadata for RemoteUIDataSourceKey);
    atomic_store(result, qword_2545BEDD0);
  }
  return result;
}

uint64_t sub_209F00D28()
{
  sub_209F00CE4();
  return sub_209F66EB0();
}

uint64_t *initializeBufferWithCopyOfBuffer for RemoteLoaderError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_209F6691C();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for RemoteLoaderError(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = sub_209F6691C();
  v3 = *(_QWORD *)(v2 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return result;
}

void *initializeWithCopy for RemoteLoaderError(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_209F6691C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithCopy for RemoteLoaderError(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_209F6691C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

void *initializeWithTake for RemoteLoaderError(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_209F6691C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithTake for RemoteLoaderError(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_209F6691C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteLoaderError()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_209F011C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_209F6691C();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for RemoteLoaderError()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_209F0121C(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = sub_209F6691C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_209F0126C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_209F6691C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_209F012A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_209F6691C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

uint64_t type metadata accessor for RemoteLoaderError()
{
  uint64_t result;

  result = qword_2545BEE60;
  if (!qword_2545BEE60)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_209F01320()
{
  uint64_t result;
  unint64_t v1;

  result = sub_209F6691C();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of RemoteUIDataSource.request(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 8) + *(_QWORD *)(a4 + 8));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_209EE061C;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of RemoteUIDataSource.data(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 16) + *(_QWORD *)(a3 + 16));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_209F01474;
  return v9(a1, a2, a3);
}

{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 24) + *(_QWORD *)(a3 + 24));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_209F0155C;
  return v9(a1, a2, a3);
}

uint64_t sub_209F01474(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v6;

  v6 = *v2;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

ValueMetadata *type metadata accessor for RemoteUIDataSourceKey()
{
  return &type metadata for RemoteUIDataSourceKey;
}

uint64_t sub_209F01560(uint64_t a1)
{
  return sub_209F016CC(a1, qword_2545BEEF8);
}

uint64_t sub_209F01578()
{
  return sub_209F015E4(&qword_2545BEEF0, (uint64_t)qword_2545BEEF8);
}

uint64_t static RUI.Logger.common.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_209F01640(&qword_2545BEEF0, (uint64_t)qword_2545BEEF8, a1);
}

uint64_t sub_209F015B0(uint64_t a1)
{
  return sub_209F016CC(a1, qword_2545BEF18);
}

uint64_t sub_209F015C8()
{
  return sub_209F015E4(&qword_2545BEF10, (uint64_t)qword_2545BEF18);
}

uint64_t sub_209F015E4(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;

  if (*a1 != -1)
    swift_once();
  v3 = sub_209F66BA4();
  return __swift_project_value_buffer(v3, a2);
}

uint64_t static RUI.Logger.xml.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_209F01640(&qword_2545BEF10, (uint64_t)qword_2545BEF18, a1);
}

uint64_t sub_209F01640@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_209F66BA4();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t sub_209F016A8(uint64_t a1)
{
  return sub_209F016CC(a1, qword_2545BEF38);
}

uint64_t sub_209F016CC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_209F66BA4();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_209F66B98();
}

uint64_t sub_209F01740()
{
  return sub_209F015E4(&qword_2545BEF30, (uint64_t)qword_2545BEF38);
}

uint64_t static RUI.Logger.scripting.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_209F01640(&qword_2545BEF30, (uint64_t)qword_2545BEF38, a1);
}

ValueMetadata *type metadata accessor for RUI.Logger()
{
  return &type metadata for RUI.Logger;
}

uint64_t sub_209F01788()
{
  void *v0;
  id v1;

  v1 = v0;
  return sub_209F6715C();
}

void NavigationDestination.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v1 = sub_209F66A90();
  MEMORY[0x24BDAC7A8](v1, v2);
  v3 = type metadata accessor for NavigationDestination();
  MEMORY[0x24BDAC7A8](v3, v4);
  sub_209F01968(v0, (uint64_t)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = (char *)sub_209F01860 + 4 * byte_209F778E0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_209F01860()
{
  sub_209F67B1C();
  sub_209F6733C();
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for NavigationDestination()
{
  uint64_t result;

  result = qword_2545BF050;
  if (!qword_2545BF050)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_209F01968(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NavigationDestination();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t NavigationDestination.hashValue.getter()
{
  sub_209F67B10();
  NavigationDestination.hash(into:)();
  return sub_209F67B28();
}

uint64_t sub_209F019EC()
{
  sub_209F67B10();
  NavigationDestination.hash(into:)();
  return sub_209F67B28();
}

uint64_t sub_209F01A2C()
{
  sub_209F67B10();
  NavigationDestination.hash(into:)();
  return sub_209F67B28();
}

BOOL NavigationDestination.requiresLoading.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _BOOL8 v5;
  uint64_t v7;

  v1 = type metadata accessor for NavigationDestination();
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_209F01968(v0, (uint64_t)v4);
  v5 = swift_getEnumCaseMultiPayload() == 2;
  sub_209F01E1C((uint64_t)v4);
  return v5;
}

void _s8RemoteUI21NavigationDestinationO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  _QWORD v20[2];

  v4 = sub_209F66A90();
  v20[0] = *(_QWORD *)(v4 - 8);
  v20[1] = v4;
  MEMORY[0x24BDAC7A8](v4, v5);
  v6 = type metadata accessor for NavigationDestination();
  v8 = MEMORY[0x24BDAC7A8](v6, v7);
  v10 = MEMORY[0x24BDAC7A8](v8, v9);
  v12 = MEMORY[0x24BDAC7A8](v10, v11);
  MEMORY[0x24BDAC7A8](v12, v13);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB558);
  v16 = MEMORY[0x24BDAC7A8](v14, v15);
  v18 = (char *)v20 + *(int *)(v16 + 48) - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_209F01968(a1, (uint64_t)v20 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_209F01968(a2, (uint64_t)v18);
  v19 = (char *)sub_209F01C5C + 4 * byte_209F778E4[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_209F01C5C()
{
  uint64_t v0;
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char v6;
  char v7;

  sub_209F01968(v0, (uint64_t)v1);
  v4 = *v1;
  v3 = v1[1];
  if (!swift_getEnumCaseMultiPayload())
  {
    if (v4 == *v2 && v3 == v2[1])
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v6 = sub_209F679A8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v6 & 1) == 0)
      {
        sub_209F01E1C(v0);
        goto LABEL_9;
      }
    }
    sub_209F01E1C(v0);
    v7 = 1;
    return v7 & 1;
  }
  swift_bridgeObjectRelease();
  sub_209F023BC(v0);
LABEL_9:
  v7 = 0;
  return v7 & 1;
}

uint64_t sub_209F01E1C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for NavigationDestination();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_209F01E58()
{
  return sub_209EE4ABC(&qword_2545BB550, (uint64_t (*)(uint64_t))type metadata accessor for NavigationDestination, (uint64_t)&protocol conformance descriptor for NavigationDestination);
}

uint64_t initializeBufferWithCopyOfBuffer for NavigationDestination(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_209F01ED4 + 4 * byte_209F778E8[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

void destroy for NavigationDestination(id *a1)
{
  uint64_t v2;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
      swift_bridgeObjectRelease();
      break;
    case 2u:
      v2 = sub_209F66A90();
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
      break;
    case 3u:

      break;
    default:
      return;
  }
}

void initializeWithCopy for NavigationDestination()
{
  char *v0;

  v0 = (char *)sub_209F02058 + 4 * byte_209F778F0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_209F02058()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *v0 = *v1;
  v0[1] = v2;
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for NavigationDestination(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_209F01E1C(result);
    v2 = (char *)&loc_209F02144 + 4 * byte_209F778F4[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void *initializeWithTake for NavigationDestination(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v6 = sub_209F66A90();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for NavigationDestination(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_209F01E1C((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v6 = sub_209F66A90();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for NavigationDestination(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for NavigationDestination(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_209F02330()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_209F02340()
{
  uint64_t result;
  unint64_t v1;

  result = sub_209F66A90();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_209F023BC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB558);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_209F023FC()
{
  unint64_t result;

  result = qword_2545BB560;
  if (!qword_2545BB560)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2545BB560);
  }
  return result;
}

uint64_t sub_209F02438(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  id v6;
  uint64_t result;

  if (a5)
  {
    sub_209EEAFF0();
    swift_retain();
    v6 = a4;
    return swift_retain();
  }
  return result;
}

uint64_t sub_209F02484(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_209F024B4 + 4 * byte_209F779B0[a1]))(0x656C746974, 0xE500000000000000);
}

uint64_t sub_209F024B4()
{
  return 0x656C746974627573;
}

uint64_t sub_209F024CC()
{
  return 0x6567616D69;
}

uint64_t sub_209F024DC()
{
  return 25705;
}

uint64_t sub_209F024E8()
{
  return 0x6F684369746C756DLL;
}

unint64_t sub_209F02508()
{
  return 0xD000000000000013;
}

uint64_t sub_209F02524()
{
  return 0x746E65746E6F63;
}

uint64_t sub_209F0253C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_209F0256C + 4 * byte_209F779B7[a1]))(0x656C746974, 0xE500000000000000);
}

uint64_t sub_209F0256C()
{
  return 0x656C746974627573;
}

uint64_t sub_209F02584()
{
  return 0x6567616D69;
}

uint64_t sub_209F02594()
{
  return 25705;
}

uint64_t sub_209F025A0()
{
  return 0x6F684369746C756DLL;
}

unint64_t sub_209F025C0()
{
  return 0xD000000000000013;
}

uint64_t sub_209F025DC()
{
  return 0x746E65746E6F63;
}

void sub_209F025F4(char *a1)
{
  sub_209F02600(*a1);
}

void sub_209F02600(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_209F02648(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_209F026EC + 4 * byte_209F779C5[a2]))(0x656C746974627573);
}

uint64_t sub_209F026EC(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x656C746974627573 && v1 == 0xE800000000000000)
    v2 = 1;
  else
    v2 = sub_209F679A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_209F027E8()
{
  char *v0;

  sub_209F028DC(0, *v0);
}

void sub_209F027F4(uint64_t a1)
{
  char *v1;

  sub_209F027FC(a1, *v1);
}

void sub_209F027FC(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_209F02838()
{
  sub_209F6733C();
  return swift_bridgeObjectRelease();
}

void sub_209F028D4(uint64_t a1)
{
  char *v1;

  sub_209F028DC(a1, *v1);
}

void sub_209F028DC(uint64_t a1, char a2)
{
  sub_209F67B10();
  __asm { BR              X10 }
}

uint64_t sub_209F02924()
{
  sub_209F6733C();
  swift_bridgeObjectRelease();
  return sub_209F67B28();
}

uint64_t sub_209F029D4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_209F06E3C();
  *a1 = result;
  return result;
}

uint64_t sub_209F02A00@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_209F02484(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_209F02A28()
{
  unsigned __int8 *v0;

  return sub_209F0253C(*v0);
}

uint64_t sub_209F02A30@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_209F06E3C();
  *a1 = result;
  return result;
}

void sub_209F02A54(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_209F02A60()
{
  sub_209F07DF4();
  return sub_209F67B88();
}

uint64_t sub_209F02A88()
{
  sub_209F07DF4();
  return sub_209F67B94();
}

uint64_t sub_209F02AB0()
{
  sub_209F67B10();
  sub_209F6733C();
  return sub_209F67B28();
}

uint64_t sub_209F02B08()
{
  return sub_209F6733C();
}

uint64_t sub_209F02B28()
{
  sub_209F67B10();
  sub_209F6733C();
  return sub_209F67B28();
}

uint64_t sub_209F02B7C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_209F67840();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_209F02BCC(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "bulletedItem");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

uint64_t sub_209F02BF0()
{
  return 0x646574656C6C7562;
}

uint64_t sub_209F02C10@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_209F67840();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_209F02C64()
{
  sub_209F081C0();
  return sub_209F67B88();
}

uint64_t sub_209F02C8C()
{
  sub_209F081C0();
  return sub_209F67B94();
}

BOOL sub_209F02CB4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_209F02CD0()
{
  return sub_209F67B1C();
}

uint64_t sub_209F02CFC()
{
  _BYTE *v0;

  if (*v0)
    return 0x656C746974627573;
  else
    return 0x656C746974;
}

uint64_t sub_209F02D34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_209F06E84(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_209F02D58()
{
  sub_209F06F6C();
  return sub_209F67B88();
}

uint64_t sub_209F02D80()
{
  sub_209F06F6C();
  return sub_209F67B94();
}

uint64_t sub_209F02DA8@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  _OWORD *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  _QWORD v37[2];
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  id v44;
  int v45;
  int v46;
  void *v47;
  id v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t countAndFlagsBits;
  void *v54;
  char *v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  unsigned __int8 v73;
  _BYTE v74[7];
  id v75;
  uint64_t v76;
  uint64_t v77;
  unsigned __int8 v78;
  _BYTE v79[7];
  void *v80;
  unsigned __int8 v81;
  _BYTE v82[7];
  void *v83;
  _BYTE v84[40];
  _QWORD v85[2];
  unsigned __int8 v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  unsigned __int8 v90;
  void *v91;
  unsigned __int8 v92;
  void *v93;
  _BYTE v94[7];
  unsigned __int8 v95;
  _BYTE v96[7];
  unsigned __int8 v97;
  _BYTE v98[7];
  unsigned __int8 v99;
  _OWORD *v100;

  v100 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB578);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_209F06F6C();
  sub_209F67B58();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v55 = v8;
  v56 = v4;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v9 = Decoder.decodeRUIID()();
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v55, v56);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  LOBYTE(v65) = 0;
  swift_bridgeObjectRetain();
  v12 = sub_209F678A0();
  v54 = v13;
  v52 = v12;
  countAndFlagsBits = v9._countAndFlagsBits;
  LOBYTE(v65) = 1;
  swift_bridgeObjectRetain();
  v51 = sub_209F678A0();
  v15 = v14;
  sub_209EE0E3C((uint64_t)a1, (uint64_t)v84);
  swift_bridgeObjectRetain();
  RUIImage.init(from:)((uint64_t)v84, (uint64_t)v85);
  v16 = v86;
  v47 = (void *)v85[1];
  v48 = v87;
  v40 = v5;
  v41 = v88;
  v49 = v91;
  v50 = v89;
  v45 = v90;
  v46 = v92;
  v42 = v93;
  v43 = v85[0];
  v99 = v86;
  v97 = v90;
  v95 = v92;
  v39 = v15;
  v17 = a1[3];
  v37[1] = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_209EEAFF0();
  swift_retain();
  v18 = v48;
  v44 = v48;
  v19 = v41;
  swift_retain();
  Decoder.ruiDecodingContext.getter();
  v20 = v65;

  v65 = v43;
  v66 = v47;
  v38 = v16;
  LOBYTE(v67) = v16;
  v68 = v18;
  v69 = v19;
  v70 = v50;
  LOBYTE(v71) = v45;
  v72 = v49;
  v73 = v46;
  v75 = v42;
  v21 = v43;
  sub_209EEAFF0();
  v44 = v44;
  swift_retain();
  swift_retain();
  v22 = sub_209EDFDCC();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)v20 + 160))(&v65, v22, v23);
  swift_release();
  swift_unknownObjectRelease();
  v24 = v47;
  LOBYTE(v20) = v38;
  sub_209EEB098();
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t))(v40 + 8))(v55, v56);
  v37[0] = v9._object;
  *(_QWORD *)&v57 = countAndFlagsBits;
  *((_QWORD *)&v57 + 1) = v9._object;
  *(_QWORD *)&v58 = v52;
  *((_QWORD *)&v58 + 1) = v54;
  v25 = v39;
  *(_QWORD *)&v59 = v51;
  *((_QWORD *)&v59 + 1) = v39;
  v26 = v21;
  *(_QWORD *)&v60 = v21;
  *((_QWORD *)&v60 + 1) = v24;
  LOBYTE(v61) = v20;
  *((_QWORD *)&v61 + 1) = v48;
  *(_QWORD *)&v62 = v19;
  *((_QWORD *)&v62 + 1) = v50;
  LOBYTE(v63) = v45;
  *((_QWORD *)&v63 + 1) = v49;
  LOBYTE(v64) = v46;
  v27 = v42;
  *((_QWORD *)&v64 + 1) = v42;
  sub_209EF7704((uint64_t)&v57);
  sub_209EEB098();
  v28 = (void *)v37[0];
  swift_bridgeObjectRelease();
  v29 = v54;
  swift_bridgeObjectRelease();
  v30 = v25;
  swift_bridgeObjectRelease();
  swift_release();
  v31 = v41;
  swift_release();

  v32 = v62;
  v33 = v100;
  v100[4] = v61;
  v33[5] = v32;
  v34 = v64;
  v33[6] = v63;
  v33[7] = v34;
  v35 = v58;
  *v33 = v57;
  v33[1] = v35;
  v36 = v60;
  v33[2] = v59;
  v33[3] = v36;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v65 = countAndFlagsBits;
  v66 = v28;
  v67 = v52;
  v68 = v29;
  v69 = v51;
  v70 = v30;
  v71 = v26;
  v72 = v47;
  v73 = v99;
  *(_DWORD *)v74 = *(_DWORD *)v98;
  *(_DWORD *)&v74[3] = *(_DWORD *)&v98[3];
  v75 = v48;
  v76 = v31;
  v77 = v50;
  v78 = v97;
  *(_DWORD *)&v79[3] = *(_DWORD *)&v96[3];
  *(_DWORD *)v79 = *(_DWORD *)v96;
  v80 = v49;
  v81 = v95;
  *(_DWORD *)&v82[3] = *(_DWORD *)&v94[3];
  *(_DWORD *)v82 = *(_DWORD *)v94;
  v83 = v27;
  return sub_209EF7798((uint64_t)&v65);
}

uint64_t sub_209F03318@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_209F02DA8(a1, a2);
}

void sub_209F0332C(uint64_t a1@<X8>)
{
  __int128 *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  char v15;
  id v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  void *v34;
  char v35;
  void *v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __n128 v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  _OWORD v73[10];
  char v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  uint64_t v89;
  _BYTE v90[80];
  __int128 v91;
  __int128 v92;

  v3 = v1[13];
  v87 = v1[12];
  v88 = v3;
  v89 = *((_QWORD *)v1 + 28);
  v4 = v1[9];
  v83 = v1[8];
  v84 = v4;
  v5 = v1[11];
  v85 = v1[10];
  v86 = v5;
  v6 = v1[5];
  v79 = v1[4];
  v80 = v6;
  v7 = v1[7];
  v81 = v1[6];
  v82 = v7;
  v8 = v1[1];
  v75 = *v1;
  v76 = v8;
  v9 = v1[3];
  v10 = *((_QWORD *)&v82 + 1);
  v11 = v81;
  if (!(_QWORD)v83)
    v10 = 0;
  v60 = v10;
  v61 = *((_QWORD *)&v83 + 1);
  v12 = 0xE000000000000000;
  v77 = v1[2];
  v78 = v9;
  if ((_QWORD)v83)
    v12 = v83;
  v59 = v12;
  v13 = v84;
  sub_209EF1E0C((uint64_t)&v84 + 8, (uint64_t)v90, &qword_2545BB588);
  sub_209EF1E0C((uint64_t)v90, (uint64_t)&v91, &qword_2545BB588);
  if ((_QWORD)v92)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v58 = RUIImage.preloadedImage.getter();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v58 = 0;
  }
  if (BYTE8(v79) == 255)
  {
    v14 = 0;
    v15 = -1;
  }
  else
  {
    v14 = (void *)v79;
    if ((BYTE8(v79) & 1) != 0)
    {
      v14 = *(void **)(*(_QWORD *)(v79 + OBJC_IVAR____TtCV8RemoteUI15MultiChoiceView7Section_htmlHeader)
                     + OBJC_IVAR____TtCV8RemoteUI15MultiChoiceView17HTMLHeaderElement_webContainerView);
      v16 = v14;
      v15 = 1;
    }
    else
    {
      swift_bridgeObjectRetain();
      v15 = 0;
    }
  }
  v17 = v80;
  v18 = BYTE8(v80);
  v19 = swift_allocObject();
  v20 = v88;
  *(_OWORD *)(v19 + 208) = v87;
  *(_OWORD *)(v19 + 224) = v20;
  *(_QWORD *)(v19 + 240) = v89;
  v21 = v84;
  *(_OWORD *)(v19 + 144) = v83;
  *(_OWORD *)(v19 + 160) = v21;
  v22 = v86;
  *(_OWORD *)(v19 + 176) = v85;
  *(_OWORD *)(v19 + 192) = v22;
  v23 = v80;
  *(_OWORD *)(v19 + 80) = v79;
  *(_OWORD *)(v19 + 96) = v23;
  v24 = v82;
  *(_OWORD *)(v19 + 112) = v81;
  *(_OWORD *)(v19 + 128) = v24;
  v25 = v76;
  *(_OWORD *)(v19 + 16) = v75;
  *(_OWORD *)(v19 + 32) = v25;
  v26 = v78;
  *(_OWORD *)(v19 + 48) = v77;
  *(_OWORD *)(v19 + 64) = v26;
  sub_209EF5730(v17, v18);
  sub_209F07684((uint64_t)&v75);
  v27 = sub_209EF8608();
  v29 = v28 & 1;
  v30 = sub_209EF860C();
  v57.n128_u64[1] = v19;
  v57.n128_u64[0] = (unint64_t)sub_209F06FB4;
  sub_209EF71CC(v60, v59, v61, v13, v11, (uint64_t)v58, 0, 0, (uint64_t)v73, 0.0, v17, v18, (uint64_t)v14, v15, v57, v27, v29, v30, v31 & 1);
  v32 = sub_209F66E14();
  v33 = sub_209F67048();
  v34 = (void *)v77;
  v35 = BYTE8(v77);
  sub_209F07684((uint64_t)&v75);
  sub_209EEC018(v34, v35);
  v36 = (void *)sub_209EF5940(v34, v35, (uint64_t *)&unk_2545BB7A0, (void (*)(void *, _QWORD))sub_209EEC698);
  sub_209EEC698(v34, v35);
  sub_209F077CC((uint64_t)&v75);
  if (!v36 || (v37 = objc_msgSend(v36, sel_pageElement), v36, !v37))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545BB590);
    swift_allocObject();
    sub_209F66C7C();
    sub_209EE83E8(&qword_2545BB090, (uint64_t *)&unk_2545BB590, MEMORY[0x24BDB9CB0]);
    v39 = sub_209F66D00();
    swift_release();
    goto LABEL_18;
  }
  v38 = objc_msgSend(v37, sel_page);

  if (v38)
  {
    v39 = RUIPage.pageDidChange.getter();

LABEL_18:
    v70 = v73[8];
    v71 = v73[9];
    LOBYTE(v72) = v74;
    v66 = v73[4];
    v67 = v73[5];
    v68 = v73[6];
    v69 = v73[7];
    v62 = v73[0];
    v63 = v73[1];
    v64 = v73[2];
    v65 = v73[3];
    v40 = swift_allocObject();
    v41 = v88;
    *(_OWORD *)(v40 + 208) = v87;
    *(_OWORD *)(v40 + 224) = v41;
    *(_QWORD *)(v40 + 240) = v89;
    v42 = v84;
    *(_OWORD *)(v40 + 144) = v83;
    *(_OWORD *)(v40 + 160) = v42;
    v43 = v86;
    *(_OWORD *)(v40 + 176) = v85;
    *(_OWORD *)(v40 + 192) = v43;
    v44 = v80;
    *(_OWORD *)(v40 + 80) = v79;
    *(_OWORD *)(v40 + 96) = v44;
    v45 = v82;
    *(_OWORD *)(v40 + 112) = v81;
    *(_OWORD *)(v40 + 128) = v45;
    v46 = v76;
    *(_OWORD *)(v40 + 16) = v75;
    *(_OWORD *)(v40 + 32) = v46;
    v47 = v78;
    *(_OWORD *)(v40 + 48) = v77;
    *(_OWORD *)(v40 + 64) = v47;
    v48 = swift_allocObject();
    *(_QWORD *)(v48 + 16) = sub_209F07964;
    *(_QWORD *)(v48 + 24) = v40;
    v49 = swift_allocObject();
    v50 = v88;
    *(_OWORD *)(v49 + 208) = v87;
    *(_OWORD *)(v49 + 224) = v50;
    *(_QWORD *)(v49 + 240) = v89;
    v51 = v84;
    *(_OWORD *)(v49 + 144) = v83;
    *(_OWORD *)(v49 + 160) = v51;
    v52 = v86;
    *(_OWORD *)(v49 + 176) = v85;
    *(_OWORD *)(v49 + 192) = v52;
    v53 = v80;
    *(_OWORD *)(v49 + 80) = v79;
    *(_OWORD *)(v49 + 96) = v53;
    v54 = v82;
    *(_OWORD *)(v49 + 112) = v81;
    *(_OWORD *)(v49 + 128) = v54;
    v55 = v76;
    *(_OWORD *)(v49 + 16) = v75;
    *(_OWORD *)(v49 + 32) = v55;
    v56 = v78;
    *(_OWORD *)(v49 + 48) = v77;
    *(_OWORD *)(v49 + 64) = v56;
    *(_OWORD *)(a1 + 128) = v70;
    *(_OWORD *)(a1 + 144) = v71;
    *(_OWORD *)(a1 + 64) = v66;
    *(_OWORD *)(a1 + 80) = v67;
    *(_OWORD *)(a1 + 96) = v68;
    *(_OWORD *)(a1 + 112) = v69;
    *(_OWORD *)a1 = v62;
    *(_OWORD *)(a1 + 16) = v63;
    *(_OWORD *)(a1 + 32) = v64;
    *(_OWORD *)(a1 + 48) = v65;
    *(_QWORD *)(a1 + 160) = v72;
    *(_QWORD *)(a1 + 168) = v32;
    *(_BYTE *)(a1 + 176) = v33;
    *(_QWORD *)(a1 + 184) = v39;
    *(_QWORD *)(a1 + 192) = sub_209EFB1F8;
    *(_QWORD *)(a1 + 200) = v48;
    *(_QWORD *)(a1 + 208) = sub_209F07B24;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = v49;
    sub_209F07684((uint64_t)&v75);
    sub_209F07684((uint64_t)&v75);
    return;
  }
  __break(1u);
}

void sub_209F03828(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *KeyPath;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  int v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  _QWORD *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  char v30;
  void *v31;
  int v32;
  uint64_t v33;
  int v34;
  int v35;
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char v63;
  char *v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t);
  uint64_t v74;
  void *v75;
  uint64_t v76;
  void *v77;
  char v78;
  void *v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  __int128 v83;
  uint64_t v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  uint64_t v91;
  char *v92;
  id v93;
  id v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  void *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  uint64_t v126;
  id v127;
  id v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  uint64_t v143;
  uint64_t v144;
  id v145;
  id v146;
  void *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  void *v152;
  uint64_t v153;
  uint64_t v154;
  char v155;
  _BYTE v156[7];
  uint64_t v157;
  char v158;
  _BYTE v159[7];
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  void *v166;
  uint64_t v167;
  void *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  _BYTE v175[7];
  _BYTE v176[7];
  _BYTE v177[7];
  _BYTE v178[7];
  char v179;
  _BYTE v180[7];
  char v181;
  id v182;

  v117 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB5B0);
  v115 = *(_QWORD *)(v3 - 8);
  v116 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v118 = (char *)&v96 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (_QWORD *)sub_209F66AE4();
  v120 = *(v6 - 1);
  v121 = v6;
  MEMORY[0x24BDAC7A8](v6, v7);
  v122 = (char *)&v96 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB5B8);
  v123 = *(_QWORD *)(v9 - 8);
  v124 = v9;
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v96 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = (void *)swift_getKeyPath();
  v181 = 0;
  v14 = (void *)swift_getKeyPath();
  v179 = 0;
  type metadata accessor for ElementDirectory();
  sub_209F0A54C(&qword_2545BB570, 255, (uint64_t (*)(uint64_t))type metadata accessor for ElementDirectory, (uint64_t)&unk_209F7B090);
  swift_retain();
  swift_retain();
  v15 = sub_209F66E38();
  v119 = v16;
  v17 = a1[3];
  v125 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_209F07DF4();
  swift_retain();
  v18 = v182;
  sub_209F67B58();
  v182 = v18;
  v126 = v15;
  v127 = KeyPath;
  v128 = v14;
  if (v18)
  {
    swift_release();
    swift_release();
    swift_release();
    v19 = 0;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v125);
    v35 = 0;
    v36 = 0;
    v37 = 0;
    goto LABEL_10;
  }
  v20 = v122;
  LOBYTE(v144) = 3;
  v21 = sub_209F6787C();
  v23 = v22;
  v24 = v125;
  if (v22)
  {
    v25 = v21;
  }
  else
  {
    sub_209F66AD8();
    v25 = sub_209F66ACC();
    v23 = v26;
    (*(void (**)(char *, void *))(v120 + 8))(v20, v121);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB5C0);
  LOBYTE(v129) = 4;
  sub_209F07E38();
  swift_bridgeObjectRetain();
  sub_209F678AC();
  v182 = 0;
  v122 = v23;
  v100 = v25;
  v101 = v12;
  v27 = v144;
  sub_209EE0E3C((uint64_t)v24, (uint64_t)&v144);
  swift_bridgeObjectRetain();
  v28 = v182;
  v29 = sub_209F07EB8(&v144);
  if (v28)
  {

    v31 = 0;
    v32 = 255;
  }
  else
  {
    v31 = (void *)v29;
    v32 = v30 & 1;
  }
  LOBYTE(v144) = 5;
  sub_209EF574C(v31, v32);
  v33 = v124;
  v34 = sub_209F67888();
  v182 = 0;
  v114 = v27;
  v121 = v31;
  LODWORD(v120) = v32;
  v98 = v34;
  LOBYTE(v144) = 0;
  v38 = sub_209F6787C();
  LODWORD(v99) = 1;
  v40 = v33;
  v182 = 0;
  if (v39)
  {
    v97 = sub_209F41480(v38, v39);
    v42 = v41;
    swift_bridgeObjectRelease();
  }
  else
  {
    v97 = v38;
    v42 = 0;
  }
  LOBYTE(v144) = 1;
  swift_bridgeObjectRetain();
  v43 = v101;
  v44 = v182;
  v45 = sub_209F6787C();
  v182 = v44;
  v113 = v42;
  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v123 + 8))(v43, v33);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_209EF6F08(v121, v120);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    v47 = 0;
    v48 = v99;
LABEL_25:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
    v37 = 1;
    v19 = 1;
    swift_bridgeObjectRelease();
    v35 = v48;
    v36 = v47;
LABEL_10:
    sub_209EEC698(v127, v181);
    sub_209EEC698(v128, v179);
    swift_release();
    if (v37)
    {
      sub_209EF6F08(v121, v120);
      if (!v19)
        goto LABEL_12;
    }
    else if (!v19)
    {
LABEL_12:
      if (v35)
        goto LABEL_13;
      goto LABEL_17;
    }
    swift_bridgeObjectRelease();
    if (v35)
    {
LABEL_13:
      swift_bridgeObjectRelease();
      if (!v36)
        return;
LABEL_18:
      swift_bridgeObjectRelease();
      sub_209F07914(v111, (uint64_t)v106, v108, v105, v110);
      return;
    }
LABEL_17:
    if (!v36)
      return;
    goto LABEL_18;
  }
  if (v46)
  {
    v96 = sub_209F41480(v45, v46);
    v50 = v49;
    swift_bridgeObjectRelease();
  }
  else
  {
    v96 = v45;
    v50 = 0;
  }
  sub_209EE0E3C((uint64_t)v24, (uint64_t)&v129);
  swift_bridgeObjectRetain();
  v51 = v182;
  RUIImage.init(from:)((uint64_t)&v129, (uint64_t)&v144);
  v48 = v99;
  v182 = v51;
  if (v51)
  {

    v52 = 0;
    v53 = 0;
    v54 = 0;
    v55 = 0;
    v56 = 0;
    v57 = 0;
    v58 = 0;
    v59 = 0;
    v60 = 0;
    v61 = 0;
    v182 = 0;
  }
  else
  {
    v52 = v144;
    v53 = v145;
    v54 = v146;
    v55 = v147;
    v56 = v148;
    v57 = v149;
    v58 = v150;
    v59 = v151;
    v60 = v152;
    v61 = v153;
  }
  LOBYTE(v144) = 6;
  v103 = v61;
  v104 = v60;
  v110 = v56;
  v111 = v52;
  v105 = v55;
  v106 = v53;
  v108 = v54;
  v109 = v57;
  v107 = v58;
  v112 = v59;
  sub_209F02438(v52, (uint64_t)v53, v54, v55, v56);
  v62 = v101;
  v63 = sub_209F678C4();
  v102 = v50;
  if ((v63 & 1) != 0)
  {
    LOBYTE(v144) = 6;
    sub_209F081C0();
    v64 = v118;
    v65 = v182;
    sub_209F67864();
    v182 = v65;
    if (v65)
    {
      (*(void (**)(char *, uint64_t))(v123 + 8))(v62, v40);
      sub_209F07914(v111, (uint64_t)v106, v108, v105, v110);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_209EF6F08(v121, v120);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
LABEL_43:
      v47 = 1;
      goto LABEL_25;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB5D8);
    sub_209F08204();
    v91 = v116;
    v92 = v64;
    v93 = v182;
    sub_209F678AC();
    v66 = v123;
    v182 = v93;
    if (v93)
    {
      sub_209F07914(v111, (uint64_t)v106, v108, v105, v110);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_209EF6F08(v121, v120);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v115 + 8))(v92, v91);
      (*(void (**)(char *, uint64_t))(v66 + 8))(v101, v40);
      goto LABEL_43;
    }
    if (*(_QWORD *)(v144 + 16))
    {
      v99 = v144;
      (*(void (**)(char *, uint64_t))(v115 + 8))(v118, v116);
      LODWORD(v118) = 1;
      goto LABEL_37;
    }
    swift_bridgeObjectRelease();
    LOBYTE(v144) = 6;
    v94 = v182;
    sub_209F67858();
    v182 = v94;
    if (v94)
    {
      sub_209F07914(v111, (uint64_t)v106, v108, v105, v110);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_209EF6F08(v121, v120);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v115 + 8))(v118, v116);
      (*(void (**)(char *, uint64_t))(v123 + 8))(v101, v124);
LABEL_50:
      v47 = 1;
      v24 = v125;
      v48 = v99;
      goto LABEL_25;
    }
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v129, *((uint64_t *)&v130 + 1));
    sub_209F082D4();
    v95 = v182;
    sub_209F67900();
    v182 = v95;
    if (v95)
    {
      sub_209F07914(v111, (uint64_t)v106, v108, v105, v110);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_209EF6F08(v121, v120);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v115 + 8))(v118, v116);
      (*(void (**)(char *, uint64_t))(v123 + 8))(v101, v124);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v129);
      goto LABEL_50;
    }
    v99 = RUIViewContent.anyView.getter();
    sub_209F08318((uint64_t)&v144);
    (*(void (**)(char *, uint64_t))(v115 + 8))(v118, v116);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v129);
    LODWORD(v118) = 0;
    v40 = v124;
    v24 = v125;
  }
  else
  {
    v99 = 0;
    LODWORD(v118) = 2;
  }
  v66 = v123;
LABEL_37:
  LODWORD(v124) = v98 & 1;
  __swift_project_boxed_opaque_existential_1(v24, v24[3]);
  Decoder.ruiDecodingContext.getter();
  v67 = v144;

  v125 = (_QWORD *)v67;
  if (v110)
  {
    v144 = v111;
    v68 = v105;
    v145 = v106;
    LOBYTE(v146) = v108 != 0;
    v147 = v105;
    v148 = v110;
    v149 = v109;
    LOBYTE(v150) = v107 != 0;
    v151 = v112;
    LOBYTE(v152) = v104 != 0;
    v153 = v103;
    sub_209F02438(v111, (uint64_t)v106, v108, v105, v110);
    swift_retain();
    v69 = sub_209EDFDCC();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)v67 + 160))(&v144, v69, v70);
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v123 + 8))(v101, v40);
    v71 = v111;
    v72 = (uint64_t)v106;
    sub_209F07914(v111, (uint64_t)v106, v108, v68, v110);
  }
  else
  {
    v73 = *(void (**)(char *, uint64_t))(v66 + 8);
    swift_retain();
    v73(v101, v40);
    v72 = (uint64_t)v106;
    v71 = v111;
  }
  *(_QWORD *)&v129 = v100;
  *((_QWORD *)&v129 + 1) = v122;
  *(_QWORD *)&v130 = v127;
  BYTE8(v130) = 0;
  *(_QWORD *)&v131 = v128;
  BYTE8(v131) = 0;
  *(_QWORD *)&v132 = v126;
  *((_QWORD *)&v132 + 1) = v119;
  *(_QWORD *)&v133 = v121;
  BYTE8(v133) = v120;
  *(_QWORD *)&v134 = v99;
  BYTE8(v134) = (_BYTE)v118;
  *(_QWORD *)&v135 = v114;
  BYTE8(v135) = v124;
  *(_QWORD *)&v136 = v125;
  *((_QWORD *)&v136 + 1) = v97;
  *(_QWORD *)&v137 = v113;
  *((_QWORD *)&v137 + 1) = v96;
  *(_QWORD *)&v138 = v102;
  *((_QWORD *)&v138 + 1) = v71;
  v74 = v108;
  *(_QWORD *)&v139 = v72;
  *((_QWORD *)&v139 + 1) = v108;
  v75 = v105;
  v76 = v110;
  *(_QWORD *)&v140 = v105;
  *((_QWORD *)&v140 + 1) = v110;
  *(_QWORD *)&v141 = v109;
  *((_QWORD *)&v141 + 1) = v107;
  *(_QWORD *)&v142 = v112;
  *((_QWORD *)&v142 + 1) = v104;
  v143 = v103;
  sub_209EF5730(v99, (char)v118);
  sub_209F07684((uint64_t)&v129);
  sub_209F07914(v111, v72, v74, v75, v76);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LOBYTE(v74) = (_BYTE)v118;
  sub_209EF76E8(v99, (char)v118);
  v77 = v121;
  v78 = v120;
  sub_209EF6F08(v121, v120);
  v79 = v122;
  swift_bridgeObjectRelease();
  v80 = v127;
  swift_release();
  v81 = (uint64_t)v128;
  swift_release();
  v82 = v126;
  swift_release();
  v83 = v142;
  v84 = v117;
  *(_OWORD *)(v117 + 192) = v141;
  *(_OWORD *)(v84 + 208) = v83;
  *(_QWORD *)(v84 + 224) = v143;
  v85 = v138;
  *(_OWORD *)(v84 + 128) = v137;
  *(_OWORD *)(v84 + 144) = v85;
  v86 = v140;
  *(_OWORD *)(v84 + 160) = v139;
  *(_OWORD *)(v84 + 176) = v86;
  v87 = v134;
  *(_OWORD *)(v84 + 64) = v133;
  *(_OWORD *)(v84 + 80) = v87;
  v88 = v136;
  *(_OWORD *)(v84 + 96) = v135;
  *(_OWORD *)(v84 + 112) = v88;
  v89 = v130;
  *(_OWORD *)v84 = v129;
  *(_OWORD *)(v84 + 16) = v89;
  v90 = v132;
  *(_OWORD *)(v84 + 32) = v131;
  *(_OWORD *)(v84 + 48) = v90;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  v144 = v100;
  v145 = v79;
  v146 = v80;
  LOBYTE(v147) = v181;
  *(_DWORD *)((char *)&v147 + 1) = *(_DWORD *)v180;
  HIDWORD(v147) = *(_DWORD *)&v180[3];
  v148 = v81;
  LOBYTE(v149) = v179;
  *(_DWORD *)((char *)&v149 + 1) = *(_DWORD *)v178;
  HIDWORD(v149) = *(_DWORD *)&v178[3];
  v150 = v82;
  v151 = v119;
  v152 = v77;
  LOBYTE(v153) = v78;
  *(_DWORD *)((char *)&v153 + 1) = *(_DWORD *)v177;
  HIDWORD(v153) = *(_DWORD *)&v177[3];
  v154 = v99;
  v155 = v74;
  *(_DWORD *)v156 = *(_DWORD *)v176;
  *(_DWORD *)&v156[3] = *(_DWORD *)&v176[3];
  v157 = v114;
  v158 = v124;
  *(_DWORD *)v159 = *(_DWORD *)v175;
  *(_DWORD *)&v159[3] = *(_DWORD *)&v175[3];
  v160 = (uint64_t)v125;
  v161 = v97;
  v162 = v113;
  v163 = v96;
  v164 = v102;
  v165 = v111;
  v166 = v106;
  v167 = v108;
  v168 = v105;
  v169 = v110;
  v170 = v109;
  v171 = v107;
  v172 = v112;
  v173 = v104;
  v174 = v103;
  sub_209F077CC((uint64_t)&v144);
}

void sub_209F047CC(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_209F03828(a1, a2);
}

uint64_t sub_209F047E0()
{
  return sub_209F05300(&OBJC_IVAR____TtCV8RemoteUI15MultiChoiceView17HTMLHeaderElement_parentElement);
}

void sub_209F047EC(void *a1)
{
  sub_209F05350(a1);
}

uint64_t (*sub_209F047F8(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtCV8RemoteUI15MultiChoiceView17HTMLHeaderElement_parentElement;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v3[3] = MEMORY[0x20BD1DC9C](v5);
  return sub_209F04868;
}

void sub_209F04870(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  sub_209F048B0(a1);
}

void sub_209F048B0(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  const __CFString *v22;
  __CFString *v23;
  _QWORD *v24;
  id v25;
  void *v26;
  uint64_t v27;
  void *v28;
  objc_class *v29;
  char *v30;
  _QWORD v31[3];
  objc_super v32;
  uint64_t v33;
  unint64_t v34;
  _QWORD v35[4];
  _QWORD *v36;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_209F67300();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31[2] = &v3[OBJC_IVAR____TtCV8RemoteUI15MultiChoiceView17HTMLHeaderElement_parentElement];
  swift_unknownObjectWeakInit();
  v14 = a1[3];
  v36 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  v15 = v3;
  sub_209F67B40();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
    swift_unknownObjectWeakDestroy();

    type metadata accessor for MultiChoiceView.HTMLHeaderElement();
    swift_deallocPartialClassInstance();
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v35, v35[3]);
    sub_209F679C0();
    v31[1] = sub_209F0A438(0, &qword_2545BB608);
    sub_209F672E8();
    v16 = sub_209F672D0();
    v18 = v17;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    v19 = sub_209F66A90();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v8, 1, 1, v19);
    v20 = sub_209F04CB8(v16, v18, (uint64_t)v8);
    v21 = OBJC_IVAR____TtCV8RemoteUI15MultiChoiceView17HTMLHeaderElement_webContainerView;
    *(_QWORD *)&v15[OBJC_IVAR____TtCV8RemoteUI15MultiChoiceView17HTMLHeaderElement_webContainerView] = v20;
    v33 = 0;
    v34 = 0xE000000000000000;
    sub_209F676CC();
    sub_209F67354();
    v22 = (id)RemoteUIHeaderCSSTextColor();
    if (v22)
    {
      v23 = (__CFString *)v22;
      sub_209F672C4();

    }
    v24 = v36;
    sub_209F67354();
    swift_bridgeObjectRelease();
    sub_209F67354();
    v25 = *(id *)&v15[v21];
    v26 = (void *)sub_209F672A0();
    swift_bridgeObjectRelease();
    objc_msgSend(v25, sel_setUserStyleSheet_, v26);

    __swift_project_boxed_opaque_existential_1(v24, v24[3]);
    v27 = Decoder.decodeRUIAttributeDictionary()();

    sub_209F04D90(v27);
    swift_bridgeObjectRelease();
    v28 = (void *)sub_209F6724C();
    swift_bridgeObjectRelease();
    v29 = (objc_class *)type metadata accessor for MultiChoiceView.HTMLHeaderElement();
    v32.receiver = v15;
    v32.super_class = v29;
    v30 = (char *)objc_msgSendSuper2(&v32, sel_initWithAttributes_parent_, v28, 0);

    if (v30)
    {
      objc_msgSend(*(id *)&v30[OBJC_IVAR____TtCV8RemoteUI15MultiChoiceView17HTMLHeaderElement_webContainerView], sel_setDelegate_, v30);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
    }
    else
    {
      __break(1u);
    }
  }
}

id sub_209F04CB8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  void *v4;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;

  if (a2 >> 60 == 15)
  {
    v4 = 0;
  }
  else
  {
    v4 = (void *)sub_209F66AA8();
    sub_209EE4914(a1, a2);
  }
  v7 = sub_209F66A90();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(a3, 1, v7) != 1)
  {
    v9 = (void *)sub_209F66A48();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a3, v7);
  }
  v10 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContent_baseURL_, v4, v9);

  return v10;
}

uint64_t sub_209F04D90(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  _OWORD v35[2];
  _OWORD v36[2];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB760);
    v2 = sub_209F67810();
  }
  else
  {
    v2 = MEMORY[0x24BEE4B00];
  }
  v27 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v26 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v26)
      goto LABEL_37;
    v14 = *(_QWORD *)(v27 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v26)
        goto LABEL_37;
      v14 = *(_QWORD *)(v27 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v26)
          goto LABEL_37;
        v14 = *(_QWORD *)(v27 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v26)
            goto LABEL_37;
          v14 = *(_QWORD *)(v27 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v18 = v17[1];
    *(_QWORD *)&v36[0] = *v17;
    *((_QWORD *)&v36[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    swift_dynamicCast();
    v32 = v28;
    v33 = v29;
    v34 = v30;
    sub_209EE3510(&v31, v35);
    v28 = v32;
    v29 = v33;
    v30 = v34;
    sub_209EE3510(v35, v36);
    sub_209EE3510(v36, &v32);
    result = sub_209F67684();
    v19 = -1 << *(_BYTE *)(v2 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v6 + 8 * (v20 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v6 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v6 + 8 * v21);
      }
      while (v25 == -1);
      v9 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v28;
    *(_OWORD *)(v10 + 16) = v29;
    *(_QWORD *)(v10 + 32) = v30;
    result = (uint64_t)sub_209EE3510(&v32, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v26)
  {
LABEL_37:
    swift_release();
    sub_209EE3520();
    return v2;
  }
  v14 = *(_QWORD *)(v27 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v26)
      goto LABEL_37;
    v14 = *(_QWORD *)(v27 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

void sub_209F0514C(uint64_t a1, uint64_t a2)
{
  sub_209F0836C(a2);
}

id sub_209F05284()
{
  return sub_209F05AD8(type metadata accessor for MultiChoiceView.HTMLHeaderElement);
}

uint64_t sub_209F052C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 120))();
  if (!v2)
    *a1 = result;
  return result;
}

uint64_t sub_209F052F4()
{
  return sub_209F05300(&OBJC_IVAR____TtCV8RemoteUI15MultiChoiceView7Section_parentElement);
}

uint64_t sub_209F05300(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = v1 + *a1;
  swift_beginAccess();
  return MEMORY[0x20BD1DC9C](v2);
}

void sub_209F05344(void *a1)
{
  sub_209F05350(a1);
}

void sub_209F05350(void *a1)
{
  swift_beginAccess();
  swift_unknownObjectWeakAssign();

}

uint64_t (*sub_209F053A0(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtCV8RemoteUI15MultiChoiceView7Section_parentElement;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v3[3] = MEMORY[0x20BD1DC9C](v5);
  return sub_209F04868;
}

void sub_209F05410(id **a1, char a2)
{
  id *v3;
  id v4;

  v3 = *a1;
  v4 = (*a1)[3];
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {

    swift_endAccess();
  }
  else
  {
    swift_endAccess();

  }
  free(v3);
}

uint64_t sub_209F054CC()
{
  return 0x646165486C6D7468;
}

uint64_t sub_209F054E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x646165486C6D7468 && a2 == 0xEA00000000007265)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_209F679A8();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_209F05588()
{
  sub_209F08648();
  return sub_209F67B88();
}

uint64_t sub_209F055B0()
{
  sub_209F08648();
  return sub_209F67B94();
}

void sub_209F055D8(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  sub_209F05618(a1);
}

void sub_209F05618(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  objc_class *v16;
  char *v17;
  void (*v18)(char *);
  char *v19;
  char *v20;
  _QWORD *v21;
  objc_super v22;
  uint64_t v23;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB618);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = &v3[OBJC_IVAR____TtCV8RemoteUI15MultiChoiceView7Section_parentElement];
  swift_unknownObjectWeakInit();
  v10 = a1[3];
  v21 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_209F08648();
  v11 = v3;
  sub_209F67B58();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    swift_unknownObjectWeakDestroy();

    type metadata accessor for MultiChoiceView.Section();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v12 = v6;
    type metadata accessor for MultiChoiceView.HTMLHeaderElement();
    sub_209F0A54C(&qword_2545BB628, v13, (uint64_t (*)(uint64_t))type metadata accessor for MultiChoiceView.HTMLHeaderElement, (uint64_t)&unk_209F77C7C);
    sub_209F678AC();
    *(_QWORD *)&v11[OBJC_IVAR____TtCV8RemoteUI15MultiChoiceView7Section_htmlHeader] = v23;
    __swift_project_boxed_opaque_existential_1(v21, v21[3]);
    v14 = Decoder.decodeRUIAttributeDictionary()();

    sub_209F04D90(v14);
    swift_bridgeObjectRelease();
    v15 = (void *)sub_209F6724C();
    swift_bridgeObjectRelease();
    v16 = (objc_class *)type metadata accessor for MultiChoiceView.Section();
    v22.receiver = v11;
    v22.super_class = v16;
    v17 = (char *)objc_msgSendSuper2(&v22, sel_initWithAttributes_parent_, v15, 0);

    if (v17)
    {
      v18 = *(void (**)(char *))((*MEMORY[0x24BEE4EA0] & **(_QWORD **)&v17[OBJC_IVAR____TtCV8RemoteUI15MultiChoiceView7Section_htmlHeader])
                                          + 0x68);
      v19 = v17;
      v18(v17);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v5);

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_209F058DC(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v16 = MEMORY[0x24BEE4AF8];
    sub_209F06D20(0, v1, 0);
    v2 = v16;
    v4 = (uint64_t *)(a1 + 56);
    do
    {
      v5 = *(v4 - 3);
      v6 = *(v4 - 2);
      v7 = *(v4 - 1);
      v8 = *v4;
      swift_bridgeObjectRetain();
      v9 = MEMORY[0x20BD1C6E8](v5, v6, v7, v8);
      v11 = v10;
      swift_bridgeObjectRelease();
      v13 = *(_QWORD *)(v16 + 16);
      v12 = *(_QWORD *)(v16 + 24);
      if (v13 >= v12 >> 1)
        sub_209F06D20((char *)(v12 > 1), v13 + 1, 1);
      *(_QWORD *)(v16 + 16) = v13 + 1;
      v14 = v16 + 16 * v13;
      *(_QWORD *)(v14 + 32) = v9;
      *(_QWORD *)(v14 + 40) = v11;
      v4 += 4;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_209F059D8(const OpaqueJSContext *a1, uint64_t a2, OpaqueJSValue *a3, uint64_t a4, uint64_t *a5)
{
  sub_209F08858(a1, a3, a4, a5);
  return 0;
}

void sub_209F05A68(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v4;

  v4 = a4;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_209F05ACC()
{
  return sub_209F05AD8(type metadata accessor for MultiChoiceView.Section);
}

id sub_209F05AD8(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_209F05B40()
{
  sub_209F67B10();
  sub_209F67B1C();
  return sub_209F67B28();
}

uint64_t sub_209F05B84()
{
  sub_209F67B10();
  sub_209F67B1C();
  return sub_209F67B28();
}

uint64_t sub_209F05BC4()
{
  _BYTE *v0;

  if (*v0)
    return 0x726564616568;
  else
    return 0x6E6F6974636573;
}

uint64_t sub_209F05BFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_209F08A68(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_209F05C20()
{
  sub_209F0A4B4();
  return sub_209F67B88();
}

uint64_t sub_209F05C48()
{
  sub_209F0A4B4();
  return sub_209F67B94();
}

uint64_t sub_209F05C70()
{
  sub_209F67B10();
  sub_209F67B1C();
  return sub_209F67B28();
}

uint64_t sub_209F05CB0()
{
  return sub_209F67B1C();
}

uint64_t sub_209F05CD4()
{
  sub_209F67B10();
  sub_209F67B1C();
  return sub_209F67B28();
}

unint64_t sub_209F05D10()
{
  return 0xD000000000000017;
}

uint64_t sub_209F05D2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_209F08B50(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_209F05D54()
{
  sub_209F0A470();
  return sub_209F67B88();
}

uint64_t sub_209F05D7C()
{
  sub_209F0A470();
  return sub_209F67B94();
}

char *sub_209F05DA4(uint64_t a1, char a2, uint64_t (*a3)(_QWORD *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char *v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  unint64_t v44;
  _QWORD v46[4];

  v46[3] = a4;
  if (a1 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v11 = a5;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = MEMORY[0x24BEE4AF8];
  v43 = swift_allocObject();
  *(_QWORD *)(v43 + 16) = 15;
  v15 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (v16 = HIBYTE(a6) & 0xF) : (v16 = v11 & 0xFFFFFFFFFFFFLL), !v16))
  {
    if ((a6 & 0x2000000000000000) == 0)
      v15 = v11 & 0xFFFFFFFFFFFFLL;
    v30 = 7;
    if (((a6 >> 60) & ((v11 & 0x800000000000000) == 0)) != 0)
      v30 = 11;
    sub_209F061BC(v30 | (v15 << 16), v43, a2 & 1, v14);
    swift_bridgeObjectRelease();
    v10 = *(char **)(v14 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_38;
  }
  v38 = a1;
  v39 = v14;
  v44 = 4 * v16;
  v10 = (char *)MEMORY[0x24BEE4AF8];
  v9 = 15;
  v8 = 15;
  v17 = 15;
  while (1)
  {
    v46[0] = sub_209F67378();
    v46[1] = v18;
    v19 = a3(v46);
    if (v7)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v10;
    }
    v6 = v19;
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      break;
    v9 = sub_209F67348();
LABEL_9:
    if (v44 == v9 >> 14)
      goto LABEL_29;
  }
  if (v8 >> 14 == v9 >> 14 && (a2 & 1) != 0)
  {
    v9 = sub_209F67348();
    *(_QWORD *)(v43 + 16) = v9;
    v8 = v9;
    v17 = v9;
    goto LABEL_9;
  }
  if (v9 >> 14 < v8 >> 14)
  {
    __break(1u);
    goto LABEL_41;
  }
  v20 = sub_209F67384();
  v40 = v21;
  v41 = v20;
  v23 = v22;
  v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v10 = sub_209F062C8(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
  v27 = *((_QWORD *)v10 + 2);
  v26 = *((_QWORD *)v10 + 3);
  v6 = v27 + 1;
  if (v27 >= v26 >> 1)
    v10 = sub_209F062C8((char *)(v26 > 1), v27 + 1, 1, v10);
  *((_QWORD *)v10 + 2) = v6;
  v28 = &v10[32 * v27];
  *((_QWORD *)v28 + 4) = v41;
  *((_QWORD *)v28 + 5) = v23;
  *((_QWORD *)v28 + 6) = v25;
  *((_QWORD *)v28 + 7) = v40;
  *(_QWORD *)(v39 + 16) = v10;
  v29 = sub_209F67348();
  v9 = v29;
  *(_QWORD *)(v43 + 16) = v29;
  if (*((_QWORD *)v10 + 2) != v38)
  {
    v8 = v29;
    v17 = v29;
    goto LABEL_9;
  }
  v17 = v29;
  v8 = v29;
LABEL_29:
  if (v44 == v8 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_37;
  }
  if (v44 >= v17 >> 14)
  {
    v6 = sub_209F67384();
    v8 = v31;
    v9 = v32;
    v11 = v33;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      goto LABEL_43;
    goto LABEL_34;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  v10 = sub_209F062C8(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
LABEL_34:
  v35 = *((_QWORD *)v10 + 2);
  v34 = *((_QWORD *)v10 + 3);
  if (v35 >= v34 >> 1)
    v10 = sub_209F062C8((char *)(v34 > 1), v35 + 1, 1, v10);
  *((_QWORD *)v10 + 2) = v35 + 1;
  v36 = &v10[32 * v35];
  *((_QWORD *)v36 + 4) = v6;
  *((_QWORD *)v36 + 5) = v8;
  *((_QWORD *)v36 + 6) = v9;
  *((_QWORD *)v36 + 7) = v11;
  *(_QWORD *)(v39 + 16) = v10;
LABEL_37:
  swift_bridgeObjectRetain();
  swift_release();
LABEL_38:
  swift_release();
  return v10;
}

uint64_t sub_209F061BC(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  char *v18;

  v10 = *(_QWORD *)(a2 + 16) >> 14;
  v11 = (v10 == a1 >> 14) & a3;
  if (v11 == 1)
    return v11 ^ 1u;
  if (a1 >> 14 < v10)
  {
    __break(1u);
    goto LABEL_9;
  }
  v4 = a4;
  v5 = sub_209F67384();
  v6 = v12;
  v7 = v13;
  v8 = v14;
  v9 = *(char **)(v4 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v4 + 16) = v9;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_9:
    v9 = sub_209F062C8(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
    *(_QWORD *)(v4 + 16) = v9;
  }
  v17 = *((_QWORD *)v9 + 2);
  v16 = *((_QWORD *)v9 + 3);
  if (v17 >= v16 >> 1)
  {
    v9 = sub_209F062C8((char *)(v16 > 1), v17 + 1, 1, v9);
    *(_QWORD *)(v4 + 16) = v9;
  }
  *((_QWORD *)v9 + 2) = v17 + 1;
  v18 = &v9[32 * v17];
  *((_QWORD *)v18 + 4) = v5;
  *((_QWORD *)v18 + 5) = v6;
  *((_QWORD *)v18 + 6) = v7;
  *((_QWORD *)v18 + 7) = v8;
  return v11 ^ 1u;
}

char *sub_209F062C8(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB788);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

double sub_209F063C8@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  double result;
  uint64_t v11;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_209EE3224(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v11 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_209F06B3C();
      v9 = v11;
    }
    sub_209EE3254(*(_QWORD *)(v9 + 48) + 40 * v6);
    sub_209EE3510((_OWORD *)(*(_QWORD *)(v9 + 56) + 32 * v6), a2);
    sub_209F067C4(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_209F064B0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD v37[2];
  __int128 v38;
  __int128 v39;
  uint64_t v40;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB760);
  v6 = sub_209F67804();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v11)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v14;
    if (!v23)
    {
      v14 = v21 + 1;
      if (v21 + 1 >= v11)
        goto LABEL_34;
      v23 = *(_QWORD *)(v36 + 8 * v14);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v14 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_43;
            if (v14 >= v11)
              goto LABEL_34;
            v23 = *(_QWORD *)(v36 + 8 * v14);
            ++v24;
            if (v23)
              goto LABEL_21;
          }
        }
        v14 = v24;
      }
    }
LABEL_21:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    v25 = *(_QWORD *)(v5 + 48) + 40 * v20;
    if ((a2 & 1) != 0)
    {
      v26 = *(_OWORD *)v25;
      v27 = *(_OWORD *)(v25 + 16);
      v40 = *(_QWORD *)(v25 + 32);
      v38 = v26;
      v39 = v27;
      sub_209EE3510((_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v20), v37);
    }
    else
    {
      sub_209EE34D4(v25, (uint64_t)&v38);
      sub_209EE3288(*(_QWORD *)(v5 + 56) + 32 * v20, (uint64_t)v37);
    }
    result = sub_209F67684();
    v28 = -1 << *(_BYTE *)(v7 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v12 + 8 * v30);
      }
      while (v34 == -1);
      v15 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    v16 = *(_QWORD *)(v7 + 48) + 40 * v15;
    v17 = v38;
    v18 = v39;
    *(_QWORD *)(v16 + 32) = v40;
    *(_OWORD *)v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    result = (uint64_t)sub_209EE3510(v37, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v15));
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

unint64_t sub_209F067C4(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v14;
  unint64_t v15;
  __int128 *v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  _BYTE v28[40];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_209F67678();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_209EE34D4(*(_QWORD *)(a2 + 48) + 40 * v6, (uint64_t)v28);
        v10 = sub_209F67684();
        result = sub_209EE3254((uint64_t)v28);
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            v14 = *(_QWORD *)(a2 + 48);
            v15 = v14 + 40 * v3;
            v16 = (__int128 *)(v14 + 40 * v6);
            if (v3 != v6 || v15 >= (unint64_t)v16 + 40)
            {
              v17 = *v16;
              v18 = v16[1];
              *(_QWORD *)(v15 + 32) = *((_QWORD *)v16 + 4);
              *(_OWORD *)v15 = v17;
              *(_OWORD *)(v15 + 16) = v18;
            }
            v19 = *(_QWORD *)(a2 + 56);
            v20 = (_OWORD *)(v19 + 32 * v3);
            v21 = (_OWORD *)(v19 + 32 * v6);
            if (v3 != v6 || (v3 = v6, v20 >= v21 + 2))
            {
              v9 = v21[1];
              *v20 = *v21;
              v20[1] = v9;
              v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v23 = *v22;
    v24 = (-1 << v3) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v4 + 8 * (result >> 6));
    v24 = *v22;
    v23 = (-1 << result) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

_OWORD *sub_209F0698C(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _OWORD *v17;
  _OWORD *result;
  unint64_t v19;
  char v20;
  _BYTE v21[40];

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_209EE3224(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = (_OWORD *)(v16[7] + 32 * v10);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
        return sub_209EE3510(a1, v17);
      }
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_209F06B3C();
      goto LABEL_7;
    }
    sub_209F064B0(v13, a3 & 1);
    v19 = sub_209EE3224(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_209EE34D4(a2, (uint64_t)v21);
      return sub_209F06AC4(v10, (uint64_t)v21, a1, v16);
    }
  }
  result = (_OWORD *)sub_209F67AA4();
  __break(1u);
  return result;
}

_OWORD *sub_209F06AC4(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  uint64_t v5;
  __int128 v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v5 = a4[6] + 40 * a1;
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(_QWORD *)(v5 + 32) = *(_QWORD *)(a2 + 32);
  result = sub_209EE3510(a3, (_OWORD *)(a4[7] + 32 * a1));
  v8 = a4[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a4[2] = v10;
  return result;
}

void *sub_209F06B3C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  _OWORD v24[2];
  _OWORD v25[2];
  uint64_t v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB760);
  v2 = *v0;
  v3 = sub_209F677F8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_26;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
        break;
    }
LABEL_25:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 40 * v15;
    sub_209EE34D4(*(_QWORD *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    v17 = 32 * v15;
    sub_209EE3288(*(_QWORD *)(v2 + 56) + v17, (uint64_t)v24);
    v18 = *(_QWORD *)(v4 + 48) + v16;
    v19 = v25[0];
    v20 = v25[1];
    *(_QWORD *)(v18 + 32) = v26;
    *(_OWORD *)v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    result = sub_209EE3510(v24, (_OWORD *)(*(_QWORD *)(v4 + 56) + v17));
  }
  v23 = v21 + 2;
  if (v23 >= v13)
    goto LABEL_26;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

char *sub_209F06D20(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_209F06D3C(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

char *sub_209F06D3C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB780);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

uint64_t sub_209F06E3C()
{
  unint64_t v0;

  v0 = sub_209F67840();
  swift_bridgeObjectRelease();
  if (v0 >= 7)
    return 7;
  else
    return v0;
}

uint64_t sub_209F06E84(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_209F679A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_209F679A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_209F06F6C()
{
  unint64_t result;

  result = qword_2545BB580;
  if (!qword_2545BB580)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F77AB0, &type metadata for MultiChoiceView.BulletedItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BB580);
  }
  return result;
}

uint64_t sub_209F06FB4()
{
  uint64_t v0;
  void *v1;
  char v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  char v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  uint64_t result;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _BYTE v34[80];
  _BYTE v35[16];
  uint64_t v36[2];
  _BYTE v37[16];
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;

  v1 = *(void **)(v0 + 48);
  v2 = *(_BYTE *)(v0 + 56);
  sub_209F07684(v0 + 16);
  sub_209EEC018(v1, v2);
  v3 = (void *)sub_209EF5940(v1, v2, (uint64_t *)&unk_2545BB7A0, (void (*)(void *, _QWORD))sub_209EEC698);
  sub_209EEC698(v1, v2);
  sub_209F077CC(v0 + 16);
  if (v3)
  {
    v4 = objc_msgSend(v3, sel_pageElement);

    if (v4)
    {
      v5 = objc_msgSend(v4, sel_page);

      if (v5)
      {
        sub_209F0A5C0((uint64_t *)(v0 + 96), (uint64_t)v36);
        sub_209F0A5C0(v36, (uint64_t)v37);
        if (v37[8] <= 1u)
        {
          sub_209EF1E0C(v0 + 152, (uint64_t)v35, &qword_2545BC5C0);
          sub_209EF1E0C(v0 + 168, (uint64_t)v34, &qword_2545BB588);
          sub_209EF1E0C((uint64_t)v34, (uint64_t)&v38, &qword_2545BB588);
          if ((_QWORD)v40)
          {
            v31 = v40;
            v32 = v41;
            v33 = v42;
            v29 = v38;
            v30 = v39;
            swift_bridgeObjectRetain();
            sub_209F0A630((uint64_t)v35);
            v14 = RUIImage.preloadedImage.getter();
          }
          else
          {
            swift_bridgeObjectRetain();
            sub_209F0A630((uint64_t)v35);
            v14 = 0;
          }
          v20 = (id)sub_209F672A0();
          swift_bridgeObjectRelease();
          sub_209EF1E0C((uint64_t)v35, (uint64_t)&v29, &qword_2545BC5C0);
          if (*((_QWORD *)&v29 + 1))
          {
            v22 = (id)sub_209F672A0();
            sub_209F0A658((uint64_t)v35);
          }
          else
          {
            v22 = 0;
          }
          v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE6E458]), sel_initWithTitle_detailText_icon_, v20, v22, v14);

          goto LABEL_38;
        }
        v6 = objc_allocWithZone((Class)RUIScrollableWelcomeController);
        v7 = (void *)sub_209F672A0();
        v8 = objc_msgSend(v6, sel_initWithTitle_detailText_icon_, v7, 0, 0);

        v9 = *(void **)(v0 + 32);
        v10 = *(_BYTE *)(v0 + 40);
        sub_209F07684(v0 + 16);
        sub_209EEC018(v9, v10);
        v11 = (void *)sub_209EF5940(v9, v10, (uint64_t *)&unk_2545BB7B0, (void (*)(void *, _QWORD))sub_209EF8604);
        sub_209EEC698(v9, v10);
        sub_209F077CC(v0 + 16);
        if (!v11)
        {
          v13 = 0;
          goto LABEL_12;
        }
        v12 = objc_msgSend(v11, sel_style);

        if (v12)
        {
          v13 = objc_msgSend(v12, sel_useNonOBStyleButton);

LABEL_12:
          objc_msgSend(v8, sel_setShouldUseCustomButtonTray_, v13);
          objc_msgSend(v8, sel_setShouldAdjustButtonTrayForKeyboard_, *(unsigned __int8 *)(v0 + 120) & (v13 ^ 1));
          objc_msgSend(v8, sel_setShouldAdjustScrollViewInsetForKeyboard_, 1);
          if (objc_msgSend(v5, sel_hasTableView)
            && (v15 = objc_msgSend(v5, sel_tableViewOM)) != 0)
          {
            v16 = v15;
            v17 = objc_msgSend(objc_allocWithZone((Class)RUIElementViewController), sel_initWithElement_, v15);
            objc_msgSend(v8, sel_setContentController_, v17);

            v18 = objc_msgSend(v16, sel_tableView);
          }
          else
          {
            if (objc_msgSend(v5, sel_hasWebView))
            {
              v19 = objc_msgSend(v5, sel_webViewOM);
              if (v19)
              {
                v16 = v19;
                v20 = objc_msgSend(v19, sel_webView);
                v21 = objc_msgSend(objc_allocWithZone((Class)RUIElementViewController), sel_initWithElement_, v16);
                objc_msgSend(v8, sel_setContentController_, v21);

                if (v20)
                  v22 = objc_msgSend(v20, sel_scrollView);
                else
                  v22 = 0;
                objc_msgSend(v8, sel_setContentScrollView_, v22);

                goto LABEL_37;
              }
            }
            if (!objc_msgSend(v5, sel_hasPasscodeView)
              || (v23 = objc_msgSend(v5, sel_passcodeViewOM)) == 0)
            {
              sub_209EF1E0C(v0 + 152, (uint64_t)v35, &qword_2545BC5C0);
              sub_209EF1E0C(v0 + 168, (uint64_t)v34, &qword_2545BB588);
              sub_209EF1E0C((uint64_t)v34, (uint64_t)&v38, &qword_2545BB588);
              if ((_QWORD)v40)
              {
                v31 = v40;
                v32 = v41;
                v33 = v42;
                v29 = v38;
                v30 = v39;
                swift_bridgeObjectRetain();
                sub_209F0A630((uint64_t)v35);
                v25 = RUIImage.preloadedImage.getter();
              }
              else
              {
                swift_bridgeObjectRetain();
                sub_209F0A630((uint64_t)v35);
                v25 = 0;
              }
              v22 = (id)sub_209F672A0();
              swift_bridgeObjectRelease();
              sub_209EF1E0C((uint64_t)v35, (uint64_t)&v29, &qword_2545BC5C0);
              if (*((_QWORD *)&v29 + 1))
              {
                v26 = (void *)sub_209F672A0();
                sub_209F0A658((uint64_t)v35);
              }
              else
              {
                v26 = 0;
              }
              v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE6E458]), sel_initWithTitle_detailText_icon_, v22, v26, v25);

              v20 = v5;
              v5 = v8;
              v8 = v27;
              goto LABEL_38;
            }
            v16 = v23;
            v24 = objc_msgSend(objc_allocWithZone((Class)RUIElementViewController), sel_initWithElement_, v23);
            objc_msgSend(v8, sel_setContentController_, v24);

            v18 = objc_msgSend(v16, sel_scrollView);
          }
          v20 = v18;
          objc_msgSend(v8, sel_setContentScrollView_, v20);
          v22 = v5;
LABEL_37:
          v5 = v16;
LABEL_38:

          return (uint64_t)v8;
        }
        __break(1u);
      }
    }
  }
  result = sub_209F677E0();
  __break(1u);
  return result;
}

uint64_t sub_209F07684(uint64_t a1)
{
  void *v2;
  char v3;
  void *v4;
  char v5;
  void *v6;
  uint64_t v7;
  unsigned __int8 v8;
  char v9;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(void **)(a1 + 16);
  v3 = *(_BYTE *)(a1 + 24);
  v4 = *(void **)(a1 + 32);
  v5 = *(_BYTE *)(a1 + 40);
  v6 = *(void **)(a1 + 64);
  v7 = *(_QWORD *)(a1 + 80);
  v14 = *(_QWORD *)(a1 + 160);
  v15 = *(_QWORD *)(a1 + 152);
  v12 = *(void **)(a1 + 176);
  v13 = *(_QWORD *)(a1 + 168);
  v11 = *(_QWORD *)(a1 + 184);
  v8 = *(_BYTE *)(a1 + 72);
  v9 = *(_BYTE *)(a1 + 88);
  swift_bridgeObjectRetain();
  sub_209EEC018(v2, v3);
  sub_209EEC018(v4, v5);
  swift_retain();
  sub_209EF574C(v6, v8);
  sub_209EF5730(v7, v9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_209F02438(v15, v14, v13, v12, v11);
  return a1;
}

uint64_t sub_209F077CC(uint64_t a1)
{
  void *v2;
  char v3;
  void *v4;
  char v5;
  void *v6;
  uint64_t v7;
  unsigned __int8 v8;
  char v9;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(void **)(a1 + 16);
  v3 = *(_BYTE *)(a1 + 24);
  v4 = *(void **)(a1 + 32);
  v5 = *(_BYTE *)(a1 + 40);
  v6 = *(void **)(a1 + 64);
  v7 = *(_QWORD *)(a1 + 80);
  v14 = *(_QWORD *)(a1 + 160);
  v15 = *(_QWORD *)(a1 + 152);
  v12 = *(void **)(a1 + 176);
  v13 = *(_QWORD *)(a1 + 168);
  v11 = *(_QWORD *)(a1 + 184);
  v8 = *(_BYTE *)(a1 + 72);
  v9 = *(_BYTE *)(a1 + 88);
  swift_bridgeObjectRelease();
  sub_209EEC698(v2, v3);
  sub_209EEC698(v4, v5);
  swift_release();
  sub_209EF6F08(v6, v8);
  sub_209EF76E8(v7, v9);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_209F07914(v15, v14, v13, v12, v11);
  return a1;
}

uint64_t sub_209F07914(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t result;

  if (a5)
  {
    sub_209EEB098();
    swift_release();

    return swift_release();
  }
  return result;
}

uint64_t sub_209F07964()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t i;
  id v5;
  void *v6;
  unint64_t v7;

  v1 = *(_QWORD *)(v0 + 112);
  v7 = v1;
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n();
    if (v2)
      goto LABEL_3;
LABEL_10:
    sub_209EF5EF0((uint64_t)&v7);
    return sub_209EF5EF0((uint64_t)&v7);
  }
  swift_bridgeObjectRetain_n();
  result = sub_209F677EC();
  v2 = result;
  if (!result)
    goto LABEL_10;
LABEL_3:
  if (v2 >= 1)
  {
    for (i = 0; i != v2; ++i)
    {
      if ((v1 & 0xC000000000000001) != 0)
        v5 = (id)MEMORY[0x20BD1CAB4](i, v1);
      else
        v5 = *(id *)(v1 + 8 * i + 32);
      v6 = v5;
      objc_msgSend(v5, sel_pageDidChange);

    }
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_209F07A48()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm()
{
  uint64_t v0;
  int v1;

  swift_bridgeObjectRelease();
  sub_209EEC698(*(id *)(v0 + 32), *(_BYTE *)(v0 + 40));
  sub_209EEC698(*(id *)(v0 + 48), *(_BYTE *)(v0 + 56));
  swift_release();
  v1 = *(unsigned __int8 *)(v0 + 88);
  if (v1 != 255)
    sub_209EF6F20(*(id *)(v0 + 80), v1 & 1);
  sub_209EF76E8(*(_QWORD *)(v0 + 96), *(_BYTE *)(v0 + 104));
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 200))
  {
    sub_209EEB098();

    swift_release();
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_209F07B24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  void *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(_QWORD *);
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  unint64_t v17;
  _BYTE v18[16];
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21[2];
  _QWORD *v22;
  char v23;

  v1 = v0;
  v2 = v0 + 16;
  sub_209EF1E0C(v0 + 80, (uint64_t)v18, (uint64_t *)&unk_2545BB790);
  sub_209EF1E0C((uint64_t)v18, (uint64_t)&v19, (uint64_t *)&unk_2545BB790);
  if (v20 != 255)
  {
    sub_209F0A5C0(&v19, (uint64_t)v21);
    sub_209F0A5C0(v21, (uint64_t)&v22);
    if (v23 == 1)
    {
      v3 = v22;
      v4 = *(void **)(v1 + 48);
      v5 = *(_BYTE *)(v1 + 56);
      sub_209F0A5D8((uint64_t)v18);
      sub_209F07684(v2);
      sub_209EEC018(v4, v5);
      v6 = sub_209EF5940(v4, v5, (uint64_t *)&unk_2545BB7A0, (void (*)(void *, _QWORD))sub_209EEC698);
      sub_209EEC698(v4, v5);
      sub_209F077CC(v2);
      (*(void (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *v3) + 0x68))(v6);
      v7 = *(_QWORD *)(v1 + 64);
      if (!v7)
      {
        while (1)
        {
LABEL_18:
          sub_209F07684(v2);
          v2 = type metadata accessor for ElementDirectory();
          sub_209F0A54C(&qword_2545BB570, 255, (uint64_t (*)(uint64_t))type metadata accessor for ElementDirectory, (uint64_t)&unk_209F7B090);
          sub_209F66E2C();
          __break(1u);
        }
      }
      v8 = *(void (**)(_QWORD *))(*(_QWORD *)v7 + 112);
      swift_retain();
      v8(v3);
      swift_release();
      sub_209F0A604((uint64_t)v18);
    }
  }
  v9 = *(_QWORD *)(v1 + 112);
  v17 = v9;
  if (v9 >> 62)
    goto LABEL_16;
  v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  while (v10)
  {
    v11 = *(_QWORD *)(v1 + 64);
    v12 = 4;
    while (1)
    {
      v13 = (v9 & 0xC000000000000001) != 0 ? (id)MEMORY[0x20BD1CAB4](v12 - 4, v9) : *(id *)(v9 + 8 * v12);
      v14 = v13;
      v15 = v12 - 3;
      if (__OFADD__(v12 - 4, 1))
        break;
      objc_msgSend(v13, sel_pageDidChange);
      if (!v11)
        goto LABEL_18;
      v1 = *(_QWORD *)(*(_QWORD *)v11 + 112);
      swift_retain();
      ((void (*)(void *))v1)(v14);
      swift_release();

      ++v12;
      if (v15 == v10)
        goto LABEL_14;
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain_n();
    v10 = sub_209F677EC();
    sub_209EF5EF0((uint64_t)&v17);
  }
LABEL_14:
  sub_209EF5EF0((uint64_t)&v17);
  return sub_209EF5EF0((uint64_t)&v17);
}

unint64_t sub_209F07DF4()
{
  unint64_t result;

  result = qword_2545BF070;
  if (!qword_2545BF070)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F782B4, &type metadata for MultiChoiceView.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BF070);
  }
  return result;
}

unint64_t sub_209F07E38()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2545BB5C8;
  if (!qword_2545BB5C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BB5C0);
    v2 = sub_209F0A54C(&qword_2545BB5D0, 255, (uint64_t (*)(uint64_t))type metadata accessor for Choice, (uint64_t)&unk_209F78B24);
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2545BB5C8);
  }
  return result;
}

uint64_t sub_209F07EB8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  char v28;
  _QWORD v29[2];

  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB768);
  v2 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26, v3);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB770);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_209F0A4B4();
  v12 = (uint64_t)v27;
  sub_209F67B58();
  if (v12)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v27 = a1;
    v25 = v2;
    v13 = v26;
    LOBYTE(v29[0]) = 0;
    if ((sub_209F678C4() & 1) != 0)
    {
      type metadata accessor for MultiChoiceView.Section();
      v28 = 0;
      sub_209F0A54C(&qword_2545BB778, v14, (uint64_t (*)(uint64_t))type metadata accessor for MultiChoiceView.Section, (uint64_t)&unk_209F77DAC);
      sub_209F678AC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      v11 = v29[0];
    }
    else
    {
      LOBYTE(v29[0]) = 1;
      sub_209F0A470();
      v15 = v5;
      sub_209F67864();
      v16 = v13;
      v17 = sub_209F678A0();
      v20 = v19;
      v24[1] = v24;
      v29[0] = 44;
      v29[1] = 0xE100000000000000;
      v21 = MEMORY[0x24BDAC7A8](v17, v19);
      v24[-2] = v29;
      v22 = v21;
      swift_bridgeObjectRetain();
      v23 = sub_209F05DA4(0x7FFFFFFFFFFFFFFFLL, 1, sub_209F0A4F8, (uint64_t)&v24[-4], v22, v20);
      v24[0] = v15;
      swift_bridgeObjectRelease();
      v11 = sub_209F058DC((uint64_t)v23);
      swift_bridgeObjectRelease();
      (*(void (**)(_QWORD, uint64_t))(v25 + 8))(v24[0], v16);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  }
  return v11;
}

unint64_t sub_209F081C0()
{
  unint64_t result;

  result = qword_2545BF078;
  if (!qword_2545BF078)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F78264, &type metadata for MultiChoiceView.ContentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BF078);
  }
  return result;
}

unint64_t sub_209F08204()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_2545BB5E0;
  if (!qword_2545BB5E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BB5D8);
    v2 = sub_209F08268();
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2545BB5E0);
  }
  return result;
}

unint64_t sub_209F08268()
{
  unint64_t result;

  result = qword_2545BB5E8;
  if (!qword_2545BB5E8)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F77B50, &type metadata for MultiChoiceView.BulletedItem);
    atomic_store(result, (unint64_t *)&qword_2545BB5E8);
  }
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

unint64_t sub_209F082D4()
{
  unint64_t result;

  result = qword_2545BB5F0;
  if (!qword_2545BB5F0)
  {
    result = MEMORY[0x20BD1DB1C](&protocol conformance descriptor for RUIViewContent, &type metadata for RUIViewContent);
    atomic_store(result, (unint64_t *)&qword_2545BB5F0);
  }
  return result;
}

uint64_t sub_209F08318(uint64_t a1)
{
  destroy for RUIViewContent(a1);
  return a1;
}

uint64_t type metadata accessor for MultiChoiceView.HTMLHeaderElement()
{
  return objc_opt_self();
}

void sub_209F0836C(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  _OWORD v26[2];
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  _BYTE v30[40];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v28 = sub_209F672C4();
  *((_QWORD *)&v28 + 1) = v8;
  swift_bridgeObjectRetain();
  v9 = MEMORY[0x24BEE0D00];
  sub_209F6769C();
  sub_209EDF8C0(a1, (uint64_t)v7);
  v10 = sub_209F66A90();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10) == 1)
  {
    sub_209EE017C((uint64_t)v7, &qword_2545BB600);
    v28 = 0u;
    v29 = 0u;
  }
  else
  {
    v12 = sub_209F66A3C();
    *((_QWORD *)&v29 + 1) = v9;
    *(_QWORD *)&v28 = v12;
    *((_QWORD *)&v28 + 1) = v13;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v7, v10);
  }
  v14 = objc_msgSend(v2, sel_attributes);
  if (!v14)
  {
    __break(1u);
    goto LABEL_15;
  }
  v15 = v14;
  v16 = sub_209F67258();

  v27 = v16;
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v29 + 1))
  {
    sub_209EE3510(&v28, v26);
    v17 = v27;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v17;
    sub_209F0698C(v26, (uint64_t)v30, isUniquelyReferenced_nonNull_native);
    v19 = v25;
    swift_bridgeObjectRelease();
    sub_209EE3254((uint64_t)v30);
    if (v19)
    {
LABEL_7:
      v20 = (void *)sub_209F6724C();
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
  }
  else
  {
    sub_209EE017C((uint64_t)&v28, &qword_2545BAF78);
    sub_209F063C8((uint64_t)v30, v26);
    sub_209EE3254((uint64_t)v30);
    sub_209EE017C((uint64_t)v26, &qword_2545BAF78);
    if (v27)
      goto LABEL_7;
  }
  v20 = 0;
LABEL_10:
  objc_msgSend(v2, sel_setAttributes_, v20);

  v21 = objc_msgSend(v2, sel_pageElement);
  if (!v21)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v22 = v21;
  v23 = objc_msgSend(v21, sel_page);

  if (!v23)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v24 = objc_msgSend(v23, sel_objectModel);

  if (v24)
  {
    objc_msgSend(v24, sel_activateElement_completion_, v2, 0);

    return;
  }
LABEL_17:
  __break(1u);
}

unint64_t sub_209F08648()
{
  unint64_t result;

  result = qword_2545BB620;
  if (!qword_2545BB620)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F77D0C, &type metadata for MultiChoiceView.Section.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BB620);
  }
  return result;
}

uint64_t type metadata accessor for MultiChoiceView.Section()
{
  return objc_opt_self();
}

char *sub_209F086AC()
{
  id v0;
  char *result;
  uint64_t v2;
  uint64_t v3;

  v0 = objc_msgSend(objc_allocWithZone((Class)RUIScriptingStaticFunction), sel_init);
  result = strdup("updateHTMLHeaderContent");
  if (result)
  {
    objc_msgSend(v0, sel_setIdentifier_, result);
    objc_msgSend(v0, sel_setFunction_, sub_209F059D8);
    objc_msgSend(v0, sel_setJSPropertyAttributes_, 0);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545BB750);
    v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_209F78310;
    *(_QWORD *)(v2 + 32) = v0;
    v3 = v2;
    sub_209F67414();
    return (char *)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_209F08774(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;

  result = MEMORY[0x24BEE4AF8];
  if (a2)
  {
    v6 = a2;
    v10 = MEMORY[0x24BEE4AF8];
    result = sub_209F67750();
    if (v6 < 0)
    {
      __break(1u);
    }
    else
    {
      v7 = (void *)objc_opt_self();
      do
      {
        v8 = *a1++;
        v9 = objc_msgSend(v7, sel_valueWithJSValueRef_inContext_, v8, a3);
        sub_209F67738();
        sub_209F6775C();
        sub_209F67768();
        sub_209F67744();
        --v6;
      }
      while (v6);
      return v10;
    }
  }
  return result;
}

void sub_209F08858(const OpaqueJSContext *a1, OpaqueJSValue *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  JSGlobalContextRef GlobalContext;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char *Private;
  void *v24;
  id v25;
  id v26;
  void *v27;
  _BYTE v28[16];

  v8 = sub_209F67300();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = &v28[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a1)
  {
    GlobalContext = JSContextGetGlobalContext(a1);
    if (GlobalContext)
    {
      v14 = objc_msgSend((id)objc_opt_self(), sel_contextWithJSGlobalContextRef_, GlobalContext);
      if (v14)
      {
        v15 = v14;
        v16 = sub_209F08774(a4, a3, (uint64_t)v15);

        if (*(_QWORD *)(v16 + 16))
        {
          v17 = *(void **)(v16 + 32);
          v18 = v17;
          swift_bridgeObjectRelease();
          if (!v17)
            goto LABEL_10;
          v19 = objc_msgSend(v18, sel_toString);

          if (!v19)
            goto LABEL_10;
          sub_209F672C4();

          sub_209F672E8();
          v20 = sub_209F672D0();
          v22 = v21;
          swift_bridgeObjectRelease();
          (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v12, v8);
          if (v22 >> 60 == 15)
            goto LABEL_10;
          Private = (char *)JSObjectGetPrivate(a2);
          if (Private)
          {
            v24 = Private;
            v25 = objc_retain(*(id *)(*(_QWORD *)&Private[OBJC_IVAR____TtCV8RemoteUI15MultiChoiceView7Section_htmlHeader]
                                    + OBJC_IVAR____TtCV8RemoteUI15MultiChoiceView17HTMLHeaderElement_webContainerView));
            v26 = v24;
            v27 = (void *)sub_209F66AA8();
            objc_msgSend(v25, sel_updateContent_, v27);

            sub_209EE4914(v20, v22);
LABEL_10:

            return;
          }
          __break(1u);
        }
        else
        {

          swift_bridgeObjectRelease();
        }
      }
    }
  }
}

uint64_t sub_209F08A68(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E6F6974636573 && a2 == 0xE700000000000000;
  if (v2 || (sub_209F679A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726564616568 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_209F679A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_209F08B50(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000017 && a2 == 0x8000000209F72380)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_209F679A8();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_209F08BD8()
{
  unint64_t result;

  result = qword_2545BB630;
  if (!qword_2545BB630)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F77A48, &type metadata for MultiChoiceView.BulletedItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BB630);
  }
  return result;
}

unint64_t sub_209F08C20()
{
  unint64_t result;

  result = qword_2545BB638;
  if (!qword_2545BB638)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F77B28, &type metadata for MultiChoiceView.BulletedItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BB638);
  }
  return result;
}

unint64_t sub_209F08C68()
{
  unint64_t result;

  result = qword_2545BB640;
  if (!qword_2545BB640)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F77B00, &type metadata for MultiChoiceView.BulletedItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BB640);
  }
  return result;
}

uint64_t sub_209F08CAC()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_209F08CBC(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_209F08CF0();
  a1[2] = sub_209F08D34();
  result = sub_209F08D78();
  a1[3] = result;
  return result;
}

unint64_t sub_209F08CF0()
{
  unint64_t result;

  result = qword_2545BB648;
  if (!qword_2545BB648)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F77C1C, &type metadata for MultiChoiceView);
    atomic_store(result, (unint64_t *)&qword_2545BB648);
  }
  return result;
}

unint64_t sub_209F08D34()
{
  unint64_t result;

  result = qword_2545BB650;
  if (!qword_2545BB650)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F77C44, &type metadata for MultiChoiceView);
    atomic_store(result, (unint64_t *)&qword_2545BB650);
  }
  return result;
}

unint64_t sub_209F08D78()
{
  unint64_t result;

  result = qword_2545BB658;
  if (!qword_2545BB658)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F77BB0, &type metadata for MultiChoiceView);
    atomic_store(result, (unint64_t *)&qword_2545BB658);
  }
  return result;
}

unint64_t sub_209F08DC0()
{
  unint64_t result;

  result = qword_2545BB660;
  if (!qword_2545BB660)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F77CA4, &type metadata for MultiChoiceView.Section.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BB660);
  }
  return result;
}

unint64_t sub_209F08E08()
{
  unint64_t result;

  result = qword_2545BB668;
  if (!qword_2545BB668)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F77D84, &type metadata for MultiChoiceView.Section.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BB668);
  }
  return result;
}

unint64_t sub_209F08E50()
{
  unint64_t result;

  result = qword_2545BB670;
  if (!qword_2545BB670)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F77D5C, &type metadata for MultiChoiceView.Section.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BB670);
  }
  return result;
}

unint64_t sub_209F08E98()
{
  unint64_t result;

  result = qword_2545BB678;
  if (!qword_2545BB678)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F77DD4, &type metadata for MultiChoiceView.ButtonTrayHeader.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BB678);
  }
  return result;
}

unint64_t sub_209F08EE0()
{
  unint64_t result;

  result = qword_2545BB680;
  if (!qword_2545BB680)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F77EB4, &type metadata for MultiChoiceView.ButtonTrayHeader.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BB680);
  }
  return result;
}

unint64_t sub_209F08F28()
{
  unint64_t result;

  result = qword_2545BB688;
  if (!qword_2545BB688)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F77E8C, &type metadata for MultiChoiceView.ButtonTrayHeader.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BB688);
  }
  return result;
}

unint64_t sub_209F08F70()
{
  unint64_t result;

  result = qword_2545BB690;
  if (!qword_2545BB690)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F77EDC, &type metadata for MultiChoiceView.ButtonTrayHeader.HeaderKeys);
    atomic_store(result, (unint64_t *)&qword_2545BB690);
  }
  return result;
}

unint64_t sub_209F08FB8()
{
  unint64_t result;

  result = qword_2545BB698;
  if (!qword_2545BB698)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F77FBC, &type metadata for MultiChoiceView.ButtonTrayHeader.HeaderKeys);
    atomic_store(result, (unint64_t *)&qword_2545BB698);
  }
  return result;
}

unint64_t sub_209F09000()
{
  unint64_t result;

  result = qword_2545BB6A0;
  if (!qword_2545BB6A0)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F77F94, &type metadata for MultiChoiceView.ButtonTrayHeader.HeaderKeys);
    atomic_store(result, (unint64_t *)&qword_2545BB6A0);
  }
  return result;
}

uint64_t destroy for MultiChoiceView(uint64_t a1)
{
  int v2;
  uint64_t result;
  void *v4;

  swift_bridgeObjectRelease();
  sub_209EEC698(*(id *)(a1 + 16), *(_BYTE *)(a1 + 24));
  sub_209EEC698(*(id *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_release();
  v2 = *(unsigned __int8 *)(a1 + 72);
  if (v2 != 255)
    sub_209EF6F20(*(id *)(a1 + 64), v2 & 1);
  sub_209EF76E8(*(_QWORD *)(a1 + 80), *(_BYTE *)(a1 + 88));
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 184))
  {
    sub_209EEB098();
    v4 = *(void **)(a1 + 176);
    swift_release();

    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for MultiChoiceView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  char v6;
  void *v7;
  char v8;
  uint64_t v9;
  _QWORD *v10;
  int v11;
  char v12;
  void *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  void *v22;
  id v23;
  __int128 v24;
  __int128 v25;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(void **)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  swift_bridgeObjectRetain();
  sub_209EEC018(v5, v6);
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  v7 = *(void **)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_209EEC018(v7, v8);
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  v10 = (_QWORD *)(a2 + 64);
  v11 = *(unsigned __int8 *)(a2 + 72);
  swift_retain();
  if (v11 == 255)
  {
    *(_QWORD *)(a1 + 64) = *v10;
    *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  }
  else
  {
    v12 = v11 & 1;
    v13 = (void *)*v10;
    sub_209EF5764(v13, v12);
    *(_QWORD *)(a1 + 64) = v13;
    *(_BYTE *)(a1 + 72) = v12;
  }
  v14 = *(_QWORD *)(a2 + 80);
  v15 = *(_BYTE *)(a2 + 88);
  sub_209EF5730(v14, v15);
  *(_QWORD *)(a1 + 80) = v14;
  *(_BYTE *)(a1 + 88) = v15;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v16 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v16;
  v17 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v17;
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  v18 = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v18)
  {
    v19 = *(_QWORD *)(a2 + 152);
    v20 = *(_QWORD *)(a2 + 160);
    v21 = *(_BYTE *)(a2 + 168);
    sub_209EEAFF0();
    *(_QWORD *)(a1 + 152) = v19;
    *(_QWORD *)(a1 + 160) = v20;
    *(_BYTE *)(a1 + 168) = v21;
    v22 = *(void **)(a2 + 176);
    *(_QWORD *)(a1 + 176) = v22;
    *(_QWORD *)(a1 + 184) = v18;
    *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
    *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
    *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
    *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
    *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
    v23 = v22;
    swift_retain();
    swift_retain();
  }
  else
  {
    v24 = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 200) = v24;
    *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
    v25 = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 168) = v25;
  }
  return a1;
}

uint64_t assignWithCopy for MultiChoiceView(uint64_t a1, uint64_t a2)
{
  void *v4;
  char v5;
  void *v6;
  char v7;
  void *v8;
  char v9;
  void *v10;
  char v11;
  void **v12;
  void **v13;
  int v14;
  char v15;
  void *v16;
  char v17;
  void *v18;
  void *v19;
  char v20;
  char v21;
  void *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  _OWORD *v27;
  _OWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  void *v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(void **)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  sub_209EEC018(v4, v5);
  v6 = *(void **)(a1 + 16);
  v7 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  sub_209EEC698(v6, v7);
  v8 = *(void **)(a2 + 32);
  v9 = *(_BYTE *)(a2 + 40);
  sub_209EEC018(v8, v9);
  v10 = *(void **)(a1 + 32);
  v11 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 40) = v9;
  sub_209EEC698(v10, v11);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v12 = (void **)(a1 + 64);
  v13 = (void **)(a2 + 64);
  v14 = *(unsigned __int8 *)(a2 + 72);
  if (*(unsigned __int8 *)(a1 + 72) == 255)
  {
    if (v14 == 255)
    {
      v16 = *v13;
      *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
      *v12 = v16;
    }
    else
    {
      v21 = v14 & 1;
      v22 = *v13;
      sub_209EF5764(v22, v14 & 1);
      *(_QWORD *)(a1 + 64) = v22;
      *(_BYTE *)(a1 + 72) = v21;
    }
  }
  else if (v14 == 255)
  {
    sub_209EF7CC8(a1 + 64);
    v15 = *(_BYTE *)(a2 + 72);
    *v12 = *v13;
    *(_BYTE *)(a1 + 72) = v15;
  }
  else
  {
    v17 = v14 & 1;
    v18 = *v13;
    sub_209EF5764(v18, v14 & 1);
    v19 = *(void **)(a1 + 64);
    v20 = *(_BYTE *)(a1 + 72);
    *(_QWORD *)(a1 + 64) = v18;
    *(_BYTE *)(a1 + 72) = v17;
    sub_209EF6F20(v19, v20);
  }
  v23 = *(_QWORD *)(a2 + 80);
  v24 = *(_BYTE *)(a2 + 88);
  sub_209EF5730(v23, v24);
  v25 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 80) = v23;
  v26 = *(_BYTE *)(a1 + 88);
  *(_BYTE *)(a1 + 88) = v24;
  sub_209EF76E8(v25, v26);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v27 = (_OWORD *)(a1 + 152);
  v28 = (_OWORD *)(a2 + 152);
  v29 = *(_QWORD *)(a2 + 184);
  if (*(_QWORD *)(a1 + 184))
  {
    if (v29)
    {
      v30 = *(_QWORD *)(a2 + 152);
      v31 = *(_QWORD *)(a2 + 160);
      v32 = *(_BYTE *)(a2 + 168);
      sub_209EEAFF0();
      *(_QWORD *)(a1 + 152) = v30;
      *(_QWORD *)(a1 + 160) = v31;
      *(_BYTE *)(a1 + 168) = v32;
      sub_209EEB098();
      v33 = *(void **)(a1 + 176);
      v34 = *(void **)(a2 + 176);
      *(_QWORD *)(a1 + 176) = v34;
      v35 = v34;

      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      swift_retain();
      swift_release();
      v36 = *(_QWORD *)(a2 + 192);
      *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
      *(_QWORD *)(a1 + 192) = v36;
      LOBYTE(v36) = *(_BYTE *)(a2 + 216);
      *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
      *(_BYTE *)(a1 + 216) = v36;
      *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_209F09624(a1 + 152);
      *v27 = *v28;
      v44 = *(_OWORD *)(a2 + 216);
      v46 = *(_OWORD *)(a2 + 168);
      v45 = *(_OWORD *)(a2 + 184);
      *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
      *(_OWORD *)(a1 + 216) = v44;
      *(_OWORD *)(a1 + 168) = v46;
      *(_OWORD *)(a1 + 184) = v45;
    }
  }
  else if (v29)
  {
    v37 = *(_QWORD *)(a2 + 152);
    v38 = *(_QWORD *)(a2 + 160);
    v39 = *(_BYTE *)(a2 + 168);
    sub_209EEAFF0();
    *(_QWORD *)(a1 + 152) = v37;
    *(_QWORD *)(a1 + 160) = v38;
    *(_BYTE *)(a1 + 168) = v39;
    v40 = *(void **)(a2 + 176);
    *(_QWORD *)(a1 + 176) = v40;
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    v41 = *(_QWORD *)(a2 + 192);
    *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
    *(_QWORD *)(a1 + 192) = v41;
    v42 = *(_QWORD *)(a2 + 208);
    *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
    *(_QWORD *)(a1 + 208) = v42;
    *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
    v43 = v40;
    swift_retain();
    swift_retain();
  }
  else
  {
    *v27 = *v28;
    v47 = *(_OWORD *)(a2 + 168);
    v48 = *(_OWORD *)(a2 + 184);
    v49 = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 216) = v49;
    *(_OWORD *)(a1 + 168) = v47;
    *(_OWORD *)(a1 + 184) = v48;
  }
  return a1;
}

uint64_t sub_209F09624(uint64_t a1)
{
  destroy for RUIImage(a1);
  return a1;
}

__n128 __swift_memcpy232_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __n128 result;
  __int128 v11;
  __int128 v12;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  v7 = a2[7];
  v8 = a2[8];
  v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  result = (__n128)a2[11];
  v11 = a2[12];
  v12 = a2[13];
  *(_QWORD *)(a1 + 224) = *((_QWORD *)a2 + 28);
  *(_OWORD *)(a1 + 192) = v11;
  *(_OWORD *)(a1 + 208) = v12;
  *(__n128 *)(a1 + 176) = result;
  return result;
}

uint64_t assignWithTake for MultiChoiceView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  void *v6;
  char v7;
  char v8;
  void *v9;
  char v10;
  _QWORD *v11;
  int v12;
  int v13;
  void *v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  void *v22;
  __int128 v23;
  __int128 v24;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_BYTE *)(a2 + 24);
  v6 = *(void **)(a1 + 16);
  v7 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = v5;
  sub_209EEC698(v6, v7);
  v8 = *(_BYTE *)(a2 + 40);
  v9 = *(void **)(a1 + 32);
  v10 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = v8;
  sub_209EEC698(v9, v10);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v11 = (_QWORD *)(a2 + 64);
  v12 = *(unsigned __int8 *)(a1 + 72);
  if (v12 == 255)
    goto LABEL_4;
  v13 = *(unsigned __int8 *)(a2 + 72);
  if (v13 == 255)
  {
    sub_209EF7CC8(a1 + 64);
LABEL_4:
    *(_QWORD *)(a1 + 64) = *v11;
    *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
    goto LABEL_6;
  }
  v14 = *(void **)(a1 + 64);
  *(_QWORD *)(a1 + 64) = *v11;
  *(_BYTE *)(a1 + 72) = v13 & 1;
  sub_209EF6F20(v14, v12 & 1);
LABEL_6:
  v15 = *(_BYTE *)(a2 + 88);
  v16 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v17 = *(_BYTE *)(a1 + 88);
  *(_BYTE *)(a1 + 88) = v15;
  sub_209EF76E8(v16, v17);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_release();
  v18 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v18;
  swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v19;
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 184))
  {
LABEL_10:
    v23 = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 200) = v23;
    *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
    v24 = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 168) = v24;
    return a1;
  }
  v20 = *(_QWORD *)(a2 + 184);
  if (!v20)
  {
    sub_209F09624(a1 + 152);
    goto LABEL_10;
  }
  v21 = *(_BYTE *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_BYTE *)(a1 + 168) = v21;
  sub_209EEB098();
  v22 = *(void **)(a1 + 176);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);

  *(_QWORD *)(a1 + 184) = v20;
  swift_release();
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for MultiChoiceView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 232))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MultiChoiceView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 232) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 232) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MultiChoiceView()
{
  return &type metadata for MultiChoiceView;
}

uint64_t initializeBufferWithCopyOfBuffer for MultiChoiceView.Content(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_209EF5730(*(_QWORD *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for MultiChoiceView.Content(uint64_t a1)
{
  return sub_209EF76E8(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t assignWithCopy for MultiChoiceView.Content(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_209EF5730(*(_QWORD *)a2, v4);
  v5 = *(_QWORD *)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_209EF76E8(v5, v6);
  return a1;
}

uint64_t assignWithTake for MultiChoiceView.Content(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  char v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_209EF76E8(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for MultiChoiceView.Content(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MultiChoiceView.Content(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_209F09AD4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_209F09AEC(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for MultiChoiceView.Content()
{
  return &type metadata for MultiChoiceView.Content;
}

uint64_t destroy for MultiChoiceView.BulletedItem(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_209EEB098();

  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for MultiChoiceView.BulletedItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void *v10;
  uint64_t v11;
  id v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 48);
  v8 = *(_QWORD *)(a2 + 56);
  v9 = *(_BYTE *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_209EEAFF0();
  *(_QWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = v8;
  *(_BYTE *)(a1 + 64) = v9;
  v10 = *(void **)(a2 + 72);
  v11 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v10;
  *(_QWORD *)(a1 + 80) = v11;
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  v12 = v10;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for MultiChoiceView.BulletedItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 48);
  v5 = *(_QWORD *)(a2 + 56);
  v6 = *(_BYTE *)(a2 + 64);
  sub_209EEAFF0();
  *(_QWORD *)(a1 + 48) = v4;
  *(_QWORD *)(a1 + 56) = v5;
  *(_BYTE *)(a1 + 64) = v6;
  sub_209EEB098();
  v7 = *(void **)(a1 + 72);
  v8 = *(void **)(a2 + 72);
  *(_QWORD *)(a1 + 72) = v8;
  v9 = v8;

  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_retain();
  swift_release();
  v10 = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = v10;
  LOBYTE(v10) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = v10;
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy128_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t assignWithTake for MultiChoiceView.BulletedItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = v7;
  sub_209EEB098();

  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for MultiChoiceView.BulletedItem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 128))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MultiChoiceView.BulletedItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 128) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 128) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MultiChoiceView.BulletedItem()
{
  return &type metadata for MultiChoiceView.BulletedItem;
}

ValueMetadata *type metadata accessor for MultiChoiceView.BulletedItem.CodingKeys()
{
  return &type metadata for MultiChoiceView.BulletedItem.CodingKeys;
}

ValueMetadata *type metadata accessor for MultiChoiceView.ButtonTrayHeader()
{
  return &type metadata for MultiChoiceView.ButtonTrayHeader;
}

ValueMetadata *type metadata accessor for MultiChoiceView.Section.CodingKeys()
{
  return &type metadata for MultiChoiceView.Section.CodingKeys;
}

uint64_t _s8RemoteUI15MultiChoiceViewV12BulletedItemV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_209F09F78 + 4 * byte_209F779DF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_209F09FAC + 4 * byte_209F779DA[v4]))();
}

uint64_t sub_209F09FAC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_209F09FB4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x209F09FBCLL);
  return result;
}

uint64_t sub_209F09FC8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x209F09FD0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_209F09FD4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_209F09FDC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MultiChoiceView.ButtonTrayHeader.CodingKeys()
{
  return &type metadata for MultiChoiceView.ButtonTrayHeader.CodingKeys;
}

ValueMetadata *type metadata accessor for MultiChoiceView.ButtonTrayHeader.HeaderKeys()
{
  return &type metadata for MultiChoiceView.ButtonTrayHeader.HeaderKeys;
}

unint64_t sub_209F0A00C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2545BB718;
  if (!qword_2545BB718)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BB720);
    v2[0] = sub_209EE83E8(&qword_2545BB728, &qword_2545BB730, MEMORY[0x24BDEDA60]);
    v2[1] = MEMORY[0x24BDF0908];
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2545BB718);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for MultiChoiceView.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MultiChoiceView.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_209F0A16C + 4 * byte_209F779E9[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_209F0A1A0 + 4 * byte_209F779E4[v4]))();
}

uint64_t sub_209F0A1A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_209F0A1A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x209F0A1B0);
  return result;
}

uint64_t sub_209F0A1BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x209F0A1C4);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_209F0A1C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_209F0A1D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MultiChoiceView.CodingKeys()
{
  return &type metadata for MultiChoiceView.CodingKeys;
}

uint64_t _s8RemoteUI15MultiChoiceViewV7SectionC10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_209F0A22C + 4 * byte_209F779EE[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_209F0A24C + 4 * byte_209F779F3[v4]))();
}

_BYTE *sub_209F0A22C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_209F0A24C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_209F0A254(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_209F0A25C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_209F0A264(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_209F0A26C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for MultiChoiceView.ContentCodingKeys()
{
  return &type metadata for MultiChoiceView.ContentCodingKeys;
}

unint64_t sub_209F0A28C()
{
  unint64_t result;

  result = qword_2545C0000[0];
  if (!qword_2545C0000[0])
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7814C, &type metadata for MultiChoiceView.ContentCodingKeys);
    atomic_store(result, qword_2545C0000);
  }
  return result;
}

unint64_t sub_209F0A2D4()
{
  unint64_t result;

  result = qword_2545C0290[0];
  if (!qword_2545C0290[0])
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7823C, &type metadata for MultiChoiceView.CodingKeys);
    atomic_store(result, qword_2545C0290);
  }
  return result;
}

unint64_t sub_209F0A31C()
{
  unint64_t result;

  result = qword_2545C03A0;
  if (!qword_2545C03A0)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F78084, &type metadata for MultiChoiceView.ContentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545C03A0);
  }
  return result;
}

unint64_t sub_209F0A364()
{
  unint64_t result;

  result = qword_2545C03A8[0];
  if (!qword_2545C03A8[0])
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F780AC, &type metadata for MultiChoiceView.ContentCodingKeys);
    atomic_store(result, qword_2545C03A8);
  }
  return result;
}

unint64_t sub_209F0A3AC()
{
  unint64_t result;

  result = qword_2545C0430;
  if (!qword_2545C0430)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F78174, &type metadata for MultiChoiceView.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545C0430);
  }
  return result;
}

unint64_t sub_209F0A3F4()
{
  unint64_t result;

  result = qword_2545C0438[0];
  if (!qword_2545C0438[0])
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7819C, &type metadata for MultiChoiceView.CodingKeys);
    atomic_store(result, qword_2545C0438);
  }
  return result;
}

uint64_t sub_209F0A438(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_209F0A470()
{
  unint64_t result;

  result = qword_2545BB740;
  if (!qword_2545BB740)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F77F44, &type metadata for MultiChoiceView.ButtonTrayHeader.HeaderKeys);
    atomic_store(result, (unint64_t *)&qword_2545BB740);
  }
  return result;
}

unint64_t sub_209F0A4B4()
{
  unint64_t result;

  result = qword_2545BB748;
  if (!qword_2545BB748)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F77E3C, &type metadata for MultiChoiceView.ButtonTrayHeader.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BB748);
  }
  return result;
}

uint64_t sub_209F0A4F8(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1])
    return 1;
  else
    return sub_209F679A8() & 1;
}

uint64_t sub_209F0A54C(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x20BD1DB1C](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_209F0A58C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_209F0A5B0()
{
  return swift_deallocObject();
}

uint64_t sub_209F0A5C0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *a1;
  *(_BYTE *)(a2 + 8) = *((_BYTE *)a1 + 8);
  *(_QWORD *)a2 = v2;
  return a2;
}

uint64_t sub_209F0A5D8(uint64_t a1)
{
  sub_209EF574C(*(id *)a1, *(_BYTE *)(a1 + 8));
  return a1;
}

uint64_t sub_209F0A604(uint64_t a1)
{
  sub_209EF6F08(*(void **)a1, *(_BYTE *)(a1 + 8));
  return a1;
}

uint64_t sub_209F0A630(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_209F0A658(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_209F0A694@<X0>(uint64_t *a1@<X8>)
{
  return sub_209F052C8(a1);
}

RUI __swiftcall RUI.init()()
{
  return (RUI)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

id RUI.init()()
{
  objc_super v1;

  v1.super_class = (Class)RUI;
  return objc_msgSendSuper2(&v1, sel_init);
}

unint64_t type metadata accessor for RUI()
{
  unint64_t result;

  result = qword_2545C04C0[0];
  if (!qword_2545C04C0[0])
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, qword_2545C04C0);
  }
  return result;
}

uint64_t RUIViewContent.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RUIViewContent.content.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_209EE3528(v1 + 32, a1, &qword_2545BB820);
}

uint64_t RUIViewContent.content.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_209F0A7F8(a1, v1 + 32, &qword_2545BB820);
}

uint64_t (*RUIViewContent.content.modify())()
{
  return nullsub_1;
}

uint64_t sub_209F0A7F8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

void RUIViewContent.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Swift::String v14;
  uint64_t v15;
  _OWORD *v16;
  id *v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t (*v24)(void);
  id v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  __int128 v29;
  _QWORD *v30;
  uint64_t *boxed_opaque_existential_0;
  __int128 *v32;
  _OWORD *v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  __int128 v37;
  __int128 *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  _BYTE v43[40];
  uint64_t v44[3];
  __int128 v45;
  Swift::String v46;
  uint64_t v47;
  __int128 v48;
  Swift::String v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE v52[48];
  __int128 v53;
  __int128 v54;
  char v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;

  v60 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB828);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v42 = v52;
  v55 = 0;
  v54 = 0u;
  v53 = 0u;
  memset(v52, 0, sizeof(v52));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_209F0AD80();
  sub_209F67B58();
  if (v2)
    goto LABEL_2;
  v41 = v5;
  v10 = (_QWORD *)sub_209F678B8();
  if (!v10[2])
  {
    swift_bridgeObjectRelease();
    sub_209F0B148();
    swift_allocError();
    *v16 = xmmword_209F78320;
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v4);
LABEL_2:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    v9 = v42;
LABEL_14:
    sub_209EE017C(v9, &qword_2545BB820);
    sub_209F0ADC4(v53, *((uint64_t *)&v53 + 1), (void *)v54, *((void **)&v54 + 1), v55);
    return;
  }
  v39 = v8;
  v40 = v4;
  v11 = v10[4];
  v12 = v10[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v50 = v11;
  v51 = v12;
  v13 = (uint64_t)a1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  swift_bridgeObjectRetain();
  v14 = Decoder.decodeRUIID()();
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v41 + 8))(v39, v40);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    v9 = v42;
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  v38 = &v53;
  v46 = v14;
  swift_bridgeObjectRetain();
  sub_209F67354();
  swift_bridgeObjectRelease();
  v49 = v46;
  v17 = (id *)sub_209EFF884();
  v18 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x24BEE4EA0] & *(_QWORD *)*v17) + 0xA0);
  v19 = *v17;
  v20 = v18(v11, v12);
  v22 = v21;

  if (v20)
  {
    swift_bridgeObjectRelease();
    sub_209EE0E3C(v13, (uint64_t)v43);
    *(_QWORD *)&v45 = v20;
    *((_QWORD *)&v45 + 1) = v22;
    __swift_allocate_boxed_opaque_existential_0(v44);
  }
  else
  {
    *(_QWORD *)&v37 = v11;
    v23 = *v17;
    v24 = *(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *(_QWORD *)*v17) + 0x78);
    v25 = v23;
    v26 = v24();

    if (!*(_QWORD *)(v26 + 16) || (v27 = sub_209EE31C0(v37, v12), (v28 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v33 = (_OWORD *)v42;
      sub_209EE017C(v42, &qword_2545BB820);
      *v33 = 0u;
      v33[1] = 0u;
      v33[2] = 0u;
      sub_209EE0E3C(v13, (uint64_t)&v46);
      sub_209F40238(&v46, (uint64_t)&v56);
      v42 = v56;
      v34 = v57;
      v35 = v58;
      v36 = v59;
      (*(void (**)(char *, uint64_t))(v41 + 8))(v39, v40);
      sub_209F0ADC4(v53, *((uint64_t *)&v53 + 1), (void *)v54, *((void **)&v54 + 1), v55);
      v53 = v42;
      *(_QWORD *)&v54 = v34;
      *((_QWORD *)&v54 + 1) = v35;
      v55 = v36;
      goto LABEL_15;
    }
    v37 = *(_OWORD *)(*(_QWORD *)(v26 + 56) + 16 * v27);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_209EE0E3C(v13, (uint64_t)v43);
    v45 = v37;
    __swift_allocate_boxed_opaque_existential_0(v44);
  }
  sub_209F674EC();
  v29 = v45;
  v30 = __swift_project_boxed_opaque_existential_1(v44, v45);
  v47 = v29;
  v48 = *(_OWORD *)(*((_QWORD *)&v29 + 1) + 16);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(&v46._countAndFlagsBits);
  (*(void (**)(uint64_t *, _QWORD *, _QWORD))(*(_QWORD *)(v29 - 8) + 16))(boxed_opaque_existential_0, v30, v29);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v39, v40);
  sub_209F0A7F8((uint64_t)&v46, v42, &qword_2545BB820);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  sub_209F0ADC4(v53, *((uint64_t *)&v53 + 1), (void *)v54, *((void **)&v54 + 1), v55);
  v32 = v38;
  *((_BYTE *)v38 + 32) = 0;
  *v32 = 0u;
  v32[1] = 0u;
LABEL_15:
  sub_209F0B104((uint64_t)&v49, v60);
  __swift_destroy_boxed_opaque_existential_1(v13);
  sub_209F08318((uint64_t)&v49);
}

unint64_t sub_209F0AD80()
{
  unint64_t result;

  result = qword_2545BB830;
  if (!qword_2545BB830)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7A9F8, &type metadata for BuddyMLKey);
    atomic_store(result, (unint64_t *)&qword_2545BB830);
  }
  return result;
}

void sub_209F0ADC4(uint64_t a1, uint64_t a2, void *a3, void *a4, char a5)
{
  if (a2)
  {
    swift_bridgeObjectRelease();

    sub_209EEC698(a4, a5 & 1);
  }
}

uint64_t RUIViewContent.anyView.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  char v7;
  id v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  char v16;

  v1 = v0;
  sub_209EE3528(v0 + 32, (uint64_t)v10, &qword_2545BB820);
  v2 = v11;
  if (!v11)
  {
    sub_209EE017C((uint64_t)v10, &qword_2545BB820);
    sub_209F0B104(v1, (uint64_t)v10);
    if (v13)
      goto LABEL_4;
    goto LABEL_7;
  }
  v3 = v12;
  __swift_project_boxed_opaque_existential_1(v10, v11);
  v4 = sub_209F0AF3C(v2, v3);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  sub_209F0B104(v1, (uint64_t)v10);
  if (!v4)
  {
    if (v13)
    {
LABEL_4:
      v6 = v14;
      v5 = v15;
      v7 = v16 & 1;
      swift_bridgeObjectRetain();
      v8 = v6;
      sub_209EEC018(v5, v7);
      sub_209F0B18C();
      v4 = sub_209F671C8();
      goto LABEL_5;
    }
LABEL_7:
    sub_209F08318((uint64_t)v10);
    return sub_209F671C8();
  }
LABEL_5:
  sub_209F08318((uint64_t)v10);
  return v4;
}

uint64_t sub_209F0AF3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  MEMORY[0x24BDAC7A8](a1, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2, a1);
  return sub_209F671C8();
}

uint64_t RUIViewContent.body.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  char v9;
  id v10;
  uint64_t result;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  char v18;

  v2 = v1;
  sub_209EE3528(v1 + 32, (uint64_t)v12, &qword_2545BB820);
  v4 = v13;
  if (!v13)
  {
    sub_209EE017C((uint64_t)v12, &qword_2545BB820);
    sub_209F0B104(v2, (uint64_t)v12);
    if (v15)
      goto LABEL_4;
    goto LABEL_7;
  }
  v5 = v14;
  __swift_project_boxed_opaque_existential_1(v12, v13);
  v6 = sub_209F0AF3C(v4, v5);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  sub_209F0B104(v2, (uint64_t)v12);
  if (!v6)
  {
    if (v15)
    {
LABEL_4:
      v8 = v16;
      v7 = v17;
      v9 = v18 & 1;
      swift_bridgeObjectRetain();
      v10 = v8;
      sub_209EEC018(v7, v9);
      sub_209F0B18C();
      v6 = sub_209F671C8();
      goto LABEL_5;
    }
LABEL_7:
    sub_209F08318((uint64_t)v12);
    result = sub_209F671C8();
    v6 = result;
    goto LABEL_8;
  }
LABEL_5:
  result = sub_209F08318((uint64_t)v12);
LABEL_8:
  *a1 = v6;
  return result;
}

void sub_209F0B0F0(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  RUIViewContent.init(from:)(a1, a2);
}

uint64_t sub_209F0B104(uint64_t a1, uint64_t a2)
{
  return initializeWithCopy for RUIViewContent(a2, a1);
}

uint64_t __swift_deallocate_boxed_opaque_existential_1(uint64_t result)
{
  if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(result + 24) - 8) + 80) & 0x20000) != 0)
    JUMPOUT(0x20BD1DC00);
  return result;
}

unint64_t sub_209F0B148()
{
  unint64_t result;

  result = qword_2545BB838;
  if (!qword_2545BB838)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F783FC, &type metadata for RUIViewContentError);
    atomic_store(result, (unint64_t *)&qword_2545BB838);
  }
  return result;
}

unint64_t sub_209F0B18C()
{
  unint64_t result;

  result = qword_2545BB840;
  if (!qword_2545BB840)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7A820, &type metadata for LegacyRUIContent);
    atomic_store(result, (unint64_t *)&qword_2545BB840);
  }
  return result;
}

unint64_t sub_209F0B1D0(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_209F082D4();
  a1[2] = sub_209F0B204();
  result = sub_209F0B248();
  a1[3] = result;
  return result;
}

unint64_t sub_209F0B204()
{
  unint64_t result;

  result = qword_2545BB848;
  if (!qword_2545BB848)
  {
    result = MEMORY[0x20BD1DB1C](&protocol conformance descriptor for RUIViewContent, &type metadata for RUIViewContent);
    atomic_store(result, (unint64_t *)&qword_2545BB848);
  }
  return result;
}

unint64_t sub_209F0B248()
{
  unint64_t result;

  result = qword_2545BB850;
  if (!qword_2545BB850)
  {
    result = MEMORY[0x20BD1DB1C](&protocol conformance descriptor for RUIViewContent, &type metadata for RUIViewContent);
    atomic_store(result, (unint64_t *)&qword_2545BB850);
  }
  return result;
}

uint64_t sub_209F0B28C()
{
  return swift_getOpaqueTypeConformance2();
}

void destroy for RUIViewContent(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 56))
    __swift_destroy_boxed_opaque_existential_1(a1 + 32);
  if (*(_QWORD *)(a1 + 88))
  {
    swift_bridgeObjectRelease();

    sub_209EEC698(*(id *)(a1 + 104), *(_BYTE *)(a1 + 112));
  }
}

uint64_t initializeWithCopy for RUIViewContent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  char v11;
  id v12;
  __int128 v13;
  __int128 v14;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = (_OWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v7)
  {
    v13 = v6[1];
    *(_OWORD *)(a1 + 32) = *v6;
    *(_OWORD *)(a1 + 48) = v13;
    *(_OWORD *)(a1 + 64) = v6[2];
    v8 = *(_QWORD *)(a2 + 88);
    if (v8)
      goto LABEL_3;
LABEL_5:
    v14 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v14;
    *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
    return a1;
  }
  *(_QWORD *)(a1 + 56) = v7;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  (**(void (***)(uint64_t, _OWORD *, uint64_t))(v7 - 8))(a1 + 32, v6, v7);
  v8 = *(_QWORD *)(a2 + 88);
  if (!v8)
    goto LABEL_5;
LABEL_3:
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v8;
  v10 = *(void **)(a2 + 96);
  v9 = *(void **)(a2 + 104);
  *(_QWORD *)(a1 + 96) = v10;
  v11 = *(_BYTE *)(a2 + 112);
  swift_bridgeObjectRetain();
  v12 = v10;
  sub_209EEC018(v9, v11);
  *(_QWORD *)(a1 + 104) = v9;
  *(_BYTE *)(a1 + 112) = v11;
  return a1;
}

uint64_t assignWithCopy for RUIViewContent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  char v14;
  void *v15;
  char v16;
  void *v17;
  void *v18;
  char v19;
  id v20;
  char v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 56);
  if (*(_QWORD *)(a1 + 56))
  {
    if (v4)
    {
      __swift_assign_boxed_opaque_existential_2((uint64_t *)(a1 + 32), (uint64_t *)(a2 + 32));
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 32);
  }
  else if (v4)
  {
    *(_QWORD *)(a1 + 56) = v4;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 32, a2 + 32);
    goto LABEL_8;
  }
  v5 = *(_OWORD *)(a2 + 32);
  v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 32) = v5;
LABEL_8:
  v7 = (_OWORD *)(a1 + 80);
  v8 = (_OWORD *)(a2 + 80);
  v9 = *(_QWORD *)(a2 + 88);
  if (*(_QWORD *)(a1 + 88))
  {
    if (v9)
    {
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v10 = *(void **)(a2 + 96);
      v11 = *(void **)(a1 + 96);
      *(_QWORD *)(a1 + 96) = v10;
      v12 = v10;

      v13 = *(void **)(a2 + 104);
      v14 = *(_BYTE *)(a2 + 112);
      sub_209EEC018(v13, v14);
      v15 = *(void **)(a1 + 104);
      v16 = *(_BYTE *)(a1 + 112);
      *(_QWORD *)(a1 + 104) = v13;
      *(_BYTE *)(a1 + 112) = v14;
      sub_209EEC698(v15, v16);
    }
    else
    {
      sub_209F0B720(a1 + 80);
      v21 = *(_BYTE *)(a2 + 112);
      v22 = *(_OWORD *)(a2 + 96);
      *v7 = *v8;
      *(_OWORD *)(a1 + 96) = v22;
      *(_BYTE *)(a1 + 112) = v21;
    }
  }
  else if (v9)
  {
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    v17 = *(void **)(a2 + 96);
    *(_QWORD *)(a1 + 96) = v17;
    v18 = *(void **)(a2 + 104);
    v19 = *(_BYTE *)(a2 + 112);
    swift_bridgeObjectRetain();
    v20 = v17;
    sub_209EEC018(v18, v19);
    *(_QWORD *)(a1 + 104) = v18;
    *(_BYTE *)(a1 + 112) = v19;
  }
  else
  {
    v23 = *v8;
    v24 = *(_OWORD *)(a2 + 96);
    *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
    *v7 = v23;
    *(_OWORD *)(a1 + 96) = v24;
  }
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_2(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      result[5] = a2[5];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

uint64_t sub_209F0B720(uint64_t a1)
{
  destroy for LegacyRUIContent(a1);
  return a1;
}

__n128 __swift_memcpy113_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_BYTE *)(a1 + 112) = *((_BYTE *)a2 + 112);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for RUIViewContent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void *v8;
  char v9;
  void *v10;
  char v11;
  __int128 v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 56))
    __swift_destroy_boxed_opaque_existential_1(a1 + 32);
  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  if (!*(_QWORD *)(a1 + 88))
    goto LABEL_7;
  v7 = *(_QWORD *)(a2 + 88);
  if (!v7)
  {
    sub_209F0B720(a1 + 80);
LABEL_7:
    v12 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v12;
    *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
    return a1;
  }
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v7;
  swift_bridgeObjectRelease();
  v8 = *(void **)(a1 + 96);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);

  v9 = *(_BYTE *)(a2 + 112);
  v10 = *(void **)(a1 + 104);
  v11 = *(_BYTE *)(a1 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = v9;
  sub_209EEC698(v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for RUIViewContent(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 113))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RUIViewContent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 112) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 113) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 113) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RUIViewContent()
{
  return &type metadata for RUIViewContent;
}

unint64_t destroy for RUIViewContentError(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s8RemoteUI19RUIViewContentErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *assignWithCopy for RUIViewContentError(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;

  v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for RUIViewContentError(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RUIViewContentError(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for RUIViewContentError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 1;
  }
  return result;
}

uint64_t sub_209F0BB2C(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_209F0BB44(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for RUIViewContentError()
{
  return &type metadata for RUIViewContentError;
}

uint64_t sub_209F0BB74()
{
  return MEMORY[0x24BDF4768];
}

uint64_t sub_209F0BB80()
{
  return sub_209F05300(&OBJC_IVAR____TtC8RemoteUI26RUISwiftUIContainerElement_objectModel);
}

void sub_209F0BB8C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  swift_beginAccess();
  v3 = swift_unknownObjectWeakAssign();
  v4 = *(_QWORD **)(v1 + OBJC_IVAR____TtC8RemoteUI26RUISwiftUIContainerElement_container);
  v5 = MEMORY[0x20BD1DC9C](v3);
  (*(void (**)(uint64_t))(qword_2545C6ED8 + (*MEMORY[0x24BEE4EA0] & *v4) + 168))(v5);

}

void (*sub_209F0BC20(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC8RemoteUI26RUISwiftUIContainerElement_objectModel;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v3[3] = MEMORY[0x20BD1DC9C](v5);
  return sub_209F0BC90;
}

void sub_209F0BC90(uint64_t *a1, char a2)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = *(void **)(*a1 + 24);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {

    swift_endAccess();
  }
  else
  {
    v5 = *(_QWORD *)(v3 + 32);
    v6 = v5 + *(_QWORD *)(v3 + 40);
    swift_endAccess();

    v7 = *(_QWORD **)(v5 + OBJC_IVAR____TtC8RemoteUI26RUISwiftUIContainerElement_container);
    v8 = MEMORY[0x20BD1DC9C](v6);
    (*(void (**)(uint64_t))(qword_2545C6ED8 + (*MEMORY[0x24BEE4EA0] & *v7) + 168))(v8);
  }
  free((void *)v3);
}

void RUISwiftUIContainerElement.__allocating_init(element:parent:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  RUISwiftUIContainerElement.init(element:parent:)(a1, a2);
}

void RUISwiftUIContainerElement.init(element:parent:)(void *a1, void *a2)
{
  char *v2;
  uint64_t *v5;
  uint64_t *v6;
  char *v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  _QWORD *v14;
  id v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  objc_super v24;

  swift_unknownObjectWeakInit();
  v5 = (uint64_t *)&v2[OBJC_IVAR____TtC8RemoteUI26RUISwiftUIContainerElement_willLayoutSubviewsHandler];
  *v5 = 0;
  v5[1] = 0;
  v6 = (uint64_t *)&v2[OBJC_IVAR____TtC8RemoteUI26RUISwiftUIContainerElement_didLayoutSubviewsHandler];
  type metadata accessor for ElementDirectory();
  *v6 = 0;
  v6[1] = 0;
  v7 = v2;
  v8 = sub_209F48184();
  v9 = objc_allocWithZone((Class)type metadata accessor for RUISwiftUIContainer());
  v10 = a2;
  v11 = a1;
  swift_retain();
  sub_209F0F0B4(v11, a2, v8);
  if (!v12)
  {
    swift_release();

    swift_unknownObjectWeakDestroy();
    sub_209F0F414(*v5);
    sub_209F0F414(*v6);
    type metadata accessor for RUISwiftUIContainerElement();
    swift_deallocPartialClassInstance();
    return;
  }
  v13 = v12;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8RemoteUI26RUISwiftUIContainerElement_container] = v12;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8RemoteUI26RUISwiftUIContainerElement_childElementDirectory] = v8;
  swift_retain();
  v14 = v13;

  v15 = objc_msgSend(v11, sel_attributtes);
  v16 = sub_209F67258();

  sub_209F04D90(v16);
  swift_bridgeObjectRelease();
  v17 = (void *)sub_209F6724C();
  swift_bridgeObjectRelease();
  v24.receiver = v7;
  v24.super_class = (Class)type metadata accessor for RUISwiftUIContainerElement();
  v18 = objc_msgSendSuper2(&v24, sel_initWithAttributes_parent_, v17, v10);

  if (!v18)
  {
    swift_release();

    return;
  }

  v19 = v18;
  if (!a2)
  {
    v23 = 0;
    goto LABEL_10;
  }
  v20 = objc_msgSend(v10, sel_pageElement);
  if (v20)
  {
    v21 = v20;
    v22 = objc_msgSend(v20, sel_page);

    if (v22)
    {
      v23 = objc_msgSend(v22, sel_objectModel);

LABEL_10:
      (*(void (**)(id))(qword_2545C6ED8 + (*MEMORY[0x24BEE4EA0] & *v14) + 168))(v23);

      swift_release();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_209F0C068(void *a1, void *a2, uint64_t a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  sub_209F0F0B4(a1, a2, a3);
}

uint64_t type metadata accessor for RUISwiftUIContainer()
{
  uint64_t result;

  result = qword_2545C0800;
  if (!qword_2545C0800)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t static RUISwiftUIContainerElement.supportsElement(named:)(uint64_t a1, uint64_t a2)
{
  id *v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  id v6;

  v4 = (id *)sub_209EFF884();
  v5 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x24BEE4EA0] & *(_QWORD *)*v4) + 0x98);
  v6 = *v4;
  LOBYTE(a2) = v5(a1, a2);

  return a2 & 1;
}

uint64_t sub_209F0C228()
{
  return sub_209F0E130(&OBJC_IVAR____TtC8RemoteUI26RUISwiftUIContainerElement_willLayoutSubviewsHandler, (void (*)(_QWORD, _QWORD))sub_209F0F444);
}

void sub_209F0C23C(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t sub_209F0C324(uint64_t a1, uint64_t a2)
{
  sub_209F1020C(a1, a2);
  return sub_209F0F414(a1);
}

uint64_t sub_209F0C358@<X0>(_QWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD *);

  result = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0x98))();
  if (result)
  {
    v5 = result;
    v6 = v4;
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v5;
    *(_QWORD *)(result + 24) = v6;
    v7 = sub_209F110D4;
  }
  else
  {
    v7 = 0;
  }
  *a2 = v7;
  a2[1] = result;
  return result;
}

uint64_t sub_209F0C3D4(uint64_t *a1, _QWORD **a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t (*v7)(uint64_t (*)(uint64_t), uint64_t);

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_209F110E8;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(uint64_t (**)(uint64_t (*)(uint64_t), uint64_t))((*MEMORY[0x24BEE4EA0] & **a2) + 0xA0);
  sub_209F0F444(v3);
  return v7(v6, v5);
}

void sub_209F0C46C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  void *v3;
  void (*v4)(void *);
  uint64_t v5;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = (_QWORD *)MEMORY[0x20BD1DC9C](v1);
  if (v2)
  {
    v3 = v2;
    v4 = (void (*)(void *))(*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v2) + 0x98))();
    if (v4)
    {
      v5 = (uint64_t)v4;
      v4(v3);
      sub_209F0F414(v5);
    }

  }
}

uint64_t (*sub_209F0C500(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_209F0C548;
}

uint64_t sub_209F0C548(uint64_t a1, char a2)
{
  uint64_t result;
  _QWORD *v5;
  uint64_t v6;
  void (*v7)(void (*)(), uint64_t);

  result = swift_endAccess();
  if ((a2 & 1) == 0)
  {
    v5 = *(_QWORD **)(*(_QWORD *)(a1 + 24) + OBJC_IVAR____TtC8RemoteUI26RUISwiftUIContainerElement_container);
    v6 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v7 = *(void (**)(void (*)(), uint64_t))(qword_2545C6ED8 + (*MEMORY[0x24BEE4EA0] & *v5) + 96);
    swift_retain();
    v7(sub_209F10328, v6);
    return swift_release();
  }
  return result;
}

id sub_209F0C610(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _QWORD aBlock[6];

  v5 = (uint64_t *)(a1 + *a3);
  swift_beginAccess();
  v6 = *v5;
  if (!*v5)
    return 0;
  v7 = v5[1];
  aBlock[4] = v6;
  aBlock[5] = v7;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_209F0C23C;
  aBlock[3] = a4;
  v8 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  return v8;
}

uint64_t sub_209F0C6B8()
{
  return sub_209F0E130(&OBJC_IVAR____TtC8RemoteUI26RUISwiftUIContainerElement_didLayoutSubviewsHandler, (void (*)(_QWORD, _QWORD))sub_209F0F444);
}

uint64_t sub_209F0C764(uint64_t a1, uint64_t a2)
{
  sub_209F10330(a1, a2);
  return sub_209F0F414(a1);
}

uint64_t sub_209F0C798@<X0>(_QWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD *);

  result = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0xB0))();
  if (result)
  {
    v5 = result;
    v6 = v4;
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v5;
    *(_QWORD *)(result + 24) = v6;
    v7 = sub_209F110AC;
  }
  else
  {
    v7 = 0;
  }
  *a2 = v7;
  a2[1] = result;
  return result;
}

uint64_t sub_209F0C814(uint64_t *a1, _QWORD **a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t (*v7)(uint64_t (*)(uint64_t), uint64_t);

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_209F1107C;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(uint64_t (**)(uint64_t (*)(uint64_t), uint64_t))((*MEMORY[0x24BEE4EA0] & **a2) + 0xB8);
  sub_209F0F444(v3);
  return v7(v6, v5);
}

void sub_209F0C8AC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  void *v3;
  void (*v4)(void *);
  uint64_t v5;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = (_QWORD *)MEMORY[0x20BD1DC9C](v1);
  if (v2)
  {
    v3 = v2;
    v4 = (void (*)(void *))(*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v2) + 0xB0))();
    if (v4)
    {
      v5 = (uint64_t)v4;
      v4(v3);
      sub_209F0F414(v5);
    }

  }
}

uint64_t (*sub_209F0C940(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_209F0C988;
}

uint64_t sub_209F0C988(uint64_t a1, char a2)
{
  uint64_t result;
  _QWORD *v5;
  uint64_t v6;
  void (*v7)(void (*)(), uint64_t);

  result = swift_endAccess();
  if ((a2 & 1) == 0)
  {
    v5 = *(_QWORD **)(*(_QWORD *)(a1 + 24) + OBJC_IVAR____TtC8RemoteUI26RUISwiftUIContainerElement_container);
    v6 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v7 = *(void (**)(void (*)(), uint64_t))(qword_2545C6ED8 + (*MEMORY[0x24BEE4EA0] & *v5) + 120);
    swift_retain();
    v7(sub_209F10428, v6);
    return swift_release();
  }
  return result;
}

uint64_t sub_209F0CAC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;

  v1 = sub_209F66BA4();
  MEMORY[0x24BDAC7A8](v1, v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
  v5 = MEMORY[0x24BDAC7A8](v3, v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD **)(v0 + OBJC_IVAR____TtC8RemoteUI26RUISwiftUIContainerElement_container);
  v9 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v10 = (*(uint64_t (**)(uint64_t))(qword_2545C6ED8 + (*MEMORY[0x24BEE4EA0] & *v8) + 160))(v5);
  if (v10)
  {
    v11 = (void *)v10;
    v12 = (void *)(*(uint64_t (**)(void))(qword_2545C6ED8 + (*v9 & *v8) + 136))();
    v13 = objc_msgSend(v11, sel_sourceURL);
    if (v13)
    {
      v14 = v13;
      sub_209F66A60();

      v15 = sub_209F66A90();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v7, 0, 1, v15);
    }
    else
    {
      v16 = sub_209F66A90();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v7, 1, 1, v16);
    }
    v17 = (void *)RUIObjectModel.decodingUserInfo.getter();
    type metadata accessor for HTTPDataSource();
    v18 = HTTPDataSource.__allocating_init()();
    sub_209F3C120((uint64_t)v12, (uint64_t)v7, v17, v18, (uint64_t)&protocol witness table for HTTPDataSource);
    sub_209EE017C((uint64_t)v7, &qword_2545BB600);

    return swift_release();
  }
  else
  {
    result = sub_209F677E0();
    __break(1u);
  }
  return result;
}

uint64_t sub_209F0CED8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(qword_2545C6ED8
                              + (*MEMORY[0x24BEE4EA0] & **(_QWORD **)(v0
                                                                    + OBJC_IVAR____TtC8RemoteUI26RUISwiftUIContainerElement_container))
                              + 192))();
}

uint64_t sub_209F0CF84()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(qword_2545C6ED8
                              + (*MEMORY[0x24BEE4EA0] & **(_QWORD **)(v0
                                                                    + OBJC_IVAR____TtC8RemoteUI26RUISwiftUIContainerElement_container))
                              + 184))();
}

id RUISwiftUIContainerElement.__allocating_init(attributes:parent:)(uint64_t a1, void *a2)
{
  objc_class *v2;
  void *v4;
  id v5;

  if (a1)
  {
    v4 = (void *)sub_209F6724C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithAttributes_parent_, v4, a2);

  return v5;
}

void RUISwiftUIContainerElement.init(attributes:parent:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id RUISwiftUIContainerElement.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void RUISwiftUIContainerElement.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id RUISwiftUIContainerElement.__deallocating_deinit(uint64_t a1)
{
  return sub_209F0F598(a1, type metadata accessor for RUISwiftUIContainerElement);
}

void __swiftcall RUISwiftUIContainerElement.view()(UIView_optional *__return_ptr retstr)
{
  uint64_t v1;
  id v2;

  v2 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                             + OBJC_IVAR____TtC8RemoteUI26RUISwiftUIContainerElement_container), sel_view));
}

void __swiftcall RUISwiftUIContainerElement.viewController()(UIViewController_optional *__return_ptr retstr)
{
  uint64_t v1;
  id v2;

  v2 = *(id *)(v1 + OBJC_IVAR____TtC8RemoteUI26RUISwiftUIContainerElement_container);
}

Swift::Void __swiftcall RUISwiftUIContainerElement.setObjectModel(_:)(RUIObjectModel_optional *a1)
{
  _QWORD *v1;
  RUIObjectModel_optional *v3;
  void (*v4)(RUIObjectModel_optional *);

  v4 = *(void (**)(RUIObjectModel_optional *))((*MEMORY[0x24BEE4EA0] & *v1) + 0x80);
  v3 = a1;
  v4(a1);
}

uint64_t sub_209F0D364()
{
  sub_209F10EEC();
  return sub_209F66DCC();
}

uint64_t EnvironmentValues.ruiObjectModel.getter()
{
  return sub_209F0D498((void (*)(void))sub_209F10430);
}

uint64_t EnvironmentValues.ruiObjectModel.setter(uint64_t a1)
{
  return sub_209F0D4EC(a1, (void (*)(void))sub_209F10430);
}

void (*EnvironmentValues.ruiObjectModel.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 16) = v1;
  *(_QWORD *)(a1 + 24) = sub_209F10430();
  sub_209F66EA4();
  return sub_209F0D428;
}

void sub_209F0D428(uint64_t a1, char a2)
{
  sub_209F0D584(a1, a2);
}

uint64_t sub_209F0D434()
{
  sub_209F10FA8();
  return sub_209F66DCC();
}

uint64_t EnvironmentValues.ruiParentElement.getter()
{
  return sub_209F0D498((void (*)(void))sub_209F10474);
}

uint64_t sub_209F0D498(void (*a1)(void))
{
  uint64_t v2;

  a1();
  sub_209F66EA4();
  return v2;
}

uint64_t EnvironmentValues.ruiParentElement.setter(uint64_t a1)
{
  return sub_209F0D4EC(a1, (void (*)(void))sub_209F10474);
}

uint64_t sub_209F0D4EC(uint64_t a1, void (*a2)(void))
{
  a2();
  return sub_209F66EB0();
}

void (*EnvironmentValues.ruiParentElement.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 16) = v1;
  *(_QWORD *)(a1 + 24) = sub_209F10474();
  sub_209F66EA4();
  return sub_209F0D578;
}

void sub_209F0D578(uint64_t a1, char a2)
{
  sub_209F0D584(a1, a2);
}

void sub_209F0D584(uint64_t a1, char a2)
{
  id v2;
  id v4;

  v2 = *(id *)a1;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)a1;
  if ((a2 & 1) != 0)
  {
    v4 = v2;
    sub_209F66EB0();

  }
  else
  {
    sub_209F66EB0();
  }
}

uint64_t sub_209F0D60C@<X0>(uint64_t a1@<X8>)
{
  void **v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t, uint64_t);
  void *v47;
  id v48;
  id v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  unsigned __int8 v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t KeyPath;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  void **v76;
  void *v77;
  uint64_t v78;
  uint64_t *v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  void **v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  id v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  _QWORD *v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  void **v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  uint64_t v140;
  __int128 v141;

  v122 = a1;
  v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB898);
  MEMORY[0x24BDAC7A8](v119, v2);
  v121 = (uint64_t)&v111 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB8A0);
  MEMORY[0x24BDAC7A8](v111, v4);
  v112 = (uint64_t)&v111 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB8A8);
  MEMORY[0x24BDAC7A8](v118, v6);
  v114 = (uint64_t)&v111 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB8B0);
  v9 = *(_QWORD *)(v8 - 8);
  v11 = MEMORY[0x24BDAC7A8](v8, v10);
  v113 = (char *)&v111 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)&v111 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB8B8);
  MEMORY[0x24BDAC7A8](v16, v17);
  v132 = (char *)&v111 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
  v21 = MEMORY[0x24BDAC7A8](v19, v20);
  v23 = (char *)&v111 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21, v24);
  v26 = (char *)&v111 - v25;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB8C0);
  MEMORY[0x24BDAC7A8](v27, v28);
  v30 = (char *)&v111 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for BuddyMLRenderer(0);
  MEMORY[0x24BDAC7A8](v31, v32);
  v34 = (uint64_t *)((char *)&v111 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB8C8);
  MEMORY[0x24BDAC7A8](v125, v35);
  v37 = (char *)&v111 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB8D0);
  MEMORY[0x24BDAC7A8](v127, v38);
  v131 = (uint64_t)&v111 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB8D8);
  MEMORY[0x24BDAC7A8](v129, v40);
  v133 = (uint64_t)&v111 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545BB8E0);
  MEMORY[0x24BDAC7A8](v134, v42);
  v135 = (uint64_t)&v111 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = *v1;
  v45 = sub_209F66AE4();
  v46 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56);
  v126 = v30;
  v46(v30, 1, 1, v45);
  v136 = v1;
  v47 = v1[3];
  v120 = v8;
  v116 = v9;
  v115 = v15;
  v130 = v37;
  v128 = v34;
  v123 = (uint64_t)v47;
  v124 = v26;
  if (v47)
  {
    v48 = v44;
    v49 = objc_msgSend(v47, sel_sourceURL);
    if (v49)
    {
      v50 = v49;
      sub_209F66A60();

      v51 = sub_209F66A90();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v23, 0, 1, v51);
    }
    else
    {
      v54 = sub_209F66A90();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v23, 1, 1, v54);
    }
    sub_209EDF9D0((uint64_t)v23, (uint64_t)v26);
    v117 = v47;
  }
  else
  {
    v52 = sub_209F66A90();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v26, 1, 1, v52);
    v53 = v44;
    v117 = 0;
  }
  v141 = *(_OWORD *)(v136 + 1);
  v55 = *((_QWORD *)&v141 + 1);
  v56 = v136[6];
  sub_209F104B8((uint64_t)&v141);
  v57 = v56;
  v58 = sub_209F3F29C();
  v60 = v59;
  v62 = v61 & 1;
  v63 = sub_209F3F2A0();
  v65 = v64;
  v67 = v66 & 1;
  v68 = (uint64_t)v132;
  sub_209F3C61C();
  v110 = v65;
  v69 = v128;
  sub_209F3C664((uint64_t)v44, (uint64_t)v126, (uint64_t)v124, v55, v58, v60, v62, v63, v128, v110, v67, v68, (uint64_t)v57);
  KeyPath = swift_getKeyPath();
  v71 = (uint64_t)v130;
  sub_209F104E0((uint64_t)v69, (uint64_t)v130);
  v72 = (uint64_t *)(v71 + *(int *)(v125 + 36));
  v73 = v123;
  *v72 = KeyPath;
  v72[1] = v73;
  v74 = v117;
  sub_209F10524((uint64_t)v69);
  v75 = swift_getKeyPath();
  v76 = v136;
  v77 = v136[4];
  v78 = v131;
  sub_209EE3528(v71, v131, &qword_2545BB8C8);
  v79 = (uint64_t *)(v78 + *(int *)(v127 + 36));
  *v79 = v75;
  v79[1] = (uint64_t)v77;
  v80 = v77;
  sub_209EE017C(v71, &qword_2545BB8C8);
  v81 = swift_getKeyPath();
  type metadata accessor for HTTPDataSource();
  v82 = HTTPDataSource.__allocating_init()();
  v83 = v133;
  sub_209EE3528(v78, v133, &qword_2545BB8D0);
  v84 = (uint64_t *)(v83 + *(int *)(v129 + 36));
  *v84 = v81;
  v84[1] = v82;
  v84[2] = (uint64_t)&protocol witness table for HTTPDataSource;
  sub_209EE017C(v78, &qword_2545BB8D0);
  v85 = (uint64_t)v76[5];
  type metadata accessor for ElementDirectory();
  sub_209EE4ABC(&qword_2545BB570, (uint64_t (*)(uint64_t))type metadata accessor for ElementDirectory, (uint64_t)&unk_209F7B090);
  v86 = sub_209F66C64();
  v87 = v135;
  sub_209EE3528(v83, v135, &qword_2545BB8D8);
  v88 = (uint64_t *)(v87 + *(int *)(v134 + 36));
  *v88 = v86;
  v88[1] = v85;
  swift_retain();
  sub_209EE017C(v83, &qword_2545BB8D8);
  if (v73)
  {
    v89 = (void **)v74;
    v90 = RUIObjectModel.scriptEnvironment.getter();
    type metadata accessor for ScriptEnvironment();
    sub_209EE4ABC((unint64_t *)&qword_2545BB990, (uint64_t (*)(uint64_t))type metadata accessor for ScriptEnvironment, (uint64_t)&protocol conformance descriptor for ScriptEnvironment);
    v91 = sub_209F66C64();
    v92 = v112;
    sub_209EE3528(v87, v112, (uint64_t *)&unk_2545BB8E0);
    v93 = (uint64_t *)(v92 + *(int *)(v111 + 36));
    *v93 = v91;
    v93[1] = v90;
    v136 = v89;
    v94 = RUIObjectModel.xmlUIData.getter();
    type metadata accessor for XMLUIData();
    sub_209EE4ABC((unint64_t *)&qword_2545BAF70, (uint64_t (*)(uint64_t))type metadata accessor for XMLUIData, (uint64_t)&protocol conformance descriptor for XMLUIData);
    v95 = sub_209F66C64();
    v96 = v114;
    sub_209EE3528(v92, v114, &qword_2545BB8A0);
    v97 = v118;
    v98 = (uint64_t *)(v96 + *(int *)(v118 + 36));
    *v98 = v95;
    v98[1] = v94;
    sub_209EE017C(v92, &qword_2545BB8A0);
    RUIObjectModel.activityIndicatorManager.getter();
    v99 = type metadata accessor for ActivityIndicatorManager(0);
    v100 = sub_209F10560();
    v101 = sub_209EE4ABC((unint64_t *)&qword_2545BB988, type metadata accessor for ActivityIndicatorManager, (uint64_t)&protocol conformance descriptor for ActivityIndicatorManager);
    v102 = v113;
    sub_209F67114();
    swift_release();
    sub_209EE017C(v96, &qword_2545BB8A8);
    v103 = v116;
    v104 = v115;
    v105 = v120;
    (*(void (**)(char *, char *, uint64_t))(v116 + 32))(v115, v102, v120);
    (*(void (**)(uint64_t, char *, uint64_t))(v103 + 16))(v121, v104, v105);
    swift_storeEnumTagMultiPayload();
    v137 = v97;
    v138 = v99;
    v139 = v100;
    v140 = v101;
    v87 = v135;
    swift_getOpaqueTypeConformance2();
    sub_209F10658();
    sub_209F66F64();

    (*(void (**)(char *, uint64_t))(v103 + 8))(v104, v105);
  }
  else
  {
    sub_209EE3528(v87, v121, (uint64_t *)&unk_2545BB8E0);
    swift_storeEnumTagMultiPayload();
    v106 = type metadata accessor for ActivityIndicatorManager(255);
    v107 = sub_209F10560();
    v108 = sub_209EE4ABC((unint64_t *)&qword_2545BB988, type metadata accessor for ActivityIndicatorManager, (uint64_t)&protocol conformance descriptor for ActivityIndicatorManager);
    v137 = v118;
    v138 = v106;
    v139 = v107;
    v140 = v108;
    swift_getOpaqueTypeConformance2();
    sub_209F10658();
    sub_209F66F64();
  }
  return sub_209EE017C(v87, (uint64_t *)&unk_2545BB8E0);
}

uint64_t sub_209F0DFC0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_209F00CAC();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_209F0DFE8()
{
  swift_unknownObjectRetain();
  return sub_209F00D28();
}

uint64_t sub_209F0E020@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, _QWORD *a6@<X8>)
{
  uint64_t result;
  uint64_t v13;

  type metadata accessor for SwiftUIContentView.ContentLoader();
  sub_209EE4ABC((unint64_t *)&qword_2545BB890, (uint64_t (*)(uint64_t))type metadata accessor for SwiftUIContentView.ContentLoader, (uint64_t)&unk_209F7B9A8);
  result = sub_209F66DD8();
  *a6 = a1;
  a6[1] = result;
  a6[2] = v13;
  a6[3] = a2;
  a6[4] = a3;
  a6[5] = a4;
  a6[6] = a5;
  return result;
}

uint64_t sub_209F0E0B8()
{
  return sub_209F0E130(&qword_2545BB9B8, (void (*)(_QWORD, _QWORD))sub_209F110D0);
}

uint64_t sub_209F0E0CC(uint64_t a1, uint64_t a2)
{
  return sub_209F0E19C(a1, a2, &qword_2545BB9B8);
}

uint64_t (*sub_209F0E0D8())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_209F0E11C()
{
  return sub_209F0E130(&qword_2545BB9C0, (void (*)(_QWORD, _QWORD))sub_209F110D0);
}

uint64_t sub_209F0E130(_QWORD *a1, void (*a2)(_QWORD, _QWORD))
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;

  v4 = (_QWORD *)(v2 + *a1);
  swift_beginAccess();
  v5 = *v4;
  a2(*v4, v4[1]);
  return v5;
}

uint64_t sub_209F0E190(uint64_t a1, uint64_t a2)
{
  return sub_209F0E19C(a1, a2, &qword_2545BB9C0);
}

uint64_t sub_209F0E19C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t *v6;
  uint64_t v7;

  v6 = (uint64_t *)(v3 + *a3);
  swift_beginAccess();
  v7 = *v6;
  *v6 = a1;
  v6[1] = a2;
  return sub_209F0F414(v7);
}

uint64_t (*sub_209F0E1F4())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id sub_209F0E238()
{
  uint64_t v0;
  id *v1;

  v1 = (id *)(v0 + qword_2545BB9C8);
  swift_beginAccess();
  return *v1;
}

void sub_209F0E27C(void *a1)
{
  _QWORD *v1;
  void **v3;
  void *v4;
  id v5;
  _QWORD v6[7];

  v3 = (void **)((char *)v1 + qword_2545BB9C8);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;
  v5 = a1;

  *((_BYTE *)v1 + qword_2545BB9D0) = 1;
  (*(void (**)(_QWORD *__return_ptr))(qword_2545C6ED8 + (*MEMORY[0x24BEE4EA0] & *v1) + 208))(v6);
  sub_209F66F58();

}

void (*sub_209F0E32C(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[7] = v1;
  swift_beginAccess();
  return sub_209F0E384;
}

void sub_209F0E384(_QWORD **a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = *a1;
  v4 = swift_endAccess();
  if ((a2 & 1) == 0)
  {
    v5 = (_QWORD *)v3[7];
    *((_BYTE *)v5 + qword_2545BB9D0) = 1;
    (*(void (**)(uint64_t))(qword_2545C6ED8 + (*MEMORY[0x24BEE4EA0] & *v5) + 208))(v4);
    sub_209F66F58();
  }
  free(v3);
}

uint64_t sub_209F0E3FC()
{
  return sub_209F05300(&qword_2545BB9D8);
}

void sub_209F0E408(void *a1)
{
  _QWORD *v1;
  uint64_t v3;
  _QWORD v4[7];

  swift_beginAccess();
  v3 = swift_unknownObjectWeakAssign();
  (*(void (**)(_QWORD *__return_ptr, uint64_t))(qword_2545C6ED8 + (*MEMORY[0x24BEE4EA0] & *v1) + 208))(v4, v3);
  sub_209F66F58();

}

void (*sub_209F0E498(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x50uLL);
  *a1 = v3;
  v4 = qword_2545BB9D8;
  v3[8] = v1;
  v3[9] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v3[7] = MEMORY[0x20BD1DC9C](v5);
  return sub_209F0E508;
}

void sub_209F0E508(uint64_t *a1, char a2)
{
  uint64_t v3;
  void *v4;
  _QWORD *v5;

  v3 = *a1;
  v4 = *(void **)(*a1 + 56);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {

    swift_endAccess();
  }
  else
  {
    v5 = *(_QWORD **)(v3 + 64);
    swift_endAccess();

    (*(void (**)(void))(qword_2545C6ED8 + (*MEMORY[0x24BEE4EA0] & *v5) + 208))();
    sub_209F66F58();
  }
  free((void *)v3);
}

void sub_209F0E5A8(void *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v4;
  id v5;
  objc_super v6;

  v6.receiver = a1;
  v6.super_class = (Class)type metadata accessor for RUISwiftUIContainer();
  v4 = v6.receiver;
  v5 = objc_msgSendSuper2(&v6, sel_viewWillAppear_, a3);
  (*(void (**)(id))(qword_2545C6ED8 + (*MEMORY[0x24BEE4EA0] & *v4) + 184))(v5);

}

uint64_t sub_209F0E630()
{
  _QWORD *v0;
  uint64_t result;

  if (*((_BYTE *)v0 + qword_2545BB9D0) == 1)
    return (*(uint64_t (**)(void))(qword_2545C6ED8 + (*MEMORY[0x24BEE4EA0] & *v0) + 192))();
  return result;
}

uint64_t sub_209F0E670()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  uint64_t (*v12)(void);
  uint64_t v13;
  void *v14;
  void *v15;
  RUIDecodingUserInfo *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
  v4 = MEMORY[0x24BDAC7A8](v2, v3);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v4, v7);
  v10 = (char *)&v27 - v9;
  v11 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v12 = *(uint64_t (**)(void))(qword_2545C6ED8 + (*MEMORY[0x24BEE4EA0] & *v0) + 160);
  v13 = ((uint64_t (*)(uint64_t))v12)(v8);
  if (v13)
  {
    v14 = (void *)v13;
    v15 = (void *)RUIObjectModel.decodingUserInfo.getter();

  }
  else
  {
    type metadata accessor for RUIDecodingUserInfo();
    RUIDecodingUserInfo.init()(v16);
    v15 = v17;
  }
  v18 = (void *)(*(uint64_t (**)(void))(qword_2545C6ED8 + (*v11 & *v1) + 136))();
  v19 = (void *)v12();
  if (v19)
  {
    v20 = v19;
    v21 = objc_msgSend(v19, sel_sourceURL);

    if (v21)
    {
      sub_209F66A60();

      v22 = sub_209F66A90();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v6, 0, 1, v22);
    }
    else
    {
      v24 = sub_209F66A90();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v6, 1, 1, v24);
    }
    sub_209EDF9D0((uint64_t)v6, (uint64_t)v10);
  }
  else
  {
    v23 = sub_209F66A90();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v10, 1, 1, v23);
  }
  type metadata accessor for HTTPDataSource();
  v25 = HTTPDataSource.__allocating_init()();
  sub_209F0EB90(v18, (uint64_t)v10, v15, v25, (uint64_t)&protocol witness table for HTTPDataSource);

  swift_release();
  result = sub_209EE017C((uint64_t)v10, &qword_2545BB600);
  *((_BYTE *)v1 + qword_2545BB9D0) = 0;
  return result;
}

uint64_t sub_209F0E880(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  id v11;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  _QWORD v14[6];
  objc_super v15;

  v15.receiver = v1;
  v15.super_class = (Class)type metadata accessor for RUISwiftUIContainer();
  objc_msgSendSuper2(&v15, sel_preferredContentSizeDidChangeForChildContentContainer_, a1);
  objc_msgSend(a1, sel_preferredContentSize);
  v4 = v3;
  v6 = v5;
  v7 = (void *)objc_opt_self();
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = v1;
  v8[3] = v4;
  v8[4] = v6;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_209F108C4;
  *(_QWORD *)(v9 + 24) = v8;
  v14[4] = sub_209EFB1F8;
  v14[5] = v9;
  v14[0] = MEMORY[0x24BDAC760];
  v14[1] = 1107296256;
  v14[2] = sub_209EFB218;
  v14[3] = &block_descriptor_2;
  v10 = _Block_copy(v14);
  v11 = v1;
  swift_retain();
  swift_release();
  objc_msgSend(v7, sel_performWithoutAnimation_, v10);
  _Block_release(v10);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

void sub_209F0E9FC(void *a1, uint64_t a2, void *a3)
{
  id v5;

  swift_unknownObjectRetain();
  v5 = a1;
  sub_209F0E880(a3);
  swift_unknownObjectRelease();

}

void sub_209F0EA50(void *a1)
{
  _QWORD *v1;
  id v2;
  void (*v3)(_QWORD, uint64_t);
  uint64_t v4;
  uint64_t v5;
  objc_super v6;

  v6.receiver = a1;
  v6.super_class = (Class)type metadata accessor for RUISwiftUIContainer();
  v1 = v6.receiver;
  v2 = objc_msgSendSuper2(&v6, sel_viewWillLayoutSubviews);
  v3 = (void (*)(_QWORD, uint64_t))(*(uint64_t (**)(id))(qword_2545C6ED8
                                                                           + (*MEMORY[0x24BEE4EA0] & *v1)
                                                                           + 88))(v2);
  if (v3)
  {
    v5 = (uint64_t)v3;
    v3(v3, v4);
    sub_209F0F414(v5);
  }

}

void sub_209F0EAF0(void *a1)
{
  _QWORD *v1;
  id v2;
  void (*v3)(_QWORD, uint64_t);
  uint64_t v4;
  uint64_t v5;
  objc_super v6;

  v6.receiver = a1;
  v6.super_class = (Class)type metadata accessor for RUISwiftUIContainer();
  v1 = v6.receiver;
  v2 = objc_msgSendSuper2(&v6, sel_viewDidLayoutSubviews);
  v3 = (void (*)(_QWORD, uint64_t))(*(uint64_t (**)(id))(qword_2545C6ED8
                                                                           + (*MEMORY[0x24BEE4EA0] & *v1)
                                                                           + 112))(v2);
  if (v3)
  {
    v5 = (uint64_t)v3;
    v3(v3, v4);
    sub_209F0F414(v5);
  }

}

uint64_t sub_209F0EB90(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  void (*v31)(uint64_t *, uint64_t *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t result;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37[3];
  uint64_t v38[4];

  v34 = a1;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_209F677B0();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v15);
  v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for RUI.LiftUI.XMLDecoder();
  v18 = RUI.LiftUI.XMLDecoder.__allocating_init()();
  if (a4)
  {
    v19 = v18;
    swift_unknownObjectRetain();
    v20 = sub_209EE60D0();
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, v20, v13);
    type metadata accessor for ResourceLoader();
    sub_209EE3528(a2, (uint64_t)v12, &qword_2545BB600);
    swift_unknownObjectRetain();
    v21 = sub_209EDFA18((uint64_t)v12, a4, a5);
    v38[3] = (uint64_t)&type metadata for DecodingContext;
    sub_209EE5FE8(v21, (uint64_t)a3, v38);
    swift_beginAccess();
    sub_209F0EEA0((uint64_t)v38, (uint64_t)v17);
    swift_endAccess();
    v22 = objc_allocWithZone((Class)RUIXMLElement);
    v23 = (void *)sub_209F672A0();
    v24 = objc_msgSend(v22, sel_initWithName_, v23);

    v25 = objc_allocWithZone((Class)RUIXMLElement);
    v26 = (void *)sub_209F672A0();
    v27 = objc_msgSend(v25, sel_initWithName_, v26);

    objc_msgSend(v24, sel_appendChild_, v27);
    if (v34)
    {
      v28 = v34;
      sub_209EE704C(v38);
      v29 = sub_209F52A90(v38);
      objc_msgSend(v27, sel_appendChild_, v29);

    }
    v30 = *(_QWORD *)(v36 + qword_2545BB9A0);
    v38[0] = (uint64_t)v24;
    v37[0] = v19;
    v31 = *(void (**)(uint64_t *, uint64_t *, uint64_t, uint64_t))(*(_QWORD *)v30 + 136);
    v32 = sub_209EE4ABC((unint64_t *)&qword_2545BBA40, (uint64_t (*)(uint64_t))type metadata accessor for RUI.LiftUI.XMLDecoder, (uint64_t)&protocol conformance descriptor for RUI.LiftUI.XMLDecoder);
    v31(v38, v37, v35, v32);

    swift_release();
    return swift_unknownObjectRelease();
  }
  else
  {
    result = sub_209F677E0();
    __break(1u);
  }
  return result;
}

uint64_t sub_209F0EEA0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  _OWORD v9[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_209EE3510((_OWORD *)a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v2;
    *v2 = 0x8000000000000000;
    sub_209F0FDB4(v9, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v8;
    swift_bridgeObjectRelease();
    v5 = sub_209F677B0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a2, v5);
  }
  else
  {
    sub_209EE017C(a1, &qword_2545BAF78);
    sub_209F0F6B0(a2, v9);
    v7 = sub_209F677B0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a2, v7);
    return sub_209EE017C((uint64_t)v9, &qword_2545BAF78);
  }
}

uint64_t sub_209F0EF84@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  RUIDecodingUserInfo *v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;

  v3 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v4 = (*(uint64_t (**)(void))(qword_2545C6ED8 + (*MEMORY[0x24BEE4EA0] & *v1) + 136))();
  v5 = *(uint64_t (**)(uint64_t))(qword_2545C6ED8 + (*v3 & *v1) + 160);
  v6 = swift_retain();
  v7 = v5(v6);
  v8 = *(void **)((char *)v1 + qword_2545BB9A8);
  v9 = *(_QWORD *)((char *)v1 + qword_2545BB9B0);
  v10 = v8;
  v11 = swift_retain();
  v12 = v5(v11);
  if (v12)
  {
    v13 = (void *)v12;
    v14 = RUIObjectModel.decodingUserInfo.getter();

  }
  else
  {
    type metadata accessor for RUIDecodingUserInfo();
    RUIDecodingUserInfo.init()(v15);
    v14 = v16;
  }
  type metadata accessor for SwiftUIContentView.ContentLoader();
  sub_209EE4ABC((unint64_t *)&qword_2545BB890, (uint64_t (*)(uint64_t))type metadata accessor for SwiftUIContentView.ContentLoader, (uint64_t)&unk_209F7B9A8);
  result = sub_209F66DD8();
  *a1 = v4;
  a1[1] = result;
  a1[2] = v18;
  a1[3] = v7;
  a1[4] = (uint64_t)v8;
  a1[5] = v9;
  a1[6] = v14;
  return result;
}

void sub_209F0F0B4(void *a1, void *a2, uint64_t a3)
{
  _BYTE *v3;
  uint64_t *v5;
  uint64_t *v6;
  char *v7;
  char *v8;
  uint64_t *v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t (*v16)(void);
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  void *v26;
  RUIDecodingUserInfo *v27;
  id v28;
  id v29;
  void *v30;

  v3[qword_2545BB9D0] = 1;
  v5 = (uint64_t *)&v3[qword_2545BB9B8];
  *v5 = 0;
  v5[1] = 0;
  v6 = (uint64_t *)&v3[qword_2545BB9C0];
  *v6 = 0;
  v6[1] = 0;
  v7 = &v3[qword_2545BB9D8];
  swift_unknownObjectWeakInit();
  v8 = v3;
  v9 = sub_209EFF884();
  v10 = (id)*v9;
  v30 = a1;
  v11 = objc_msgSend(a1, sel_name);
  v12 = sub_209F672C4();
  v14 = v13;

  v15 = (_QWORD *)MEMORY[0x24BEE4EA0];
  LOBYTE(v11) = (*(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x24BEE4EA0] & *v10) + 0x98))(v12, v14);

  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0)
  {

    swift_release();
    sub_209F0F414(*v5);
    sub_209F0F414(*v6);
    swift_unknownObjectWeakDestroy();

    type metadata accessor for RUISwiftUIContainer();
    swift_deallocPartialClassInstance();
    return;
  }
  v16 = *(uint64_t (**)(void))((*v15 & *(_QWORD *)*v9) + 0xB8);
  v17 = (id)*v9;
  v18 = v16();

  *(_QWORD *)&v8[qword_2545BB9A0] = v18;
  *(_QWORD *)&v8[qword_2545BB9C8] = v30;
  *(_QWORD *)&v8[qword_2545BB9A8] = a2;
  *(_QWORD *)&v8[qword_2545BB9B0] = a3;
  if (!a2)
  {
    v24 = v30;
    swift_retain();
    v23 = 0;
    goto LABEL_8;
  }
  v19 = v30;
  swift_retain();
  v20 = objc_msgSend(a2, sel_pageElement);
  if (!v20)
  {
    __break(1u);
    goto LABEL_13;
  }
  v21 = v20;
  v22 = objc_msgSend(v20, sel_page);

  if (!v22)
  {
LABEL_13:
    __break(1u);
    return;
  }
  v23 = objc_msgSend(v22, sel_objectModel);

LABEL_8:
  swift_beginAccess();
  swift_unknownObjectWeakAssign();

  MEMORY[0x20BD1DC9C](v7);
  v25 = MEMORY[0x20BD1DC9C](v7);
  if (v25)
  {
    v26 = (void *)v25;
    swift_retain();
    RUIObjectModel.decodingUserInfo.getter();

  }
  else
  {
    type metadata accessor for RUIDecodingUserInfo();
    swift_retain();
    RUIDecodingUserInfo.init()(v27);
  }
  type metadata accessor for SwiftUIContentView.ContentLoader();
  sub_209EE4ABC((unint64_t *)&qword_2545BB890, (uint64_t (*)(uint64_t))type metadata accessor for SwiftUIContentView.ContentLoader, (uint64_t)&unk_209F7B9A8);
  v28 = v30;
  swift_retain();
  v29 = a2;
  sub_209F66DD8();
  sub_209F66F4C();

  swift_release();
}

uint64_t sub_209F0F414(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t type metadata accessor for RUISwiftUIContainerElement()
{
  return objc_opt_self();
}

uint64_t sub_209F0F444(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

void sub_209F0F454(_BYTE *a1, uint64_t a2, void *a3)
{
  _QWORD *v5;
  _QWORD *v6;
  id v7;

  a1[qword_2545BB9D0] = 1;
  v5 = &a1[qword_2545BB9B8];
  *v5 = 0;
  v5[1] = 0;
  v6 = &a1[qword_2545BB9C0];
  *v6 = 0;
  v6[1] = 0;
  swift_unknownObjectWeakInit();
  v7 = a3;

  sub_209F677E0();
  __break(1u);
}

uint64_t sub_209F0F504()
{
  uint64_t v0;

  swift_release();

  swift_release();
  sub_209F0F414(*(_QWORD *)(v0 + qword_2545BB9B8));
  sub_209F0F414(*(_QWORD *)(v0 + qword_2545BB9C0));

  return swift_unknownObjectWeakDestroy();
}

id sub_209F0F588()
{
  return sub_209F0F598(0, type metadata accessor for RUISwiftUIContainer);
}

id sub_209F0F598(uint64_t a1, uint64_t (*a2)(void))
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t sub_209F0F5C8(uint64_t a1)
{
  swift_release();

  swift_release();
  sub_209F0F414(*(_QWORD *)(a1 + qword_2545BB9B8));
  sub_209F0F414(*(_QWORD *)(a1 + qword_2545BB9C0));

  return swift_unknownObjectWeakDestroy();
}

void sub_209F0F658()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_209F0F684()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

double sub_209F0F6B0@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_209EE628C(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v13 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_209F0FFD0();
      v9 = v13;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = sub_209F677B0();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
    sub_209EE3510((_OWORD *)(*(_QWORD *)(v9 + 56) + 32 * v6), a2);
    sub_209F0FB30(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_209F0F7AC(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  _QWORD *v39;
  int v40;
  _OWORD v41[2];

  v3 = v2;
  v5 = sub_209F677B0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBA50);
  v40 = a2;
  v11 = sub_209F67804();
  v12 = v11;
  if (!*(_QWORD *)(v10 + 16))
    goto LABEL_41;
  v13 = 1 << *(_BYTE *)(v10 + 32);
  v14 = *(_QWORD *)(v10 + 64);
  v39 = (_QWORD *)(v10 + 64);
  if (v13 < 64)
    v15 = ~(-1 << v13);
  else
    v15 = -1;
  v16 = v15 & v14;
  v37 = v2;
  v38 = (unint64_t)(v13 + 63) >> 6;
  v17 = v11 + 64;
  result = swift_retain();
  v19 = 0;
  while (1)
  {
    if (v16)
    {
      v21 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v22 = v21 | (v19 << 6);
      goto LABEL_22;
    }
    v23 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v38)
      break;
    v24 = v39;
    v25 = v39[v23];
    ++v19;
    if (!v25)
    {
      v19 = v23 + 1;
      if (v23 + 1 >= v38)
        goto LABEL_34;
      v25 = v39[v19];
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v38)
        {
LABEL_34:
          swift_release();
          v3 = v37;
          if ((v40 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v25 = v39[v26];
        if (!v25)
        {
          while (1)
          {
            v19 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_43;
            if (v19 >= v38)
              goto LABEL_34;
            v25 = v39[v19];
            ++v26;
            if (v25)
              goto LABEL_21;
          }
        }
        v19 = v26;
      }
    }
LABEL_21:
    v16 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v19 << 6);
LABEL_22:
    v27 = *(_QWORD *)(v6 + 72);
    v28 = *(_QWORD *)(v10 + 48) + v27 * v22;
    if ((v40 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v9, v28, v5);
      sub_209EE3510((_OWORD *)(*(_QWORD *)(v10 + 56) + 32 * v22), v41);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v9, v28, v5);
      sub_209EE3288(*(_QWORD *)(v10 + 56) + 32 * v22, (uint64_t)v41);
    }
    result = sub_209F67264();
    v29 = -1 << *(_BYTE *)(v12 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v17 + 8 * (v30 >> 6))) != 0)
    {
      v20 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v17 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v17 + 8 * v31);
      }
      while (v35 == -1);
      v20 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v17 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v12 + 48) + v27 * v20, v9, v5);
    result = (uint64_t)sub_209EE3510(v41, (_OWORD *)(*(_QWORD *)(v12 + 56) + 32 * v20));
    ++*(_QWORD *)(v12 + 16);
  }
  swift_release();
  v3 = v37;
  v24 = v39;
  if ((v40 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v36 = 1 << *(_BYTE *)(v10 + 32);
  if (v36 >= 64)
    bzero(v24, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v36;
  *(_QWORD *)(v10 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v12;
  return result;
}

unint64_t sub_209F0FB30(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  _OWORD *v26;
  __int128 v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, unint64_t, uint64_t);
  unint64_t v36;
  uint64_t v37;

  v4 = sub_209F677B0();
  v37 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4, v5);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a2 + 64;
  v10 = -1 << *(_BYTE *)(a2 + 32);
  v11 = (a1 + 1) & ~v10;
  if (((1 << v11) & *(_QWORD *)(a2 + 64 + 8 * (v11 >> 6))) != 0)
  {
    v12 = ~v10;
    result = sub_209F67678();
    if ((*(_QWORD *)(v9 + 8 * (v11 >> 6)) & (1 << v11)) != 0)
    {
      v36 = (result + 1) & v12;
      v13 = *(_QWORD *)(v37 + 72);
      v35 = *(void (**)(char *, unint64_t, uint64_t))(v37 + 16);
      v14 = v12;
      do
      {
        v15 = v9;
        v16 = v13;
        v17 = v13 * v11;
        v18 = v14;
        v35(v8, *(_QWORD *)(a2 + 48) + v13 * v11, v4);
        v19 = sub_209F67264();
        result = (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v8, v4);
        v14 = v18;
        v20 = v19 & v18;
        if (a1 >= (uint64_t)v36)
        {
          if (v20 >= v36 && a1 >= (uint64_t)v20)
          {
LABEL_16:
            v23 = *(_QWORD *)(a2 + 48);
            result = v23 + v16 * a1;
            v9 = v15;
            if (v16 * a1 < v17 || (v13 = v16, result >= v23 + v17 + v16))
            {
              result = swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              v13 = v16;
              v14 = v18;
            }
            else if (v16 * a1 != v17)
            {
              result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v24 = *(_QWORD *)(a2 + 56);
            v25 = (_OWORD *)(v24 + 32 * a1);
            v26 = (_OWORD *)(v24 + 32 * v11);
            if (a1 != v11 || (a1 = v11, v25 >= v26 + 2))
            {
              v27 = v26[1];
              *v25 = *v26;
              v25[1] = v27;
              a1 = v11;
            }
            goto LABEL_5;
          }
        }
        else if (v20 >= v36 || a1 >= (uint64_t)v20)
        {
          goto LABEL_16;
        }
        v9 = v15;
        v13 = v16;
LABEL_5:
        v11 = (v11 + 1) & v14;
      }
      while (((*(_QWORD *)(v9 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
    }
    v28 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    v29 = *v28;
    v30 = (-1 << a1) - 1;
  }
  else
  {
    v28 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    v30 = *v28;
    v29 = (-1 << a1) - 1;
  }
  *v28 = v30 & v29;
  v31 = *(_QWORD *)(a2 + 16);
  v32 = __OFSUB__(v31, 1);
  v33 = v31 - 1;
  if (v32)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v33;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

_OWORD *sub_209F0FDB4(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  _OWORD *v22;
  _OWORD *result;
  unint64_t v24;
  char v25;
  uint64_t v26;

  v4 = (_QWORD **)v3;
  v8 = sub_209F677B0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (_QWORD *)*v3;
  v15 = sub_209EE628C(a2);
  v16 = v13[2];
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
  }
  else
  {
    v19 = v14;
    v20 = v13[3];
    if (v20 >= v18 && (a3 & 1) != 0)
    {
LABEL_7:
      v21 = *v4;
      if ((v19 & 1) != 0)
      {
LABEL_8:
        v22 = (_OWORD *)(v21[7] + 32 * v15);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
        return sub_209EE3510(a1, v22);
      }
      goto LABEL_11;
    }
    if (v20 >= v18 && (a3 & 1) == 0)
    {
      sub_209F0FFD0();
      goto LABEL_7;
    }
    sub_209F0F7AC(v18, a3 & 1);
    v24 = sub_209EE628C(a2);
    if ((v19 & 1) == (v25 & 1))
    {
      v15 = v24;
      v21 = *v4;
      if ((v19 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a2, v8);
      return sub_209F0FF30(v15, (uint64_t)v12, a1, v21);
    }
  }
  result = (_OWORD *)sub_209F67AA4();
  __break(1u);
  return result;
}

_OWORD *sub_209F0FF30(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  _OWORD *result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_209F677B0();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  result = sub_209EE3510(a3, (_OWORD *)(a4[7] + 32 * a1));
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

void *sub_209F0FFD0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *result;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  uint64_t v26;
  _OWORD v27[2];

  v1 = v0;
  v2 = sub_209F677B0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBA50);
  v7 = *v0;
  v8 = sub_209F677F8();
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v9;
    return result;
  }
  v25 = v1;
  result = (void *)(v8 + 64);
  v11 = (unint64_t)((1 << *(_BYTE *)(v9 + 32)) + 63) >> 6;
  if (v9 != v7 || (unint64_t)result >= v7 + 64 + 8 * v11)
    result = memmove(result, (const void *)(v7 + 64), 8 * v11);
  v26 = v7 + 64;
  v13 = 0;
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v7 + 16);
  v14 = 1 << *(_BYTE *)(v7 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v7 + 64);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v17)
      goto LABEL_26;
    v23 = *(_QWORD *)(v26 + 8 * v22);
    ++v13;
    if (!v23)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v17)
        goto LABEL_26;
      v23 = *(_QWORD *)(v26 + 8 * v13);
      if (!v23)
        break;
    }
LABEL_25:
    v16 = (v23 - 1) & v23;
    v19 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v3 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v6, *(_QWORD *)(v7 + 48) + v20, v2);
    v21 = 32 * v19;
    sub_209EE3288(*(_QWORD *)(v7 + 56) + v21, (uint64_t)v27);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v9 + 48) + v20, v6, v2);
    result = sub_209EE3510(v27, (_OWORD *)(*(_QWORD *)(v9 + 56) + v21));
  }
  v24 = v22 + 2;
  if (v24 >= v17)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v26 + 8 * v24);
  if (v23)
  {
    v13 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v13 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v13 >= v17)
      goto LABEL_26;
    v23 = *(_QWORD *)(v26 + 8 * v13);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_209F1020C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  void (*v9)(void (*)(), uint64_t);

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC8RemoteUI26RUISwiftUIContainerElement_willLayoutSubviewsHandler);
  swift_beginAccess();
  v6 = *v5;
  *v5 = a1;
  v5[1] = a2;
  sub_209F0F444(a1);
  sub_209F0F414(v6);
  v7 = *(_QWORD **)(v2 + OBJC_IVAR____TtC8RemoteUI26RUISwiftUIContainerElement_container);
  v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v9 = *(void (**)(void (*)(), uint64_t))(qword_2545C6ED8 + (*MEMORY[0x24BEE4EA0] & *v7) + 96);
  swift_retain();
  v9(sub_209F10328, v8);
  return swift_release();
}

uint64_t sub_209F10304()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_209F10328()
{
  uint64_t v0;

  sub_209F0C46C(v0);
}

uint64_t sub_209F10330(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  void (*v9)(void (*)(), uint64_t);

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC8RemoteUI26RUISwiftUIContainerElement_didLayoutSubviewsHandler);
  swift_beginAccess();
  v6 = *v5;
  *v5 = a1;
  v5[1] = a2;
  sub_209F0F444(a1);
  sub_209F0F414(v6);
  v7 = *(_QWORD **)(v2 + OBJC_IVAR____TtC8RemoteUI26RUISwiftUIContainerElement_container);
  v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v9 = *(void (**)(void (*)(), uint64_t))(qword_2545C6ED8 + (*MEMORY[0x24BEE4EA0] & *v7) + 120);
  swift_retain();
  v9(sub_209F10428, v8);
  return swift_release();
}

void sub_209F10428()
{
  uint64_t v0;

  sub_209F0C8AC(v0);
}

unint64_t sub_209F10430()
{
  unint64_t result;

  result = qword_2545C0750;
  if (!qword_2545C0750)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F786C8, &type metadata for RUIObjectModelEnvironmentKey);
    atomic_store(result, (unint64_t *)&qword_2545C0750);
  }
  return result;
}

unint64_t sub_209F10474()
{
  unint64_t result;

  result = qword_2545C0758;
  if (!qword_2545C0758)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F78690, &type metadata for RUIParentElementEnvironmentKey);
    atomic_store(result, (unint64_t *)&qword_2545C0758);
  }
  return result;
}

uint64_t sub_209F104B8(uint64_t a1)
{
  swift_retain();
  return a1;
}

uint64_t sub_209F104E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BuddyMLRenderer(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_209F10524(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for BuddyMLRenderer(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_209F10560()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2545BB8F0;
  if (!qword_2545BB8F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BB8A8);
    v2[0] = sub_209F105DC();
    v2[1] = sub_209F10860(&qword_2545BB978, &qword_2545BB980);
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2545BB8F0);
  }
  return result;
}

unint64_t sub_209F105DC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2545BB8F8;
  if (!qword_2545BB8F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BB8A0);
    v2[0] = sub_209F10658();
    v2[1] = sub_209F10860(&qword_2545BB968, &qword_2545BB970);
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2545BB8F8);
  }
  return result;
}

unint64_t sub_209F10658()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2545BB900;
  if (!qword_2545BB900)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2545BB8E0);
    v2[0] = sub_209F106D4();
    v2[1] = sub_209F10860(&qword_2545BB958, &qword_2545BB960);
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2545BB900);
  }
  return result;
}

unint64_t sub_209F106D4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2545BB908;
  if (!qword_2545BB908)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BB8D8);
    v2[0] = sub_209F10750();
    v2[1] = sub_209F10860(&qword_2545BB948, &qword_2545BB950);
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2545BB908);
  }
  return result;
}

unint64_t sub_209F10750()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2545BB910;
  if (!qword_2545BB910)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BB8D0);
    v2[0] = sub_209F107CC();
    v2[1] = sub_209F10860(&qword_2545BB938, &qword_2545BB940);
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2545BB910);
  }
  return result;
}

unint64_t sub_209F107CC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2545BB918;
  if (!qword_2545BB918)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BB8C8);
    v2[0] = sub_209EE4ABC(&qword_2545BB920, type metadata accessor for BuddyMLRenderer, (uint64_t)&unk_209F7A3B0);
    v2[1] = sub_209F10860(&qword_2545BB928, &qword_2545BB930);
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2545BB918);
  }
  return result;
}

uint64_t sub_209F10860(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BDF1020], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_209F108A0()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_209F108C4()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_setPreferredContentSize_, *(double *)(v0 + 24), *(double *)(v0 + 32));
}

uint64_t sub_209F108D8()
{
  return swift_deallocObject();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t sub_209F10900()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t method lookup function for RUISwiftUIContainerElement()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RUISwiftUIContainerElement.__allocating_init(element:parent:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of RUISwiftUIContainerElement.willLayoutSubviewsHandler.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of RUISwiftUIContainerElement.willLayoutSubviewsHandler.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of RUISwiftUIContainerElement.willLayoutSubviewsHandler.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of RUISwiftUIContainerElement.didLayoutSubviewsHandler.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of RUISwiftUIContainerElement.didLayoutSubviewsHandler.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of RUISwiftUIContainerElement.didLayoutSubviewsHandler.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of RUISwiftUIContainerElement.prepareToPreload()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of RUISwiftUIContainerElement.loadElement()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of RUISwiftUIContainerElement.loadElementIfNeeded()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xD8))();
}

void destroy for BuddyMLRendererWrapper(id *a1)
{

  swift_release();
  swift_release();

}

_QWORD *initializeWithCopy for BuddyMLRendererWrapper(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(void **)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v5;
  v7 = *(void **)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  a1[4] = v7;
  a1[5] = v6;
  v8 = *(void **)(a2 + 48);
  a1[6] = v8;
  v9 = v3;
  swift_retain();
  v10 = v5;
  v11 = v7;
  swift_retain();
  v12 = v8;
  return a1;
}

uint64_t assignWithCopy for BuddyMLRendererWrapper(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  v7 = *(void **)(a1 + 24);
  v8 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v8;
  v9 = v8;

  v10 = *(void **)(a1 + 32);
  v11 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v11;
  v12 = v11;

  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  v13 = *(void **)(a2 + 48);
  v14 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v13;
  v15 = v13;

  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for BuddyMLRendererWrapper(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  v6 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);

  return a1;
}

uint64_t getEnumTagSinglePayload for BuddyMLRendererWrapper(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BuddyMLRendererWrapper(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BuddyMLRendererWrapper()
{
  return &type metadata for BuddyMLRendererWrapper;
}

uint64_t sub_209F10CC8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_209F10D4C()
{
  return type metadata accessor for RUISwiftUIContainer();
}

unint64_t sub_209F10D58()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = qword_2545BB9E8;
  if (!qword_2545BB9E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BB9F0);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BB8A8);
    v2[3] = type metadata accessor for ActivityIndicatorManager(255);
    v2[4] = sub_209F10560();
    v2[5] = sub_209EE4ABC((unint64_t *)&qword_2545BB988, type metadata accessor for ActivityIndicatorManager, (uint64_t)&protocol conformance descriptor for ActivityIndicatorManager);
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_209F10658();
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BDEF3D8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2545BB9E8);
  }
  return result;
}

uint64_t sub_209F10E30(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_209F10E50(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize()
{
  unint64_t ForeignTypeMetadata;
  uint64_t v1;

  if (!qword_2545BB9F8)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1)
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_2545BB9F8);
  }
}

ValueMetadata *type metadata accessor for RUIParentElementEnvironmentKey()
{
  return &type metadata for RUIParentElementEnvironmentKey;
}

ValueMetadata *type metadata accessor for RUIObjectModelEnvironmentKey()
{
  return &type metadata for RUIObjectModelEnvironmentKey;
}

unint64_t sub_209F10EEC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2545BBA00;
  if (!qword_2545BBA00)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2545BB7B0);
    v2 = sub_209F10F68(&qword_2545BBA10, (unint64_t *)&qword_2545BBA18);
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BEE4AB8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2545BBA00);
  }
  return result;
}

uint64_t sub_209F10F68(unint64_t *a1, unint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_209F0A438(255, a2);
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BEE5BE0], v4);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_209F10FA8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2545BBA20;
  if (!qword_2545BBA20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2545BB7A0);
    v2 = sub_209F10F68(&qword_2545BBA30, &qword_2545BBA38);
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BEE4AB8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2545BBA20);
  }
  return result;
}

uint64_t sub_209F11024()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_209F11048()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_209F11058()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_209F1107C(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *);
  uint64_t v4;

  v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  v4 = a1;
  return v2(&v4);
}

uint64_t sub_209F110AC(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

uint64_t sub_209F11100(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  char v51;
  uint64_t v52;
  char v53;
  char v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  void (*v80)(char *, uint64_t);
  unsigned int (*v81)(char *, uint64_t, uint64_t);
  char *v82;
  char *v83;
  char *v84;
  char *v85;
  uint64_t v86;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
  v4 = MEMORY[0x24BDAC7A8](v2, v3);
  v6 = (char *)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4, v7);
  v85 = (char *)&v81 - v8;
  v9 = sub_209F66A90();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBA58);
  v16 = MEMORY[0x24BDAC7A8](v14, v15);
  v84 = (char *)&v81 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16, v18);
  v20 = (char *)&v81 - v19;
  v21 = sub_209F669B8();
  v22 = *(_QWORD *)(v21 - 8);
  v24 = MEMORY[0x24BDAC7A8](v21, v23);
  v83 = (char *)&v81 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24, v26);
  v28 = (char *)&v81 - v27;
  v86 = a1;
  sub_209F6694C();
  v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
  if (v29(v20, 1, v21) == 1)
    goto LABEL_2;
  v81 = v29;
  v82 = v13;
  v30 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
  v30(v28, v20, v21);
  sub_209F66A3C();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v6, v86, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
  v31 = (uint64_t)v85;
  sub_209F66A78();
  swift_bridgeObjectRelease();
  sub_209EE017C((uint64_t)v6, &qword_2545BB600);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v31, 1, v9) == 1)
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v28, v21);
    sub_209EE017C(v31, &qword_2545BB600);
    return 0;
  }
  v32 = v82;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v82, v31, v9);
  v20 = v84;
  sub_209F6694C();
  if (v81(v20, 1, v21) != 1)
  {
    v33 = v83;
    v30(v83, v20, v21);
    v34 = v28;
    v35 = v33;
    v36 = sub_209F66994();
    v38 = v37;
    v39 = sub_209F66994();
    if (v38)
    {
      if (!v40)
      {
        v41 = v82;
        goto LABEL_22;
      }
      v41 = v82;
      if (v36 == v39 && v38 == v40)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v42 = sub_209F679A8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v42 & 1) == 0)
          goto LABEL_23;
      }
    }
    else
    {
      v41 = v82;
      if (v40)
        goto LABEL_22;
    }
    v43 = sub_209F66958();
    v45 = v44;
    v46 = sub_209F66958();
    if (v45)
    {
      if (!v47)
        goto LABEL_22;
      if (v43 == v46 && v45 == v47)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v51 = sub_209F679A8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v51 & 1) == 0)
          goto LABEL_23;
      }
    }
    else if (v47)
    {
      goto LABEL_22;
    }
    v52 = sub_209F66970();
    v54 = v53;
    v55 = sub_209F66970();
    if ((v54 & 1) != 0)
    {
      if ((v56 & 1) == 0)
        goto LABEL_23;
    }
    else if ((v56 & 1) != 0 || v52 != v55)
    {
      goto LABEL_23;
    }
    v57 = sub_209F6697C();
    v59 = v58;
    v60 = sub_209F6697C();
    if (v59)
    {
      if (!v61)
        goto LABEL_22;
      if (v57 == v60 && v59 == v61)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v62 = sub_209F679A8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v62 & 1) == 0)
          goto LABEL_23;
      }
    }
    else if (v61)
    {
      goto LABEL_22;
    }
    v63 = sub_209F669AC();
    v65 = v64;
    v66 = sub_209F669AC();
    if (v65)
    {
      if (!v67)
        goto LABEL_22;
      if (v63 == v66 && v65 == v67)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v68 = sub_209F679A8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v68 & 1) == 0)
          goto LABEL_23;
      }
    }
    else if (v67)
    {
      goto LABEL_22;
    }
    v69 = sub_209F66964();
    v71 = v70;
    if (v69 == sub_209F66964() && v71 == v72)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v73 = sub_209F679A8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v73 & 1) == 0)
        goto LABEL_23;
    }
    v74 = sub_209F66988();
    v76 = v75;
    v77 = sub_209F66988();
    if (v76)
    {
      if (v78)
      {
        if (v74 == v77 && v76 == v78)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_60:
          v49 = sub_209F669A0();
          v80 = *(void (**)(char *, uint64_t))(v22 + 8);
          v80(v35, v21);
          (*(void (**)(char *, uint64_t))(v10 + 8))(v41, v9);
          v80(v34, v21);
          return v49;
        }
        v79 = sub_209F679A8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v79 & 1) != 0)
          goto LABEL_60;
LABEL_23:
        v48 = *(void (**)(char *, uint64_t))(v22 + 8);
        v48(v33, v21);
        (*(void (**)(char *, uint64_t))(v10 + 8))(v41, v9);
        v48(v34, v21);
        return 0;
      }
    }
    else if (!v78)
    {
      goto LABEL_60;
    }
LABEL_22:
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v32, v9);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v28, v21);
LABEL_2:
  sub_209EE017C((uint64_t)v20, &qword_2545BBA58);
  return 0;
}

void *sub_209F117C0()
{
  void *result;

  result = malloc(1uLL);
  if (result)
    qword_2545C6EE8 = (uint64_t)result;
  else
    __break(1u);
  return result;
}

uint64_t sub_209F117E8()
{
  if (qword_2545C0910 != -1)
    swift_once();
  return qword_2545C6EE8;
}

Swift::Void __swiftcall RUILoader.initializeSwift()()
{
  RUIDecodingUserInfo *v0;
  uint64_t v1;
  uint64_t v2;

  type metadata accessor for RUIDecodingUserInfo();
  RUIDecodingUserInfo.init()(v0);
  v2 = v1;
  sub_209EE5AE8((uint64_t)&v2, (uint64_t)&type metadata for DecodingUserInfoAssociatedKey, (uint64_t)&type metadata for DecodingUserInfoAssociatedKey, (uint64_t)&off_2545B94A8);
}

uint64_t RUILoader.decodingUserInfo.getter()
{
  uint64_t v1;

  sub_209EE596C((uint64_t)&type metadata for DecodingUserInfoAssociatedKey, (uint64_t)&off_2545B94A8, (uint64_t)&v1);
  return v1;
}

ValueMetadata *type metadata accessor for DecodingUserInfoAssociatedKey()
{
  return &type metadata for DecodingUserInfoAssociatedKey;
}

uint64_t sub_209F11978(void *a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  os_log_type_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  uint64_t v18;
  uint64_t v19;

  v4 = sub_209F66E98();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v16 = a1;
  }
  else
  {
    swift_retain();
    v9 = sub_209F67540();
    v10 = sub_209F67030();
    v11 = v9;
    if (os_log_type_enabled(v10, v9))
    {
      v12 = swift_slowAlloc();
      v13 = swift_slowAlloc();
      v19 = v13;
      *(_DWORD *)v12 = 136315138;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545BB7B0);
      v14 = sub_209F67BA0();
      *(_QWORD *)(v12 + 4) = sub_209EE75A0(v14, v15, &v19);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_209E87000, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x20BD1DC00](v13, -1, -1);
      MEMORY[0x20BD1DC00](v12, -1, -1);
    }

    sub_209F66E8C();
    swift_getAtKeyPath();
    sub_209EEC698(a1, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    return v19;
  }
  return (uint64_t)a1;
}

uint64_t sub_209F11B24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBA68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_209F11B6C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_209F11B94 + 4 * a6[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_209F11B94()
{
  return 0x697461676976616ELL;
}

uint64_t sub_209F11BB8()
{
  return 0x726564616568;
}

uint64_t sub_209F11BCC()
{
  return 0x6D496D6574737973;
}

uint64_t sub_209F11BEC()
{
  return 0x6563696F6863;
}

unint64_t sub_209F11C00()
{
  return 0xD000000000000011;
}

uint64_t sub_209F11C1C()
{
  return 0x6B6E694C706C6568;
}

uint64_t sub_209F11C34()
{
  return 0x6564616548627573;
}

unint64_t sub_209F11C50()
{
  return 0xD000000000000018;
}

uint64_t sub_209F11C70(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_209F11C98 + 4 * byte_209F78749[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_209F11C98()
{
  return 0x697461676976616ELL;
}

uint64_t sub_209F11CBC()
{
  return 0x726564616568;
}

uint64_t sub_209F11CD0()
{
  return 0x6D496D6574737973;
}

uint64_t sub_209F11CF0()
{
  return 0x6563696F6863;
}

unint64_t sub_209F11D04()
{
  return 0xD000000000000011;
}

uint64_t sub_209F11D20()
{
  return 0x6B6E694C706C6568;
}

uint64_t sub_209F11D38()
{
  return 0x6564616548627573;
}

unint64_t sub_209F11D54()
{
  return 0xD000000000000018;
}

void sub_209F11D74(char *a1)
{
  sub_209F12028(*a1);
}

void sub_209F11D80(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_209F11DC0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_209F11E34 + 4 * byte_209F78756[a2]))(0x656C746974);
}

uint64_t sub_209F11E34(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x656C746974 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = sub_209F679A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_209F11EEC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_209F11F2C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_209F11F88 + 4 * byte_209F7875E[a2]))(0x6C6C616D73);
}

uint64_t sub_209F11F88(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6C6C616D73 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = sub_209F679A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_209F12028(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_209F12060(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_209F1215C + 4 * byte_209F7876B[a2]))(0x697461676976616ELL);
}

uint64_t sub_209F1215C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x697461676976616ELL && v1 == 0xEF656C7469546E6FLL)
    v2 = 1;
  else
    v2 = sub_209F679A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_209F122BC()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_209F67B10();
  sub_209F12308((uint64_t)v3, v1);
  return sub_209F67B28();
}

void sub_209F12300(uint64_t a1)
{
  char *v1;

  sub_209F12308(a1, *v1);
}

void sub_209F12308(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_209F1233C()
{
  sub_209F6733C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_209F1242C()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_209F67B10();
  sub_209F12308((uint64_t)v3, v1);
  return sub_209F67B28();
}

uint64_t sub_209F1246C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_209F15A2C();
  *a1 = result;
  return result;
}

uint64_t sub_209F12498@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_209F11B6C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_209F124C0()
{
  unsigned __int8 *v0;

  return sub_209F11C70(*v0);
}

uint64_t sub_209F124C8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_209F15A2C();
  *a1 = result;
  return result;
}

void sub_209F124EC(_BYTE *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_209F124F8()
{
  sub_209F136E0();
  return sub_209F67B88();
}

uint64_t sub_209F12520()
{
  sub_209F136E0();
  return sub_209F67B94();
}

uint64_t sub_209F12548@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  double v18;
  int v19;
  _QWORD *v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  char v25;
  id v26;
  double v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  _OWORD *v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  char *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  _DWORD v53[2];
  uint64_t v54;
  int v55;
  double v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  char v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  char v105;
  _OWORD v106[7];
  char v107;
  _OWORD v108[10];
  char v109;

  v2 = v1;
  v68 = a1;
  v63 = sub_209F66DB4();
  MEMORY[0x24BDAC7A8](v63, v3);
  v67 = (char *)v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_209F674B0();
  v65 = *(_QWORD *)(v5 - 8);
  v66 = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v64 = (char *)v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBA70);
  MEMORY[0x24BDAC7A8](v62, v8);
  v10 = (char *)v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v1 + 32);
  v12 = *(_QWORD *)(v1 + 40);
  v61 = v11;
  v13 = *(_QWORD *)(v2 + 56);
  v59 = *(_QWORD *)(v2 + 48);
  v14 = *(_QWORD *)(v2 + 216);
  v53[1] = *(unsigned __int8 *)(v2 + 80);
  type metadata accessor for ImageElement();
  sub_209F0A54C(&qword_2545BBA60, 255, (uint64_t (*)(uint64_t))type metadata accessor for ImageElement, (uint64_t)&unk_209F7AB90);
  v60 = v12;
  swift_bridgeObjectRetain();
  v58 = v13;
  swift_bridgeObjectRetain();
  v57 = v14;
  swift_bridgeObjectRetain();
  v15 = (_QWORD *)sub_209F66D3C();
  v16 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v54 = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v15) + 0x70))();

  v17 = (_QWORD *)sub_209F66D3C();
  (*(void (**)(void))((*v16 & *v17) + 0xA0))();
  v56 = v18;
  v55 = v19;

  v20 = (_QWORD *)sub_209F66D3C();
  v21 = (*(uint64_t (**)(void))((*v16 & *v20) + 0xD0))();

  v22 = *(void **)(v2 + 88);
  sub_209F11B24(v2 + 96, (uint64_t)v106);
  if (*((_QWORD *)&v106[0] + 1))
  {
    v73 = v106[4];
    v74 = v106[5];
    v75 = v106[6];
    LOBYTE(v76) = v107;
    v69 = v106[0];
    v70 = v106[1];
    v71 = v106[2];
    v72 = v106[3];
    v23 = v22;
    v24 = RUIViewContent.anyView.getter();
    sub_209F08318((uint64_t)&v69);
    v25 = 0;
  }
  else
  {
    v26 = v22;
    v24 = 0;
    v25 = 2;
  }
  if ((v55 & 1) != 0)
    v27 = 60.0;
  else
    v27 = v56;
  v28 = sub_209EF8608();
  v30 = v29 & 1;
  v31 = sub_209EF860C();
  sub_209EF71CC(v61, v60, v59, v58, v57, v54, v21, (uint64_t)v22, (uint64_t)v108, v27, v24, v25, 0, 255, (__n128)(unint64_t)sub_209F12A08, v28, v30, v31, v32 & 1);
  v91 = v108[8];
  v92 = v108[9];
  v93 = v109;
  v87 = v108[4];
  v88 = v108[5];
  v89 = v108[6];
  v90 = v108[7];
  v83 = v108[0];
  v84 = v108[1];
  v85 = v108[2];
  v86 = v108[3];
  v33 = sub_209F66E14();
  v34 = sub_209F67048();
  v102 = v91;
  v103 = v92;
  LOBYTE(v104) = v93;
  v98 = v87;
  v99 = v88;
  v100 = v89;
  v101 = v90;
  v94 = v83;
  v95 = v84;
  v96 = v85;
  v97 = v86;
  *((_QWORD *)&v104 + 1) = v33;
  v105 = v34;
  sub_209F12D78(v2, (uint64_t)&v69);
  v35 = (_OWORD *)swift_allocObject();
  v36 = v80;
  v35[11] = v79;
  v35[12] = v36;
  v37 = v82;
  v35[13] = v81;
  v35[14] = v37;
  v38 = v76;
  v35[7] = v75;
  v35[8] = v38;
  v39 = v78;
  v35[9] = v77;
  v35[10] = v39;
  v40 = v72;
  v35[3] = v71;
  v35[4] = v40;
  v41 = v74;
  v35[5] = v73;
  v35[6] = v41;
  v42 = v70;
  v35[1] = v69;
  v35[2] = v42;
  v43 = v64;
  sub_209F67498();
  v45 = v66;
  v44 = v67;
  v46 = v65;
  (*(void (**)(char *, char *, uint64_t))(v65 + 16))(&v67[*(int *)(v63 + 20)], v43, v66);
  *v44 = &unk_2545BBA80;
  v44[1] = v35;
  sub_209F12E84((uint64_t)v44, (uint64_t)&v10[*(int *)(v62 + 36)]);
  v47 = v103;
  *((_OWORD *)v10 + 8) = v102;
  *((_OWORD *)v10 + 9) = v47;
  *((_OWORD *)v10 + 10) = v104;
  v10[176] = v105;
  v48 = v99;
  *((_OWORD *)v10 + 4) = v98;
  *((_OWORD *)v10 + 5) = v48;
  v49 = v101;
  *((_OWORD *)v10 + 6) = v100;
  *((_OWORD *)v10 + 7) = v49;
  v50 = v95;
  *(_OWORD *)v10 = v94;
  *((_OWORD *)v10 + 1) = v50;
  v51 = v97;
  *((_OWORD *)v10 + 2) = v96;
  *((_OWORD *)v10 + 3) = v51;
  sub_209EF82C4((uint64_t)&v94);
  sub_209F12EC8((uint64_t)v44);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v43, v45);
  sub_209F12F04((uint64_t)v108);
  return sub_209EF1E0C((uint64_t)v10, v68, &qword_2545BBA70);
}

id sub_209F12A08(uint64_t a1)
{
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  _BYTE v8[16];
  _QWORD v9[2];

  sub_209EF1E0C(a1 + 32, (uint64_t)v8, &qword_2545BC5C0);
  v2 = *(void **)(a1 + 56);
  swift_bridgeObjectRetain();
  sub_209F0A630((uint64_t)v8);
  v3 = v2;
  v4 = (void *)sub_209F672A0();
  swift_bridgeObjectRelease();
  sub_209EF1E0C((uint64_t)v8, (uint64_t)v9, &qword_2545BC5C0);
  if (v9[1])
  {
    v5 = (void *)sub_209F672A0();
    sub_209F0A658((uint64_t)v8);
  }
  else
  {
    v5 = 0;
  }
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE6E458]), sel_initWithTitle_detailText_icon_, v4, v5, v3);

  return v6;
}

uint64_t sub_209F12AF0(uint64_t a1)
{
  _QWORD *v1;

  v1[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
  v1[3] = swift_task_alloc();
  v1[4] = swift_task_alloc();
  sub_209F6748C();
  v1[5] = sub_209F67480();
  sub_209F67474();
  return swift_task_switch();
}

uint64_t sub_209F12B90()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  void *v3;
  char v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release();
  type metadata accessor for ImageElement();
  sub_209F0A54C(&qword_2545BBA60, 255, (uint64_t (*)(uint64_t))type metadata accessor for ImageElement, (uint64_t)&unk_209F7AB90);
  v2 = (_QWORD *)sub_209F66D3C();
  v3 = *(void **)(v1 + 16);
  v4 = *(_BYTE *)(v1 + 24);
  sub_209EEC018(v3, v4);
  v5 = (void *)sub_209F11978(v3, v4);
  sub_209EEC698(v3, v4);
  if (v5)
  {
    v6 = objc_msgSend(v5, sel_sourceURL);

    if (v6)
    {
      sub_209F66A60();

      v7 = 0;
    }
    else
    {
      v7 = 1;
    }
    v11 = *(_QWORD *)(v0 + 24);
    v10 = *(_QWORD *)(v0 + 32);
    v12 = sub_209F66A90();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, v7, 1, v12);
    sub_209EF1E0C(v11, v10, &qword_2545BB600);
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 32);
    v9 = sub_209F66A90();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  }
  (*(void (**)(_QWORD))((*MEMORY[0x24BEE4EA0] & *v2) + 0x108))(*(_QWORD *)(v0 + 32));

  v13 = (void *)sub_209F66D3C();
  objc_msgSend(v13, sel_loadImage);

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_209F12D78(uint64_t a1, uint64_t a2)
{
  return initializeWithCopy for ChoiceView(a2, a1);
}

uint64_t sub_209F12D88()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_209EEC698(*(id *)(v0 + 32), *(_BYTE *)(v0 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_209F12E28(*(_QWORD *)(v0 + 80), *(void **)(v0 + 88), *(_BYTE *)(v0 + 96));

  if (*(_QWORD *)(v0 + 120))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v0 + 168))
      __swift_destroy_boxed_opaque_existential_1(v0 + 144);
    if (*(_QWORD *)(v0 + 200))
    {
      swift_bridgeObjectRelease();

      sub_209EEC698(*(id *)(v0 + 216), *(_BYTE *)(v0 + 224));
    }
  }
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_209F12E28(uint64_t a1, void *a2, char a3)
{
  if ((a3 & 1) != 0)

  else
    swift_release();
}

uint64_t sub_209F12E38()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_209EE061C;
  return sub_209F12AF0(v0 + 16);
}

uint64_t sub_209F12E84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_209F66DB4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_209F12EC8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_209F66DB4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_209F12F04(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  char v5;
  unsigned __int8 v6;
  uint64_t v8;
  void *v9;
  char v10;
  void *v11;
  char v12;
  void *v13;

  v2 = *(void **)(a1 + 56);
  v4 = *(void **)(a1 + 72);
  v3 = *(void **)(a1 + 80);
  v8 = *(_QWORD *)(a1 + 88);
  v9 = *(void **)(a1 + 104);
  v11 = *(void **)(a1 + 136);
  v10 = *(_BYTE *)(a1 + 144);
  v13 = *(void **)(a1 + 152);
  v12 = *(_BYTE *)(a1 + 160);
  v5 = *(_BYTE *)(a1 + 96);
  v6 = *(_BYTE *)(a1 + 112);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  sub_209EF76E8(v8, v5);
  sub_209EF6F08(v9, v6);
  swift_release();
  sub_209EEC698(v11, v10);
  sub_209EEC698(v13, v12);
  return a1;
}

void sub_209F13004(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *KeyPath;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  Swift::String v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  id object;
  uint64_t v44;
  char v45;
  char v46[8];
  uint64_t v47;
  unint64_t v48[14];
  char v49;
  Swift::String v50;
  void *v51;
  char v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  id (*v57)();
  uint64_t v58;
  char v59;
  unint64_t v60;
  _QWORD v61[18];
  uint64_t v62;

  v44 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBA88);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = (void *)swift_getKeyPath();
  v51 = KeyPath;
  v52 = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_209F136E0();
  v9 = v62;
  sub_209F67B58();
  if (v9)
    goto LABEL_4;
  v62 = v4;
  v10 = v7;
  v11 = v44;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v12 = Decoder.decodeRUIID()();
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v62 + 8))(v10, v3);
LABEL_4:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_209EEC698(KeyPath, 0);
    return;
  }
  v50 = v12;
  object = v12._object;
  LOBYTE(v48[0]) = 8;
  if ((sub_209F67888() & 1) != 0)
  {
    LOBYTE(v48[0]) = 1;
    v20 = sub_209F6787C();
    if (v21)
      v22 = v20;
    else
      v22 = 0;
    v23 = 0xE000000000000000;
    if (v21)
      v23 = v21;
    v53 = v22;
    v54 = v23;
    LOBYTE(v48[0]) = 2;
    v24 = sub_209F6787C();
    v28 = v27;
    v42 = (_QWORD *)v24;
    LOBYTE(v48[0]) = 7;
    v29 = sub_209F6787C();
    if (v28)
    {
      v40 = v29;
      v34 = (uint64_t)v42;
      v42 = (_QWORD *)v30;
      v41 = sub_209F41480(v34, v28);
      v26 = v35;
      swift_bridgeObjectRelease();
      v29 = v40;
      v30 = (uint64_t)v42;
      if (v26)
        goto LABEL_31;
    }
    if (v30 && (v41 = sub_209F41480(v29, v30), v26 = v36, swift_bridgeObjectRelease(), v26))
    {
LABEL_31:
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      v41 = 0;
      v26 = 0xE000000000000000;
    }
  }
  else
  {
    LOBYTE(v48[0]) = 2;
    v14 = sub_209F6787C();
    v42 = a1;
    if (v15)
      v16 = v14;
    else
      v16 = 0;
    if (v15)
      v17 = v15;
    else
      v17 = 0xE000000000000000;
    v53 = v16;
    v54 = v17;
    LOBYTE(v48[0]) = 7;
    v18 = sub_209F6787C();
    if (v19)
      v25 = v18;
    else
      v25 = 0;
    v41 = v25;
    if (v19)
      v26 = v19;
    else
      v26 = 0xE000000000000000;
    a1 = v42;
  }
  v55 = v41;
  v56 = v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB5C0);
  v46[0] = 4;
  sub_209F07E38();
  sub_209F678AC();
  v31 = sub_209F13744(v48[0]);
  swift_bridgeObjectRelease();
  v61[15] = v31;
  v32 = a1[3];
  v33 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v32);
  v37 = sub_209F433F0(v32, v33);
  v38 = swift_allocObject();
  *(_QWORD *)(v38 + 16) = v37;
  v57 = sub_209F138C8;
  v58 = v38;
  v59 = 0;
  type metadata accessor for HelpLink();
  v46[0] = 6;
  sub_209F0A54C(&qword_2545BBA90, 255, (uint64_t (*)(uint64_t))type metadata accessor for HelpLink, (uint64_t)&unk_209F7A288);
  object = v37;
  sub_209F67894();
  v60 = v48[0];
  v45 = 5;
  sub_209F138D0();
  sub_209F67894();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v10, v3);

  if (v47 == 1)
  {
    sub_209EE017C((uint64_t)v46, &qword_2545BBAA0);
    memset(v48, 0, sizeof(v48));
    v49 = 0;
  }
  else
  {
    sub_209F11B24((uint64_t)v46, (uint64_t)v48);
    sub_209F13938((uint64_t)v46);
  }
  sub_209EF1E0C((uint64_t)v48, (uint64_t)v61, &qword_2545BBA68);
  sub_209F12D78((uint64_t)&v50, v11);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  sub_209F13914((uint64_t)&v50);
}

unint64_t sub_209F136E0()
{
  unint64_t result;

  result = qword_2545C0928[0];
  if (!qword_2545C0928[0])
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F78C8C, &type metadata for ChoiceView.CodingKeys);
    atomic_store(result, qword_2545C0928);
  }
  return result;
}

uint64_t type metadata accessor for Choice()
{
  return objc_opt_self();
}

uint64_t sub_209F13744(unint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD *v4;
  unint64_t v5;
  uint64_t v7;

  v7 = MEMORY[0x24BEE4AF8];
  sub_209F67750();
  if (a1 >> 62)
    goto LABEL_13;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v2)
  {
    while (1)
    {
      v3 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v4 = (_QWORD *)MEMORY[0x20BD1CAB4](v3, a1);
LABEL_7:
        v5 = v3 + 1;
        if (__OFADD__(v3, 1))
          goto LABEL_12;
        (*(void (**)(BOOL))((*MEMORY[0x24BEE4EA0] & *v4) + 0x138))(v3 != 0);
        sub_209F67738();
        sub_209F6775C();
        sub_209F67768();
        sub_209F67744();
        ++v3;
        if (v5 == v2)
          goto LABEL_14;
      }
      if (v3 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_12:
      __break(1u);
LABEL_13:
      swift_bridgeObjectRetain();
      v2 = sub_209F677EC();
      if (!v2)
        goto LABEL_14;
    }
    v4 = *(id *)(a1 + 8 * v3 + 32);
    goto LABEL_7;
  }
LABEL_14:
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_209F138A4()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_209F138C8()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

unint64_t sub_209F138D0()
{
  unint64_t result;

  result = qword_2545BBA98;
  if (!qword_2545BBA98)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F788BC, &type metadata for ChoiceView.ContentView);
    atomic_store(result, (unint64_t *)&qword_2545BBA98);
  }
  return result;
}

uint64_t sub_209F13914(uint64_t a1)
{
  destroy for ChoiceView(a1);
  return a1;
}

uint64_t sub_209F13938(uint64_t a1)
{
  destroy for ChoiceView.ContentView(a1);
  return a1;
}

void sub_209F13960(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_209F13004(a1, a2);
}

uint64_t sub_209F13974@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _OWORD v9[7];
  char v10;
  uint64_t v11;
  _QWORD v12[4];
  _OWORD v13[7];
  char v14;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_209F67B40();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v12, v12[3]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBAA8);
    sub_209F13AD0();
    sub_209F679CC();
    if (*(_QWORD *)(v11 + 16))
    {
      sub_209F0B104(v11 + 32, (uint64_t)v9);
    }
    else
    {
      v10 = 0;
      memset(v9, 0, sizeof(v9));
    }
    swift_bridgeObjectRelease();
    sub_209EF1E0C((uint64_t)v9, (uint64_t)v13, &qword_2545BBA68);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    v5 = v13[5];
    *(_OWORD *)(a2 + 64) = v13[4];
    *(_OWORD *)(a2 + 80) = v5;
    *(_OWORD *)(a2 + 96) = v13[6];
    *(_BYTE *)(a2 + 112) = v14;
    v6 = v13[1];
    *(_OWORD *)a2 = v13[0];
    *(_OWORD *)(a2 + 16) = v6;
    v7 = v13[3];
    *(_OWORD *)(a2 + 32) = v13[2];
    *(_OWORD *)(a2 + 48) = v7;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_209F13AD0()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_2545BBAB0;
  if (!qword_2545BBAB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BBAA8);
    v2 = sub_209F082D4();
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2545BBAB0);
  }
  return result;
}

uint64_t sub_209F13B34@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_209F13974(a1, a2);
}

void sub_209F13B48(char *a1)
{
  sub_209F11EEC(*a1);
}

void sub_209F13B54()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_209F67B10();
  __asm { BR              X9 }
}

uint64_t sub_209F13B98()
{
  sub_209F6733C();
  swift_bridgeObjectRelease();
  return sub_209F67B28();
}

void sub_209F13C00()
{
  __asm { BR              X10 }
}

uint64_t sub_209F13C34()
{
  sub_209F6733C();
  return swift_bridgeObjectRelease();
}

void sub_209F13C88()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_209F67B10();
  __asm { BR              X9 }
}

uint64_t sub_209F13CC8()
{
  sub_209F6733C();
  swift_bridgeObjectRelease();
  return sub_209F67B28();
}

uint64_t sub_209F13D30@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_209F15A74();
  *a1 = result;
  return result;
}

uint64_t sub_209F13D64()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_209F13D8C + 4 * byte_209F7878D[*v0]))();
}

void sub_209F13D8C(_QWORD *a1@<X8>)
{
  *a1 = 0x6C6C616D73;
  a1[1] = 0xE500000000000000;
}

void sub_209F13DA4(_QWORD *a1@<X8>)
{
  *a1 = 0x776F7272616ELL;
  a1[1] = 0xE600000000000000;
}

void sub_209F13DBC(_QWORD *a1@<X8>)
{
  *a1 = 0x6E776F6E6B6E75;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_209F13DD8()
{
  sub_209F1725C();
  return sub_209F673D8();
}

uint64_t sub_209F13E34()
{
  return sub_209F14364(&OBJC_IVAR____TtC8RemoteUI6Choice_title);
}

uint64_t sub_209F13E40(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t *v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;

  v5 = (_QWORD *)((char *)v2 + OBJC_IVAR____TtC8RemoteUI6Choice_title);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  v6 = swift_bridgeObjectRelease();
  v7 = (void (*)(uint64_t, uint64_t))(*(uint64_t (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *v2) + 0x1B8))(v6);
  v8 = *v5;
  v9 = v5[1];
  swift_bridgeObjectRetain();
  v7(v8, v9);
  swift_release();
  return swift_bridgeObjectRelease();
}

void (*sub_209F13EE8(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC8RemoteUI6Choice_title;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_209F13F40;
}

void sub_209F13F40(_QWORD **a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t *v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;

  v3 = *a1;
  v4 = swift_endAccess();
  if ((a2 & 1) == 0)
  {
    v5 = (_QWORD *)v3[3];
    v6 = (_QWORD *)((char *)v5 + v3[4]);
    v7 = (void (*)(uint64_t, uint64_t))(*(uint64_t (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *v5)
                                                                                   + 0x1B8))(v4);
    v8 = *v6;
    v9 = v6[1];
    swift_bridgeObjectRetain();
    v7(v8, v9);
    swift_bridgeObjectRelease();
    swift_release();
  }
  free(v3);
}

uint64_t sub_209F13FD4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8RemoteUI6Choice_action);
  swift_beginAccess();
  v2 = *v1;
  sub_209F0F444(*v1);
  return v2;
}

uint64_t sub_209F1402C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC8RemoteUI6Choice_action);
  swift_beginAccess();
  v6 = *v5;
  *v5 = a1;
  v5[1] = a2;
  return sub_209F0F414(v6);
}

uint64_t (*sub_209F14088())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_209F140CC()
{
  return sub_209F145D0(&OBJC_IVAR____TtC8RemoteUI6Choice_startActivityBlock);
}

uint64_t sub_209F140D8(uint64_t a1, uint64_t a2)
{
  return sub_209F14634(a1, a2, &OBJC_IVAR____TtC8RemoteUI6Choice_startActivityBlock, (uint64_t (*)(uint64_t))MEMORY[0x24BEE4EF8]);
}

uint64_t (*sub_209F140EC())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_209F14130()
{
  return sub_209F145D0(&OBJC_IVAR____TtC8RemoteUI6Choice_stopActivityBlock);
}

uint64_t sub_209F1413C(uint64_t a1, uint64_t a2)
{
  return sub_209F14634(a1, a2, &OBJC_IVAR____TtC8RemoteUI6Choice_stopActivityBlock, (uint64_t (*)(uint64_t))MEMORY[0x24BEE4EF8]);
}

uint64_t (*sub_209F14150())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_209F14194()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC8RemoteUI6Choice_buttonType);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_209F141D8(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC8RemoteUI6Choice_buttonType);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_209F14220())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_209F14264()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8RemoteUI6Choice_enabledFunctionName);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_209F142B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC8RemoteUI6Choice_enabledFunctionName);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_209F14314())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_209F14358()
{
  return sub_209F14364(&OBJC_IVAR____TtC8RemoteUI6Choice_accessibilityInfo);
}

uint64_t sub_209F14364(_QWORD *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v2 = (uint64_t *)(v1 + *a1);
  swift_beginAccess();
  v3 = *v2;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_209F143B4(uint64_t a1, uint64_t a2)
{
  return sub_209F14634(a1, a2, &OBJC_IVAR____TtC8RemoteUI6Choice_accessibilityInfo, (uint64_t (*)(uint64_t))MEMORY[0x24BEE4BC0]);
}

uint64_t (*sub_209F143C8())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_209F1440C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC8RemoteUI6Choice_parentElement;
  swift_beginAccess();
  return MEMORY[0x20BD1DC9C](v1);
}

void sub_209F14454(void *a1)
{
  swift_beginAccess();
  swift_unknownObjectWeakAssign();

}

void (*sub_209F144A8(_QWORD *a1))(id **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC8RemoteUI6Choice_parentElement;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v3[3] = MEMORY[0x20BD1DC9C](v5);
  return sub_209F05410;
}

id sub_209F14518()
{
  id result;

  result = sub_209F1471C(CFSTR("tintColor"));
  if (!result)
    return sub_209F1471C(CFSTR("color"));
  return result;
}

id sub_209F14550()
{
  return sub_209F1471C(CFSTR("titleColor"));
}

uint64_t sub_209F14560()
{
  return sub_209F145D0(&OBJC_IVAR____TtC8RemoteUI6Choice_setEnabled);
}

uint64_t sub_209F1456C(uint64_t a1, uint64_t a2)
{
  return sub_209F14634(a1, a2, &OBJC_IVAR____TtC8RemoteUI6Choice_setEnabled, (uint64_t (*)(uint64_t))MEMORY[0x24BEE4EF8]);
}

uint64_t (*sub_209F14580())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_209F145C4()
{
  return sub_209F145D0(&OBJC_IVAR____TtC8RemoteUI6Choice_setTitle);
}

uint64_t sub_209F145D0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v2 = (uint64_t *)(v1 + *a1);
  swift_beginAccess();
  v3 = *v2;
  swift_retain();
  return v3;
}

uint64_t sub_209F14620(uint64_t a1, uint64_t a2)
{
  return sub_209F14634(a1, a2, &OBJC_IVAR____TtC8RemoteUI6Choice_setTitle, (uint64_t (*)(uint64_t))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_209F14634(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v4;
  _QWORD *v8;
  uint64_t v9;

  v8 = (_QWORD *)(v4 + *a3);
  swift_beginAccess();
  v9 = v8[1];
  *v8 = a1;
  v8[1] = a2;
  return a4(v9);
}

uint64_t (*sub_209F14690())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id sub_209F1471C(void *a1)
{
  void *v1;
  id v3;
  id result;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  void *v9;
  id v10;
  _BYTE v11[40];
  __int128 v12;
  __int128 v13;

  type metadata accessor for RUIAttribute();
  sub_209F0A54C(&qword_2545BBBA0, 255, (uint64_t (*)(uint64_t))type metadata accessor for RUIAttribute, (uint64_t)&unk_209F78E08);
  v3 = a1;
  sub_209F6769C();
  result = objc_msgSend(v1, sel_attributes);
  if (result)
  {
    v5 = result;
    v6 = sub_209F67258();

    if (*(_QWORD *)(v6 + 16) && (v7 = sub_209EE3224((uint64_t)v11), (v8 & 1) != 0))
    {
      sub_209EE3288(*(_QWORD *)(v6 + 56) + 32 * v7, (uint64_t)&v12);
    }
    else
    {
      v12 = 0u;
      v13 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_209EE3254((uint64_t)v11);
    if (*((_QWORD *)&v13 + 1))
    {
      if ((swift_dynamicCast() & 1) != 0)
      {
        v9 = (void *)sub_209F672A0();
        swift_bridgeObjectRelease();
        v10 = objc_msgSend((id)objc_opt_self(), sel__remoteUI_colorWithString_, v9);

        return v10;
      }
    }
    else
    {
      sub_209EE017C((uint64_t)&v12, &qword_2545BAF78);
    }
    return 0;
  }
  __break(1u);
  return result;
}

void sub_209F148B4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  void (*v5)(void);
  uint64_t v6;

  v1 = OBJC_IVAR____TtC8RemoteUI6Choice_activityIndicatorCount;
  v2 = *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC8RemoteUI6Choice_activityIndicatorCount);
  if (v2)
  {
    v3 = __OFADD__(v2, 1);
    v4 = v2 + 1;
    if (!v3)
      goto LABEL_6;
    __break(1u);
  }
  v5 = (void (*)(void))(*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x100))();
  v5();
  swift_release();
  v6 = *(_QWORD *)((char *)v0 + v1);
  v3 = __OFADD__(v6, 1);
  v4 = v6 + 1;
  if (!v3)
  {
LABEL_6:
    *(_QWORD *)((char *)v0 + v1) = v4;
    return;
  }
  __break(1u);
}

void sub_209F149FC()
{
  _QWORD *v0;
  id v1;
  void *v2;
  id v3;
  _QWORD *v4;
  uint64_t v5;
  void (*v6)(id);
  void *v7;
  id v8;
  id v9;

  v1 = objc_msgSend(v0, sel_pageElement);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, sel_page);

    if (v3)
    {
      v9 = objc_msgSend(v3, sel_objectModel);

      if (v9)
      {
        v4 = (_QWORD *)MEMORY[0x24BEE4EA0];
        (*(void (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x148))();
        if (v5)
        {
          v6 = (void (*)(id))(*(uint64_t (**)(void))((*v4 & *v0) + 0x1A0))();
          v7 = (void *)sub_209F672A0();
          swift_bridgeObjectRelease();
          v8 = objc_msgSend(v9, sel_validateWithFunction_, v7);

          v6(v8);
          swift_release();
        }
        else
        {

        }
      }
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_209F14B7C(char *a1)
{
  sub_209F11D80(*a1);
}

void sub_209F14B88()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_209F67B10();
  __asm { BR              X9 }
}

uint64_t sub_209F14BCC()
{
  sub_209F6733C();
  swift_bridgeObjectRelease();
  return sub_209F67B28();
}

void sub_209F14C4C()
{
  __asm { BR              X10 }
}

uint64_t sub_209F14C80()
{
  sub_209F6733C();
  return swift_bridgeObjectRelease();
}

void sub_209F14CEC()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_209F67B10();
  __asm { BR              X9 }
}

uint64_t sub_209F14D2C()
{
  sub_209F6733C();
  swift_bridgeObjectRelease();
  return sub_209F67B28();
}

uint64_t sub_209F14DAC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_209F15A74();
  *a1 = result;
  return result;
}

uint64_t sub_209F14DE0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_209F14E08 + 4 * byte_209F787A5[*v0]))();
}

void sub_209F14E08(_QWORD *a1@<X8>)
{
  *a1 = 0x656C746974;
  a1[1] = 0xE500000000000000;
}

void sub_209F14E20(_QWORD *a1@<X8>)
{
  *a1 = 0x7463757274736564;
  a1[1] = 0xEB00000000657669;
}

void sub_209F14E44(_QWORD *a1@<X8>)
{
  *a1 = 0x4664656C62616E65;
  a1[1] = 0xEF6E6F6974636E75;
}

uint64_t sub_209F14E6C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_209F14E94 + 4 * byte_209F787A9[*v0]))(1701869940, 0xE400000000000000);
}

uint64_t sub_209F14E94()
{
  return 0x656C746974;
}

uint64_t sub_209F14EA8()
{
  return 0x7463757274736564;
}

uint64_t sub_209F14EC8()
{
  return 0x4664656C62616E65;
}

uint64_t sub_209F14EEC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_209F15A74();
  *a1 = result;
  return result;
}

void sub_209F14F18(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_209F14F24()
{
  sub_209F15AB8();
  return sub_209F67B88();
}

uint64_t sub_209F14F4C()
{
  sub_209F15AB8();
  return sub_209F67B94();
}

char *sub_209F14F74(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return sub_209F14FB4(a1);
}

char *sub_209F14FB4(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  objc_class *v45;
  id v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  objc_super v51;
  char v52;
  _QWORD v53[4];
  uint64_t *v54;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBB20);
  v4 = *(_QWORD *)(v3 - 8);
  v49 = v3;
  v50 = v4;
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_209F66AE4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC8RemoteUI6Choice_activityIndicatorCount] = 0;
  v13 = &v1[OBJC_IVAR____TtC8RemoteUI6Choice_action];
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;
  v14 = &v1[OBJC_IVAR____TtC8RemoteUI6Choice_startActivityBlock];
  *(_QWORD *)v14 = nullsub_1;
  *((_QWORD *)v14 + 1) = 0;
  v15 = &v1[OBJC_IVAR____TtC8RemoteUI6Choice_stopActivityBlock];
  *(_QWORD *)v15 = nullsub_1;
  *((_QWORD *)v15 + 1) = 0;
  v16 = &v1[OBJC_IVAR____TtC8RemoteUI6Choice_enabledFunctionName];
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  swift_unknownObjectWeakInit();
  v17 = &v1[OBJC_IVAR____TtC8RemoteUI6Choice_setEnabled];
  *(_QWORD *)v17 = nullsub_1;
  *((_QWORD *)v17 + 1) = 0;
  v18 = &v1[OBJC_IVAR____TtC8RemoteUI6Choice_setTitle];
  *(_QWORD *)v18 = nullsub_1;
  *((_QWORD *)v18 + 1) = 0;
  v19 = v1;
  sub_209F66AD8();
  v20 = sub_209F66ACC();
  v22 = v21;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  v23 = (uint64_t *)&v19[OBJC_IVAR____TtC8RemoteUI6Choice_id];
  *v23 = v20;
  v23[1] = v22;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_209F15AB8();
  v24 = v54;
  sub_209F67B58();
  if (v24)
  {

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    sub_209F0F414(*(_QWORD *)&v19[OBJC_IVAR____TtC8RemoteUI6Choice_action]);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_unknownObjectWeakDestroy();
    swift_release();
    swift_release();
    type metadata accessor for Choice();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v54 = (uint64_t *)v16;
    LOBYTE(v53[0]) = 1;
    v26 = v49;
    v27 = v7;
    if ((sub_209F678C4() & 1) != 0)
    {
      LOBYTE(v53[0]) = 1;
      v28 = sub_209F678A0();
      v29 = a1;
      v30 = (uint64_t *)&v19[OBJC_IVAR____TtC8RemoteUI6Choice_title];
      *v30 = v28;
      v30[1] = v31;
    }
    else
    {
      v29 = a1;
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      sub_209F67B40();
      __swift_project_boxed_opaque_existential_1(v53, v53[3]);
      v32 = sub_209F679C0();
      v27 = v7;
      v33 = (uint64_t *)&v19[OBJC_IVAR____TtC8RemoteUI6Choice_title];
      *v33 = v32;
      v33[1] = v34;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
    }
    v52 = 0;
    sub_209F15AFC();
    sub_209F678AC();
    v19[OBJC_IVAR____TtC8RemoteUI6Choice_buttonType] = v53[0];
    LOBYTE(v53[0]) = 2;
    v19[OBJC_IVAR____TtC8RemoteUI6Choice_destructive] = sub_209F67888() & 1;
    LOBYTE(v53[0]) = 3;
    v35 = sub_209F6787C();
    v37 = v35;
    v38 = v26;
    v49 = (uint64_t)v27;
    if (v36)
    {
      v37 = sub_209F41480(v35, v36);
      v40 = v39;
      swift_bridgeObjectRelease();
    }
    else
    {
      v40 = 0;
    }
    v41 = v54;
    swift_beginAccess();
    *v41 = v37;
    v41[1] = v40;
    swift_bridgeObjectRelease();
    sub_209EE0E3C((uint64_t)v29, (uint64_t)v53);
    v42 = sub_209EE08CC(v53);
    v43 = (uint64_t *)&v19[OBJC_IVAR____TtC8RemoteUI6Choice_accessibilityInfo];
    *v43 = v42;
    v43[1] = v44;

    v45 = (objc_class *)type metadata accessor for Choice();
    v51.receiver = v19;
    v51.super_class = v45;
    v46 = objc_msgSendSuper2(&v51, sel_init);
    __swift_project_boxed_opaque_existential_1(v29, v29[3]);
    v19 = (char *)v46;
    v47 = Decoder.decodeRUIAttributeDictionary()();
    sub_209F04D90(v47);
    swift_bridgeObjectRelease();
    v48 = (void *)sub_209F6724C();
    swift_bridgeObjectRelease();
    objc_msgSend(v19, sel_setAttributes_, v48);

    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v49, v38);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);

  }
  return v19;
}

void (*sub_209F15628())(_QWORD *)
{
  _QWORD *v0;
  void (*result)(_QWORD *);
  uint64_t v2;

  result = (void (*)(_QWORD *))(*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xE8))();
  if (result)
  {
    v2 = (uint64_t)result;
    result(v0);
    return (void (*)(_QWORD *))sub_209F0F414(v2);
  }
  return result;
}

uint64_t sub_209F1574C(const OpaqueJSContext *a1, OpaqueJSValue *a2, uint64_t a3, uint64_t a4)
{
  return sub_209F173C0(a1, a2, a4) & 1;
}

id sub_209F15814()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Choice();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_209F15920@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = (_QWORD *)(*v1 + OBJC_IVAR____TtC8RemoteUI6Choice_id);
  v3 = v2[1];
  *a1 = *v2;
  a1[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_209F1593C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 472))();
  if (!v2)
    *a1 = result;
  return result;
}

uint64_t sub_209F15968()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **v0) + 0x160))();
}

uint64_t sub_209F159A0()
{
  sub_209F0A54C(&qword_2545BBBA0, 255, (uint64_t (*)(uint64_t))type metadata accessor for RUIAttribute, (uint64_t)&unk_209F78E08);
  sub_209F0A54C(&qword_2545BBBC8, 255, (uint64_t (*)(uint64_t))type metadata accessor for RUIAttribute, (uint64_t)&unk_209F78D5C);
  return sub_209F67834();
}

uint64_t sub_209F15A2C()
{
  unint64_t v0;

  v0 = sub_209F67840();
  swift_bridgeObjectRelease();
  if (v0 >= 9)
    return 9;
  else
    return v0;
}

uint64_t sub_209F15A74()
{
  unint64_t v0;

  v0 = sub_209F67840();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

unint64_t sub_209F15AB8()
{
  unint64_t result;

  result = qword_2545BBB28;
  if (!qword_2545BBB28)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F78A4C, &type metadata for Choice.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BBB28);
  }
  return result;
}

unint64_t sub_209F15AFC()
{
  unint64_t result;

  result = qword_2545BBB30;
  if (!qword_2545BBB30)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F78984, &type metadata for Choice.ButtonType);
    atomic_store(result, (unint64_t *)&qword_2545BBB30);
  }
  return result;
}

char *sub_209F15B40()
{
  id v0;
  char *result;
  uint64_t v2;
  uint64_t v3;

  v0 = objc_msgSend(objc_allocWithZone((Class)RUIScriptingStaticValue), sel_init);
  result = strdup("title");
  if (result)
  {
    objc_msgSend(v0, sel_setIdentifier_, result);
    objc_msgSend(v0, sel_setJSPropertyAttributes_, 8);
    objc_msgSend(v0, sel_setGetter_, sub_209F15748);
    objc_msgSend(v0, sel_setSetter_, sub_209F1574C);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545BB750);
    v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_209F78310;
    *(_QWORD *)(v2 + 32) = v0;
    v3 = v2;
    sub_209F67414();
    return (char *)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_209F15C20(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_209F15C54();
  a1[2] = sub_209F15C98();
  result = sub_209F15CDC();
  a1[3] = result;
  return result;
}

unint64_t sub_209F15C54()
{
  unint64_t result;

  result = qword_2545BBB38;
  if (!qword_2545BBB38)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7885C, &type metadata for ChoiceView);
    atomic_store(result, (unint64_t *)&qword_2545BBB38);
  }
  return result;
}

unint64_t sub_209F15C98()
{
  unint64_t result;

  result = qword_2545BBB40;
  if (!qword_2545BBB40)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F78884, &type metadata for ChoiceView);
    atomic_store(result, (unint64_t *)&qword_2545BBB40);
  }
  return result;
}

unint64_t sub_209F15CDC()
{
  unint64_t result;

  result = qword_2545BBB48;
  if (!qword_2545BBB48)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7880C, &type metadata for ChoiceView);
    atomic_store(result, (unint64_t *)&qword_2545BBB48);
  }
  return result;
}

uint64_t sub_209F15D20()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_209F15D34()
{
  unint64_t result;

  result = qword_2545BBB50;
  if (!qword_2545BBB50)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F788E4, &type metadata for Choice.ButtonType);
    atomic_store(result, (unint64_t *)&qword_2545BBB50);
  }
  return result;
}

unint64_t sub_209F15D7C()
{
  unint64_t result;

  result = qword_2545BBB58;
  if (!qword_2545BBB58)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F789AC, &type metadata for Choice.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BBB58);
  }
  return result;
}

unint64_t sub_209F15DC4()
{
  unint64_t result;

  result = qword_2545BBB60;
  if (!qword_2545BBB60)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F78AC4, &type metadata for Choice.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BBB60);
  }
  return result;
}

unint64_t sub_209F15E0C()
{
  unint64_t result;

  result = qword_2545BBB68;
  if (!qword_2545BBB68)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F78A9C, &type metadata for Choice.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BBB68);
  }
  return result;
}

id sub_209F15E50(uint64_t a1, void *a2, char a3)
{
  if ((a3 & 1) != 0)
    return a2;
  else
    return (id)swift_retain();
}

uint64_t destroy for ChoiceView(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_209EEC698(*(id *)(a1 + 16), *(_BYTE *)(a1 + 24));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_209F12E28(*(_QWORD *)(a1 + 64), *(void **)(a1 + 72), *(_BYTE *)(a1 + 80));

  if (*(_QWORD *)(a1 + 104))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 152))
      __swift_destroy_boxed_opaque_existential_1(a1 + 128);
    if (*(_QWORD *)(a1 + 184))
    {
      swift_bridgeObjectRelease();

      sub_209EEC698(*(id *)(a1 + 200), *(_BYTE *)(a1 + 208));
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ChoiceView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  char v20;
  id v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(void **)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  swift_bridgeObjectRetain();
  sub_209EEC018(v5, v6);
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  v8 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v8;
  v9 = *(_QWORD *)(a2 + 64);
  v10 = *(void **)(a2 + 72);
  v11 = *(_BYTE *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_209F15E50(v9, v10, v11);
  *(_QWORD *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 72) = v10;
  *(_BYTE *)(a1 + 80) = v11;
  v12 = *(void **)(a2 + 88);
  *(_QWORD *)(a1 + 88) = v12;
  v13 = *(_QWORD *)(a2 + 104);
  v14 = v12;
  if (!v13)
  {
    v22 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v22;
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
    v23 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v23;
    v24 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v24;
    goto LABEL_8;
  }
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v13;
  v15 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v15;
  v16 = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v16)
  {
    v25 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v25;
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    v17 = *(_QWORD *)(a2 + 184);
    if (v17)
      goto LABEL_4;
LABEL_7:
    v26 = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = v26;
    *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
    goto LABEL_8;
  }
  *(_QWORD *)(a1 + 152) = v16;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  (**(void (***)(uint64_t, uint64_t, uint64_t))(v16 - 8))(a1 + 128, a2 + 128, v16);
  v17 = *(_QWORD *)(a2 + 184);
  if (!v17)
    goto LABEL_7;
LABEL_4:
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v17;
  v19 = *(void **)(a2 + 192);
  v18 = *(void **)(a2 + 200);
  *(_QWORD *)(a1 + 192) = v19;
  v20 = *(_BYTE *)(a2 + 208);
  swift_bridgeObjectRetain();
  v21 = v19;
  sub_209EEC018(v18, v20);
  *(_QWORD *)(a1 + 200) = v18;
  *(_BYTE *)(a1 + 208) = v20;
LABEL_8:
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ChoiceView(uint64_t a1, uint64_t a2)
{
  void *v4;
  char v5;
  void *v6;
  char v7;
  uint64_t v8;
  void *v9;
  char v10;
  uint64_t v11;
  void *v12;
  char v13;
  void *v14;
  void *v15;
  id v16;
  _OWORD *v17;
  __int128 *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 *v36;
  __int128 *v37;
  uint64_t v38;
  void *v39;
  void *v40;
  id v41;
  void *v42;
  char v43;
  void *v44;
  char v45;
  __int128 v46;
  __int128 v47;
  char v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  void *v52;
  void *v53;
  char v54;
  id v55;
  __int128 v56;
  __int128 v57;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(void **)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  sub_209EEC018(v4, v5);
  v6 = *(void **)(a1 + 16);
  v7 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  sub_209EEC698(v6, v7);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 64);
  v9 = *(void **)(a2 + 72);
  v10 = *(_BYTE *)(a2 + 80);
  sub_209F15E50(v8, v9, v10);
  v11 = *(_QWORD *)(a1 + 64);
  v12 = *(void **)(a1 + 72);
  v13 = *(_BYTE *)(a1 + 80);
  *(_QWORD *)(a1 + 64) = v8;
  *(_QWORD *)(a1 + 72) = v9;
  *(_BYTE *)(a1 + 80) = v10;
  sub_209F12E28(v11, v12, v13);
  v14 = *(void **)(a1 + 88);
  v15 = *(void **)(a2 + 88);
  *(_QWORD *)(a1 + 88) = v15;
  v16 = v15;

  v17 = (_OWORD *)(a1 + 96);
  v18 = (__int128 *)(a2 + 96);
  v19 = *(_QWORD *)(a2 + 104);
  if (!*(_QWORD *)(a1 + 104))
  {
    if (!v19)
    {
      v28 = *v18;
      v29 = *(_OWORD *)(a2 + 112);
      v30 = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 144) = v30;
      *v17 = v28;
      *(_OWORD *)(a1 + 112) = v29;
      v31 = *(_OWORD *)(a2 + 160);
      v32 = *(_OWORD *)(a2 + 176);
      v33 = *(_OWORD *)(a2 + 192);
      *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
      *(_OWORD *)(a1 + 176) = v32;
      *(_OWORD *)(a1 + 192) = v33;
      *(_OWORD *)(a1 + 160) = v31;
      goto LABEL_25;
    }
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    v21 = *(_QWORD *)(a2 + 152);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v21)
    {
      *(_QWORD *)(a1 + 152) = v21;
      *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v21 - 8))(a1 + 128, a2 + 128, v21);
      if (*(_QWORD *)(a2 + 184))
        goto LABEL_23;
    }
    else
    {
      v50 = *(_OWORD *)(a2 + 128);
      v51 = *(_OWORD *)(a2 + 160);
      *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 160) = v51;
      *(_OWORD *)(a1 + 128) = v50;
      if (*(_QWORD *)(a2 + 184))
        goto LABEL_23;
    }
    v56 = *(_OWORD *)(a2 + 176);
    v57 = *(_OWORD *)(a2 + 192);
    *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
    *(_OWORD *)(a1 + 176) = v56;
    *(_OWORD *)(a1 + 192) = v57;
    goto LABEL_25;
  }
  if (!v19)
  {
    sub_209F08318(a1 + 96);
    v22 = *(_OWORD *)(a2 + 144);
    v24 = *v18;
    v23 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v22;
    *v17 = v24;
    *(_OWORD *)(a1 + 112) = v23;
    v26 = *(_OWORD *)(a2 + 176);
    v25 = *(_OWORD *)(a2 + 192);
    v27 = *(_OWORD *)(a2 + 160);
    *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
    *(_OWORD *)(a1 + 176) = v26;
    *(_OWORD *)(a1 + 192) = v25;
    *(_OWORD *)(a1 + 160) = v27;
    goto LABEL_25;
  }
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = *(_QWORD *)(a2 + 152);
  if (*(_QWORD *)(a1 + 152))
  {
    if (v20)
    {
      __swift_assign_boxed_opaque_existential_2((uint64_t *)(a1 + 128), (uint64_t *)(a2 + 128));
      goto LABEL_16;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 128);
  }
  else if (v20)
  {
    *(_QWORD *)(a1 + 152) = v20;
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    (**(void (***)(uint64_t, uint64_t))(v20 - 8))(a1 + 128, a2 + 128);
    goto LABEL_16;
  }
  v34 = *(_OWORD *)(a2 + 128);
  v35 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v35;
  *(_OWORD *)(a1 + 128) = v34;
LABEL_16:
  v36 = (__int128 *)(a1 + 176);
  v37 = (__int128 *)(a2 + 176);
  v38 = *(_QWORD *)(a2 + 184);
  if (!*(_QWORD *)(a1 + 184))
  {
    if (!v38)
    {
      v46 = *v37;
      v47 = *(_OWORD *)(a2 + 192);
      *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
      *v36 = v46;
      *(_OWORD *)(a1 + 192) = v47;
      goto LABEL_25;
    }
LABEL_23:
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    v52 = *(void **)(a2 + 192);
    *(_QWORD *)(a1 + 192) = v52;
    v53 = *(void **)(a2 + 200);
    v54 = *(_BYTE *)(a2 + 208);
    swift_bridgeObjectRetain();
    v55 = v52;
    sub_209EEC018(v53, v54);
    *(_QWORD *)(a1 + 200) = v53;
    *(_BYTE *)(a1 + 208) = v54;
    goto LABEL_25;
  }
  if (v38)
  {
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v39 = *(void **)(a2 + 192);
    v40 = *(void **)(a1 + 192);
    *(_QWORD *)(a1 + 192) = v39;
    v41 = v39;

    v42 = *(void **)(a2 + 200);
    v43 = *(_BYTE *)(a2 + 208);
    sub_209EEC018(v42, v43);
    v44 = *(void **)(a1 + 200);
    v45 = *(_BYTE *)(a1 + 208);
    *(_QWORD *)(a1 + 200) = v42;
    *(_BYTE *)(a1 + 208) = v43;
    sub_209EEC698(v44, v45);
  }
  else
  {
    sub_209F0B720(a1 + 176);
    v48 = *(_BYTE *)(a2 + 208);
    v49 = *(_OWORD *)(a2 + 192);
    *v36 = *v37;
    *(_OWORD *)(a1 + 192) = v49;
    *(_BYTE *)(a1 + 208) = v48;
  }
LABEL_25:
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy224_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __n128 result;
  __int128 v10;
  __int128 v11;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  result = *(__n128 *)(a2 + 160);
  v10 = *(_OWORD *)(a2 + 176);
  v11 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v11;
  *(__n128 *)(a1 + 160) = result;
  *(_OWORD *)(a1 + 176) = v10;
  return result;
}

uint64_t assignWithTake for ChoiceView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  void *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  void *v12;
  char v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  void *v19;
  char v20;
  void *v21;
  char v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_BYTE *)(a2 + 24);
  v6 = *(void **)(a1 + 16);
  v7 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = v5;
  sub_209EEC698(v6, v7);
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_BYTE *)(a2 + 80);
  v11 = *(_QWORD *)(a1 + 64);
  v12 = *(void **)(a1 + 72);
  v13 = *(_BYTE *)(a1 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = v10;
  sub_209F12E28(v11, v12, v13);
  v14 = *(void **)(a1 + 88);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);

  if (!*(_QWORD *)(a1 + 104))
    goto LABEL_9;
  v15 = *(_QWORD *)(a2 + 104);
  if (!v15)
  {
    sub_209F08318(a1 + 96);
LABEL_9:
    v23 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v23;
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
    v24 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v24;
    v25 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v25;
    goto LABEL_12;
  }
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v15;
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v16;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 152))
    __swift_destroy_boxed_opaque_existential_1(a1 + 128);
  v17 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v17;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  if (!*(_QWORD *)(a1 + 184))
    goto LABEL_11;
  v18 = *(_QWORD *)(a2 + 184);
  if (!v18)
  {
    sub_209F0B720(a1 + 176);
LABEL_11:
    v26 = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = v26;
    *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
    goto LABEL_12;
  }
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v18;
  swift_bridgeObjectRelease();
  v19 = *(void **)(a1 + 192);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);

  v20 = *(_BYTE *)(a2 + 208);
  v21 = *(void **)(a1 + 200);
  v22 = *(_BYTE *)(a1 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_BYTE *)(a1 + 208) = v20;
  sub_209EEC698(v21, v22);
LABEL_12:
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ChoiceView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 224))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ChoiceView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 216) = 0;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 224) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 224) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ChoiceView()
{
  return &type metadata for ChoiceView;
}

void destroy for ChoiceView.ContentView(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 56))
      __swift_destroy_boxed_opaque_existential_1(a1 + 32);
    if (*(_QWORD *)(a1 + 88))
    {
      swift_bridgeObjectRelease();

      sub_209EEC698(*(id *)(a1 + 104), *(_BYTE *)(a1 + 112));
    }
  }
}

uint64_t initializeWithCopy for ChoiceView.ContentView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  char v11;
  id v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v4 = *(_QWORD *)(a2 + 8);
  if (!v4)
  {
    v13 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v13;
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
    v14 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v14;
    v15 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v15;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = (_OWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v7)
  {
    v16 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *v6;
    *(_OWORD *)(a1 + 48) = v16;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    v8 = *(_QWORD *)(a2 + 88);
    if (v8)
      goto LABEL_4;
LABEL_7:
    v17 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v17;
    *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
    return a1;
  }
  *(_QWORD *)(a1 + 56) = v7;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  (**(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8))(a1 + 32, a2 + 32, v7);
  v8 = *(_QWORD *)(a2 + 88);
  if (!v8)
    goto LABEL_7;
LABEL_4:
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v8;
  v10 = *(void **)(a2 + 96);
  v9 = *(void **)(a2 + 104);
  *(_QWORD *)(a1 + 96) = v10;
  v11 = *(_BYTE *)(a2 + 112);
  swift_bridgeObjectRetain();
  v12 = v10;
  sub_209EEC018(v9, v11);
  *(_QWORD *)(a1 + 104) = v9;
  *(_BYTE *)(a1 + 112) = v11;
  return a1;
}

uint64_t assignWithCopy for ChoiceView.ContentView(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  __int128 *v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 *v23;
  __int128 *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  void *v29;
  char v30;
  void *v31;
  char v32;
  __int128 v33;
  __int128 v34;
  char v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  void *v39;
  void *v40;
  char v41;
  id v42;
  __int128 v43;
  __int128 v44;

  v4 = *((_QWORD *)a2 + 1);
  if (!*(_QWORD *)(a1 + 8))
  {
    if (!v4)
    {
      v15 = *a2;
      v16 = a2[1];
      v17 = a2[3];
      *(_OWORD *)(a1 + 32) = a2[2];
      *(_OWORD *)(a1 + 48) = v17;
      *(_OWORD *)a1 = v15;
      *(_OWORD *)(a1 + 16) = v16;
      v18 = a2[4];
      v19 = a2[5];
      v20 = a2[6];
      *(_BYTE *)(a1 + 112) = *((_BYTE *)a2 + 112);
      *(_OWORD *)(a1 + 80) = v19;
      *(_OWORD *)(a1 + 96) = v20;
      *(_OWORD *)(a1 + 64) = v18;
      return a1;
    }
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
    *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
    *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
    v6 = (_OWORD *)(a1 + 32);
    v7 = a2 + 2;
    v8 = *((_QWORD *)a2 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v8)
    {
      *(_QWORD *)(a1 + 56) = v8;
      *(_OWORD *)(a1 + 64) = a2[4];
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8))(a1 + 32, (uint64_t)(a2 + 2), v8);
      if (*((_QWORD *)a2 + 11))
        goto LABEL_23;
    }
    else
    {
      v37 = *v7;
      v38 = a2[4];
      *(_OWORD *)(a1 + 48) = a2[3];
      *(_OWORD *)(a1 + 64) = v38;
      *v6 = v37;
      if (*((_QWORD *)a2 + 11))
        goto LABEL_23;
    }
    v43 = a2[5];
    v44 = a2[6];
    *(_BYTE *)(a1 + 112) = *((_BYTE *)a2 + 112);
    *(_OWORD *)(a1 + 80) = v43;
    *(_OWORD *)(a1 + 96) = v44;
    return a1;
  }
  if (!v4)
  {
    sub_209F08318(a1);
    v9 = a2[3];
    v11 = *a2;
    v10 = a2[1];
    *(_OWORD *)(a1 + 32) = a2[2];
    *(_OWORD *)(a1 + 48) = v9;
    *(_OWORD *)a1 = v11;
    *(_OWORD *)(a1 + 16) = v10;
    v13 = a2[5];
    v12 = a2[6];
    v14 = a2[4];
    *(_BYTE *)(a1 + 112) = *((_BYTE *)a2 + 112);
    *(_OWORD *)(a1 + 80) = v13;
    *(_OWORD *)(a1 + 96) = v12;
    *(_OWORD *)(a1 + 64) = v14;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
  *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = *((_QWORD *)a2 + 7);
  if (*(_QWORD *)(a1 + 56))
  {
    if (v5)
    {
      __swift_assign_boxed_opaque_existential_2((uint64_t *)(a1 + 32), (uint64_t *)a2 + 4);
      goto LABEL_16;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 32);
  }
  else if (v5)
  {
    *(_QWORD *)(a1 + 56) = v5;
    *(_OWORD *)(a1 + 64) = a2[4];
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 32, (uint64_t)(a2 + 2));
    goto LABEL_16;
  }
  v21 = a2[2];
  v22 = a2[4];
  *(_OWORD *)(a1 + 48) = a2[3];
  *(_OWORD *)(a1 + 64) = v22;
  *(_OWORD *)(a1 + 32) = v21;
LABEL_16:
  v23 = (__int128 *)(a1 + 80);
  v24 = a2 + 5;
  v25 = *((_QWORD *)a2 + 11);
  if (!*(_QWORD *)(a1 + 88))
  {
    if (!v25)
    {
      v33 = *v24;
      v34 = a2[6];
      *(_BYTE *)(a1 + 112) = *((_BYTE *)a2 + 112);
      *v23 = v33;
      *(_OWORD *)(a1 + 96) = v34;
      return a1;
    }
LABEL_23:
    *(_QWORD *)(a1 + 80) = *((_QWORD *)a2 + 10);
    *(_QWORD *)(a1 + 88) = *((_QWORD *)a2 + 11);
    v39 = (void *)*((_QWORD *)a2 + 12);
    *(_QWORD *)(a1 + 96) = v39;
    v40 = (void *)*((_QWORD *)a2 + 13);
    v41 = *((_BYTE *)a2 + 112);
    swift_bridgeObjectRetain();
    v42 = v39;
    sub_209EEC018(v40, v41);
    *(_QWORD *)(a1 + 104) = v40;
    *(_BYTE *)(a1 + 112) = v41;
    return a1;
  }
  if (v25)
  {
    *(_QWORD *)(a1 + 80) = *((_QWORD *)a2 + 10);
    *(_QWORD *)(a1 + 88) = *((_QWORD *)a2 + 11);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v26 = (void *)*((_QWORD *)a2 + 12);
    v27 = *(void **)(a1 + 96);
    *(_QWORD *)(a1 + 96) = v26;
    v28 = v26;

    v29 = (void *)*((_QWORD *)a2 + 13);
    v30 = *((_BYTE *)a2 + 112);
    sub_209EEC018(v29, v30);
    v31 = *(void **)(a1 + 104);
    v32 = *(_BYTE *)(a1 + 112);
    *(_QWORD *)(a1 + 104) = v29;
    *(_BYTE *)(a1 + 112) = v30;
    sub_209EEC698(v31, v32);
  }
  else
  {
    sub_209F0B720(a1 + 80);
    v35 = *((_BYTE *)a2 + 112);
    v36 = a2[6];
    *v23 = *v24;
    *(_OWORD *)(a1 + 96) = v36;
    *(_BYTE *)(a1 + 112) = v35;
  }
  return a1;
}

uint64_t assignWithTake for ChoiceView.ContentView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void *v8;
  char v9;
  void *v10;
  char v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  if (!*(_QWORD *)(a1 + 8))
    goto LABEL_9;
  v4 = *(_QWORD *)(a2 + 8);
  if (!v4)
  {
    sub_209F08318(a1);
LABEL_9:
    v12 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v12;
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
    v13 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v13;
    v14 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v14;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 56))
    __swift_destroy_boxed_opaque_existential_1(a1 + 32);
  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  if (!*(_QWORD *)(a1 + 88))
    goto LABEL_11;
  v7 = *(_QWORD *)(a2 + 88);
  if (!v7)
  {
    sub_209F0B720(a1 + 80);
LABEL_11:
    v15 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v15;
    *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
    return a1;
  }
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v7;
  swift_bridgeObjectRelease();
  v8 = *(void **)(a1 + 96);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);

  v9 = *(_BYTE *)(a2 + 112);
  v10 = *(void **)(a1 + 104);
  v11 = *(_BYTE *)(a1 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = v9;
  sub_209EEC698(v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for ChoiceView.ContentView(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 113))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ChoiceView.ContentView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 112) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 113) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 113) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ChoiceView.ContentView()
{
  return &type metadata for ChoiceView.ContentView;
}

ValueMetadata *type metadata accessor for Choice.ButtonType()
{
  return &type metadata for Choice.ButtonType;
}

uint64_t getEnumTagSinglePayload for ViewContext(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s8RemoteUI6ChoiceC10ButtonTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_209F16E74 + 4 * byte_209F787B2[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_209F16EA8 + 4 * byte_209F787AD[v4]))();
}

uint64_t sub_209F16EA8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_209F16EB0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x209F16EB8);
  return result;
}

uint64_t sub_209F16EC4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x209F16ECCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_209F16ED0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_209F16ED8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Choice.CodingKeys()
{
  return &type metadata for Choice.CodingKeys;
}

unint64_t sub_209F16EF8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2545BBB70;
  if (!qword_2545BBB70)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BBA70);
    v2[0] = sub_209F16F80();
    v2[1] = sub_209F0A54C(&qword_2545BBB88, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC4D8], MEMORY[0x24BDEC4D0]);
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2545BBB70);
  }
  return result;
}

unint64_t sub_209F16F80()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2545BBB78;
  if (!qword_2545BBB78)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BBB80);
    v2[0] = sub_209EF7830();
    v2[1] = MEMORY[0x24BDF1058];
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2545BBB78);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ChoiceView.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ChoiceView.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_209F170C8 + 4 * byte_209F787BC[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_209F170FC + 4 * byte_209F787B7[v4]))();
}

uint64_t sub_209F170FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_209F17104(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x209F1710CLL);
  return result;
}

uint64_t sub_209F17118(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x209F17120);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_209F17124(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_209F1712C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ChoiceView.CodingKeys()
{
  return &type metadata for ChoiceView.CodingKeys;
}

unint64_t sub_209F1714C()
{
  unint64_t result;

  result = qword_2545C1330[0];
  if (!qword_2545C1330[0])
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F78C64, &type metadata for ChoiceView.CodingKeys);
    atomic_store(result, qword_2545C1330);
  }
  return result;
}

unint64_t sub_209F17194()
{
  unint64_t result;

  result = qword_2545C1440;
  if (!qword_2545C1440)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F78B9C, &type metadata for ChoiceView.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545C1440);
  }
  return result;
}

unint64_t sub_209F171DC()
{
  unint64_t result;

  result = qword_2545C1448[0];
  if (!qword_2545C1448[0])
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F78BC4, &type metadata for ChoiceView.CodingKeys);
    atomic_store(result, qword_2545C1448);
  }
  return result;
}

unint64_t sub_209F17220()
{
  unint64_t result;

  result = qword_2545BBB90;
  if (!qword_2545BBB90)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2545BBB90);
  }
  return result;
}

unint64_t sub_209F1725C()
{
  unint64_t result;

  result = qword_2545BBB98;
  if (!qword_2545BBB98)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7894C, &type metadata for Choice.ButtonType);
    atomic_store(result, (unint64_t *)&qword_2545BBB98);
  }
  return result;
}

void sub_209F172A0(const OpaqueJSContext *a1, OpaqueJSValue *a2)
{
  JSGlobalContextRef GlobalContext;
  id v4;
  void *v5;
  _QWORD *Private;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;

  GlobalContext = JSContextGetGlobalContext(a1);
  if (GlobalContext)
  {
    v4 = objc_msgSend((id)objc_opt_self(), sel_contextWithJSGlobalContextRef_, GlobalContext);
    if (v4)
    {
      v5 = v4;
      Private = JSObjectGetPrivate(a2);
      if (Private)
      {
        v7 = Private;
        v12 = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *Private) + 0xD0))();
        v13 = v8;
        v9 = v5;
        v10 = sub_209F67A8C();
        v11 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, v10, v9, v12, v13);
        swift_unknownObjectRelease();

        if (v11)
        {
          objc_msgSend(v11, sel_JSValueRef);

          return;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
    }
  }
}

uint64_t sub_209F173C0(const OpaqueJSContext *a1, OpaqueJSValue *a2, uint64_t a3)
{
  uint64_t result;
  void *v6;
  _QWORD *v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;

  result = (uint64_t)JSContextGetGlobalContext(a1);
  if (result)
  {
    result = (uint64_t)objc_msgSend((id)objc_opt_self(), sel_contextWithJSGlobalContextRef_, result);
    if (result)
    {
      v6 = (void *)result;
      result = (uint64_t)JSObjectGetPrivate(a2);
      if (result)
      {
        v7 = (_QWORD *)result;
        v8 = objc_msgSend((id)objc_opt_self(), sel_valueWithJSValueRef_inContext_, a3, v6);
        v9 = v8;
        if (v8 && (v10 = objc_msgSend(v8, sel_toString)) != 0)
        {
          v11 = v10;
          v12 = sub_209F672C4();
          v14 = v13;

        }
        else
        {
          v12 = 0;
          v14 = 0xE000000000000000;
        }
        (*(void (**)(uint64_t, unint64_t))((*MEMORY[0x24BEE4EA0] & *v7) + 0xD8))(v12, v14);

        return 1;
      }
      else
      {
        __break(1u);
      }
    }
  }
  return result;
}

void type metadata accessor for RUIAttribute()
{
  unint64_t ForeignTypeMetadata;
  uint64_t v1;

  if (!qword_2545BBBA8)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1)
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_2545BBBA8);
  }
}

uint64_t sub_209F17530()
{
  return sub_209F0A54C(&qword_2545BBBB0, 255, (uint64_t (*)(uint64_t))type metadata accessor for RUIAttribute, (uint64_t)&unk_209F78D20);
}

uint64_t sub_209F17560()
{
  return sub_209F0A54C(&qword_2545BBBB8, 255, (uint64_t (*)(uint64_t))type metadata accessor for RUIAttribute, (uint64_t)&unk_209F78CF4);
}

uint64_t sub_209F17590()
{
  return sub_209F0A54C(&qword_2545BBBC0, 255, (uint64_t (*)(uint64_t))type metadata accessor for RUIAttribute, (uint64_t)"\t\v2B");
}

uint64_t sub_209F175C4(char *a1, char *a2)
{
  return sub_209F175D0(*a1, *a2);
}

uint64_t sub_209F175D0(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6C6562614C627573;
  else
    v3 = 25705;
  if (v2)
    v4 = 0xE200000000000000;
  else
    v4 = 0xE800000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x6C6562614C627573;
  else
    v5 = 25705;
  if ((a2 & 1) != 0)
    v6 = 0xE800000000000000;
  else
    v6 = 0xE200000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_209F679A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_209F17668()
{
  sub_209F67B10();
  sub_209F6733C();
  swift_bridgeObjectRelease();
  return sub_209F67B28();
}

uint64_t sub_209F176DC()
{
  sub_209F6733C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_209F1772C()
{
  sub_209F67B10();
  sub_209F6733C();
  swift_bridgeObjectRelease();
  return sub_209F67B28();
}

uint64_t sub_209F1779C@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_209F67840();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_209F177F8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 25705;
  if (*v1)
    v2 = 0x6C6562614C627573;
  v3 = 0xE200000000000000;
  if (*v1)
    v3 = 0xE800000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_209F1782C()
{
  _BYTE *v0;

  if (*v0)
    return 0x6C6562614C627573;
  else
    return 25705;
}

uint64_t sub_209F1785C@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_209F67840();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_209F178BC()
{
  sub_209F19BFC();
  return sub_209F67B88();
}

uint64_t sub_209F178E4()
{
  sub_209F19BFC();
  return sub_209F67B94();
}

uint64_t type metadata accessor for SubLabelElement()
{
  uint64_t result;

  result = qword_2545C1CE0;
  if (!qword_2545C1CE0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_209F17948@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  char v59;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBBD0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBBD8);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBBE0);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBBE8);
  MEMORY[0x24BDAC7A8](v16, v17);
  v21 = (char *)&v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(v2 + 40))
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 56))(a1, 1, 1);
  v48 = v8;
  v49 = v21;
  v50 = v12;
  v51 = v11;
  v52 = v19;
  v53 = v18;
  v47 = *(_QWORD *)(v2 + 32);
  v22 = *(_QWORD *)v2;
  v23 = *(_BYTE *)(v2 + 8);
  swift_bridgeObjectRetain();
  sub_209EEC00C(v22, v23);
  v24 = sub_209EF2004(v22, v23);
  sub_209EEC68C(v22, v23);
  v25 = *(_QWORD *)(v24 + 16);
  v54 = v4;
  if (v25)
  {
    v46 = a1;
    sub_209EF2B48();
    swift_bridgeObjectRetain();
    v26 = 0;
    while (1)
    {
      LOBYTE(v55) = *(_BYTE *)(v24 + v26 + 32);
      v59 = 2;
      if ((sub_209F67294() & 1) != 0)
        break;
      if (v25 == ++v26)
      {
        swift_bridgeObjectRelease_n();
        a1 = v46;
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease_n();
    sub_209F66F1C();
    v36 = sub_209F670D8();
    v38 = v37;
    v55 = v36;
    v56 = v37;
    v40 = v39 & 1;
    v57 = v39 & 1;
    v58 = v41;
    v42 = type metadata accessor for SubLabelElement();
    sub_209F21174(v2 + *(int *)(v42 + 28), MEMORY[0x24BDF1FA0], MEMORY[0x24BDF1F78]);
    sub_209EF1DFC(v36, v38, v40);
    swift_bridgeObjectRelease();
    sub_209EE3528((uint64_t)v15, (uint64_t)v51, &qword_2545BBBE0);
    swift_storeEnumTagMultiPayload();
    sub_209F17DE4();
    sub_209F17E68();
    v35 = (uint64_t)v49;
    sub_209F66F64();
    sub_209EE017C((uint64_t)v15, &qword_2545BBBE0);
    a1 = v46;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_9:
    *(_QWORD *)v7 = sub_209F66F28();
    *((_QWORD *)v7 + 1) = 0;
    v7[16] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBBF0);
    swift_bridgeObjectRetain();
    sub_209F66F1C();
    v28 = sub_209F670D8();
    v30 = v29;
    v55 = v28;
    v56 = v29;
    v32 = v31 & 1;
    v57 = v31 & 1;
    v58 = v33;
    v34 = type metadata accessor for SubLabelElement();
    sub_209F21174(v2 + *(int *)(v34 + 28), MEMORY[0x24BDF1FA0], MEMORY[0x24BDF1F78]);
    sub_209EF1DFC(v28, v30, v32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_209EE3528((uint64_t)v7, (uint64_t)v51, &qword_2545BBBD0);
    swift_storeEnumTagMultiPayload();
    sub_209F17DE4();
    sub_209F17E68();
    v35 = (uint64_t)v49;
    sub_209F66F64();
    sub_209EE017C((uint64_t)v7, &qword_2545BBBD0);
  }
  v44 = v52;
  v43 = v53;
  sub_209F17EB4(v35, a1);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v44 + 56))(a1, 0, 1, v43);
}

unint64_t sub_209F17DE4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_2545BBBF8;
  if (!qword_2545BBBF8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BBBE0);
    v2 = sub_209EE4ABC((unint64_t *)&qword_2545BBC00, (uint64_t (*)(uint64_t))type metadata accessor for OpenURLViewModifier, (uint64_t)&unk_209F79380);
    v3[0] = MEMORY[0x24BDF1F78];
    v3[1] = v2;
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BDED300], v1, v3);
    atomic_store(result, (unint64_t *)&qword_2545BBBF8);
  }
  return result;
}

unint64_t sub_209F17E68()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2545BBC08;
  if (!qword_2545BBC08)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BBBD0);
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BDF46F8], v1);
    atomic_store(result, (unint64_t *)&qword_2545BBC08);
  }
  return result;
}

uint64_t sub_209F17EB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBBE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_209F17EFC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::String *v11;
  Swift::String v12;
  uint64_t v13;
  void *v15;
  _QWORD v17[4];

  v4 = type metadata accessor for URLLoader(0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v17[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SubLabelElement();
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (Swift::String *)((char *)&v17[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11->_countAndFlagsBits = swift_getKeyPath();
  LOBYTE(v11->_object) = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v12 = Decoder.decodeRUIID()();
  if (v13)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_209EEC68C(v11->_countAndFlagsBits, (char)v11->_object);
  }
  else
  {
    v11[1] = v12;
    sub_209EE0E3C((uint64_t)a1, (uint64_t)v17);
    URLLoader.init(from:)((uint64_t)v17, (uint64_t)v7);
    sub_209F18134((uint64_t)v7, (uint64_t)v11 + *(int *)(v8 + 28));
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_209F67B40();
    __swift_project_boxed_opaque_existential_1(v17, v17[3]);
    v11[2]._countAndFlagsBits = sub_209F679C0();
    v11[2]._object = v15;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    sub_209EE3C10((uint64_t)v11, a2, (uint64_t (*)(_QWORD))type metadata accessor for SubLabelElement);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_209EEF010((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for SubLabelElement);
  }
}

uint64_t sub_209F18134(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for URLLoader(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_209F1817C()
{
  unint64_t result;

  result = qword_2545BBC10;
  if (!qword_2545BBC10)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F78E88, &type metadata for SubLabelElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BBC10);
  }
  return result;
}

unint64_t sub_209F181C4()
{
  unint64_t result;

  result = qword_2545BBC18;
  if (!qword_2545BBC18)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F78FA0, &type metadata for SubLabelElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BBC18);
  }
  return result;
}

unint64_t sub_209F1820C()
{
  unint64_t result;

  result = qword_2545BBC20;
  if (!qword_2545BBC20)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F78F78, &type metadata for SubLabelElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BBC20);
  }
  return result;
}

uint64_t sub_209F18250(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_209EE4ABC(&qword_2545BB1B8, (uint64_t (*)(uint64_t))type metadata accessor for SubLabelElement, (uint64_t)&unk_209F79034);
  a1[2] = sub_209EE4ABC(&qword_2545BBC28, (uint64_t (*)(uint64_t))type metadata accessor for SubLabelElement, (uint64_t)&unk_209F7905C);
  result = sub_209EE4ABC(&qword_2545BB2A8, (uint64_t (*)(uint64_t))type metadata accessor for SubLabelElement, (uint64_t)"}\n2B̍");
  a1[3] = result;
  return result;
}

uint64_t sub_209F182C8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_209F182DC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_209F17EFC(a1, a2);
}

unint64_t sub_209F182F0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  int *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  void *v50;
  char v51;
  uint64_t v52;
  char *v53;
  char *v54;
  id v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v80;
  unsigned int (*v81)(char *, uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v20 = v19 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_BYTE *)(a2 + 8);
    sub_209EEC00C(*(_QWORD *)a2, v8);
    *(_QWORD *)a1 = v7;
    *(_BYTE *)(a1 + 8) = v8;
    v9 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v9;
    v10 = *(_QWORD *)(a2 + 32);
    v11 = *(_QWORD *)(a2 + 40);
    v12 = *(int *)(a3 + 28);
    v13 = (char *)(a1 + v12);
    v14 = (char *)(a2 + v12);
    *(_QWORD *)(a1 + 32) = v10;
    *(_QWORD *)(a1 + 40) = v11;
    v15 = sub_209F66A90();
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v87 = a1;
    v81 = v17;
    v82 = v15;
    v80 = v16;
    if (v17(v14, 1, v15))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    v21 = (int *)type metadata accessor for URLLoadingParameters(0);
    v22 = v21[5];
    v23 = &v13[v22];
    v24 = &v14[v22];
    v86 = *((_QWORD *)v24 + 1);
    *(_QWORD *)v23 = *(_QWORD *)v24;
    *((_QWORD *)v23 + 1) = v86;
    v25 = v21[6];
    v26 = &v13[v25];
    v27 = &v14[v25];
    v85 = *((_QWORD *)v27 + 1);
    *(_QWORD *)v26 = *(_QWORD *)v27;
    *((_QWORD *)v26 + 1) = v85;
    v13[v21[7]] = v14[v21[7]];
    v28 = v21[8];
    v29 = &v13[v28];
    v30 = &v14[v28];
    v84 = *((_QWORD *)v30 + 1);
    *(_QWORD *)v29 = *(_QWORD *)v30;
    *((_QWORD *)v29 + 1) = v84;
    v31 = v21[9];
    v32 = &v13[v31];
    v33 = &v14[v31];
    v83 = *((_QWORD *)v33 + 1);
    *(_QWORD *)v32 = *(_QWORD *)v33;
    *((_QWORD *)v32 + 1) = v83;
    v13[v21[10]] = v14[v21[10]];
    *(_QWORD *)&v13[v21[11]] = *(_QWORD *)&v14[v21[11]];
    v34 = v21[12];
    v35 = &v13[v34];
    v36 = &v14[v34];
    v37 = *((_QWORD *)v36 + 1);
    *(_QWORD *)v35 = *(_QWORD *)v36;
    *((_QWORD *)v35 + 1) = v37;
    v38 = v21[13];
    v39 = &v13[v38];
    v40 = &v14[v38];
    v41 = *((_QWORD *)v40 + 1);
    *(_QWORD *)v39 = *(_QWORD *)v40;
    *((_QWORD *)v39 + 1) = v41;
    v42 = v21[14];
    v43 = &v13[v42];
    v44 = &v14[v42];
    v45 = *((_QWORD *)v44 + 1);
    *(_QWORD *)v43 = *(_QWORD *)v44;
    *((_QWORD *)v43 + 1) = v45;
    v46 = (int *)type metadata accessor for URLLoader(0);
    v47 = v46[5];
    v48 = &v13[v47];
    v49 = &v14[v47];
    v50 = *(void **)v49;
    v51 = v49[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_209EEC018(v50, v51);
    *(_QWORD *)v48 = v50;
    v48[8] = v51;
    v52 = v46[6];
    v53 = &v13[v52];
    v54 = &v14[v52];
    v55 = *(id *)v54;
    LOBYTE(v37) = v54[8];
    sub_209EEC018(*(id *)v54, v37);
    *(_QWORD *)v53 = v55;
    v53[8] = v37;
    v56 = v46[7];
    v57 = &v13[v56];
    v58 = &v14[v56];
    v59 = *(_QWORD *)v58;
    v60 = *((_QWORD *)v58 + 1);
    LOBYTE(v53) = v58[16];
    sub_209EEC024(*(_QWORD *)v58, v60, (char)v53);
    *(_QWORD *)v57 = v59;
    *((_QWORD *)v57 + 1) = v60;
    v57[16] = (char)v53;
    v61 = v46[8];
    v62 = &v13[v61];
    v63 = &v14[v61];
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if (v81(v63, 1, v82))
      {
        v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
        memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v62, v63, v82);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v62, 0, 1, v82);
      }
    }
    else
    {
      *(_QWORD *)v62 = *(_QWORD *)v63;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v65 = v46[9];
    v66 = &v13[v65];
    v67 = &v14[v65];
    v68 = *(_QWORD *)v67;
    v69 = *((_QWORD *)v67 + 1);
    v70 = v67[16];
    sub_209EEC024(*(_QWORD *)v67, v69, v70);
    *(_QWORD *)v66 = v68;
    *((_QWORD *)v66 + 1) = v69;
    v66[16] = v70;
    v71 = v46[10];
    v72 = &v13[v71];
    v73 = &v14[v71];
    v74 = *(_QWORD *)v73;
    LOBYTE(v69) = v73[8];
    sub_209EEC030(*(_QWORD *)v73, v69);
    *(_QWORD *)v72 = v74;
    v72[8] = v69;
    v75 = v46[11];
    v76 = &v13[v75];
    v77 = &v14[v75];
    v78 = *(_QWORD *)v77;
    LOBYTE(v77) = v77[8];
    *(_QWORD *)v76 = v78;
    v76[8] = (char)v77;
    v20 = v87;
  }
  swift_retain();
  return v20;
}

uint64_t sub_209F18704(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  int *v8;
  uint64_t v9;

  sub_209EEC68C(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_209F66A90();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  type metadata accessor for URLLoadingParameters(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = (int *)type metadata accessor for URLLoader(0);
  sub_209EEC698(*(id *)(v4 + v8[5]), *(_BYTE *)(v4 + v8[5] + 8));
  sub_209EEC698(*(id *)(v4 + v8[6]), *(_BYTE *)(v4 + v8[6] + 8));
  sub_209EEC6A4(*(_QWORD *)(v4 + v8[7]), *(_QWORD *)(v4 + v8[7] + 8), *(_BYTE *)(v4 + v8[7] + 16));
  v9 = v4 + v8[8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    if (!v7(v9, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  }
  else
  {
    swift_release();
  }
  sub_209EEC6A4(*(_QWORD *)(v4 + v8[9]), *(_QWORD *)(v4 + v8[9] + 8), *(_BYTE *)(v4 + v8[9] + 16));
  sub_209EEC6B0(*(_QWORD *)(v4 + v8[10]), *(_BYTE *)(v4 + v8[10] + 8));
  return swift_release();
}

uint64_t sub_209F188E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  void *v47;
  char v48;
  uint64_t v49;
  char *v50;
  char *v51;
  id v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v77;
  unsigned int (*v78)(char *, uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_209EEC00C(*(_QWORD *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  v8 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v8;
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(int *)(a3 + 28);
  v12 = (char *)(a1 + v11);
  v13 = (char *)(a2 + v11);
  *(_QWORD *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = v10;
  v14 = sub_209F66A90();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v84 = a1;
  v78 = v16;
  v79 = v14;
  v77 = v15;
  if (v16(v13, 1, v14))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v18 = (int *)type metadata accessor for URLLoadingParameters(0);
  v19 = v18[5];
  v20 = &v12[v19];
  v21 = &v13[v19];
  v83 = *((_QWORD *)v21 + 1);
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *((_QWORD *)v20 + 1) = v83;
  v22 = v18[6];
  v23 = &v12[v22];
  v24 = &v13[v22];
  v82 = *((_QWORD *)v24 + 1);
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *((_QWORD *)v23 + 1) = v82;
  v12[v18[7]] = v13[v18[7]];
  v25 = v18[8];
  v26 = &v12[v25];
  v27 = &v13[v25];
  v81 = *((_QWORD *)v27 + 1);
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *((_QWORD *)v26 + 1) = v81;
  v28 = v18[9];
  v29 = &v12[v28];
  v30 = &v13[v28];
  v80 = *((_QWORD *)v30 + 1);
  *(_QWORD *)v29 = *(_QWORD *)v30;
  *((_QWORD *)v29 + 1) = v80;
  v12[v18[10]] = v13[v18[10]];
  *(_QWORD *)&v12[v18[11]] = *(_QWORD *)&v13[v18[11]];
  v31 = v18[12];
  v32 = &v12[v31];
  v33 = &v13[v31];
  v34 = *((_QWORD *)v33 + 1);
  *(_QWORD *)v32 = *(_QWORD *)v33;
  *((_QWORD *)v32 + 1) = v34;
  v35 = v18[13];
  v36 = &v12[v35];
  v37 = &v13[v35];
  v38 = *((_QWORD *)v37 + 1);
  *(_QWORD *)v36 = *(_QWORD *)v37;
  *((_QWORD *)v36 + 1) = v38;
  v39 = v18[14];
  v40 = &v12[v39];
  v41 = &v13[v39];
  v42 = *((_QWORD *)v41 + 1);
  *(_QWORD *)v40 = *(_QWORD *)v41;
  *((_QWORD *)v40 + 1) = v42;
  v43 = (int *)type metadata accessor for URLLoader(0);
  v44 = v43[5];
  v45 = &v12[v44];
  v46 = &v13[v44];
  v47 = *(void **)v46;
  v48 = v46[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_209EEC018(v47, v48);
  *(_QWORD *)v45 = v47;
  v45[8] = v48;
  v49 = v43[6];
  v50 = &v12[v49];
  v51 = &v13[v49];
  v52 = *(id *)v51;
  LOBYTE(v34) = v51[8];
  sub_209EEC018(*(id *)v51, v34);
  *(_QWORD *)v50 = v52;
  v50[8] = v34;
  v53 = v43[7];
  v54 = &v12[v53];
  v55 = &v13[v53];
  v56 = *(_QWORD *)v55;
  v57 = *((_QWORD *)v55 + 1);
  LOBYTE(v50) = v55[16];
  sub_209EEC024(*(_QWORD *)v55, v57, (char)v50);
  *(_QWORD *)v54 = v56;
  *((_QWORD *)v54 + 1) = v57;
  v54[16] = (char)v50;
  v58 = v43[8];
  v59 = &v12[v58];
  v60 = &v13[v58];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    if (v78(v60, 1, v79))
    {
      v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
      memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v59, v60, v79);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v59, 0, 1, v79);
    }
  }
  else
  {
    *(_QWORD *)v59 = *(_QWORD *)v60;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v62 = v43[9];
  v63 = &v12[v62];
  v64 = &v13[v62];
  v65 = *(_QWORD *)v64;
  v66 = *((_QWORD *)v64 + 1);
  v67 = v64[16];
  sub_209EEC024(*(_QWORD *)v64, v66, v67);
  *(_QWORD *)v63 = v65;
  *((_QWORD *)v63 + 1) = v66;
  v63[16] = v67;
  v68 = v43[10];
  v69 = &v12[v68];
  v70 = &v13[v68];
  v71 = *(_QWORD *)v70;
  LOBYTE(v66) = v70[8];
  sub_209EEC030(*(_QWORD *)v70, v66);
  *(_QWORD *)v69 = v71;
  v69[8] = v66;
  v72 = v43[11];
  v73 = &v12[v72];
  v74 = &v13[v72];
  v75 = *(_QWORD *)v74;
  LOBYTE(v74) = v74[8];
  *(_QWORD *)v73 = v75;
  v73[8] = (char)v74;
  swift_retain();
  return v84;
}

uint64_t sub_209F18CD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  int *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  id v45;
  char v46;
  void *v47;
  char v48;
  uint64_t v49;
  char *v50;
  char *v51;
  id v52;
  char v53;
  void *v54;
  char v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v88;
  unsigned int (*v89)(char *, uint64_t, uint64_t);

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_209EEC00C(*(_QWORD *)a2, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_209EEC68C(v8, v9);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 28);
  v11 = (char *)(a1 + v10);
  v12 = (char *)(a2 + v10);
  v13 = sub_209F66A90();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  v88 = v14;
  v89 = v15;
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
LABEL_7:
  v19 = (int *)type metadata accessor for URLLoadingParameters(0);
  v20 = v19[5];
  v21 = &v11[v20];
  v22 = &v12[v20];
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23 = v19[6];
  v24 = &v11[v23];
  v25 = &v12[v23];
  *(_QWORD *)v24 = *(_QWORD *)v25;
  *((_QWORD *)v24 + 1) = *((_QWORD *)v25 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[v19[7]] = v12[v19[7]];
  v26 = v19[8];
  v27 = &v11[v26];
  v28 = &v12[v26];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *((_QWORD *)v27 + 1) = *((_QWORD *)v28 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v29 = v19[9];
  v30 = &v11[v29];
  v31 = &v12[v29];
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *((_QWORD *)v30 + 1) = *((_QWORD *)v31 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[v19[10]] = v12[v19[10]];
  *(_QWORD *)&v11[v19[11]] = *(_QWORD *)&v12[v19[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v32 = v19[12];
  v33 = &v11[v32];
  v34 = &v12[v32];
  *(_QWORD *)v33 = *(_QWORD *)v34;
  *((_QWORD *)v33 + 1) = *((_QWORD *)v34 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v35 = v19[13];
  v36 = &v11[v35];
  v37 = &v12[v35];
  *(_QWORD *)v36 = *(_QWORD *)v37;
  *((_QWORD *)v36 + 1) = *((_QWORD *)v37 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v38 = v19[14];
  v39 = &v11[v38];
  v40 = &v12[v38];
  *(_QWORD *)v39 = *(_QWORD *)v40;
  *((_QWORD *)v39 + 1) = *((_QWORD *)v40 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v41 = (int *)type metadata accessor for URLLoader(0);
  v42 = v41[5];
  v43 = &v11[v42];
  v44 = &v12[v42];
  v45 = *(id *)v44;
  v46 = v44[8];
  sub_209EEC018(*(id *)v44, v46);
  v47 = *(void **)v43;
  v48 = v43[8];
  *(_QWORD *)v43 = v45;
  v43[8] = v46;
  sub_209EEC698(v47, v48);
  v49 = v41[6];
  v50 = &v11[v49];
  v51 = &v12[v49];
  v52 = *(id *)v51;
  v53 = v51[8];
  sub_209EEC018(*(id *)v51, v53);
  v54 = *(void **)v50;
  v55 = v50[8];
  *(_QWORD *)v50 = v52;
  v50[8] = v53;
  sub_209EEC698(v54, v55);
  v56 = v41[7];
  v57 = &v11[v56];
  v58 = &v12[v56];
  v59 = *(_QWORD *)v58;
  v60 = *((_QWORD *)v58 + 1);
  LOBYTE(v50) = v58[16];
  sub_209EEC024(*(_QWORD *)v58, v60, (char)v50);
  v61 = *(_QWORD *)v57;
  v62 = *((_QWORD *)v57 + 1);
  v63 = v57[16];
  *(_QWORD *)v57 = v59;
  *((_QWORD *)v57 + 1) = v60;
  v57[16] = (char)v50;
  sub_209EEC6A4(v61, v62, v63);
  if (a1 != a2)
  {
    v64 = v41[8];
    v65 = &v11[v64];
    v66 = &v12[v64];
    sub_209EE017C((uint64_t)&v11[v64], &qword_2545BB1F8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if (v89(v66, 1, v13))
      {
        v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
        memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v65, v66, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v65, 0, 1, v13);
      }
    }
    else
    {
      *(_QWORD *)v65 = *(_QWORD *)v66;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v68 = v41[9];
  v69 = &v11[v68];
  v70 = &v12[v68];
  v71 = *(_QWORD *)v70;
  v72 = *((_QWORD *)v70 + 1);
  v73 = v70[16];
  sub_209EEC024(*(_QWORD *)v70, v72, v73);
  v74 = *(_QWORD *)v69;
  v75 = *((_QWORD *)v69 + 1);
  v76 = v69[16];
  *(_QWORD *)v69 = v71;
  *((_QWORD *)v69 + 1) = v72;
  v69[16] = v73;
  sub_209EEC6A4(v74, v75, v76);
  v77 = v41[10];
  v78 = &v11[v77];
  v79 = &v12[v77];
  v80 = *(_QWORD *)v79;
  LOBYTE(v72) = v79[8];
  sub_209EEC030(*(_QWORD *)v79, v72);
  v81 = *(_QWORD *)v78;
  v82 = v78[8];
  *(_QWORD *)v78 = v80;
  v78[8] = v72;
  sub_209EEC6B0(v81, v82);
  v83 = v41[11];
  v84 = &v11[v83];
  v85 = &v12[v83];
  v86 = *(_QWORD *)v85;
  LOBYTE(v85) = v85[8];
  *(_QWORD *)v84 = v86;
  v84[8] = (char)v85;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_209F191EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;
  int *v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  v5 = *(int *)(a3 + 28);
  v6 = (char *)(a1 + v5);
  v7 = (char *)(a2 + v5);
  v8 = sub_209F66A90();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (v10(v7, 1, v8))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  v12 = (int *)type metadata accessor for URLLoadingParameters(0);
  *(_OWORD *)&v6[v12[5]] = *(_OWORD *)&v7[v12[5]];
  *(_OWORD *)&v6[v12[6]] = *(_OWORD *)&v7[v12[6]];
  v6[v12[7]] = v7[v12[7]];
  *(_OWORD *)&v6[v12[8]] = *(_OWORD *)&v7[v12[8]];
  *(_OWORD *)&v6[v12[9]] = *(_OWORD *)&v7[v12[9]];
  v6[v12[10]] = v7[v12[10]];
  *(_QWORD *)&v6[v12[11]] = *(_QWORD *)&v7[v12[11]];
  *(_OWORD *)&v6[v12[12]] = *(_OWORD *)&v7[v12[12]];
  *(_OWORD *)&v6[v12[13]] = *(_OWORD *)&v7[v12[13]];
  *(_OWORD *)&v6[v12[14]] = *(_OWORD *)&v7[v12[14]];
  v13 = (int *)type metadata accessor for URLLoader(0);
  v14 = v13[5];
  v15 = &v6[v14];
  v16 = &v7[v14];
  *(_QWORD *)v15 = *(_QWORD *)v16;
  v15[8] = v16[8];
  v17 = v13[6];
  v18 = &v6[v17];
  v19 = &v7[v17];
  *(_QWORD *)v18 = *(_QWORD *)v19;
  v18[8] = v19[8];
  v20 = v13[7];
  v21 = &v6[v20];
  v22 = &v7[v20];
  v21[16] = v22[16];
  *(_OWORD *)v21 = *(_OWORD *)v22;
  v23 = v13[8];
  v24 = &v6[v23];
  v25 = &v7[v23];
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    if (v10(v25, 1, v8))
    {
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v24, v25, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v24, 0, 1, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  v28 = v13[9];
  v29 = &v6[v28];
  v30 = &v7[v28];
  *(_OWORD *)v29 = *(_OWORD *)v30;
  v29[16] = v30[16];
  v31 = v13[10];
  v32 = &v6[v31];
  v33 = &v7[v31];
  v32[8] = v33[8];
  *(_QWORD *)v32 = *(_QWORD *)v33;
  v34 = v13[11];
  v35 = &v6[v34];
  v36 = &v7[v34];
  *(_QWORD *)v35 = *(_QWORD *)v36;
  v35[8] = v36[8];
  return a1;
}

uint64_t sub_209F194B8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  int *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  void *v62;
  char v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  void *v68;
  char v69;
  uint64_t v70;
  char *v71;
  char *v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_209EEC68C(v8, v9);
  v10 = a2[3];
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = v10;
  swift_bridgeObjectRelease();
  v11 = a2[5];
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_QWORD *)(a1 + 40) = v11;
  swift_bridgeObjectRelease();
  v12 = *(int *)(a3 + 28);
  v13 = (char *)(a1 + v12);
  v14 = (char *)a2 + v12;
  v15 = sub_209F66A90();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
LABEL_6:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v13, v14, v15);
LABEL_7:
  v21 = (int *)type metadata accessor for URLLoadingParameters(0);
  v22 = v21[5];
  v23 = &v13[v22];
  v24 = &v14[v22];
  v26 = *(_QWORD *)v24;
  v25 = *((_QWORD *)v24 + 1);
  *(_QWORD *)v23 = v26;
  *((_QWORD *)v23 + 1) = v25;
  swift_bridgeObjectRelease();
  v27 = v21[6];
  v28 = &v13[v27];
  v29 = &v14[v27];
  v31 = *(_QWORD *)v29;
  v30 = *((_QWORD *)v29 + 1);
  *(_QWORD *)v28 = v31;
  *((_QWORD *)v28 + 1) = v30;
  swift_bridgeObjectRelease();
  v13[v21[7]] = v14[v21[7]];
  v32 = v21[8];
  v33 = &v13[v32];
  v34 = &v14[v32];
  v36 = *(_QWORD *)v34;
  v35 = *((_QWORD *)v34 + 1);
  *(_QWORD *)v33 = v36;
  *((_QWORD *)v33 + 1) = v35;
  swift_bridgeObjectRelease();
  v37 = v21[9];
  v38 = &v13[v37];
  v39 = &v14[v37];
  v41 = *(_QWORD *)v39;
  v40 = *((_QWORD *)v39 + 1);
  *(_QWORD *)v38 = v41;
  *((_QWORD *)v38 + 1) = v40;
  swift_bridgeObjectRelease();
  v13[v21[10]] = v14[v21[10]];
  *(_QWORD *)&v13[v21[11]] = *(_QWORD *)&v14[v21[11]];
  swift_bridgeObjectRelease();
  v42 = v21[12];
  v43 = &v13[v42];
  v44 = &v14[v42];
  v46 = *(_QWORD *)v44;
  v45 = *((_QWORD *)v44 + 1);
  *(_QWORD *)v43 = v46;
  *((_QWORD *)v43 + 1) = v45;
  swift_bridgeObjectRelease();
  v47 = v21[13];
  v48 = &v13[v47];
  v49 = &v14[v47];
  v51 = *(_QWORD *)v49;
  v50 = *((_QWORD *)v49 + 1);
  *(_QWORD *)v48 = v51;
  *((_QWORD *)v48 + 1) = v50;
  swift_bridgeObjectRelease();
  v52 = v21[14];
  v53 = &v13[v52];
  v54 = &v14[v52];
  v56 = *(_QWORD *)v54;
  v55 = *((_QWORD *)v54 + 1);
  *(_QWORD *)v53 = v56;
  *((_QWORD *)v53 + 1) = v55;
  swift_bridgeObjectRelease();
  v57 = (int *)type metadata accessor for URLLoader(0);
  v58 = v57[5];
  v59 = &v13[v58];
  v60 = &v14[v58];
  v61 = *(_QWORD *)v60;
  LOBYTE(v60) = v60[8];
  v62 = *(void **)v59;
  v63 = v59[8];
  *(_QWORD *)v59 = v61;
  v59[8] = (char)v60;
  sub_209EEC698(v62, v63);
  v64 = v57[6];
  v65 = &v13[v64];
  v66 = &v14[v64];
  v67 = *(_QWORD *)v66;
  LOBYTE(v66) = v66[8];
  v68 = *(void **)v65;
  v69 = v65[8];
  *(_QWORD *)v65 = v67;
  v65[8] = (char)v66;
  sub_209EEC698(v68, v69);
  v70 = v57[7];
  v71 = &v13[v70];
  v72 = &v14[v70];
  v73 = v72[16];
  v74 = *(_QWORD *)v71;
  v75 = *((_QWORD *)v71 + 1);
  v76 = v71[16];
  *(_OWORD *)v71 = *(_OWORD *)v72;
  v71[16] = v73;
  sub_209EEC6A4(v74, v75, v76);
  if ((uint64_t *)a1 != a2)
  {
    v77 = v57[8];
    v78 = &v13[v77];
    v79 = &v14[v77];
    sub_209EE017C((uint64_t)&v13[v77], &qword_2545BB1F8);
    v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if (v17(v79, 1, v15))
      {
        v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
        memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v78, v79, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v78, 0, 1, v15);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
    }
  }
  v82 = v57[9];
  v83 = &v13[v82];
  v84 = &v14[v82];
  v85 = v84[16];
  v86 = *(_QWORD *)v83;
  v87 = *((_QWORD *)v83 + 1);
  v88 = v83[16];
  *(_OWORD *)v83 = *(_OWORD *)v84;
  v83[16] = v85;
  sub_209EEC6A4(v86, v87, v88);
  v89 = v57[10];
  v90 = &v13[v89];
  v91 = &v14[v89];
  v92 = *(_QWORD *)v91;
  LOBYTE(v91) = v91[8];
  v93 = *(_QWORD *)v90;
  v94 = v90[8];
  *(_QWORD *)v90 = v92;
  v90[8] = (char)v91;
  sub_209EEC6B0(v93, v94);
  v95 = v57[11];
  v96 = &v13[v95];
  v97 = &v14[v95];
  v98 = *(_QWORD *)v97;
  LOBYTE(v97) = v97[8];
  *(_QWORD *)v96 = v98;
  v96[8] = (char)v97;
  swift_release();
  return a1;
}

uint64_t sub_209F198CC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_209F198D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for URLLoader(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t sub_209F19954()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_209F19960(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for URLLoader(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

uint64_t sub_209F199D4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for URLLoader(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SubLabelElement.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_209F19AA8 + 4 * byte_209F78E55[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_209F19ADC + 4 * byte_209F78E50[v4]))();
}

uint64_t sub_209F19ADC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_209F19AE4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x209F19AECLL);
  return result;
}

uint64_t sub_209F19AF8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x209F19B00);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_209F19B04(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_209F19B0C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SubLabelElement.CodingKeys()
{
  return &type metadata for SubLabelElement.CodingKeys;
}

unint64_t sub_209F19B2C()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_2545BBC30;
  if (!qword_2545BBC30)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BBC38);
    v2 = sub_209F19B90();
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BDF5580], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2545BBC30);
  }
  return result;
}

unint64_t sub_209F19B90()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2545BBC40;
  if (!qword_2545BBC40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BBBE8);
    v2[0] = sub_209F17DE4();
    v2[1] = sub_209F17E68();
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BDEF3D8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2545BBC40);
  }
  return result;
}

unint64_t sub_209F19BFC()
{
  unint64_t result;

  result = qword_2545BBC48;
  if (!qword_2545BBC48)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F78F28, &type metadata for SubLabelElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BBC48);
  }
  return result;
}

BOOL sub_209F19C40(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void sub_209F19C54()
{
  qword_2545C1CF8 = (uint64_t)&unk_24C294128;
}

uint64_t sub_209F19C68@<X0>(_QWORD *a1@<X8>)
{
  if (qword_2545C1CF0 != -1)
    swift_once();
  *a1 = qword_2545C1CF8;
  return swift_bridgeObjectRetain();
}

uint64_t sub_209F19CB8()
{
  sub_209F19E9C();
  return sub_209F66DCC();
}

uint64_t sub_209F19D08()
{
  uint64_t v1;

  sub_209F19D40();
  sub_209F66EA4();
  return v1;
}

unint64_t sub_209F19D40()
{
  unint64_t result;

  result = qword_2545C1D00[0];
  if (!qword_2545C1D00[0])
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7918C, &type metadata for ViewContextKey);
    atomic_store(result, qword_2545C1D00);
  }
  return result;
}

uint64_t sub_209F19D84()
{
  sub_209F19D40();
  return sub_209F66EB0();
}

uint64_t storeEnumTagSinglePayload for ViewContext(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_209F19E0C + 4 * byte_209F79101[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_209F19E40 + 4 * asc_209F790FC[v4]))();
}

uint64_t sub_209F19E40(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_209F19E48(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x209F19E50);
  return result;
}

uint64_t sub_209F19E5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x209F19E64);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_209F19E68(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_209F19E70(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ViewContext()
{
  return &type metadata for ViewContext;
}

ValueMetadata *type metadata accessor for ViewContextKey()
{
  return &type metadata for ViewContextKey;
}

unint64_t sub_209F19E9C()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_2545BBC50;
  if (!qword_2545BBC50)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BBC58);
    v2 = sub_209EF2B48();
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BEE12C0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2545BBC50);
  }
  return result;
}

void *sub_209F19F00()
{
  void *result;

  result = malloc(1uLL);
  if (result)
    qword_2545C1E98 = (uint64_t)result;
  else
    __break(1u);
  return result;
}

uint64_t sub_209F19F28()
{
  if (qword_2545C1E90 != -1)
    swift_once();
  return qword_2545C1E98;
}

uint64_t sub_209F19F68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  id v7;
  uint64_t result;

  if (a6)
  {
    sub_209EEAFF0();
    swift_retain();
    v7 = a5;
    return swift_retain();
  }
  return result;
}

uint64_t sub_209F19FC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t result;

  if (a6)
  {
    sub_209EEB098();
    swift_release();

    return swift_release();
  }
  return result;
}

Swift::Void __swiftcall RUITableViewRow.parseBadge()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  RUIDecodingUserInfo *v30;
  uint64_t v31;
  _BYTE v32[16];
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
  v3 = MEMORY[0x24BDAC7A8](v1, v2);
  v5 = &v32[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v3, v6);
  v8 = &v32[-v7];
  v9 = sub_209F677B0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = &v32[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = objc_msgSend(v0, sel_sourceXMLElement);
  if (!v14)
    return;
  v15 = v14;
  type metadata accessor for RUI.LiftUI.XMLDecoder();
  RUI.LiftUI.XMLDecoder.__allocating_init()();
  v16 = objc_msgSend(v0, sel_pageElement);
  if (!v16)
  {
    __break(1u);
    goto LABEL_16;
  }
  v17 = v16;
  v18 = objc_msgSend(v16, sel_page);

  if (!v18)
  {
LABEL_16:
    __break(1u);
    return;
  }
  v19 = objc_msgSend(v18, sel_objectModel);

  v20 = sub_209EE60D0();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v10 + 16))(v13, v20, v9);
  if (v19)
  {
    v21 = objc_msgSend(v19, sel_sourceURL);
    if (v21)
    {
      v22 = v21;
      sub_209F66A60();

      v23 = sub_209F66A90();
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v5, 0, 1, v23);
    }
    else
    {
      v25 = sub_209F66A90();
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v5, 1, 1, v25);
    }
    sub_209EDF9D0((uint64_t)v5, (uint64_t)v8);
  }
  else
  {
    v24 = sub_209F66A90();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v8, 1, 1, v24);
  }
  type metadata accessor for ResourceLoader();
  type metadata accessor for HTTPDataSource();
  v26 = HTTPDataSource.__allocating_init()();
  v27 = sub_209EDFA18((uint64_t)v8, v26, (uint64_t)&protocol witness table for HTTPDataSource);
  if (v19)
  {
    v28 = v19;
    v29 = RUIObjectModel.decodingUserInfo.getter();

  }
  else
  {
    type metadata accessor for RUIDecodingUserInfo();
    RUIDecodingUserInfo.init()(v30);
    v29 = v31;
  }
  v34 = (unint64_t)&type metadata for DecodingContext;
  sub_209EE5FE8(v27, v29, &v33);
  swift_beginAccess();
  sub_209F0EEA0((uint64_t)&v33, (uint64_t)v13);
  swift_endAccess();
  sub_209F1A3C0();
  RUI.LiftUI.XMLDecoder.decode<A>(_:from:)((uint64_t)&type metadata for ImageBadge, v15);
  v33 = v33;
  v34 = v34;
  v35 = v35;
  v36 = v36;
  sub_209EE5CB8((uint64_t)&v33, (uint64_t)&type metadata for BadgeAssociatedKey, (uint64_t)&type metadata for BadgeAssociatedKey, (uint64_t)&off_2545B8F38);
  swift_release();

}

unint64_t sub_209F1A3C0()
{
  unint64_t result;

  result = qword_2545BBC60;
  if (!qword_2545BBC60)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7B044, &type metadata for ImageBadge);
    atomic_store(result, (unint64_t *)&qword_2545BBC60);
  }
  return result;
}

Swift::Void __swiftcall RUITableViewRow.setBadge(in:)(UITableViewCell *in)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int128 v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int128 v25;
  id v26;
  void *v27;
  void *v28;
  UITableViewCell *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  unsigned __int128 v36;
  uint64_t v37;

  objc_opt_self();
  v2 = swift_dynamicCastObjCClass();
  if (v2)
  {
    v28 = (void *)v2;
    v29 = in;
    sub_209EE5B44((uint64_t)&type metadata for BadgeAssociatedKey, (uint64_t)&off_2545B8F38, (uint64_t)&v30);
    v3 = v35;
    if (v35)
    {
      v4 = v31;
      v6 = v32;
      v5 = v33;
      v7 = v34;
      v24 = v30;
      v8 = *((_QWORD *)&v36 + 1);
      v9 = v36;
      v10 = v37;
      sub_209EEAFF0();
      swift_retain();
      v26 = v7;
      swift_retain();
      v23 = v10;
      v22 = __PAIR128__(v8, v9);
      sub_209F19FC0(v24, v4, v6, v5, v7, v3);
      v11 = RUIImage.preloadedImage.getter();
      sub_209EEB098();
      swift_release();
      swift_release();

    }
    else
    {
      v11 = 0;
    }
    sub_209EE5B44((uint64_t)&type metadata for BadgeAssociatedKey, (uint64_t)&off_2545B8F38, (uint64_t)&v30);
    v12 = v35;
    if (v35)
    {
      v13 = v11;
      v14 = v30;
      v15 = v31;
      v17 = v32;
      v16 = v33;
      v18 = v34;
      v25 = v36;
      v19 = v37;
      v27 = v34;
      v23 = v19;
      v22 = v25;
      v20 = v15;
      v11 = v13;
      sub_209F19FC0(v14, v20, v17, v16, v18, v12);
    }
    else
    {
      v27 = 0;
    }
    sub_209EE5B44((uint64_t)&type metadata for BadgeAssociatedKey, (uint64_t)&off_2545B8F38, (uint64_t)&v30);
    if (v35)
    {
      v21 = v30;
      v23 = v37;
      v22 = v36;
      sub_209F19FC0(v30, v31, v32, v33, v34, v35);
    }
    else
    {
      v21 = 0;
    }
    objc_msgSend(v28, sel_setBadgeImage_tintColor_isCircular_, v11, v27, v21, v22, v23);

  }
}

ValueMetadata *type metadata accessor for BadgeAssociatedKey()
{
  return &type metadata for BadgeAssociatedKey;
}

uint64_t sub_209F1A730@<X0>(uint64_t *a1@<X8>)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  _QWORD v39[3];
  uint64_t v40;
  unint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  _OWORD v58[2];
  _BYTE v59[16];
  _BYTE v60[16];
  _BYTE v61[16];
  _BYTE v62[16];

  v3 = sub_209F67174();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v39[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v1[3];
  v9 = v1[5];
  v51 = v1[4];
  v52 = v9;
  v53 = v1[6];
  v10 = v1[1];
  v47 = *v1;
  v48 = v10;
  v11 = v1[3];
  v13 = *v1;
  v12 = v1[1];
  v49 = v1[2];
  v50 = v11;
  v58[0] = v8;
  v58[1] = v51;
  v54 = *((_QWORD *)v1 + 14);
  v56 = v12;
  v57 = v49;
  v55 = v13;
  if (v12 == 1)
  {
    swift_bridgeObjectRetain();
    v14 = sub_209F67168();
    v40 = MEMORY[0x24BDF4110];
    v41 = MEMORY[0x24BDF40F0];
    v39[0] = v14;
  }
  else
  {
    v15 = v1[3];
    v44 = v1[2];
    v45 = v15;
    v46 = v1[4];
    v16 = v1[1];
    v42 = *v1;
    v43 = v16;
    v17 = RUIImage.preloadedImage.getter();
    if (!v17)
    {
      v20 = sub_209F67228();
      v22 = v21;
      v23 = swift_allocObject();
      v24 = v52;
      *(_OWORD *)(v23 + 80) = v51;
      *(_OWORD *)(v23 + 96) = v24;
      *(_OWORD *)(v23 + 112) = v53;
      *(_QWORD *)(v23 + 128) = v54;
      v25 = v48;
      *(_OWORD *)(v23 + 16) = v47;
      *(_OWORD *)(v23 + 32) = v25;
      v26 = v50;
      *(_OWORD *)(v23 + 48) = v49;
      *(_OWORD *)(v23 + 64) = v26;
      v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBD80);
      v41 = sub_209F1CDC8();
      v27 = (_QWORD *)swift_allocObject();
      v39[0] = v27;
      v27[2] = v20;
      v27[3] = v22;
      v27[4] = sub_209F1CDC0;
      v27[5] = v23;
      v27[6] = 0;
      v27[7] = 0;
      sub_209EF1E0C((uint64_t)v39, (uint64_t)&v42, &qword_2545BBDA0);
      sub_209F1CE88((uint64_t)&v47);
      if ((v52 & 1) != 0)
        goto LABEL_10;
LABEL_8:
      sub_209EF1E0C((uint64_t)&v57 + 8, (uint64_t)v60, &qword_2545BBDA8);
      sub_209EF1E0C((uint64_t)v60, (uint64_t)v61, &qword_2545BBDA8);
      if (v61[8] == 1)
      {
        sub_209EF1E0C((uint64_t)v58 + 8, (uint64_t)v59, &qword_2545BBDA8);
        sub_209EF1E0C((uint64_t)v59, (uint64_t)v62, &qword_2545BBDA8);
        if ((v62[8] & 1) != 0)
          goto LABEL_14;
      }
      goto LABEL_10;
    }
    v18 = v17;
    v19 = sub_209F01788();
    v40 = MEMORY[0x24BDF4110];
    v41 = MEMORY[0x24BDF40F0];

    v39[0] = v19;
  }
  sub_209EF1E0C((uint64_t)v39, (uint64_t)&v42, &qword_2545BBDA0);
  if ((v52 & 1) == 0)
    goto LABEL_8;
LABEL_10:
  sub_209EE3528((uint64_t)&v42, (uint64_t)v39, &qword_2545BBDA0);
  if (v40)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBDB0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v7, *MEMORY[0x24BDF3FD8], v3);
      v28 = sub_209F67180();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
      v39[0] = v28;
      v29 = sub_209F0AF3C(MEMORY[0x24BDF4110], MEMORY[0x24BDF40F0]);
      swift_release();
      swift_release();
      *a1 = v29;
      return sub_209EE017C((uint64_t)&v42, &qword_2545BBDA0);
    }
  }
  else
  {
    sub_209EE017C((uint64_t)v39, &qword_2545BBDA0);
  }
LABEL_14:
  v30 = *((_QWORD *)&v43 + 1);
  if (*((_QWORD *)&v43 + 1))
  {
    v31 = v44;
    v32 = __swift_project_boxed_opaque_existential_1(&v42, *((uint64_t *)&v43 + 1));
    v33 = *(_QWORD *)(v30 - 8);
    MEMORY[0x24BDAC7A8](v32, v32);
    v35 = (char *)&v39[-1] - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v33 + 16))(v35);
    v36 = sub_209F0AF3C(v30, v31);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v35, v30);
    *a1 = v36;
  }
  else
  {
    *a1 = 0;
  }
  return sub_209EE017C((uint64_t)&v42, &qword_2545BBDA0);
}

uint64_t sub_209F1AB30(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v14;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB428);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_209F674B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  sub_209F6748C();
  sub_209F1CE88(a1);
  v7 = sub_209F67480();
  v8 = swift_allocObject();
  v9 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v9;
  v10 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v8 + 96) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v8 + 112) = v10;
  *(_OWORD *)(v8 + 128) = *(_OWORD *)(a1 + 96);
  *(_QWORD *)(v8 + 144) = *(_QWORD *)(a1 + 112);
  v11 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v8 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v8 + 48) = v11;
  v12 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v8 + 64) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v8 + 80) = v12;
  sub_209F1AD9C((uint64_t)v5, (uint64_t)&unk_2545BBDC0, v8);
  return swift_release();
}

uint64_t sub_209F1AC30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v6;
  uint64_t (*v8)(void);

  v4[2] = sub_209F6748C();
  v4[3] = sub_209F67480();
  v8 = (uint64_t (*)(void))(**(int **)(**(_QWORD **)(a4 + 112) + 168) + *(_QWORD *)(**(_QWORD **)(a4 + 112) + 168));
  v6 = (_QWORD *)swift_task_alloc();
  v4[4] = v6;
  *v6 = v4;
  v6[1] = sub_209F1ACAC;
  return v8();
}

uint64_t sub_209F1ACAC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  sub_209F67474();
  return swift_task_switch();
}

uint64_t sub_209F1AD34()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_209F1AD68()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_209F1AD9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_209F674B0();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_209F674A4();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
    goto LABEL_3;
  }
  sub_209EE017C(a1, &qword_2545BB428);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_209F67474();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

id RUIImageView.defaultSize(_:)@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  id v14;

  v4 = *v3;
  v5 = v3[1];
  v6 = *((_BYTE *)v3 + 16);
  v7 = v3[4];
  v14 = (id)v3[3];
  v8 = v3[5];
  v9 = *((_BYTE *)v3 + 48);
  v10 = v3[7];
  v11 = *((_BYTE *)v3 + 64);
  v12 = v3[9];
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v14;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_BYTE *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v12;
  *(_BYTE *)(a1 + 80) = 1;
  *(double *)(a1 + 88) = a2;
  *(double *)(a1 + 96) = a3;
  *(_BYTE *)(a1 + 104) = 0;
  *(_QWORD *)(a1 + 112) = v7;
  sub_209EEAFF0();
  swift_retain();
  swift_retain_n();
  return v14;
}

id RUIImageView.resizable()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  id v12;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_BYTE *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 32);
  v12 = *(id *)(v1 + 24);
  v5 = *(_QWORD *)(v1 + 40);
  v6 = *(_BYTE *)(v1 + 48);
  v7 = *(_QWORD *)(v1 + 56);
  v8 = *(_BYTE *)(v1 + 64);
  v9 = *(_QWORD *)(v1 + 72);
  v10 = *(_BYTE *)(v1 + 104);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v12;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 56) = v7;
  *(_BYTE *)(a1 + 64) = v8;
  *(_QWORD *)(a1 + 72) = v9;
  *(_BYTE *)(a1 + 80) = 1;
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(v1 + 88);
  *(_BYTE *)(a1 + 104) = v10;
  *(_QWORD *)(a1 + 112) = v4;
  sub_209EEAFF0();
  swift_retain();
  swift_retain_n();
  return v12;
}

uint64_t RUIImageView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  char v9;
  void *v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  char *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  int v43;
  int v44;
  char *v45;
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  __int128 v55[2];
  __int128 v56;
  __int128 v57;
  __int128 v58;
  _OWORD v59[2];
  uint64_t v60;
  _BYTE v61[24];
  _BYTE v62[24];
  uint64_t v63;
  __int128 v64;
  __int16 v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  char v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  char v74;
  __int128 v75;
  char v76;
  uint64_t v77;

  v54 = a1;
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBC68);
  MEMORY[0x24BDAC7A8](v52, v2);
  v50 = (uint64_t)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBC70);
  MEMORY[0x24BDAC7A8](v51, v4);
  v53 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_OWORD *)(v1 + 48);
  v56 = *(_OWORD *)(v1 + 32);
  v57 = v6;
  v7 = *(_OWORD *)(v1 + 80);
  v58 = *(_OWORD *)(v1 + 64);
  v59[0] = v7;
  v59[1] = *(_OWORD *)(v1 + 96);
  v60 = *(_QWORD *)(v1 + 112);
  v8 = *(_OWORD *)(v1 + 16);
  v55[0] = *(_OWORD *)v1;
  v55[1] = v8;
  v9 = v8;
  v10 = (void *)*((_QWORD *)&v8 + 1);
  v11 = *((_QWORD *)&v56 + 1);
  v12 = v57;
  v13 = *((_QWORD *)&v57 + 1);
  v14 = v58;
  v15 = (char *)v59 + 8;
  v66 = v55[0];
  LOBYTE(v67) = v8 & 1;
  v68 = *((_QWORD *)&v8 + 1);
  v69 = v56;
  v70 = v57 & 1;
  v71 = *((_QWORD *)&v57 + 1);
  v72 = v58 & 1;
  v73 = *((_QWORD *)&v58 + 1);
  v74 = v7 & 1;
  v75 = *(_OWORD *)((char *)v59 + 8);
  v76 = BYTE8(v59[1]) & 1;
  v77 = v60;
  sub_209F1A730((uint64_t *)&v64);
  v16 = v64;
  if (v10)
  {
    v41 = v13;
    v42 = v11;
    v45 = (char *)v59 + 8;
    v43 = v12;
    v44 = v14;
    if ((_QWORD)v64)
    {
      v17 = v10;
      swift_retain();
      sub_209F28C64();
    }
    v19 = v10;
    v49 = 0;
    v64 = 0uLL;
    LOBYTE(v65) = 0;
    sub_209F1CD18(0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBCE8);
    sub_209F1CB4C();
    sub_209F66F64();
    v20 = v66;
    v21 = v67;
    v64 = v66;
    v65 = v67;
    sub_209F1CD44(v66);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBCD8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBD18);
    sub_209F1CAE8();
    sub_209F1CC34();
    sub_209F66F64();
    swift_release();

    sub_209F1CD48(v20, *((_QWORD *)&v20 + 1), v21);
    sub_209F1CD4C(0);
    v23 = *((_QWORD *)&v66 + 1);
    v22 = v66;
    v24 = v67;
    v25 = BYTE1(v67);
  }
  else
  {
    if ((v9 & 1) == 0)
    {
      v64 = (unint64_t)v64;
      v65 = 256;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBCD8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBD18);
      sub_209F1CAE8();
      sub_209F1CC34();
      sub_209F66F64();
      v23 = *((_QWORD *)&v66 + 1);
      v22 = v66;
      v24 = v67;
      v25 = BYTE1(v67);
      goto LABEL_12;
    }
    v45 = (char *)v59 + 8;
    v43 = v12;
    v44 = v14;
    v42 = v11;
    if ((_QWORD)v64)
    {
      swift_retain();
      v18 = sub_209F67150();
    }
    else
    {
      v18 = 0;
    }
    *(_QWORD *)&v64 = v16;
    *((_QWORD *)&v64 + 1) = v18;
    LOBYTE(v65) = 1;
    sub_209F1CD18(v16);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBCE8);
    sub_209F1CB4C();
    sub_209F66F64();
    v26 = v66;
    v27 = v67;
    v64 = v66;
    v65 = v67;
    sub_209F1CD44(v66);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBCD8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBD18);
    sub_209F1CAE8();
    sub_209F1CC34();
    sub_209F66F64();
    swift_release();
    sub_209F1CD48(v26, *((_QWORD *)&v26 + 1), v27);
    sub_209F1CD4C(v16);
    v23 = *((_QWORD *)&v66 + 1);
    v22 = v66;
    v24 = v67;
    v25 = BYTE1(v67);
  }
  v15 = v45;
  LOBYTE(v12) = v43;
  LOBYTE(v14) = v44;
LABEL_12:
  v48 = v23;
  v49 = v22;
  v46 = v25;
  v47 = v24;
  if ((v12 & 1) != 0)
  {
    sub_209EF1E0C((uint64_t)v15, (uint64_t)v61, &qword_2545BBC78);
    sub_209EF1E0C((uint64_t)v61, (uint64_t)&v64, &qword_2545BBC78);
    if ((v14 & 1) == 0)
      goto LABEL_17;
  }
  else if ((v14 & 1) == 0)
  {
    goto LABEL_17;
  }
  sub_209EF1E0C((uint64_t)v15, (uint64_t)v62, &qword_2545BBC78);
  sub_209EF1E0C((uint64_t)v62, (uint64_t)&v63, &qword_2545BBC78);
LABEL_17:
  sub_209F67228();
  sub_209F66D84();
  v28 = v66;
  v29 = BYTE8(v66);
  v30 = v67;
  v31 = v68;
  v32 = v69;
  v33 = sub_209F6721C();
  v35 = v34;
  v36 = v50;
  sub_209F1B5A4(v55, v50);
  v37 = (uint64_t *)(v36 + *(int *)(v52 + 36));
  *v37 = v33;
  v37[1] = v35;
  v38 = (uint64_t)v53;
  sub_209EE3528(v36, (uint64_t)&v53[*(int *)(v51 + 36)], &qword_2545BBC68);
  v39 = v48;
  *(_QWORD *)v38 = v49;
  *(_QWORD *)(v38 + 8) = v39;
  *(_BYTE *)(v38 + 16) = v47;
  *(_BYTE *)(v38 + 17) = v46;
  *(_QWORD *)(v38 + 24) = 0;
  *(_WORD *)(v38 + 32) = 1;
  *(_QWORD *)(v38 + 40) = v28;
  *(_BYTE *)(v38 + 48) = v29;
  *(_QWORD *)(v38 + 56) = v30;
  *(_BYTE *)(v38 + 64) = v31;
  *(_OWORD *)(v38 + 72) = v32;
  sub_209EE017C(v36, &qword_2545BBC68);
  return sub_209EF1E0C(v38, v54, &qword_2545BBC70);
}

uint64_t sub_209F1B5A4@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  void *v46;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  char v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  __int128 v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  uint64_t v109;

  v79 = sub_209F66FA0();
  v78 = *(_QWORD *)(v79 - 8);
  MEMORY[0x24BDAC7A8](v79, v4);
  v77 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBD20);
  v83 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBD28);
  MEMORY[0x24BDAC7A8](v10, v11);
  v80 = (uint64_t)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBD30);
  MEMORY[0x24BDAC7A8](v82, v13);
  v15 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBD38);
  MEMORY[0x24BDAC7A8](v81, v16);
  v18 = (char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBD40);
  MEMORY[0x24BDAC7A8](v84, v19);
  v21 = (char *)&v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBD48);
  v23 = *(_QWORD *)(v22 - 8);
  v25 = MEMORY[0x24BDAC7A8](v22, v24);
  v27 = (char *)&v65 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25, v28);
  v85 = (uint64_t)&v65 - v29;
  v30 = a1[3];
  v106 = a1[2];
  v107 = v30;
  v108 = a1[4];
  v31 = a1[1];
  v104 = *a1;
  v105 = v31;
  sub_209F4C028(&v94);
  v32 = *((_QWORD *)&v98 + 1);
  if (!*((_QWORD *)&v98 + 1))
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56))(a2, 1, 1, v22);
  v71 = v21;
  v73 = v27;
  v74 = v23;
  v75 = v22;
  v76 = a2;
  v33 = v94;
  LOBYTE(v104) = v94 & 1;
  *((_QWORD *)&v104 + 1) = v95;
  *(_QWORD *)&v105 = v96;
  BYTE8(v105) = v97 & 1;
  v106 = v98;
  *(_QWORD *)&v107 = v99;
  BYTE8(v107) = v100 & 1;
  *(_QWORD *)&v108 = v101;
  BYTE8(v108) = v102 & 1;
  v109 = v103;
  v67 = v103;
  v88 = v102;
  v68 = v101;
  v90 = v95;
  v89 = v96;
  v86 = v97;
  v70 = (void *)v98;
  v69 = v99;
  v87 = v100;
  sub_209F19F68(v94, v95, v96, v97, (void *)v98, *((uint64_t *)&v98 + 1));
  v72 = v33;
  if ((v33 & 1) != 0)
  {
    sub_209F1CCD4();
    swift_retain();
    v66 = sub_209F67210();
    v35 = sub_209F67228();
    v37 = v40;
    v41 = v77;
    sub_209F66F94();
    v42 = v78;
    v43 = v79;
    (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v9, v41, v79);
    *(_WORD *)&v9[*(int *)(v6 + 56)] = 256;
    (*(void (**)(char *, uint64_t))(v42 + 8))(v41, v43);
    v38 = v80;
    sub_209EF1E0C((uint64_t)v9, v80, &qword_2545BBD20);
    v34 = 0;
  }
  else
  {
    sub_209F1CC90();
    swift_retain();
    v66 = sub_209F67210();
    v34 = 1;
    v35 = sub_209F67228();
    v37 = v36;
    v38 = v80;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v83 + 56))(v38, v34, 1, v6);
  LOBYTE(v94) = v86 & 1;
  v93 = v87 & 1;
  v92 = v88 & 1;
  v91 = 0;
  sub_209EF1E0C(v38, (uint64_t)v15, &qword_2545BBD28);
  v44 = (uint64_t *)&v15[*(int *)(v82 + 36)];
  *v44 = v35;
  v44[1] = v37;
  sub_209EE3528((uint64_t)v15, (uint64_t)&v18[*(int *)(v81 + 36)], &qword_2545BBD30);
  v45 = v89;
  *(_QWORD *)v18 = v90;
  *((_QWORD *)v18 + 1) = v45;
  v18[16] = v94;
  v46 = v70;
  *((_QWORD *)v18 + 3) = v70;
  *((_QWORD *)v18 + 4) = v32;
  *((_QWORD *)v18 + 5) = v69;
  v18[48] = v93;
  *((_QWORD *)v18 + 7) = v68;
  v18[64] = v92;
  *((_QWORD *)v18 + 9) = v67;
  v18[80] = 1;
  __asm { FMOV            V0.2D, #14.0 }
  *(_OWORD *)(v18 + 88) = _Q0;
  v18[104] = v91;
  v52 = v66;
  *((_QWORD *)v18 + 14) = v32;
  *((_QWORD *)v18 + 15) = v52;
  *((_WORD *)v18 + 64) = 256;
  sub_209EE017C((uint64_t)v15, &qword_2545BBD30);
  v53 = sub_209F67228();
  v55 = v54;
  v56 = (uint64_t)v71;
  v57 = (uint64_t)&v71[*(int *)(v84 + 36)];
  sub_209F1BCC0(&v104, v57);
  v58 = (uint64_t *)(v57 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545BBD58) + 36));
  *v58 = v53;
  v58[1] = v55;
  sub_209EE3528((uint64_t)v18, v56, &qword_2545BBD38);
  sub_209F19FC0(v72, v90, v89, v86, v46, v32);
  sub_209EE017C((uint64_t)v18, &qword_2545BBD38);
  v59 = (uint64_t)v73;
  sub_209EE3528(v56, (uint64_t)v73, &qword_2545BBD40);
  v60 = v75;
  *(_OWORD *)(v59 + *(int *)(v75 + 36)) = xmmword_209F79210;
  sub_209EE017C(v56, &qword_2545BBD40);
  v61 = v59;
  v62 = v85;
  sub_209EF1E0C(v61, v85, &qword_2545BBD48);
  v63 = v62;
  v64 = v76;
  sub_209EF1E0C(v63, v76, &qword_2545BBD48);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v74 + 56))(v64, 0, 1, v60);
}

uint64_t sub_209F1BCC0@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  _QWORD v25[6];

  v4 = sub_209F66FA0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBD68);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*a1 & 1) == 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a2, 1, 1, v9);
  sub_209F66F94();
  sub_209F66D48();
  v15 = v25[1];
  v16 = v25[3];
  v17 = v25[4];
  v18 = v25[5];
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBD70);
  v20 = v25[2];
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(&v13[*(int *)(v19 + 52)], v8, v4);
  *(_QWORD *)v13 = v15;
  *((_QWORD *)v13 + 1) = v20;
  *((_QWORD *)v13 + 2) = v16;
  *((_QWORD *)v13 + 3) = v17;
  *((_QWORD *)v13 + 4) = v18;
  *(_WORD *)&v13[*(int *)(v19 + 56)] = 256;
  v21 = sub_209F67228();
  v23 = v22;
  v24 = (uint64_t *)&v13[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545BBD78) + 36)];
  *v24 = v21;
  v24[1] = v23;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  sub_209EF1E0C((uint64_t)v13, a2, &qword_2545BBD68);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(a2, 0, 1, v9);
}

__n128 RUIImageView.init(from:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  unint64_t v5;
  __n128 result;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  __int128 v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  unsigned __int8 v22;
  unsigned int v23;
  _QWORD v24[5];
  __int128 v25;
  char v26;
  __n128 v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  __int128 v34;
  char v35;
  uint64_t v36;

  sub_209EE0E3C(a1, (uint64_t)v24);
  v21 = 5;
  v20 = 5;
  v19 = 5;
  v18 = 5;
  v17 = 5;
  v5 = sub_209F1BFCC();
  RUIImage.Keys.init(image:systemImage:tintColor:imageWidth:imageHeight:)((uint64_t)&v21, (uint64_t)&v20, (uint64_t)&v19, (uint64_t)&v18, (uint64_t)&v17, (uint64_t)&type metadata for RUIImage.DefaultCodingKeys, v5, (uint64_t)&v22);
  sub_209F1C010(v24, v22 | ((unint64_t)v23 << 8), (uint64_t)&v25);
  __swift_destroy_boxed_opaque_existential_1(a1);
  if (!v2)
  {
    v7 = v26;
    result = v27;
    v8 = v28;
    v9 = v29;
    v10 = v30;
    v11 = v31;
    v12 = v32;
    v13 = v33;
    v14 = v35;
    v15 = v36;
    v16 = v34;
    *(_OWORD *)a2 = v25;
    *(_BYTE *)(a2 + 16) = v7;
    *(__n128 *)(a2 + 24) = result;
    *(_QWORD *)(a2 + 40) = v8;
    *(_BYTE *)(a2 + 48) = v9;
    *(_QWORD *)(a2 + 56) = v10;
    *(_BYTE *)(a2 + 64) = v11;
    *(_QWORD *)(a2 + 72) = v12;
    *(_BYTE *)(a2 + 80) = v13;
    *(_OWORD *)(a2 + 88) = v16;
    *(_BYTE *)(a2 + 104) = v14;
    *(_QWORD *)(a2 + 112) = v15;
  }
  return result;
}

unint64_t sub_209F1BFCC()
{
  unint64_t result;

  result = qword_2545BBC80;
  if (!qword_2545BBC80)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7B270, &type metadata for RUIImage.DefaultCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BBC80);
  }
  return result;
}

uint64_t sub_209F1C010@<X0>(_QWORD *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  char v4;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  _QWORD v28[5];
  uint64_t v29;
  id v30;
  char v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  _BYTE v39[5];

  v4 = a2;
  v7 = a2 >> 8;
  v8 = a2 >> 16;
  v9 = a2 >> 24;
  v10 = HIDWORD(a2);
  sub_209EE0E3C((uint64_t)a1, (uint64_t)v28);
  v39[0] = v4;
  v39[1] = v7;
  v39[2] = v8;
  v39[3] = v9;
  v39[4] = v10;
  v11 = sub_209F1BFCC();
  v12 = sub_209EE06BC();
  RUIImage.init<A>(from:keys:decodeBadge:)(v28, (uint64_t)v39, v12 & 1, (uint64_t)&type metadata for RUIImage.DefaultCodingKeys, v11, &v29);
  if (!v3)
  {
    v13 = v29;
    v20 = v30;
    v14 = v31;
    v15 = v32;
    v27 = v34;
    v26 = v35;
    v25 = v36;
    v24 = v37;
    v22 = v38;
    v21 = v33;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_209EEAFF0();
    swift_retain();
    v23 = v15;
    swift_retain();
    Decoder.ruiDecodingContext.getter();
    v16 = v29;

    v29 = v13;
    v30 = v20;
    v31 = v14;
    v32 = v15;
    v33 = v21;
    v34 = v27;
    v35 = v26;
    v36 = v25;
    v37 = v24;
    v38 = v22;
    v17 = sub_209EDFDCC();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)v16 + 160))(&v29, v17, v18);
    swift_unknownObjectRelease();
    sub_209EEB098();
    swift_release();
    swift_release();

    *(_QWORD *)a3 = v13;
    *(_QWORD *)(a3 + 8) = v20;
    *(_BYTE *)(a3 + 16) = v14;
    *(_QWORD *)(a3 + 24) = v15;
    *(_QWORD *)(a3 + 32) = v21;
    *(_QWORD *)(a3 + 40) = v27;
    *(_BYTE *)(a3 + 48) = v26;
    *(_QWORD *)(a3 + 56) = v25;
    *(_BYTE *)(a3 + 64) = v24;
    *(_QWORD *)(a3 + 72) = v22;
    *(_BYTE *)(a3 + 80) = 0;
    *(_QWORD *)(a3 + 88) = 0;
    *(_QWORD *)(a3 + 96) = 0;
    *(_BYTE *)(a3 + 104) = 1;
    *(_QWORD *)(a3 + 112) = v16;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t RUIImageView.init<A>(from:keys:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  _QWORD *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  char v33;
  unsigned __int8 v34;
  unsigned __int8 v35;
  char v36;
  char v37;
  id v38;
  _QWORD v40[3];
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  void *v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  _QWORD v52[5];
  uint64_t v53;
  id v54;
  char v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  unsigned __int8 v59;
  uint64_t v60;
  unsigned __int8 v61;
  uint64_t v62;
  char v63;
  char v64;
  unsigned __int8 v65;
  unsigned __int8 v66;
  char v67;
  int v68;

  v11 = type metadata accessor for RUIImage.Keys(0, a3, a4, a4);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)v40 - v14;
  sub_209EE0E3C(a1, (uint64_t)v52);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a2, v11);
  v16 = sub_209EE06BC();
  RUIImage.init<A>(from:keys:decodeBadge:)(v52, (uint64_t)v15, v16 & 1, a3, a4, &v53);
  if (v5)
  {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a2, v11);
    v17 = a1;
  }
  else
  {
    v49 = a2;
    v18 = v53;
    v19 = v54;
    v20 = (_QWORD *)a1;
    v22 = v56;
    v21 = v57;
    v44 = v58;
    v42 = v59;
    v43 = v60;
    v68 = v61;
    v23 = v62;
    v67 = v55;
    v41 = v11;
    v24 = v55;
    v66 = v59;
    v65 = v61;
    v63 = 1;
    v64 = 0;
    v50 = v20;
    v51 = 0;
    v25 = v20[3];
    v40[2] = v20[4];
    v40[1] = __swift_project_boxed_opaque_existential_1(v20, v25);
    v47 = v19;
    sub_209EEAFF0();
    v45 = v23;
    swift_retain();
    v48 = v22;
    v26 = v22;
    v46 = v21;
    swift_retain();
    Decoder.ruiDecodingContext.getter();
    v27 = v53;

    v53 = v18;
    v54 = v19;
    v55 = v24;
    v56 = v22;
    v57 = v21;
    v28 = v44;
    v58 = v44;
    v59 = v42;
    v29 = v43;
    v60 = v43;
    v61 = v68;
    v62 = v23;
    v30 = sub_209EDFDCC();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)v27 + 160))(&v53, v30, v31);
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v49, v41);
    v32 = v56;
    sub_209EEB098();
    swift_release();

    swift_release();
    v33 = v67;
    v34 = v66;
    v35 = v65;
    v36 = v64;
    v37 = v63;
    v38 = v47;
    *(_QWORD *)a5 = v18;
    *(_QWORD *)(a5 + 8) = v38;
    *(_BYTE *)(a5 + 16) = v33;
    *(_QWORD *)(a5 + 24) = v48;
    *(_QWORD *)(a5 + 32) = v46;
    *(_QWORD *)(a5 + 40) = v28;
    *(_BYTE *)(a5 + 48) = v34;
    *(_QWORD *)(a5 + 56) = v29;
    *(_BYTE *)(a5 + 64) = v35;
    *(_QWORD *)(a5 + 72) = v45;
    *(_BYTE *)(a5 + 80) = v36;
    *(_QWORD *)(a5 + 88) = 0;
    *(_QWORD *)(a5 + 96) = 0;
    *(_BYTE *)(a5 + 104) = v37;
    *(_QWORD *)(a5 + 112) = v27;
    v17 = (uint64_t)v50;
  }
  return __swift_destroy_boxed_opaque_existential_1(v17);
}

uint64_t sub_209F1C558()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_209F1C568@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  *(_QWORD *)&result = RUIImageView.init(from:)(a1, a2).n128_u64[0];
  return result;
}

uint64_t destroy for RUIImageView(uint64_t a1)
{
  sub_209EEB098();

  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for RUIImageView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  void *v7;
  uint64_t v8;
  id v9;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_209EEAFF0();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  v7 = (void *)a2[3];
  v8 = a2[4];
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = a2[5];
  *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
  *(_QWORD *)(a1 + 56) = a2[7];
  *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
  *(_QWORD *)(a1 + 72) = a2[9];
  *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 11);
  *(_BYTE *)(a1 + 104) = *((_BYTE *)a2 + 104);
  *(_QWORD *)(a1 + 112) = a2[14];
  v9 = v7;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for RUIImageView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  __int128 v11;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_209EEAFF0();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  sub_209EEB098();
  v7 = *(void **)(a1 + 24);
  v8 = (void *)a2[3];
  *(_QWORD *)(a1 + 24) = v8;
  v9 = v8;

  *(_QWORD *)(a1 + 32) = a2[4];
  swift_retain();
  swift_release();
  v10 = a2[5];
  *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
  *(_QWORD *)(a1 + 40) = v10;
  LOBYTE(v10) = *((_BYTE *)a2 + 64);
  *(_QWORD *)(a1 + 56) = a2[7];
  *(_BYTE *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = a2[9];
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
  v11 = *(_OWORD *)(a2 + 11);
  *(_BYTE *)(a1 + 104) = *((_BYTE *)a2 + 104);
  *(_OWORD *)(a1 + 88) = v11;
  *(_QWORD *)(a1 + 112) = a2[14];
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy120_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for RUIImageView(uint64_t a1, uint64_t a2)
{
  char v4;

  v4 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v4;
  sub_209EEB098();

  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_release();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for RUIImageView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 120))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RUIImageView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 120) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RUIImageView()
{
  return &type metadata for RUIImageView;
}

unint64_t sub_209F1C910()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2545BBC88;
  if (!qword_2545BBC88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BBC90);
    v2[0] = sub_209F1C994();
    v2[1] = sub_209EE83E8(&qword_2545BBCB8, &qword_2545BBC68, MEMORY[0x24BDEDC08]);
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2545BBC88);
  }
  return result;
}

unint64_t sub_209F1C994()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2545BBC98;
  if (!qword_2545BBC98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BBCA0);
    v2[0] = sub_209F1CA00();
    v2[1] = MEMORY[0x24BDEBED8];
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2545BBC98);
  }
  return result;
}

unint64_t sub_209F1CA00()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2545BBCA8;
  if (!qword_2545BBCA8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BBCB0);
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = MEMORY[0x24BDEEC48];
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2545BBCA8);
  }
  return result;
}

unint64_t sub_209F1CA7C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2545BBCC0;
  if (!qword_2545BBCC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BBCC8);
    v2[0] = sub_209F1CAE8();
    v2[1] = sub_209F1CC34();
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BDEF3D8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2545BBCC0);
  }
  return result;
}

unint64_t sub_209F1CAE8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2545BBCD0;
  if (!qword_2545BBCD0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BBCD8);
    v2[0] = sub_209F1CB4C();
    v2[1] = v2[0];
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BDEF3D8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2545BBCD0);
  }
  return result;
}

unint64_t sub_209F1CB4C()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_2545BBCE0;
  if (!qword_2545BBCE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BBCE8);
    v2 = sub_209F1CBB0();
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BDF5580], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2545BBCE0);
  }
  return result;
}

unint64_t sub_209F1CBB0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_2545BBCF0;
  if (!qword_2545BBCF0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BBCF8);
    v2 = sub_209EE83E8(&qword_2545BBD00, &qword_2545BBD08, MEMORY[0x24BDF0718]);
    v3[0] = MEMORY[0x24BDF4768];
    v3[1] = v2;
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BDED300], v1, v3);
    atomic_store(result, (unint64_t *)&qword_2545BBCF0);
  }
  return result;
}

unint64_t sub_209F1CC34()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2545BBD10;
  if (!qword_2545BBD10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BBD18);
    v2 = MEMORY[0x24BDF4768];
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BDF5580], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2545BBD10);
  }
  return result;
}

unint64_t sub_209F1CC90()
{
  unint64_t result;

  result = qword_2545BBD50;
  if (!qword_2545BBD50)
  {
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BDF52D8], MEMORY[0x24BDF5300]);
    atomic_store(result, (unint64_t *)&qword_2545BBD50);
  }
  return result;
}

unint64_t sub_209F1CCD4()
{
  unint64_t result;

  result = qword_2545BBD60;
  if (!qword_2545BBD60)
  {
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BDF4438], MEMORY[0x24BDF4460]);
    atomic_store(result, (unint64_t *)&qword_2545BBD60);
  }
  return result;
}

uint64_t sub_209F1CD18(uint64_t result)
{
  if (result)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_209F1CD4C(uint64_t result)
{
  if (result)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_209F1CD78()
{
  uint64_t v0;

  sub_209EEB098();

  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_209F1CDC0()
{
  uint64_t v0;

  return sub_209F1AB30(v0 + 16);
}

unint64_t sub_209F1CDC8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2545BBD88;
  if (!qword_2545BBD88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BBD80);
    v2[0] = sub_209EE83E8(&qword_2545BBD90, &qword_2545BBD98, MEMORY[0x24BDF4758]);
    v2[1] = MEMORY[0x24BDF0908];
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2545BBD88);
  }
  return result;
}

uint64_t sub_209F1CE4C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 32))
    swift_release();
  if (*(_QWORD *)(v0 + 48))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_209F1CE88(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 24);
  sub_209EEAFF0();
  swift_retain();
  swift_retain();
  v3 = v2;
  swift_retain();
  return a1;
}

uint64_t sub_209F1CEF0()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  sub_209EEB098();

  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_209F1CF40()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_209EE061C;
  return sub_209F1AC30((uint64_t)v2, v3, v4, v0 + 32);
}

uint64_t sub_209F1CF8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB098);
  MEMORY[0x24BDAC7A8](v0, v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_209F677B0();
  __swift_allocate_value_buffer(v4, qword_2545C6EF0);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_2545C6EF0);
  sub_209F677A4();
  v6 = *(_QWORD *)(v4 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v3, 1, v4);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(v5, v3, v4);
  __break(1u);
  return result;
}

_OWORD *sub_209F1D074@<X0>(uint64_t *a1@<X8>)
{
  int64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  void (*v47)(char *, int64_t, uint64_t);
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (**v53)(char *, uint64_t, uint64_t);
  char *v54;
  char *v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  void (*v60)(char *, char *, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  void (*v65)(char *, uint64_t);
  uint64_t v66;
  uint64_t *v67;
  _OWORD *result;
  int v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t *v82;
  _OWORD *v83;
  unint64_t v84;
  int64_t v85;
  unint64_t v86;
  int64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t *v95;
  void (**v96)(char *, uint64_t, uint64_t);
  char *v97;
  void (*v98)(void);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t *v102;
  char *v103;
  void (*v104)(char *, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  char v106;
  unint64_t v107;
  uint64_t v108;
  _BOOL8 v109;
  uint64_t v110;
  char v111;
  unint64_t v112;
  char v113;
  unint64_t v114;
  char v115;
  char v116;
  char v117;
  uint64_t *v118;
  uint64_t v119;
  BOOL v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t *v123;
  char *v124;
  int64_t v125;
  char *v126;
  uint64_t v127;
  char *v128;
  void (**v129)(char *, uint64_t, uint64_t);
  char *v130;
  char *v131;
  uint64_t *v132;
  uint64_t *v133;
  uint64_t v134;
  uint64_t v135;
  void (*v136)(char *, int64_t, uint64_t);
  uint64_t *v137;
  _QWORD *v138;
  uint64_t v139;
  _OWORD v140[2];
  __int128 v141;
  uint64_t v142;

  v2 = v1;
  v137 = a1;
  v135 = sub_209F66BA4();
  v129 = *(void (***)(char *, uint64_t, uint64_t))(v135 - 8);
  MEMORY[0x24BDAC7A8](v135, v3);
  v128 = (char *)&v122 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBDC8);
  v6 = MEMORY[0x24BDAC7A8](v134, v5);
  v133 = (uint64_t *)((char *)&v122 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = MEMORY[0x24BDAC7A8](v6, v8);
  v132 = (uint64_t *)((char *)&v122 - v10);
  v12 = MEMORY[0x24BDAC7A8](v9, v11);
  v123 = (uint64_t *)((char *)&v122 - v13);
  MEMORY[0x24BDAC7A8](v12, v14);
  v131 = (char *)&v122 - v15;
  v16 = sub_209F66BF8();
  v17 = *(_QWORD *)(v16 - 8);
  v19 = MEMORY[0x24BDAC7A8](v16, v18);
  v126 = (char *)&v122 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v19, v21);
  v24 = (uint64_t *)((char *)&v122 - v23);
  v26 = MEMORY[0x24BDAC7A8](v22, v25);
  v124 = (char *)&v122 - v27;
  v29 = MEMORY[0x24BDAC7A8](v26, v28);
  v31 = (char *)&v122 - v30;
  v33 = MEMORY[0x24BDAC7A8](v29, v32);
  v35 = (char *)&v122 - v34;
  v37 = MEMORY[0x24BDAC7A8](v33, v36);
  v39 = (char *)&v122 - v38;
  v41 = MEMORY[0x24BDAC7A8](v37, v40);
  v43 = (uint64_t *)((char *)&v122 - v42);
  MEMORY[0x24BDAC7A8](v41, v44);
  v46 = (char *)&v122 - v45;
  v47 = *(void (**)(char *, int64_t, uint64_t))(v17 + 16);
  v125 = v2;
  v47((char *)&v122 - v45, v2, v16);
  v48 = (*(uint64_t (**)(char *, uint64_t))(v17 + 88))(v46, v16);
  if (v48 == *MEMORY[0x24BE5F388])
  {
    v47((char *)v43, (int64_t)v46, v16);
    (*(void (**)(uint64_t *, uint64_t))(v17 + 96))(v43, v16);
    v49 = *v43;
    v50 = *(_QWORD *)(v49 + 24);
    v138 = *(_QWORD **)(v49 + 16);
    v139 = v50;
    swift_bridgeObjectRetain();
    if (swift_dynamicCast())
    {
      sub_209EE3510(v140, &v141);
      swift_release();
      swift_bridgeObjectRelease();
LABEL_20:
      (*(void (**)(char *, uint64_t))(v17 + 8))(v46, v16);
      return sub_209EE3510(&v141, v137);
    }
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  v136 = v47;
  v127 = v17;
  if (v48 == *MEMORY[0x24BE5F338])
  {
    v47 = v136;
    v136(v31, (int64_t)v46, v16);
    (*(void (**)(char *, uint64_t))(v127 + 96))(v31, v16);
    v138 = *(_QWORD **)(*(_QWORD *)v31 + 16);
    if (swift_dynamicCast())
    {
      sub_209EE3510(v140, &v141);
      swift_release();
      v17 = v127;
      goto LABEL_20;
    }
    swift_release();
    v17 = v127;
    goto LABEL_12;
  }
  if (v48 == *MEMORY[0x24BE5F378])
  {
    v136(v35, (int64_t)v46, v16);
    v17 = v127;
    (*(void (**)(char *, uint64_t))(v127 + 96))(v35, v16);
    v138 = *(_QWORD **)(*(_QWORD *)v35 + 16);
    if (!swift_dynamicCast())
    {
      swift_release();
      v47 = v136;
LABEL_12:
      v51 = v135;
      goto LABEL_13;
    }
LABEL_19:
    sub_209EE3510(v140, &v141);
    swift_release();
    goto LABEL_20;
  }
  v17 = v127;
  if (v48 == *MEMORY[0x24BE5F340])
  {
    v47 = v136;
    v136(v39, (int64_t)v46, v16);
    (*(void (**)(char *, uint64_t))(v17 + 96))(v39, v16);
    LOBYTE(v138) = *(_BYTE *)(*(_QWORD *)v39 + 16);
    v69 = swift_dynamicCast();
    v51 = v135;
    if (!v69)
    {
      swift_release();
      goto LABEL_13;
    }
    goto LABEL_19;
  }
  v51 = v135;
  v47 = v136;
  if (v48 == *MEMORY[0x24BE5F360])
  {
    v70 = v124;
    v136(v124, (int64_t)v46, v16);
    (*(void (**)(char *, uint64_t))(v17 + 96))(v70, v16);
    v71 = sub_209F1DD1C(*(_QWORD *)(*(_QWORD *)v70 + 16));
    v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBDD8);
    v73 = v137;
    v137[3] = v72;
    *v73 = v71;
LABEL_68:
    swift_release();
    return (_OWORD *)(*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v46, v16);
  }
  if (v48 != *MEMORY[0x24BE5F358])
  {
LABEL_13:
    v130 = v46;
    v52 = sub_209F01578();
    v53 = v129;
    v54 = v128;
    v129[2](v128, v52, v51);
    v55 = v126;
    v47(v126, v125, v16);
    v56 = sub_209F66B8C();
    v57 = sub_209F67534();
    if (os_log_type_enabled(v56, v57))
    {
      v58 = (uint8_t *)swift_slowAlloc();
      v59 = swift_slowAlloc();
      v60 = (void (*)(char *, char *, uint64_t))v47;
      v61 = v17;
      v62 = v59;
      *(_QWORD *)&v141 = v59;
      *(_DWORD *)v58 = 136315138;
      v60(v124, v55, v16);
      v63 = sub_209F6730C();
      *(_QWORD *)&v140[0] = sub_209EE75A0(v63, v64, (uint64_t *)&v141);
      sub_209F675E8();
      swift_bridgeObjectRelease();
      v65 = *(void (**)(char *, uint64_t))(v61 + 8);
      v65(v55, v16);
      _os_log_impl(&dword_209E87000, v56, v57, "unkown ruiPostbackValue for DecodableState: %s", v58, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x20BD1DC00](v62, -1, -1);
      MEMORY[0x20BD1DC00](v58, -1, -1);

      ((void (*)(char *, uint64_t))v129[1])(v128, v135);
    }
    else
    {
      v66 = v51;
      v65 = *(void (**)(char *, uint64_t))(v17 + 8);
      v65(v55, v16);

      ((void (*)(char *, uint64_t))v53[1])(v54, v66);
    }
    v67 = v137;
    *(_OWORD *)v137 = 0u;
    *((_OWORD *)v67 + 1) = 0u;
    return (_OWORD *)((uint64_t (*)(char *, uint64_t))v65)(v130, v16);
  }
  v136((char *)v24, (int64_t)v46, v16);
  (*(void (**)(uint64_t *, uint64_t))(v17 + 96))(v24, v16);
  v122 = *v24;
  v74 = *(char **)(v122 + 16);
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBDD0);
  v137[3] = v75;
  v76 = *((_QWORD *)v74 + 8);
  v124 = v74 + 64;
  v77 = 1 << v74[32];
  v78 = -1;
  if (v77 < 64)
    v78 = ~(-1 << v77);
  v79 = v78 & v76;
  v125 = (unint64_t)(v77 + 63) >> 6;
  v126 = v74;
  swift_bridgeObjectRetain();
  v80 = 0;
  v81 = (_QWORD *)MEMORY[0x24BEE4B00];
  v82 = v123;
  v130 = v46;
  while (1)
  {
    if (v79)
    {
      v128 = (char *)((v79 - 1) & v79);
      v135 = v80;
      v84 = __clz(__rbit64(v79)) | (v80 << 6);
      goto LABEL_49;
    }
    v85 = v80 + 1;
    if (__OFADD__(v80, 1))
      goto LABEL_70;
    if (v85 >= v125)
    {
LABEL_67:
      swift_release();
      *v137 = (uint64_t)v81;
      goto LABEL_68;
    }
    v86 = *(_QWORD *)&v124[8 * v85];
    v87 = v80 + 1;
    if (!v86)
    {
      v87 = v80 + 2;
      if (v80 + 2 >= v125)
        goto LABEL_67;
      v86 = *(_QWORD *)&v124[8 * v87];
      if (!v86)
      {
        v87 = v80 + 3;
        if (v80 + 3 >= v125)
          goto LABEL_67;
        v86 = *(_QWORD *)&v124[8 * v87];
        if (!v86)
        {
          v87 = v80 + 4;
          if (v80 + 4 >= v125)
            goto LABEL_67;
          v86 = *(_QWORD *)&v124[8 * v87];
          if (!v86)
            break;
        }
      }
    }
LABEL_48:
    v128 = (char *)((v86 - 1) & v86);
    v135 = v87;
    v84 = __clz(__rbit64(v86)) + (v87 << 6);
LABEL_49:
    v89 = (uint64_t *)(*((_QWORD *)v126 + 6) + 16 * v84);
    v91 = *v89;
    v90 = v89[1];
    v92 = v134;
    v93 = v131;
    v47(&v131[*(int *)(v134 + 48)], *((_QWORD *)v126 + 7) + *(_QWORD *)(v17 + 72) * v84, v16);
    *v93 = v91;
    v93[1] = v90;
    sub_209EF1E0C((uint64_t)v93, (uint64_t)v82, &qword_2545BBDC8);
    v94 = *(int *)(v92 + 48);
    v95 = v132;
    v96 = (void (**)(char *, uint64_t, uint64_t))((char *)v132 + v94);
    v97 = (char *)v82 + v94;
    v98 = (void (*)(void))v47;
    v99 = *v82;
    v100 = v82[1];
    *v132 = *v82;
    v95[1] = v100;
    v129 = v96;
    v98();
    v101 = *(int *)(v92 + 48);
    v102 = v133;
    v103 = (char *)v133 + v101;
    *v133 = v99;
    v102[1] = v100;
    ((void (*)(char *, char *, uint64_t))v98)((char *)v102 + v101, v97, v16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_209F1D074(&v141);
    v104 = *(void (**)(char *, uint64_t))(v17 + 8);
    v104(v103, v16);
    if (v142)
    {
      sub_209EE3510(&v141, v140);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v138 = v81;
      v107 = sub_209EE31C0(v99, v100);
      v108 = v81[2];
      v109 = (v106 & 1) == 0;
      v110 = v108 + v109;
      if (__OFADD__(v108, v109))
      {
        __break(1u);
LABEL_70:
        __break(1u);
LABEL_71:
        __break(1u);
        goto LABEL_72;
      }
      v111 = v106;
      if (v81[3] < v110)
      {
        sub_209EEA6C8(v110, isUniquelyReferenced_nonNull_native);
        v112 = sub_209EE31C0(v99, v100);
        if ((v111 & 1) != (v113 & 1))
          goto LABEL_73;
        v107 = v112;
        v81 = v138;
        if ((v111 & 1) == 0)
          goto LABEL_61;
LABEL_28:
        v83 = (_OWORD *)(v81[7] + 32 * v107);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v83);
        sub_209EE3510(v140, v83);
LABEL_29:
        v17 = v127;
        v79 = (unint64_t)v128;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_30;
      }
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v81 = v138;
        if ((v106 & 1) != 0)
          goto LABEL_28;
      }
      else
      {
        sub_209EEAD30();
        v81 = v138;
        if ((v111 & 1) != 0)
          goto LABEL_28;
      }
LABEL_61:
      v81[(v107 >> 6) + 8] |= 1 << v107;
      v118 = (uint64_t *)(v81[6] + 16 * v107);
      *v118 = v99;
      v118[1] = v100;
      sub_209EE3510(v140, (_OWORD *)(v81[7] + 32 * v107));
      v119 = v81[2];
      v120 = __OFADD__(v119, 1);
      v121 = v119 + 1;
      if (v120)
        goto LABEL_71;
      v81[2] = v121;
      swift_bridgeObjectRetain();
      goto LABEL_29;
    }
    sub_209EE017C((uint64_t)&v141, &qword_2545BAF78);
    swift_bridgeObjectRetain();
    v114 = sub_209EE31C0(v99, v100);
    v116 = v115;
    swift_bridgeObjectRelease();
    if ((v116 & 1) != 0)
    {
      v117 = swift_isUniquelyReferenced_nonNull_native();
      v138 = v81;
      if ((v117 & 1) == 0)
      {
        sub_209EEAD30();
        v81 = v138;
      }
      swift_bridgeObjectRelease();
      sub_209EE3510((_OWORD *)(v81[7] + 32 * v114), v140);
      sub_209EEA9C4(v114, (uint64_t)v81);
      swift_bridgeObjectRelease();
    }
    else
    {
      memset(v140, 0, sizeof(v140));
    }
    swift_bridgeObjectRelease();
    sub_209EE017C((uint64_t)v140, &qword_2545BAF78);
    v79 = (unint64_t)v128;
LABEL_30:
    v104((char *)v129, v16);
    sub_209EE017C((uint64_t)v82, &qword_2545BBDC8);
    v46 = v130;
    v80 = v135;
    v47 = v136;
  }
  v88 = v80 + 5;
  if (v80 + 5 >= v125)
    goto LABEL_67;
  v86 = *(_QWORD *)&v124[8 * v88];
  if (v86)
  {
    v87 = v80 + 5;
    goto LABEL_48;
  }
  while (1)
  {
    v87 = v88 + 1;
    if (__OFADD__(v88, 1))
      break;
    if (v87 >= v125)
      goto LABEL_67;
    v86 = *(_QWORD *)&v124[8 * v87];
    ++v88;
    if (v86)
      goto LABEL_48;
  }
LABEL_72:
  __break(1u);
LABEL_73:
  result = (_OWORD *)sub_209F67AA4();
  __break(1u);
  return result;
}

uint64_t sub_209F1DD1C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD v10[4];
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v11 = MEMORY[0x24BEE4AF8];
    sub_209F1FBA4(0, v1, 0);
    v2 = v11;
    v4 = *(_QWORD *)(sub_209F66BF8() - 8);
    v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v6 = *(_QWORD *)(v4 + 72);
    do
    {
      sub_209F1D074(v10);
      v11 = v2;
      v8 = *(_QWORD *)(v2 + 16);
      v7 = *(_QWORD *)(v2 + 24);
      if (v8 >= v7 >> 1)
      {
        sub_209F1FBA4(v7 > 1, v8 + 1, 1);
        v2 = v11;
      }
      *(_QWORD *)(v2 + 16) = v8 + 1;
      sub_209EF1E0C((uint64_t)v10, v2 + 32 * v8 + 32, &qword_2545BAF78);
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_209F1DE28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v0 = sub_209F66AE4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_209F66AD8();
  sub_209F66ACC();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  return sub_209F66C40();
}

void *sub_209F1DF28()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC8RemoteUI22RUISwiftUITableViewRow_xmlElement);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_209F1DFD0(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR____TtC8RemoteUI22RUISwiftUITableViewRow_xmlElement);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;

}

uint64_t sub_209F1E020@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0xA0))();
  *a2 = result;
  return result;
}

uint64_t sub_209F1E060(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((*MEMORY[0x24BEE4EA0] & **a2) + 0xA8);
  v4 = *a1;
  return v3(v2);
}

uint64_t (*sub_209F1E0AC())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

void sub_209F1E0F0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  id v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  void *v27;
  _QWORD v28[2];
  void *v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;

  v1 = v0;
  v2 = sub_209F677B0();
  v3 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x24BDAC7A8](v2, v4);
  v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v5, v8);
  v11 = (char *)v28 - v10;
  v12 = (void *)(*(uint64_t (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *(_QWORD *)v0) + 0xA0))(v9);
  if (!v12)
    return;
  v13 = OBJC_IVAR____TtC8RemoteUI22RUISwiftUITableViewRow_loadedXML;
  v14 = *(void **)&v0[OBJC_IVAR____TtC8RemoteUI22RUISwiftUITableViewRow_loadedXML];
  if (v14)
    v15 = v14 == v12;
  else
    v15 = 0;
  if (v15)
  {

    return;
  }
  v29 = v12;
  v16 = type metadata accessor for RUI.LiftUI.XMLDecoder();
  v17 = RUI.LiftUI.XMLDecoder.__allocating_init()();
  if (qword_2545C1FA0 != -1)
    swift_once();
  v28[1] = v16;
  v18 = __swift_project_value_buffer(v2, (uint64_t)qword_2545C6EF0);
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v19(v11, v18, v2);
  v20 = sub_209F1E410();
  *((_QWORD *)&v32 + 1) = sub_209F66C10();
  *(_QWORD *)&v31 = v20;
  swift_beginAccess();
  sub_209F0EEA0((uint64_t)&v31, (uint64_t)v11);
  swift_endAccess();
  v21 = sub_209F456BC();
  v19(v7, v21, v2);
  v22 = objc_msgSend(v1, sel_pageElement);
  if (!v22)
  {
    __break(1u);
    goto LABEL_17;
  }
  v23 = v22;
  v24 = objc_msgSend(v22, sel_page);

  if (!v24)
  {
LABEL_17:
    __break(1u);
    return;
  }
  v25 = objc_msgSend(v24, sel_objectModel);

  if (v25)
  {
    *((_QWORD *)&v32 + 1) = sub_209F20020();
    *(_QWORD *)&v31 = v25;
  }
  else
  {
    v31 = 0u;
    v32 = 0u;
  }
  swift_beginAccess();
  sub_209F0EEA0((uint64_t)&v31, (uint64_t)v7);
  swift_endAccess();
  v26 = sub_209F5A72C();
  v19(v11, v26, v2);
  *((_QWORD *)&v32 + 1) = MEMORY[0x24BEE1328];
  LOBYTE(v31) = 1;
  swift_beginAccess();
  sub_209F0EEA0((uint64_t)&v31, (uint64_t)v11);
  swift_endAccess();
  sub_209F1E46C();
  *(_QWORD *)&v31 = v29;
  v30 = v17;
  sub_209EE4ABC(&qword_2545BBE60, (uint64_t (*)(uint64_t))type metadata accessor for RUI.LiftUI.XMLDecoder, (uint64_t)&protocol conformance descriptor for RUI.LiftUI.XMLDecoder);
  sub_209F66BE0();
  swift_release();
  swift_release();
  v27 = *(void **)&v1[v13];
  *(_QWORD *)&v1[v13] = v29;

}

id sub_209F1E410()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC8RemoteUI22RUISwiftUITableViewRow____lazy_storage___contentRegistry;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8RemoteUI22RUISwiftUITableViewRow____lazy_storage___contentRegistry);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC8RemoteUI22RUISwiftUITableViewRow____lazy_storage___contentRegistry);
  }
  else
  {
    v4 = sub_209F47E68();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t sub_209F1E46C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;

  v1 = OBJC_IVAR____TtC8RemoteUI22RUISwiftUITableViewRow____lazy_storage___remoteLoader;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC8RemoteUI22RUISwiftUITableViewRow____lazy_storage___remoteLoader))
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8RemoteUI22RUISwiftUITableViewRow____lazy_storage___remoteLoader);
  }
  else
  {
    sub_209F66BEC();
    v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8RemoteUI22RUISwiftUITableViewRow_remoteState);
    v4 = objc_allocWithZone((Class)sub_209F66C10());
    swift_retain();
    v2 = MEMORY[0x20BD1BF80](v3, objc_msgSend(v4, sel_init));
    v5 = sub_209F1E410();
    sub_209F66BD4();

    *(_QWORD *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

id RUISwiftUITableViewRow.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id RUISwiftUITableViewRow.init()()
{
  char *v0;
  uint64_t v1;
  char *v2;
  objc_super v4;

  *(_QWORD *)&v0[OBJC_IVAR____TtC8RemoteUI22RUISwiftUITableViewRow_cell] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8RemoteUI22RUISwiftUITableViewRow_xmlElement] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8RemoteUI22RUISwiftUITableViewRow_loadedXML] = 0;
  v1 = OBJC_IVAR____TtC8RemoteUI22RUISwiftUITableViewRow_remoteState;
  sub_209F66C28();
  swift_allocObject();
  v2 = v0;
  *(_QWORD *)&v0[v1] = sub_209F66C1C();
  *(_QWORD *)&v2[OBJC_IVAR____TtC8RemoteUI22RUISwiftUITableViewRow____lazy_storage___contentRegistry] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8RemoteUI22RUISwiftUITableViewRow____lazy_storage___remoteLoader] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8RemoteUI22RUISwiftUITableViewRow_subscription] = 0;

  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for RUISwiftUITableViewRow();
  return objc_msgSendSuper2(&v4, sel_init);
}

unint64_t sub_209F1E7A0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBE50);
  v2 = sub_209F67810();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_209EE3528(v6, (uint64_t)&v15, &qword_2545BBE58);
    v7 = v15;
    v8 = v16;
    result = sub_209EE31C0(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = sub_209EF1E0C((uint64_t)&v17, v3[7] + 32 * result, &qword_2545BAF78);
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

id RUISwiftUITableViewRow.__allocating_init(attributes:parent:)(uint64_t a1, void *a2)
{
  objc_class *v2;
  void *v4;
  id v5;

  if (a1)
  {
    v4 = (void *)sub_209F6724C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithAttributes_parent_, v4, a2);

  return v5;
}

id RUISwiftUITableViewRow.init(attributes:parent:)(uint64_t a1, void *a2)
{
  char *v2;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  id v9;
  objc_super v11;

  *(_QWORD *)&v2[OBJC_IVAR____TtC8RemoteUI22RUISwiftUITableViewRow_cell] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8RemoteUI22RUISwiftUITableViewRow_xmlElement] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8RemoteUI22RUISwiftUITableViewRow_loadedXML] = 0;
  v5 = OBJC_IVAR____TtC8RemoteUI22RUISwiftUITableViewRow_remoteState;
  sub_209F66C28();
  swift_allocObject();
  v6 = v2;
  *(_QWORD *)&v2[v5] = sub_209F66C1C();
  *(_QWORD *)&v6[OBJC_IVAR____TtC8RemoteUI22RUISwiftUITableViewRow____lazy_storage___contentRegistry] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC8RemoteUI22RUISwiftUITableViewRow____lazy_storage___remoteLoader] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC8RemoteUI22RUISwiftUITableViewRow_subscription] = 0;

  if (a1)
  {
    v7 = (void *)sub_209F6724C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0;
  }
  v11.receiver = v6;
  v11.super_class = (Class)type metadata accessor for RUISwiftUITableViewRow();
  v8 = objc_msgSendSuper2(&v11, sel_initWithAttributes_parent_, v7, a2);

  v9 = v8;
  if (v9)

  return v9;
}

void sub_209F1EB18(void *a1)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  void *v8;
  id v9;
  _BYTE v10[40];
  __int128 v11;
  __int128 v12;

  sub_209F672C4();
  swift_bridgeObjectRetain();
  sub_209F6769C();
  v3 = objc_msgSend(v1, sel_attributes);
  if (v3)
  {
    v4 = v3;
    v5 = sub_209F67258();
    swift_bridgeObjectRelease();

    if (*(_QWORD *)(v5 + 16) && (v6 = sub_209EE3224((uint64_t)v10), (v7 & 1) != 0))
    {
      sub_209EE3288(*(_QWORD *)(v5 + 56) + 32 * v6, (uint64_t)&v11);
    }
    else
    {
      v11 = 0u;
      v12 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_209EE3254((uint64_t)v10);
    if (*((_QWORD *)&v12 + 1))
    {
      if ((swift_dynamicCast() & 1) != 0)
      {
        v8 = (void *)sub_209F672A0();
        swift_bridgeObjectRelease();
        v9 = objc_msgSend((id)objc_opt_self(), sel__remoteUI_colorWithString_defaultColor_, v8, 0);

        if (v9)
        {
          objc_msgSend(a1, sel_setBackgroundColor_, v9);

        }
      }
    }
    else
    {
      sub_209EE017C((uint64_t)&v11, &qword_2545BAF78);
    }
  }
  else
  {
    __break(1u);
  }
}

id sub_209F1ECC4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  unsigned __int8 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  _QWORD v25[2];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBDF8);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (_QWORD *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = OBJC_IVAR____TtC8RemoteUI22RUISwiftUITableViewRow_cell;
  v7 = *(void **)((char *)v0 + OBJC_IVAR____TtC8RemoteUI22RUISwiftUITableViewRow_cell);
  if (v7)
  {
    v8 = *(id *)((char *)v0 + OBJC_IVAR____TtC8RemoteUI22RUISwiftUITableViewRow_cell);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBE28);
    v8 = sub_209F40B90(0, 0, 0);
  }
  v9 = OBJC_IVAR____TtC8RemoteUI22RUISwiftUITableViewRow_subscription;
  if (*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC8RemoteUI22RUISwiftUITableViewRow_subscription))
  {
    v10 = v7;
    swift_retain();
    sub_209F66C4C();
    swift_release();
  }
  else
  {
    v11 = v7;
  }
  if ((objc_msgSend(v0, sel_isSelected) & 1) != 0)
    v12 = 1;
  else
    v12 = objc_msgSend(v8, sel_isSelected);
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = v12;
  *v5 = v13;
  v14 = *MEMORY[0x24BE5F340];
  v15 = sub_209F66BF8();
  v16 = *(_QWORD *)(v15 - 8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v16 + 104))(v5, v14, v15);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v5, 0, 1, v15);
  sub_209F66C34();
  sub_209F1E0F0();
  (*(void (**)(id))((*MEMORY[0x24BEE4EA0] & *v0) + 0x128))(v8);
  objc_msgSend(v8, sel_setAccessoryType_, 0);
  objc_msgSend(v8, sel_setAccessoryView_, 0);
  objc_msgSend(v8, sel_setSelectionStyle_, 0);
  sub_209F1E46C();
  sub_209F66BEC();
  sub_209EE4ABC(&qword_2545BBDE0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5F298], MEMORY[0x24BE5F288]);
  v17 = sub_209F66C70();
  swift_release();
  v25[0] = v17;
  v18 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = sub_209F1FD9C;
  *(_QWORD *)(v19 + 24) = v18;
  sub_209F66C94();
  v20 = sub_209F66D0C();
  swift_release();
  swift_release();
  *(_QWORD *)((char *)v1 + v9) = v20;
  swift_release();
  sub_209F1E46C();
  v25[0] = sub_209F66DD8();
  v25[1] = v21;
  sub_209F40F0C((uint64_t)v25);
  swift_release();
  v22 = *(void **)((char *)v1 + v6);
  *(_QWORD *)((char *)v1 + v6) = v8;
  v23 = v8;

  return v8;
}

void sub_209F1F030(void *a1, uint64_t a2, char a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  objc_class *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  objc_super v15;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBDF8);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (uint64_t *)((char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = (objc_class *)type metadata accessor for RUISwiftUITableViewRow();
  v15.receiver = a1;
  v15.super_class = v9;
  v10 = a1;
  objc_msgSendSuper2(&v15, sel_didBecomeSelected);
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a3;
  *v8 = v11;
  v12 = *MEMORY[0x24BE5F340];
  v13 = sub_209F66BF8();
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v14 + 104))(v8, v12, v13);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v8, 0, 1, v13);
  sub_209F66C34();

}

uint64_t sub_209F1F158(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t inited;
  id v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  char *v24;
  unsigned int (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  _QWORD *v27;
  uint64_t *v28;
  _OWORD *v29;
  uint64_t v30;
  uint64_t *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  uint64_t *v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  char v44;
  char v45;
  unint64_t v46;
  uint64_t v47;
  _BOOL8 v48;
  uint64_t v49;
  char v50;
  unint64_t v51;
  char v52;
  unint64_t v53;
  char v54;
  char v55;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  id v61;
  void *v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  id v66;
  void *v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  void *v71;
  uint64_t result;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  void *v76;
  uint64_t v77;
  uint64_t *v78;
  unsigned int (*v79)(uint64_t, uint64_t, uint64_t);
  uint64_t *v80;
  uint64_t *v81;
  char *v82;
  char *v83;
  _QWORD *v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  uint64_t v88;
  _BYTE v89[40];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBDC8);
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4, v6);
  v81 = (uint64_t *)((char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = MEMORY[0x24BDAC7A8](v7, v9);
  v80 = (uint64_t *)((char *)&v73 - v11);
  MEMORY[0x24BDAC7A8](v10, v12);
  v78 = (uint64_t *)((char *)&v73 - v13);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBE30);
  MEMORY[0x24BDAC7A8](v14, v15);
  v82 = (char *)&v73 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBE38);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_209F76440;
  *(_QWORD *)(inited + 32) = 0x65756C6176;
  *(_QWORD *)(inited + 40) = 0xE500000000000000;
  *(_QWORD *)&v87 = 0x65756C6176;
  *((_QWORD *)&v87 + 1) = 0xE500000000000000;
  sub_209F6769C();
  v18 = objc_msgSend(v1, sel_attributes);
  if (!v18)
    goto LABEL_51;
  v19 = v18;
  v20 = sub_209F67258();

  if (*(_QWORD *)(v20 + 16) && (v21 = sub_209EE3224((uint64_t)v89), (v22 & 1) != 0))
  {
    sub_209EE3288(*(_QWORD *)(v20 + 56) + 32 * v21, inited + 48);
  }
  else
  {
    *(_OWORD *)(inited + 48) = 0u;
    *(_OWORD *)(inited + 64) = 0u;
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 80) = 0x6574617473;
  *(_QWORD *)(inited + 88) = 0xE500000000000000;
  v23 = *(_QWORD *)&v2[OBJC_IVAR____TtC8RemoteUI22RUISwiftUITableViewRow_remoteState];
  *(_QWORD *)(inited + 120) = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBDD0);
  *(_QWORD *)&v87 = v23;
  sub_209F66C28();
  sub_209EE4ABC(&qword_2545BBE40, (uint64_t (*)(uint64_t))MEMORY[0x24BE5F4E0], MEMORY[0x24BE5F5C8]);
  v77 = v23;
  swift_retain_n();
  sub_209F67390();
  v24 = v82;
  sub_209F67828();
  v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  v26 = (uint64_t)v24;
  v79 = v25;
  if (v25((uint64_t)v24, 1, v4) == 1)
  {
    v27 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_29:
    swift_release();
    *(_QWORD *)(inited + 96) = v27;
    swift_release();
    sub_209EE3254((uint64_t)v89);
    sub_209F1E7A0(inited);
    *(_QWORD *)&v85 = 0x6F72476F69646172;
    *((_QWORD *)&v85 + 1) = 0xEA00000000007075;
    sub_209F6769C();
    v61 = objc_msgSend(v2, sel_attributes);
    if (!v61)
      goto LABEL_52;
    v62 = v61;
    v63 = sub_209F67258();

    if (*(_QWORD *)(v63 + 16) && (v64 = sub_209EE3224((uint64_t)v89), (v65 & 1) != 0))
    {
      sub_209EE3288(*(_QWORD *)(v63 + 56) + 32 * v64, (uint64_t)&v85);
    }
    else
    {
      v86 = 0u;
      v85 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_209EE3254((uint64_t)v89);
    if (*((_QWORD *)&v86 + 1))
    {
      sub_209EE3510(&v85, &v87);
      if (!objc_msgSend(v2, sel_isSelected))
      {
        swift_bridgeObjectRelease();
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v87);
      }
      if (a1)
      {
LABEL_46:
        __swift_instantiateConcreteTypeFromMangledName(&qword_2545BAF78);
        v71 = (void *)sub_209F6724C();
        swift_bridgeObjectRelease();
        __swift_project_boxed_opaque_existential_1(&v87, v88);
        objc_msgSend(a1, sel___swift_setObject_forKeyedSubscript_, v71, sub_209F6799C());

        swift_unknownObjectRelease();
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v87);
      }
      __break(1u);
    }
    sub_209EE017C((uint64_t)&v85, &qword_2545BAF78);
    *(_QWORD *)&v85 = 25705;
    *((_QWORD *)&v85 + 1) = 0xE200000000000000;
    sub_209F6769C();
    v66 = objc_msgSend(v2, sel_attributes);
    if (!v66)
      goto LABEL_53;
    v67 = v66;
    v68 = sub_209F67258();

    if (*(_QWORD *)(v68 + 16) && (v69 = sub_209EE3224((uint64_t)v89), (v70 & 1) != 0))
    {
      sub_209EE3288(*(_QWORD *)(v68 + 56) + 32 * v69, (uint64_t)&v85);
    }
    else
    {
      v86 = 0u;
      v85 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_209EE3254((uint64_t)v89);
    if (!*((_QWORD *)&v86 + 1))
    {
      swift_bridgeObjectRelease();
      return sub_209EE017C((uint64_t)&v85, &qword_2545BAF78);
    }
    sub_209EE3510(&v85, &v87);
    if (!a1)
      goto LABEL_54;
    goto LABEL_46;
  }
  v74 = inited;
  v75 = v2;
  v76 = a1;
  v27 = (_QWORD *)MEMORY[0x24BEE4B00];
  v28 = v78;
  while (1)
  {
    sub_209EF1E0C(v26, (uint64_t)v28, &qword_2545BBDC8);
    v30 = *(int *)(v4 + 48);
    v31 = v80;
    v32 = (char *)v80 + v30;
    v33 = (char *)v28 + v30;
    v34 = *v28;
    v35 = v28[1];
    *v80 = *v28;
    v31[1] = v35;
    v36 = sub_209F66BF8();
    v37 = *(_QWORD *)(v36 - 8);
    v38 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
    v83 = v32;
    v38(v32, v33, v36);
    v39 = *(int *)(v4 + 48);
    v40 = v81;
    v41 = (char *)v81 + v39;
    *v81 = v34;
    v40[1] = v35;
    v38((char *)v40 + v39, v33, v36);
    swift_bridgeObjectRetain();
    sub_209F1D074((uint64_t *)&v87);
    v42 = *(void (**)(char *, uint64_t))(v37 + 8);
    v42(v41, v36);
    if (!v88)
    {
      sub_209EE017C((uint64_t)&v87, &qword_2545BAF78);
      swift_bridgeObjectRetain();
      v53 = sub_209EE31C0(v34, v35);
      v55 = v54;
      swift_bridgeObjectRelease();
      if ((v55 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v84 = v27;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_209EEAD30();
          v27 = v84;
        }
        swift_bridgeObjectRelease();
        sub_209EE3510((_OWORD *)(v27[7] + 32 * v53), &v85);
        sub_209EEA9C4(v53, (uint64_t)v27);
        swift_bridgeObjectRelease();
      }
      else
      {
        v86 = 0u;
        v85 = 0u;
      }
      swift_bridgeObjectRelease();
      sub_209EE017C((uint64_t)&v85, &qword_2545BAF78);
      v26 = (uint64_t)v82;
      goto LABEL_11;
    }
    v43 = v4;
    sub_209EE3510(&v87, &v85);
    v44 = swift_isUniquelyReferenced_nonNull_native();
    v84 = v27;
    v46 = sub_209EE31C0(v34, v35);
    v47 = v27[2];
    v48 = (v45 & 1) == 0;
    v49 = v47 + v48;
    if (__OFADD__(v47, v48))
      break;
    v50 = v45;
    if (v27[3] >= v49)
    {
      if ((v44 & 1) == 0)
        sub_209EEAD30();
    }
    else
    {
      sub_209EEA6C8(v49, v44);
      v51 = sub_209EE31C0(v34, v35);
      if ((v50 & 1) != (v52 & 1))
        goto LABEL_55;
      v46 = v51;
    }
    v27 = v84;
    if ((v50 & 1) != 0)
    {
      v29 = (_OWORD *)(v84[7] + 32 * v46);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
      sub_209EE3510(&v85, v29);
    }
    else
    {
      v84[(v46 >> 6) + 8] |= 1 << v46;
      v57 = (uint64_t *)(v27[6] + 16 * v46);
      *v57 = v34;
      v57[1] = v35;
      sub_209EE3510(&v85, (_OWORD *)(v27[7] + 32 * v46));
      v58 = v27[2];
      v59 = __OFADD__(v58, 1);
      v60 = v58 + 1;
      if (v59)
        goto LABEL_50;
      v27[2] = v60;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v4 = v43;
    v28 = v78;
    v26 = (uint64_t)v82;
LABEL_11:
    v42(v83, v36);
    sub_209EE017C((uint64_t)v28, &qword_2545BBDC8);
    sub_209F67828();
    if (v79(v26, 1, v4) == 1)
    {
      a1 = v76;
      v2 = v75;
      inited = v74;
      goto LABEL_29;
    }
  }
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  result = sub_209F67AA4();
  __break(1u);
  return result;
}

id RUISwiftUITableViewRow.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RUISwiftUITableViewRow();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_209F1FBA4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_209F1FBC0(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_209F1FBC0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBE68);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8)
      memmove(v10 + 4, a4 + 4, 32 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BAF78);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_209F6781C();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for RUISwiftUITableViewRow()
{
  return objc_opt_self();
}

uint64_t sub_209F1FD68()
{
  return swift_deallocObject();
}

uint64_t sub_209F1FD78()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_209F1FD9C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  _QWORD v6[2];

  swift_beginAccess();
  v1 = MEMORY[0x20BD1DC9C](v0 + 16);
  if (v1)
  {
    v2 = (void *)v1;
    v3 = *(void **)(v1 + OBJC_IVAR____TtC8RemoteUI22RUISwiftUITableViewRow_cell);
    if (v3)
    {
      v4 = v3;
      objc_msgSend(v4, sel_setAccessoryType_, 0);
      objc_msgSend(v4, sel_setAccessoryView_, 0);
      sub_209F1E46C();
      sub_209F66BEC();
      sub_209EE4ABC(&qword_2545BBDE0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5F298], MEMORY[0x24BE5F288]);
      v6[0] = sub_209F66DD8();
      v6[1] = v5;
      sub_209F40F0C((uint64_t)v6);

      swift_release();
    }

  }
}

uint64_t sub_209F1FE90()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_209F1FEB4()
{
  return swift_getOpaqueTypeConformance2();
}

_QWORD *initializeBufferWithCopyOfBuffer for SwiftUIRow(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for SwiftUIRow()
{
  return swift_release();
}

_QWORD *assignWithCopy for SwiftUIRow(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for SwiftUIRow(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for SwiftUIRow()
{
  return &type metadata for SwiftUIRow;
}

uint64_t method lookup function for RUISwiftUITableViewRow()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RUISwiftUITableViewRow.xmlElement.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of RUISwiftUITableViewRow.xmlElement.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of RUISwiftUITableViewRow.xmlElement.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of RUISwiftUITableViewRow.prepareToPreload()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x130))();
}

uint64_t sub_209F1FFF4()
{
  return sub_209EE4ABC(&qword_2545BBE48, MEMORY[0x24BE5F580], MEMORY[0x24BE5F558]);
}

unint64_t sub_209F20020()
{
  unint64_t result;

  result = qword_2545BBA18;
  if (!qword_2545BBA18)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2545BBA18);
  }
  return result;
}

void sub_209F2005C()
{
  swift_deletedMethodError();
  __break(1u);
}

uint64_t XMLUIData.postbackBinding<A>(_:forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v8;
  _QWORD *v9;

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = a4;
  v8[5] = v4;
  v8[6] = a2;
  v8[7] = a3;
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = a4;
  v9[5] = v4;
  v9[6] = a2;
  v9[7] = a3;
  sub_209F675DC();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  return sub_209F671EC();
}

uint64_t sub_209F20144@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  int v11;
  _OWORD v13[2];

  v3 = *(_QWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 48);
  v4 = *(_QWORD *)(v1 + 56);
  v6 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(v1 + 40) + 120);
  v7 = swift_bridgeObjectRetain();
  v8 = v6(v7);
  if (*(_QWORD *)(v8 + 16) && (v9 = sub_209EE31C0(v5, v4), (v10 & 1) != 0))
    sub_209EE3288(*(_QWORD *)(v8 + 56) + 32 * v9, (uint64_t)v13);
  else
    memset(v13, 0, sizeof(v13));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BAF78);
  v11 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a1, v11 ^ 1u, 1, v3);
}

uint64_t sub_209F20228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t *boxed_opaque_existential_0;
  uint64_t (*v17)(_BYTE *);
  uint64_t (*v18)(_BYTE *, _QWORD);
  _BYTE v20[32];
  __int128 v21;
  __int128 v22;

  v10 = sub_209F675DC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = &v20[-v13];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(&v20[-v13], a1, v10);
  v15 = *(_QWORD *)(a5 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v15 + 48))(v14, 1, a5) == 1)
  {
    (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v14, v10);
    v21 = 0u;
    v22 = 0u;
  }
  else
  {
    *((_QWORD *)&v22 + 1) = a5;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v21);
    (*(void (**)(uint64_t *, _BYTE *, uint64_t))(v15 + 32))(boxed_opaque_existential_0, v14, a5);
  }
  v17 = *(uint64_t (**)(_BYTE *))(*(_QWORD *)a2 + 136);
  swift_bridgeObjectRetain();
  v18 = (uint64_t (*)(_BYTE *, _QWORD))v17(v20);
  sub_209EE9D20((uint64_t)&v21, a3, a4);
  return v18(v20, 0);
}

uint64_t sub_209F20358(uint64_t a1)
{
  uint64_t *v1;

  return sub_209F20228(a1, v1[5], v1[6], v1[7], v1[4]);
}

uint64_t XMLUIData.postbackBinding<A>(_:forKey:default:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  _QWORD *v15;
  uint64_t v17;

  v9 = *(_QWORD *)(a5 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](a1, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v11, v12);
  v13 = (*(unsigned __int8 *)(v9 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v14 = (char *)swift_allocObject();
  *((_QWORD *)v14 + 2) = 0;
  *((_QWORD *)v14 + 3) = 0;
  *((_QWORD *)v14 + 4) = a5;
  *((_QWORD *)v14 + 5) = v5;
  *((_QWORD *)v14 + 6) = a2;
  *((_QWORD *)v14 + 7) = a3;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v14[v13], (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a5);
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = 0;
  v15[3] = 0;
  v15[4] = a5;
  v15[5] = v5;
  v15[6] = a2;
  v15[7] = a3;
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  return sub_209F671EC();
}

uint64_t sub_209F20498@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;

  v23[1] = a1;
  v24 = a4;
  v25 = a6;
  v9 = *(_QWORD *)(a5 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_209F675DC();
  v23[0] = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)v23 - v14;
  v16 = sub_209F671F8();
  v17 = *(_QWORD *)(v16 - 8);
  v19 = MEMORY[0x24BDAC7A8](v16, v18);
  v21 = (char *)v23 - v20;
  XMLUIData.postbackBinding<A>(_:forKey:)(v19, a2, a3, a5);
  MEMORY[0x20BD1C58C](v16);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v21, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v24, a5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v15, 1, a5) == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v25, v11, a5);
    return (*(uint64_t (**)(char *, uint64_t))(v23[0] + 8))(v15, v12);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, a5);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(v25, v15, a5);
  }
}

uint64_t sub_209F20644()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_209F206C0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1[4];
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  return sub_209F20498(v1[5], v1[6], v1[7], (uint64_t)v1 + ((v3 + 64) & ~v3), v2, a1);
}

uint64_t sub_209F206E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;

  v9 = sub_209F675DC();
  MEMORY[0x24BDAC7A8](v9, v9);
  v11 = (char *)&v20 - v10;
  v12 = sub_209F671F8();
  v13 = *(_QWORD *)(v12 - 8);
  v15 = MEMORY[0x24BDAC7A8](v12, v14);
  v17 = (char *)&v20 - v16;
  XMLUIData.postbackBinding<A>(_:forKey:)(v15, a3, a4, a5);
  v18 = *(_QWORD *)(a5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v11, a1, a5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v11, 0, 1, a5);
  sub_209F671E0();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v17, v12);
}

uint64_t objectdestroyTm_0()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_209F2083C(uint64_t a1)
{
  uint64_t *v1;

  return sub_209F206E0(a1, v1[5], v1[6], v1[7], v1[4]);
}

uint64_t XMLUIData.postbackBinding<A, B>(_:forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  v5 = sub_209F673C0();
  XMLUIData.postbackBinding<A>(_:forKey:)(v5, v7, v8, a4);
  return swift_bridgeObjectRelease();
}

uint64_t XMLUIData.postbackBinding<A, B>(_:forKey:default:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  v7 = sub_209F673C0();
  XMLUIData.postbackBinding<A>(_:forKey:default:)(v7, v9, v10, a3, a5);
  return swift_bridgeObjectRelease();
}

void RemoteUIController.registerViewType(_:named:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id *v8;
  void (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v10;

  v8 = (id *)sub_209EFF884();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))((*MEMORY[0x24BEE4EA0] & *(_QWORD *)*v8) + 0xB0);
  v10 = *v8;
  v9(a1, a2, a3, a4);

}

{
  id *v8;
  void (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v10;

  v8 = (id *)sub_209EFF884();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))((*MEMORY[0x24BEE4EA0] & *(_QWORD *)*v8) + 0xA8);
  v10 = *v8;
  v9(a1, a2, a3, a4);

}

uint64_t type metadata accessor for OpenURLViewModifier()
{
  uint64_t result;

  result = qword_2545C20C0;
  if (!qword_2545C20C0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_209F20A7C()
{
  return sub_209F66E74();
}

uint64_t sub_209F20A9C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v2 = sub_209F66DA8();
  MEMORY[0x24BDAC7A8](v2, v3);
  (*(void (**)(char *, uint64_t))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_209F66E80();
}

uint64_t sub_209F20B18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[2];

  v25[0] = a1;
  v25[1] = a3;
  v4 = sub_209F66A90();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4, v7);
  v8 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for OpenURLViewModifier();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9, v12);
  v13 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB428);
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (char *)v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_209F674B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  sub_209EE3C10(a2, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for OpenURLViewModifier);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 16))(v8, v25[0], v4);
  sub_209F6748C();
  v19 = sub_209F67480();
  v20 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v21 = (v11 + *(unsigned __int8 *)(v5 + 80) + v20) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v22 = swift_allocObject();
  v23 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v22 + 16) = v19;
  *(_QWORD *)(v22 + 24) = v23;
  sub_209EF1E50((uint64_t)v13, v22 + v20, (uint64_t (*)(_QWORD))type metadata accessor for OpenURLViewModifier);
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v22 + v21, v8, v4);
  sub_209F20E78((uint64_t)v17, (uint64_t)&unk_2545BBEA8, v22);
  swift_release();
  return sub_209F66D90();
}

uint64_t sub_209F20CF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v7;
  uint64_t v8;

  v5[2] = sub_209F6748C();
  v5[3] = sub_209F67480();
  v7 = (_QWORD *)swift_task_alloc();
  v5[4] = v7;
  v8 = type metadata accessor for URLLoader(0);
  *v7 = v5;
  v7[1] = sub_209F20D84;
  return URLLoadingCapable.handle(url:)(a5, v8, (uint64_t)&protocol witness table for URLLoader);
}

uint64_t sub_209F20D84()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  sub_209F67474();
  return swift_task_switch();
}

uint64_t sub_209F20E0C()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_209F20E3C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 40);
  swift_release();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_209F20E78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_209F674B0();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_209F674A4();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_209EE017C(a1, &qword_2545BB428);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_209F67474();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_209F20FCC()
{
  return sub_209F66D78();
}

uint64_t sub_209F20FE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t KeyPath;
  unint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v4 = v3;
  v21 = a1;
  v6 = *(_QWORD *)(a2 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](a1, a2);
  v8 = sub_209F66DA8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath();
  sub_209EE3C10(v4, (uint64_t)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for OpenURLViewModifier);
  v14 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v15 = swift_allocObject();
  sub_209EF1E50((uint64_t)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14, (uint64_t (*)(_QWORD))type metadata accessor for OpenURLViewModifier);
  sub_209F66D9C();
  v16 = (uint64_t *)(a3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545BBE70) + 36));
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBE78);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))((char *)v16 + *(int *)(v17 + 28), v12, v8);
  *v16 = KeyPath;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBE80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(a3, v21, v18);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
}

uint64_t sub_209F21174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v6 = type metadata accessor for OpenURLViewModifier();
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_209EE3C10(a1, (uint64_t)v9, type metadata accessor for URLLoader);
  MEMORY[0x20BD1C4F0](v9, a2, v6, a3);
  return sub_209F21224((uint64_t)v9);
}

uint64_t sub_209F21224(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for OpenURLViewModifier();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_209F21260()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *sub_209F21270(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  void *v40;
  char v41;
  int *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  id v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v71;
  unsigned int (*v72)(uint64_t *, uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v4 = type metadata accessor for URLLoader(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v6 = (int *)v4;
    v7 = sub_209F66A90();
    v8 = *(_QWORD *)(v7 - 8);
    v72 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    v73 = v7;
    v71 = v8;
    if (v72(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = (int *)type metadata accessor for URLLoadingParameters(0);
    v12 = v11[5];
    v13 = (uint64_t *)((char *)a1 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = v11[6];
    v17 = (uint64_t *)((char *)a1 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    v76 = v18[1];
    *v17 = *v18;
    v17[1] = v76;
    *((_BYTE *)a1 + v11[7]) = *((_BYTE *)a2 + v11[7]);
    v19 = v11[8];
    v20 = (uint64_t *)((char *)a1 + v19);
    v21 = (uint64_t *)((char *)a2 + v19);
    v75 = v21[1];
    *v20 = *v21;
    v20[1] = v75;
    v22 = v11[9];
    v23 = (uint64_t *)((char *)a1 + v22);
    v24 = (uint64_t *)((char *)a2 + v22);
    v74 = v24[1];
    *v23 = *v24;
    v23[1] = v74;
    *((_BYTE *)a1 + v11[10]) = *((_BYTE *)a2 + v11[10]);
    *(uint64_t *)((char *)a1 + v11[11]) = *(uint64_t *)((char *)a2 + v11[11]);
    v25 = v11[12];
    v26 = (uint64_t *)((char *)a1 + v25);
    v27 = (uint64_t *)((char *)a2 + v25);
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    v29 = v11[13];
    v30 = (uint64_t *)((char *)a1 + v29);
    v31 = (uint64_t *)((char *)a2 + v29);
    v32 = v31[1];
    *v30 = *v31;
    v30[1] = v32;
    v33 = v11[14];
    v34 = (uint64_t *)((char *)a1 + v33);
    v35 = (uint64_t *)((char *)a2 + v33);
    v36 = v35[1];
    *v34 = *v35;
    v34[1] = v36;
    v37 = v6[5];
    v38 = (char *)a1 + v37;
    v39 = (char *)a2 + v37;
    v40 = *(void **)v39;
    v41 = v39[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v42 = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_209EEC018(v40, v41);
    *(_QWORD *)v38 = v40;
    v38[8] = v41;
    v43 = v6[6];
    v44 = (char *)a1 + v43;
    v45 = (char *)a2 + v43;
    v46 = *(id *)v45;
    LOBYTE(v36) = v45[8];
    sub_209EEC018(*(id *)v45, v36);
    *(_QWORD *)v44 = v46;
    v44[8] = v36;
    v47 = v42[7];
    v48 = (char *)a1 + v47;
    v49 = (char *)a2 + v47;
    v50 = *(_QWORD *)v49;
    v51 = *((_QWORD *)v49 + 1);
    LOBYTE(v44) = v49[16];
    sub_209EEC024(*(_QWORD *)v49, v51, (char)v44);
    *(_QWORD *)v48 = v50;
    *((_QWORD *)v48 + 1) = v51;
    v48[16] = (char)v44;
    v52 = v42[8];
    v53 = (uint64_t *)((char *)a1 + v52);
    v54 = (uint64_t *)((char *)a2 + v52);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if (v72(v54, 1, v73))
      {
        v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v71 + 16))(v53, v54, v73);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v53, 0, 1, v73);
      }
    }
    else
    {
      *v53 = *v54;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v56 = v42[9];
    v57 = (char *)a1 + v56;
    v58 = (char *)a2 + v56;
    v59 = *(_QWORD *)v58;
    v60 = *((_QWORD *)v58 + 1);
    v61 = v58[16];
    sub_209EEC024(*(_QWORD *)v58, v60, v61);
    *(_QWORD *)v57 = v59;
    *((_QWORD *)v57 + 1) = v60;
    v57[16] = v61;
    v62 = v42[10];
    v63 = (char *)a1 + v62;
    v64 = (char *)a2 + v62;
    v65 = *(_QWORD *)v64;
    LOBYTE(v60) = v64[8];
    sub_209EEC030(*(_QWORD *)v64, v60);
    *(_QWORD *)v63 = v65;
    v63[8] = v60;
    v66 = v42[11];
    v67 = (char *)a1 + v66;
    v68 = (char *)a2 + v66;
    v69 = *(_QWORD *)v68;
    LOBYTE(v68) = v68[8];
    *(_QWORD *)v67 = v69;
    v67[8] = (char)v68;
  }
  swift_retain();
  return a1;
}

uint64_t sub_209F21630(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int (*v4)(uint64_t, uint64_t, uint64_t);
  int *v5;
  uint64_t v6;

  v2 = sub_209F66A90();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (!v4(a1, 1, v2))
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  type metadata accessor for URLLoadingParameters(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = (int *)type metadata accessor for URLLoader(0);
  sub_209EEC698(*(id *)(a1 + v5[5]), *(_BYTE *)(a1 + v5[5] + 8));
  sub_209EEC698(*(id *)(a1 + v5[6]), *(_BYTE *)(a1 + v5[6] + 8));
  sub_209EEC6A4(*(_QWORD *)(a1 + v5[7]), *(_QWORD *)(a1 + v5[7] + 8), *(_BYTE *)(a1 + v5[7] + 16));
  v6 = a1 + v5[8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    if (!v4(v6, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v6, v2);
  }
  else
  {
    swift_release();
  }
  sub_209EEC6A4(*(_QWORD *)(a1 + v5[9]), *(_QWORD *)(a1 + v5[9] + 8), *(_BYTE *)(a1 + v5[9] + 16));
  sub_209EEC6B0(*(_QWORD *)(a1 + v5[10]), *(_BYTE *)(a1 + v5[10] + 8));
  return swift_release();
}

char *sub_209F217EC(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  int *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  void *v36;
  char v37;
  uint64_t v38;
  char *v39;
  char *v40;
  id v41;
  char v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v67;
  unsigned int (*v68)(char *, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v4 = sub_209F66A90();
  v5 = *(_QWORD *)(v4 - 8);
  v68 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v69 = v4;
  v67 = v5;
  if (v68(a2, 1, v4))
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(a1, a2, v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  v7 = (int *)type metadata accessor for URLLoadingParameters(0);
  v8 = v7[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v73 = *((_QWORD *)v10 + 1);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *((_QWORD *)v9 + 1) = v73;
  v11 = v7[6];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v72 = *((_QWORD *)v13 + 1);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *((_QWORD *)v12 + 1) = v72;
  a1[v7[7]] = a2[v7[7]];
  v14 = v7[8];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v71 = *((_QWORD *)v16 + 1);
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *((_QWORD *)v15 + 1) = v71;
  v17 = v7[9];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v70 = *((_QWORD *)v19 + 1);
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *((_QWORD *)v18 + 1) = v70;
  a1[v7[10]] = a2[v7[10]];
  *(_QWORD *)&a1[v7[11]] = *(_QWORD *)&a2[v7[11]];
  v20 = v7[12];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = *((_QWORD *)v22 + 1);
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *((_QWORD *)v21 + 1) = v23;
  v24 = v7[13];
  v25 = &a1[v24];
  v26 = &a2[v24];
  v27 = *((_QWORD *)v26 + 1);
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *((_QWORD *)v25 + 1) = v27;
  v28 = v7[14];
  v29 = &a1[v28];
  v30 = &a2[v28];
  v31 = *((_QWORD *)v30 + 1);
  *(_QWORD *)v29 = *(_QWORD *)v30;
  *((_QWORD *)v29 + 1) = v31;
  v32 = (int *)type metadata accessor for URLLoader(0);
  v33 = v32[5];
  v34 = &a1[v33];
  v35 = &a2[v33];
  v36 = *(void **)v35;
  v37 = v35[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_209EEC018(v36, v37);
  *(_QWORD *)v34 = v36;
  v34[8] = v37;
  v38 = v32[6];
  v39 = &a1[v38];
  v40 = &a2[v38];
  v41 = *(id *)v40;
  v42 = v40[8];
  sub_209EEC018(*(id *)v40, v42);
  *(_QWORD *)v39 = v41;
  v39[8] = v42;
  v43 = v32[7];
  v44 = &a1[v43];
  v45 = &a2[v43];
  v46 = *(_QWORD *)v45;
  v47 = *((_QWORD *)v45 + 1);
  LOBYTE(v39) = v45[16];
  sub_209EEC024(*(_QWORD *)v45, v47, (char)v39);
  *(_QWORD *)v44 = v46;
  *((_QWORD *)v44 + 1) = v47;
  v44[16] = (char)v39;
  v48 = v32[8];
  v49 = &a1[v48];
  v50 = &a2[v48];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    if (v68(v50, 1, v69))
    {
      v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
      memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v49, v50, v69);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v49, 0, 1, v69);
    }
  }
  else
  {
    *(_QWORD *)v49 = *(_QWORD *)v50;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v52 = v32[9];
  v53 = &a1[v52];
  v54 = &a2[v52];
  v55 = *(_QWORD *)v54;
  v56 = *((_QWORD *)v54 + 1);
  v57 = v54[16];
  sub_209EEC024(*(_QWORD *)v54, v56, v57);
  *(_QWORD *)v53 = v55;
  *((_QWORD *)v53 + 1) = v56;
  v53[16] = v57;
  v58 = v32[10];
  v59 = &a1[v58];
  v60 = &a2[v58];
  v61 = *(_QWORD *)v60;
  LOBYTE(v56) = v60[8];
  sub_209EEC030(*(_QWORD *)v60, v56);
  *(_QWORD *)v59 = v61;
  v59[8] = v56;
  v62 = v32[11];
  v63 = &a1[v62];
  v64 = &a2[v62];
  v65 = *(_QWORD *)v64;
  LOBYTE(v64) = v64[8];
  *(_QWORD *)v63 = v65;
  v63[8] = (char)v64;
  swift_retain();
  return a1;
}

char *sub_209F21B84(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(char *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  int *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  id v36;
  char v37;
  void *v38;
  char v39;
  uint64_t v40;
  char *v41;
  char *v42;
  id v43;
  char v44;
  void *v45;
  char v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;

  v4 = sub_209F66A90();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(a1, a2, v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(a1, v4);
LABEL_6:
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 24))(a1, a2, v4);
LABEL_7:
  v10 = (int *)type metadata accessor for URLLoadingParameters(0);
  v11 = v10[5];
  v12 = &a1[v11];
  v13 = &a2[v11];
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = v10[6];
  v15 = &a1[v14];
  v16 = &a2[v14];
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[v10[7]] = a2[v10[7]];
  v17 = v10[8];
  v18 = &a1[v17];
  v19 = &a2[v17];
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = v10[9];
  v21 = &a1[v20];
  v22 = &a2[v20];
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[v10[10]] = a2[v10[10]];
  *(_QWORD *)&a1[v10[11]] = *(_QWORD *)&a2[v10[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23 = v10[12];
  v24 = &a1[v23];
  v25 = &a2[v23];
  *(_QWORD *)v24 = *(_QWORD *)v25;
  *((_QWORD *)v24 + 1) = *((_QWORD *)v25 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v26 = v10[13];
  v27 = &a1[v26];
  v28 = &a2[v26];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *((_QWORD *)v27 + 1) = *((_QWORD *)v28 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v29 = v10[14];
  v30 = &a1[v29];
  v31 = &a2[v29];
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *((_QWORD *)v30 + 1) = *((_QWORD *)v31 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v32 = (int *)type metadata accessor for URLLoader(0);
  v33 = v32[5];
  v34 = &a1[v33];
  v35 = &a2[v33];
  v36 = *(id *)v35;
  v37 = v35[8];
  sub_209EEC018(*(id *)v35, v37);
  v38 = *(void **)v34;
  v39 = v34[8];
  *(_QWORD *)v34 = v36;
  v34[8] = v37;
  sub_209EEC698(v38, v39);
  v40 = v32[6];
  v41 = &a1[v40];
  v42 = &a2[v40];
  v43 = *(id *)v42;
  v44 = v42[8];
  sub_209EEC018(*(id *)v42, v44);
  v45 = *(void **)v41;
  v46 = v41[8];
  *(_QWORD *)v41 = v43;
  v41[8] = v44;
  sub_209EEC698(v45, v46);
  v47 = v32[7];
  v48 = &a1[v47];
  v49 = &a2[v47];
  v50 = *(_QWORD *)v49;
  v51 = *((_QWORD *)v49 + 1);
  LOBYTE(v41) = v49[16];
  sub_209EEC024(*(_QWORD *)v49, v51, (char)v41);
  v52 = *(_QWORD *)v48;
  v53 = *((_QWORD *)v48 + 1);
  v54 = v48[16];
  *(_QWORD *)v48 = v50;
  *((_QWORD *)v48 + 1) = v51;
  v48[16] = (char)v41;
  sub_209EEC6A4(v52, v53, v54);
  if (a1 != a2)
  {
    v55 = v32[8];
    v56 = &a1[v55];
    v57 = &a2[v55];
    sub_209EE017C((uint64_t)&a1[v55], &qword_2545BB1F8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if (v6(v57, 1, v4))
      {
        v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
        memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v56, v57, v4);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v56, 0, 1, v4);
      }
    }
    else
    {
      *(_QWORD *)v56 = *(_QWORD *)v57;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v59 = v32[9];
  v60 = &a1[v59];
  v61 = &a2[v59];
  v62 = *(_QWORD *)v61;
  v63 = *((_QWORD *)v61 + 1);
  v64 = v61[16];
  sub_209EEC024(*(_QWORD *)v61, v63, v64);
  v65 = *(_QWORD *)v60;
  v66 = *((_QWORD *)v60 + 1);
  v67 = v60[16];
  *(_QWORD *)v60 = v62;
  *((_QWORD *)v60 + 1) = v63;
  v60[16] = v64;
  sub_209EEC6A4(v65, v66, v67);
  v68 = v32[10];
  v69 = &a1[v68];
  v70 = &a2[v68];
  v71 = *(_QWORD *)v70;
  LOBYTE(v63) = v70[8];
  sub_209EEC030(*(_QWORD *)v70, v63);
  v72 = *(_QWORD *)v69;
  v73 = v69[8];
  *(_QWORD *)v69 = v71;
  v69[8] = v63;
  sub_209EEC6B0(v72, v73);
  v74 = v32[11];
  v75 = &a1[v74];
  v76 = &a2[v74];
  v77 = *(_QWORD *)v76;
  LOBYTE(v76) = v76[8];
  *(_QWORD *)v75 = v77;
  v75[8] = (char)v76;
  swift_retain();
  swift_release();
  return a1;
}

char *sub_209F22014(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(char *, uint64_t, uint64_t);
  uint64_t v7;
  int *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;

  v4 = sub_209F66A90();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  if (v6(a2, 1, v4))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(a1, a2, v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  v8 = (int *)type metadata accessor for URLLoadingParameters(0);
  *(_OWORD *)&a1[v8[5]] = *(_OWORD *)&a2[v8[5]];
  *(_OWORD *)&a1[v8[6]] = *(_OWORD *)&a2[v8[6]];
  a1[v8[7]] = a2[v8[7]];
  *(_OWORD *)&a1[v8[8]] = *(_OWORD *)&a2[v8[8]];
  *(_OWORD *)&a1[v8[9]] = *(_OWORD *)&a2[v8[9]];
  a1[v8[10]] = a2[v8[10]];
  *(_QWORD *)&a1[v8[11]] = *(_QWORD *)&a2[v8[11]];
  *(_OWORD *)&a1[v8[12]] = *(_OWORD *)&a2[v8[12]];
  *(_OWORD *)&a1[v8[13]] = *(_OWORD *)&a2[v8[13]];
  *(_OWORD *)&a1[v8[14]] = *(_OWORD *)&a2[v8[14]];
  v9 = (int *)type metadata accessor for URLLoader(0);
  v10 = v9[5];
  v11 = &a1[v10];
  v12 = &a2[v10];
  *(_QWORD *)v11 = *(_QWORD *)v12;
  v11[8] = v12[8];
  v13 = v9[6];
  v14 = &a1[v13];
  v15 = &a2[v13];
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v14[8] = v15[8];
  v16 = v9[7];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v17[16] = v18[16];
  *(_OWORD *)v17 = *(_OWORD *)v18;
  v19 = v9[8];
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    if (v6(v21, 1, v4))
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v20, v21, v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v20, 0, 1, v4);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  v24 = v9[9];
  v25 = &a1[v24];
  v26 = &a2[v24];
  *(_OWORD *)v25 = *(_OWORD *)v26;
  v25[16] = v26[16];
  v27 = v9[10];
  v28 = &a1[v27];
  v29 = &a2[v27];
  v28[8] = v29[8];
  *(_QWORD *)v28 = *(_QWORD *)v29;
  v30 = v9[11];
  v31 = &a1[v30];
  v32 = &a2[v30];
  *(_QWORD *)v31 = *(_QWORD *)v32;
  v31[8] = v32[8];
  return a1;
}

char *sub_209F222C0(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(char *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  int *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  void *v51;
  char v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  void *v57;
  char v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;

  v4 = sub_209F66A90();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(a1, a2, v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(a1, v4);
LABEL_6:
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 40))(a1, a2, v4);
LABEL_7:
  v10 = (int *)type metadata accessor for URLLoadingParameters(0);
  v11 = v10[5];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v15 = *(_QWORD *)v13;
  v14 = *((_QWORD *)v13 + 1);
  *(_QWORD *)v12 = v15;
  *((_QWORD *)v12 + 1) = v14;
  swift_bridgeObjectRelease();
  v16 = v10[6];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v20 = *(_QWORD *)v18;
  v19 = *((_QWORD *)v18 + 1);
  *(_QWORD *)v17 = v20;
  *((_QWORD *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  a1[v10[7]] = a2[v10[7]];
  v21 = v10[8];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v25 = *(_QWORD *)v23;
  v24 = *((_QWORD *)v23 + 1);
  *(_QWORD *)v22 = v25;
  *((_QWORD *)v22 + 1) = v24;
  swift_bridgeObjectRelease();
  v26 = v10[9];
  v27 = &a1[v26];
  v28 = &a2[v26];
  v30 = *(_QWORD *)v28;
  v29 = *((_QWORD *)v28 + 1);
  *(_QWORD *)v27 = v30;
  *((_QWORD *)v27 + 1) = v29;
  swift_bridgeObjectRelease();
  a1[v10[10]] = a2[v10[10]];
  *(_QWORD *)&a1[v10[11]] = *(_QWORD *)&a2[v10[11]];
  swift_bridgeObjectRelease();
  v31 = v10[12];
  v32 = &a1[v31];
  v33 = &a2[v31];
  v35 = *(_QWORD *)v33;
  v34 = *((_QWORD *)v33 + 1);
  *(_QWORD *)v32 = v35;
  *((_QWORD *)v32 + 1) = v34;
  swift_bridgeObjectRelease();
  v36 = v10[13];
  v37 = &a1[v36];
  v38 = &a2[v36];
  v40 = *(_QWORD *)v38;
  v39 = *((_QWORD *)v38 + 1);
  *(_QWORD *)v37 = v40;
  *((_QWORD *)v37 + 1) = v39;
  swift_bridgeObjectRelease();
  v41 = v10[14];
  v42 = &a1[v41];
  v43 = &a2[v41];
  v45 = *(_QWORD *)v43;
  v44 = *((_QWORD *)v43 + 1);
  *(_QWORD *)v42 = v45;
  *((_QWORD *)v42 + 1) = v44;
  swift_bridgeObjectRelease();
  v46 = (int *)type metadata accessor for URLLoader(0);
  v47 = v46[5];
  v48 = &a1[v47];
  v49 = &a2[v47];
  v50 = *(_QWORD *)v49;
  LOBYTE(v49) = v49[8];
  v51 = *(void **)v48;
  v52 = v48[8];
  *(_QWORD *)v48 = v50;
  v48[8] = (char)v49;
  sub_209EEC698(v51, v52);
  v53 = v46[6];
  v54 = &a1[v53];
  v55 = &a2[v53];
  v56 = *(_QWORD *)v55;
  LOBYTE(v55) = v55[8];
  v57 = *(void **)v54;
  v58 = v54[8];
  *(_QWORD *)v54 = v56;
  v54[8] = (char)v55;
  sub_209EEC698(v57, v58);
  v59 = v46[7];
  v60 = &a1[v59];
  v61 = &a2[v59];
  v62 = v61[16];
  v63 = *(_QWORD *)v60;
  v64 = *((_QWORD *)v60 + 1);
  v65 = v60[16];
  *(_OWORD *)v60 = *(_OWORD *)v61;
  v60[16] = v62;
  sub_209EEC6A4(v63, v64, v65);
  if (a1 != a2)
  {
    v66 = v46[8];
    v67 = &a1[v66];
    v68 = &a2[v66];
    sub_209EE017C((uint64_t)&a1[v66], &qword_2545BB1F8);
    v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if (v6(v68, 1, v4))
      {
        v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
        memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v67, v68, v4);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v67, 0, 1, v4);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
    }
  }
  v71 = v46[9];
  v72 = &a1[v71];
  v73 = &a2[v71];
  v74 = v73[16];
  v75 = *(_QWORD *)v72;
  v76 = *((_QWORD *)v72 + 1);
  v77 = v72[16];
  *(_OWORD *)v72 = *(_OWORD *)v73;
  v72[16] = v74;
  sub_209EEC6A4(v75, v76, v77);
  v78 = v46[10];
  v79 = &a1[v78];
  v80 = &a2[v78];
  v81 = *(_QWORD *)v80;
  LOBYTE(v80) = v80[8];
  v82 = *(_QWORD *)v79;
  v83 = v79[8];
  *(_QWORD *)v79 = v81;
  v79[8] = (char)v80;
  sub_209EEC6B0(v82, v83);
  v84 = v46[11];
  v85 = &a1[v84];
  v86 = &a2[v84];
  v87 = *(_QWORD *)v86;
  LOBYTE(v86) = v86[8];
  *(_QWORD *)v85 = v87;
  v85[8] = (char)v86;
  swift_release();
  return a1;
}

uint64_t sub_209F22688()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_209F22694(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for URLLoader(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_209F226D0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_209F226DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for URLLoader(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_209F2271C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for URLLoader(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_209F22788()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2545BBE88;
  if (!qword_2545BBE88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BBE70);
    v2[0] = sub_209EE83E8(&qword_2545BBE90, &qword_2545BBE80, MEMORY[0x24BDEFB70]);
    v2[1] = sub_209EE83E8(&qword_2545BBE98, &qword_2545BBE78, MEMORY[0x24BDF1020]);
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2545BBE88);
  }
  return result;
}

uint64_t sub_209F22824(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  type metadata accessor for OpenURLViewModifier();
  v2 = sub_209F66E08();
  v4[0] = v1;
  v4[1] = sub_209F22880();
  return MEMORY[0x20BD1DB1C](MEMORY[0x24BDED300], v2, v4);
}

unint64_t sub_209F22880()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2545BBC00;
  if (!qword_2545BBC00)
  {
    v1 = type metadata accessor for OpenURLViewModifier();
    result = MEMORY[0x20BD1DB1C](&unk_209F79380, v1);
    atomic_store(result, (unint64_t *)&qword_2545BBC00);
  }
  return result;
}

uint64_t objectdestroyTm_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  int *v7;
  uint64_t v8;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for OpenURLViewModifier() - 8) + 80);
  v2 = (v1 + 16) & ~v1;
  v3 = v0 + v2;
  v4 = sub_209F66A90();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(v0 + v2, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v2, v4);
  type metadata accessor for URLLoadingParameters(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = (int *)type metadata accessor for URLLoader(0);
  sub_209EEC698(*(id *)(v3 + v7[5]), *(_BYTE *)(v3 + v7[5] + 8));
  sub_209EEC698(*(id *)(v3 + v7[6]), *(_BYTE *)(v3 + v7[6] + 8));
  sub_209EEC6A4(*(_QWORD *)(v3 + v7[7]), *(_QWORD *)(v3 + v7[7] + 8), *(_BYTE *)(v3 + v7[7] + 16));
  v8 = v3 + v7[8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    if (!v6(v8, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
  }
  else
  {
    swift_release();
  }
  sub_209EEC6A4(*(_QWORD *)(v3 + v7[9]), *(_QWORD *)(v3 + v7[9] + 8), *(_BYTE *)(v3 + v7[9] + 16));
  sub_209EEC6B0(*(_QWORD *)(v3 + v7[10]), *(_BYTE *)(v3 + v7[10] + 8));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_209F22AD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for OpenURLViewModifier() - 8) + 80);
  return sub_209F20B18(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_209F22B1C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(unint64_t, uint64_t, uint64_t);
  int *v8;
  unint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(type metadata accessor for OpenURLViewModifier() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v11 = *(_QWORD *)(v1 + 64);
  v3 = sub_209F66A90();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  swift_unknownObjectRelease();
  v6 = v0 + v2;
  v7 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48);
  if (!v7(v0 + v2, 1, v3))
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  type metadata accessor for URLLoadingParameters(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = (int *)type metadata accessor for URLLoader(0);
  sub_209EEC698(*(id *)(v6 + v8[5]), *(_BYTE *)(v6 + v8[5] + 8));
  sub_209EEC698(*(id *)(v6 + v8[6]), *(_BYTE *)(v6 + v8[6] + 8));
  sub_209EEC6A4(*(_QWORD *)(v6 + v8[7]), *(_QWORD *)(v6 + v8[7] + 8), *(_BYTE *)(v6 + v8[7] + 16));
  v9 = v6 + v8[8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    if (!v7(v9, 1, v3))
      (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v9, v3);
  }
  else
  {
    swift_release();
  }
  sub_209EEC6A4(*(_QWORD *)(v6 + v8[9]), *(_QWORD *)(v6 + v8[9] + 8), *(_BYTE *)(v6 + v8[9] + 16));
  sub_209EEC6B0(*(_QWORD *)(v6 + v8[10]), *(_BYTE *)(v6 + v8[10] + 8));
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + ((v2 + v11 + v5) & ~v5), v3);
  return swift_deallocObject();
}

uint64_t sub_209F22D64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *(_QWORD *)(type metadata accessor for OpenURLViewModifier() - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_209F66A90() - 8) + 80);
  v6 = v3 + v4 + v5;
  v7 = v0 + v3;
  v8 = v0 + (v6 & ~v5);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_209EE061C;
  return sub_209F20CF4((uint64_t)v9, v10, v11, v7, v8);
}

uint64_t sub_209F22DF8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_209F22E1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_209EE061C;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_2545BBEB0 + dword_2545BBEB0))(a1, v4);
}

uint64_t sub_209F22E8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  MEMORY[0x24BDAC7A8](a1, a2);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v8 + 16))(v7, v9);
  v10 = *(_QWORD *)(a3 + 16);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a4, v7, v10);
  result = sub_209F677E0();
  __break(1u);
  return result;
}

uint64_t URLLoader.urlLoadingParameters.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_209F22F90(v1, a1);
}

uint64_t sub_209F22F90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for URLLoadingParameters(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t URLLoader.urlLoadingParameters.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_209F22FDC(a1, v1);
}

uint64_t sub_209F22FDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for URLLoadingParameters(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*URLLoader.urlLoadingParameters.modify())()
{
  return nullsub_1;
}

uint64_t URLLoader.objectModel.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  char v3;
  uint64_t v4;

  v1 = v0 + *(int *)(type metadata accessor for URLLoader(0) + 20);
  v2 = *(id *)v1;
  v3 = *(_BYTE *)(v1 + 8);
  sub_209EEC018(*(id *)v1, v3);
  v4 = sub_209EF5940(v2, v3, (uint64_t *)&unk_2545BB7B0, (void (*)(void *, _QWORD))sub_209EF8604);
  sub_209EEC698(v2, v3);
  return v4;
}

uint64_t type metadata accessor for URLLoader(uint64_t a1)
{
  return sub_209EF257C(a1, (uint64_t *)&unk_2545C2200);
}

uint64_t sub_209F230B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  os_log_type_t v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = v1;
  v4 = sub_209F66E98();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_209EE3528(v2, (uint64_t)v12, &qword_2545BB1F8);
  if (swift_getEnumCaseMultiPayload() == 1)
    return sub_209EF1E0C((uint64_t)v12, a1, &qword_2545BB600);
  v14 = sub_209F67540();
  v15 = sub_209F67030();
  if (os_log_type_enabled(v15, v14))
  {
    v16 = swift_slowAlloc();
    v17 = swift_slowAlloc();
    v19 = v17;
    *(_DWORD *)v16 = 136315138;
    *(_QWORD *)(v16 + 4) = sub_209EE75A0(0x6C616E6F6974704FLL, 0xED00003E4C52553CLL, &v19);
    _os_log_impl(&dword_209E87000, v15, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x20BD1DC00](v17, -1, -1);
    MEMORY[0x20BD1DC00](v16, -1, -1);
  }

  sub_209F66E8C();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_209F232C4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  os_log_type_t v15;
  NSObject *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;

  v10 = sub_209F66E98();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) != 0)
  {
    swift_unknownObjectRetain();
  }
  else
  {
    swift_retain();
    v15 = sub_209F67540();
    v16 = sub_209F67030();
    if (os_log_type_enabled(v16, v15))
    {
      v17 = swift_slowAlloc();
      v22 = a5;
      v18 = v17;
      v19 = swift_slowAlloc();
      v23 = v19;
      *(_DWORD *)v18 = 136315138;
      *(_QWORD *)(v18 + 4) = sub_209EE75A0(a4, v22, &v23);
      _os_log_impl(&dword_209E87000, v16, v15, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x20BD1DC00](v19, -1, -1);
      MEMORY[0x20BD1DC00](v18, -1, -1);
    }

    sub_209F66E8C();
    swift_getAtKeyPath();
    sub_209EEC6A4(a1, a2, 0);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    return v23;
  }
  return a1;
}

uint64_t sub_209F23470(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  char *v9;
  os_log_type_t v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = sub_209F66E98();
  v5 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4, v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0)
  {
    sub_209EEC030(a1, 0);
    v10 = sub_209F67540();
    v11 = sub_209F67030();
    if (os_log_type_enabled(v11, v10))
    {
      v12 = swift_slowAlloc();
      v13 = swift_slowAlloc();
      v15 = v13;
      *(_DWORD *)v12 = 136315138;
      *(_QWORD *)(v12 + 4) = sub_209EE75A0(0x6964616F4C4C5255, 0xEE0065646F4D676ELL, &v15);
      _os_log_impl(&dword_209E87000, v11, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x20BD1DC00](v13, -1, -1);
      MEMORY[0x20BD1DC00](v12, -1, -1);
    }

    sub_209F66E8C();
    swift_getAtKeyPath();
    sub_209EEC6B0(a1, 0);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v9, v4);
  }
  return result;
}

uint64_t sub_209F23614(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  os_log_type_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v4 = sub_209F66E98();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  if ((a2 & 1) == 0)
  {
    v9 = sub_209F67540();
    v10 = sub_209F67030();
    if (os_log_type_enabled(v10, v9))
    {
      v11 = swift_slowAlloc();
      v12 = swift_slowAlloc();
      v15 = v12;
      *(_DWORD *)v11 = 136315138;
      *(_QWORD *)(v11 + 4) = sub_209EE75A0(0xD000000000000018, 0x8000000209F72B40, &v15);
      _os_log_impl(&dword_209E87000, v10, v9, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x20BD1DC00](v12, -1, -1);
      MEMORY[0x20BD1DC00](v11, -1, -1);
    }

    sub_209F66E8C();
    swift_getAtKeyPath();
    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    return v15;
  }
  return a1;
}

uint64_t URLLoader.ruiParentElement.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  char v3;
  uint64_t v4;

  v1 = v0 + *(int *)(type metadata accessor for URLLoader(0) + 24);
  v2 = *(id *)v1;
  v3 = *(_BYTE *)(v1 + 8);
  sub_209EEC018(*(id *)v1, v3);
  v4 = sub_209EF5940(v2, v3, (uint64_t *)&unk_2545BB7A0, (void (*)(void *, _QWORD))sub_209EEC698);
  sub_209EEC698(v2, v3);
  return v4;
}

uint64_t URLLoader.baseURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  char v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1 + *(int *)(type metadata accessor for URLLoader(0) + 20);
  v8 = *(id *)v7;
  v9 = *(_BYTE *)(v7 + 8);
  sub_209EEC018(*(id *)v7, v9);
  v10 = (void *)sub_209EF5940(v8, v9, (uint64_t *)&unk_2545BB7B0, (void (*)(void *, _QWORD))sub_209EF8604);
  sub_209EEC698(v8, v9);
  if (v10)
  {
    v11 = objc_msgSend(v10, sel_sourceURL);

    if (v11)
    {
      sub_209F66A60();

      v12 = sub_209F66A90();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v6, 0, 1, v12);
    }
    else
    {
      v15 = sub_209F66A90();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v6, 1, 1, v15);
    }
    return sub_209EF1E0C((uint64_t)v6, a1, &qword_2545BB600);
  }
  else
  {
    v13 = sub_209F66A90();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a1, 1, 1, v13);
  }
}

uint64_t URLLoader.scriptEnvironment.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  char v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v9;

  v1 = v0 + *(int *)(type metadata accessor for URLLoader(0) + 20);
  v2 = *(id *)v1;
  v3 = *(_BYTE *)(v1 + 8);
  sub_209EEC018(*(id *)v1, v3);
  v4 = (void *)sub_209EF5940(v2, v3, (uint64_t *)&unk_2545BB7B0, (void (*)(void *, _QWORD))sub_209EF8604);
  sub_209EEC698(v2, v3);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545BB7B0);
  sub_209F22E8C(0xD000000000000044, 0x8000000209F72AA0, v5, (uint64_t)&v9);

  v6 = v9;
  v7 = RUIObjectModel.scriptEnvironment.getter();

  return v7;
}

unint64_t URLLoader.clientInfo.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  char v3;
  void *v4;
  id v5;
  uint64_t v6;
  unint64_t v7;

  v1 = v0 + *(int *)(type metadata accessor for URLLoader(0) + 20);
  v2 = *(id *)v1;
  v3 = *(_BYTE *)(v1 + 8);
  sub_209EEC018(*(id *)v1, v3);
  v4 = (void *)sub_209EF5940(v2, v3, (uint64_t *)&unk_2545BB7B0, (void (*)(void *, _QWORD))sub_209EF8604);
  sub_209EEC698(v2, v3);
  if (!v4
    || (v5 = objc_msgSend(v4, sel_clientInfo), v4, !v5)
    || (v6 = sub_209F67258(), v5, v7 = sub_209EE1244(v6), swift_bridgeObjectRelease(), !v7))
  {
    v7 = sub_209EE1614(MEMORY[0x24BEE4AF8]);
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t URLLoader.dataSource.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  v1 = v0 + *(int *)(type metadata accessor for URLLoader(0) + 28);
  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_BYTE *)(v1 + 16);
  sub_209EEC024(*(_QWORD *)v1, v3, v4);
  v5 = sub_209F232C4(v2, v3, v4, 0xD00000000000001CLL, 0x8000000209F72B80);
  sub_209EEC6A4(v2, v3, v4);
  return v5;
}

uint64_t URLLoader.legacyRefreshURL.getter@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for URLLoader(0);
  return sub_209F230B8(a1);
}

uint64_t sub_209F23C24()
{
  return sub_209EF53AC();
}

uint64_t sub_209F23C44(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_209EE3528(a1, (uint64_t)v5, &qword_2545BB600);
  return sub_209EF5424((uint64_t)v5);
}

uint64_t URLLoader.hooks.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  v1 = v0 + *(int *)(type metadata accessor for URLLoader(0) + 36);
  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_BYTE *)(v1 + 16);
  sub_209EEC024(*(_QWORD *)v1, v3, v4);
  v5 = sub_209F232C4(v2, v3, v4, 0xD000000000000016, 0x8000000209F72B60);
  sub_209EEC6A4(v2, v3, v4);
  return v5;
}

uint64_t sub_209F23D5C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_209EF8C08();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_209F23D84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_209F23D90(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_209EF8C40);
}

uint64_t sub_209F23D90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(a1 + 8);
  v7 = swift_unknownObjectRetain();
  return a5(v7, v6);
}

uint64_t URLLoader.defaultURLLoadingMode.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = v0 + *(int *)(type metadata accessor for URLLoader(0) + 40);
  v2 = *(_QWORD *)v1;
  v3 = *(_BYTE *)(v1 + 8);
  sub_209EEC030(*(_QWORD *)v1, v3);
  sub_209F23470(v2, v3);
  return sub_209EEC6B0(v2, v3);
}

uint64_t sub_209F23E2C()
{
  return EnvironmentValues.ruiURLLoadingMode.getter();
}

uint64_t sub_209F23E4C()
{
  return EnvironmentValues.ruiURLLoadingMode.setter();
}

uint64_t URLLoader.activityIndicatorManager.getter()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_BYTE *)(v0 + *(int *)(type metadata accessor for URLLoader(0) + 44) + 8);
  v2 = swift_retain();
  v3 = sub_209F23614(v2, v1);
  swift_release();
  return v3;
}

unint64_t sub_209F23EBC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2545BB988;
  if (!qword_2545BB988)
  {
    v1 = type metadata accessor for ActivityIndicatorManager(255);
    result = MEMORY[0x20BD1DB1C](&protocol conformance descriptor for ActivityIndicatorManager, v1);
    atomic_store(result, (unint64_t *)&qword_2545BB988);
  }
  return result;
}

uint64_t URLLoader.init<A>(from:keys:defaultHTTPMethod:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  void (*v26)(char *);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int *v42;
  uint64_t v43;
  _QWORD v44[5];
  uint64_t v45;

  v42 = a4;
  v39 = a5;
  v40 = a6;
  v41 = a3;
  v38 = a2;
  v45 = a1;
  v8 = type metadata accessor for URLLoadingParameters.Keys(0, a5, a6, (uint64_t)a4);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v37 = (char *)&v31 - v11;
  v12 = type metadata accessor for URLLoadingParameters(0);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (int *)type metadata accessor for URLLoader(0);
  v17 = a7 + v16[5];
  *(_QWORD *)v17 = swift_getKeyPath();
  v36 = v17;
  *(_BYTE *)(v17 + 8) = 0;
  v18 = a7 + v16[6];
  *(_QWORD *)v18 = swift_getKeyPath();
  v35 = v18;
  *(_BYTE *)(v18 + 8) = 0;
  v19 = a7 + v16[7];
  *(_QWORD *)v19 = swift_getKeyPath();
  *(_QWORD *)(v19 + 8) = 0;
  *(_BYTE *)(v19 + 16) = 0;
  v20 = (uint64_t *)(a7 + v16[8]);
  *v20 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
  v34 = v20;
  swift_storeEnumTagMultiPayload();
  v21 = a7 + v16[9];
  *(_QWORD *)v21 = swift_getKeyPath();
  *(_QWORD *)(v21 + 8) = 0;
  *(_BYTE *)(v21 + 16) = 0;
  v22 = a7 + v16[10];
  *(_QWORD *)v22 = swift_getKeyPath();
  *(_BYTE *)(v22 + 8) = 0;
  v23 = a7 + v16[11];
  type metadata accessor for ActivityIndicatorManager(0);
  sub_209F23EBC();
  *(_QWORD *)v23 = sub_209F66D30();
  v33 = v23;
  *(_BYTE *)(v23 + 8) = v24 & 1;
  sub_209EE0E3C(v45, (uint64_t)v44);
  v25 = v9;
  v26 = *(void (**)(char *))(v9 + 16);
  v27 = (uint64_t)v37;
  v28 = v38;
  v26(v37);
  v32 = v15;
  v29 = v43;
  URLLoadingParameters.init<A>(from:keys:defaultHTTPMethod:)(v44, v27, v41, v42, v39, v40, (uint64_t)v15);
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v28, v8);
  __swift_destroy_boxed_opaque_existential_1(v45);
  if (!v29)
    return sub_209F241D4((uint64_t)v32, a7);
  sub_209EEC698(*(id *)v36, *(_BYTE *)(v36 + 8));
  sub_209EEC698(*(id *)v35, *(_BYTE *)(v35 + 8));
  sub_209EEC6A4(*(_QWORD *)v19, *(_QWORD *)(v19 + 8), *(_BYTE *)(v19 + 16));
  sub_209EE017C((uint64_t)v34, &qword_2545BB8B8);
  sub_209EEC6A4(*(_QWORD *)v21, *(_QWORD *)(v21 + 8), *(_BYTE *)(v21 + 16));
  sub_209EEC6B0(*(_QWORD *)v22, *(_BYTE *)(v22 + 8));
  return swift_release();
}

uint64_t sub_209F241D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for URLLoadingParameters(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t URLLoader.init<A>(from:keys:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int *v32;
  _QWORD v34[2];
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[5];
  uint64_t v45;

  v42 = a4;
  v39 = a1;
  v40 = a3;
  v7 = type metadata accessor for URLLoadingParameters.Keys(0, a3, a4, a4);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)v34 - v10;
  v12 = type metadata accessor for URLLoadingParameters(0);
  MEMORY[0x24BDAC7A8](v12, v13);
  v45 = (uint64_t)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (int *)type metadata accessor for URLLoader(0);
  v16 = a5 + v15[5];
  *(_QWORD *)v16 = swift_getKeyPath();
  v38 = v16;
  *(_BYTE *)(v16 + 8) = 0;
  v17 = a5 + v15[6];
  *(_QWORD *)v17 = swift_getKeyPath();
  v37 = v17;
  *(_BYTE *)(v17 + 8) = 0;
  v18 = a5 + v15[7];
  *(_QWORD *)v18 = swift_getKeyPath();
  *(_QWORD *)(v18 + 8) = 0;
  *(_BYTE *)(v18 + 16) = 0;
  v19 = (uint64_t *)(a5 + v15[8]);
  *v19 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
  v36 = v19;
  swift_storeEnumTagMultiPayload();
  v20 = a5 + v15[9];
  *(_QWORD *)v20 = swift_getKeyPath();
  *(_QWORD *)(v20 + 8) = 0;
  *(_BYTE *)(v20 + 16) = 0;
  v21 = a5 + v15[10];
  *(_QWORD *)v21 = swift_getKeyPath();
  v35 = v21;
  *(_BYTE *)(v21 + 8) = 0;
  v22 = a5 + v15[11];
  type metadata accessor for ActivityIndicatorManager(0);
  sub_209F23EBC();
  v23 = v39;
  *(_QWORD *)v22 = sub_209F66D30();
  v34[1] = v22;
  *(_BYTE *)(v22 + 8) = v24 & 1;
  sub_209EE0E3C(v23, (uint64_t)v44);
  v25 = v8;
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v27 = a2;
  v41 = v7;
  v26(v11, a2, v7);
  v28 = v40;
  v29 = v42;
  v30 = sub_209F30398();
  v31 = v43;
  URLLoadingParameters.init<A>(from:keys:defaultHTTPMethod:)(v44, (uint64_t)v11, v30, v32, v28, v29, v45);
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v27, v41);
  __swift_destroy_boxed_opaque_existential_1(v23);
  if (!v31)
    return sub_209F241D4(v45, a5);
  sub_209EEC698(*(id *)v38, *(_BYTE *)(v38 + 8));
  sub_209EEC698(*(id *)v37, *(_BYTE *)(v37 + 8));
  sub_209EEC6A4(*(_QWORD *)v18, *(_QWORD *)(v18 + 8), *(_BYTE *)(v18 + 16));
  sub_209EE017C((uint64_t)v36, &qword_2545BB8B8);
  sub_209EEC6A4(*(_QWORD *)v20, *(_QWORD *)(v20 + 8), *(_BYTE *)(v20 + 16));
  sub_209EEC6B0(*(_QWORD *)v35, *(_BYTE *)(v35 + 8));
  return swift_release();
}

uint64_t URLLoader.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  _BYTE v22[40];
  uint64_t v23;

  v4 = type metadata accessor for URLLoadingParameters(0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for URLLoader(0);
  v9 = a2 + v8[5];
  *(_QWORD *)v9 = swift_getKeyPath();
  v21 = v9;
  *(_BYTE *)(v9 + 8) = 0;
  v10 = a2 + v8[6];
  *(_QWORD *)v10 = swift_getKeyPath();
  *(_BYTE *)(v10 + 8) = 0;
  v11 = a2 + v8[7];
  *(_QWORD *)v11 = swift_getKeyPath();
  *(_QWORD *)(v11 + 8) = 0;
  *(_BYTE *)(v11 + 16) = 0;
  v12 = (uint64_t *)(a2 + v8[8]);
  *v12 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
  v20 = v12;
  swift_storeEnumTagMultiPayload();
  v13 = a2 + v8[9];
  *(_QWORD *)v13 = swift_getKeyPath();
  *(_QWORD *)(v13 + 8) = 0;
  *(_BYTE *)(v13 + 16) = 0;
  v14 = a2 + v8[10];
  *(_QWORD *)v14 = swift_getKeyPath();
  *(_BYTE *)(v14 + 8) = 0;
  v15 = a2 + v8[11];
  type metadata accessor for ActivityIndicatorManager(0);
  sub_209F23EBC();
  *(_QWORD *)v15 = sub_209F66D30();
  *(_BYTE *)(v15 + 8) = v16 & 1;
  sub_209EE0E3C(a1, (uint64_t)v22);
  v17 = v23;
  URLLoadingParameters.init(from:)((uint64_t)v22, (uint64_t)v7);
  __swift_destroy_boxed_opaque_existential_1(a1);
  if (!v17)
    return sub_209F241D4((uint64_t)v7, a2);
  sub_209EEC698(*(id *)v21, *(_BYTE *)(v21 + 8));
  sub_209EEC698(*(id *)v10, *(_BYTE *)(v10 + 8));
  sub_209EEC6A4(*(_QWORD *)v11, *(_QWORD *)(v11 + 8), *(_BYTE *)(v11 + 16));
  sub_209EE017C((uint64_t)v20, &qword_2545BB8B8);
  sub_209EEC6A4(*(_QWORD *)v13, *(_QWORD *)(v13 + 8), *(_BYTE *)(v13 + 16));
  sub_209EEC6B0(*(_QWORD *)v14, *(_BYTE *)(v14 + 8));
  return swift_release();
}

uint64_t URLLoader.init(from:defaultHTTPMethod:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v26[40];
  uint64_t v27;

  v24 = a2;
  v25 = a3;
  v6 = type metadata accessor for URLLoadingParameters(0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for URLLoader(0);
  v11 = a4 + v10[5];
  *(_QWORD *)v11 = swift_getKeyPath();
  v23 = v11;
  *(_BYTE *)(v11 + 8) = 0;
  v12 = a4 + v10[6];
  *(_QWORD *)v12 = swift_getKeyPath();
  *(_BYTE *)(v12 + 8) = 0;
  v13 = a4 + v10[7];
  *(_QWORD *)v13 = swift_getKeyPath();
  *(_QWORD *)(v13 + 8) = 0;
  *(_BYTE *)(v13 + 16) = 0;
  v14 = (uint64_t *)(a4 + v10[8]);
  *v14 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
  v22 = v14;
  swift_storeEnumTagMultiPayload();
  v15 = a4 + v10[9];
  *(_QWORD *)v15 = swift_getKeyPath();
  *(_QWORD *)(v15 + 8) = 0;
  *(_BYTE *)(v15 + 16) = 0;
  v16 = a4 + v10[10];
  *(_QWORD *)v16 = swift_getKeyPath();
  *(_BYTE *)(v16 + 8) = 0;
  v17 = a4 + v10[11];
  type metadata accessor for ActivityIndicatorManager(0);
  sub_209F23EBC();
  *(_QWORD *)v17 = sub_209F66D30();
  *(_BYTE *)(v17 + 8) = v18 & 1;
  sub_209EE0E3C(a1, (uint64_t)v26);
  v19 = v27;
  URLLoadingParameters.init(from:defaultHTTPMethod:)((uint64_t)v26, v24, v25, (uint64_t)v9);
  __swift_destroy_boxed_opaque_existential_1(a1);
  if (!v19)
    return sub_209F241D4((uint64_t)v9, a4);
  sub_209EEC698(*(id *)v23, *(_BYTE *)(v23 + 8));
  sub_209EEC698(*(id *)v12, *(_BYTE *)(v12 + 8));
  sub_209EEC6A4(*(_QWORD *)v13, *(_QWORD *)(v13 + 8), *(_BYTE *)(v13 + 16));
  sub_209EE017C((uint64_t)v22, &qword_2545BB8B8);
  sub_209EEC6A4(*(_QWORD *)v15, *(_QWORD *)(v15 + 8), *(_BYTE *)(v15 + 16));
  sub_209EEC6B0(*(_QWORD *)v16, *(_BYTE *)(v16 + 8));
  return swift_release();
}

uint64_t sub_209F24960()
{
  return sub_209F66DE4();
}

uint64_t sub_209F24978(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  char v4;
  uint64_t v5;

  v2 = v1 + *(int *)(a1 + 20);
  v3 = *(id *)v2;
  v4 = *(_BYTE *)(v2 + 8);
  sub_209EEC018(*(id *)v2, v4);
  v5 = sub_209EF5940(v3, v4, (uint64_t *)&unk_2545BB7B0, (void (*)(void *, _QWORD))sub_209EF8604);
  sub_209EEC698(v3, v4);
  return v5;
}

uint64_t sub_209F249E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  char v4;
  uint64_t v5;

  v2 = v1 + *(int *)(a1 + 24);
  v3 = *(id *)v2;
  v4 = *(_BYTE *)(v2 + 8);
  sub_209EEC018(*(id *)v2, v4);
  v5 = sub_209EF5940(v3, v4, (uint64_t *)&unk_2545BB7A0, (void (*)(void *, _QWORD))sub_209EEC698);
  sub_209EEC698(v3, v4);
  return v5;
}

uint64_t sub_209F24A50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_209F22F90(v1, a1);
}

uint64_t sub_209F24A5C(uint64_t a1)
{
  uint64_t v1;

  return sub_209F22FDC(a1, v1);
}

uint64_t (*sub_209F24A64())()
{
  return nullsub_1;
}

uint64_t sub_209F24A78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = v1 + *(int *)(a1 + 40);
  v3 = *(_QWORD *)v2;
  v4 = *(_BYTE *)(v2 + 8);
  sub_209EEC030(*(_QWORD *)v2, v4);
  sub_209F23470(v3, v4);
  return sub_209EEC6B0(v3, v4);
}

uint64_t sub_209F24AD0(uint64_t a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_BYTE *)(v1 + *(int *)(a1 + 44) + 8);
  v3 = swift_retain();
  v4 = sub_209F23614(v3, v2);
  swift_release();
  return v4;
}

uint64_t sub_209F24B18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_209EE06B8;
  return URLLoadingCapable.handle(url:)(a1, a2, a3);
}

uint64_t sub_209F24B88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v2 = v1 + *(int *)(a1 + 36);
  v3 = *(_QWORD *)v2;
  v4 = *(_QWORD *)(v2 + 8);
  v5 = *(_BYTE *)(v2 + 16);
  sub_209EEC024(*(_QWORD *)v2, v4, v5);
  v6 = sub_209F232C4(v3, v4, v5, 0xD000000000000016, 0x8000000209F72B60);
  sub_209EEC6A4(v3, v4, v5);
  return v6;
}

uint64_t URLLoaderProvider.objectModel.getter()
{
  uint64_t v0;
  void *v1;
  char v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 24);
  v2 = *(_BYTE *)(v0 + 32);
  sub_209EEC018(v1, v2);
  v3 = sub_209EF5940(v1, v2, (uint64_t *)&unk_2545BB7B0, (void (*)(void *, _QWORD))sub_209EF8604);
  sub_209EEC698(v1, v2);
  return v3;
}

uint64_t URLLoaderProvider.ruiParentElement.getter()
{
  uint64_t v0;
  void *v1;
  char v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 40);
  v2 = *(_BYTE *)(v0 + 48);
  sub_209EEC018(v1, v2);
  v3 = sub_209EF5940(v1, v2, (uint64_t *)&unk_2545BB7A0, (void (*)(void *, _QWORD))sub_209EEC698);
  sub_209EEC698(v1, v2);
  return v3;
}

uint64_t URLLoaderProvider.baseURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  char v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void **)(v1 + 24);
  v8 = *(_BYTE *)(v1 + 32);
  sub_209EEC018(v7, v8);
  v9 = (void *)sub_209EF5940(v7, v8, (uint64_t *)&unk_2545BB7B0, (void (*)(void *, _QWORD))sub_209EF8604);
  sub_209EEC698(v7, v8);
  if (v9)
  {
    v10 = objc_msgSend(v9, sel_sourceURL);

    if (v10)
    {
      sub_209F66A60();

      v11 = sub_209F66A90();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v6, 0, 1, v11);
    }
    else
    {
      v14 = sub_209F66A90();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v6, 1, 1, v14);
    }
    return sub_209EF1E0C((uint64_t)v6, a1, &qword_2545BB600);
  }
  else
  {
    v12 = sub_209F66A90();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a1, 1, 1, v12);
  }
}

uint64_t URLLoaderProvider.scriptEnvironment.getter()
{
  uint64_t v0;
  void *v1;
  char v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v8;

  v1 = *(void **)(v0 + 24);
  v2 = *(_BYTE *)(v0 + 32);
  sub_209EEC018(v1, v2);
  v3 = (void *)sub_209EF5940(v1, v2, (uint64_t *)&unk_2545BB7B0, (void (*)(void *, _QWORD))sub_209EF8604);
  sub_209EEC698(v1, v2);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545BB7B0);
  sub_209F22E8C(0xD00000000000004CLL, 0x8000000209F72AF0, v4, (uint64_t)&v8);

  v5 = v8;
  v6 = RUIObjectModel.scriptEnvironment.getter();

  return v6;
}

unint64_t URLLoaderProvider.clientInfo.getter()
{
  uint64_t v0;
  void *v1;
  char v2;
  void *v3;
  id v4;
  uint64_t v5;
  unint64_t v6;

  v1 = *(void **)(v0 + 24);
  v2 = *(_BYTE *)(v0 + 32);
  sub_209EEC018(v1, v2);
  v3 = (void *)sub_209EF5940(v1, v2, (uint64_t *)&unk_2545BB7B0, (void (*)(void *, _QWORD))sub_209EF8604);
  sub_209EEC698(v1, v2);
  if (!v3
    || (v4 = objc_msgSend(v3, sel_clientInfo), v3, !v4)
    || (v5 = sub_209F67258(), v4, v6 = sub_209EE1244(v5), swift_bridgeObjectRelease(), !v6))
  {
    v6 = sub_209EE1614(MEMORY[0x24BEE4AF8]);
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t type metadata accessor for URLLoaderProvider(uint64_t a1)
{
  return sub_209EF257C(a1, (uint64_t *)&unk_2545C2210);
}

uint64_t URLLoaderProvider.loader(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void *v10;
  char v11;
  void *v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v38;

  v3 = v2;
  URLLoaderProvider.baseURL.getter(a2);
  v5 = (int *)type metadata accessor for URLLoaderProvider(0);
  v6 = (int *)type metadata accessor for StaticURLLoader(0);
  sub_209F230B8(a2 + v6[5]);
  v7 = v2 + v5[9];
  v8 = *(_QWORD *)v7;
  v9 = *(_BYTE *)(v7 + 8);
  sub_209EEC030(*(_QWORD *)v7, v9);
  sub_209F23470(v8, v9);
  sub_209EEC6B0(v8, v9);
  v10 = *(void **)(v3 + 24);
  v11 = *(_BYTE *)(v3 + 32);
  sub_209EEC018(v10, v11);
  v36 = sub_209EF5940(v10, v11, (uint64_t *)&unk_2545BB7B0, (void (*)(void *, _QWORD))sub_209EF8604);
  sub_209EEC698(v10, v11);
  v12 = *(void **)(v3 + 40);
  v13 = *(_BYTE *)(v3 + 48);
  sub_209EEC018(v12, v13);
  v35 = sub_209EF5940(v12, v13, (uint64_t *)&unk_2545BB7A0, (void (*)(void *, _QWORD))sub_209EEC698);
  sub_209EEC698(v12, v13);
  v14 = *(_QWORD *)v3;
  v15 = *(_QWORD *)(v3 + 8);
  LOBYTE(v12) = *(_BYTE *)(v3 + 16);
  sub_209EEC024(*(_QWORD *)v3, v15, (char)v12);
  v16 = sub_209F232C4(v14, v15, (char)v12, 0xD00000000000001CLL, 0x8000000209F72B80);
  v33 = v17;
  v34 = v16;
  sub_209EEC6A4(v14, v15, (char)v12);
  sub_209EEC018(v10, v11);
  v18 = (void *)sub_209EF5940(v10, v11, (uint64_t *)&unk_2545BB7B0, (void (*)(void *, _QWORD))sub_209EF8604);
  sub_209EEC698(v10, v11);
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545BB7B0);
  sub_209F22E8C(0xD00000000000004CLL, 0x8000000209F72AF0, v19, (uint64_t)&v38);

  v20 = v38;
  v21 = RUIObjectModel.scriptEnvironment.getter();

  v22 = v3 + v5[8];
  v23 = *(_QWORD *)v22;
  v24 = *(_QWORD *)(v22 + 8);
  LOBYTE(v18) = *(_BYTE *)(v22 + 16);
  sub_209EEC024(*(_QWORD *)v22, v24, (char)v18);
  v25 = sub_209F232C4(v23, v24, (char)v18, 0xD000000000000016, 0x8000000209F72B60);
  v27 = v26;
  sub_209EEC6A4(v23, v24, (char)v18);
  sub_209F22F90(a1, a2 + v6[12]);
  LOBYTE(v3) = *(_BYTE *)(v3 + v5[10] + 8);
  v28 = swift_retain();
  v29 = sub_209F23614(v28, v3);
  result = swift_release();
  *(_QWORD *)(a2 + v6[7]) = v36;
  *(_QWORD *)(a2 + v6[8]) = v35;
  v31 = (uint64_t *)(a2 + v6[9]);
  *v31 = v34;
  v31[1] = v33;
  *(_QWORD *)(a2 + v6[10]) = v21;
  v32 = (uint64_t *)(a2 + v6[11]);
  *v32 = v25;
  v32[1] = v27;
  *(_QWORD *)(a2 + v6[13]) = v29;
  return result;
}

uint64_t type metadata accessor for StaticURLLoader(uint64_t a1)
{
  return sub_209EF257C(a1, qword_2545C2220);
}

void *sub_209F2530C(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + *(int *)(a1 + 28));
  v3 = v2;
  return v2;
}

void *sub_209F25334(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + *(int *)(a1 + 32));
  v3 = v2;
  return v2;
}

uint64_t sub_209F2535C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_209F22F90(v2 + *(int *)(a1 + 48), a2);
}

uint64_t sub_209F2536C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_209F22FDC(a1, v2 + *(int *)(a2 + 48));
}

uint64_t (*sub_209F25378())()
{
  return nullsub_1;
}

uint64_t sub_209F2538C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_209EE3528(v1, a1, &qword_2545BB600);
}

uint64_t sub_209F253B0()
{
  return swift_retain();
}

uint64_t sub_209F253BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_209EE061C;
  return URLLoadingCapable.handle(url:)(a1, a2, a3);
}

uint64_t sub_209F25424()
{
  return swift_retain();
}

uint64_t sub_209F25430()
{
  return swift_unknownObjectRetain();
}

unint64_t sub_209F2545C(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;

  v2 = *(void **)(v1 + *(int *)(a1 + 28));
  if (!v2
    || (v3 = objc_msgSend(v2, sel_clientInfo)) == 0
    || (v4 = v3, v5 = sub_209F67258(), v4, v6 = sub_209EE1244(v5), swift_bridgeObjectRelease(), !v6))
  {
    v6 = sub_209EE1614(MEMORY[0x24BEE4AF8]);
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t *initializeBufferWithCopyOfBuffer for URLLoader(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  void *v40;
  char v41;
  int *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  id v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v71;
  unsigned int (*v72)(uint64_t *, uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_209F66A90();
    v8 = *(_QWORD *)(v7 - 8);
    v72 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    v73 = v7;
    v71 = v8;
    if (v72(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = (int *)type metadata accessor for URLLoadingParameters(0);
    v12 = v11[5];
    v13 = (uint64_t *)((char *)a1 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = v11[6];
    v17 = (uint64_t *)((char *)a1 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    v76 = v18[1];
    *v17 = *v18;
    v17[1] = v76;
    *((_BYTE *)a1 + v11[7]) = *((_BYTE *)a2 + v11[7]);
    v19 = v11[8];
    v20 = (uint64_t *)((char *)a1 + v19);
    v21 = (uint64_t *)((char *)a2 + v19);
    v75 = v21[1];
    *v20 = *v21;
    v20[1] = v75;
    v22 = v11[9];
    v23 = (uint64_t *)((char *)a1 + v22);
    v24 = (uint64_t *)((char *)a2 + v22);
    v74 = v24[1];
    *v23 = *v24;
    v23[1] = v74;
    *((_BYTE *)a1 + v11[10]) = *((_BYTE *)a2 + v11[10]);
    *(uint64_t *)((char *)a1 + v11[11]) = *(uint64_t *)((char *)a2 + v11[11]);
    v25 = v11[12];
    v26 = (uint64_t *)((char *)a1 + v25);
    v27 = (uint64_t *)((char *)a2 + v25);
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    v29 = v11[13];
    v30 = (uint64_t *)((char *)a1 + v29);
    v31 = (uint64_t *)((char *)a2 + v29);
    v32 = v31[1];
    *v30 = *v31;
    v30[1] = v32;
    v33 = v11[14];
    v34 = (uint64_t *)((char *)a1 + v33);
    v35 = (uint64_t *)((char *)a2 + v33);
    v36 = v35[1];
    *v34 = *v35;
    v34[1] = v36;
    v37 = a3[5];
    v38 = (char *)a1 + v37;
    v39 = (char *)a2 + v37;
    v40 = *(void **)v39;
    v41 = v39[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v42 = a3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_209EEC018(v40, v41);
    *(_QWORD *)v38 = v40;
    v38[8] = v41;
    v43 = a3[6];
    v44 = (char *)a1 + v43;
    v45 = (char *)a2 + v43;
    v46 = *(id *)v45;
    LOBYTE(v36) = v45[8];
    sub_209EEC018(*(id *)v45, v36);
    *(_QWORD *)v44 = v46;
    v44[8] = v36;
    v47 = v42[7];
    v48 = (char *)a1 + v47;
    v49 = (char *)a2 + v47;
    v50 = *(_QWORD *)v49;
    v51 = *((_QWORD *)v49 + 1);
    LOBYTE(v44) = v49[16];
    sub_209EEC024(*(_QWORD *)v49, v51, (char)v44);
    *(_QWORD *)v48 = v50;
    *((_QWORD *)v48 + 1) = v51;
    v48[16] = (char)v44;
    v52 = v42[8];
    v53 = (uint64_t *)((char *)a1 + v52);
    v54 = (uint64_t *)((char *)a2 + v52);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if (v72(v54, 1, v73))
      {
        v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v71 + 16))(v53, v54, v73);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v53, 0, 1, v73);
      }
    }
    else
    {
      *v53 = *v54;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v56 = v42[9];
    v57 = (char *)a1 + v56;
    v58 = (char *)a2 + v56;
    v59 = *(_QWORD *)v58;
    v60 = *((_QWORD *)v58 + 1);
    v61 = v58[16];
    sub_209EEC024(*(_QWORD *)v58, v60, v61);
    *(_QWORD *)v57 = v59;
    *((_QWORD *)v57 + 1) = v60;
    v57[16] = v61;
    v62 = v42[10];
    v63 = (char *)a1 + v62;
    v64 = (char *)a2 + v62;
    v65 = *(_QWORD *)v64;
    LOBYTE(v60) = v64[8];
    sub_209EEC030(*(_QWORD *)v64, v60);
    *(_QWORD *)v63 = v65;
    v63[8] = v60;
    v66 = v42[11];
    v67 = (char *)a1 + v66;
    v68 = (char *)a2 + v66;
    v69 = *(_QWORD *)v68;
    LOBYTE(v68) = v68[8];
    *(_QWORD *)v67 = v69;
    v67[8] = (char)v68;
  }
  swift_retain();
  return a1;
}

uint64_t destroy for URLLoader(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;

  v4 = sub_209F66A90();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  type metadata accessor for URLLoadingParameters(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_209EEC698(*(id *)(a1 + a2[5]), *(_BYTE *)(a1 + a2[5] + 8));
  sub_209EEC698(*(id *)(a1 + a2[6]), *(_BYTE *)(a1 + a2[6] + 8));
  sub_209EEC6A4(*(_QWORD *)(a1 + a2[7]), *(_QWORD *)(a1 + a2[7] + 8), *(_BYTE *)(a1 + a2[7] + 16));
  v7 = a1 + a2[8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    if (!v6(v7, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    swift_release();
  }
  sub_209EEC6A4(*(_QWORD *)(a1 + a2[9]), *(_QWORD *)(a1 + a2[9] + 8), *(_BYTE *)(a1 + a2[9] + 16));
  sub_209EEC6B0(*(_QWORD *)(a1 + a2[10]), *(_BYTE *)(a1 + a2[10] + 8));
  return swift_release();
}

char *initializeWithCopy for URLLoader(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  void *v38;
  char v39;
  int *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  id v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v69;
  unsigned int (*v70)(char *, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  v6 = sub_209F66A90();
  v7 = *(_QWORD *)(v6 - 8);
  v70 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v71 = v6;
  v69 = v7;
  if (v70(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = (int *)type metadata accessor for URLLoadingParameters(0);
  v10 = v9[5];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = *((_QWORD *)v12 + 1);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *((_QWORD *)v11 + 1) = v13;
  v14 = v9[6];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v74 = *((_QWORD *)v16 + 1);
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *((_QWORD *)v15 + 1) = v74;
  a1[v9[7]] = a2[v9[7]];
  v17 = v9[8];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v73 = *((_QWORD *)v19 + 1);
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *((_QWORD *)v18 + 1) = v73;
  v20 = v9[9];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v72 = *((_QWORD *)v22 + 1);
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *((_QWORD *)v21 + 1) = v72;
  a1[v9[10]] = a2[v9[10]];
  *(_QWORD *)&a1[v9[11]] = *(_QWORD *)&a2[v9[11]];
  v23 = v9[12];
  v24 = &a1[v23];
  v25 = &a2[v23];
  v26 = *((_QWORD *)v25 + 1);
  *(_QWORD *)v24 = *(_QWORD *)v25;
  *((_QWORD *)v24 + 1) = v26;
  v27 = v9[13];
  v28 = &a1[v27];
  v29 = &a2[v27];
  v30 = *((_QWORD *)v29 + 1);
  *(_QWORD *)v28 = *(_QWORD *)v29;
  *((_QWORD *)v28 + 1) = v30;
  v31 = v9[14];
  v32 = &a1[v31];
  v33 = &a2[v31];
  v34 = *((_QWORD *)v33 + 1);
  *(_QWORD *)v32 = *(_QWORD *)v33;
  *((_QWORD *)v32 + 1) = v34;
  v35 = a3[5];
  v36 = &a1[v35];
  v37 = &a2[v35];
  v38 = *(void **)v37;
  v39 = v37[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v40 = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_209EEC018(v38, v39);
  *(_QWORD *)v36 = v38;
  v36[8] = v39;
  v41 = a3[6];
  v42 = &a1[v41];
  v43 = &a2[v41];
  v44 = *(id *)v43;
  LOBYTE(v34) = v43[8];
  sub_209EEC018(*(id *)v43, v34);
  *(_QWORD *)v42 = v44;
  v42[8] = v34;
  v45 = v40[7];
  v46 = &a1[v45];
  v47 = &a2[v45];
  v48 = *(_QWORD *)v47;
  v49 = *((_QWORD *)v47 + 1);
  LOBYTE(v42) = v47[16];
  sub_209EEC024(*(_QWORD *)v47, v49, (char)v42);
  *(_QWORD *)v46 = v48;
  *((_QWORD *)v46 + 1) = v49;
  v46[16] = (char)v42;
  v50 = v40[8];
  v51 = &a1[v50];
  v52 = &a2[v50];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    if (v70(v52, 1, v71))
    {
      v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v51, v52, v71);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v51, 0, 1, v71);
    }
  }
  else
  {
    *(_QWORD *)v51 = *(_QWORD *)v52;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v54 = v40[9];
  v55 = &a1[v54];
  v56 = &a2[v54];
  v57 = *(_QWORD *)v56;
  v58 = *((_QWORD *)v56 + 1);
  v59 = v56[16];
  sub_209EEC024(*(_QWORD *)v56, v58, v59);
  *(_QWORD *)v55 = v57;
  *((_QWORD *)v55 + 1) = v58;
  v55[16] = v59;
  v60 = v40[10];
  v61 = &a1[v60];
  v62 = &a2[v60];
  v63 = *(_QWORD *)v62;
  LOBYTE(v58) = v62[8];
  sub_209EEC030(*(_QWORD *)v62, v58);
  *(_QWORD *)v61 = v63;
  v61[8] = v58;
  v64 = v40[11];
  v65 = &a1[v64];
  v66 = &a2[v64];
  v67 = *(_QWORD *)v66;
  LOBYTE(v66) = v66[8];
  *(_QWORD *)v65 = v67;
  v65[8] = (char)v66;
  swift_retain();
  return a1;
}

char *assignWithCopy for URLLoader(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  id v37;
  char v38;
  void *v39;
  char v40;
  uint64_t v41;
  char *v42;
  char *v43;
  id v44;
  char v45;
  void *v46;
  char v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;

  v6 = sub_209F66A90();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = (int *)type metadata accessor for URLLoadingParameters(0);
  v13 = v12[5];
  v14 = &a1[v13];
  v15 = &a2[v13];
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *((_QWORD *)v14 + 1) = *((_QWORD *)v15 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = v12[6];
  v17 = &a1[v16];
  v18 = &a2[v16];
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[v12[7]] = a2[v12[7]];
  v19 = v12[8];
  v20 = &a1[v19];
  v21 = &a2[v19];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = v12[9];
  v23 = &a1[v22];
  v24 = &a2[v22];
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *((_QWORD *)v23 + 1) = *((_QWORD *)v24 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[v12[10]] = a2[v12[10]];
  *(_QWORD *)&a1[v12[11]] = *(_QWORD *)&a2[v12[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v25 = v12[12];
  v26 = &a1[v25];
  v27 = &a2[v25];
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *((_QWORD *)v26 + 1) = *((_QWORD *)v27 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v28 = v12[13];
  v29 = &a1[v28];
  v30 = &a2[v28];
  *(_QWORD *)v29 = *(_QWORD *)v30;
  *((_QWORD *)v29 + 1) = *((_QWORD *)v30 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v31 = v12[14];
  v32 = &a1[v31];
  v33 = &a2[v31];
  *(_QWORD *)v32 = *(_QWORD *)v33;
  *((_QWORD *)v32 + 1) = *((_QWORD *)v33 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v34 = a3[5];
  v35 = &a1[v34];
  v36 = &a2[v34];
  v37 = *(id *)v36;
  v38 = v36[8];
  sub_209EEC018(*(id *)v36, v38);
  v39 = *(void **)v35;
  v40 = v35[8];
  *(_QWORD *)v35 = v37;
  v35[8] = v38;
  sub_209EEC698(v39, v40);
  v41 = a3[6];
  v42 = &a1[v41];
  v43 = &a2[v41];
  v44 = *(id *)v43;
  v45 = v43[8];
  sub_209EEC018(*(id *)v43, v45);
  v46 = *(void **)v42;
  v47 = v42[8];
  *(_QWORD *)v42 = v44;
  v42[8] = v45;
  sub_209EEC698(v46, v47);
  v48 = a3[7];
  v49 = &a1[v48];
  v50 = &a2[v48];
  v51 = *(_QWORD *)v50;
  v52 = *((_QWORD *)v50 + 1);
  LOBYTE(v42) = v50[16];
  sub_209EEC024(*(_QWORD *)v50, v52, (char)v42);
  v53 = *(_QWORD *)v49;
  v54 = *((_QWORD *)v49 + 1);
  v55 = v49[16];
  *(_QWORD *)v49 = v51;
  *((_QWORD *)v49 + 1) = v52;
  v49[16] = (char)v42;
  sub_209EEC6A4(v53, v54, v55);
  if (a1 != a2)
  {
    v56 = a3[8];
    v57 = &a1[v56];
    v58 = &a2[v56];
    sub_209EE017C((uint64_t)&a1[v56], &qword_2545BB1F8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if (v8(v58, 1, v6))
      {
        v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
        memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v57, v58, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v57, 0, 1, v6);
      }
    }
    else
    {
      *(_QWORD *)v57 = *(_QWORD *)v58;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v60 = a3[9];
  v61 = &a1[v60];
  v62 = &a2[v60];
  v63 = *(_QWORD *)v62;
  v64 = *((_QWORD *)v62 + 1);
  v65 = v62[16];
  sub_209EEC024(*(_QWORD *)v62, v64, v65);
  v66 = *(_QWORD *)v61;
  v67 = *((_QWORD *)v61 + 1);
  v68 = v61[16];
  *(_QWORD *)v61 = v63;
  *((_QWORD *)v61 + 1) = v64;
  v61[16] = v65;
  sub_209EEC6A4(v66, v67, v68);
  v69 = a3[10];
  v70 = &a1[v69];
  v71 = &a2[v69];
  v72 = *(_QWORD *)v71;
  LOBYTE(v64) = v71[8];
  sub_209EEC030(*(_QWORD *)v71, v64);
  v73 = *(_QWORD *)v70;
  v74 = v70[8];
  *(_QWORD *)v70 = v72;
  v70[8] = v64;
  sub_209EEC6B0(v73, v74);
  v75 = a3[11];
  v76 = &a1[v75];
  v77 = &a2[v75];
  v78 = *(_QWORD *)v77;
  LOBYTE(v77) = v77[8];
  *(_QWORD *)v76 = v78;
  v76[8] = (char)v77;
  swift_retain();
  swift_release();
  return a1;
}

char *initializeWithTake for URLLoader(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;

  v6 = sub_209F66A90();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v10 = (int *)type metadata accessor for URLLoadingParameters(0);
  *(_OWORD *)&a1[v10[5]] = *(_OWORD *)&a2[v10[5]];
  *(_OWORD *)&a1[v10[6]] = *(_OWORD *)&a2[v10[6]];
  a1[v10[7]] = a2[v10[7]];
  *(_OWORD *)&a1[v10[8]] = *(_OWORD *)&a2[v10[8]];
  *(_OWORD *)&a1[v10[9]] = *(_OWORD *)&a2[v10[9]];
  a1[v10[10]] = a2[v10[10]];
  *(_QWORD *)&a1[v10[11]] = *(_QWORD *)&a2[v10[11]];
  *(_OWORD *)&a1[v10[12]] = *(_OWORD *)&a2[v10[12]];
  *(_OWORD *)&a1[v10[13]] = *(_OWORD *)&a2[v10[13]];
  *(_OWORD *)&a1[v10[14]] = *(_OWORD *)&a2[v10[14]];
  v11 = a3[5];
  v12 = a3[6];
  v13 = &a1[v11];
  v14 = &a2[v11];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v13[8] = v14[8];
  v15 = &a1[v12];
  v16 = &a2[v12];
  *(_QWORD *)v15 = *(_QWORD *)v16;
  v15[8] = v16[8];
  v17 = a3[7];
  v18 = a3[8];
  v19 = &a1[v17];
  v20 = &a2[v17];
  *(_OWORD *)v19 = *(_OWORD *)v20;
  v19[16] = v20[16];
  v21 = &a1[v18];
  v22 = &a2[v18];
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    if (v8(v22, 1, v6))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v21, v22, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v21, 0, 1, v6);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  v25 = a3[9];
  v26 = a3[10];
  v27 = &a1[v25];
  v28 = &a2[v25];
  *(_OWORD *)v27 = *(_OWORD *)v28;
  v27[16] = v28[16];
  v29 = &a1[v26];
  v30 = &a2[v26];
  *(_QWORD *)v29 = *(_QWORD *)v30;
  v29[8] = v30[8];
  v31 = a3[11];
  v32 = &a1[v31];
  v33 = &a2[v31];
  *(_QWORD *)v32 = *(_QWORD *)v33;
  v32[8] = v33[8];
  return a1;
}

char *assignWithTake for URLLoader(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  void *v52;
  char v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  void *v58;
  char v59;
  uint64_t v60;
  char *v61;
  char *v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;

  v6 = sub_209F66A90();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = (int *)type metadata accessor for URLLoadingParameters(0);
  v13 = v12[5];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v17 = *(_QWORD *)v15;
  v16 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v14 = v17;
  *((_QWORD *)v14 + 1) = v16;
  swift_bridgeObjectRelease();
  v18 = v12[6];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v22 = *(_QWORD *)v20;
  v21 = *((_QWORD *)v20 + 1);
  *(_QWORD *)v19 = v22;
  *((_QWORD *)v19 + 1) = v21;
  swift_bridgeObjectRelease();
  a1[v12[7]] = a2[v12[7]];
  v23 = v12[8];
  v24 = &a1[v23];
  v25 = &a2[v23];
  v27 = *(_QWORD *)v25;
  v26 = *((_QWORD *)v25 + 1);
  *(_QWORD *)v24 = v27;
  *((_QWORD *)v24 + 1) = v26;
  swift_bridgeObjectRelease();
  v28 = v12[9];
  v29 = &a1[v28];
  v30 = &a2[v28];
  v32 = *(_QWORD *)v30;
  v31 = *((_QWORD *)v30 + 1);
  *(_QWORD *)v29 = v32;
  *((_QWORD *)v29 + 1) = v31;
  swift_bridgeObjectRelease();
  a1[v12[10]] = a2[v12[10]];
  *(_QWORD *)&a1[v12[11]] = *(_QWORD *)&a2[v12[11]];
  swift_bridgeObjectRelease();
  v33 = v12[12];
  v34 = &a1[v33];
  v35 = &a2[v33];
  v37 = *(_QWORD *)v35;
  v36 = *((_QWORD *)v35 + 1);
  *(_QWORD *)v34 = v37;
  *((_QWORD *)v34 + 1) = v36;
  swift_bridgeObjectRelease();
  v38 = v12[13];
  v39 = &a1[v38];
  v40 = &a2[v38];
  v42 = *(_QWORD *)v40;
  v41 = *((_QWORD *)v40 + 1);
  *(_QWORD *)v39 = v42;
  *((_QWORD *)v39 + 1) = v41;
  swift_bridgeObjectRelease();
  v43 = v12[14];
  v44 = &a1[v43];
  v45 = &a2[v43];
  v47 = *(_QWORD *)v45;
  v46 = *((_QWORD *)v45 + 1);
  *(_QWORD *)v44 = v47;
  *((_QWORD *)v44 + 1) = v46;
  swift_bridgeObjectRelease();
  v48 = a3[5];
  v49 = &a1[v48];
  v50 = &a2[v48];
  v51 = *(_QWORD *)v50;
  LOBYTE(v50) = v50[8];
  v52 = *(void **)v49;
  v53 = v49[8];
  *(_QWORD *)v49 = v51;
  v49[8] = (char)v50;
  sub_209EEC698(v52, v53);
  v54 = a3[6];
  v55 = &a1[v54];
  v56 = &a2[v54];
  v57 = *(_QWORD *)v56;
  LOBYTE(v56) = v56[8];
  v58 = *(void **)v55;
  v59 = v55[8];
  *(_QWORD *)v55 = v57;
  v55[8] = (char)v56;
  sub_209EEC698(v58, v59);
  v60 = a3[7];
  v61 = &a1[v60];
  v62 = &a2[v60];
  v63 = v62[16];
  v64 = *(_QWORD *)v61;
  v65 = *((_QWORD *)v61 + 1);
  v66 = v61[16];
  *(_OWORD *)v61 = *(_OWORD *)v62;
  v61[16] = v63;
  sub_209EEC6A4(v64, v65, v66);
  if (a1 != a2)
  {
    v67 = a3[8];
    v68 = &a1[v67];
    v69 = &a2[v67];
    sub_209EE017C((uint64_t)&a1[v67], &qword_2545BB1F8);
    v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if (v8(v69, 1, v6))
      {
        v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
        memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v68, v69, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v68, 0, 1, v6);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    }
  }
  v72 = a3[9];
  v73 = &a1[v72];
  v74 = &a2[v72];
  v75 = v74[16];
  v76 = *(_QWORD *)v73;
  v77 = *((_QWORD *)v73 + 1);
  v78 = v73[16];
  *(_OWORD *)v73 = *(_OWORD *)v74;
  v73[16] = v75;
  sub_209EEC6A4(v76, v77, v78);
  v79 = a3[10];
  v80 = &a1[v79];
  v81 = &a2[v79];
  v82 = *(_QWORD *)v81;
  LOBYTE(v81) = v81[8];
  v83 = *(_QWORD *)v80;
  v84 = v80[8];
  *(_QWORD *)v80 = v82;
  v80[8] = (char)v81;
  sub_209EEC6B0(v83, v84);
  v85 = a3[11];
  v86 = &a1[v85];
  v87 = &a2[v85];
  v88 = *(_QWORD *)v87;
  LOBYTE(v87) = v87[8];
  *(_QWORD *)v86 = v88;
  v86[8] = (char)v87;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for URLLoader()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_209F268E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;
  uint64_t v10;

  v6 = type metadata accessor for URLLoadingParameters(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 254)
  {
    v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 8);
    if (v9 > 1)
      return (v9 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB8B8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for URLLoader()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_209F26994(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = type metadata accessor for URLLoadingParameters(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 254)
    {
      *(_BYTE *)(a1 + *(int *)(a4 + 20) + 8) = -(char)a2;
      return result;
    }
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB8B8);
    v12 = a1 + *(int *)(a4 + 32);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_209F26A3C()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for URLLoadingParameters(319);
  if (v0 <= 0x3F)
  {
    sub_209F26AE0();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_209F26AE0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2545BBED0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BB600);
    v0 = sub_209F66D24();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2545BBED0);
  }
}

unint64_t initializeBufferWithCopyOfBuffer for URLLoaderProvider(unint64_t a1, uint64_t a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void *v10;
  void *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v18 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_QWORD *)(a2 + 8);
    v9 = *(_BYTE *)(a2 + 16);
    sub_209EEC024(*(_QWORD *)a2, v8, v9);
    *(_QWORD *)a1 = v7;
    *(_QWORD *)(a1 + 8) = v8;
    *(_BYTE *)(a1 + 16) = v9;
    v10 = *(void **)(a2 + 24);
    LOBYTE(v8) = *(_BYTE *)(a2 + 32);
    sub_209EEC018(v10, v8);
    *(_QWORD *)(a1 + 24) = v10;
    *(_BYTE *)(a1 + 32) = v8;
    v11 = *(void **)(a2 + 40);
    LOBYTE(v8) = *(_BYTE *)(a2 + 48);
    sub_209EEC018(v11, v8);
    *(_QWORD *)(a1 + 40) = v11;
    *(_BYTE *)(a1 + 48) = v8;
    v12 = a3[7];
    v13 = (_QWORD *)(a1 + v12);
    v14 = (_QWORD *)(a2 + v12);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v15 = sub_209F66A90();
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v16 + 16))(v13, v14, v15);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
    }
    else
    {
      *v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v19 = a3[8];
    v20 = a1 + v19;
    v21 = a2 + v19;
    v22 = *(_QWORD *)v21;
    v23 = *(_QWORD *)(v21 + 8);
    v24 = *(_BYTE *)(v21 + 16);
    sub_209EEC024(*(_QWORD *)v21, v23, v24);
    *(_QWORD *)v20 = v22;
    *(_QWORD *)(v20 + 8) = v23;
    *(_BYTE *)(v20 + 16) = v24;
    v25 = a3[9];
    v26 = a1 + v25;
    v27 = a2 + v25;
    v28 = *(_QWORD *)v27;
    LOBYTE(v23) = *(_BYTE *)(v27 + 8);
    sub_209EEC030(*(_QWORD *)v27, v23);
    *(_QWORD *)v26 = v28;
    *(_BYTE *)(v26 + 8) = v23;
    v29 = a3[10];
    v30 = a1 + v29;
    v31 = (uint64_t *)(a2 + v29);
    v32 = *v31;
    LOBYTE(v31) = *((_BYTE *)v31 + 8);
    *(_QWORD *)v30 = v32;
    *(_BYTE *)(v30 + 8) = (_BYTE)v31;
  }
  swift_retain();
  return a1;
}

uint64_t destroy for URLLoaderProvider(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_209EEC6A4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  sub_209EEC698(*(id *)(a1 + 24), *(_BYTE *)(a1 + 32));
  sub_209EEC698(*(id *)(a1 + 40), *(_BYTE *)(a1 + 48));
  v4 = a1 + a2[7];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_209F66A90();
    v6 = *(_QWORD *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  sub_209EEC6A4(*(_QWORD *)(a1 + a2[8]), *(_QWORD *)(a1 + a2[8] + 8), *(_BYTE *)(a1 + a2[8] + 16));
  sub_209EEC6B0(*(_QWORD *)(a1 + a2[9]), *(_BYTE *)(a1 + a2[9] + 8));
  return swift_release();
}

uint64_t initializeWithCopy for URLLoaderProvider(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  void *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  sub_209EEC024(*(_QWORD *)a2, v7, v8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  v9 = *(void **)(a2 + 24);
  LOBYTE(v7) = *(_BYTE *)(a2 + 32);
  sub_209EEC018(v9, v7);
  *(_QWORD *)(a1 + 24) = v9;
  *(_BYTE *)(a1 + 32) = v7;
  v10 = *(void **)(a2 + 40);
  LOBYTE(v7) = *(_BYTE *)(a2 + 48);
  sub_209EEC018(v10, v7);
  *(_QWORD *)(a1 + 40) = v10;
  *(_BYTE *)(a1 + 48) = v7;
  v11 = a3[7];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v14 = sub_209F66A90();
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
  }
  else
  {
    *v12 = *v13;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v17 = a3[8];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = *(_QWORD *)v19;
  v21 = *(_QWORD *)(v19 + 8);
  v22 = *(_BYTE *)(v19 + 16);
  sub_209EEC024(*(_QWORD *)v19, v21, v22);
  *(_QWORD *)v18 = v20;
  *(_QWORD *)(v18 + 8) = v21;
  *(_BYTE *)(v18 + 16) = v22;
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = *(_QWORD *)v25;
  LOBYTE(v21) = *(_BYTE *)(v25 + 8);
  sub_209EEC030(*(_QWORD *)v25, v21);
  *(_QWORD *)v24 = v26;
  *(_BYTE *)(v24 + 8) = v21;
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = (uint64_t *)(a2 + v27);
  v30 = *v29;
  LOBYTE(v29) = *((_BYTE *)v29 + 8);
  *(_QWORD *)v28 = v30;
  *(_BYTE *)(v28 + 8) = (_BYTE)v29;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for URLLoaderProvider(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  void *v12;
  void *v13;
  char v14;
  void *v15;
  void *v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  sub_209EEC024(*(_QWORD *)a2, v7, v8);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  sub_209EEC6A4(v9, v10, v11);
  v12 = *(void **)(a2 + 24);
  LOBYTE(v7) = *(_BYTE *)(a2 + 32);
  sub_209EEC018(v12, v7);
  v13 = *(void **)(a1 + 24);
  v14 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v12;
  *(_BYTE *)(a1 + 32) = v7;
  sub_209EEC698(v13, v14);
  v15 = *(void **)(a2 + 40);
  LOBYTE(v7) = *(_BYTE *)(a2 + 48);
  sub_209EEC018(v15, v7);
  v16 = *(void **)(a1 + 40);
  v17 = *(_BYTE *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = v15;
  *(_BYTE *)(a1 + 48) = v7;
  sub_209EEC698(v16, v17);
  if (a1 != a2)
  {
    v18 = a3[7];
    v19 = (_QWORD *)(a1 + v18);
    v20 = (_QWORD *)(a2 + v18);
    sub_209EE017C(a1 + v18, &qword_2545BB1F8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v21 = sub_209F66A90();
      v22 = *(_QWORD *)(v21 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
        v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v22 + 16))(v19, v20, v21);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      }
    }
    else
    {
      *v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v24 = a3[8];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = *(_QWORD *)v26;
  v28 = *(_QWORD *)(v26 + 8);
  v29 = *(_BYTE *)(v26 + 16);
  sub_209EEC024(*(_QWORD *)v26, v28, v29);
  v30 = *(_QWORD *)v25;
  v31 = *(_QWORD *)(v25 + 8);
  v32 = *(_BYTE *)(v25 + 16);
  *(_QWORD *)v25 = v27;
  *(_QWORD *)(v25 + 8) = v28;
  *(_BYTE *)(v25 + 16) = v29;
  sub_209EEC6A4(v30, v31, v32);
  v33 = a3[9];
  v34 = a1 + v33;
  v35 = a2 + v33;
  v36 = *(_QWORD *)v35;
  LOBYTE(v28) = *(_BYTE *)(v35 + 8);
  sub_209EEC030(*(_QWORD *)v35, v28);
  v37 = *(_QWORD *)v34;
  v38 = *(_BYTE *)(v34 + 8);
  *(_QWORD *)v34 = v36;
  *(_BYTE *)(v34 + 8) = v28;
  sub_209EEC6B0(v37, v38);
  v39 = a3[10];
  v40 = a1 + v39;
  v41 = (uint64_t *)(a2 + v39);
  v42 = *v41;
  LOBYTE(v41) = *((_BYTE *)v41 + 8);
  *(_QWORD *)v40 = v42;
  *(_BYTE *)(v40 + 8) = (_BYTE)v41;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for URLLoaderProvider(uint64_t a1, __int128 *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = *a2;
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
  *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
  *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
  *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
  v7 = a3[7];
  v8 = (void *)(a1 + v7);
  v9 = (char *)a2 + v7;
  *(_OWORD *)a1 = v6;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_209F66A90();
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 32))(v8, v9, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  v14 = a3[8];
  v15 = a3[9];
  v16 = a1 + v14;
  v17 = (uint64_t)a2 + v14;
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_BYTE *)(v16 + 16) = *(_BYTE *)(v17 + 16);
  v18 = a1 + v15;
  v19 = (uint64_t)a2 + v15;
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_BYTE *)(v18 + 8) = *(_BYTE *)(v19 + 8);
  v20 = a3[10];
  v21 = a1 + v20;
  v22 = (uint64_t)a2 + v20;
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *(_BYTE *)(v21 + 8) = *(_BYTE *)(v22 + 8);
  return a1;
}

uint64_t assignWithTake for URLLoaderProvider(uint64_t a1, uint64_t a2, int *a3)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  void *v11;
  char v12;
  char v13;
  void *v14;
  char v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;

  v6 = *(_BYTE *)(a2 + 16);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v6;
  sub_209EEC6A4(v7, v8, v9);
  v10 = *(_BYTE *)(a2 + 32);
  v11 = *(void **)(a1 + 24);
  v12 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = v10;
  sub_209EEC698(v11, v12);
  v13 = *(_BYTE *)(a2 + 48);
  v14 = *(void **)(a1 + 40);
  v15 = *(_BYTE *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = v13;
  sub_209EEC698(v14, v15);
  if (a1 != a2)
  {
    v16 = a3[7];
    v17 = (void *)(a1 + v16);
    v18 = (const void *)(a2 + v16);
    sub_209EE017C(a1 + v16, &qword_2545BB1F8);
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v20 = sub_209F66A90();
      v21 = *(_QWORD *)(v20 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v18, 1, v20))
      {
        v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v21 + 32))(v17, v18, v20);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v17, 0, 1, v20);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
  }
  v23 = a3[8];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = *(_BYTE *)(v25 + 16);
  v27 = *(_QWORD *)v24;
  v28 = *(_QWORD *)(v24 + 8);
  v29 = *(_BYTE *)(v24 + 16);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *(_BYTE *)(v24 + 16) = v26;
  sub_209EEC6A4(v27, v28, v29);
  v30 = a3[9];
  v31 = a1 + v30;
  v32 = (uint64_t *)(a2 + v30);
  v33 = *v32;
  LOBYTE(v32) = *((_BYTE *)v32 + 8);
  v34 = *(_QWORD *)v31;
  v35 = *(_BYTE *)(v31 + 8);
  *(_QWORD *)v31 = v33;
  *(_BYTE *)(v31 + 8) = (_BYTE)v32;
  sub_209EEC6B0(v34, v35);
  v36 = a3[10];
  v37 = a1 + v36;
  v38 = (uint64_t *)(a2 + v36);
  v39 = *v38;
  LOBYTE(v38) = *((_BYTE *)v38 + 8);
  *(_QWORD *)v37 = v39;
  *(_BYTE *)(v37 + 8) = (_BYTE)v38;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for URLLoaderProvider()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_209F275E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 16);
    if (v4 > 1)
      return (v4 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB8B8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for URLLoaderProvider()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_209F27668(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 16) = -(char)a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB8B8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

void sub_209F276DC()
{
  unint64_t v0;

  sub_209F26AE0();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

char *sub_209F27768(char *a1, uint64_t *a2, int *a3)
{
  char *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  id v24;
  id v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v57;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *(_QWORD *)a1 = *a2;
    v4 = (char *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_209F66A90();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
      memcpy(v4, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, uint64_t *, uint64_t))(v8 + 16))(v4, a2, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v4, 0, 1, v7);
    }
    v12 = a3[5];
    v13 = &v4[v12];
    v14 = (char *)a2 + v12;
    if (v9((uint64_t *)((char *)a2 + v12), 1, v7))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
    }
    v16 = a3[7];
    v17 = a3[8];
    v18 = *(void **)((char *)a2 + v16);
    *(_QWORD *)&v4[v16] = v18;
    v19 = *(void **)((char *)a2 + v17);
    *(_QWORD *)&v4[v17] = v19;
    v20 = a3[10];
    *(_OWORD *)&v4[a3[9]] = *(_OWORD *)((char *)a2 + a3[9]);
    *(_QWORD *)&v4[v20] = *(uint64_t *)((char *)a2 + v20);
    v21 = a3[12];
    *(_OWORD *)&v4[a3[11]] = *(_OWORD *)((char *)a2 + a3[11]);
    v22 = &v4[v21];
    v23 = (char *)a2 + v21;
    v24 = v18;
    v25 = v19;
    swift_unknownObjectRetain();
    swift_retain();
    swift_unknownObjectRetain();
    if (v9((uint64_t *)v23, 1, v7))
    {
      v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v22, v23, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v22, 0, 1, v7);
    }
    v27 = (int *)type metadata accessor for URLLoadingParameters(0);
    v28 = v27[5];
    v29 = &v22[v28];
    v30 = &v23[v28];
    v32 = *(_QWORD *)v30;
    v31 = *((_QWORD *)v30 + 1);
    *(_QWORD *)v29 = v32;
    *((_QWORD *)v29 + 1) = v31;
    v33 = v27[6];
    v34 = &v22[v33];
    v35 = &v23[v33];
    v57 = *((_QWORD *)v35 + 1);
    *(_QWORD *)v34 = *(_QWORD *)v35;
    *((_QWORD *)v34 + 1) = v57;
    v22[v27[7]] = v23[v27[7]];
    v36 = v27[8];
    v37 = &v22[v36];
    v38 = &v23[v36];
    v39 = *((_QWORD *)v38 + 1);
    *(_QWORD *)v37 = *(_QWORD *)v38;
    *((_QWORD *)v37 + 1) = v39;
    v40 = v27[9];
    v41 = &v22[v40];
    v42 = &v23[v40];
    v43 = *((_QWORD *)v42 + 1);
    *(_QWORD *)v41 = *(_QWORD *)v42;
    *((_QWORD *)v41 + 1) = v43;
    v22[v27[10]] = v23[v27[10]];
    *(_QWORD *)&v22[v27[11]] = *(_QWORD *)&v23[v27[11]];
    v44 = v27[12];
    v45 = &v22[v44];
    v46 = &v23[v44];
    v47 = *((_QWORD *)v46 + 1);
    *(_QWORD *)v45 = *(_QWORD *)v46;
    *((_QWORD *)v45 + 1) = v47;
    v48 = v27[13];
    v49 = &v22[v48];
    v50 = &v23[v48];
    v51 = *((_QWORD *)v50 + 1);
    *(_QWORD *)v49 = *(_QWORD *)v50;
    *((_QWORD *)v49 + 1) = v51;
    v52 = v27[14];
    v53 = &v22[v52];
    v54 = &v23[v52];
    v55 = *((_QWORD *)v54 + 1);
    *(_QWORD *)v53 = *(_QWORD *)v54;
    *((_QWORD *)v53 + 1) = v55;
    *(_QWORD *)&v4[a3[13]] = *(uint64_t *)((char *)a2 + a3[13]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_209F27AA8(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  v4 = sub_209F66A90();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v7 = a1 + a2[5];
  if (!v6(v7, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);

  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  v8 = a1 + a2[12];
  if (!v6(v8, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
  type metadata accessor for URLLoadingParameters(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

char *sub_209F27C34(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  id v22;
  id v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  int *v56;

  v6 = sub_209F66A90();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v10 = a3[5];
  v11 = &a1[v10];
  v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v12, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  v14 = a3[7];
  v15 = a3[8];
  v16 = *(void **)&a2[v14];
  *(_QWORD *)&a1[v14] = v16;
  v17 = *(void **)&a2[v15];
  *(_QWORD *)&a1[v15] = v17;
  v18 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  *(_QWORD *)&a1[v18] = *(_QWORD *)&a2[v18];
  v19 = a3[12];
  *(_OWORD *)&a1[a3[11]] = *(_OWORD *)&a2[a3[11]];
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = v16;
  v23 = v17;
  swift_unknownObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  v56 = a3;
  if (v8(v21, 1, v6))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v20, v21, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v20, 0, 1, v6);
  }
  v25 = (int *)type metadata accessor for URLLoadingParameters(0);
  v26 = v25[5];
  v27 = &v20[v26];
  v28 = &v21[v26];
  v30 = *(_QWORD *)v28;
  v29 = *((_QWORD *)v28 + 1);
  *(_QWORD *)v27 = v30;
  *((_QWORD *)v27 + 1) = v29;
  v31 = v25[6];
  v32 = &v20[v31];
  v33 = &v21[v31];
  v34 = *((_QWORD *)v33 + 1);
  *(_QWORD *)v32 = *(_QWORD *)v33;
  *((_QWORD *)v32 + 1) = v34;
  v20[v25[7]] = v21[v25[7]];
  v35 = v25[8];
  v36 = &v20[v35];
  v37 = &v21[v35];
  v38 = *((_QWORD *)v37 + 1);
  *(_QWORD *)v36 = *(_QWORD *)v37;
  *((_QWORD *)v36 + 1) = v38;
  v39 = v25[9];
  v40 = &v20[v39];
  v41 = &v21[v39];
  v42 = *((_QWORD *)v41 + 1);
  *(_QWORD *)v40 = *(_QWORD *)v41;
  *((_QWORD *)v40 + 1) = v42;
  v20[v25[10]] = v21[v25[10]];
  *(_QWORD *)&v20[v25[11]] = *(_QWORD *)&v21[v25[11]];
  v43 = v25[12];
  v44 = &v20[v43];
  v45 = &v21[v43];
  v46 = *((_QWORD *)v45 + 1);
  *(_QWORD *)v44 = *(_QWORD *)v45;
  *((_QWORD *)v44 + 1) = v46;
  v47 = v25[13];
  v48 = &v20[v47];
  v49 = &v21[v47];
  v50 = *((_QWORD *)v49 + 1);
  *(_QWORD *)v48 = *(_QWORD *)v49;
  *((_QWORD *)v48 + 1) = v50;
  v51 = v25[14];
  v52 = &v20[v51];
  v53 = &v21[v51];
  v54 = *((_QWORD *)v53 + 1);
  *(_QWORD *)v52 = *(_QWORD *)v53;
  *((_QWORD *)v52 + 1) = v54;
  *(_QWORD *)&a1[v56[13]] = *(_QWORD *)&a2[v56[13]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

char *sub_209F27F50(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  int v37;
  uint64_t v38;
  int *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;

  v6 = sub_209F66A90();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = v8(&a1[v12], 1, v6);
  v16 = v8(v14, 1, v6);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v14, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
LABEL_12:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v13, v14, v6);
LABEL_13:
  v18 = a3[7];
  v19 = *(void **)&a1[v18];
  v20 = *(void **)&a2[v18];
  *(_QWORD *)&a1[v18] = v20;
  v21 = v20;

  v22 = a3[8];
  v23 = *(void **)&a1[v22];
  v24 = *(void **)&a2[v22];
  *(_QWORD *)&a1[v22] = v24;
  v25 = v24;

  v26 = a3[9];
  v27 = &a1[v26];
  v28 = &a2[v26];
  v29 = *((_QWORD *)v28 + 1);
  *(_QWORD *)v27 = *(_QWORD *)v28;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *((_QWORD *)v27 + 1) = v29;
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
  swift_retain();
  swift_release();
  v30 = a3[11];
  v31 = &a1[v30];
  v32 = &a2[v30];
  v33 = *((_QWORD *)v32 + 1);
  *(_QWORD *)v31 = *(_QWORD *)v32;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *((_QWORD *)v31 + 1) = v33;
  v34 = a3[12];
  v35 = &a1[v34];
  v36 = &a2[v34];
  LODWORD(v33) = v8(&a1[v34], 1, v6);
  v37 = v8(v36, 1, v6);
  if (!(_DWORD)v33)
  {
    if (!v37)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v35, v36, v6);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v35, v6);
    goto LABEL_18;
  }
  if (v37)
  {
LABEL_18:
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v35, v36, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v35, 0, 1, v6);
LABEL_19:
  v39 = (int *)type metadata accessor for URLLoadingParameters(0);
  v40 = v39[5];
  v41 = &v35[v40];
  v42 = &v36[v40];
  *(_QWORD *)v41 = *(_QWORD *)v42;
  *((_QWORD *)v41 + 1) = *((_QWORD *)v42 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v43 = v39[6];
  v44 = &v35[v43];
  v45 = &v36[v43];
  *(_QWORD *)v44 = *(_QWORD *)v45;
  *((_QWORD *)v44 + 1) = *((_QWORD *)v45 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v35[v39[7]] = v36[v39[7]];
  v46 = v39[8];
  v47 = &v35[v46];
  v48 = &v36[v46];
  *(_QWORD *)v47 = *(_QWORD *)v48;
  *((_QWORD *)v47 + 1) = *((_QWORD *)v48 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v49 = v39[9];
  v50 = &v35[v49];
  v51 = &v36[v49];
  *(_QWORD *)v50 = *(_QWORD *)v51;
  *((_QWORD *)v50 + 1) = *((_QWORD *)v51 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v35[v39[10]] = v36[v39[10]];
  *(_QWORD *)&v35[v39[11]] = *(_QWORD *)&v36[v39[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v52 = v39[12];
  v53 = &v35[v52];
  v54 = &v36[v52];
  *(_QWORD *)v53 = *(_QWORD *)v54;
  *((_QWORD *)v53 + 1) = *((_QWORD *)v54 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v55 = v39[13];
  v56 = &v35[v55];
  v57 = &v36[v55];
  *(_QWORD *)v56 = *(_QWORD *)v57;
  *((_QWORD *)v56 + 1) = *((_QWORD *)v57 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v58 = v39[14];
  v59 = &v35[v58];
  v60 = &v36[v58];
  *(_QWORD *)v59 = *(_QWORD *)v60;
  *((_QWORD *)v59 + 1) = *((_QWORD *)v60 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[13]] = *(_QWORD *)&a2[a3[13]];
  swift_retain();
  swift_release();
  return a1;
}

char *sub_209F283E8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  int *v20;

  v6 = sub_209F66A90();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v10 = a3[5];
  v11 = &a1[v10];
  v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v12, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  v14 = a3[8];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  *(_QWORD *)&a1[v14] = *(_QWORD *)&a2[v14];
  v15 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  *(_QWORD *)&a1[v15] = *(_QWORD *)&a2[v15];
  v16 = a3[12];
  *(_OWORD *)&a1[a3[11]] = *(_OWORD *)&a2[a3[11]];
  v17 = &a1[v16];
  v18 = &a2[v16];
  if (v8(&a2[v16], 1, v6))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v17, v18, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v17, 0, 1, v6);
  }
  v20 = (int *)type metadata accessor for URLLoadingParameters(0);
  *(_OWORD *)&v17[v20[5]] = *(_OWORD *)&v18[v20[5]];
  *(_OWORD *)&v17[v20[6]] = *(_OWORD *)&v18[v20[6]];
  v17[v20[7]] = v18[v20[7]];
  *(_OWORD *)&v17[v20[8]] = *(_OWORD *)&v18[v20[8]];
  *(_OWORD *)&v17[v20[9]] = *(_OWORD *)&v18[v20[9]];
  v17[v20[10]] = v18[v20[10]];
  *(_QWORD *)&v17[v20[11]] = *(_QWORD *)&v18[v20[11]];
  *(_OWORD *)&v17[v20[12]] = *(_OWORD *)&v18[v20[12]];
  *(_OWORD *)&v17[v20[13]] = *(_OWORD *)&v18[v20[13]];
  *(_OWORD *)&v17[v20[14]] = *(_OWORD *)&v18[v20[14]];
  *(_QWORD *)&a1[a3[13]] = *(_QWORD *)&a2[a3[13]];
  return a1;
}

char *sub_209F2863C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  int v33;
  int v34;
  uint64_t v35;
  int *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;

  v6 = sub_209F66A90();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = v8(&a1[v12], 1, v6);
  v16 = v8(v14, 1, v6);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v14, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
LABEL_12:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v13, v14, v6);
LABEL_13:
  v18 = a3[7];
  v19 = *(void **)&a1[v18];
  *(_QWORD *)&a1[v18] = *(_QWORD *)&a2[v18];

  v20 = a3[8];
  v21 = *(void **)&a1[v20];
  *(_QWORD *)&a1[v20] = *(_QWORD *)&a2[v20];

  v22 = a3[9];
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = *((_QWORD *)v24 + 1);
  *(_QWORD *)v23 = *(_QWORD *)v24;
  swift_unknownObjectRelease();
  *((_QWORD *)v23 + 1) = v25;
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
  swift_release();
  v26 = a3[11];
  v27 = &a1[v26];
  v28 = &a2[v26];
  v29 = *((_QWORD *)v28 + 1);
  *(_QWORD *)v27 = *(_QWORD *)v28;
  swift_unknownObjectRelease();
  *((_QWORD *)v27 + 1) = v29;
  v30 = a3[12];
  v31 = &a1[v30];
  v32 = &a2[v30];
  v33 = v8(&a1[v30], 1, v6);
  v34 = v8(v32, 1, v6);
  if (!v33)
  {
    if (!v34)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v31, v32, v6);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v31, v6);
    goto LABEL_18;
  }
  if (v34)
  {
LABEL_18:
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v31, v32, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v31, 0, 1, v6);
LABEL_19:
  v36 = (int *)type metadata accessor for URLLoadingParameters(0);
  v37 = v36[5];
  v38 = &v31[v37];
  v39 = &v32[v37];
  v41 = *(_QWORD *)v39;
  v40 = *((_QWORD *)v39 + 1);
  *(_QWORD *)v38 = v41;
  *((_QWORD *)v38 + 1) = v40;
  swift_bridgeObjectRelease();
  v42 = v36[6];
  v43 = &v31[v42];
  v44 = &v32[v42];
  v46 = *(_QWORD *)v44;
  v45 = *((_QWORD *)v44 + 1);
  *(_QWORD *)v43 = v46;
  *((_QWORD *)v43 + 1) = v45;
  swift_bridgeObjectRelease();
  v31[v36[7]] = v32[v36[7]];
  v47 = v36[8];
  v48 = &v31[v47];
  v49 = &v32[v47];
  v51 = *(_QWORD *)v49;
  v50 = *((_QWORD *)v49 + 1);
  *(_QWORD *)v48 = v51;
  *((_QWORD *)v48 + 1) = v50;
  swift_bridgeObjectRelease();
  v52 = v36[9];
  v53 = &v31[v52];
  v54 = &v32[v52];
  v56 = *(_QWORD *)v54;
  v55 = *((_QWORD *)v54 + 1);
  *(_QWORD *)v53 = v56;
  *((_QWORD *)v53 + 1) = v55;
  swift_bridgeObjectRelease();
  v31[v36[10]] = v32[v36[10]];
  *(_QWORD *)&v31[v36[11]] = *(_QWORD *)&v32[v36[11]];
  swift_bridgeObjectRelease();
  v57 = v36[12];
  v58 = &v31[v57];
  v59 = &v32[v57];
  v61 = *(_QWORD *)v59;
  v60 = *((_QWORD *)v59 + 1);
  *(_QWORD *)v58 = v61;
  *((_QWORD *)v58 + 1) = v60;
  swift_bridgeObjectRelease();
  v62 = v36[13];
  v63 = &v31[v62];
  v64 = &v32[v62];
  v66 = *(_QWORD *)v64;
  v65 = *((_QWORD *)v64 + 1);
  *(_QWORD *)v63 = v66;
  *((_QWORD *)v63 + 1) = v65;
  swift_bridgeObjectRelease();
  v67 = v36[14];
  v68 = &v31[v67];
  v69 = &v32[v67];
  v71 = *(_QWORD *)v69;
  v70 = *((_QWORD *)v69 + 1);
  *(_QWORD *)v68 = v71;
  *((_QWORD *)v68 + 1) = v70;
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[13]] = *(_QWORD *)&a2[a3[13]];
  swift_release();
  return a1;
}

uint64_t sub_209F28A34()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_209F28A40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = type metadata accessor for URLLoadingParameters(0);
    v10 = a1 + *(int *)(a3 + 48);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 40));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_209F28AEC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_209F28AF8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 40)) = (a2 - 1);
      return result;
    }
    v10 = type metadata accessor for URLLoadingParameters(0);
    v12 = a1 + *(int *)(a4 + 48);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_209F28BA0()
{
  unint64_t v0;
  unint64_t v1;

  sub_209EE0664();
  if (v0 <= 0x3F)
  {
    type metadata accessor for URLLoadingParameters(319);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

_UNKNOWN **sub_209F28C58()
{
  return &off_24C294968;
}

void sub_209F28C64()
{
  void *v0;
  id v1;

  v1 = v0;
  JUMPOUT(0x20BD1C4FCLL);
}

uint64_t sub_209F28C78(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_209F28C84(*a1, *a2);
}

uint64_t sub_209F28C84(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x6C6562616CLL;
    else
      v3 = 0x6C6562614C627573;
    if (v2 == 1)
      v4 = 0xE500000000000000;
    else
      v4 = 0xE800000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x6C6562616CLL;
      else
        v6 = 0x6C6562614C627573;
      if (v5 == 1)
        v7 = 0xE500000000000000;
      else
        v7 = 0xE800000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE200000000000000;
    v3 = 25705;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE200000000000000;
  if (v3 != 25705)
  {
LABEL_21:
    v8 = sub_209F679A8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_209F28D7C()
{
  sub_209F67B10();
  sub_209F6733C();
  swift_bridgeObjectRelease();
  return sub_209F67B28();
}

uint64_t sub_209F28E0C()
{
  sub_209F6733C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_209F28E78()
{
  sub_209F67B10();
  sub_209F6733C();
  swift_bridgeObjectRelease();
  return sub_209F67B28();
}

uint64_t sub_209F28F04@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_209F2A488();
  *a1 = result;
  return result;
}

void sub_209F28F30(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE200000000000000;
  v4 = 0xE500000000000000;
  v5 = 0x6C6562616CLL;
  if (v2 != 1)
  {
    v5 = 0x6C6562614C627573;
    v4 = 0xE800000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 25705;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_209F28F80()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6C6562616CLL;
  if (*v0 != 1)
    v1 = 0x6C6562614C627573;
  if (*v0)
    return v1;
  else
    return 25705;
}

uint64_t sub_209F28FCC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_209F2A488();
  *a1 = result;
  return result;
}

void sub_209F28FF0(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_209F28FFC()
{
  sub_209F2A50C();
  return sub_209F67B88();
}

uint64_t sub_209F29024()
{
  sub_209F2A50C();
  return sub_209F67B94();
}

uint64_t BannerRowElement.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BannerRowElement.body.getter@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  char v27;
  char *v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v2 = v1;
  v53 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBED8);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBEE0);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBEE8);
  MEMORY[0x24BDAC7A8](v50, v11);
  v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBEF0);
  MEMORY[0x24BDAC7A8](v51, v14);
  v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBEF8);
  MEMORY[0x24BDAC7A8](v52, v17);
  v19 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBF00);
  MEMORY[0x24BDAC7A8](v20, v21);
  v23 = (char *)&v50 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v6 = sub_209F66F28();
  *((_QWORD *)v6 + 1) = 0x4024000000000000;
  v6[16] = 0;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBF08);
  sub_209F29468(v2, &v6[*(int *)(v24 + 44)]);
  v25 = sub_209F6706C();
  v26 = sub_209F67084();
  v27 = sub_209F67078();
  sub_209F67078();
  if (sub_209F67078() != v25)
    v27 = sub_209F67078();
  sub_209F67078();
  if (sub_209F67078() != v26)
    v27 = sub_209F67078();
  sub_209EE3528((uint64_t)v6, (uint64_t)v10, &qword_2545BBED8);
  v28 = &v10[*(int *)(v7 + 36)];
  *v28 = v27;
  *(_OWORD *)(v28 + 8) = 0u;
  *(_OWORD *)(v28 + 24) = 0u;
  v28[40] = 1;
  sub_209EE017C((uint64_t)v6, &qword_2545BBED8);
  v29 = sub_209F67054();
  sub_209F66D18();
  v31 = v30;
  v33 = v32;
  v35 = v34;
  v37 = v36;
  sub_209EE3528((uint64_t)v10, (uint64_t)v13, &qword_2545BBEE0);
  v38 = &v13[*(int *)(v50 + 36)];
  *v38 = v29;
  *((_QWORD *)v38 + 1) = v31;
  *((_QWORD *)v38 + 2) = v33;
  *((_QWORD *)v38 + 3) = v35;
  *((_QWORD *)v38 + 4) = v37;
  v38[40] = 0;
  sub_209EE017C((uint64_t)v10, &qword_2545BBEE0);
  v39 = sub_209F67060();
  sub_209F66D18();
  v41 = v40;
  v43 = v42;
  v45 = v44;
  v47 = v46;
  sub_209EE3528((uint64_t)v13, (uint64_t)v16, &qword_2545BBEE8);
  v48 = &v16[*(int *)(v51 + 36)];
  *v48 = v39;
  *((_QWORD *)v48 + 1) = v41;
  *((_QWORD *)v48 + 2) = v43;
  *((_QWORD *)v48 + 3) = v45;
  *((_QWORD *)v48 + 4) = v47;
  v48[40] = 0;
  sub_209EE017C((uint64_t)v13, &qword_2545BBEE8);
  sub_209EE3528((uint64_t)v16, (uint64_t)v19, &qword_2545BBEF0);
  v19[*(int *)(v52 + 36)] = 0;
  sub_209EE017C((uint64_t)v16, &qword_2545BBEF0);
  sub_209F67228();
  sub_209F29E9C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v23, 0.0, 1, 0.0, 1);
  sub_209EE017C((uint64_t)v19, &qword_2545BBEF8);
  return sub_209EF1E0C((uint64_t)v23, v53, &qword_2545BBF00);
}

uint64_t sub_209F29468@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t KeyPath;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(_QWORD, _QWORD);
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char v124;
  void *v125;
  uint64_t v126;
  uint64_t v127;
  char v128;
  uint64_t v129;
  char v130;
  uint64_t v131;
  char v132;
  uint64_t v133;
  uint64_t v134;
  char v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unsigned __int8 v139;
  void *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unsigned __int8 v145;
  uint64_t v146;
  unsigned __int8 v147;
  uint64_t v148;
  uint64_t v149;
  unsigned __int8 v150;
  uint64_t v151;

  v99 = a2;
  v98 = sub_209F670C0();
  v97 = *(_QWORD *)(v98 - 8);
  MEMORY[0x24BDAC7A8](v98, v3);
  v95 = (char *)&v91 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBF90);
  MEMORY[0x24BDAC7A8](v92, v5);
  v96 = (uint64_t)&v91 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBF98);
  MEMORY[0x24BDAC7A8](v93, v7);
  v100 = (char *)&v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBFA0);
  v10 = MEMORY[0x24BDAC7A8](v94, v9);
  v107 = (uint64_t)&v91 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v12);
  v104 = (uint64_t *)((char *)&v91 - v13);
  v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBFA8);
  v103 = *(_QWORD *)(v106 - 8);
  v15 = MEMORY[0x24BDAC7A8](v106, v14);
  v105 = (char *)&v91 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15, v17);
  v102 = (char *)&v91 - v18;
  v19 = a1[4];
  v20 = a1[5];
  v22 = a1[6];
  v21 = (void *)a1[7];
  v23 = a1[8];
  v24 = a1[9];
  v26 = a1[10];
  v25 = a1[11];
  v27 = a1[12];
  v28 = a1[13];
  v29 = a1[14];
  v30 = a1[15];
  v31 = a1[16];
  v32 = a1[17];
  v33 = a1[18];
  if (v23)
  {
    v122 = a1[4];
    v123 = v20;
    v124 = v22 & 1;
    v125 = v21;
    v126 = v23;
    v127 = v24;
    v128 = v26 & 1;
    v129 = v25;
    v130 = v27 & 1;
    v131 = v28;
    v132 = v29 & 1;
    v133 = v30;
    v134 = v31;
    v135 = v32 & 1;
    v136 = v33;
    RUIImageView.defaultSize(_:)((uint64_t)&v137, 60.0, 60.0);
    v120 = v137;
    v101 = v138;
    v119 = v139;
    v118 = v140;
    v121 = v141;
    v117 = v142;
    v108 = v143;
    v116 = v144;
    v115 = v145;
    v114 = v146;
    v113 = v147;
    v112 = v148;
    v111 = v149;
    v110 = v150;
    v109 = v151;
  }
  else
  {
    v121 = 0;
    v120 = v19;
    v118 = v21;
    v116 = v25;
    v101 = v20;
    v119 = v22;
    v117 = v24;
    v108 = v26;
    v115 = v27;
    v114 = v28;
    v113 = v29;
    v112 = v30;
    v111 = v31;
    v110 = v32;
    v109 = v33;
  }
  v34 = a1[2];
  v35 = a1[3];
  KeyPath = swift_getKeyPath();
  swift_bridgeObjectRetain();
  v37 = sub_209F670B4();
  v38 = swift_getKeyPath();
  v137 = v34;
  v138 = v35;
  v139 = 0;
  v140 = (void *)MEMORY[0x24BEE4AF8];
  v141 = KeyPath;
  LOBYTE(v142) = 1;
  v143 = v38;
  v144 = v37;
  sub_209F670A8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBFB0);
  sub_209F2D128();
  v39 = v102;
  sub_209F67108();
  sub_209EF1DFC(v34, v35, 0);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v40 = (uint64_t)a1 + *(int *)(type metadata accessor for BannerRowElement() + 28);
  v41 = swift_getKeyPath();
  v42 = v96;
  sub_209EE3528(v40, v96, &qword_2545BB188);
  v43 = v42 + *(int *)(v92 + 36);
  *(_QWORD *)v43 = v41;
  *(_BYTE *)(v43 + 8) = 1;
  sub_209F6709C();
  v44 = v97;
  v45 = v95;
  v46 = v98;
  (*(void (**)(char *, _QWORD, uint64_t))(v97 + 104))(v95, *MEMORY[0x24BDF17C0], v98);
  v47 = sub_209F670CC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v46);
  v48 = swift_getKeyPath();
  v49 = v100;
  sub_209EE3528(v42, (uint64_t)v100, &qword_2545BBF90);
  v50 = (uint64_t *)&v49[*(int *)(v93 + 36)];
  *v50 = v48;
  v50[1] = v47;
  sub_209EE017C(v42, &qword_2545BBF90);
  LOBYTE(v48) = sub_209F67054();
  sub_209F66D18();
  v52 = v51;
  v54 = v53;
  v56 = v55;
  v58 = v57;
  v59 = v107;
  sub_209EE3528((uint64_t)v49, v107, &qword_2545BBF98);
  v60 = v59 + *(int *)(v94 + 36);
  *(_BYTE *)v60 = v48;
  *(_QWORD *)(v60 + 8) = v52;
  *(_QWORD *)(v60 + 16) = v54;
  *(_QWORD *)(v60 + 24) = v56;
  *(_QWORD *)(v60 + 32) = v58;
  *(_BYTE *)(v60 + 40) = 0;
  sub_209EE017C((uint64_t)v49, &qword_2545BBF98);
  v61 = v59;
  v62 = v59;
  v63 = (void (*)(_QWORD, _QWORD))v104;
  sub_209EF1E0C(v62, (uint64_t)v104, &qword_2545BBFA0);
  v100 = *(char **)(v103 + 16);
  v64 = v105;
  v65 = v39;
  v66 = v106;
  ((void (*)(char *, char *, uint64_t))v100)(v105, v65, v106);
  v67 = (uint64_t)v63;
  v68 = v61;
  sub_209EE3528(v67, v61, &qword_2545BBFA0);
  v69 = v99;
  v70 = v101;
  *v99 = v120;
  v69[1] = v70;
  v71 = v118;
  v69[2] = v119;
  v69[3] = v71;
  v72 = v117;
  v69[4] = v121;
  v69[5] = v72;
  v73 = v116;
  v69[6] = v108;
  v69[7] = v73;
  v74 = v115;
  v69[8] = v115;
  v115 = v74;
  v75 = v114;
  v69[9] = v114;
  v114 = v75;
  v76 = v113;
  v69[10] = v113;
  v113 = v76;
  v77 = v111;
  v69[11] = v112;
  v69[12] = v77;
  v111 = v77;
  v78 = v109;
  v69[13] = v110;
  v69[14] = v78;
  v109 = v78;
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBFF0);
  ((void (*)(char *, char *, uint64_t))v100)((char *)v69 + *(int *)(v79 + 48), v64, v66);
  sub_209EE3528(v68, (uint64_t)v69 + *(int *)(v79 + 64), &qword_2545BBFA0);
  v80 = v120;
  v81 = v101;
  v82 = v119;
  v83 = v118;
  v84 = v121;
  sub_209EEAF98(v120, v101, v119, v118, v121);
  sub_209EEAF98(v80, v81, v82, v83, v84);
  sub_209EE017C((uint64_t)v104, &qword_2545BBFA0);
  v104 = *(uint64_t **)(v103 + 8);
  v85 = v106;
  ((void (*)(char *, uint64_t))v104)(v102, v106);
  v86 = v120;
  v87 = v119;
  v88 = v118;
  v89 = v121;
  sub_209EEB040(v120, v81, v119, v118, v121);
  sub_209EE017C(v107, &qword_2545BBFA0);
  ((void (*)(char *, uint64_t))v104)(v105, v85);
  return sub_209EEB040(v86, v81, v87, v88, v89);
}

__n128 sub_209F29E9C@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  uint64_t v13;
  void *v23;
  _OWORD *v24;
  __n128 result;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __n128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;

  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_209F67540();
    v23 = (void *)sub_209F67030();
    sub_209F66B80();

  }
  sub_209F66E20();
  sub_209EE3528(v13, a9, &qword_2545BBEF8);
  v24 = (_OWORD *)(a9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545BBF00) + 36));
  v24[4] = v30;
  v24[5] = v31;
  v24[6] = v32;
  *v24 = v26;
  v24[1] = v27;
  result = v29;
  v24[2] = v28;
  v24[3] = v29;
  return result;
}

uint64_t BannerRowElement.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Swift::String *v14;
  uint64_t v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  _BYTE v39[40];
  __int128 v40;
  unsigned __int8 v41;
  __int128 v42;
  uint64_t v43;
  unsigned __int8 v44;
  uint64_t v45;
  unsigned __int8 v46;
  uint64_t v47;
  unsigned __int8 v48;
  __int128 v49;
  unsigned __int8 v50;
  uint64_t v51;
  uint64_t v52;

  v37 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB188);
  MEMORY[0x24BDAC7A8](v3, v4);
  v38 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBF10);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for BannerRowElement();
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (Swift::String *)((char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_209F2A50C();
  v15 = v52;
  sub_209F67B58();
  if (v15)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v16 = Decoder.decodeRUIID()();
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v19 = (uint64_t)v14;
  *v14 = v16;
  LOBYTE(v40) = 1;
  v20 = sub_209F6787C();
  if (v21)
    v22 = v20;
  else
    v22 = 0;
  v23 = 0xE000000000000000;
  if (v21)
    v23 = v21;
  v14[1]._countAndFlagsBits = v22;
  v14[1]._object = (void *)v23;
  type metadata accessor for SubLabelElement();
  LOBYTE(v40) = 2;
  sub_209EE4ABC(&qword_2545BB1B8, (uint64_t (*)(uint64_t))type metadata accessor for SubLabelElement, (uint64_t)&unk_209F79034);
  v24 = (uint64_t)v38;
  sub_209F67894();
  sub_209EF1E0C(v24, v19 + *(int *)(v11 + 28), &qword_2545BB188);
  sub_209EE0E3C((uint64_t)a1, (uint64_t)v39);
  v25 = RUIImageView.init(from:)((uint64_t)v39, (uint64_t)&v40);
  (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v10, v6, v25);
  v26 = v41;
  v27 = v42;
  v28 = v43;
  v29 = v44;
  v30 = v45;
  v31 = v46;
  v32 = v47;
  v33 = v48;
  v34 = v50;
  v35 = v51;
  *(_OWORD *)(v19 + 32) = v40;
  *(_QWORD *)(v19 + 48) = v26;
  *(_OWORD *)(v19 + 56) = v27;
  *(_QWORD *)(v19 + 72) = v28;
  *(_QWORD *)(v19 + 80) = v29;
  *(_QWORD *)(v19 + 88) = v30;
  *(_QWORD *)(v19 + 96) = v31;
  *(_QWORD *)(v19 + 104) = v32;
  *(_QWORD *)(v19 + 112) = v33;
  *(_OWORD *)(v19 + 120) = v49;
  *(_QWORD *)(v19 + 136) = v34;
  *(_QWORD *)(v19 + 144) = v35;
  sub_209F2A550(v19, v37);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_209EEF010(v19, (uint64_t (*)(_QWORD))type metadata accessor for BannerRowElement);
}

uint64_t sub_209F2A3D8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return BannerRowElement.init(from:)(a1, a2);
}

uint64_t sub_209F2A3EC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_209F66E44();
  *a1 = result;
  return result;
}

uint64_t sub_209F2A414()
{
  return sub_209F66E50();
}

uint64_t sub_209F2A438@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_209F66E5C();
  *a1 = result;
  return result;
}

uint64_t sub_209F2A460()
{
  swift_retain();
  return sub_209F66E68();
}

uint64_t sub_209F2A488()
{
  unint64_t v0;

  v0 = sub_209F67840();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t type metadata accessor for BannerRowElement()
{
  uint64_t result;

  result = qword_2545C2730;
  if (!qword_2545C2730)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_209F2A50C()
{
  unint64_t result;

  result = qword_2545BBF18;
  if (!qword_2545BBF18)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7970C, &type metadata for BannerRowElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BBF18);
  }
  return result;
}

uint64_t sub_209F2A550(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BannerRowElement();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_209F2A598()
{
  unint64_t result;

  result = qword_2545BBF20;
  if (!qword_2545BBF20)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7966C, &type metadata for BannerRowElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BBF20);
  }
  return result;
}

unint64_t sub_209F2A5E0()
{
  unint64_t result;

  result = qword_2545BBF28;
  if (!qword_2545BBF28)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F79784, &type metadata for BannerRowElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BBF28);
  }
  return result;
}

unint64_t sub_209F2A628()
{
  unint64_t result;

  result = qword_2545BBF30;
  if (!qword_2545BBF30)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7975C, &type metadata for BannerRowElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BBF30);
  }
  return result;
}

uint64_t sub_209F2A66C(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_209EE4ABC(&qword_2545BBF38, (uint64_t (*)(uint64_t))type metadata accessor for BannerRowElement, (uint64_t)&protocol conformance descriptor for BannerRowElement);
  a1[2] = sub_209EE4ABC(&qword_2545BBF40, (uint64_t (*)(uint64_t))type metadata accessor for BannerRowElement, (uint64_t)&protocol conformance descriptor for BannerRowElement);
  result = sub_209EE4ABC(&qword_2545BBF48, (uint64_t (*)(uint64_t))type metadata accessor for BannerRowElement, (uint64_t)&protocol conformance descriptor for BannerRowElement);
  a1[3] = result;
  return result;
}

uint64_t sub_209F2A6E4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeBufferWithCopyOfBuffer for BannerRowElement(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  char *v36;
  int *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  int *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  void *v66;
  char v67;
  uint64_t v68;
  char *v69;
  char *v70;
  id v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  int *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  int *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  void (*v97)(uint64_t *, _QWORD, uint64_t, uint64_t);
  uint64_t v99;
  unsigned int (*v100)(char *, uint64_t, uint64_t);
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *__dst;
  void *__dsta;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v16 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    v9 = a2[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v9)
    {
      v10 = a2[4];
      v11 = a2[5];
      v12 = *((_BYTE *)a2 + 48);
      sub_209EEAFF0();
      *(_QWORD *)(a1 + 32) = v10;
      *(_QWORD *)(a1 + 40) = v11;
      *(_BYTE *)(a1 + 48) = v12;
      v13 = (void *)a2[7];
      v14 = a2[8];
      *(_QWORD *)(a1 + 56) = v13;
      *(_QWORD *)(a1 + 64) = v14;
      *(_QWORD *)(a1 + 72) = a2[9];
      *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
      *(_QWORD *)(a1 + 88) = a2[11];
      *(_BYTE *)(a1 + 96) = *((_BYTE *)a2 + 96);
      *(_QWORD *)(a1 + 104) = a2[13];
      *(_BYTE *)(a1 + 112) = *((_BYTE *)a2 + 112);
      *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 15);
      *(_BYTE *)(a1 + 136) = *((_BYTE *)a2 + 136);
      *(_QWORD *)(a1 + 144) = a2[18];
      v15 = v13;
      swift_retain();
      swift_retain();
      swift_retain();
    }
    else
    {
      v17 = *((_OWORD *)a2 + 7);
      *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
      *(_OWORD *)(a1 + 112) = v17;
      *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
      *(_QWORD *)(a1 + 144) = a2[18];
      v18 = *((_OWORD *)a2 + 3);
      *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 48) = v18;
      v19 = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 80) = v19;
    }
    v20 = *(int *)(a3 + 28);
    v21 = (uint64_t *)(a1 + v20);
    v22 = (char *)a2 + v20;
    v23 = type metadata accessor for SubLabelElement();
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB188);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      v26 = *(_QWORD *)v22;
      v27 = v22[8];
      sub_209EEC00C(*(_QWORD *)v22, v27);
      *v21 = v26;
      *((_BYTE *)v21 + 8) = v27;
      v28 = *((_QWORD *)v22 + 3);
      v21[2] = *((_QWORD *)v22 + 2);
      v21[3] = v28;
      v29 = *((_QWORD *)v22 + 5);
      v21[4] = *((_QWORD *)v22 + 4);
      v21[5] = v29;
      v30 = *(int *)(v23 + 28);
      __dst = (char *)v21 + v30;
      v31 = &v22[v30];
      v32 = sub_209F66A90();
      v33 = *(_QWORD *)(v32 - 8);
      v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v100 = v34;
      v108 = v23;
      v109 = v21;
      v107 = v24;
      v101 = v32;
      v99 = v33;
      if (v34(v31, 1, v32))
      {
        v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
        v36 = __dst;
        memcpy(__dst, v31, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        v36 = __dst;
        (*(void (**)(char *, char *, uint64_t))(v33 + 16))(__dst, v31, v32);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(__dst, 0, 1, v32);
      }
      v37 = (int *)type metadata accessor for URLLoadingParameters(0);
      v38 = v37[5];
      v39 = &v36[v38];
      v40 = &v31[v38];
      __dsta = (void *)*((_QWORD *)v40 + 1);
      *(_QWORD *)v39 = *(_QWORD *)v40;
      *((_QWORD *)v39 + 1) = __dsta;
      v41 = v37[6];
      v42 = &v36[v41];
      v43 = &v31[v41];
      v104 = *((_QWORD *)v43 + 1);
      *(_QWORD *)v42 = *(_QWORD *)v43;
      *((_QWORD *)v42 + 1) = v104;
      v36[v37[7]] = v31[v37[7]];
      v44 = v37[8];
      v45 = &v36[v44];
      v46 = &v31[v44];
      v103 = *((_QWORD *)v46 + 1);
      *(_QWORD *)v45 = *(_QWORD *)v46;
      *((_QWORD *)v45 + 1) = v103;
      v47 = v37[9];
      v48 = &v36[v47];
      v49 = &v31[v47];
      v102 = *((_QWORD *)v49 + 1);
      *(_QWORD *)v48 = *(_QWORD *)v49;
      *((_QWORD *)v48 + 1) = v102;
      v36[v37[10]] = v31[v37[10]];
      *(_QWORD *)&v36[v37[11]] = *(_QWORD *)&v31[v37[11]];
      v50 = v37[12];
      v51 = &v36[v50];
      v52 = &v31[v50];
      v53 = *((_QWORD *)v52 + 1);
      *(_QWORD *)v51 = *(_QWORD *)v52;
      *((_QWORD *)v51 + 1) = v53;
      v54 = v37[13];
      v55 = &v36[v54];
      v56 = &v31[v54];
      v57 = *((_QWORD *)v56 + 1);
      *(_QWORD *)v55 = *(_QWORD *)v56;
      *((_QWORD *)v55 + 1) = v57;
      v58 = v37[14];
      v59 = &v36[v58];
      v60 = &v31[v58];
      v61 = *((_QWORD *)v60 + 1);
      *(_QWORD *)v59 = *(_QWORD *)v60;
      *((_QWORD *)v59 + 1) = v61;
      v62 = (int *)type metadata accessor for URLLoader(0);
      v63 = v62[5];
      v64 = &v36[v63];
      v65 = &v31[v63];
      v66 = *(void **)v65;
      v67 = v65[8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_209EEC018(v66, v67);
      *(_QWORD *)v64 = v66;
      v64[8] = v67;
      v68 = v62[6];
      v69 = &v36[v68];
      v70 = &v31[v68];
      v71 = *(id *)v70;
      LOBYTE(v57) = v70[8];
      sub_209EEC018(*(id *)v70, v57);
      *(_QWORD *)v69 = v71;
      v69[8] = v57;
      v72 = v62[7];
      v73 = &v36[v72];
      v74 = &v31[v72];
      v75 = *(_QWORD *)v74;
      v76 = *((_QWORD *)v74 + 1);
      LOBYTE(v69) = v74[16];
      sub_209EEC024(*(_QWORD *)v74, v76, (char)v69);
      *(_QWORD *)v73 = v75;
      *((_QWORD *)v73 + 1) = v76;
      v73[16] = (char)v69;
      v77 = v62;
      v78 = v62[8];
      v79 = &v36[v78];
      v80 = &v31[v78];
      __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        if (v100(v80, 1, v101))
        {
          v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
          memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v79, v80, v101);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v79, 0, 1, v101);
        }
      }
      else
      {
        *(_QWORD *)v79 = *(_QWORD *)v80;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      v82 = v77;
      v83 = v77[9];
      v84 = &v36[v83];
      v85 = &v31[v83];
      v86 = *(_QWORD *)v85;
      v87 = *((_QWORD *)v85 + 1);
      v88 = v85[16];
      sub_209EEC024(*(_QWORD *)v85, v87, v88);
      *(_QWORD *)v84 = v86;
      *((_QWORD *)v84 + 1) = v87;
      v84[16] = v88;
      v89 = v82[10];
      v90 = &v36[v89];
      v91 = &v31[v89];
      v92 = *(_QWORD *)v91;
      LOBYTE(v87) = v91[8];
      sub_209EEC030(*(_QWORD *)v91, v87);
      *(_QWORD *)v90 = v92;
      v90[8] = v87;
      v93 = v82[11];
      v94 = &v36[v93];
      v95 = &v31[v93];
      v96 = *(_QWORD *)v95;
      LOBYTE(v95) = v95[8];
      *(_QWORD *)v94 = v96;
      v94[8] = (char)v95;
      v97 = *(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v107 + 56);
      swift_retain();
      v97(v109, 0, 1, v108);
    }
  }
  return a1;
}

uint64_t destroy for BannerRowElement(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(uint64_t, uint64_t, uint64_t);
  int *v12;
  uint64_t v13;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 64))
  {
    sub_209EEB098();
    v4 = *(void **)(a1 + 56);
    swift_release();

    swift_release();
    swift_release();
  }
  v5 = a1 + *(int *)(a2 + 28);
  v6 = type metadata accessor for SubLabelElement();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6);
  if (!(_DWORD)result)
  {
    sub_209EEC68C(*(_QWORD *)v5, *(_BYTE *)(v5 + 8));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v8 = v5 + *(int *)(v6 + 28);
    v9 = sub_209F66A90();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    if (!v11(v8, 1, v9))
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    type metadata accessor for URLLoadingParameters(0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v12 = (int *)type metadata accessor for URLLoader(0);
    sub_209EEC698(*(id *)(v8 + v12[5]), *(_BYTE *)(v8 + v12[5] + 8));
    sub_209EEC698(*(id *)(v8 + v12[6]), *(_BYTE *)(v8 + v12[6] + 8));
    sub_209EEC6A4(*(_QWORD *)(v8 + v12[7]), *(_QWORD *)(v8 + v12[7] + 8), *(_BYTE *)(v8 + v12[7] + 16));
    v13 = v8 + v12[8];
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if (!v11(v13, 1, v9))
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v13, v9);
    }
    else
    {
      swift_release();
    }
    sub_209EEC6A4(*(_QWORD *)(v8 + v12[9]), *(_QWORD *)(v8 + v12[9] + 8), *(_BYTE *)(v8 + v12[9] + 16));
    sub_209EEC6B0(*(_QWORD *)(v8 + v12[10]), *(_BYTE *)(v8 + v12[10] + 8));
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for BannerRowElement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  void *v12;
  uint64_t v13;
  id v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  char *v34;
  int *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  int *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  void *v64;
  char v65;
  uint64_t v66;
  char *v67;
  char *v68;
  id v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  int *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  int *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  void (*v95)(uint64_t *, _QWORD, uint64_t, uint64_t);
  uint64_t v97;
  unsigned int (*v98)(char *, uint64_t, uint64_t);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *__dst;
  void *__dsta;
  uint64_t v105;
  uint64_t v106;
  uint64_t *v107;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  v8 = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8)
  {
    v9 = *(_QWORD *)(a2 + 32);
    v10 = *(_QWORD *)(a2 + 40);
    v11 = *(_BYTE *)(a2 + 48);
    sub_209EEAFF0();
    *(_QWORD *)(a1 + 32) = v9;
    *(_QWORD *)(a1 + 40) = v10;
    *(_BYTE *)(a1 + 48) = v11;
    v12 = *(void **)(a2 + 56);
    v13 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = v12;
    *(_QWORD *)(a1 + 64) = v13;
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    v14 = v12;
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    v15 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v15;
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    v16 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v16;
    v17 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v17;
  }
  v18 = *(int *)(a3 + 28);
  v19 = (uint64_t *)(a1 + v18);
  v20 = (char *)(a2 + v18);
  v21 = type metadata accessor for SubLabelElement();
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB188);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v24 = *(_QWORD *)v20;
    v25 = v20[8];
    sub_209EEC00C(*(_QWORD *)v20, v25);
    *v19 = v24;
    *((_BYTE *)v19 + 8) = v25;
    v26 = *((_QWORD *)v20 + 3);
    v19[2] = *((_QWORD *)v20 + 2);
    v19[3] = v26;
    v27 = *((_QWORD *)v20 + 5);
    v19[4] = *((_QWORD *)v20 + 4);
    v19[5] = v27;
    v28 = *(int *)(v21 + 28);
    __dst = (char *)v19 + v28;
    v29 = &v20[v28];
    v30 = sub_209F66A90();
    v31 = *(_QWORD *)(v30 - 8);
    v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v98 = v32;
    v106 = v21;
    v107 = v19;
    v105 = v22;
    v99 = v30;
    v97 = v31;
    if (v32(v29, 1, v30))
    {
      v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
      v34 = __dst;
      memcpy(__dst, v29, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      v34 = __dst;
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(__dst, v29, v30);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(__dst, 0, 1, v30);
    }
    v35 = (int *)type metadata accessor for URLLoadingParameters(0);
    v36 = v35[5];
    v37 = &v34[v36];
    v38 = &v29[v36];
    __dsta = (void *)*((_QWORD *)v38 + 1);
    *(_QWORD *)v37 = *(_QWORD *)v38;
    *((_QWORD *)v37 + 1) = __dsta;
    v39 = v35[6];
    v40 = &v34[v39];
    v41 = &v29[v39];
    v102 = *((_QWORD *)v41 + 1);
    *(_QWORD *)v40 = *(_QWORD *)v41;
    *((_QWORD *)v40 + 1) = v102;
    v34[v35[7]] = v29[v35[7]];
    v42 = v35[8];
    v43 = &v34[v42];
    v44 = &v29[v42];
    v101 = *((_QWORD *)v44 + 1);
    *(_QWORD *)v43 = *(_QWORD *)v44;
    *((_QWORD *)v43 + 1) = v101;
    v45 = v35[9];
    v46 = &v34[v45];
    v47 = &v29[v45];
    v100 = *((_QWORD *)v47 + 1);
    *(_QWORD *)v46 = *(_QWORD *)v47;
    *((_QWORD *)v46 + 1) = v100;
    v34[v35[10]] = v29[v35[10]];
    *(_QWORD *)&v34[v35[11]] = *(_QWORD *)&v29[v35[11]];
    v48 = v35[12];
    v49 = &v34[v48];
    v50 = &v29[v48];
    v51 = *((_QWORD *)v50 + 1);
    *(_QWORD *)v49 = *(_QWORD *)v50;
    *((_QWORD *)v49 + 1) = v51;
    v52 = v35[13];
    v53 = &v34[v52];
    v54 = &v29[v52];
    v55 = *((_QWORD *)v54 + 1);
    *(_QWORD *)v53 = *(_QWORD *)v54;
    *((_QWORD *)v53 + 1) = v55;
    v56 = v35[14];
    v57 = &v34[v56];
    v58 = &v29[v56];
    v59 = *((_QWORD *)v58 + 1);
    *(_QWORD *)v57 = *(_QWORD *)v58;
    *((_QWORD *)v57 + 1) = v59;
    v60 = (int *)type metadata accessor for URLLoader(0);
    v61 = v60[5];
    v62 = &v34[v61];
    v63 = &v29[v61];
    v64 = *(void **)v63;
    v65 = v63[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_209EEC018(v64, v65);
    *(_QWORD *)v62 = v64;
    v62[8] = v65;
    v66 = v60[6];
    v67 = &v34[v66];
    v68 = &v29[v66];
    v69 = *(id *)v68;
    LOBYTE(v55) = v68[8];
    sub_209EEC018(*(id *)v68, v55);
    *(_QWORD *)v67 = v69;
    v67[8] = v55;
    v70 = v60[7];
    v71 = &v34[v70];
    v72 = &v29[v70];
    v73 = *(_QWORD *)v72;
    v74 = *((_QWORD *)v72 + 1);
    LOBYTE(v67) = v72[16];
    sub_209EEC024(*(_QWORD *)v72, v74, (char)v67);
    *(_QWORD *)v71 = v73;
    *((_QWORD *)v71 + 1) = v74;
    v71[16] = (char)v67;
    v75 = v60;
    v76 = v60[8];
    v77 = &v34[v76];
    v78 = &v29[v76];
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if (v98(v78, 1, v99))
      {
        v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
        memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v77, v78, v99);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v77, 0, 1, v99);
      }
    }
    else
    {
      *(_QWORD *)v77 = *(_QWORD *)v78;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v80 = v75;
    v81 = v75[9];
    v82 = &v34[v81];
    v83 = &v29[v81];
    v84 = *(_QWORD *)v83;
    v85 = *((_QWORD *)v83 + 1);
    v86 = v83[16];
    sub_209EEC024(*(_QWORD *)v83, v85, v86);
    *(_QWORD *)v82 = v84;
    *((_QWORD *)v82 + 1) = v85;
    v82[16] = v86;
    v87 = v80[10];
    v88 = &v34[v87];
    v89 = &v29[v87];
    v90 = *(_QWORD *)v89;
    LOBYTE(v85) = v89[8];
    sub_209EEC030(*(_QWORD *)v89, v85);
    *(_QWORD *)v88 = v90;
    v88[8] = v85;
    v91 = v80[11];
    v92 = &v34[v91];
    v93 = &v29[v91];
    v94 = *(_QWORD *)v93;
    LOBYTE(v93) = v93[8];
    *(_QWORD *)v92 = v94;
    v92[8] = (char)v93;
    v95 = *(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v105 + 56);
    swift_retain();
    v95(v107, 0, 1, v106);
  }
  return a1;
}

uint64_t assignWithCopy for BannerRowElement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v6;
  __int128 *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  id v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, uint64_t, uint64_t);
  int v43;
  int v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int (*v52)(char *, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  unsigned int (*v64)(char *, uint64_t, uint64_t);
  unsigned int v65;
  int *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  int *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  void *v92;
  char v93;
  uint64_t v94;
  char *v95;
  char *v96;
  id v97;
  char v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  int *v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  char *v129;
  char *v130;
  int *v131;
  uint64_t v132;
  char *v133;
  char *v134;
  id v135;
  char v136;
  void *v137;
  char v138;
  uint64_t v139;
  char *v140;
  char *v141;
  id v142;
  char v143;
  void *v144;
  char v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  char v163;
  uint64_t v164;
  char *v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  char *v170;
  uint64_t v171;
  void (*v172)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v173;
  char *v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  char v178;
  uint64_t v179;
  uint64_t v180;
  char v181;
  uint64_t v182;
  char *v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  char v187;
  uint64_t v188;
  char *v189;
  char *v190;
  uint64_t v191;
  uint64_t v193;
  unsigned int (*v194)(char *, uint64_t, uint64_t);
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  unsigned int (*v199)(char *, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (_OWORD *)(a1 + 32);
  v7 = (__int128 *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64))
  {
    if (v8)
    {
      v9 = *(_QWORD *)(a2 + 32);
      v10 = *(_QWORD *)(a2 + 40);
      v11 = *(_BYTE *)(a2 + 48);
      sub_209EEAFF0();
      *(_QWORD *)(a1 + 32) = v9;
      *(_QWORD *)(a1 + 40) = v10;
      *(_BYTE *)(a1 + 48) = v11;
      sub_209EEB098();
      v12 = *(void **)(a1 + 56);
      v13 = *(void **)(a2 + 56);
      *(_QWORD *)(a1 + 56) = v13;
      v14 = v13;

      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      swift_retain();
      swift_release();
      v15 = *(_QWORD *)(a2 + 72);
      *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
      *(_QWORD *)(a1 + 72) = v15;
      LOBYTE(v15) = *(_BYTE *)(a2 + 96);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_BYTE *)(a1 + 96) = v15;
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      swift_retain();
      swift_release();
      *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
      v16 = *(_OWORD *)(a2 + 120);
      *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
      *(_OWORD *)(a1 + 120) = v16;
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_209EEF04C(a1 + 32);
      v25 = *(_OWORD *)(a2 + 80);
      v27 = *v7;
      v26 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v25;
      *v6 = v27;
      *(_OWORD *)(a1 + 48) = v26;
      v29 = *(_OWORD *)(a2 + 112);
      v28 = *(_OWORD *)(a2 + 128);
      v30 = *(_OWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 112) = v29;
      *(_OWORD *)(a1 + 128) = v28;
      *(_OWORD *)(a1 + 96) = v30;
    }
  }
  else if (v8)
  {
    v17 = *(_QWORD *)(a2 + 32);
    v18 = *(_QWORD *)(a2 + 40);
    v19 = *(_BYTE *)(a2 + 48);
    sub_209EEAFF0();
    *(_QWORD *)(a1 + 32) = v17;
    *(_QWORD *)(a1 + 40) = v18;
    *(_BYTE *)(a1 + 48) = v19;
    v20 = *(void **)(a2 + 56);
    *(_QWORD *)(a1 + 56) = v20;
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    v21 = *(_QWORD *)(a2 + 72);
    *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
    *(_QWORD *)(a1 + 72) = v21;
    v22 = *(_QWORD *)(a2 + 88);
    *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
    *(_QWORD *)(a1 + 88) = v22;
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
    v23 = *(_OWORD *)(a2 + 120);
    *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
    *(_OWORD *)(a1 + 120) = v23;
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    v24 = v20;
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    v31 = *v7;
    v32 = *(_OWORD *)(a2 + 48);
    v33 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v33;
    *v6 = v31;
    *(_OWORD *)(a1 + 48) = v32;
    v34 = *(_OWORD *)(a2 + 96);
    v35 = *(_OWORD *)(a2 + 112);
    v36 = *(_OWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 112) = v35;
    *(_OWORD *)(a1 + 128) = v36;
    *(_OWORD *)(a1 + 96) = v34;
  }
  v37 = *(int *)(a3 + 28);
  v38 = a1 + v37;
  v39 = a2 + v37;
  v40 = type metadata accessor for SubLabelElement();
  v41 = *(_QWORD *)(v40 - 8);
  v42 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 48);
  v43 = v42(v38, 1, v40);
  v44 = v42(v39, 1, v40);
  if (v43)
  {
    if (!v44)
    {
      v198 = v41;
      v45 = *(_QWORD *)v39;
      v46 = *(_BYTE *)(v39 + 8);
      sub_209EEC00C(*(_QWORD *)v39, v46);
      *(_QWORD *)v38 = v45;
      *(_BYTE *)(v38 + 8) = v46;
      *(_QWORD *)(v38 + 16) = *(_QWORD *)(v39 + 16);
      *(_QWORD *)(v38 + 24) = *(_QWORD *)(v39 + 24);
      *(_QWORD *)(v38 + 32) = *(_QWORD *)(v39 + 32);
      *(_QWORD *)(v38 + 40) = *(_QWORD *)(v39 + 40);
      v47 = *(int *)(v40 + 28);
      v48 = (char *)(v38 + v47);
      v49 = (char *)(v39 + v47);
      v50 = sub_209F66A90();
      v51 = *(_QWORD *)(v50 - 8);
      v52 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v194 = v52;
      v195 = v50;
      v193 = v51;
      v196 = v40;
      if (v52(v49, 1, v50))
      {
        v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
        memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v48, v49, v50);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
      }
      v66 = (int *)type metadata accessor for URLLoadingParameters(0);
      v67 = v66[5];
      v68 = &v48[v67];
      v69 = &v49[v67];
      *(_QWORD *)v68 = *(_QWORD *)v69;
      *((_QWORD *)v68 + 1) = *((_QWORD *)v69 + 1);
      v70 = v66[6];
      v71 = &v48[v70];
      v72 = &v49[v70];
      *(_QWORD *)v71 = *(_QWORD *)v72;
      *((_QWORD *)v71 + 1) = *((_QWORD *)v72 + 1);
      v48[v66[7]] = v49[v66[7]];
      v73 = v66[8];
      v74 = &v48[v73];
      v75 = &v49[v73];
      *(_QWORD *)v74 = *(_QWORD *)v75;
      *((_QWORD *)v74 + 1) = *((_QWORD *)v75 + 1);
      v76 = v66[9];
      v77 = &v48[v76];
      v78 = &v49[v76];
      *(_QWORD *)v77 = *(_QWORD *)v78;
      *((_QWORD *)v77 + 1) = *((_QWORD *)v78 + 1);
      v48[v66[10]] = v49[v66[10]];
      *(_QWORD *)&v48[v66[11]] = *(_QWORD *)&v49[v66[11]];
      v79 = v66[12];
      v80 = &v48[v79];
      v81 = &v49[v79];
      *(_QWORD *)v80 = *(_QWORD *)v81;
      *((_QWORD *)v80 + 1) = *((_QWORD *)v81 + 1);
      v82 = v66[13];
      v83 = &v48[v82];
      v84 = &v49[v82];
      *(_QWORD *)v83 = *(_QWORD *)v84;
      *((_QWORD *)v83 + 1) = *((_QWORD *)v84 + 1);
      v85 = v66[14];
      v86 = &v48[v85];
      v87 = &v49[v85];
      *(_QWORD *)v86 = *(_QWORD *)v87;
      *((_QWORD *)v86 + 1) = *((_QWORD *)v87 + 1);
      v88 = (int *)type metadata accessor for URLLoader(0);
      v89 = v88[5];
      v90 = &v48[v89];
      v91 = &v49[v89];
      v92 = *(void **)v91;
      v93 = v91[8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_209EEC018(v92, v93);
      *(_QWORD *)v90 = v92;
      v90[8] = v93;
      v94 = v88[6];
      v95 = &v48[v94];
      v96 = &v49[v94];
      v97 = *(id *)v96;
      v98 = v96[8];
      sub_209EEC018(*(id *)v96, v98);
      *(_QWORD *)v95 = v97;
      v95[8] = v98;
      v99 = v88[7];
      v100 = &v48[v99];
      v101 = &v49[v99];
      v102 = *(_QWORD *)v101;
      v103 = *((_QWORD *)v101 + 1);
      LOBYTE(v95) = v101[16];
      sub_209EEC024(*(_QWORD *)v101, v103, (char)v95);
      *(_QWORD *)v100 = v102;
      *((_QWORD *)v100 + 1) = v103;
      v100[16] = (char)v95;
      v104 = v88[8];
      v105 = &v48[v104];
      v106 = &v49[v104];
      __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        if (v194(v106, 1, v195))
        {
          v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
          memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v107 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v193 + 16))(v105, v106, v195);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v193 + 56))(v105, 0, 1, v195);
        }
      }
      else
      {
        *(_QWORD *)v105 = *(_QWORD *)v106;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      v158 = v88[9];
      v159 = &v48[v158];
      v160 = &v49[v158];
      v161 = *(_QWORD *)v160;
      v162 = *((_QWORD *)v160 + 1);
      v163 = v160[16];
      sub_209EEC024(*(_QWORD *)v160, v162, v163);
      *(_QWORD *)v159 = v161;
      *((_QWORD *)v159 + 1) = v162;
      v159[16] = v163;
      v164 = v88[10];
      v165 = &v48[v164];
      v166 = &v49[v164];
      v167 = *(_QWORD *)v166;
      LOBYTE(v162) = v166[8];
      sub_209EEC030(*(_QWORD *)v166, v162);
      *(_QWORD *)v165 = v167;
      v165[8] = v162;
      v168 = v88[11];
      v169 = &v48[v168];
      v170 = &v49[v168];
      v171 = *(_QWORD *)v170;
      LOBYTE(v170) = v170[8];
      *(_QWORD *)v169 = v171;
      v169[8] = (char)v170;
      v172 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v198 + 56);
      swift_retain();
      v172(v38, 0, 1, v196);
      return a1;
    }
LABEL_14:
    v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB188);
    memcpy((void *)v38, (const void *)v39, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    return a1;
  }
  if (v44)
  {
    sub_209EEF010(v38, (uint64_t (*)(_QWORD))type metadata accessor for SubLabelElement);
    goto LABEL_14;
  }
  v55 = *(_QWORD *)v39;
  v56 = *(_BYTE *)(v39 + 8);
  sub_209EEC00C(*(_QWORD *)v39, v56);
  v57 = *(_QWORD *)v38;
  v58 = *(_BYTE *)(v38 + 8);
  *(_QWORD *)v38 = v55;
  *(_BYTE *)(v38 + 8) = v56;
  sub_209EEC68C(v57, v58);
  *(_QWORD *)(v38 + 16) = *(_QWORD *)(v39 + 16);
  *(_QWORD *)(v38 + 24) = *(_QWORD *)(v39 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v38 + 32) = *(_QWORD *)(v39 + 32);
  *(_QWORD *)(v38 + 40) = *(_QWORD *)(v39 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v59 = *(int *)(v40 + 28);
  v60 = (char *)(v38 + v59);
  v61 = (char *)(v39 + v59);
  v62 = sub_209F66A90();
  v63 = *(_QWORD *)(v62 - 8);
  v64 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48);
  LODWORD(v55) = v64(v60, 1, v62);
  v65 = v64(v61, 1, v62);
  v197 = v63;
  v199 = v64;
  if (!(_DWORD)v55)
  {
    if (!v65)
    {
      (*(void (**)(char *, char *, uint64_t))(v63 + 24))(v60, v61, v62);
      goto LABEL_26;
    }
    (*(void (**)(char *, uint64_t))(v63 + 8))(v60, v62);
    goto LABEL_25;
  }
  if (v65)
  {
LABEL_25:
    v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
    goto LABEL_26;
  }
  (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v60, v61, v62);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
LABEL_26:
  v109 = (int *)type metadata accessor for URLLoadingParameters(0);
  v110 = v109[5];
  v111 = &v60[v110];
  v112 = &v61[v110];
  *(_QWORD *)v111 = *(_QWORD *)v112;
  *((_QWORD *)v111 + 1) = *((_QWORD *)v112 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v113 = v109[6];
  v114 = &v60[v113];
  v115 = &v61[v113];
  *(_QWORD *)v114 = *(_QWORD *)v115;
  *((_QWORD *)v114 + 1) = *((_QWORD *)v115 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v60[v109[7]] = v61[v109[7]];
  v116 = v109[8];
  v117 = &v60[v116];
  v118 = &v61[v116];
  *(_QWORD *)v117 = *(_QWORD *)v118;
  *((_QWORD *)v117 + 1) = *((_QWORD *)v118 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v119 = v109[9];
  v120 = &v60[v119];
  v121 = &v61[v119];
  *(_QWORD *)v120 = *(_QWORD *)v121;
  *((_QWORD *)v120 + 1) = *((_QWORD *)v121 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v60[v109[10]] = v61[v109[10]];
  *(_QWORD *)&v60[v109[11]] = *(_QWORD *)&v61[v109[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v122 = v109[12];
  v123 = &v60[v122];
  v124 = &v61[v122];
  *(_QWORD *)v123 = *(_QWORD *)v124;
  *((_QWORD *)v123 + 1) = *((_QWORD *)v124 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v125 = v109[13];
  v126 = &v60[v125];
  v127 = &v61[v125];
  *(_QWORD *)v126 = *(_QWORD *)v127;
  *((_QWORD *)v126 + 1) = *((_QWORD *)v127 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v128 = v109[14];
  v129 = &v60[v128];
  v130 = &v61[v128];
  *(_QWORD *)v129 = *(_QWORD *)v130;
  *((_QWORD *)v129 + 1) = *((_QWORD *)v130 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v131 = (int *)type metadata accessor for URLLoader(0);
  v132 = v131[5];
  v133 = &v60[v132];
  v134 = &v61[v132];
  v135 = *(id *)v134;
  v136 = v134[8];
  sub_209EEC018(*(id *)v134, v136);
  v137 = *(void **)v133;
  v138 = v133[8];
  *(_QWORD *)v133 = v135;
  v133[8] = v136;
  sub_209EEC698(v137, v138);
  v139 = v131[6];
  v140 = &v60[v139];
  v141 = &v61[v139];
  v142 = *(id *)v141;
  v143 = v141[8];
  sub_209EEC018(*(id *)v141, v143);
  v144 = *(void **)v140;
  v145 = v140[8];
  *(_QWORD *)v140 = v142;
  v140[8] = v143;
  sub_209EEC698(v144, v145);
  v146 = v131[7];
  v147 = &v60[v146];
  v148 = &v61[v146];
  v149 = *(_QWORD *)v148;
  v150 = *((_QWORD *)v148 + 1);
  LOBYTE(v140) = v148[16];
  sub_209EEC024(*(_QWORD *)v148, v150, (char)v140);
  v151 = *(_QWORD *)v147;
  v152 = *((_QWORD *)v147 + 1);
  v153 = v147[16];
  *(_QWORD *)v147 = v149;
  *((_QWORD *)v147 + 1) = v150;
  v147[16] = (char)v140;
  sub_209EEC6A4(v151, v152, v153);
  if (a1 != a2)
  {
    v154 = v131[8];
    v155 = &v60[v154];
    v156 = &v61[v154];
    sub_209EE017C((uint64_t)&v60[v154], &qword_2545BB1F8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if (v199(v156, 1, v62))
      {
        v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
        memcpy(v155, v156, *(_QWORD *)(*(_QWORD *)(v157 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v197 + 16))(v155, v156, v62);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v197 + 56))(v155, 0, 1, v62);
      }
    }
    else
    {
      *(_QWORD *)v155 = *(_QWORD *)v156;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v173 = v131[9];
  v174 = &v60[v173];
  v175 = &v61[v173];
  v176 = *(_QWORD *)v175;
  v177 = *((_QWORD *)v175 + 1);
  v178 = v175[16];
  sub_209EEC024(*(_QWORD *)v175, v177, v178);
  v179 = *(_QWORD *)v174;
  v180 = *((_QWORD *)v174 + 1);
  v181 = v174[16];
  *(_QWORD *)v174 = v176;
  *((_QWORD *)v174 + 1) = v177;
  v174[16] = v178;
  sub_209EEC6A4(v179, v180, v181);
  v182 = v131[10];
  v183 = &v60[v182];
  v184 = &v61[v182];
  v185 = *(_QWORD *)v184;
  LOBYTE(v177) = v184[8];
  sub_209EEC030(*(_QWORD *)v184, v177);
  v186 = *(_QWORD *)v183;
  v187 = v183[8];
  *(_QWORD *)v183 = v185;
  v183[8] = v177;
  sub_209EEC6B0(v186, v187);
  v188 = v131[11];
  v189 = &v60[v188];
  v190 = &v61[v188];
  v191 = *(_QWORD *)v190;
  LOBYTE(v190) = v190[8];
  *(_QWORD *)v189 = v191;
  v189[8] = (char)v190;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for BannerRowElement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v47;
  unsigned int (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v5;
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  v7 = *(_OWORD *)(a2 + 80);
  v8 = *(int *)(a3 + 28);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  v11 = type metadata accessor for SubLabelElement();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB188);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    *v9 = *v10;
    *((_BYTE *)v9 + 8) = *((_BYTE *)v10 + 8);
    v14 = *((_OWORD *)v10 + 2);
    *((_OWORD *)v9 + 1) = *((_OWORD *)v10 + 1);
    *((_OWORD *)v9 + 2) = v14;
    v15 = *(int *)(v11 + 28);
    v16 = (char *)v9 + v15;
    v17 = (char *)v10 + v15;
    v18 = sub_209F66A90();
    v19 = *(_QWORD *)(v18 - 8);
    v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
    v49 = v12;
    v47 = v19;
    if (v48(v17, 1, v18))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    v21 = (int *)type metadata accessor for URLLoadingParameters(0);
    *(_OWORD *)&v16[v21[5]] = *(_OWORD *)&v17[v21[5]];
    *(_OWORD *)&v16[v21[6]] = *(_OWORD *)&v17[v21[6]];
    v16[v21[7]] = v17[v21[7]];
    *(_OWORD *)&v16[v21[8]] = *(_OWORD *)&v17[v21[8]];
    *(_OWORD *)&v16[v21[9]] = *(_OWORD *)&v17[v21[9]];
    v16[v21[10]] = v17[v21[10]];
    *(_QWORD *)&v16[v21[11]] = *(_QWORD *)&v17[v21[11]];
    *(_OWORD *)&v16[v21[12]] = *(_OWORD *)&v17[v21[12]];
    *(_OWORD *)&v16[v21[13]] = *(_OWORD *)&v17[v21[13]];
    *(_OWORD *)&v16[v21[14]] = *(_OWORD *)&v17[v21[14]];
    v22 = (int *)type metadata accessor for URLLoader(0);
    v23 = v22[5];
    v24 = &v16[v23];
    v25 = &v17[v23];
    *(_QWORD *)v24 = *(_QWORD *)v25;
    v24[8] = v25[8];
    v26 = v22[6];
    v27 = &v16[v26];
    v28 = &v17[v26];
    *(_QWORD *)v27 = *(_QWORD *)v28;
    v27[8] = v28[8];
    v29 = v22[7];
    v30 = &v16[v29];
    v31 = &v17[v29];
    v30[16] = v31[16];
    *(_OWORD *)v30 = *(_OWORD *)v31;
    v32 = v22[8];
    v33 = &v16[v32];
    v34 = &v17[v32];
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if (v48(v34, 1, v18))
      {
        v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v33, v34, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v33, 0, 1, v18);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    v37 = v22[9];
    v38 = &v16[v37];
    v39 = &v17[v37];
    *(_OWORD *)v38 = *(_OWORD *)v39;
    v38[16] = v39[16];
    v40 = v22[10];
    v41 = &v16[v40];
    v42 = &v17[v40];
    v41[8] = v42[8];
    *(_QWORD *)v41 = *(_QWORD *)v42;
    v43 = v22[11];
    v44 = &v16[v43];
    v45 = &v17[v43];
    *(_QWORD *)v44 = *(_QWORD *)v45;
    v44[8] = v45[8];
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v9, 0, 1, v11);
  }
  return a1;
}

uint64_t assignWithTake for BannerRowElement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t);
  int v19;
  int v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(char *, uint64_t, uint64_t);
  int v40;
  int v41;
  int *v42;
  int *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  int *v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  void *v100;
  char v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  void *v106;
  char v107;
  uint64_t v108;
  char *v109;
  char *v110;
  char v111;
  uint64_t v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  char *v130;
  char *v131;
  char v132;
  uint64_t v133;
  uint64_t v134;
  char v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  char v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v147;
  unsigned int (*v148)(char *, uint64_t, uint64_t);
  uint64_t v149;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 64))
  {
    if (*(_QWORD *)(a2 + 64))
    {
      v8 = *(_BYTE *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_BYTE *)(a1 + 48) = v8;
      sub_209EEB098();
      v9 = *(void **)(a1 + 56);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);

      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      swift_release();
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      swift_release();
      *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
      *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
      *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      swift_release();
      goto LABEL_6;
    }
    sub_209EEF04C(a1 + 32);
  }
  v10 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v10;
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  v11 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v11;
  v12 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v12;
LABEL_6:
  v13 = *(int *)(a3 + 28);
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = type metadata accessor for SubLabelElement();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  if (v19)
  {
    if (!v20)
    {
      *(_QWORD *)v14 = *(_QWORD *)v15;
      *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
      v21 = *(_OWORD *)(v15 + 32);
      *(_OWORD *)(v14 + 16) = *(_OWORD *)(v15 + 16);
      *(_OWORD *)(v14 + 32) = v21;
      v22 = *(int *)(v16 + 28);
      v23 = (char *)(v14 + v22);
      v24 = (char *)(v15 + v22);
      v25 = sub_209F66A90();
      v26 = *(_QWORD *)(v25 - 8);
      v148 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
      v149 = v25;
      v147 = v26;
      if (v148(v24, 1, v25))
      {
        v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
      }
      v42 = (int *)type metadata accessor for URLLoadingParameters(0);
      *(_OWORD *)&v23[v42[5]] = *(_OWORD *)&v24[v42[5]];
      *(_OWORD *)&v23[v42[6]] = *(_OWORD *)&v24[v42[6]];
      v23[v42[7]] = v24[v42[7]];
      *(_OWORD *)&v23[v42[8]] = *(_OWORD *)&v24[v42[8]];
      *(_OWORD *)&v23[v42[9]] = *(_OWORD *)&v24[v42[9]];
      v23[v42[10]] = v24[v42[10]];
      *(_QWORD *)&v23[v42[11]] = *(_QWORD *)&v24[v42[11]];
      *(_OWORD *)&v23[v42[12]] = *(_OWORD *)&v24[v42[12]];
      *(_OWORD *)&v23[v42[13]] = *(_OWORD *)&v24[v42[13]];
      *(_OWORD *)&v23[v42[14]] = *(_OWORD *)&v24[v42[14]];
      v43 = (int *)type metadata accessor for URLLoader(0);
      v44 = v43[5];
      v45 = &v23[v44];
      v46 = &v24[v44];
      *(_QWORD *)v45 = *(_QWORD *)v46;
      v45[8] = v46[8];
      v47 = v43[6];
      v48 = &v23[v47];
      v49 = &v24[v47];
      *(_QWORD *)v48 = *(_QWORD *)v49;
      v48[8] = v49[8];
      v50 = v43[7];
      v51 = &v23[v50];
      v52 = &v24[v50];
      v51[16] = v52[16];
      *(_OWORD *)v51 = *(_OWORD *)v52;
      v53 = v43[8];
      v54 = &v23[v53];
      v55 = &v24[v53];
      v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        if (v148(v55, 1, v149))
        {
          v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
          memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v147 + 32))(v54, v55, v149);
          (*(void (**)(void))(v147 + 56))();
        }
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
      }
      v120 = v43[9];
      v121 = &v23[v120];
      v122 = &v24[v120];
      *(_OWORD *)v121 = *(_OWORD *)v122;
      v121[16] = v122[16];
      v123 = v43[10];
      v124 = &v23[v123];
      v125 = &v24[v123];
      v124[8] = v125[8];
      *(_QWORD *)v124 = *(_QWORD *)v125;
      v126 = v43[11];
      v127 = &v23[v126];
      v128 = &v24[v126];
      *(_QWORD *)v127 = *(_QWORD *)v128;
      v127[8] = v128[8];
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      return a1;
    }
LABEL_12:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB188);
    memcpy((void *)v14, (const void *)v15, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    return a1;
  }
  if (v20)
  {
    sub_209EEF010(v14, (uint64_t (*)(_QWORD))type metadata accessor for SubLabelElement);
    goto LABEL_12;
  }
  v29 = *(_BYTE *)(v15 + 8);
  v30 = *(_QWORD *)v14;
  v31 = *(_BYTE *)(v14 + 8);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = v29;
  sub_209EEC68C(v30, v31);
  v32 = *(_QWORD *)(v15 + 24);
  *(_QWORD *)(v14 + 16) = *(_QWORD *)(v15 + 16);
  *(_QWORD *)(v14 + 24) = v32;
  swift_bridgeObjectRelease();
  v33 = *(_QWORD *)(v15 + 40);
  *(_QWORD *)(v14 + 32) = *(_QWORD *)(v15 + 32);
  *(_QWORD *)(v14 + 40) = v33;
  swift_bridgeObjectRelease();
  v34 = *(int *)(v16 + 28);
  v35 = (char *)(v14 + v34);
  v36 = (char *)(v15 + v34);
  v37 = sub_209F66A90();
  v38 = *(_QWORD *)(v37 - 8);
  v39 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48);
  v40 = v39(v35, 1, v37);
  v41 = v39(v36, 1, v37);
  if (!v40)
  {
    if (!v41)
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 40))(v35, v36, v37);
      goto LABEL_24;
    }
    (*(void (**)(char *, uint64_t))(v38 + 8))(v35, v37);
    goto LABEL_23;
  }
  if (v41)
  {
LABEL_23:
    v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    goto LABEL_24;
  }
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v35, v36, v37);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
LABEL_24:
  v59 = (int *)type metadata accessor for URLLoadingParameters(0);
  v60 = v59[5];
  v61 = &v35[v60];
  v62 = &v36[v60];
  v64 = *(_QWORD *)v62;
  v63 = *((_QWORD *)v62 + 1);
  *(_QWORD *)v61 = v64;
  *((_QWORD *)v61 + 1) = v63;
  swift_bridgeObjectRelease();
  v65 = v59[6];
  v66 = &v35[v65];
  v67 = &v36[v65];
  v69 = *(_QWORD *)v67;
  v68 = *((_QWORD *)v67 + 1);
  *(_QWORD *)v66 = v69;
  *((_QWORD *)v66 + 1) = v68;
  swift_bridgeObjectRelease();
  v35[v59[7]] = v36[v59[7]];
  v70 = v59[8];
  v71 = &v35[v70];
  v72 = &v36[v70];
  v74 = *(_QWORD *)v72;
  v73 = *((_QWORD *)v72 + 1);
  *(_QWORD *)v71 = v74;
  *((_QWORD *)v71 + 1) = v73;
  swift_bridgeObjectRelease();
  v75 = v59[9];
  v76 = &v35[v75];
  v77 = &v36[v75];
  v79 = *(_QWORD *)v77;
  v78 = *((_QWORD *)v77 + 1);
  *(_QWORD *)v76 = v79;
  *((_QWORD *)v76 + 1) = v78;
  swift_bridgeObjectRelease();
  v35[v59[10]] = v36[v59[10]];
  *(_QWORD *)&v35[v59[11]] = *(_QWORD *)&v36[v59[11]];
  swift_bridgeObjectRelease();
  v80 = v59[12];
  v81 = &v35[v80];
  v82 = &v36[v80];
  v84 = *(_QWORD *)v82;
  v83 = *((_QWORD *)v82 + 1);
  *(_QWORD *)v81 = v84;
  *((_QWORD *)v81 + 1) = v83;
  swift_bridgeObjectRelease();
  v85 = v59[13];
  v86 = &v35[v85];
  v87 = &v36[v85];
  v89 = *(_QWORD *)v87;
  v88 = *((_QWORD *)v87 + 1);
  *(_QWORD *)v86 = v89;
  *((_QWORD *)v86 + 1) = v88;
  swift_bridgeObjectRelease();
  v90 = v59[14];
  v91 = &v35[v90];
  v92 = &v36[v90];
  v94 = *(_QWORD *)v92;
  v93 = *((_QWORD *)v92 + 1);
  *(_QWORD *)v91 = v94;
  *((_QWORD *)v91 + 1) = v93;
  swift_bridgeObjectRelease();
  v95 = (int *)type metadata accessor for URLLoader(0);
  v96 = v95[5];
  v97 = &v35[v96];
  v98 = &v36[v96];
  v99 = *(_QWORD *)v98;
  LOBYTE(v98) = v98[8];
  v100 = *(void **)v97;
  v101 = v97[8];
  *(_QWORD *)v97 = v99;
  v97[8] = (char)v98;
  sub_209EEC698(v100, v101);
  v102 = v95[6];
  v103 = &v35[v102];
  v104 = &v36[v102];
  v105 = *(_QWORD *)v104;
  LOBYTE(v104) = v104[8];
  v106 = *(void **)v103;
  v107 = v103[8];
  *(_QWORD *)v103 = v105;
  v103[8] = (char)v104;
  sub_209EEC698(v106, v107);
  v108 = v95[7];
  v109 = &v35[v108];
  v110 = &v36[v108];
  v111 = v110[16];
  v112 = *(_QWORD *)v109;
  v113 = *((_QWORD *)v109 + 1);
  v114 = v109[16];
  *(_OWORD *)v109 = *(_OWORD *)v110;
  v109[16] = v111;
  sub_209EEC6A4(v112, v113, v114);
  if (a1 != a2)
  {
    v115 = v95[8];
    v116 = &v35[v115];
    v117 = &v36[v115];
    sub_209EE017C((uint64_t)&v35[v115], &qword_2545BB1F8);
    v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if (v39(v117, 1, v37))
      {
        v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
        memcpy(v116, v117, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v116, v117, v37);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v116, 0, 1, v37);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v116, v117, *(_QWORD *)(*(_QWORD *)(v118 - 8) + 64));
    }
  }
  v129 = v95[9];
  v130 = &v35[v129];
  v131 = &v36[v129];
  v132 = v131[16];
  v133 = *(_QWORD *)v130;
  v134 = *((_QWORD *)v130 + 1);
  v135 = v130[16];
  *(_OWORD *)v130 = *(_OWORD *)v131;
  v130[16] = v132;
  sub_209EEC6A4(v133, v134, v135);
  v136 = v95[10];
  v137 = &v35[v136];
  v138 = &v36[v136];
  v139 = *(_QWORD *)v138;
  LOBYTE(v138) = v138[8];
  v140 = *(_QWORD *)v137;
  v141 = v137[8];
  *(_QWORD *)v137 = v139;
  v137[8] = (char)v138;
  sub_209EEC6B0(v140, v141);
  v142 = v95[11];
  v143 = &v35[v142];
  v144 = &v36[v142];
  v145 = *(_QWORD *)v144;
  LOBYTE(v144) = v144[8];
  *(_QWORD *)v143 = v145;
  v143[8] = (char)v144;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for BannerRowElement()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_209F2CC0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB188);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for BannerRowElement()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_209F2CC98(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB188);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

void sub_209F2CD10()
{
  unint64_t v0;

  sub_209F2CD90();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_209F2CD90()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2545BB208)
  {
    type metadata accessor for SubLabelElement();
    v0 = sub_209F675DC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2545BB208);
  }
}

uint64_t getEnumTagSinglePayload for BannerRowElement.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for BannerRowElement.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_209F2CEC0 + 4 * byte_209F79665[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_209F2CEF4 + 4 * byte_209F79660[v4]))();
}

uint64_t sub_209F2CEF4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_209F2CEFC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x209F2CF04);
  return result;
}

uint64_t sub_209F2CF10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x209F2CF18);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_209F2CF1C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_209F2CF24(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BannerRowElement.CodingKeys()
{
  return &type metadata for BannerRowElement.CodingKeys;
}

uint64_t sub_209F2CF40()
{
  return sub_209F2D018(&qword_2545BBF50, &qword_2545BBF00, (uint64_t (*)(void))sub_209F2CF74, MEMORY[0x24BDEDBC0]);
}

unint64_t sub_209F2CF74()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2545BBF58;
  if (!qword_2545BBF58)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BBEF8);
    v2[0] = sub_209F2D018(&qword_2545BBF60, &qword_2545BBEF0, sub_209F2D080, MEMORY[0x24BDECC58]);
    v2[1] = sub_209EE83E8(&qword_2545BBF80, &qword_2545BBF88, MEMORY[0x24BDEFB40]);
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2545BBF58);
  }
  return result;
}

uint64_t sub_209F2D018(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = a3();
    v9[1] = a4;
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BDED300], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_209F2D080()
{
  return sub_209F2D018(&qword_2545BBF68, &qword_2545BBEE8, (uint64_t (*)(void))sub_209F2D0A4, MEMORY[0x24BDECC58]);
}

unint64_t sub_209F2D0A4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2545BBF70;
  if (!qword_2545BBF70)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BBEE0);
    v2[0] = sub_209EE83E8(&qword_2545BBF78, &qword_2545BBED8, MEMORY[0x24BDF46F8]);
    v2[1] = MEMORY[0x24BDECC58];
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2545BBF70);
  }
  return result;
}

unint64_t sub_209F2D128()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2545BBFB8;
  if (!qword_2545BBFB8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BBFB0);
    v2[0] = sub_209F2D1AC();
    v2[1] = sub_209EE83E8(&qword_2545BBFE0, &qword_2545BBFE8, MEMORY[0x24BDF1020]);
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2545BBFB8);
  }
  return result;
}

unint64_t sub_209F2D1AC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_2545BBFC0;
  if (!qword_2545BBFC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BBFC8);
    v2 = sub_209EE83E8(&qword_2545BBFD0, &qword_2545BBFD8, MEMORY[0x24BDF1020]);
    v3[0] = MEMORY[0x24BDF1F78];
    v3[1] = v2;
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BDED300], v1, v3);
    atomic_store(result, (unint64_t *)&qword_2545BBFC0);
  }
  return result;
}

void __swiftcall RUIDecodingUserInfo.init()(RUIDecodingUserInfo *__return_ptr retstr)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

id RUIDecodingUserInfo.init()()
{
  uint64_t v0;
  objc_super v2;

  *(_QWORD *)(v0 + OBJC_IVAR___RUIDecodingUserInfo_values) = MEMORY[0x24BEE4B00];
  v2.super_class = (Class)RUIDecodingUserInfo;
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t RUIDecodingUserInfo.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  _OWORD v23[2];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = sub_209F675DC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)v23 - v13;
  v15 = (uint64_t *)(v4 + OBJC_IVAR___RUIDecodingUserInfo_values);
  swift_beginAccess();
  v16 = *v15;
  if (*(_QWORD *)(v16 + 16) && (v17 = sub_209F2DD94(a1), (v18 & 1) != 0))
    sub_209EE3288(*(_QWORD *)(v16 + 56) + 32 * v17, (uint64_t)v23);
  else
    memset(v23, 0, sizeof(v23));
  swift_endAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BAF78);
  v19 = swift_dynamicCast();
  v20 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
  if ((v19 & 1) != 0)
  {
    v21(v14, 0, 1, AssociatedTypeWitness);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v20 + 32))(a4, v14, AssociatedTypeWitness);
  }
  else
  {
    v21(v14, 1, 1, AssociatedTypeWitness);
    (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  }
}

uint64_t RUIDecodingUserInfo.subscript.setter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;

  sub_209F2E5F0(a1, a2);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
}

uint64_t sub_209F2D4EC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v7;
  char v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD v14[2];

  v3 = v2;
  if (*(_QWORD *)(a1 + 24))
  {
    sub_209EE3510((_OWORD *)a1, v14);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v12 = *v2;
    *v2 = 0x8000000000000000;
    sub_209F2E2B4(v14, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v12;
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_209EE58AC(a1);
    v7 = sub_209F2DD94(a2);
    if ((v8 & 1) != 0)
    {
      v9 = v7;
      v10 = swift_isUniquelyReferenced_nonNull_native();
      v11 = *v2;
      v13 = *v3;
      *v3 = 0x8000000000000000;
      if ((v10 & 1) == 0)
      {
        sub_209F2E430();
        v11 = v13;
      }
      sub_209EE3510((_OWORD *)(*(_QWORD *)(v11 + 56) + 32 * v9), v14);
      sub_209F2E120(v9, v11);
      *v3 = v11;
      swift_bridgeObjectRelease();
    }
    else
    {
      memset(v14, 0, sizeof(v14));
    }
    return sub_209EE58AC((uint64_t)v14);
  }
}

void (*RUIDecodingUserInfo.subscript.modify(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t **a1, char a2)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  size_t v12;
  void *v13;

  v9 = malloc(0x40uLL);
  *a1 = v9;
  v9[2] = a4;
  v9[3] = v4;
  *v9 = a2;
  v9[1] = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9[4] = AssociatedTypeWitness;
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9[5] = v11;
  v12 = *(_QWORD *)(v11 + 64);
  v9[6] = malloc(v12);
  v13 = malloc(v12);
  v9[7] = v13;
  RUIDecodingUserInfo.subscript.getter(a2, a3, a4, (uint64_t)v13);
  return sub_209F2D6A4;
}

void sub_209F2D6A4(uint64_t **a1, char a2)
{
  uint64_t *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, uint64_t);

  v2 = *a1;
  v3 = (void *)(*a1)[6];
  v4 = (void *)(*a1)[7];
  v5 = (*a1)[4];
  v6 = (*a1)[5];
  v7 = **a1;
  if ((a2 & 1) != 0)
  {
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[6], v4, v5);
    sub_209F2E5F0((uint64_t)v3, v7);
    v8 = *(void (**)(void *, uint64_t))(v6 + 8);
    v8(v3, v5);
  }
  else
  {
    sub_209F2E5F0((*a1)[7], v7);
    v8 = *(void (**)(void *, uint64_t))(v6 + 8);
  }
  v8(v4, v5);
  free(v4);
  free(v3);
  free(v2);
}

id sub_209F2D768()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)RUIDecodingUserInfo), sel_init);
  qword_2545C2758 = (uint64_t)result;
  return result;
}

id sub_209F2D798@<X0>(_QWORD *a1@<X8>)
{
  void *v2;

  if (qword_2545C2750 != -1)
    swift_once();
  v2 = (void *)qword_2545C2758;
  *a1 = qword_2545C2758;
  return v2;
}

uint64_t sub_209F2D7E8()
{
  sub_209F2E9CC();
  return sub_209F66DCC();
}

uint64_t EnvironmentValues.ruiDecodingUserInfo.getter()
{
  uint64_t v1;

  sub_209F2E698();
  sub_209F66EA4();
  return v1;
}

uint64_t sub_209F2D870@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_209F2E698();
  result = sub_209F66EA4();
  *a1 = v3;
  return result;
}

uint64_t sub_209F2D8BC(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  sub_209F2E698();
  v2 = v1;
  return sub_209F66EB0();
}

uint64_t EnvironmentValues.ruiDecodingUserInfo.setter()
{
  sub_209F2E698();
  return sub_209F66EB0();
}

void (*EnvironmentValues.ruiDecodingUserInfo.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 16) = v1;
  *(_QWORD *)(a1 + 24) = sub_209F2E698();
  sub_209F66EA4();
  return sub_209F2D998;
}

void sub_209F2D998(uint64_t a1, char a2)
{
  id v2;
  id v4;

  v2 = *(id *)a1;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)a1;
  if ((a2 & 1) != 0)
  {
    v4 = v2;
    sub_209F66EB0();

  }
  else
  {
    sub_209F66EB0();
  }
}

uint64_t sub_209F2DA18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t *v9;

  v6 = *v2;
  v5 = v2[1];
  KeyPath = swift_getKeyPath();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC008);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a2, a1, v8);
  v9 = (uint64_t *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545BC010) + 36));
  *v9 = KeyPath;
  v9[1] = v6;
  v9[2] = v5;
  return swift_retain();
}

uint64_t View.ruiDecodingUserInfo<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  char *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[2];

  v22 = a7;
  v21 = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness, v14);
  v16 = (char *)&v20 - v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v20 - v15, a2, AssociatedTypeWitness);
  v17 = (*(unsigned __int8 *)(v13 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v18 = (char *)swift_allocObject();
  *((_QWORD *)v18 + 2) = a3;
  *((_QWORD *)v18 + 3) = a4;
  *((_QWORD *)v18 + 4) = a5;
  *((_QWORD *)v18 + 5) = a6;
  *((_QWORD *)v18 + 6) = v21;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v18[v17], v16, AssociatedTypeWitness);
  v23[0] = sub_209F2E750;
  v23[1] = v18;
  MEMORY[0x20BD1C4F0](v23, a3, &type metadata for TransformDecodingUserInfoModifier, a5);
  return swift_release();
}

uint64_t View.ruiDecodingUserInfo<A>(_:_:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  char *v12;
  _QWORD v14[2];

  v7 = *(_QWORD *)(*MEMORY[0x24BEE35B8] + *a1 + 8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v10 = (char *)v14 - v9;
  (*(void (**)(char *))(v8 + 16))((char *)v14 - v9);
  v11 = (*(unsigned __int8 *)(v8 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v12 = (char *)swift_allocObject();
  *((_QWORD *)v12 + 2) = a3;
  *((_QWORD *)v12 + 3) = v7;
  *((_QWORD *)v12 + 4) = a4;
  *((_QWORD *)v12 + 5) = a1;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v12[v11], v10, v7);
  v14[0] = sub_209F2E82C;
  v14[1] = v12;
  swift_retain();
  MEMORY[0x20BD1C4F0](v14, a3, &type metadata for TransformDecodingUserInfoModifier, a4);
  return swift_release();
}

void sub_209F2DCF0(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  _QWORD v7[2];

  v2 = *(void **)MEMORY[0x24BDAC7A8](a1, a2);
  (*(void (**)(char *, uint64_t))(v3 + 16))((char *)v7 - v4, v5);
  v7[1] = v2;
  v6 = v2;
  swift_setAtReferenceWritableKeyPath();

}

unint64_t sub_209F2DD94(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_209F67B04();
  return sub_209F2DDC4(a1, v2);
}

unint64_t sub_209F2DDC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

uint64_t sub_209F2DE60(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  _OWORD *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  _OWORD v32[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC018);
  result = sub_209F67804();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v31 = v3;
    v8 = 0;
    v9 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v17 = v16 | (v8 << 6);
      }
      else
      {
        v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        if (v18 >= v13)
          goto LABEL_34;
        v19 = v9[v18];
        ++v8;
        if (!v19)
        {
          v8 = v18 + 1;
          if (v18 + 1 >= v13)
            goto LABEL_34;
          v19 = v9[v8];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v13)
            {
LABEL_34:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v31;
                goto LABEL_41;
              }
              v30 = 1 << *(_BYTE *)(v5 + 32);
              if (v30 >= 64)
                bzero((void *)(v5 + 64), ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v9 = -1 << v30;
              v3 = v31;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v19 = v9[v20];
            if (!v19)
            {
              while (1)
              {
                v8 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_43;
                if (v8 >= v13)
                  goto LABEL_34;
                v19 = v9[v8];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v8 = v20;
          }
        }
LABEL_21:
        v12 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      v21 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v17);
      v22 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
        sub_209EE3510(v22, v32);
      else
        sub_209EE3288((uint64_t)v22, (uint64_t)v32);
      result = sub_209F67B04();
      v23 = -1 << *(_BYTE *)(v7 + 32);
      v24 = result & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v14 + 8 * v25);
        }
        while (v29 == -1);
        v15 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v15) = v21;
      result = (uint64_t)sub_209EE3510(v32, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v15));
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_41:
  *v3 = v7;
  return result;
}

unint64_t sub_209F2E120(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  _QWORD *v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_209F67678();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(a2 + 48);
        v11 = (_QWORD *)(v10 + 8 * v6);
        result = sub_209F67B04();
        v12 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 >= v8 && v3 >= (uint64_t)v12)
          {
LABEL_16:
            v15 = (_QWORD *)(v10 + 8 * v3);
            if (v3 != v6 || v15 >= v11 + 1)
              *v15 = *v11;
            v16 = *(_QWORD *)(a2 + 56);
            v17 = (_OWORD *)(v16 + 32 * v3);
            v18 = (_OWORD *)(v16 + 32 * v6);
            if (v3 != v6 || (v3 = v6, v17 >= v18 + 2))
            {
              v9 = v18[1];
              *v17 = *v18;
              v17[1] = v9;
              v3 = v6;
            }
          }
        }
        else if (v12 >= v8 || v3 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

_OWORD *sub_209F2E2B4(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _OWORD *v17;
  _OWORD *result;
  unint64_t v19;
  char v20;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_209F2DD94(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = (_OWORD *)(v16[7] + 32 * v10);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
        return sub_209EE3510(a1, v17);
      }
      return sub_209F2E3CC(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_209F2E430();
      goto LABEL_7;
    }
    sub_209F2DE60(v13, a3 & 1);
    v19 = sub_209F2DD94(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_209F2E3CC(v10, a2, a1, v16);
    }
  }
  result = (_OWORD *)sub_209F67AA4();
  __break(1u);
  return result;
}

_OWORD *sub_209F2E3CC(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  _OWORD *result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_209EE3510(a3, (_OWORD *)(a4[7] + 32 * a1));
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

void *sub_209F2E430()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  _OWORD v22[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC018);
  v2 = *v0;
  v3 = sub_209F677F8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 32 * v15;
    sub_209EE3288(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = sub_209EE3510(v22, (_OWORD *)(*(_QWORD *)(v4 + 56) + v18));
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_209F2E5F0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v7[4];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7[3] = AssociatedTypeWitness;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v7);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(boxed_opaque_existential_0, a1, AssociatedTypeWitness);
  swift_beginAccess();
  sub_209F2D4EC((uint64_t)v7, a2);
  return swift_endAccess();
}

unint64_t sub_209F2E698()
{
  unint64_t result;

  result = qword_2545C2760;
  if (!qword_2545C2760)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F79A04, &type metadata for RUIDecodingUserInfoEnvironmentKey);
    atomic_store(result, (unint64_t *)&qword_2545C2760);
  }
  return result;
}

uint64_t sub_209F2E6DC()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80)), AssociatedTypeWitness);
  return swift_deallocObject();
}

uint64_t sub_209F2E750()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 80);
  return sub_209F2E5F0(v0 + ((v1 + 56) & ~v1), *(_QWORD *)(v0 + 48));
}

uint64_t sub_209F2E7C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_209F2E82C(uint64_t a1)
{
  uint64_t v1;

  sub_209F2DCF0(a1, *(_QWORD *)(v1 + 40));
}

uint64_t dispatch thunk of static DecodingUserInfoKey.defaultValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

unint64_t type metadata accessor for RUIDecodingUserInfo()
{
  unint64_t result;

  result = qword_2545C2768;
  if (!qword_2545C2768)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2545C2768);
  }
  return result;
}

unint64_t sub_209F2E894()
{
  unint64_t result;

  result = qword_2545C2770[0];
  if (!qword_2545C2770[0])
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F799B4, &type metadata for TransformDecodingUserInfoModifier);
    atomic_store(result, qword_2545C2770);
  }
  return result;
}

uint64_t get_witness_table_7SwiftUI4ViewRz06RemoteB019DecodingUserInfoKeyRd__r__lAA15ModifiedContentVyxAC09TransformefG8Modifier33_366F36DC745A92ADCD36EF860015B3E9LLVGAaBHPxAaBHD1__AiA0cL0HPyHCHCTm(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 16);
  v2 = sub_209F66E08();
  v4[0] = v1;
  v4[1] = sub_209F2E894();
  return MEMORY[0x20BD1DB1C](MEMORY[0x24BDED300], v2, v4);
}

_QWORD *assignWithCopy for TransformDecodingUserInfoModifier(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for TransformDecodingUserInfoModifier(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for TransformDecodingUserInfoModifier()
{
  return &type metadata for TransformDecodingUserInfoModifier;
}

ValueMetadata *type metadata accessor for RUIDecodingUserInfoEnvironmentKey()
{
  return &type metadata for RUIDecodingUserInfoEnvironmentKey;
}

uint64_t sub_209F2E9BC()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_209F2E9CC()
{
  unint64_t result;
  unint64_t v1;

  result = qword_2545BC000;
  if (!qword_2545BC000)
  {
    v1 = type metadata accessor for RUIDecodingUserInfo();
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BEE5BE0], v1);
    atomic_store(result, (unint64_t *)&qword_2545BC000);
  }
  return result;
}

unint64_t sub_209F2EA14()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2545BC020;
  if (!qword_2545BC020)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BC010);
    v2[0] = sub_209EE83E8(&qword_2545BC028, &qword_2545BC008, MEMORY[0x24BDEFB70]);
    v2[1] = sub_209EE83E8(&qword_2545BC030, &qword_2545BC038, MEMORY[0x24BDF1250]);
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2545BC020);
  }
  return result;
}

uint64_t URLLoadingMode.init(rawValue:)@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = result != 1;
  return result;
}

uint64_t URLLoadingMode.rawValue.getter()
{
  return 1;
}

uint64_t sub_209F2EAC8(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000011;
  else
    v3 = 0x6574656C706D6F63;
  if (v2)
    v4 = 0xEB000000006C7275;
  else
    v4 = 0x8000000209F72C90;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000011;
  else
    v5 = 0x6574656C706D6F63;
  if ((a2 & 1) != 0)
    v6 = 0x8000000209F72C90;
  else
    v6 = 0xEB000000006C7275;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_209F679A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_209F2EB78()
{
  sub_209F67B10();
  sub_209F67B1C();
  return sub_209F67B28();
}

uint64_t sub_209F2EBB8()
{
  return sub_209F67B1C();
}

uint64_t sub_209F2EBDC()
{
  sub_209F67B10();
  sub_209F67B1C();
  return sub_209F67B28();
}

_QWORD *sub_209F2EC18@<X0>(_QWORD *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 1;
  return result;
}

void sub_209F2EC2C(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_209F2EC38()
{
  sub_209F396D4();
  return sub_209F673E4();
}

uint64_t sub_209F2EC94()
{
  sub_209F396D4();
  return sub_209F673CC();
}

uint64_t sub_209F2ECE0()
{
  sub_209F361A0();
  return sub_209F66DCC();
}

uint64_t EnvironmentValues.ruiURLLoadingMode.getter()
{
  sub_209F2ED64();
  return sub_209F66EA4();
}

unint64_t sub_209F2ED64()
{
  unint64_t result;

  result = qword_2545C2890;
  if (!qword_2545C2890)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7A1B4, &type metadata for URLLoadingModeEnvironmentKey);
    atomic_store(result, (unint64_t *)&qword_2545C2890);
  }
  return result;
}

uint64_t EnvironmentValues.ruiURLLoadingMode.setter()
{
  sub_209F2ED64();
  return sub_209F66EB0();
}

uint64_t (*EnvironmentValues.ruiURLLoadingMode.modify(_QWORD *a1))()
{
  uint64_t v1;

  *a1 = v1;
  a1[1] = sub_209F2ED64();
  sub_209F66EA4();
  return sub_209F2EE10;
}

uint64_t sub_209F2EE10()
{
  return sub_209F66EB0();
}

uint64_t sub_209F2EE3C()
{
  uint64_t v0;

  swift_getKeyPath();
  (*(void (**)(void))(*(_QWORD *)v0 + 152))();
  swift_release();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_209F2EE9C@<X0>(_QWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = *a1;
  swift_getKeyPath();
  (*(void (**)(void))(*v3 + 152))();
  swift_release();
  swift_beginAccess();
  *a2 = v3[2];
  return swift_bridgeObjectRetain();
}

uint64_t sub_209F2EF10(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  void (*v5)(uint64_t, uint64_t (*)(), _QWORD *, uint64_t);
  _QWORD v7[6];

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath();
  v7[2] = v3;
  v7[3] = v2;
  v5 = *(void (**)(uint64_t, uint64_t (*)(), _QWORD *, uint64_t))(*(_QWORD *)v3 + 160);
  swift_bridgeObjectRetain();
  v5(KeyPath, sub_209F39674, v7, MEMORY[0x24BEE4AE0] + 8);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_209F2EFA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v8;

  v5 = (_QWORD *)swift_allocObject();
  v5[2] = 0;
  v5[3] = 0;
  v5[4] = v2;
  v5[5] = a1;
  v5[6] = a2;
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = v2;
  v6[5] = a1;
  v6[6] = a2;
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  sub_209F671EC();
  return v8;
}

uint64_t sub_209F2F06C@<X0>(_BYTE *a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = (_QWORD *)v1[4];
  v4 = v1[5];
  v5 = v1[6];
  swift_getKeyPath();
  (*(void (**)(void))(*v3 + 152))();
  swift_release();
  swift_beginAccess();
  v6 = v3[2];
  swift_bridgeObjectRetain();
  LOBYTE(v3) = sub_209F2F114(v4, v5, v6);
  result = swift_bridgeObjectRelease();
  *a1 = v3 & 1;
  return result;
}

uint64_t sub_209F2F114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_209F67B10();
    sub_209F6733C();
    v6 = sub_209F67B28();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_209F679A8() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_209F679A8() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t objectdestroyTm_2()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_209F2F280(_BYTE *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  void (*v6)(uint64_t);
  uint64_t v8;
  uint64_t v9;

  v2 = v1[4];
  v3 = v1[5];
  v4 = v1[6];
  if (*a1 == 1)
  {
    KeyPath = swift_getKeyPath();
    v6 = *(void (**)(uint64_t))(*(_QWORD *)v2 + 152);
    swift_bridgeObjectRetain();
    v6(KeyPath);
    swift_release();
    v9 = v2;
    swift_getKeyPath();
    sub_209EE4ABC((unint64_t *)&qword_2545BB988, type metadata accessor for ActivityIndicatorManager, (uint64_t)&protocol conformance descriptor for ActivityIndicatorManager);
    sub_209F66B38();
    swift_release();
    swift_beginAccess();
    sub_209F34360(&v8, v3, v4);
  }
  else
  {
    swift_getKeyPath();
    (*(void (**)(void))(*(_QWORD *)v2 + 152))();
    swift_release();
    v9 = v2;
    swift_getKeyPath();
    sub_209EE4ABC((unint64_t *)&qword_2545BB988, type metadata accessor for ActivityIndicatorManager, (uint64_t)&protocol conformance descriptor for ActivityIndicatorManager);
    sub_209F66B38();
    swift_release();
    swift_beginAccess();
    sub_209F3450C(v3, v4);
  }
  swift_endAccess();
  swift_bridgeObjectRelease();
  v9 = v2;
  swift_getKeyPath();
  sub_209F66B2C();
  return swift_release();
}

uint64_t sub_209F2F468()
{
  sub_209EE4ABC((unint64_t *)&qword_2545BB988, type metadata accessor for ActivityIndicatorManager, (uint64_t)&protocol conformance descriptor for ActivityIndicatorManager);
  return sub_209F66B20();
}

uint64_t type metadata accessor for ActivityIndicatorManager(uint64_t a1)
{
  return sub_209EF257C(a1, (uint64_t *)&unk_2545C3230);
}

uint64_t sub_209F2F4E8()
{
  sub_209EE4ABC((unint64_t *)&qword_2545BB988, type metadata accessor for ActivityIndicatorManager, (uint64_t)&protocol conformance descriptor for ActivityIndicatorManager);
  return sub_209F66B14();
}

uint64_t ActivityIndicatorManager.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC8RemoteUI24ActivityIndicatorManager___observationRegistrar;
  v2 = sub_209F66B50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t ActivityIndicatorManager.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC8RemoteUI24ActivityIndicatorManager___observationRegistrar;
  v2 = sub_209F66B50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_209F2F630()
{
  uint64_t v0;

  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = MEMORY[0x24BEE4B08];
  sub_209F66B44();
  return v0;
}

uint64_t URLLoadingParameters.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_209EDF8C0(v1, a1);
}

uint64_t URLLoadingParameters.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for URLLoadingParameters(0) + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for URLLoadingParameters(uint64_t a1)
{
  return sub_209EF257C(a1, qword_2545C3240);
}

uint64_t URLLoadingParameters.httpMethod.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for URLLoadingParameters(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t URLLoadingParameters.httpMethod.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for URLLoadingParameters(0) + 24));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*URLLoadingParameters.httpMethod.modify())()
{
  type metadata accessor for URLLoadingParameters(0);
  return nullsub_1;
}

uint64_t URLLoadingParameters.openInSafari.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for URLLoadingParameters(0) + 28));
}

uint64_t URLLoadingParameters.action.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for URLLoadingParameters(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t URLLoadingParameters.activationFunctionName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for URLLoadingParameters(0) + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t URLLoadingParameters.urlLoadingMode.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for URLLoadingParameters(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t URLLoadingParameters.urlLoadingMode.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for URLLoadingParameters(0);
  *(_BYTE *)(v1 + *(int *)(result + 40)) = v2;
  return result;
}

uint64_t (*URLLoadingParameters.urlLoadingMode.modify())()
{
  type metadata accessor for URLLoadingParameters(0);
  return nullsub_1;
}

uint64_t URLLoadingParameters.rawAttributes.getter()
{
  type metadata accessor for URLLoadingParameters(0);
  return swift_bridgeObjectRetain();
}

uint64_t URLLoadingParameters.rawAttributes.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for URLLoadingParameters(0) + 44);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*URLLoadingParameters.rawAttributes.modify())()
{
  type metadata accessor for URLLoadingParameters(0);
  return nullsub_1;
}

uint64_t URLLoadingParameters.validationFunctionName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for URLLoadingParameters(0) + 48));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t URLLoadingParameters.id.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for URLLoadingParameters(0) + 52));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t URLLoadingParameters.activityIndicatorAnchorId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for URLLoadingParameters(0) + 56));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_209F2F9D4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_209F2FA00 + 4 * byte_209F79A70[a1]))(7107189, 0xE300000000000000);
}

uint64_t sub_209F2FA00()
{
  return 0x6E6F69746361;
}

uint64_t sub_209F2FA14()
{
  return 1701667182;
}

uint64_t sub_209F2FA24()
{
  return 0x657079546975;
}

unint64_t sub_209F2FA38()
{
  return 0xD000000000000012;
}

uint64_t sub_209F2FA9C()
{
  return 25705;
}

unint64_t sub_209F2FAA8()
{
  return 0xD000000000000019;
}

uint64_t sub_209F2FAC8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_209F2FAF4 + 4 * byte_209F79A7A[a1]))(7107189, 0xE300000000000000);
}

uint64_t sub_209F2FAF4()
{
  return 0x6E6F69746361;
}

uint64_t sub_209F2FB08()
{
  return 1701667182;
}

uint64_t sub_209F2FB18()
{
  return 0x657079546975;
}

unint64_t sub_209F2FB2C()
{
  return 0xD000000000000012;
}

uint64_t sub_209F2FB90()
{
  return 25705;
}

unint64_t sub_209F2FB9C()
{
  return 0xD000000000000019;
}

uint64_t sub_209F2FBBC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_209F2F9D4(*a1);
  v5 = v4;
  if (v3 == sub_209F2F9D4(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_209F679A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_209F2FC44()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_209F67B10();
  sub_209F2F9D4(v1);
  sub_209F6733C();
  swift_bridgeObjectRelease();
  return sub_209F67B28();
}

uint64_t sub_209F2FCA4()
{
  unsigned __int8 *v0;

  sub_209F2F9D4(*v0);
  sub_209F6733C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_209F2FCE4()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_209F67B10();
  sub_209F2F9D4(v1);
  sub_209F6733C();
  swift_bridgeObjectRelease();
  return sub_209F67B28();
}

uint64_t sub_209F2FD40@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_209F3512C();
  *a1 = result;
  return result;
}

uint64_t sub_209F2FD6C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_209F2F9D4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_209F2FD94()
{
  unsigned __int8 *v0;

  return sub_209F2FAC8(*v0);
}

uint64_t sub_209F2FD9C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_209F3512C();
  *a1 = result;
  return result;
}

void sub_209F2FDC0(_BYTE *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_209F2FDCC()
{
  sub_209F354A0();
  return sub_209F67B88();
}

uint64_t sub_209F2FDF4()
{
  sub_209F354A0();
  return sub_209F67B94();
}

uint64_t sub_209F2FE28()
{
  return sub_209F678F4();
}

uint64_t sub_209F2FE70()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void sub_209F2FE9C(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  sub_209F2FE1C();
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 24) = 1;
}

uint64_t sub_209F2FECC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_209F2FED8@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = sub_209F2FE28();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = 0;
  return result;
}

uint64_t sub_209F2FF04(uint64_t a1)
{
  MEMORY[0x20BD1DB1C](&unk_209F79D84, a1);
  return sub_209F67B88();
}

uint64_t sub_209F2FF38(uint64_t a1)
{
  MEMORY[0x20BD1DB1C](&unk_209F79D84, a1);
  return sub_209F67B94();
}

uint64_t URLLoadingParameters.Keys.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_209F675DC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t URLLoadingParameters.Keys.action.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 36);
  v5 = sub_209F675DC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t URLLoadingParameters.Keys.name.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 40);
  v5 = sub_209F675DC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t URLLoadingParameters.Keys.uiType.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 44);
  v5 = sub_209F675DC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t URLLoadingParameters.Keys.activationFunction.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 48);
  v5 = sub_209F675DC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t URLLoadingParameters.Keys.httpMethod.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 52);
  v5 = sub_209F675DC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t URLLoadingParameters.Keys.openInSafari.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 56);
  v5 = sub_209F675DC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t URLLoadingParameters.Keys.validationFunction.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 60);
  v5 = sub_209F675DC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t URLLoadingParameters.Keys.id.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 64);
  v5 = sub_209F675DC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t URLLoadingParameters.Keys.activityIndicatorAnchorId.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 68);
  v5 = sub_209F675DC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t URLLoadingParameters.Keys.init(url:action:name:uiType:activationFunction:httpMethod:openInSafari:validationFunction:id:activityIndicatorAnchorId:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v20;
  uint64_t v21;
  int *v22;
  void (*v26)(uint64_t, uint64_t, uint64_t);

  v20 = sub_209F675DC();
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32);
  v26(a9, a1, v20);
  v22 = (int *)type metadata accessor for URLLoadingParameters.Keys(0, a12, a13, v21);
  v26(a9 + v22[9], a2, v20);
  v26(a9 + v22[10], a3, v20);
  v26(a9 + v22[11], a4, v20);
  v26(a9 + v22[12], a5, v20);
  v26(a9 + v22[13], a6, v20);
  v26(a9 + v22[14], a7, v20);
  v26(a9 + v22[15], a8, v20);
  v26(a9 + v22[16], a10, v20);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v26)(a9 + v22[17], a11, v20);
}

uint64_t sub_209F30398()
{
  return 5522759;
}

uint64_t sub_209F303A8@<X0>(_QWORD *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  _QWORD v24[15];
  char *v25;
  _QWORD *v26;

  v24[14] = a5;
  v24[9] = a3;
  v24[10] = a4;
  v24[8] = a6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
  MEMORY[0x24BDAC7A8](v8, v9);
  v24[11] = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC040);
  v24[12] = *(_QWORD *)(v11 - 8);
  v24[13] = v11;
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for URLLoadingParameters(0);
  v17 = MEMORY[0x24BDAC7A8](v15, v16);
  v19 = (char *)v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(int *)(v17 + 40);
  v19[v20] = 1;
  v21 = a1[3];
  v26 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC048);
  sub_209F35454();
  v22 = v25;
  sub_209F67B58();
  if (!v22)
  {
    v24[6] = v15;
    v24[7] = v14;
    v25 = v19;
    v24[3] = a2 >> 8;
    v24[4] = v20;
    v24[5] = a2 >> 16;
    v24[1] = a2 >> 40;
    v24[2] = HIDWORD(a2);
    v24[0] = HIWORD(a2);
    __asm { BR              X10 }
  }
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
}

uint64_t sub_209F30744()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v3 - 120) = 0x657079546975;
  *(_QWORD *)(v3 - 112) = 0xE600000000000000;
  *(_QWORD *)(v3 - 104) = 0;
  *(_BYTE *)(v3 - 96) = 1;
  sub_209F354E4();
  v4 = v0;
  v5 = *(_QWORD *)(v3 - 200);
  sub_209F67894();
  if (v2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 160) + 8))(v5, v4);
    __swift_destroy_boxed_opaque_existential_1(v1);
    sub_209EE017C(*(_QWORD *)(v3 - 136), &qword_2545BB600);
    JUMPOUT(0x209F30688);
  }
  v6 = swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(v3 - 216);
  *(_BYTE *)(*(_QWORD *)(v3 - 136) + *(_QWORD *)(v3 - 224)) = *(_BYTE *)(v3 - 65);
  return ((uint64_t (*)(uint64_t))((char *)&loc_209F308B8 + 4 * byte_209F79A9A[v7]))(v6);
}

uint64_t sub_209F30B0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;

  *(_QWORD *)(v3 - 120) = 0x6E6F69746361;
  *(_QWORD *)(v3 - 112) = 0xE600000000000000;
  *(_QWORD *)(v3 - 104) = 0;
  *(_BYTE *)(v3 - 96) = 1;
  v4 = sub_209F6787C();
  if (v2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 160) + 8))(v0, v1);
    JUMPOUT(0x209F309E4);
  }
  v6 = v4;
  v7 = v5;
  v8 = swift_bridgeObjectRelease();
  v9 = (uint64_t *)(*(_QWORD *)(v3 - 136) + *(int *)(*(_QWORD *)(v3 - 208) + 32));
  *v9 = v6;
  v9[1] = v7;
  return ((uint64_t (*)(uint64_t))((char *)sub_209F30C90
                                          + 4 * byte_209F79AB0[*(_QWORD *)(v3 - 240)]))(v8);
}

uint64_t sub_209F30C90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;

  *(_QWORD *)(v3 - 120) = 0xD000000000000012;
  *(_QWORD *)(v3 - 112) = 0x8000000209F72C10;
  *(_QWORD *)(v3 - 104) = 0;
  *(_BYTE *)(v3 - 96) = 1;
  v4 = sub_209F6787C();
  if (v2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 160) + 8))(v0, v1);
    JUMPOUT(0x209F309E4);
  }
  v6 = v4;
  v7 = v5;
  v8 = swift_bridgeObjectRelease();
  v9 = (uint64_t *)(*(_QWORD *)(v3 - 136) + *(int *)(*(_QWORD *)(v3 - 208) + 36));
  *v9 = v6;
  v9[1] = v7;
  return ((uint64_t (*)(uint64_t))((char *)sub_209F30E14
                                          + 4 * byte_209F79ABB[*(_QWORD *)(v3 - 248)]))(v8);
}

uint64_t sub_209F30E14()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;

  *(_QWORD *)(v4 - 120) = 0x6874654D70747468;
  *(_QWORD *)(v4 - 112) = 0xEA0000000000646FLL;
  *(_QWORD *)(v4 - 104) = 0;
  *(_BYTE *)(v4 - 96) = 1;
  v5 = sub_209F6787C();
  if (v3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 160) + 8))(v0, v2);
    JUMPOUT(0x209F309E4);
  }
  v7 = v5;
  v8 = v6;
  swift_bridgeObjectRelease();
  if (v8)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = *(_QWORD *)(v4 - 144);
    v7 = *(_QWORD *)(v4 - 176);
  }
  v9 = *(_QWORD *)(v4 - 208);
  v10 = *(_QWORD *)(v4 - 136);
  v11 = (uint64_t *)(v10 + *(int *)(v9 + 24));
  *v11 = v7;
  v11[1] = v8;
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  *(_QWORD *)(v10 + *(int *)(v9 + 44)) = Decoder.decodeRUIAttributeDictionary()();
  return ((uint64_t (*)())((char *)sub_209F31018 + 4 * byte_209F79AC6[*(_QWORD *)(v4 - 256)]))();
}

uint64_t sub_209F31018()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;

  strcpy((char *)(v6 - 120), "openInSafari");
  *(_BYTE *)(v6 - 107) = 0;
  *(_WORD *)(v6 - 106) = -5120;
  *(_QWORD *)(v6 - 104) = 0;
  *(_BYTE *)(v6 - 96) = 1;
  v7 = sub_209F67888();
  if (v2)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v5);
    JUMPOUT(0x209F309E4);
  }
  v8 = v7;
  v9 = swift_bridgeObjectRelease();
  *(_BYTE *)(*(_QWORD *)(v6 - 136) + *(int *)(v4 + 28)) = v8 & 1;
  return ((uint64_t (*)(uint64_t))((char *)&loc_209F31164 + 4 * byte_209F79AD1[v0]))(v9);
}

void sub_209F31348()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;

  *(_QWORD *)(v1 - 168) = 0xD000000000000019;
  *(_QWORD *)(v1 - 120) = *(_QWORD *)(v1 - 168);
  *(_QWORD *)(v1 - 112) = 0x8000000209F72C60;
  *(_QWORD *)(v1 - 104) = 0;
  *(_BYTE *)(v1 - 96) = 1;
  v2 = sub_209F6787C();
  if (v0)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 - 160) + 8))(*(_QWORD *)(v1 - 200), *(_QWORD *)(v1 - 152));
    JUMPOUT(0x209F31480);
  }
  v4 = v2;
  v5 = v3;
  swift_bridgeObjectRelease();
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 - 160) + 8))(*(_QWORD *)(v1 - 200), *(_QWORD *)(v1 - 152));
  v6 = *(_QWORD *)(v1 - 136);
  v7 = (uint64_t *)(v6 + *(int *)(*(_QWORD *)(v1 - 208) + 56));
  *v7 = v4;
  v7[1] = v5;
  sub_209F22F90(v6, *(_QWORD *)(v1 - 192));
  __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v1 - 128));
  sub_209F35528(v6);
  JUMPOUT(0x209F30AB0);
}

uint64_t URLLoadingParameters.init<A>(from:keys:defaultHTTPMethod:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  int *v78;
  uint64_t v79;
  uint64_t v80;
  int *v81;
  uint64_t v82;
  uint64_t v83;
  int *v84;
  _QWORD *v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  int v90;
  int v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  char v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  int *v114;
  _QWORD *v115;
  uint64_t *v116;
  Swift::String v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t *v129;
  uint64_t v130;
  char *v131;
  unint64_t v132;
  uint64_t v133;
  int *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  int *v140;
  char *v141;
  _QWORD *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char v149;
  char v150;

  v140 = a4;
  v144 = a6;
  v145 = a5;
  v136 = a7;
  v137 = a3;
  v143 = a2;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
  MEMORY[0x24BDAC7A8](v8, v9);
  v138 = (char *)&v130 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC040);
  v11 = *(_QWORD *)(v139 - 8);
  MEMORY[0x24BDAC7A8](v139, v12);
  v14 = (char *)&v130 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for URLLoadingParameters(0);
  v17 = MEMORY[0x24BDAC7A8](v15, v16);
  v19 = (char *)&v130 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(int *)(v17 + 40);
  v19[v20] = 1;
  v21 = a1[3];
  v142 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC048);
  sub_209F35454();
  v22 = (uint64_t)v141;
  sub_209F67B58();
  if (v22)
  {
    v24 = type metadata accessor for URLLoadingParameters.Keys(0, v145, v144, v23);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v143, v24);
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v142);
  }
  v25 = (uint64_t)v138;
  v133 = v20;
  v134 = (int *)v15;
  v135 = v11;
  v141 = v19;
  LOBYTE(v146) = 0;
  v26 = sub_209F354A0();
  v27 = v143;
  v146 = sub_209F35174(v143, (uint64_t)&v146, (uint64_t)&type metadata for URLLoadingParameters.DefaultCodingKeys, v145, v26, v144);
  v147 = v28;
  v148 = v29;
  v149 = v30 & 1;
  v31 = v139;
  sub_209F6787C();
  v34 = v33;
  v131 = v14;
  v132 = v26;
  v35 = v31;
  swift_bridgeObjectRelease();
  if (v34)
  {
    swift_bridgeObjectRetain();
    sub_209F66A84();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v36 = sub_209F66A90();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v25, 1, 1, v36);
  }
  v38 = v144;
  v37 = v145;
  sub_209EDF9D0(v25, (uint64_t)v141);
  v40 = (int *)type metadata accessor for URLLoadingParameters.Keys(0, v37, v38, v39);
  v41 = v27 + v40[11];
  LOBYTE(v146) = 3;
  v146 = sub_209F35174(v41, (uint64_t)&v146, (uint64_t)&type metadata for URLLoadingParameters.DefaultCodingKeys, v37, v132, v38);
  v147 = v42;
  v148 = v43;
  v149 = v44 & 1;
  sub_209F354E4();
  v45 = v131;
  sub_209F67894();
  swift_bridgeObjectRelease();
  v46 = v132;
  v141[v133] = v150;
  v47 = v27 + v40[10];
  LOBYTE(v146) = 2;
  v146 = sub_209F35174(v47, (uint64_t)&v146, (uint64_t)&type metadata for URLLoadingParameters.DefaultCodingKeys, v37, v46, v38);
  v147 = v48;
  v148 = v49;
  v149 = v50 & 1;
  v51 = sub_209F6787C();
  v53 = v52;
  swift_bridgeObjectRelease();
  v54 = v27;
  v55 = v134;
  v56 = (uint64_t *)&v141[v134[5]];
  *v56 = v51;
  v56[1] = v53;
  v57 = v54 + v40[9];
  LOBYTE(v146) = 1;
  v146 = sub_209F35174(v57, (uint64_t)&v146, (uint64_t)&type metadata for URLLoadingParameters.DefaultCodingKeys, v145, v132, v38);
  v147 = v58;
  v148 = v59;
  v149 = v60 & 1;
  v61 = sub_209F6787C();
  v63 = v62;
  swift_bridgeObjectRelease();
  v64 = (uint64_t *)&v141[v55[8]];
  *v64 = v61;
  v64[1] = v63;
  v65 = v143 + v40[12];
  LOBYTE(v146) = 4;
  v146 = sub_209F35174(v65, (uint64_t)&v146, (uint64_t)&type metadata for URLLoadingParameters.DefaultCodingKeys, v145, v132, v38);
  v147 = v66;
  v148 = v67;
  v149 = v68 & 1;
  v69 = sub_209F6787C();
  v71 = v70;
  swift_bridgeObjectRelease();
  v72 = (uint64_t *)&v141[v55[9]];
  *v72 = v69;
  v72[1] = v71;
  v73 = v143 + v40[13];
  LOBYTE(v146) = 5;
  v146 = sub_209F35174(v73, (uint64_t)&v146, (uint64_t)&type metadata for URLLoadingParameters.DefaultCodingKeys, v145, v132, v38);
  v147 = v74;
  v148 = v75;
  v149 = v76 & 1;
  v77 = sub_209F6787C();
  v79 = v35;
  v138 = 0;
  v80 = v77;
  v81 = v78;
  swift_bridgeObjectRelease();
  v82 = v135;
  if (v81)
  {
    swift_bridgeObjectRelease();
    v83 = v80;
  }
  else
  {
    v81 = v140;
    v83 = v137;
  }
  v84 = v134;
  v86 = (uint64_t)v141;
  v85 = v142;
  v87 = &v141[v134[6]];
  *(_QWORD *)v87 = v83;
  *((_QWORD *)v87 + 1) = v81;
  __swift_project_boxed_opaque_existential_1(v85, v85[3]);
  v88 = v138;
  v89 = Decoder.decodeRUIAttributeDictionary()();
  if (v88)
  {
    v138 = v88;
    (*(void (**)(uint64_t, int *))(*((_QWORD *)v40 - 1) + 8))(v143, v40);
    (*(void (**)(char *, uint64_t))(v82 + 8))(v45, v79);
    v90 = 0;
    v91 = 0;
    v92 = 0;
  }
  else
  {
    *(_QWORD *)(v86 + v84[11]) = v89;
    v93 = v143 + v40[14];
    LOBYTE(v146) = 6;
    v140 = v40;
    v94 = v145;
    v95 = v132;
    v96 = v79;
    v97 = v144;
    v146 = sub_209F35174(v93, (uint64_t)&v146, (uint64_t)&type metadata for URLLoadingParameters.DefaultCodingKeys, v145, v132, v144);
    v147 = v98;
    v148 = v99;
    v149 = v100 & 1;
    v101 = sub_209F67888();
    v138 = 0;
    v102 = v101;
    swift_bridgeObjectRelease();
    v141[v84[7]] = v102 & 1;
    v103 = v143;
    v104 = v143 + v140[15];
    LOBYTE(v146) = 7;
    v146 = sub_209F35174(v104, (uint64_t)&v146, (uint64_t)&type metadata for URLLoadingParameters.DefaultCodingKeys, v94, v95, v97);
    v147 = v105;
    v148 = v106;
    v149 = v107 & 1;
    v108 = v138;
    v109 = sub_209F6787C();
    v111 = v96;
    v138 = v108;
    if (v108)
    {
      (*(void (**)(uint64_t))(*((_QWORD *)v140 - 1) + 8))(v103);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v135 + 8))(v45, v96);
      v91 = 0;
      v92 = 0;
      v90 = 1;
    }
    else
    {
      v112 = v109;
      v113 = v110;
      v114 = v140;
      swift_bridgeObjectRelease();
      v115 = v142;
      v116 = (uint64_t *)&v141[v134[12]];
      *v116 = v112;
      v116[1] = v113;
      __swift_project_boxed_opaque_existential_1(v115, v115[3]);
      v117 = Decoder.decodeRUIID()();
      v138 = v118;
      if (v118)
      {
        (*(void (**)(uint64_t, int *))(*((_QWORD *)v114 - 1) + 8))(v143, v114);
        (*(void (**)(char *, uint64_t))(v135 + 8))(v45, v111);
        v92 = 0;
        v90 = 1;
        v91 = 1;
      }
      else
      {
        *(Swift::String *)&v141[v134[13]] = v117;
        v119 = v143 + v114[16];
        LOBYTE(v146) = 9;
        v146 = sub_209F35174(v119, (uint64_t)&v146, (uint64_t)&type metadata for URLLoadingParameters.DefaultCodingKeys, v145, v132, v144);
        v147 = v120;
        v148 = v121;
        v149 = v122 & 1;
        v123 = v138;
        v124 = sub_209F6787C();
        v138 = v123;
        if (!v123)
        {
          v126 = v124;
          v127 = v125;
          (*(void (**)(uint64_t, int *))(*((_QWORD *)v114 - 1) + 8))(v143, v114);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v135 + 8))(v45, v111);
          v128 = (uint64_t)v141;
          v129 = (uint64_t *)&v141[v134[14]];
          *v129 = v126;
          v129[1] = v127;
          sub_209F22F90(v128, v136);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v142);
          return sub_209F35528(v128);
        }
        (*(void (**)(uint64_t, int *))(*((_QWORD *)v114 - 1) + 8))(v143, v114);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v135 + 8))(v45, v111);
        v90 = 1;
        v91 = 1;
        v92 = 1;
      }
    }
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v142);
  sub_209EE017C((uint64_t)v141, &qword_2545BB600);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (!v90)
  {
    if (v91)
      goto LABEL_15;
LABEL_11:
    if (v92)
      return swift_bridgeObjectRelease();
    return result;
  }
  result = swift_bridgeObjectRelease();
  if (!v91)
    goto LABEL_11;
LABEL_15:
  result = swift_bridgeObjectRelease();
  if (v92)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t URLLoadingParameters.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD v5[5];

  sub_209EE0E3C(a1, (uint64_t)v5);
  sub_209F303A8(v5, 0xA0A0A0A0A0A0A0AuLL, 2570, 5522759, 0xE300000000000000, a2);
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t URLLoadingParameters.init(from:defaultHTTPMethod:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  _QWORD v9[5];

  sub_209EE0E3C(a1, (uint64_t)v9);
  sub_209F303A8(v9, 0xA0A0A0A0A0A0A0AuLL, 2570, a2, a3, a4);
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_209F32158(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_209EE061C;
  return URLLoadingCapable.handle(url:)(a1, a2, a3);
}

uint64_t URLLoadingCapable.handle(url:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[17] = a3;
  v4[18] = v3;
  v4[15] = a1;
  v4[16] = a2;
  v4[19] = type metadata accessor for URLLoadingParameters(0);
  v4[20] = swift_task_alloc();
  sub_209F6748C();
  v4[21] = sub_209F67480();
  v4[22] = sub_209F67474();
  v4[23] = v5;
  return swift_task_switch();
}

uint64_t sub_209F32250()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;

  v1 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v0 + 136) + 24))(*(_QWORD *)(v0 + 128));
  *(_QWORD *)(v0 + 192) = v1;
  if (v1)
  {
    v2 = (void *)v1;
    v3 = *(_QWORD *)(v0 + 152);
    v4 = *(_QWORD *)(v0 + 160);
    v5 = *(_QWORD *)(v0 + 136);
    v6 = *(_QWORD *)(v0 + 128);
    sub_209F66A3C();
    v14 = sub_209F672A0();
    *(_QWORD *)(v0 + 200) = v14;
    swift_bridgeObjectRelease();
    v7 = *(void (**)(uint64_t, uint64_t))(v5 + 40);
    v7(v6, v5);
    swift_bridgeObjectRetain();
    sub_209F35528(v4);
    v13 = sub_209F672A0();
    *(_QWORD *)(v0 + 208) = v13;
    swift_bridgeObjectRelease();
    v7(v6, v5);
    v8 = *(_QWORD *)(v4 + *(int *)(v3 + 44));
    swift_bridgeObjectRetain();
    sub_209F35528(v4);
    sub_209F33C44(v8);
    swift_bridgeObjectRelease();
    v9 = sub_209F6724C();
    *(_QWORD *)(v0 + 216) = v9;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 56) = v0 + 232;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_209F32454;
    v10 = swift_continuation_init();
    *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
    v11 = (_QWORD *)(v0 + 80);
    v11[1] = 0x40000000;
    v11[2] = sub_209F33FAC;
    v11[3] = &block_descriptor_3;
    v11[4] = v10;
    objc_msgSend(v2, sel_openLink_HTTPMethod_attributes_completion_, v14, v13, v9, v11);
    return swift_continuation_await();
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_209F32454()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 224) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_209F324B0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v1 = *(void **)(v0 + 208);
  v2 = *(void **)(v0 + 216);
  v4 = *(void **)(v0 + 192);
  v3 = *(void **)(v0 + 200);
  swift_release();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_209F3250C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v1 = *(void **)(v0 + 216);
  v3 = *(void **)(v0 + 200);
  v2 = *(void **)(v0 + 208);
  v4 = *(void **)(v0 + 192);
  swift_release();
  swift_willThrow();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void URLLoadingCapable.destination(for:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v6;
  id v7;

  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
  if (v6)
  {
    v7 = (id)v6;
    sub_209EE2B2C(a1, a4);

  }
  else
  {
    sub_209F677E0();
    __break(1u);
  }
}

RemoteUI::LegacyRemoteView_optional __swiftcall LegacyRemoteView.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  RemoteUI::LegacyRemoteView_optional result;
  char v5;

  v2 = v1;
  v3 = sub_209F67840();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t LegacyRemoteView.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000011;
  else
    return 0x6574656C706D6F63;
}

uint64_t sub_209F326D4(char *a1, char *a2)
{
  return sub_209F2EAC8(*a1, *a2);
}

uint64_t sub_209F326E0()
{
  sub_209F67B10();
  sub_209F6733C();
  swift_bridgeObjectRelease();
  return sub_209F67B28();
}

uint64_t sub_209F3276C()
{
  sub_209F6733C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_209F327D4()
{
  sub_209F67B10();
  sub_209F6733C();
  swift_bridgeObjectRelease();
  return sub_209F67B28();
}

RemoteUI::LegacyRemoteView_optional sub_209F3285C(Swift::String *a1)
{
  return LegacyRemoteView.init(rawValue:)(*a1);
}

void sub_209F32868(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  v2 = 0x6574656C706D6F63;
  if (*v1)
    v2 = 0xD000000000000011;
  v3 = 0x8000000209F72C90;
  if (!*v1)
    v3 = 0xEB000000006C7275;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_209F328B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(uint64_t, uint64_t);
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v5 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for URLLoadingParameters(0);
  v10 = MEMORY[0x24BDAC7A8](v8, v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v13);
  v15 = (char *)&v21 - v14;
  v16 = *(void (**)(uint64_t, uint64_t))(a2 + 40);
  v16(a1, a2);
  v17 = &v15[*(int *)(v8 + 56)];
  v18 = *((_QWORD *)v17 + 1);
  v22 = *(_QWORD *)v17;
  swift_bridgeObjectRetain();
  sub_209F35528((uint64_t)v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, a1);
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, a1);
    return v22;
  }
  else
  {
    v16(a1, a2);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, a1);
    v19 = *(_QWORD *)&v12[*(int *)(v8 + 52)];
    swift_bridgeObjectRetain();
    sub_209F35528((uint64_t)v12);
  }
  return v19;
}

uint64_t sub_209F32A28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = (*(uint64_t (**)(void))(a2 + 80))();
  v5 = sub_209F328B4(a1, a2);
  v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 144))(v5);
  swift_release();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t URLLoadingCapable.isLoading.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  sub_209F32A28(a1, a2);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BAF80);
  MEMORY[0x20BD1C58C](&v4, v2);
  swift_release();
  swift_release();
  return v4;
}

uint64_t URLLoadingCapable.activate()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_209F32B34()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  _QWORD *v6;
  uint64_t v7;

  v1 = sub_209F32A28(v0[2], v0[3]);
  v3 = v2;
  v5 = v4;
  v0[5] = v1;
  v0[6] = v2;
  v6 = (_QWORD *)swift_task_alloc();
  v0[7] = (uint64_t)v6;
  sub_209F35B3C();
  *v6 = v0;
  v6[1] = sub_209F32BC0;
  return sub_209F35564(v1, v3, v5 & 1, v0[2], v7, v0[3]);
}

uint64_t sub_209F32BC0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_209F32C40()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

Swift::Void __swiftcall URLLoadingCapable.activate()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  v3 = v1;
  v4 = v0;
  v5 = *(_QWORD *)(v0 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  ((void (*)())MEMORY[0x24BDAC7A8])();
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB428);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_209F67498();
  v12 = sub_209F674B0();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 0, 1, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, v4);
  sub_209F6748C();
  v13 = sub_209F67480();
  v14 = (*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v15 = (char *)swift_allocObject();
  v16 = MEMORY[0x24BEE6930];
  *((_QWORD *)v15 + 2) = v13;
  *((_QWORD *)v15 + 3) = v16;
  *((_QWORD *)v15 + 4) = v4;
  *((_QWORD *)v15 + 5) = v3;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v15[v14], v7, v4);
  sub_209F1AD9C((uint64_t)v11, (uint64_t)&unk_2545BC088, (uint64_t)v15);
  swift_release();
}

uint64_t sub_209F32DD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  sub_209F6748C();
  v6[5] = sub_209F67480();
  v6[6] = sub_209F67474();
  v6[7] = v7;
  return swift_task_switch();
}

uint64_t sub_209F32E40()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  _QWORD *v6;
  uint64_t v7;

  v1 = sub_209F32A28(v0[3], v0[4]);
  v3 = v2;
  v5 = v4;
  v0[8] = v1;
  v0[9] = v2;
  v6 = (_QWORD *)swift_task_alloc();
  v0[10] = (uint64_t)v6;
  sub_209F35B3C();
  *v6 = v0;
  v6[1] = sub_209F32ECC;
  return sub_209F35564(v1, v3, v5 & 1, v0[3], v7, v0[4]);
}

uint64_t sub_209F32ECC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_release();
  }
  return swift_task_switch();
}

uint64_t sub_209F32F40()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_209F32F74()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t URLLoadingCapable.activate(progressBinding:)(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v25;
  int v26;

  v25 = a5;
  v26 = a3;
  v9 = *(_QWORD *)(a4 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](a1, a2);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB428);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_209F67498();
  v16 = sub_209F674B0();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 0, 1, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v5, a4);
  sub_209F6748C();
  swift_retain();
  swift_retain();
  v17 = sub_209F67480();
  v18 = (*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v19 = (v10 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = (char *)swift_allocObject();
  v21 = MEMORY[0x24BEE6930];
  *((_QWORD *)v20 + 2) = v17;
  *((_QWORD *)v20 + 3) = v21;
  v22 = v25;
  *((_QWORD *)v20 + 4) = a4;
  *((_QWORD *)v20 + 5) = v22;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v20[v18], v11, a4);
  v23 = &v20[v19];
  *(_QWORD *)v23 = a1;
  *((_QWORD *)v23 + 1) = a2;
  v23[16] = v26;
  sub_209F1AD9C((uint64_t)v15, (uint64_t)&unk_2545BC098, (uint64_t)v20);
  return swift_release();
}

uint64_t sub_209F33158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  _QWORD *v8;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v16;

  v8[2] = sub_209F6748C();
  v8[3] = sub_209F67480();
  v13 = (_QWORD *)swift_task_alloc();
  v8[4] = v13;
  sub_209F35B3C();
  *v13 = v8;
  v13[1] = sub_209F1ACAC;
  return sub_209F35564(a5, a6, a7, a8, v14, v16);
}

uint64_t URLLoadingCapable.activate(progressBinding:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t v12;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  sub_209F35B3C();
  *v11 = v5;
  v11[1] = sub_209EE06B8;
  return sub_209F35564(a1, a2, a3, a4, v12, a5);
}

uint64_t URLLoadingCapable.activate<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v23;

  v10 = *(_QWORD *)(a2 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](a1, a2);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB428);
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_209F67498();
  v17 = sub_209F674B0();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 0, 1, v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v5, a2);
  sub_209F6748C();
  v18 = sub_209F67480();
  v19 = (*(unsigned __int8 *)(v10 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v20 = (char *)swift_allocObject();
  v21 = MEMORY[0x24BEE6930];
  *((_QWORD *)v20 + 2) = v18;
  *((_QWORD *)v20 + 3) = v21;
  *((_QWORD *)v20 + 4) = a2;
  *((_QWORD *)v20 + 5) = a3;
  *((_QWORD *)v20 + 6) = a4;
  *((_QWORD *)v20 + 7) = a5;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v20[v19], v12, a2);
  sub_209F1AD9C((uint64_t)v16, (uint64_t)&unk_2545BC0B0, (uint64_t)v20);
  return swift_release();
}

{
  uint64_t v5;
  _QWORD *v6;

  v6[5] = a5;
  v6[6] = v5;
  v6[3] = a3;
  v6[4] = a4;
  v6[2] = a2;
  return swift_task_switch();
}

uint64_t sub_209F333F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;

  v7[3] = a5;
  v7[4] = a7;
  v7[2] = a4;
  sub_209F6748C();
  v7[5] = sub_209F67480();
  v7[6] = sub_209F67474();
  v7[7] = v8;
  return swift_task_switch();
}

uint64_t sub_209F33468()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  _QWORD *v6;
  uint64_t v7;

  v1 = sub_209F32A28(v0[3], v0[4]);
  v3 = v2;
  v5 = v4;
  v0[8] = v1;
  v0[9] = v2;
  v6 = (_QWORD *)swift_task_alloc();
  v0[10] = (uint64_t)v6;
  sub_209F35B3C();
  *v6 = v0;
  v6[1] = sub_209F334F4;
  return sub_209F35564(v1, v3, v5 & 1, v0[3], v7, v0[4]);
}

uint64_t sub_209F334F4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_release();
  }
  return swift_task_switch();
}

uint64_t sub_209F33588()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  _QWORD *v6;
  uint64_t v7;

  v1 = sub_209F32A28(v0[2], v0[4]);
  v3 = v2;
  v5 = v4;
  v0[7] = v1;
  v0[8] = v2;
  v6 = (_QWORD *)swift_task_alloc();
  v0[9] = (uint64_t)v6;
  *v6 = v0;
  v6[1] = sub_209F3360C;
  return sub_209F35564(v1, v3, v5 & 1, v0[2], v7, v0[4]);
}

uint64_t sub_209F3360C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t URLLoadingCapable.activate<A>(_:progressBinding:)(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;

  v38 = a7;
  v39 = a8;
  v35 = a6;
  v36 = a1;
  v40 = a4;
  v31 = a3;
  v32 = a2;
  v9 = *(_QWORD *)(a6 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = MEMORY[0x24BDAC7A8](a1, a2);
  v34 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x24BDAC7A8](v11, v15);
  v33 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB428);
  MEMORY[0x24BDAC7A8](v16, v17);
  v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_209F67498();
  v20 = sub_209F674B0();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 0, 1, v20);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v37, a5);
  v21 = v35;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v36, v35);
  sub_209F6748C();
  swift_retain();
  swift_retain();
  v22 = sub_209F67480();
  v23 = (*(unsigned __int8 *)(v13 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v24 = (v14 + *(unsigned __int8 *)(v9 + 80) + v23) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v25 = (char *)swift_allocObject();
  v26 = MEMORY[0x24BEE6930];
  *((_QWORD *)v25 + 2) = v22;
  *((_QWORD *)v25 + 3) = v26;
  *((_QWORD *)v25 + 4) = a5;
  *((_QWORD *)v25 + 5) = v21;
  v27 = v39;
  *((_QWORD *)v25 + 6) = v38;
  *((_QWORD *)v25 + 7) = v27;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v25[v23], v33, a5);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v25[v24], v34, v21);
  v28 = &v25[(v10 + v24 + 7) & 0xFFFFFFFFFFFFFFF8];
  v29 = v31;
  *(_QWORD *)v28 = v32;
  *((_QWORD *)v28 + 1) = v29;
  v28[16] = v40;
  sub_209F1AD9C((uint64_t)v19, (uint64_t)&unk_2545BC0C8, (uint64_t)v25);
  return swift_release();
}

uint64_t sub_209F33898(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  _QWORD *v8;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v8[2] = sub_209F6748C();
  v8[3] = sub_209F67480();
  v12 = (_QWORD *)swift_task_alloc();
  v8[4] = v12;
  *v12 = v8;
  v12[1] = sub_209F3393C;
  return sub_209F35564(a6, a7, a8, v15, v13, v16);
}

uint64_t sub_209F3393C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  sub_209F67474();
  return swift_task_switch();
}

uint64_t sub_209F339C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v6 + 34) = a6;
  *(_QWORD *)(v6 + 40) = a4;
  *(_QWORD *)(v6 + 48) = a5;
  v7 = sub_209F6778C();
  *(_QWORD *)(v6 + 56) = v7;
  *(_QWORD *)(v6 + 64) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v6 + 72) = swift_task_alloc();
  sub_209F6748C();
  *(_QWORD *)(v6 + 80) = sub_209F67480();
  *(_QWORD *)(v6 + 88) = sub_209F67474();
  *(_QWORD *)(v6 + 96) = v8;
  return swift_task_switch();
}

uint64_t sub_209F33A5C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  sub_209F67780();
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_2545BC128 + dword_2545BC128);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v1;
  *v1 = v0;
  v1[1] = sub_209F33ADC;
  return v3(300000000000000000, 0, 0, 0, 1);
}

uint64_t sub_209F33ADC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

uint64_t sub_209F33B64()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 112);
  swift_release();
  sub_209F674C8();
  if (!v1)
  {
    v2 = *(_BYTE *)(v0 + 34);
    v3 = *(_QWORD *)(v0 + 48);
    *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 40);
    *(_QWORD *)(v0 + 24) = v3;
    *(_BYTE *)(v0 + 32) = v2;
    *(_BYTE *)(v0 + 33) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BAF80);
    sub_209F671E0();
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_209F33C08()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_209F33C44(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  unint64_t result;
  int64_t i;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  _OWORD *v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t *v24;
  unint64_t v25;
  char v26;
  uint64_t *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  _OWORD v40[2];

  v1 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BAF88);
    v2 = (_QWORD *)sub_209F67810();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  v32 = v1 + 64;
  v3 = -1 << *(_BYTE *)(v1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 64);
  v31 = (unint64_t)(63 - v3) >> 6;
  v6 = &v37;
  v7 = &v39;
  result = swift_bridgeObjectRetain();
  i = 0;
  v10 = MEMORY[0x24BEE4AD8] + 8;
  v11 = MEMORY[0x24BEE0D00];
  if (v5)
    goto LABEL_10;
LABEL_11:
  v20 = i + 1;
  if (__OFADD__(i, 1))
    goto LABEL_35;
  if (v20 >= v31)
    goto LABEL_32;
  v21 = *(_QWORD *)(v32 + 8 * v20);
  v22 = i + 1;
  if (!v21)
  {
    v22 = i + 2;
    if (i + 2 >= v31)
      goto LABEL_32;
    v21 = *(_QWORD *)(v32 + 8 * v22);
    if (!v21)
    {
      v22 = i + 3;
      if (i + 3 >= v31)
        goto LABEL_32;
      v21 = *(_QWORD *)(v32 + 8 * v22);
      if (!v21)
      {
        v22 = i + 4;
        if (i + 4 >= v31)
          goto LABEL_32;
        v21 = *(_QWORD *)(v32 + 8 * v22);
        if (!v21)
        {
          v23 = i + 5;
          if (i + 5 < v31)
          {
            v21 = *(_QWORD *)(v32 + 8 * v23);
            if (v21)
            {
              v22 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v22 = v23 + 1;
              if (__OFADD__(v23, 1))
                goto LABEL_36;
              if (v22 >= v31)
                break;
              v21 = *(_QWORD *)(v32 + 8 * v22);
              ++v23;
              if (v21)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_209EE3520();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  v34 = (v21 - 1) & v21;
  v19 = __clz(__rbit64(v21)) + (v22 << 6);
  for (i = v22; ; v19 = __clz(__rbit64(v5)) | (i << 6))
  {
    v24 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v19);
    v35 = *v24;
    v36 = v24[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_209EE3510(v6, v7);
    sub_209EE3510(v7, v40);
    sub_209EE3510(v40, &v38);
    result = sub_209EE31C0(v35, v36);
    v25 = result;
    if ((v26 & 1) != 0)
    {
      v33 = i;
      v12 = v7;
      v13 = v6;
      v14 = v1;
      v15 = v11;
      v16 = v10;
      v17 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v17 = v35;
      v17[1] = v36;
      v10 = v16;
      v11 = v15;
      v1 = v14;
      v6 = v13;
      v7 = v12;
      i = v33;
      v18 = (_OWORD *)(v2[7] + 32 * v25);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
      result = (unint64_t)sub_209EE3510(&v38, v18);
      v5 = v34;
      if (!v34)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v27 = (uint64_t *)(v2[6] + 16 * result);
    *v27 = v35;
    v27[1] = v36;
    result = (unint64_t)sub_209EE3510(&v38, (_OWORD *)(v2[7] + 32 * result));
    v28 = v2[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (v29)
      goto LABEL_34;
    v2[2] = v30;
    v5 = v34;
    if (!v34)
      goto LABEL_11;
LABEL_10:
    v34 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_209F33FB0(uint64_t a1, char a2, void *a3)
{
  _QWORD *v4;
  id v5;

  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB4A8);
    swift_allocError();
    *v4 = a3;
    v5 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    **(_BYTE **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 64) + 40) = a2;
    return swift_continuation_throwingResume();
  }
}

id sub_209F3406C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NoElement.ScriptInterface();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_209F3409C()
{
  return objc_msgSend(objc_allocWithZone((Class)type metadata accessor for NoElement.ScriptInterface()), sel_init);
}

uint64_t sub_209F340BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;

  *(_QWORD *)(v6 + 56) = v5;
  v12 = sub_209F67774();
  *(_QWORD *)(v6 + 64) = v12;
  *(_QWORD *)(v6 + 72) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v6 + 80) = swift_task_alloc();
  *(_QWORD *)(v6 + 88) = swift_task_alloc();
  *(_QWORD *)(v6 + 40) = a1;
  *(_QWORD *)(v6 + 48) = a2;
  *(_QWORD *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = a4;
  *(_BYTE *)(v6 + 32) = a5 & 1;
  return swift_task_switch();
}

uint64_t sub_209F34160()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  _QWORD *v5;

  v1 = v0[10];
  v2 = v0[8];
  v3 = v0[9];
  sub_209F6778C();
  sub_209EE4ABC(&qword_2545BC130, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6E10], MEMORY[0x24BEE6E20]);
  sub_209F67AB0();
  sub_209EE4ABC(&qword_2545BC138, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6DC8], MEMORY[0x24BEE6E00]);
  sub_209F67798();
  v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v4;
  v4(v1, v2);
  v5 = (_QWORD *)swift_task_alloc();
  v0[13] = v5;
  *v5 = v0;
  v5[1] = sub_209F34278;
  return sub_209F67ABC();
}

uint64_t sub_209F34278()
{
  uint64_t v0;
  uint64_t *v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(void (**)(uint64_t, uint64_t))(*v1 + 96);
  v3 = *(_QWORD *)(*v1 + 88);
  v4 = *(_QWORD *)(*v1 + 64);
  v5 = *v1;
  *(_QWORD *)(v5 + 112) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_209F34324()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_209F34360(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_209F67B10();
  swift_bridgeObjectRetain();
  sub_209F6733C();
  v8 = sub_209F67B28();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_209F679A8() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_209F679A8() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_209F34F94(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_209F3450C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v19;

  v5 = *v2;
  sub_209F67B10();
  swift_bridgeObjectRetain();
  sub_209F6733C();
  v6 = sub_209F67B28();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  v9 = *(_QWORD *)(v5 + 48);
  v10 = (_QWORD *)(v9 + 16 * v8);
  v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_209F679A8() & 1) == 0)
  {
    v15 = ~v7;
    do
    {
      v8 = (v8 + 1) & v15;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_18;
      v16 = (_QWORD *)(v9 + 16 * v8);
      v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_209F679A8() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *v2;
  v19 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_209F34698();
    v13 = v19;
  }
  v14 = *(_QWORD *)(*(_QWORD *)(v13 + 48) + 16 * v8);
  sub_209F34DD0(v8);
  *v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

void *sub_209F34698()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC110);
  v2 = *v0;
  v3 = sub_209F676A8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_209F34848()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC110);
  v3 = sub_209F676B4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_209F67B10();
    swift_bridgeObjectRetain();
    sub_209F6733C();
    result = sub_209F67B28();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_209F34AF4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC110);
  v3 = sub_209F676B4();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_209F67B10();
      sub_209F6733C();
      result = sub_209F67B28();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

unint64_t sub_209F34DD0(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_209F67678();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_209F67B10();
        swift_bridgeObjectRetain();
        sub_209F6733C();
        v10 = sub_209F67B28();
        swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9)
            goto LABEL_5;
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(v3 + 48);
          v13 = (_OWORD *)(v12 + 16 * v2);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (v2 = v6, v13 >= v14 + 1))
          {
            *v13 = *v14;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v15 = *(_QWORD *)(v3 + 16);
  v16 = __OFSUB__(v15, 1);
  v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_209F34F94(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_209F34AF4();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_209F34698();
      goto LABEL_22;
    }
    sub_209F34848();
  }
  v11 = *v4;
  sub_209F67B10();
  sub_209F6733C();
  result = sub_209F67B28();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_209F679A8(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_209F67A98();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_209F679A8();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

uint64_t sub_209F3512C()
{
  unint64_t v0;

  v0 = sub_209F67840();
  swift_bridgeObjectRelease();
  if (v0 >= 0xA)
    return 10;
  else
    return v0;
}

uint64_t sub_209F35174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(char *, uint64_t, uint64_t);
  void (*v42)(char *, uint64_t, uint64_t);
  void (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v48 = a5;
  v49 = a2;
  v10 = *(_QWORD *)(a3 - 8);
  v11 = MEMORY[0x24BDAC7A8](a1, a2);
  v45 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)&v38 - v14;
  v16 = sub_209F675DC();
  v17 = *(_QWORD *)(v16 - 8);
  v19 = MEMORY[0x24BDAC7A8](v16, v18);
  v21 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19, v22);
  v24 = (char *)&v38 - v23;
  v43 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v44 = a1;
  v43((char *)&v38 - v23, a1, v16);
  v25 = *(_QWORD *)(a4 - 8);
  v41 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  v26 = v41(v24, 1, a4);
  v40 = a6;
  if (v26 == 1)
  {
    v27 = v25;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v24, v16);
    v42 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v42(v15, v49, a3);
  }
  else
  {
    v39 = v17;
    v47 = sub_209F67B64();
    v29 = v28;
    v27 = v25;
    (*(void (**)(char *, uint64_t))(v25 + 8))(v24, a4);
    v42 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v42(v15, v49, a3);
    v46 = v29;
    if (v29)
    {
      v17 = v39;
      goto LABEL_7;
    }
    v17 = v39;
  }
  v30 = sub_209F67B64();
  v46 = v31;
  v47 = v30;
  v25 = v27;
LABEL_7:
  v32 = *(void (**)(char *, uint64_t))(v10 + 8);
  v32(v15, a3);
  v43(v21, v44, v16);
  if (v41(v21, 1, a4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v21, v16);
    v33 = v45;
    v42(v45, v49, a3);
LABEL_10:
    sub_209F67B7C();
    goto LABEL_11;
  }
  sub_209F67B7C();
  v35 = v34;
  (*(void (**)(char *, uint64_t))(v25 + 8))(v21, a4);
  v33 = v45;
  v42(v45, v49, a3);
  if ((v35 & 1) != 0)
    goto LABEL_10;
LABEL_11:
  v36 = v47;
  v32(v33, a3);
  return v36;
}

uint64_t type metadata accessor for URLLoadingParameters.Keys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for URLLoadingParameters.Keys);
}

unint64_t sub_209F35454()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2545BC050;
  if (!qword_2545BC050)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BC048);
    result = MEMORY[0x20BD1DB1C](&unk_209F79D84, v1);
    atomic_store(result, (unint64_t *)&qword_2545BC050);
  }
  return result;
}

unint64_t sub_209F354A0()
{
  unint64_t result;

  result = qword_2545BC058;
  if (!qword_2545BC058)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F79CE4, &type metadata for URLLoadingParameters.DefaultCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BC058);
  }
  return result;
}

unint64_t sub_209F354E4()
{
  unint64_t result;

  result = qword_2545BC060;
  if (!qword_2545BC060)
  {
    result = MEMORY[0x20BD1DB1C](&protocol conformance descriptor for URLLoadingMode, &type metadata for URLLoadingMode);
    atomic_store(result, (unint64_t *)&qword_2545BC060);
  }
  return result;
}

uint64_t sub_209F35528(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for URLLoadingParameters(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_209F35564(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v7 + 192) = a6;
  *(_QWORD *)(v7 + 200) = v6;
  *(_QWORD *)(v7 + 176) = a2;
  *(_QWORD *)(v7 + 184) = a4;
  *(_BYTE *)(v7 + 140) = a3;
  *(_QWORD *)(v7 + 168) = a1;
  *(_QWORD *)(v7 + 208) = type metadata accessor for URLLoadingParameters(0);
  *(_QWORD *)(v7 + 216) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB428);
  *(_QWORD *)(v7 + 224) = swift_task_alloc();
  *(_QWORD *)(v7 + 232) = sub_209F6748C();
  *(_QWORD *)(v7 + 240) = sub_209F67480();
  *(_QWORD *)(v7 + 248) = sub_209F67474();
  *(_QWORD *)(v7 + 256) = v8;
  return swift_task_switch();
}

uint64_t sub_209F35628()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  _QWORD *v20;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 216);
  v25 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 184);
  v6 = *(_BYTE *)(v0 + 140);
  v7 = *(_QWORD *)(v0 + 168);
  v8 = sub_209F674B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v1, 1, 1, v8);
  swift_retain();
  swift_retain();
  v9 = sub_209F67480();
  v10 = swift_allocObject();
  v11 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = v11;
  *(_QWORD *)(v10 + 32) = v7;
  *(_QWORD *)(v10 + 40) = v5;
  *(_BYTE *)(v10 + 48) = v6;
  *(_QWORD *)(v0 + 264) = sub_209F1AD9C(v1, (uint64_t)&unk_2545BC120, v10);
  (*(void (**)(uint64_t, uint64_t))(v3 + 40))(v4, v3);
  v12 = *(_QWORD *)(v2 + *(int *)(v25 + 44));
  swift_bridgeObjectRetain();
  sub_209F35528(v2);
  sub_209F04D90(v12);
  swift_bridgeObjectRelease();
  v13 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 32))(v4, v3);
  v14 = objc_allocWithZone((Class)RUIElement);
  v15 = (void *)sub_209F6724C();
  swift_bridgeObjectRelease();
  v16 = objc_msgSend(v14, sel_initWithAttributes_parent_, v15, v13);
  *(_QWORD *)(v0 + 272) = v16;

  v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v4, v3);
  *(_QWORD *)(v0 + 280) = v17;
  if (v17)
  {
    v18 = (void *)v17;
    *(_QWORD *)(v0 + 56) = v0 + 137;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_209F35918;
    v19 = swift_continuation_init();
    *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
    v20 = (_QWORD *)(v0 + 80);
    v20[1] = 0x40000000;
    v20[2] = sub_209F33FAC;
    v20[3] = &block_descriptor_43;
    v20[4] = v19;
    objc_msgSend(v18, sel_activateElement_completion_, v16, v20);
    return swift_continuation_await();
  }
  else
  {

    swift_release();
    v22 = *(_BYTE *)(v0 + 140);
    v24 = *(_QWORD *)(v0 + 168);
    v23 = *(_QWORD *)(v0 + 176);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB4A8);
    sub_209F674BC();
    *(_QWORD *)(v0 + 120) = v24;
    *(_QWORD *)(v0 + 128) = v23;
    *(_BYTE *)(v0 + 136) = v22;
    *(_BYTE *)(v0 + 138) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BAF80);
    sub_209F671E0();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_209F35918()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 288) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_209F35974()
{
  uint64_t v0;
  void *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 280);

  swift_release();
  v2 = *(_BYTE *)(v0 + 140);
  v4 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 176);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB4A8);
  sub_209F674BC();
  *(_QWORD *)(v0 + 120) = v4;
  *(_QWORD *)(v0 + 128) = v3;
  *(_BYTE *)(v0 + 136) = v2;
  *(_BYTE *)(v0 + 138) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BAF80);
  sub_209F671E0();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_209F35A54()
{
  uint64_t v0;
  void *v1;
  void *v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)(v0 + 280);
  v2 = *(void **)(v0 + 272);
  v3 = *(_BYTE *)(v0 + 140);
  v5 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 176);
  swift_release();
  swift_willThrow();

  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB4A8);
  sub_209F674BC();
  *(_QWORD *)(v0 + 144) = v5;
  *(_QWORD *)(v0 + 152) = v4;
  *(_BYTE *)(v0 + 160) = v3;
  *(_BYTE *)(v0 + 139) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BAF80);
  sub_209F671E0();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_209F35B3C()
{
  unint64_t result;

  result = qword_2545C28A0[0];
  if (!qword_2545C28A0[0])
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7A198, &type metadata for NoElement);
    atomic_store(result, qword_2545C28A0);
  }
  return result;
}

uint64_t sub_209F35B80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_209F35BEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v5 = v0 + ((v4 + 48) & ~v4);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_209EE06B8;
  return sub_209F32DD0((uint64_t)v6, v7, v8, v5, v2, v3);
}

uint64_t sub_209F35C5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_209F35CF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v0 + v4;
  v6 = v0 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
  v7 = *(_QWORD *)v6;
  v8 = *(_QWORD *)(v6 + 8);
  v9 = *(_BYTE *)(v6 + 16);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v10;
  *v10 = v1;
  v10[1] = sub_209EE06B8;
  return sub_209F33158((uint64_t)v10, v11, v12, v5, v7, v8, v9, v2);
}

uint64_t sub_209F35D90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_209F35DFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v5 = v0 + ((v4 + 64) & ~v4);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_209EE06B8;
  return sub_209F333F8((uint64_t)v6, v7, v8, v5, v2, v9, v3);
}

uint64_t sub_209F35E70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v1 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v2 - 8);
  v6 = (v4 + *(_QWORD *)(v3 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v1);
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v2);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_209F35F38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *(_QWORD *)(*(_QWORD *)(v0 + 32) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v0 + v3;
  v5 = v0
     + ((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 40) - 8) + 64)
       + ((v3 + *(_QWORD *)(v2 + 64) + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 40) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 40) - 8) + 80))
       + 7) & 0xFFFFFFFFFFFFFFF8);
  v6 = *(_QWORD *)v5;
  v7 = *(_QWORD *)(v5 + 8);
  v8 = *(_BYTE *)(v5 + 16);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_209EE06B8;
  return sub_209F33898((uint64_t)v9, v10, v11, v4, v12, v6, v7, v8);
}

uint64_t sub_209F35FFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC110);
    v3 = sub_209F676C0();
    v4 = 0;
    v5 = v3 + 56;
    v25 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v25 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      sub_209F67B10();
      swift_bridgeObjectRetain();
      sub_209F6733C();
      result = sub_209F67B28();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = *(_QWORD *)(v3 + 48);
        v16 = (_QWORD *)(v15 + 16 * v11);
        v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (result = sub_209F679A8(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        v18 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v18;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v19 = (_QWORD *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            result = sub_209F679A8();
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v21 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
      *v21 = v8;
      v21[1] = v7;
      v22 = *(_QWORD *)(v3 + 16);
      v23 = __OFADD__(v22, 1);
      v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x24BEE4B08];
}

unint64_t sub_209F361A0()
{
  unint64_t result;

  result = qword_2545BC0D0;
  if (!qword_2545BC0D0)
  {
    result = MEMORY[0x20BD1DB1C](&protocol conformance descriptor for URLLoadingMode, &type metadata for URLLoadingMode);
    atomic_store(result, (unint64_t *)&qword_2545BC0D0);
  }
  return result;
}

unint64_t sub_209F361E8()
{
  unint64_t result;

  result = qword_2545BC0D8;
  if (!qword_2545BC0D8)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F79C44, &type metadata for URLLoadingParameters.DefaultCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BC0D8);
  }
  return result;
}

unint64_t sub_209F36230()
{
  unint64_t result;

  result = qword_2545BC0E0;
  if (!qword_2545BC0E0)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F79D5C, &type metadata for URLLoadingParameters.DefaultCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BC0E0);
  }
  return result;
}

unint64_t sub_209F36278()
{
  unint64_t result;

  result = qword_2545BC0E8;
  if (!qword_2545BC0E8)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F79D34, &type metadata for URLLoadingParameters.DefaultCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BC0E8);
  }
  return result;
}

void sub_209F362BC()
{
  JUMPOUT(0x20BD1DB1CLL);
}

void sub_209F362CC()
{
  JUMPOUT(0x20BD1DB1CLL);
}

unint64_t sub_209F362E0()
{
  unint64_t result;

  result = qword_2545BC0F0;
  if (!qword_2545BC0F0)
  {
    result = MEMORY[0x20BD1DB1C](&protocol conformance descriptor for LegacyRemoteView, &type metadata for LegacyRemoteView);
    atomic_store(result, (unint64_t *)&qword_2545BC0F0);
  }
  return result;
}

ValueMetadata *type metadata accessor for InvalidURLError()
{
  return &type metadata for InvalidURLError;
}

uint64_t storeEnumTagSinglePayload for URLLoadingMode(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_209F36374 + 4 * byte_209F79AE7[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_209F36394 + 4 * byte_209F79AEC[v4]))();
}

_BYTE *sub_209F36374(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_209F36394(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_209F3639C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_209F363A4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_209F363AC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_209F363B4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for URLLoadingMode()
{
  return &type metadata for URLLoadingMode;
}

uint64_t dispatch thunk of HookCapable.hooks.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of HookCapable.clientInfo.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ScriptingCapable.scriptEnvironment.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_209F363E8()
{
  return type metadata accessor for ActivityIndicatorManager(0);
}

uint64_t sub_209F363F0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_209F66B50();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for ActivityIndicatorManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ActivityIndicatorManager.binding(forID:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t *initializeBufferWithCopyOfBuffer for URLLoadingParameters(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_209F66A90();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = a3[5];
    v12 = a3[6];
    v13 = (uint64_t *)((char *)a1 + v11);
    v14 = (uint64_t *)((char *)a2 + v11);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = (uint64_t *)((char *)a1 + v12);
    v17 = (uint64_t *)((char *)a2 + v12);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    v20 = (uint64_t *)((char *)a1 + v19);
    v21 = (uint64_t *)((char *)a2 + v19);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = a3[9];
    v24 = a3[10];
    v25 = (uint64_t *)((char *)a1 + v23);
    v26 = (uint64_t *)((char *)a2 + v23);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    *((_BYTE *)a1 + v24) = *((_BYTE *)a2 + v24);
    v28 = a3[12];
    *(uint64_t *)((char *)a1 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    v29 = (uint64_t *)((char *)a1 + v28);
    v30 = (uint64_t *)((char *)a2 + v28);
    v31 = v30[1];
    *v29 = *v30;
    v29[1] = v31;
    v32 = a3[13];
    v33 = a3[14];
    v34 = (uint64_t *)((char *)a1 + v32);
    v35 = (uint64_t *)((char *)a2 + v32);
    v36 = v35[1];
    *v34 = *v35;
    v34[1] = v36;
    v37 = (uint64_t *)((char *)a1 + v33);
    v38 = (uint64_t *)((char *)a2 + v33);
    v39 = v38[1];
    *v37 = *v38;
    v37[1] = v39;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for URLLoadingParameters(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_209F66A90();
  v3 = *(_QWORD *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2))
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for URLLoadingParameters(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;

  v6 = sub_209F66A90();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[5];
  v10 = a3[6];
  v11 = &a1[v9];
  v12 = &a2[v9];
  v13 = *((_QWORD *)v12 + 1);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *((_QWORD *)v11 + 1) = v13;
  v14 = &a1[v10];
  v15 = &a2[v10];
  v16 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *((_QWORD *)v14 + 1) = v16;
  v17 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = *((_QWORD *)v19 + 1);
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *((_QWORD *)v18 + 1) = v20;
  v21 = a3[9];
  v22 = a3[10];
  v23 = &a1[v21];
  v24 = &a2[v21];
  v25 = *((_QWORD *)v24 + 1);
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *((_QWORD *)v23 + 1) = v25;
  a1[v22] = a2[v22];
  v26 = a3[12];
  *(_QWORD *)&a1[a3[11]] = *(_QWORD *)&a2[a3[11]];
  v27 = &a1[v26];
  v28 = &a2[v26];
  v29 = *((_QWORD *)v28 + 1);
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *((_QWORD *)v27 + 1) = v29;
  v30 = a3[13];
  v31 = a3[14];
  v32 = &a1[v30];
  v33 = &a2[v30];
  v34 = *((_QWORD *)v33 + 1);
  *(_QWORD *)v32 = *(_QWORD *)v33;
  *((_QWORD *)v32 + 1) = v34;
  v35 = &a1[v31];
  v36 = &a2[v31];
  v37 = *((_QWORD *)v36 + 1);
  *(_QWORD *)v35 = *(_QWORD *)v36;
  *((_QWORD *)v35 + 1) = v37;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for URLLoadingParameters(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;

  v6 = sub_209F66A90();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = a3[6];
  v16 = &a1[v15];
  v17 = &a2[v15];
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[7]] = a2[a3[7]];
  v18 = a3[8];
  v19 = &a1[v18];
  v20 = &a2[v18];
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = a3[9];
  v22 = &a1[v21];
  v23 = &a2[v21];
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[10]] = a2[a3[10]];
  *(_QWORD *)&a1[a3[11]] = *(_QWORD *)&a2[a3[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 = a3[12];
  v25 = &a1[v24];
  v26 = &a2[v24];
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *((_QWORD *)v25 + 1) = *((_QWORD *)v26 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v27 = a3[13];
  v28 = &a1[v27];
  v29 = &a2[v27];
  *(_QWORD *)v28 = *(_QWORD *)v29;
  *((_QWORD *)v28 + 1) = *((_QWORD *)v29 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v30 = a3[14];
  v31 = &a1[v30];
  v32 = &a2[v30];
  *(_QWORD *)v31 = *(_QWORD *)v32;
  *((_QWORD *)v31 + 1) = *((_QWORD *)v32 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for URLLoadingParameters(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_209F66A90();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(_OWORD *)&a1[v9] = *(_OWORD *)&a2[v9];
  v10 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  *(_OWORD *)&a1[v10] = *(_OWORD *)&a2[v10];
  v11 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  a1[v11] = a2[v11];
  v12 = a3[12];
  *(_QWORD *)&a1[a3[11]] = *(_QWORD *)&a2[a3[11]];
  *(_OWORD *)&a1[v12] = *(_OWORD *)&a2[v12];
  v13 = a3[14];
  *(_OWORD *)&a1[a3[13]] = *(_OWORD *)&a2[a3[13]];
  *(_OWORD *)&a1[v13] = *(_OWORD *)&a2[v13];
  return a1;
}

char *assignWithTake for URLLoadingParameters(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;

  v6 = sub_209F66A90();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v16 = *(_QWORD *)v14;
  v15 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v13 = v16;
  *((_QWORD *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  v17 = a3[6];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v21 = *(_QWORD *)v19;
  v20 = *((_QWORD *)v19 + 1);
  *(_QWORD *)v18 = v21;
  *((_QWORD *)v18 + 1) = v20;
  swift_bridgeObjectRelease();
  v22 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  v23 = &a1[v22];
  v24 = &a2[v22];
  v26 = *(_QWORD *)v24;
  v25 = *((_QWORD *)v24 + 1);
  *(_QWORD *)v23 = v26;
  *((_QWORD *)v23 + 1) = v25;
  swift_bridgeObjectRelease();
  v27 = a3[9];
  v28 = &a1[v27];
  v29 = &a2[v27];
  v31 = *(_QWORD *)v29;
  v30 = *((_QWORD *)v29 + 1);
  *(_QWORD *)v28 = v31;
  *((_QWORD *)v28 + 1) = v30;
  swift_bridgeObjectRelease();
  v32 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  *(_QWORD *)&a1[v32] = *(_QWORD *)&a2[v32];
  swift_bridgeObjectRelease();
  v33 = a3[12];
  v34 = &a1[v33];
  v35 = &a2[v33];
  v37 = *(_QWORD *)v35;
  v36 = *((_QWORD *)v35 + 1);
  *(_QWORD *)v34 = v37;
  *((_QWORD *)v34 + 1) = v36;
  swift_bridgeObjectRelease();
  v38 = a3[13];
  v39 = &a1[v38];
  v40 = &a2[v38];
  v42 = *(_QWORD *)v40;
  v41 = *((_QWORD *)v40 + 1);
  *(_QWORD *)v39 = v42;
  *((_QWORD *)v39 + 1) = v41;
  swift_bridgeObjectRelease();
  v43 = a3[14];
  v44 = &a1[v43];
  v45 = &a2[v43];
  v47 = *(_QWORD *)v45;
  v46 = *((_QWORD *)v45 + 1);
  *(_QWORD *)v44 = v47;
  *((_QWORD *)v44 + 1) = v46;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for URLLoadingParameters()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_209F36E10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for URLLoadingParameters()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_209F36EA0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

void sub_209F36F20()
{
  unint64_t v0;

  sub_209EE0664();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t getEnumTagSinglePayload for URLLoadingParameters.DefaultCodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF7)
    goto LABEL_17;
  if (a2 + 9 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 9) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 9;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 9;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 9;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v8 = v6 - 10;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for URLLoadingParameters.DefaultCodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_209F370A8 + 4 * byte_209F79AF6[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_209F370DC + 4 * byte_209F79AF1[v4]))();
}

uint64_t sub_209F370DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_209F370E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x209F370ECLL);
  return result;
}

uint64_t sub_209F370F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x209F37100);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_209F37104(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_209F3710C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for URLLoadingParameters.DefaultCodingKeys()
{
  return &type metadata for URLLoadingParameters.DefaultCodingKeys;
}

uint64_t sub_209F37128()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t _s6LiftUIO16UnkeyedContainerV3KeyVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s6LiftUIO16UnkeyedContainerV3KeyVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s6LiftUIO16UnkeyedContainerV3KeyVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t _s6LiftUIO16UnkeyedContainerV3KeyVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 25))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s6LiftUIO16UnkeyedContainerV3KeyVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for URLLoadingParameters.RawKey(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for URLLoadingParameters.RawKey);
}

uint64_t sub_209F372B8()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_209F372C0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_209F675DC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_209F3733C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  size_t v11;
  unsigned int (*v12)(uint64_t *, uint64_t, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  _QWORD *v16;
  void *v17;
  _QWORD *v18;
  void *v19;
  _QWORD *v20;
  void *v21;
  _QWORD *v22;
  void *v23;
  _QWORD *v24;
  void *v25;
  _QWORD *v26;
  void *v27;
  _QWORD *v28;
  void *v29;
  _QWORD *v30;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if (*(_DWORD *)(v6 + 84))
    v7 = *(_QWORD *)(v6 + 64);
  else
    v7 = *(_QWORD *)(v6 + 64) + 1;
  v8 = *(_DWORD *)(v6 + 80);
  v9 = ~v8;
  v10 = *(_DWORD *)(v6 + 80) <= 7u && (*(_DWORD *)(v6 + 80) & 0x100000) == 0;
  if (v10
    && (v11 = v7 + v8,
        ((v7
        + v8
        + ((v7
          + v8
          + ((v7
            + v8
            + ((v7
              + v8
              + ((v7 + v8 + ((v7 + v8 + ((v7 + v8 + ((v7 + v8 + ((v7 + v8) & ~v8)) & ~v8)) & ~v8)) & ~v8)) & ~v8)) & ~v8)) & ~v8)) & ~v8)) & ~v8)
      + v7 <= 0x18))
  {
    v12 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v6 + 48);
    if (v12(a2, 1, *(_QWORD *)(a3 + 16)))
    {
      memcpy(a1, a2, v7);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    }
    v14 = (_QWORD *)(((unint64_t)a2 + v11) & v9);
    if (v12(v14, 1, v5))
    {
      memcpy((void *)(((unint64_t)a1 + v11) & v9), v14, v7);
    }
    else
    {
      (*(void (**)(unint64_t, _QWORD *, uint64_t))(v6 + 16))(((unint64_t)a1 + v11) & v9, v14, v5);
      (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(((unint64_t)a1 + v11) & v9, 0, 1, v5);
    }
    v15 = (void *)((v11 + (((unint64_t)a1 + v11) & v9)) & v9);
    v16 = (_QWORD *)(((unint64_t)v14 + v11) & v9);
    if (v12(v16, 1, v5))
    {
      memcpy(v15, v16, v7);
    }
    else
    {
      (*(void (**)(void *, _QWORD *, uint64_t))(v6 + 16))(v15, v16, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v15, 0, 1, v5);
    }
    v17 = (void *)(((unint64_t)v15 + v11) & v9);
    v18 = (_QWORD *)(((unint64_t)v16 + v11) & v9);
    if (v12(v18, 1, v5))
    {
      memcpy(v17, v18, v7);
    }
    else
    {
      (*(void (**)(void *, _QWORD *, uint64_t))(v6 + 16))(v17, v18, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v17, 0, 1, v5);
    }
    v19 = (void *)(((unint64_t)v17 + v11) & v9);
    v20 = (_QWORD *)(((unint64_t)v18 + v11) & v9);
    if (v12(v20, 1, v5))
    {
      memcpy(v19, v20, v7);
    }
    else
    {
      (*(void (**)(void *, _QWORD *, uint64_t))(v6 + 16))(v19, v20, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v19, 0, 1, v5);
    }
    v21 = (void *)(((unint64_t)v19 + v11) & v9);
    v22 = (_QWORD *)(((unint64_t)v20 + v11) & v9);
    if (v12(v22, 1, v5))
    {
      memcpy(v21, v22, v7);
    }
    else
    {
      (*(void (**)(void *, _QWORD *, uint64_t))(v6 + 16))(v21, v22, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v21, 0, 1, v5);
    }
    v23 = (void *)(((unint64_t)v21 + v11) & v9);
    v24 = (_QWORD *)(((unint64_t)v22 + v11) & v9);
    if (v12(v24, 1, v5))
    {
      memcpy(v23, v24, v7);
    }
    else
    {
      (*(void (**)(void *, _QWORD *, uint64_t))(v6 + 16))(v23, v24, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v23, 0, 1, v5);
    }
    v25 = (void *)(((unint64_t)v23 + v11) & v9);
    v26 = (_QWORD *)(((unint64_t)v24 + v11) & v9);
    if (v12(v26, 1, v5))
    {
      memcpy(v25, v26, v7);
    }
    else
    {
      (*(void (**)(void *, _QWORD *, uint64_t))(v6 + 16))(v25, v26, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v25, 0, 1, v5);
    }
    v27 = (void *)(((unint64_t)v25 + v11) & v9);
    v28 = (_QWORD *)(((unint64_t)v26 + v11) & v9);
    if (v12(v28, 1, v5))
    {
      memcpy(v27, v28, v7);
    }
    else
    {
      (*(void (**)(void *, _QWORD *, uint64_t))(v6 + 16))(v27, v28, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v27, 0, 1, v5);
    }
    v29 = (void *)(((unint64_t)v27 + v11) & v9);
    v30 = (_QWORD *)(((unint64_t)v28 + v11) & v9);
    if (v12(v30, 1, v5))
    {
      memcpy(v29, v30, v7);
    }
    else
    {
      (*(void (**)(void *, _QWORD *, uint64_t))(v6 + 16))(v29, v30, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v29, 0, 1, v5);
    }
  }
  else
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v8 + 16) & v9));
    swift_retain();
  }
  return a1;
}

uint64_t sub_209F377FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned int (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (!v5(a1, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  if (*(_DWORD *)(v4 + 84))
    v6 = *(_QWORD *)(v4 + 64);
  else
    v6 = *(_QWORD *)(v4 + 64) + 1;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = v6 + v7;
  v9 = ~v7;
  v10 = (v6 + v7 + a1) & ~v7;
  if (!v5(v10, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v10, v3);
  v11 = (v8 + v10) & v9;
  if (!v5(v11, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v11, v3);
  v12 = (v8 + v11) & v9;
  if (!v5(v12, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v12, v3);
  v13 = (v8 + v12) & v9;
  if (!v5(v13, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v13, v3);
  v14 = (v8 + v13) & v9;
  if (!v5(v14, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v14, v3);
  v15 = (v8 + v14) & v9;
  if (!v5(v15, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v15, v3);
  v16 = (v8 + v15) & v9;
  if (!v5(v16, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v16, v3);
  v17 = (v8 + v16) & v9;
  if (!v5(v17, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v17, v3);
  v18 = (v8 + v17) & v9;
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v5)(v18, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v18, v3);
  return result;
}

void *sub_209F37A0C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(const void *, uint64_t, uint64_t);
  int v8;
  size_t v9;
  size_t v10;
  size_t v11;
  uint64_t v12;
  size_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  void *v17;
  const void *v18;
  void *v19;
  const void *v20;
  void *v21;
  const void *v22;
  void *v23;
  const void *v24;
  void *v25;
  const void *v26;
  void *v27;
  const void *v28;
  void *v29;
  const void *v30;
  void *v31;
  const void *v32;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48);
  if (v7(a2, 1, v5))
  {
    v8 = *(_DWORD *)(v6 + 84);
    v9 = *(_QWORD *)(v6 + 64);
    if (v8)
      v10 = *(_QWORD *)(v6 + 64);
    else
      v10 = v9 + 1;
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    v8 = *(_DWORD *)(v6 + 84);
    v9 = *(_QWORD *)(v6 + 64);
  }
  if (v8)
    v11 = v9;
  else
    v11 = v9 + 1;
  v12 = *(unsigned __int8 *)(v6 + 80);
  v13 = v11 + v12;
  v14 = ~v12;
  v15 = (void *)(((unint64_t)a1 + v11 + v12) & ~v12);
  v16 = (const void *)(((unint64_t)a2 + v11 + v12) & ~v12);
  if (v7(v16, 1, v5))
  {
    memcpy(v15, v16, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v15, v16, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v15, 0, 1, v5);
  }
  v17 = (void *)(((unint64_t)v15 + v13) & v14);
  v18 = (const void *)(((unint64_t)v16 + v13) & v14);
  if (v7(v18, 1, v5))
  {
    memcpy(v17, v18, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v17, v18, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v17, 0, 1, v5);
  }
  v19 = (void *)(((unint64_t)v17 + v13) & v14);
  v20 = (const void *)(((unint64_t)v18 + v13) & v14);
  if (v7(v20, 1, v5))
  {
    memcpy(v19, v20, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v19, v20, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v19, 0, 1, v5);
  }
  v21 = (void *)(((unint64_t)v19 + v13) & v14);
  v22 = (const void *)(((unint64_t)v20 + v13) & v14);
  if (v7(v22, 1, v5))
  {
    memcpy(v21, v22, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v21, v22, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v21, 0, 1, v5);
  }
  v23 = (void *)(((unint64_t)v21 + v13) & v14);
  v24 = (const void *)(((unint64_t)v22 + v13) & v14);
  if (v7(v24, 1, v5))
  {
    memcpy(v23, v24, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v23, v24, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v23, 0, 1, v5);
  }
  v25 = (void *)(((unint64_t)v23 + v13) & v14);
  v26 = (const void *)(((unint64_t)v24 + v13) & v14);
  if (v7(v26, 1, v5))
  {
    memcpy(v25, v26, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v25, v26, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v25, 0, 1, v5);
  }
  v27 = (void *)(((unint64_t)v25 + v13) & v14);
  v28 = (const void *)(((unint64_t)v26 + v13) & v14);
  if (v7(v28, 1, v5))
  {
    memcpy(v27, v28, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v27, v28, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v27, 0, 1, v5);
  }
  v29 = (void *)(((unint64_t)v27 + v13) & v14);
  v30 = (const void *)(((unint64_t)v28 + v13) & v14);
  if (v7(v30, 1, v5))
  {
    memcpy(v29, v30, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v29, v30, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v29, 0, 1, v5);
  }
  v31 = (void *)(((unint64_t)v29 + v13) & v14);
  v32 = (const void *)(((unint64_t)v30 + v13) & v14);
  if (v7(v32, 1, v5))
  {
    memcpy(v31, v32, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v31, v32, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v31, 0, 1, v5);
  }
  return a1;
}

void *sub_209F37E5C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  int v8;
  int v9;
  size_t v10;
  size_t v11;
  uint64_t v12;
  size_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  int v17;
  int v18;
  void *v19;
  void *v20;
  int v21;
  int v22;
  void *v23;
  void *v24;
  int v25;
  int v26;
  void *v27;
  void *v28;
  int v29;
  int v30;
  void *v31;
  void *v32;
  int v33;
  int v34;
  void *v35;
  void *v36;
  int v37;
  int v38;
  void *v39;
  void *v40;
  int v41;
  int v42;
  void *v43;
  void *v44;
  int v45;
  int v46;
  void *v47;
  void *v48;
  int v49;
  int v50;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v6 + 64) + 1;
  memcpy(a1, a2, v10);
LABEL_10:
  if (*(_DWORD *)(v6 + 84))
    v11 = *(_QWORD *)(v6 + 64);
  else
    v11 = *(_QWORD *)(v6 + 64) + 1;
  v12 = *(unsigned __int8 *)(v6 + 80);
  v13 = v11 + v12;
  v14 = ~v12;
  v15 = (void *)(((unint64_t)a1 + v11 + v12) & ~v12);
  v16 = (void *)(((unint64_t)a2 + v11 + v12) & ~v12);
  v17 = v7(v15, 1, v5);
  v18 = v7(v16, 1, v5);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(v15, v16, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v15, 0, 1, v5);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v6 + 8))(v15, v5);
LABEL_18:
    memcpy(v15, v16, v11);
    goto LABEL_19;
  }
  (*(void (**)(void *, void *, uint64_t))(v6 + 24))(v15, v16, v5);
LABEL_19:
  v19 = (void *)(((unint64_t)v15 + v13) & v14);
  v20 = (void *)(((unint64_t)v16 + v13) & v14);
  v21 = v7(v19, 1, v5);
  v22 = v7(v20, 1, v5);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(v19, v20, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v19, 0, 1, v5);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v22)
  {
    (*(void (**)(void *, uint64_t))(v6 + 8))(v19, v5);
LABEL_24:
    memcpy(v19, v20, v11);
    goto LABEL_25;
  }
  (*(void (**)(void *, void *, uint64_t))(v6 + 24))(v19, v20, v5);
LABEL_25:
  v23 = (void *)(((unint64_t)v19 + v13) & v14);
  v24 = (void *)(((unint64_t)v20 + v13) & v14);
  v25 = v7(v23, 1, v5);
  v26 = v7(v24, 1, v5);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(v23, v24, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v23, 0, 1, v5);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v26)
  {
    (*(void (**)(void *, uint64_t))(v6 + 8))(v23, v5);
LABEL_30:
    memcpy(v23, v24, v11);
    goto LABEL_31;
  }
  (*(void (**)(void *, void *, uint64_t))(v6 + 24))(v23, v24, v5);
LABEL_31:
  v27 = (void *)(((unint64_t)v23 + v13) & v14);
  v28 = (void *)(((unint64_t)v24 + v13) & v14);
  v29 = v7(v27, 1, v5);
  v30 = v7(v28, 1, v5);
  if (v29)
  {
    if (!v30)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(v27, v28, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v27, 0, 1, v5);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v30)
  {
    (*(void (**)(void *, uint64_t))(v6 + 8))(v27, v5);
LABEL_36:
    memcpy(v27, v28, v11);
    goto LABEL_37;
  }
  (*(void (**)(void *, void *, uint64_t))(v6 + 24))(v27, v28, v5);
LABEL_37:
  v31 = (void *)(((unint64_t)v27 + v13) & v14);
  v32 = (void *)(((unint64_t)v28 + v13) & v14);
  v33 = v7(v31, 1, v5);
  v34 = v7(v32, 1, v5);
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(v31, v32, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v31, 0, 1, v5);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v34)
  {
    (*(void (**)(void *, uint64_t))(v6 + 8))(v31, v5);
LABEL_42:
    memcpy(v31, v32, v11);
    goto LABEL_43;
  }
  (*(void (**)(void *, void *, uint64_t))(v6 + 24))(v31, v32, v5);
LABEL_43:
  v35 = (void *)(((unint64_t)v31 + v13) & v14);
  v36 = (void *)(((unint64_t)v32 + v13) & v14);
  v37 = v7(v35, 1, v5);
  v38 = v7(v36, 1, v5);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(v35, v36, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v35, 0, 1, v5);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v38)
  {
    (*(void (**)(void *, uint64_t))(v6 + 8))(v35, v5);
LABEL_48:
    memcpy(v35, v36, v11);
    goto LABEL_49;
  }
  (*(void (**)(void *, void *, uint64_t))(v6 + 24))(v35, v36, v5);
LABEL_49:
  v39 = (void *)(((unint64_t)v35 + v13) & v14);
  v40 = (void *)(((unint64_t)v36 + v13) & v14);
  v41 = v7(v39, 1, v5);
  v42 = v7(v40, 1, v5);
  if (v41)
  {
    if (!v42)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(v39, v40, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v39, 0, 1, v5);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v42)
  {
    (*(void (**)(void *, uint64_t))(v6 + 8))(v39, v5);
LABEL_54:
    memcpy(v39, v40, v11);
    goto LABEL_55;
  }
  (*(void (**)(void *, void *, uint64_t))(v6 + 24))(v39, v40, v5);
LABEL_55:
  v43 = (void *)(((unint64_t)v39 + v13) & v14);
  v44 = (void *)(((unint64_t)v40 + v13) & v14);
  v45 = v7(v43, 1, v5);
  v46 = v7(v44, 1, v5);
  if (v45)
  {
    if (!v46)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(v43, v44, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v43, 0, 1, v5);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v46)
  {
    (*(void (**)(void *, uint64_t))(v6 + 8))(v43, v5);
LABEL_60:
    memcpy(v43, v44, v11);
    goto LABEL_61;
  }
  (*(void (**)(void *, void *, uint64_t))(v6 + 24))(v43, v44, v5);
LABEL_61:
  v47 = (void *)(((unint64_t)v43 + v13) & v14);
  v48 = (void *)(((unint64_t)v44 + v13) & v14);
  v49 = v7(v47, 1, v5);
  v50 = v7(v48, 1, v5);
  if (!v49)
  {
    if (!v50)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(v47, v48, v5);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(v47, v5);
    goto LABEL_66;
  }
  if (v50)
  {
LABEL_66:
    memcpy(v47, v48, v11);
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v6 + 16))(v47, v48, v5);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v47, 0, 1, v5);
  return a1;
}

void *sub_209F38550(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(const void *, uint64_t, uint64_t);
  int v8;
  size_t v9;
  size_t v10;
  size_t v11;
  uint64_t v12;
  size_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  void *v17;
  const void *v18;
  void *v19;
  const void *v20;
  void *v21;
  const void *v22;
  void *v23;
  const void *v24;
  void *v25;
  const void *v26;
  void *v27;
  const void *v28;
  void *v29;
  const void *v30;
  void *v31;
  const void *v32;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48);
  if (v7(a2, 1, v5))
  {
    v8 = *(_DWORD *)(v6 + 84);
    v9 = *(_QWORD *)(v6 + 64);
    if (v8)
      v10 = *(_QWORD *)(v6 + 64);
    else
      v10 = v9 + 1;
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    v8 = *(_DWORD *)(v6 + 84);
    v9 = *(_QWORD *)(v6 + 64);
  }
  if (v8)
    v11 = v9;
  else
    v11 = v9 + 1;
  v12 = *(unsigned __int8 *)(v6 + 80);
  v13 = v11 + v12;
  v14 = ~v12;
  v15 = (void *)(((unint64_t)a1 + v11 + v12) & ~v12);
  v16 = (const void *)(((unint64_t)a2 + v11 + v12) & ~v12);
  if (v7(v16, 1, v5))
  {
    memcpy(v15, v16, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(v15, v16, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v15, 0, 1, v5);
  }
  v17 = (void *)(((unint64_t)v15 + v13) & v14);
  v18 = (const void *)(((unint64_t)v16 + v13) & v14);
  if (v7(v18, 1, v5))
  {
    memcpy(v17, v18, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(v17, v18, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v17, 0, 1, v5);
  }
  v19 = (void *)(((unint64_t)v17 + v13) & v14);
  v20 = (const void *)(((unint64_t)v18 + v13) & v14);
  if (v7(v20, 1, v5))
  {
    memcpy(v19, v20, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(v19, v20, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v19, 0, 1, v5);
  }
  v21 = (void *)(((unint64_t)v19 + v13) & v14);
  v22 = (const void *)(((unint64_t)v20 + v13) & v14);
  if (v7(v22, 1, v5))
  {
    memcpy(v21, v22, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(v21, v22, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v21, 0, 1, v5);
  }
  v23 = (void *)(((unint64_t)v21 + v13) & v14);
  v24 = (const void *)(((unint64_t)v22 + v13) & v14);
  if (v7(v24, 1, v5))
  {
    memcpy(v23, v24, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(v23, v24, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v23, 0, 1, v5);
  }
  v25 = (void *)(((unint64_t)v23 + v13) & v14);
  v26 = (const void *)(((unint64_t)v24 + v13) & v14);
  if (v7(v26, 1, v5))
  {
    memcpy(v25, v26, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(v25, v26, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v25, 0, 1, v5);
  }
  v27 = (void *)(((unint64_t)v25 + v13) & v14);
  v28 = (const void *)(((unint64_t)v26 + v13) & v14);
  if (v7(v28, 1, v5))
  {
    memcpy(v27, v28, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(v27, v28, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v27, 0, 1, v5);
  }
  v29 = (void *)(((unint64_t)v27 + v13) & v14);
  v30 = (const void *)(((unint64_t)v28 + v13) & v14);
  if (v7(v30, 1, v5))
  {
    memcpy(v29, v30, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(v29, v30, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v29, 0, 1, v5);
  }
  v31 = (void *)(((unint64_t)v29 + v13) & v14);
  v32 = (const void *)(((unint64_t)v30 + v13) & v14);
  if (v7(v32, 1, v5))
  {
    memcpy(v31, v32, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(v31, v32, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v31, 0, 1, v5);
  }
  return a1;
}

void *sub_209F389A0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  int v8;
  int v9;
  size_t v10;
  size_t v11;
  uint64_t v12;
  size_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  int v17;
  int v18;
  void *v19;
  void *v20;
  int v21;
  int v22;
  void *v23;
  void *v24;
  int v25;
  int v26;
  void *v27;
  void *v28;
  int v29;
  int v30;
  void *v31;
  void *v32;
  int v33;
  int v34;
  void *v35;
  void *v36;
  int v37;
  int v38;
  void *v39;
  void *v40;
  int v41;
  int v42;
  void *v43;
  void *v44;
  int v45;
  int v46;
  void *v47;
  void *v48;
  int v49;
  int v50;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v6 + 64) + 1;
  memcpy(a1, a2, v10);
LABEL_10:
  if (*(_DWORD *)(v6 + 84))
    v11 = *(_QWORD *)(v6 + 64);
  else
    v11 = *(_QWORD *)(v6 + 64) + 1;
  v12 = *(unsigned __int8 *)(v6 + 80);
  v13 = v11 + v12;
  v14 = ~v12;
  v15 = (void *)(((unint64_t)a1 + v11 + v12) & ~v12);
  v16 = (void *)(((unint64_t)a2 + v11 + v12) & ~v12);
  v17 = v7(v15, 1, v5);
  v18 = v7(v16, 1, v5);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(v15, v16, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v15, 0, 1, v5);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v6 + 8))(v15, v5);
LABEL_18:
    memcpy(v15, v16, v11);
    goto LABEL_19;
  }
  (*(void (**)(void *, void *, uint64_t))(v6 + 40))(v15, v16, v5);
LABEL_19:
  v19 = (void *)(((unint64_t)v15 + v13) & v14);
  v20 = (void *)(((unint64_t)v16 + v13) & v14);
  v21 = v7(v19, 1, v5);
  v22 = v7(v20, 1, v5);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(v19, v20, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v19, 0, 1, v5);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v22)
  {
    (*(void (**)(void *, uint64_t))(v6 + 8))(v19, v5);
LABEL_24:
    memcpy(v19, v20, v11);
    goto LABEL_25;
  }
  (*(void (**)(void *, void *, uint64_t))(v6 + 40))(v19, v20, v5);
LABEL_25:
  v23 = (void *)(((unint64_t)v19 + v13) & v14);
  v24 = (void *)(((unint64_t)v20 + v13) & v14);
  v25 = v7(v23, 1, v5);
  v26 = v7(v24, 1, v5);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(v23, v24, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v23, 0, 1, v5);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v26)
  {
    (*(void (**)(void *, uint64_t))(v6 + 8))(v23, v5);
LABEL_30:
    memcpy(v23, v24, v11);
    goto LABEL_31;
  }
  (*(void (**)(void *, void *, uint64_t))(v6 + 40))(v23, v24, v5);
LABEL_31:
  v27 = (void *)(((unint64_t)v23 + v13) & v14);
  v28 = (void *)(((unint64_t)v24 + v13) & v14);
  v29 = v7(v27, 1, v5);
  v30 = v7(v28, 1, v5);
  if (v29)
  {
    if (!v30)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(v27, v28, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v27, 0, 1, v5);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v30)
  {
    (*(void (**)(void *, uint64_t))(v6 + 8))(v27, v5);
LABEL_36:
    memcpy(v27, v28, v11);
    goto LABEL_37;
  }
  (*(void (**)(void *, void *, uint64_t))(v6 + 40))(v27, v28, v5);
LABEL_37:
  v31 = (void *)(((unint64_t)v27 + v13) & v14);
  v32 = (void *)(((unint64_t)v28 + v13) & v14);
  v33 = v7(v31, 1, v5);
  v34 = v7(v32, 1, v5);
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(v31, v32, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v31, 0, 1, v5);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v34)
  {
    (*(void (**)(void *, uint64_t))(v6 + 8))(v31, v5);
LABEL_42:
    memcpy(v31, v32, v11);
    goto LABEL_43;
  }
  (*(void (**)(void *, void *, uint64_t))(v6 + 40))(v31, v32, v5);
LABEL_43:
  v35 = (void *)(((unint64_t)v31 + v13) & v14);
  v36 = (void *)(((unint64_t)v32 + v13) & v14);
  v37 = v7(v35, 1, v5);
  v38 = v7(v36, 1, v5);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(v35, v36, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v35, 0, 1, v5);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v38)
  {
    (*(void (**)(void *, uint64_t))(v6 + 8))(v35, v5);
LABEL_48:
    memcpy(v35, v36, v11);
    goto LABEL_49;
  }
  (*(void (**)(void *, void *, uint64_t))(v6 + 40))(v35, v36, v5);
LABEL_49:
  v39 = (void *)(((unint64_t)v35 + v13) & v14);
  v40 = (void *)(((unint64_t)v36 + v13) & v14);
  v41 = v7(v39, 1, v5);
  v42 = v7(v40, 1, v5);
  if (v41)
  {
    if (!v42)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(v39, v40, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v39, 0, 1, v5);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v42)
  {
    (*(void (**)(void *, uint64_t))(v6 + 8))(v39, v5);
LABEL_54:
    memcpy(v39, v40, v11);
    goto LABEL_55;
  }
  (*(void (**)(void *, void *, uint64_t))(v6 + 40))(v39, v40, v5);
LABEL_55:
  v43 = (void *)(((unint64_t)v39 + v13) & v14);
  v44 = (void *)(((unint64_t)v40 + v13) & v14);
  v45 = v7(v43, 1, v5);
  v46 = v7(v44, 1, v5);
  if (v45)
  {
    if (!v46)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(v43, v44, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v43, 0, 1, v5);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v46)
  {
    (*(void (**)(void *, uint64_t))(v6 + 8))(v43, v5);
LABEL_60:
    memcpy(v43, v44, v11);
    goto LABEL_61;
  }
  (*(void (**)(void *, void *, uint64_t))(v6 + 40))(v43, v44, v5);
LABEL_61:
  v47 = (void *)(((unint64_t)v43 + v13) & v14);
  v48 = (void *)(((unint64_t)v44 + v13) & v14);
  v49 = v7(v47, 1, v5);
  v50 = v7(v48, 1, v5);
  if (!v49)
  {
    if (!v50)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(v47, v48, v5);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(v47, v5);
    goto LABEL_66;
  }
  if (v50)
  {
LABEL_66:
    memcpy(v47, v48, v11);
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v6 + 32))(v47, v48, v5);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v47, 0, 1, v5);
  return a1;
}

uint64_t sub_209F39094(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  int v12;
  unsigned int v13;
  int v14;
  unsigned int v16;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = v5 - 1;
  if (!v5)
    v6 = 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (!v5)
    ++v7;
  if (!a2)
    return 0;
  v8 = a2 - v6;
  if (a2 > v6)
  {
    v9 = *(unsigned __int8 *)(v4 + 80);
    v10 = ((v7
          + v9
          + ((v7
            + v9
            + ((v7
              + v9
              + ((v7
                + v9
                + ((v7 + v9 + ((v7 + v9 + ((v7 + v9 + ((v7 + v9 + ((v7 + v9) & ~v9)) & ~v9)) & ~v9)) & ~v9)) & ~v9)) & ~v9)) & ~v9)) & ~v9)) & ~v9)
        + v7;
    v11 = 8 * v10;
    if (v10 > 3)
      goto LABEL_8;
    v13 = ((v8 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v13))
    {
      v12 = *(_DWORD *)(a1 + v10);
      if (v12)
        goto LABEL_15;
    }
    else
    {
      if (v13 <= 0xFF)
      {
        if (v13 < 2)
          goto LABEL_22;
LABEL_8:
        v12 = *(unsigned __int8 *)(a1 + v10);
        if (!*(_BYTE *)(a1 + v10))
          goto LABEL_22;
LABEL_15:
        v14 = (v12 - 1) << v11;
        if (v10 > 3)
          v14 = 0;
        if ((_DWORD)v10)
        {
          if (v10 > 3)
            LODWORD(v10) = 4;
          __asm { BR              X12 }
        }
        return v6 + v14 + 1;
      }
      v12 = *(unsigned __int16 *)(a1 + v10);
      if (*(_WORD *)(a1 + v10))
        goto LABEL_15;
    }
  }
LABEL_22:
  if (v5 < 2)
    return 0;
  v16 = (*(uint64_t (**)(void))(v4 + 48))();
  if (v16 >= 2)
    return v16 - 1;
  else
    return 0;
}

void sub_209F3921C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  BOOL v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;

  v6 = 0;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = v8 - 1;
  if (!v8)
    v9 = 0;
  v10 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v10;
  v11 = *(unsigned __int8 *)(v7 + 80);
  v12 = ((v10
        + v11
        + ((v10
          + v11
          + ((v10
            + v11
            + ((v10
              + v11
              + ((v10 + v11 + ((v10 + v11 + ((v10 + v11 + ((v10 + v11 + ((v10 + v11) & ~v11)) & ~v11)) & ~v11)) & ~v11)) & ~v11)) & ~v11)) & ~v11)) & ~v11)) & ~v11)
      + v10;
  v13 = a3 >= v9;
  v14 = a3 - v9;
  if (v14 != 0 && v13)
  {
    if (v12 > 3)
    {
      v6 = 1u;
      if (v9 < a2)
        goto LABEL_15;
      goto LABEL_22;
    }
    v15 = ((v14 + ~(-1 << (8 * v12))) >> (8 * v12)) + 1;
    if (HIWORD(v15))
    {
      v6 = 4u;
      if (v9 < a2)
      {
LABEL_15:
        v16 = ~v9 + a2;
        if (v12 < 4)
        {
          if ((_DWORD)v12)
          {
            v17 = v16 & ~(-1 << (8 * v12));
            bzero(a1, v12);
            if ((_DWORD)v12 == 3)
            {
              *a1 = v17;
              *((_BYTE *)a1 + 2) = BYTE2(v17);
            }
            else if ((_DWORD)v12 == 2)
            {
              *a1 = v17;
            }
            else
            {
              *(_BYTE *)a1 = v17;
            }
          }
        }
        else
        {
          bzero(a1, v12);
          *(_DWORD *)a1 = v16;
        }
        __asm { BR              X10 }
      }
LABEL_22:
      __asm { BR              X11 }
    }
    if (v15 >= 0x100)
      v6 = 2;
    else
      v6 = v15 > 1;
  }
  if (v9 < a2)
    goto LABEL_15;
  goto LABEL_22;
}

void sub_209F39414()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_209F3941C()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

uint64_t dispatch thunk of URLLoadingCapable.objectModel.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of URLLoadingCapable.ruiParentElement.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of URLLoadingCapable.urlLoadingParameters.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of URLLoadingCapable.urlLoadingParameters.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of URLLoadingCapable.urlLoadingParameters.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of URLLoadingCapable.baseURL.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of URLLoadingCapable.defaultURLLoadingMode.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of URLLoadingCapable.activityIndicatorManager.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of URLLoadingCapable.handle(url:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 88) + *(_QWORD *)(a3 + 88));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_209EE061C;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of URLLoadingCapable.destination(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t storeEnumTagSinglePayload for LegacyRemoteView(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_209F3954C + 4 * byte_209F79B0E[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_209F39580 + 4 * byte_209F79B09[v4]))();
}

uint64_t sub_209F39580(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_209F39588(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x209F39590);
  return result;
}

uint64_t sub_209F3959C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x209F395A4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_209F395A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_209F395B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LegacyRemoteView()
{
  return &type metadata for LegacyRemoteView;
}

uint64_t type metadata accessor for NoElement.ScriptInterface()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for NoElement()
{
  return &type metadata for NoElement;
}

ValueMetadata *type metadata accessor for URLLoadingModeEnvironmentKey()
{
  return &type metadata for URLLoadingModeEnvironmentKey;
}

unint64_t sub_209F3960C(uint64_t a1)
{
  unint64_t result;

  result = sub_209F39630();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_209F39630()
{
  unint64_t result;

  result = qword_2545C33D0[0];
  if (!qword_2545C33D0[0])
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7A160, &type metadata for NoElement);
    atomic_store(result, qword_2545C33D0);
  }
  return result;
}

uint64_t sub_209F39674()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = v1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

unint64_t sub_209F396D4()
{
  unint64_t result;

  result = qword_2545BC108;
  if (!qword_2545BC108)
  {
    result = MEMORY[0x20BD1DB1C](&protocol conformance descriptor for URLLoadingMode, &type metadata for URLLoadingMode);
    atomic_store(result, (unint64_t *)&qword_2545BC108);
  }
  return result;
}

uint64_t sub_209F39718()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_209F3974C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(_BYTE *)(v0 + 48);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_209EE06B8;
  return sub_209F339C4((uint64_t)v5, v6, v7, v2, v3, v4);
}

uint64_t HTTPDataSource.request(for:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = a2;
  v3 = sub_209F66A90();
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_209F39820()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 16))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  sub_209F668F8();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t HTTPDataSource.data(for:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_2545BC150 + dword_2545BC150);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_209F00974;
  return v5(a1);
}

uint64_t HTTPDataSource.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t HTTPDataSource.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t HTTPDataSource.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t HTTPDataSource.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_209F39914(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = a2;
  v3 = sub_209F66A90();
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_209F39974(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_2545BC150 + dword_2545BC150);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_209F39D8C;
  return v5(a1);
}

uint64_t sub_209F399D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v7;
  _QWORD *v8;

  v7 = *v3;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_209F39D8C;
  return RemoteUIDataSource.data(for:)(a1, v7, a3);
}

uint64_t sub_209F39A3C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
  v1[3] = swift_task_alloc();
  v2 = sub_209F66A90();
  v1[4] = v2;
  v1[5] = *(_QWORD *)(v2 - 8);
  v1[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_209F39AC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 24);
  sub_209F66904();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_209EF528C(*(_QWORD *)(v0 + 24));
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 32))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
    if ((sub_209F66A24() & 1) != 0)
    {
      v4 = sub_209F66A9C();
      v6 = v5;
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 8))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 32));
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v4, v6);
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 8))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 32));
  }
  *(_QWORD *)(v0 + 56) = objc_msgSend((id)objc_opt_self(), sel_sharedSession);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v7;
  *v7 = v0;
  v7[1] = sub_209F39C54;
  return sub_209F67528();
}

uint64_t sub_209F39C54(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v8;
  void *v10;

  v8 = *v4;
  *(_QWORD *)(v8 + 72) = v3;
  swift_task_dealloc();
  if (v3)
    return swift_task_switch();
  v10 = *(void **)(v8 + 56);

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(a1, a2);
}

uint64_t sub_209F39D10()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for HTTPDataSource()
{
  return objc_opt_self();
}

uint64_t method lookup function for HTTPDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of HTTPDataSource.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

char *sub_209F39D90(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return sub_209F39ED0(a1);
}

uint64_t type metadata accessor for HelpLink()
{
  return objc_opt_self();
}

void *sub_209F39DF0()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC8RemoteUI8HelpLink_ruiObjectModel);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_209F39E3C(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR____TtC8RemoteUI8HelpLink_ruiObjectModel);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*sub_209F39E8C())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

char *sub_209F39ED0(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t *v16;
  uint64_t v17;
  objc_class *v18;
  id v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  objc_super v23;
  _QWORD v24[4];

  v4 = sub_209F66AE4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC8RemoteUI8HelpLink_ruiObjectModel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8RemoteUI8HelpLink____lazy_storage___button] = 0;
  v9 = v1;
  sub_209F66AD8();
  v10 = sub_209F66ACC();
  v12 = v11;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  v13 = (uint64_t *)&v9[OBJC_IVAR____TtC8RemoteUI8HelpLink_id];
  *v13 = v10;
  v13[1] = v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_209F67B40();
  if (v2)
  {

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();

    type metadata accessor for HelpLink();
    swift_deallocPartialClassInstance();
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v24, v24[3]);
    v14 = sub_209F679C0();
    v16 = (uint64_t *)&v9[OBJC_IVAR____TtC8RemoteUI8HelpLink_title];
    *v16 = v14;
    v16[1] = v17;

    v18 = (objc_class *)type metadata accessor for HelpLink();
    v23.receiver = v9;
    v23.super_class = v18;
    v19 = objc_msgSendSuper2(&v23, sel_init);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v9 = (char *)v19;
    v20 = Decoder.decodeRUIAttributeDictionary()();
    sub_209F04D90(v20);
    swift_bridgeObjectRelease();
    v21 = (void *)sub_209F6724C();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_setAttributes_, v21);

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);

  }
  return v9;
}

id sub_209F3A170()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC8RemoteUI8HelpLink____lazy_storage___button;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8RemoteUI8HelpLink____lazy_storage___button);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC8RemoteUI8HelpLink____lazy_storage___button);
  }
  else
  {
    v4 = objc_msgSend((id)objc_opt_self(), sel_accessoryButton);
    v5 = (void *)sub_209F672A0();
    objc_msgSend(v4, sel_setTitle_forState_, v5, 0);

    objc_msgSend(v4, sel_addTarget_action_forControlEvents_, v0, sel_tapped, 64);
    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

void sub_209F3A240(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC8RemoteUI8HelpLink____lazy_storage___button);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8RemoteUI8HelpLink____lazy_storage___button) = a1;

}

void (*sub_209F3A254(id *a1))(uint64_t *a1)
{
  void *v1;

  a1[1] = v1;
  *a1 = sub_209F3A170();
  return sub_209F3A288;
}

void sub_209F3A288(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v2 = *a1;
  v1 = a1[1];
  v3 = *(void **)(v1 + OBJC_IVAR____TtC8RemoteUI8HelpLink____lazy_storage___button);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8RemoteUI8HelpLink____lazy_storage___button) = v2;

}

void sub_209F3A2A0()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  _QWORD v4[6];

  v1 = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x70))();
  if (v1)
  {
    v2 = (void *)v1;
    v4[4] = nullsub_1;
    v4[5] = 0;
    v4[0] = MEMORY[0x24BDAC760];
    v4[1] = 1107296256;
    v4[2] = sub_209EF5F18;
    v4[3] = &block_descriptor_4;
    v3 = _Block_copy(v4);
    objc_msgSend(v2, sel_activateElement_completion_, v0, v3);
    _Block_release(v3);

  }
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

id sub_209F3A49C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HelpLink();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_209F3A52C@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = (_QWORD *)(*v1 + OBJC_IVAR____TtC8RemoteUI8HelpLink_id);
  v3 = v2[1];
  *a1 = *v2;
  a1[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_209F3A548@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 136))();
  if (!v2)
    *a1 = result;
  return result;
}

uint64_t sub_209F3A57C()
{
  uint64_t v0;

  v0 = sub_209F66AE4();
  __swift_allocate_value_buffer(v0, qword_2545C35F8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2545C35F8);
  return sub_209F66AD8();
}

uint64_t sub_209F3A5C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_2545C35F0 != -1)
    swift_once();
  v2 = sub_209F66AE4();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_2545C35F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_209F3A634()
{
  sub_209EE4ABC(&qword_2545BC280, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
  return sub_209F66DCC();
}

uint64_t sub_209F3A69C()
{
  sub_209F3A6D0();
  return sub_209F66EA4();
}

unint64_t sub_209F3A6D0()
{
  unint64_t result;

  result = qword_2545C3610[0];
  if (!qword_2545C3610[0])
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7A4A4, &type metadata for BuddyMLContentID);
    atomic_store(result, qword_2545C3610);
  }
  return result;
}

uint64_t type metadata accessor for BuddyMLRenderer.Content(uint64_t a1)
{
  return sub_209EF257C(a1, (uint64_t *)&unk_2545C3740);
}

uint64_t sub_209F3A728(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_209F3A770@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void **v39;
  int *v40;
  uint64_t v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (**v63)();
  uint64_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  int *v69;
  uint64_t v70;
  uint64_t v71;
  int *v72;
  uint64_t v73;
  uint64_t KeyPath;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  void **v89;

  v85 = a1;
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC1A0);
  MEMORY[0x24BDAC7A8](v68, v2);
  v83 = (uint64_t *)((char *)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB8C0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v78 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_209F66AE4();
  v87 = *(_QWORD *)(v7 - 8);
  v88 = v7;
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (int *)type metadata accessor for BuddyMLRenderer.Content(0);
  v12 = *((_QWORD *)v11 - 1);
  v13 = *(_QWORD *)(v12 + 64);
  v15 = MEMORY[0x24BDAC7A8](v11, v14);
  v16 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15, v17);
  v19 = (char *)&v65 - v18;
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC1A8);
  MEMORY[0x24BDAC7A8](v67, v20);
  v22 = (char *)&v65 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC1B0);
  MEMORY[0x24BDAC7A8](v82, v23);
  v84 = (uint64_t)&v65 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_209F3AD50(v1, (uint64_t)v19);
  v25 = *(unsigned __int8 *)(v12 + 80);
  v26 = (v25 + 16) & ~v25;
  v27 = v26 + v13;
  v28 = v25 | 7;
  v29 = swift_allocObject();
  sub_209F3AD98((uint64_t)v19, v29 + v26);
  sub_209F58E7C();
  v76 = v31;
  v77 = v30;
  v66 = v32;
  KeyPath = swift_getKeyPath();
  v72 = v11;
  v33 = (uint64_t *)(v1 + v11[8]);
  v34 = *v33;
  v35 = v33[1];
  v89 = (void **)v1;
  sub_209F3AD50(v1, (uint64_t)v16);
  v86 = v10;
  if (v34)
  {
    v73 = v34;
    swift_retain();
    sub_209F3B158((uint64_t)v16);
    v65 = v35;
  }
  else
  {
    sub_209F3AD50((uint64_t)v16, (uint64_t)v19);
    v36 = swift_allocObject();
    sub_209F3AD98((uint64_t)v19, v36 + v26);
    v73 = nullsub_1(sub_209F3B10C, v36);
    v65 = v37;
    sub_209F3B158((uint64_t)v16);
  }
  v38 = swift_getKeyPath();
  v39 = v89;
  sub_209F3AD50((uint64_t)v89, (uint64_t)v19);
  v70 = swift_allocObject();
  sub_209F3AD98((uint64_t)v19, v70 + v26);
  v40 = (int *)*v39;
  sub_209F3AD50((uint64_t)v39, (uint64_t)v19);
  v79 = v28;
  v80 = v27;
  v41 = swift_allocObject();
  v81 = v26;
  sub_209F3AD98((uint64_t)v19, v41 + v26);
  v42 = swift_getKeyPath();
  v72 = v40;
  v43 = v40;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC190);
  v45 = (uint64_t)v78;
  MEMORY[0x20BD1C58C](v44);
  v47 = v87;
  v46 = v88;
  v48 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v87 + 48))(v45, 1, v88);
  v75 = v19;
  v71 = v38;
  v69 = v43;
  v49 = v41;
  v50 = v65;
  v51 = v86;
  if (v48 == 1)
  {
    sub_209F66AD8();
    sub_209EE017C(v45, &qword_2545BB8C0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v47 + 32))(v86, v45, v46);
  }
  v52 = v46;
  v53 = v67;
  v54 = v66 & 1;
  v55 = v83;
  (*(void (**)(char *, char *, uint64_t))(v47 + 16))((char *)v83 + *(int *)(v68 + 28), v51, v52);
  *v55 = v42;
  sub_209EE3528((uint64_t)v55, (uint64_t)&v22[*(int *)(v53 + 36)], &qword_2545BC1A0);
  v56 = v76;
  *(_QWORD *)v22 = v77;
  *((_QWORD *)v22 + 1) = v56;
  LODWORD(v78) = v54;
  v22[16] = v54;
  v57 = v73;
  *((_QWORD *)v22 + 3) = KeyPath;
  *((_QWORD *)v22 + 4) = v57;
  v58 = v70;
  v59 = v71;
  *((_QWORD *)v22 + 5) = v50;
  *((_QWORD *)v22 + 6) = v59;
  *((_QWORD *)v22 + 7) = sub_209F3B810;
  *((_QWORD *)v22 + 8) = v58;
  *((_QWORD *)v22 + 9) = v72;
  *((_QWORD *)v22 + 10) = sub_209F3BA00;
  *((_QWORD *)v22 + 11) = v49;
  sub_209F3BB58();
  swift_retain();
  sub_209F0F444(v57);
  swift_retain();
  swift_retain();
  v72 = v69;
  swift_retain();
  sub_209EE017C((uint64_t)v55, &qword_2545BC1A0);
  (*(void (**)(char *, uint64_t))(v87 + 8))(v86, v88);
  sub_209F3BB60();
  swift_release();
  sub_209F0F414(v57);
  swift_release();

  swift_release();
  swift_release();
  v60 = (uint64_t)v75;
  sub_209F3AD50((uint64_t)v89, (uint64_t)v75);
  v61 = swift_allocObject();
  sub_209F3AD98(v60, v61 + v81);
  v62 = v84;
  sub_209EE3528((uint64_t)v22, v84, &qword_2545BC1A8);
  v63 = (uint64_t (**)())(v62 + *(int *)(v82 + 36));
  *v63 = sub_209F3BD18;
  v63[1] = (uint64_t (*)())v61;
  v63[2] = 0;
  v63[3] = 0;
  sub_209EE017C((uint64_t)v22, &qword_2545BC1A8);
  return sub_209EF1E0C(v62, v85, &qword_2545BC1B0);
}

uint64_t sub_209F3AD50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BuddyMLRenderer.Content(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_209F3AD98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BuddyMLRenderer.Content(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_209F3ADDC()
{
  type metadata accessor for BuddyMLRenderer.Content(0);
  return swift_retain();
}

uint64_t sub_209F3AE14@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_209F58594();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_209F3AE3C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  sub_209F0F444(*a1);
  return sub_209F585EC(v1, v2);
}

uint64_t sub_209F3AE7C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_209F66A90();
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v9, a2, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  v12 = type metadata accessor for BuddyMLRenderer.Content(0);
  sub_209F3B194(a1, (uint64_t)v9, *(void **)(a3 + *(int *)(v12 + 44)));
  return sub_209EE017C((uint64_t)v9, &qword_2545BB600);
}

uint64_t objectdestroyTm_3()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  id *v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  char *v13;

  v1 = (int *)type metadata accessor for BuddyMLRenderer.Content(0);
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = (id *)(v0 + ((v2 + 16) & ~v2));

  v4 = (char *)v3 + v1[5];
  swift_release();
  swift_release();
  v5 = &v4[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545BC190) + 32)];
  v6 = sub_209F66AE4();
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
  v8 = (char *)v3 + v1[6];
  swift_release();
  swift_release();
  v9 = &v8[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545BC198) + 32)];
  v10 = sub_209F66A90();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (!v12(v9, 1, v10))
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
  swift_release();
  if (*(id *)((char *)v3 + v1[8]))
    swift_release();
  swift_unknownObjectRelease();
  v13 = (char *)v3 + v1[10];
  if (!v12(v13, 1, v10))
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);

  return swift_deallocObject();
}

uint64_t sub_209F3B10C(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for BuddyMLRenderer.Content(0) - 8) + 80);
  return sub_209F3AE7C(a1, a2, v2 + ((v5 + 16) & ~v5));
}

uint64_t sub_209F3B158(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for BuddyMLRenderer.Content(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_209F3B194(void *a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t *, id *, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t result;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  id v56[3];
  uint64_t v57[4];

  v53 = a3;
  v48 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB8C0);
  v7 = MEMORY[0x24BDAC7A8](v5, v6);
  v54 = (uint64_t)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v9);
  v51 = (char *)&v47 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
  v13 = MEMORY[0x24BDAC7A8](v11, v12);
  v49 = (uint64_t)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13, v15);
  v17 = (char *)&v47 - v16;
  v18 = sub_209F677B0();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18, v20);
  v22 = (char *)&v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = type metadata accessor for RUI.LiftUI.XMLDecoder();
  v23 = (void *)RUI.LiftUI.XMLDecoder.__allocating_init()();
  v24 = type metadata accessor for BuddyMLRenderer.Content(0);
  v25 = *(int *)(v24 + 36);
  v55 = v3;
  v26 = (uint64_t *)(v3 + v25);
  v27 = *v26;
  if (*v26)
  {
    v28 = v24;
    v29 = v26[1];
    swift_unknownObjectRetain();
    v30 = sub_209EE60D0();
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v22, v30, v18);
    type metadata accessor for ResourceLoader();
    v52 = a2;
    sub_209EE3528(a2, (uint64_t)v17, &qword_2545BB600);
    swift_unknownObjectRetain();
    v31 = sub_209EDFA18((uint64_t)v17, v27, v29);
    v57[3] = (uint64_t)&type metadata for DecodingContext;
    sub_209EE5FE8(v31, (uint64_t)v53, v57);
    v53 = v23;
    swift_beginAccess();
    sub_209F0EEA0((uint64_t)v57, (uint64_t)v22);
    swift_endAccess();
    v32 = objc_allocWithZone((Class)RUIXMLElement);
    v33 = (void *)sub_209F672A0();
    v34 = objc_msgSend(v32, sel_initWithName_, v33);

    v35 = objc_allocWithZone((Class)RUIXMLElement);
    v36 = (void *)sub_209F672A0();
    v37 = objc_msgSend(v35, sel_initWithName_, v36);

    objc_msgSend(v34, sel_appendChild_, v37);
    if (v48)
    {
      v38 = v48;
      sub_209EE704C(v57);
      v39 = sub_209F52A90(v57);
      objc_msgSend(v37, sel_appendChild_, v39);

    }
    sub_209EE3528(v52, (uint64_t)v17, &qword_2545BB600);
    v40 = v55;
    sub_209EE3528((uint64_t)v17, v49, &qword_2545BB600);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC198);
    sub_209F671E0();
    sub_209EE017C((uint64_t)v17, &qword_2545BB600);
    v41 = *(_QWORD *)(v40 + *(int *)(v28 + 28) + 8);
    v57[0] = (uint64_t)v34;
    v56[0] = v53;
    v42 = *(void (**)(uint64_t *, id *, uint64_t, uint64_t))(*(_QWORD *)v41 + 136);
    v43 = sub_209EE4ABC((unint64_t *)&qword_2545BBA40, (uint64_t (*)(uint64_t))type metadata accessor for RUI.LiftUI.XMLDecoder, (uint64_t)&protocol conformance descriptor for RUI.LiftUI.XMLDecoder);
    swift_retain();
    v42(v57, v56, v50, v43);
    swift_release();
    v44 = (uint64_t)v51;
    sub_209F66AD8();
    v45 = sub_209F66AE4();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v44, 0, 1, v45);
    sub_209EE3528(v44, v54, &qword_2545BB8C0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC190);
    sub_209F671E0();
    sub_209EE017C(v44, &qword_2545BB8C0);
    swift_release();

    return swift_unknownObjectRelease();
  }
  else
  {
    result = sub_209F677E0();
    __break(1u);
  }
  return result;
}

uint64_t sub_209F3B630()
{
  return sub_209EF5200();
}

uint64_t sub_209F3B650(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_209EE3528(a1, (uint64_t)v5, &qword_2545BB600);
  return sub_209EF5278((uint64_t)v5);
}

uint64_t sub_209F3B6D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_209F66A90();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for BuddyMLRenderer.Content(0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC198);
  MEMORY[0x20BD1C58C](v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    return sub_209EE017C((uint64_t)v5, &qword_2545BB600);
  sub_209EE017C(a1, &qword_2545BB600);
  v13 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v13(v10, v5, v6);
  v13((char *)a1, v10, v6);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
}

uint64_t sub_209F3B810(uint64_t a1)
{
  type metadata accessor for BuddyMLRenderer.Content(0);
  return sub_209F3B6D0(a1);
}

uint64_t sub_209F3B84C(void **a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v4 = type metadata accessor for BuddyMLRenderer.Content(0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
  v10 = MEMORY[0x24BDAC7A8](v8, v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v13);
  v15 = (char *)&v21 - v14;
  v16 = *a1;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC198);
  MEMORY[0x20BD1C58C](v17);
  sub_209F3AD50(a2, (uint64_t)v7);
  v18 = sub_209F66A90();
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v12, 1, v18) == 1)
  {
    sub_209EE3528((uint64_t)&v7[*(int *)(v4 + 40)], (uint64_t)v15, &qword_2545BB600);
    sub_209F3B158((uint64_t)v7);
    sub_209EE017C((uint64_t)v12, &qword_2545BB600);
  }
  else
  {
    sub_209F3B158((uint64_t)v7);
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v15, v12, v18);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v15, 0, 1, v18);
  }
  sub_209F3B194(v16, (uint64_t)v15, *(void **)(a2 + *(int *)(v4 + 44)));
  return sub_209EE017C((uint64_t)v15, &qword_2545BB600);
}

uint64_t sub_209F3BA00(void **a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for BuddyMLRenderer.Content(0) - 8) + 80);
  return sub_209F3B84C(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_209F3BA3C()
{
  sub_209F3A6D0();
  return sub_209F66EA4();
}

uint64_t sub_209F3BA78(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t v13;

  v2 = sub_209F66AE4();
  v3 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x24BDAC7A8](v2, v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v8);
  v10 = (char *)&v13 - v9;
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v11((char *)&v13 - v9, a1, v2);
  v11(v7, (uint64_t)v10, v2);
  sub_209F3A6D0();
  sub_209F66EB0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v10, v2);
}

uint64_t sub_209F3BB58()
{
  return swift_retain();
}

uint64_t sub_209F3BB60()
{
  return swift_release();
}

uint64_t sub_209F3BB68(void **a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v2 = type metadata accessor for BuddyMLRenderer.Content(0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
  v8 = MEMORY[0x24BDAC7A8](v6, v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v11);
  v13 = (char *)&v19 - v12;
  v14 = *a1;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC198);
  MEMORY[0x20BD1C58C](v15);
  sub_209F3AD50((uint64_t)a1, (uint64_t)v5);
  v16 = sub_209F66A90();
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v10, 1, v16) == 1)
  {
    sub_209EE3528((uint64_t)&v5[*(int *)(v2 + 40)], (uint64_t)v13, &qword_2545BB600);
    sub_209F3B158((uint64_t)v5);
    sub_209EE017C((uint64_t)v10, &qword_2545BB600);
  }
  else
  {
    sub_209F3B158((uint64_t)v5);
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v13, v10, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
  }
  sub_209F3B194(v14, (uint64_t)v13, *(void **)((char *)a1 + *(int *)(v2 + 44)));
  return sub_209EE017C((uint64_t)v13, &qword_2545BB600);
}

uint64_t sub_209F3BD18()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for BuddyMLRenderer.Content(0) - 8) + 80);
  return sub_209F3BB68((void **)(v0 + ((v1 + 16) & ~v1)));
}

uint64_t type metadata accessor for BuddyMLRenderer(uint64_t a1)
{
  return sub_209EF257C(a1, qword_2545C3750);
}

uint64_t sub_209F3BD5C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  os_log_type_t v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v6 = sub_209F66E98();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) != 0)
  {
    sub_209F0F444(a1);
  }
  else
  {
    swift_retain();
    v11 = sub_209F67540();
    v12 = sub_209F67030();
    if (os_log_type_enabled(v12, v11))
    {
      v13 = swift_slowAlloc();
      v14 = swift_slowAlloc();
      v16 = v14;
      *(_DWORD *)v13 = 136315138;
      *(_QWORD *)(v13 + 4) = sub_209EE75A0(0xD00000000000001ALL, 0x8000000209F72E30, &v16);
      _os_log_impl(&dword_209E87000, v12, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x20BD1DC00](v14, -1, -1);
      MEMORY[0x20BD1DC00](v13, -1, -1);
    }

    sub_209F66E8C();
    swift_getAtKeyPath();
    sub_209F3BF1C(a1, a2, 0);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    return v16;
  }
  return a1;
}

uint64_t sub_209F3BF10(uint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return sub_209F0F444(result);
  else
    return swift_retain();
}

uint64_t sub_209F3BF1C(uint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return sub_209F0F414(result);
  else
    return swift_release();
}

uint64_t sub_209F3BF28(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  os_log_type_t v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v6 = sub_209F66E98();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) != 0)
  {
    swift_unknownObjectRetain();
  }
  else
  {
    swift_retain();
    v11 = sub_209F67540();
    v12 = sub_209F67030();
    if (os_log_type_enabled(v12, v11))
    {
      v13 = swift_slowAlloc();
      v14 = swift_slowAlloc();
      v16 = v14;
      *(_DWORD *)v13 = 136315138;
      *(_QWORD *)(v13 + 4) = sub_209EE75A0(0xD00000000000001CLL, 0x8000000209F72B80, &v16);
      _os_log_impl(&dword_209E87000, v12, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x20BD1DC00](v14, -1, -1);
      MEMORY[0x20BD1DC00](v13, -1, -1);
    }

    sub_209F66E8C();
    swift_getAtKeyPath();
    sub_209EEC6A4(a1, a2, 0);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    return v16;
  }
  return a1;
}

uint64_t sub_209F3C0D8()
{
  return swift_getKeyPath();
}

uint64_t sub_209F3C0FC()
{
  return swift_getKeyPath();
}

void sub_209F3C120(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  _QWORD v24[15];
  uint64_t v25[6];

  v22 = a3;
  v23 = a1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_209F677B0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for RUI.LiftUI.XMLDecoder();
  RUI.LiftUI.XMLDecoder.__allocating_init()();
  v17 = sub_209EE60D0();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, v17, v12);
  type metadata accessor for ResourceLoader();
  sub_209EE3528(a2, (uint64_t)v11, &qword_2545BB600);
  swift_unknownObjectRetain();
  v18 = sub_209EDFA18((uint64_t)v11, a4, a5);
  v24[3] = &type metadata for DecodingContext;
  sub_209EE5FE8(v18, (uint64_t)v22, v24);
  swift_beginAccess();
  sub_209F0EEA0((uint64_t)v24, (uint64_t)v16);
  swift_endAccess();
  sub_209EE704C(v25);
  v19 = sub_209F52A90(v25);
  sub_209F082D4();
  v20 = v25[5];
  RUI.LiftUI.XMLDecoder.decode<A>(_:from:)((uint64_t)&type metadata for RUIViewContent, v19);
  if (v20)
  {

    swift_release();
  }
  else
  {
    sub_209F08318((uint64_t)v24);
    swift_release();

  }
}

uint64_t sub_209F3C30C@<X0>(_QWORD *a1@<X8>)
{
  void **v1;
  void **v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  int *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  int *v31;
  char *v32;
  uint64_t v33;
  uint64_t *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t result;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
  MEMORY[0x24BDAC7A8](v4, v5);
  v51 = (uint64_t)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC198);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC190);
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v1;
  v16 = (int *)type metadata accessor for BuddyMLRenderer(0);
  v17 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC1B8);
  sub_209F671B0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC1C0);
  sub_209F671B0();
  v18 = v16[8];
  v19 = *(uint64_t *)((char *)v1 + v18);
  v20 = *(uint64_t *)((char *)v2 + v18 + 8);
  v21 = *((_BYTE *)v2 + v18 + 16);
  swift_retain();
  sub_209F3BF10(v19, v20, v21);
  v22 = sub_209F3BD5C(v19, v20, v21);
  v49 = v23;
  v50 = v22;
  sub_209F3BF1C(v19, v20, v21);
  v24 = (char *)v2 + v16[9];
  v25 = *(_QWORD *)v24;
  v26 = *((_QWORD *)v24 + 1);
  v27 = v24[16];
  sub_209EEC024(*(_QWORD *)v24, v26, v27);
  v28 = sub_209F3BF28(v25, v26, v27);
  v47 = v29;
  v48 = v28;
  sub_209EEC6A4(v25, v26, v27);
  sub_209F230B8(v51);
  v30 = *(void **)((char *)v2 + v16[11]);
  v31 = (int *)type metadata accessor for BuddyMLRenderer.Content(0);
  v46 = (char *)a1 + v31[10];
  v32 = v46;
  v33 = sub_209F66A90();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v32, 1, 1, v33);
  *a1 = v15;
  sub_209EE3528((uint64_t)v14, (uint64_t)a1 + v31[5], &qword_2545BC190);
  sub_209EE3528((uint64_t)v10, (uint64_t)a1 + v31[6], &qword_2545BC198);
  v34 = (_QWORD *)((char *)a1 + v31[7]);
  type metadata accessor for SwiftUIContentView.ContentLoader();
  sub_209EE4ABC((unint64_t *)&qword_2545BB890, (uint64_t (*)(uint64_t))type metadata accessor for SwiftUIContentView.ContentLoader, (uint64_t)&unk_209F7B9A8);
  v35 = v30;
  v36 = sub_209F66DD8();
  v38 = v37;
  sub_209EE017C((uint64_t)v10, &qword_2545BC198);
  sub_209EE017C((uint64_t)v14, &qword_2545BC190);
  *v34 = v36;
  v34[1] = v38;
  v39 = (_QWORD *)((char *)a1 + v31[8]);
  v40 = v51;
  v41 = v49;
  *v39 = v50;
  v39[1] = v41;
  v42 = (_QWORD *)((char *)a1 + v31[9]);
  v43 = (uint64_t)v46;
  v44 = v47;
  *v42 = v48;
  v42[1] = v44;
  result = sub_209F3A728(v40, v43);
  *(_QWORD *)((char *)a1 + v31[11]) = v35;
  return result;
}

uint64_t sub_209F3C620@<X0>(uint64_t *a1@<X8>)
{
  *a1 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_209F3C664@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, unsigned __int8 a11, uint64_t a12, uint64_t a13)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  int *v25;
  uint64_t *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  _QWORD v34[2];
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v39 = a7;
  v37 = a5;
  v38 = a6;
  v41 = a8;
  v42 = a13;
  v40 = a12;
  v36 = a11;
  v34[1] = a4;
  v35 = a10;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
  MEMORY[0x24BDAC7A8](v17, v18);
  v20 = (char *)v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB8C0);
  MEMORY[0x24BDAC7A8](v21, v22);
  v24 = (char *)v34 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  *a9 = a1;
  v25 = (int *)type metadata accessor for BuddyMLRenderer(0);
  sub_209EE3528(a2, (uint64_t)v24, &qword_2545BB8C0);
  sub_209F67198();
  sub_209EE017C(a2, &qword_2545BB8C0);
  sub_209EE3528(a3, (uint64_t)v20, &qword_2545BB600);
  sub_209F67198();
  sub_209EE017C(a3, &qword_2545BB600);
  v26 = (_QWORD *)((char *)a9 + v25[7]);
  type metadata accessor for SwiftUIContentView.ContentLoader();
  sub_209EE4ABC((unint64_t *)&qword_2545BB890, (uint64_t (*)(uint64_t))type metadata accessor for SwiftUIContentView.ContentLoader, (uint64_t)&unk_209F7B9A8);
  *v26 = sub_209F66DD8();
  v26[1] = v27;
  v28 = (char *)a9 + v25[8];
  v29 = v38;
  *(_QWORD *)v28 = v37;
  *((_QWORD *)v28 + 1) = v29;
  v28[16] = v39 & 1;
  v30 = (char *)a9 + v25[9];
  v31 = v40;
  v32 = v35;
  *(_QWORD *)v30 = v41;
  *((_QWORD *)v30 + 1) = v32;
  v30[16] = v36 & 1;
  result = sub_209EF1E0C(v31, (uint64_t)a9 + v25[10], &qword_2545BB8B8);
  *(_QWORD *)((char *)a9 + v25[11]) = v42;
  return result;
}

uint64_t sub_209F3C87C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_209F3C88C()
{
  return swift_getOpaqueTypeConformance2();
}

void **sub_209F3C8A0(void **a1, void **a2, int *a3)
{
  int v4;
  char *v5;
  uint64_t v8;
  _QWORD *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  id v45;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = (char *)*a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (void **)&v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    v8 = a3[5];
    v9 = (void **)((char *)a1 + v8);
    v10 = (char *)a2 + v8;
    v11 = *(uint64_t *)((char *)a2 + v8 + 8);
    *v9 = *(void **)((char *)a2 + v8);
    v9[1] = v11;
    v12 = v5;
    swift_retain();
    swift_retain();
    v13 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545BC190) + 32);
    v14 = (char *)v9 + v13;
    v15 = &v10[v13];
    v16 = sub_209F66AE4();
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB8C0);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    v19 = a3[6];
    v20 = (void **)((char *)a1 + v19);
    v21 = (char *)a2 + v19;
    v22 = *(uint64_t *)((char *)a2 + v19 + 8);
    *v20 = *(void **)((char *)a2 + v19);
    v20[1] = v22;
    swift_retain();
    swift_retain();
    v23 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545BC198) + 32);
    v24 = (char *)v20 + v23;
    v25 = &v21[v23];
    v26 = sub_209F66A90();
    v27 = *(_QWORD *)(v26 - 8);
    v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
    if (v28(v25, 1, v26))
    {
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    v30 = a3[7];
    v31 = a3[8];
    v32 = (void **)((char *)a1 + v30);
    v33 = (void **)((char *)a2 + v30);
    v34 = v33[1];
    *v32 = *v33;
    v32[1] = v34;
    v35 = (void **)((char *)a1 + v31);
    v36 = (char *)a2 + v31;
    v37 = *(uint64_t *)((char *)a2 + v31);
    swift_retain();
    if (v37)
    {
      v38 = *((_QWORD *)v36 + 1);
      *v35 = v37;
      v35[1] = v38;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v35 = *(_OWORD *)v36;
    }
    v39 = a3[10];
    *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)((char *)a2 + a3[9]);
    v40 = (char *)a1 + v39;
    v41 = (char *)a2 + v39;
    swift_unknownObjectRetain();
    if (v28(v41, 1, v26))
    {
      v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v40, v41, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v40, 0, 1, v26);
    }
    v43 = a3[11];
    v44 = *(void **)((char *)a2 + v43);
    *(void **)((char *)a1 + v43) = v44;
    v45 = v44;
  }
  return a1;
}

void sub_209F3CB4C(id *a1, int *a2)
{
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  char *v13;

  v4 = (char *)a1 + a2[5];
  swift_release();
  swift_release();
  v5 = &v4[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545BC190) + 32)];
  v6 = sub_209F66AE4();
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
  v8 = (char *)a1 + a2[6];
  swift_release();
  swift_release();
  v9 = &v8[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545BC198) + 32)];
  v10 = sub_209F66A90();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (!v12(v9, 1, v10))
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
  swift_release();
  if (*(id *)((char *)a1 + a2[8]))
    swift_release();
  swift_unknownObjectRelease();
  v13 = (char *)a1 + a2[10];
  if (!v12(v13, 1, v10))
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);

}

void **sub_209F3CCB4(void **a1, void **a2, int *a3)
{
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;

  v6 = *a2;
  *a1 = *a2;
  v7 = a3[5];
  v8 = (void **)((char *)a1 + v7);
  v9 = (char *)a2 + v7;
  v10 = *(uint64_t *)((char *)a2 + v7 + 8);
  *v8 = *(void **)((char *)a2 + v7);
  v8[1] = v10;
  v11 = v6;
  swift_retain();
  swift_retain();
  v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545BC190) + 32);
  v13 = (char *)v8 + v12;
  v14 = &v9[v12];
  v15 = sub_209F66AE4();
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB8C0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v18 = a3[6];
  v19 = (void **)((char *)a1 + v18);
  v20 = (char *)a2 + v18;
  v21 = *(uint64_t *)((char *)a2 + v18 + 8);
  *v19 = *(void **)((char *)a2 + v18);
  v19[1] = v21;
  swift_retain();
  swift_retain();
  v22 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545BC198) + 32);
  v23 = (char *)v19 + v22;
  v24 = &v20[v22];
  v25 = sub_209F66A90();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
  if (v27(v24, 1, v25))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  v29 = a3[7];
  v30 = a3[8];
  v31 = (void **)((char *)a1 + v29);
  v32 = (void **)((char *)a2 + v29);
  v33 = v32[1];
  *v31 = *v32;
  v31[1] = v33;
  v34 = (void **)((char *)a1 + v30);
  v35 = (char *)a2 + v30;
  v36 = *(uint64_t *)((char *)a2 + v30);
  swift_retain();
  if (v36)
  {
    v37 = *((_QWORD *)v35 + 1);
    *v34 = v36;
    v34[1] = v37;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v34 = *(_OWORD *)v35;
  }
  v38 = a3[10];
  *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)((char *)a2 + a3[9]);
  v39 = (char *)a1 + v38;
  v40 = (char *)a2 + v38;
  swift_unknownObjectRetain();
  if (v27(v40, 1, v25))
  {
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v39, v40, v25);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v39, 0, 1, v25);
  }
  v42 = a3[11];
  v43 = *(void **)((char *)a2 + v42);
  *(void **)((char *)a1 + v42) = v43;
  v44 = v43;
  return a1;
}

void **sub_209F3CF3C(void **a1, void **a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t, uint64_t);
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  void *v54;
  id v55;

  v6 = *a1;
  v7 = *a2;
  *a1 = *a2;
  v8 = v7;

  v9 = a3[5];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  *(void **)((char *)a1 + v9) = *(void **)((char *)a2 + v9);
  swift_retain();
  swift_release();
  *((_QWORD *)v10 + 1) = *((_QWORD *)v11 + 1);
  swift_retain();
  swift_release();
  v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545BC190) + 32);
  v13 = &v10[v12];
  v14 = &v11[v12];
  v15 = sub_209F66AE4();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
LABEL_6:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB8C0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v13, v14, v15);
LABEL_7:
  v21 = a3[6];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  *(void **)((char *)a1 + v21) = *(void **)((char *)a2 + v21);
  swift_retain();
  swift_release();
  *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
  swift_retain();
  swift_release();
  v24 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545BC198) + 32);
  v25 = &v22[v24];
  v26 = &v23[v24];
  v27 = sub_209F66A90();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  v30 = v29(v25, 1, v27);
  v31 = v29(v26, 1, v27);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v31)
  {
    (*(void (**)(char *, uint64_t))(v28 + 8))(v25, v27);
LABEL_12:
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v28 + 24))(v25, v26, v27);
LABEL_13:
  v33 = a3[7];
  v34 = (void **)((char *)a1 + v33);
  v35 = (void **)((char *)a2 + v33);
  *v34 = *v35;
  v34[1] = v35[1];
  swift_retain();
  swift_release();
  v36 = a3[8];
  v37 = (void **)((char *)a1 + v36);
  v38 = (char *)a2 + v36;
  v39 = *(uint64_t *)((char *)a1 + v36);
  v40 = *(uint64_t *)((char *)a2 + v36);
  if (v39)
  {
    if (v40)
    {
      v41 = *((_QWORD *)v38 + 1);
      *v37 = v40;
      v37[1] = v41;
      swift_retain();
      swift_release();
      goto LABEL_20;
    }
    sub_209F3D334((uint64_t)v37);
  }
  else if (v40)
  {
    v42 = *((_QWORD *)v38 + 1);
    *v37 = v40;
    v37[1] = v42;
    swift_retain();
    goto LABEL_20;
  }
  *(_OWORD *)v37 = *(_OWORD *)v38;
LABEL_20:
  v43 = a3[9];
  v44 = (void **)((char *)a1 + v43);
  v45 = (void **)((char *)a2 + v43);
  v46 = v45[1];
  *v44 = *v45;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v44[1] = v46;
  v47 = a3[10];
  v48 = (char *)a1 + v47;
  v49 = (char *)a2 + v47;
  LODWORD(v46) = v29((char *)a1 + v47, 1, v27);
  v50 = v29(v49, 1, v27);
  if (!(_DWORD)v46)
  {
    if (!v50)
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 24))(v48, v49, v27);
      goto LABEL_26;
    }
    (*(void (**)(char *, uint64_t))(v28 + 8))(v48, v27);
    goto LABEL_25;
  }
  if (v50)
  {
LABEL_25:
    v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    goto LABEL_26;
  }
  (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v48, v49, v27);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v48, 0, 1, v27);
LABEL_26:
  v52 = a3[11];
  v53 = *(void **)((char *)a2 + v52);
  v54 = *(void **)((char *)a1 + v52);
  *(void **)((char *)a1 + v52) = v53;
  v55 = v53;

  return a1;
}

uint64_t sub_209F3D334(uint64_t a1)
{
  destroy for SwiftUIRow();
  return a1;
}

_QWORD *sub_209F3D368(_QWORD *a1, char *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;

  *a1 = *(_QWORD *)a2;
  v6 = a3[5];
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = &a2[v6];
  v9 = *(_QWORD *)&a2[v6 + 8];
  *v7 = *(_QWORD *)&a2[v6];
  v7[1] = v9;
  v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545BC190) + 32);
  v11 = (char *)v7 + v10;
  v12 = &v8[v10];
  v13 = sub_209F66AE4();
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB8C0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v16 = a3[6];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = &a2[v16];
  v19 = *(_QWORD *)&a2[v16 + 8];
  *v17 = *(_QWORD *)&a2[v16];
  v17[1] = v19;
  v20 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545BC198) + 32);
  v21 = (char *)v17 + v20;
  v22 = &v18[v20];
  v23 = sub_209F66A90();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
  if (v25(v22, 1, v23))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  v27 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)&a2[a3[7]];
  *(_OWORD *)((char *)a1 + v27) = *(_OWORD *)&a2[v27];
  v28 = a3[10];
  *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)&a2[a3[9]];
  v29 = (char *)a1 + v28;
  v30 = &a2[v28];
  if (v25(&a2[v28], 1, v23))
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v29, v30, v23);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v29, 0, 1, v23);
  }
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)&a2[a3[11]];
  return a1;
}

void **sub_209F3D590(void **a1, void **a2, int *a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;

  v6 = *a1;
  *a1 = *a2;

  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  *(void **)((char *)a1 + v7) = *(void **)((char *)a2 + v7);
  swift_release();
  *((_QWORD *)v8 + 1) = *((_QWORD *)v9 + 1);
  swift_release();
  v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545BC190) + 32);
  v11 = &v8[v10];
  v12 = &v9[v10];
  v13 = sub_209F66AE4();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB8C0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v11, v12, v13);
LABEL_7:
  v19 = a3[6];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  *(void **)((char *)a1 + v19) = *(void **)((char *)a2 + v19);
  swift_release();
  *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
  swift_release();
  v22 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545BC198) + 32);
  v23 = &v20[v22];
  v24 = &v21[v22];
  v25 = sub_209F66A90();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
  v28 = v27(v23, 1, v25);
  v29 = v27(v24, 1, v25);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v29)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v23, v25);
LABEL_12:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v26 + 40))(v23, v24, v25);
LABEL_13:
  v31 = a3[7];
  v32 = (void **)((char *)a1 + v31);
  v33 = (uint64_t *)((char *)a2 + v31);
  v35 = *v33;
  v34 = v33[1];
  *v32 = v35;
  v32[1] = v34;
  swift_release();
  v36 = a3[8];
  v37 = (void **)((char *)a1 + v36);
  v38 = (void **)((char *)a2 + v36);
  if (*(void **)((char *)a1 + v36))
  {
    if (*v38)
    {
      v39 = v38[1];
      *v37 = *v38;
      v37[1] = v39;
      swift_release();
      goto LABEL_18;
    }
    sub_209F3D334((uint64_t)v37);
  }
  *(_OWORD *)v37 = *(_OWORD *)v38;
LABEL_18:
  v40 = a3[9];
  v41 = (void **)((char *)a1 + v40);
  v42 = (void **)((char *)a2 + v40);
  v43 = v42[1];
  *v41 = *v42;
  swift_unknownObjectRelease();
  v41[1] = v43;
  v44 = a3[10];
  v45 = (char *)a1 + v44;
  v46 = (char *)a2 + v44;
  v47 = v27((char *)a1 + v44, 1, v25);
  v48 = v27(v46, 1, v25);
  if (!v47)
  {
    if (!v48)
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 40))(v45, v46, v25);
      goto LABEL_24;
    }
    (*(void (**)(char *, uint64_t))(v26 + 8))(v45, v25);
    goto LABEL_23;
  }
  if (v48)
  {
LABEL_23:
    v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    goto LABEL_24;
  }
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v45, v46, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v45, 0, 1, v25);
LABEL_24:
  v50 = a3[11];
  v51 = *(void **)((char *)a1 + v50);
  *(void **)((char *)a1 + v50) = *(void **)((char *)a2 + v50);

  return a1;
}

uint64_t sub_209F3D92C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_209F3D938(uint64_t a1, uint64_t a2, int *a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, &qword_2545BC190, &qword_2545BC198, &qword_2545BB600);
}

uint64_t sub_209F3D954()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_209F3D960(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, &qword_2545BC190, &qword_2545BC198, &qword_2545BB600);
}

void sub_209F3D97C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_209F3EEE0(319, &qword_2545BC1C8, &qword_2545BB8C0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4868]);
  if (v0 <= 0x3F)
  {
    sub_209F3EEE0(319, &qword_2545BC1D0, &qword_2545BB600, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4868]);
    if (v1 <= 0x3F)
    {
      sub_209EE0664();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void **sub_209F3DA78(void **a1, void **a2, int *a3)
{
  int v3;
  char *v4;
  void **v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(_QWORD *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  id v45;
  unsigned int (*v47)(_QWORD *, uint64_t, uint64_t);

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_209F66AE4();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    v14 = v4;
    if (v13(v10, 1, v11))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB8C0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC1B8);
    *(_QWORD *)&v9[*(int *)(v16 + 28)] = *(_QWORD *)&v10[*(int *)(v16 + 28)];
    v17 = a3[6];
    v18 = (char *)v7 + v17;
    v19 = (char *)a2 + v17;
    v20 = sub_209F66A90();
    v21 = *(_QWORD *)(v20 - 8);
    v22 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v21 + 48);
    swift_retain();
    v47 = v22;
    if (v22(v19, 1, v20))
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC1C0);
    *(_QWORD *)&v18[*(int *)(v24 + 28)] = *(_QWORD *)&v19[*(int *)(v24 + 28)];
    v25 = a3[7];
    v26 = a3[8];
    v27 = (void **)((char *)v7 + v25);
    v28 = (void **)((char *)a2 + v25);
    v29 = v28[1];
    *v27 = *v28;
    v27[1] = v29;
    v30 = (char *)v7 + v26;
    v31 = *(uint64_t *)((char *)a2 + v26);
    v32 = *(uint64_t *)((char *)a2 + v26 + 8);
    v33 = *((_BYTE *)a2 + v26 + 16);
    swift_retain();
    swift_retain();
    sub_209F3BF10(v31, v32, v33);
    *(_QWORD *)v30 = v31;
    *((_QWORD *)v30 + 1) = v32;
    v30[16] = v33;
    v34 = a3[9];
    v35 = (char *)v7 + v34;
    v36 = (char *)a2 + v34;
    v37 = *(_QWORD *)v36;
    v38 = *((_QWORD *)v36 + 1);
    LOBYTE(v32) = v36[16];
    sub_209EEC024(*(_QWORD *)v36, v38, v32);
    *(_QWORD *)v35 = v37;
    *((_QWORD *)v35 + 1) = v38;
    v35[16] = v32;
    v39 = a3[10];
    v40 = (void **)((char *)v7 + v39);
    v41 = (void **)((char *)a2 + v39);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if (v47(v41, 1, v20))
      {
        v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v21 + 16))(v40, v41, v20);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v40, 0, 1, v20);
      }
    }
    else
    {
      *v40 = *v41;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v43 = a3[11];
    v44 = *(void **)((char *)a2 + v43);
    *(void **)((char *)v7 + v43) = v44;
    v45 = v44;
  }
  return v7;
}

void sub_209F3DD88(id *a1, int *a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(char *, uint64_t, uint64_t);
  char *v11;

  v4 = (char *)a1 + a2[5];
  v5 = sub_209F66AE4();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC1B8);
  swift_release();
  v7 = (char *)a1 + a2[6];
  v8 = sub_209F66A90();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (!v10(v7, 1, v8))
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC1C0);
  swift_release();
  swift_release();
  sub_209F3BF1C(*(uint64_t *)((char *)a1 + a2[8]), *(uint64_t *)((char *)a1 + a2[8] + 8), *((_BYTE *)a1 + a2[8] + 16));
  sub_209EEC6A4(*(uint64_t *)((char *)a1 + a2[9]), *(uint64_t *)((char *)a1 + a2[9] + 8), *((_BYTE *)a1 + a2[9] + 16));
  v11 = (char *)a1 + a2[10];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    if (!v10(v11, 1, v8))
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    swift_release();
  }

}

void **sub_209F3DF08(void **a1, void **a2, int *a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(_QWORD *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;
  unsigned int (*v46)(_QWORD *, uint64_t, uint64_t);

  v6 = *a2;
  *a1 = *a2;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_209F66AE4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v6;
  if (v12(v9, 1, v10))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB8C0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC1B8);
  *(_QWORD *)&v8[*(int *)(v15 + 28)] = *(_QWORD *)&v9[*(int *)(v15 + 28)];
  v16 = a3[6];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_209F66A90();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v20 + 48);
  swift_retain();
  v46 = v21;
  if (v21(v18, 1, v19))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC1C0);
  *(_QWORD *)&v17[*(int *)(v23 + 28)] = *(_QWORD *)&v18[*(int *)(v23 + 28)];
  v24 = a3[7];
  v25 = a3[8];
  v26 = (void **)((char *)a1 + v24);
  v27 = (void **)((char *)a2 + v24);
  v28 = v27[1];
  *v26 = *v27;
  v26[1] = v28;
  v29 = (char *)a1 + v25;
  v30 = *(uint64_t *)((char *)a2 + v25);
  v31 = *(uint64_t *)((char *)a2 + v25 + 8);
  v32 = *((_BYTE *)a2 + v25 + 16);
  swift_retain();
  swift_retain();
  sub_209F3BF10(v30, v31, v32);
  *(_QWORD *)v29 = v30;
  *((_QWORD *)v29 + 1) = v31;
  v29[16] = v32;
  v33 = a3[9];
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  v36 = *(_QWORD *)v35;
  v37 = *((_QWORD *)v35 + 1);
  LOBYTE(v31) = v35[16];
  sub_209EEC024(*(_QWORD *)v35, v37, v31);
  *(_QWORD *)v34 = v36;
  *((_QWORD *)v34 + 1) = v37;
  v34[16] = v31;
  v38 = a3[10];
  v39 = (void **)((char *)a1 + v38);
  v40 = (void **)((char *)a2 + v38);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    if (v46(v40, 1, v19))
    {
      v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v20 + 16))(v39, v40, v19);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v39, 0, 1, v19);
    }
  }
  else
  {
    *v39 = *v40;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v42 = a3[11];
  v43 = *(void **)((char *)a2 + v42);
  *(void **)((char *)a1 + v42) = v43;
  v44 = v43;
  return a1;
}

void **sub_209F3E1F0(void **a1, void **a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(char *, uint64_t, uint64_t);
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  void *v56;
  id v57;

  v6 = *a1;
  v7 = *a2;
  *a1 = *a2;
  v8 = v7;

  v9 = a3[5];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_209F66AE4();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB8C0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
LABEL_7:
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC1B8);
  *(_QWORD *)&v10[*(int *)(v18 + 28)] = *(_QWORD *)&v11[*(int *)(v18 + 28)];
  swift_retain();
  swift_release();
  v19 = a3[6];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = sub_209F66A90();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
  v25 = v24(v20, 1, v22);
  v26 = v24(v21, 1, v22);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v20, v22);
LABEL_12:
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v23 + 24))(v20, v21, v22);
LABEL_13:
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC1C0);
  *(_QWORD *)&v20[*(int *)(v28 + 28)] = *(_QWORD *)&v21[*(int *)(v28 + 28)];
  swift_retain();
  swift_release();
  v29 = a3[7];
  v30 = (void **)((char *)a1 + v29);
  v31 = (void **)((char *)a2 + v29);
  *v30 = *v31;
  v30[1] = v31[1];
  swift_retain();
  swift_release();
  v32 = a3[8];
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  v35 = *(_QWORD *)v34;
  v36 = *((_QWORD *)v34 + 1);
  v37 = v34[16];
  sub_209F3BF10(*(_QWORD *)v34, v36, v37);
  v38 = *(_QWORD *)v33;
  v39 = *((_QWORD *)v33 + 1);
  v40 = v33[16];
  *(_QWORD *)v33 = v35;
  *((_QWORD *)v33 + 1) = v36;
  v33[16] = v37;
  sub_209F3BF1C(v38, v39, v40);
  v41 = a3[9];
  v42 = (char *)a1 + v41;
  v43 = (char *)a2 + v41;
  v44 = *(_QWORD *)v43;
  v45 = *((_QWORD *)v43 + 1);
  v46 = v43[16];
  sub_209EEC024(*(_QWORD *)v43, v45, v46);
  v47 = *(_QWORD *)v42;
  v48 = *((_QWORD *)v42 + 1);
  v49 = v42[16];
  *(_QWORD *)v42 = v44;
  *((_QWORD *)v42 + 1) = v45;
  v42[16] = v46;
  sub_209EEC6A4(v47, v48, v49);
  if (a1 != a2)
  {
    v50 = a3[10];
    v51 = (void **)((char *)a1 + v50);
    v52 = (void **)((char *)a2 + v50);
    sub_209EE017C((uint64_t)a1 + v50, &qword_2545BB1F8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if (v24((char *)v52, 1, v22))
      {
        v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v23 + 16))(v51, v52, v22);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v51, 0, 1, v22);
      }
    }
    else
    {
      *v51 = *v52;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v54 = a3[11];
  v55 = *(void **)((char *)a2 + v54);
  v56 = *(void **)((char *)a1 + v54);
  *(void **)((char *)a1 + v54) = v55;
  v57 = v55;

  return a1;
}

_QWORD *sub_209F3E5B8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_209F66AE4();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB8C0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC1B8);
  *(_QWORD *)&v7[*(int *)(v12 + 28)] = *(_QWORD *)&v8[*(int *)(v12 + 28)];
  v13 = a3[6];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_209F66A90();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (v18(v15, 1, v16))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC1C0);
  *(_QWORD *)&v14[*(int *)(v20 + 28)] = *(_QWORD *)&v15[*(int *)(v20 + 28)];
  v21 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v22[16] = v23[16];
  *(_OWORD *)v22 = *(_OWORD *)v23;
  v24 = a3[9];
  v25 = a3[10];
  v26 = (char *)a1 + v24;
  v27 = (char *)a2 + v24;
  *(_OWORD *)v26 = *(_OWORD *)v27;
  v26[16] = v27[16];
  v28 = (char *)a1 + v25;
  v29 = (char *)a2 + v25;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    if (v18(v29, 1, v16))
    {
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v28, v29, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v28, 0, 1, v16);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  return a1;
}

void **sub_209F3E844(void **a1, void **a2, int *a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;

  v6 = *a1;
  *a1 = *a2;

  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_209F66AE4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB8C0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC1B8);
  *(_QWORD *)&v8[*(int *)(v16 + 28)] = *(_QWORD *)&v9[*(int *)(v16 + 28)];
  swift_release();
  v17 = a3[6];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = sub_209F66A90();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22(v19, 1, v20);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v24)
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v20);
LABEL_12:
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v21 + 40))(v18, v19, v20);
LABEL_13:
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC1C0);
  *(_QWORD *)&v18[*(int *)(v26 + 28)] = *(_QWORD *)&v19[*(int *)(v26 + 28)];
  swift_release();
  v27 = a3[7];
  v28 = (void **)((char *)a1 + v27);
  v29 = (uint64_t *)((char *)a2 + v27);
  v31 = *v29;
  v30 = v29[1];
  *v28 = v31;
  v28[1] = v30;
  swift_release();
  v32 = a3[8];
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  v35 = v34[16];
  v36 = *(_QWORD *)v33;
  v37 = *((_QWORD *)v33 + 1);
  v38 = v33[16];
  *(_OWORD *)v33 = *(_OWORD *)v34;
  v33[16] = v35;
  sub_209F3BF1C(v36, v37, v38);
  v39 = a3[9];
  v40 = (char *)a1 + v39;
  v41 = (char *)a2 + v39;
  v42 = v41[16];
  v43 = *(_QWORD *)v40;
  v44 = *((_QWORD *)v40 + 1);
  v45 = v40[16];
  *(_OWORD *)v40 = *(_OWORD *)v41;
  v40[16] = v42;
  sub_209EEC6A4(v43, v44, v45);
  if (a1 != a2)
  {
    v46 = a3[10];
    v47 = (char *)a1 + v46;
    v48 = (char *)a2 + v46;
    sub_209EE017C((uint64_t)a1 + v46, &qword_2545BB1F8);
    v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB1F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if (v22(v48, 1, v20))
      {
        v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v47, v48, v20);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v47, 0, 1, v20);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    }
  }
  v51 = a3[11];
  v52 = *(void **)((char *)a1 + v51);
  *(void **)((char *)a1 + v51) = *(void **)((char *)a2 + v51);

  return a1;
}

uint64_t sub_209F3EBC0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_209F3EBCC(uint64_t a1, uint64_t a2, int *a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, &qword_2545BC1B8, &qword_2545BC1C0, &qword_2545BB8B8);
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, int *a3, uint64_t *a4, uint64_t *a5, uint64_t *a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v11 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v13 = v11;
    v14 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1 + v14, a2, v13);
  }
  v15 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v12 = *(_QWORD *)(v15 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v13 = v15;
    v14 = a3[6];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1 + v14, a2, v13);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(a6);
    v12 = *(_QWORD *)(v13 - 8);
    v14 = a3[10];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1 + v14, a2, v13);
  }
  v16 = *(_QWORD *)(a1 + a3[7] + 8);
  if (v16 >= 0xFFFFFFFF)
    LODWORD(v16) = -1;
  return (v16 + 1);
}

uint64_t sub_209F3ECC8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_209F3ECD4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, &qword_2545BC1B8, &qword_2545BC1C0, &qword_2545BB8B8);
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, int a3, int *a4, uint64_t *a5, uint64_t *a6, uint64_t *a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;

  v13 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v15 = v13;
    v16 = a4[5];
  }
  else
  {
    result = __swift_instantiateConcreteTypeFromMangledName(a6);
    v14 = *(_QWORD *)(result - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v15 = result;
      v16 = a4[6];
    }
    else
    {
      if (a3 == 0x7FFFFFFF)
      {
        *(_QWORD *)(a1 + a4[7] + 8) = (a2 - 1);
        return result;
      }
      v15 = __swift_instantiateConcreteTypeFromMangledName(a7);
      v14 = *(_QWORD *)(v15 - 8);
      v16 = a4[10];
    }
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(a1 + v16, a2, a2, v15);
}

void sub_209F3EDCC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_209F3EEE0(319, &qword_2545BC1D8, &qword_2545BB8C0, MEMORY[0x24BDF42C8]);
  if (v0 <= 0x3F)
  {
    sub_209F3EEE0(319, &qword_2545BC1E0, &qword_2545BB600, MEMORY[0x24BDF42C8]);
    if (v1 <= 0x3F)
    {
      sub_209F3EEE0(319, (unint64_t *)&qword_2545BBED0, &qword_2545BB600, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB568]);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void sub_209F3EEE0(uint64_t a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

unint64_t sub_209F3EF3C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2545BC1E8;
  if (!qword_2545BC1E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BC1B0);
    v2[0] = sub_209F3EFA8();
    v2[1] = MEMORY[0x24BDF0908];
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2545BC1E8);
  }
  return result;
}

unint64_t sub_209F3EFA8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2545BC1F0;
  if (!qword_2545BC1F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BC1A8);
    v2[0] = sub_209F3F02C();
    v2[1] = sub_209EE83E8(&qword_2545BC270, &qword_2545BC1A0, MEMORY[0x24BDF1020]);
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2545BC1F0);
  }
  return result;
}

unint64_t sub_209F3F02C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2545BC1F8;
  if (!qword_2545BC1F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BC200);
    v2[0] = sub_209F3F0B0();
    v2[1] = sub_209EE83E8(&qword_2545BC260, &qword_2545BC268, MEMORY[0x24BDEF868]);
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2545BC1F8);
  }
  return result;
}

unint64_t sub_209F3F0B0()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_2545BC208;
  if (!qword_2545BC208)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BC210);
    v2 = sub_209F3F114();
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BDF3F48], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2545BC208);
  }
  return result;
}

unint64_t sub_209F3F114()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2545BC218;
  if (!qword_2545BC218)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BC220);
    v2[0] = sub_209F3F198();
    v2[1] = sub_209EE83E8(&qword_2545BC250, &qword_2545BC258, MEMORY[0x24BDF1250]);
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2545BC218);
  }
  return result;
}

unint64_t sub_209F3F198()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2545BC228;
  if (!qword_2545BC228)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BC230);
    v2[0] = sub_209F3F21C();
    v2[1] = sub_209EE83E8(&qword_2545BC240, &qword_2545BC248, MEMORY[0x24BDF1020]);
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2545BC228);
  }
  return result;
}

unint64_t sub_209F3F21C()
{
  unint64_t result;

  result = qword_2545BC238;
  if (!qword_2545BC238)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7B958, &type metadata for SwiftUIContentView);
    atomic_store(result, (unint64_t *)&qword_2545BC238);
  }
  return result;
}

uint64_t sub_209F3F260()
{
  return sub_209EE4ABC(&qword_2545BC278, type metadata accessor for BuddyMLRenderer.Content, (uint64_t)&unk_209F7A360);
}

ValueMetadata *type metadata accessor for BuddyMLContentID()
{
  return &type metadata for BuddyMLContentID;
}

void sub_209F3F2A8()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  void *v21;

  v1 = v0;
  v2 = objc_msgSend(v0, sel_context);
  if (!v2)
  {
    __break(1u);
    goto LABEL_24;
  }
  v3 = v2;
  v4 = (void *)sub_209F672A0();
  v5 = objc_msgSend(v3, sel_objectForKeyedSubscript_, v4);

  LODWORD(v3) = objc_msgSend(v1, sel_isInstanceOf_, v5);
  if ((_DWORD)v3)
  {
    v6 = (void *)sub_209F672A0();
    v7 = objc_msgSend(v1, sel_objectForKeyedSubscript_, v6);

    if (v7)
    {
      v8 = objc_msgSend(v7, sel_toString);

      if (v8)
      {
        sub_209F672C4();

        sub_209F67354();
        sub_209F67354();
        swift_bridgeObjectRelease();
      }
      v9 = (void *)sub_209F672A0();
      v10 = objc_msgSend(v1, sel_objectForKeyedSubscript_, v9);

      if (v10)
      {
        v11 = objc_msgSend(v10, sel_toString);

        if (v11)
        {
          sub_209F672C4();

          sub_209F67354();
          swift_bridgeObjectRelease();
        }
        v12 = (void *)sub_209F672A0();
        v13 = objc_msgSend(v1, sel_objectForKeyedSubscript_, v12);

        if (v13)
        {
          if ((objc_msgSend(v13, sel_isUndefined) & 1) != 0
            || (v14 = objc_msgSend(v13, sel_toString)) == 0)
          {

          }
          else
          {
            v15 = v14;
            sub_209F672C4();

            sub_209F67354();
            swift_bridgeObjectRelease();
            sub_209F67354();

            swift_bridgeObjectRelease();
          }
        }
        v18 = (void *)sub_209F672A0();
        v19 = objc_msgSend(v1, sel_objectForKeyedSubscript_, v18);

        if (v19)
        {
          if ((objc_msgSend(v19, sel_isUndefined) & 1) != 0
            || (v20 = objc_msgSend(v19, sel_toString)) == 0)
          {

          }
          else
          {
            v21 = v20;
            sub_209F672C4();

            sub_209F67354();
            swift_bridgeObjectRelease();
            sub_209F67354();

            swift_bridgeObjectRelease();
          }
        }
        return;
      }
LABEL_25:
      __break(1u);
      return;
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v16 = objc_msgSend(v1, sel_toString);
  if (v16)
  {
    v17 = v16;
    sub_209F672C4();

  }
}

ValueMetadata *type metadata accessor for JSPromiseError()
{
  return &type metadata for JSPromiseError;
}

uint64_t sub_209F3F698()
{
  sub_209F67B10();
  sub_209F6733C();
  return sub_209F67B28();
}

uint64_t sub_209F3F6DC()
{
  return sub_209F6733C();
}

uint64_t sub_209F3F6E8()
{
  sub_209F67B10();
  sub_209F6733C();
  return sub_209F67B28();
}

uint64_t sub_209F3F728@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_209F67840();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_209F3F778(_QWORD *a1@<X8>)
{
  *a1 = 25705;
  a1[1] = 0xE200000000000000;
}

uint64_t sub_209F3F788()
{
  return 25705;
}

uint64_t sub_209F3F794@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_209F67840();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_209F3F7E8()
{
  sub_209F3F838();
  return sub_209F67B88();
}

uint64_t sub_209F3F810()
{
  sub_209F3F838();
  return sub_209F67B94();
}

unint64_t sub_209F3F838()
{
  unint64_t result;

  result = qword_2545BC290;
  if (!qword_2545BC290)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7A5EC, &type metadata for EmptyElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BC290);
  }
  return result;
}

unint64_t sub_209F3F880()
{
  unint64_t result;

  result = qword_2545BC298;
  if (!qword_2545BC298)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7A54C, &type metadata for EmptyElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BC298);
  }
  return result;
}

unint64_t sub_209F3F8C8()
{
  unint64_t result;

  result = qword_2545BC2A0;
  if (!qword_2545BC2A0)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7A664, &type metadata for EmptyElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BC2A0);
  }
  return result;
}

unint64_t sub_209F3F910()
{
  unint64_t result;

  result = qword_2545BC2A8;
  if (!qword_2545BC2A8)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7A63C, &type metadata for EmptyElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BC2A8);
  }
  return result;
}

unint64_t sub_209F3F954(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_209F3F988();
  a1[2] = sub_209F3F9CC();
  result = sub_209F3FA10();
  a1[3] = result;
  return result;
}

unint64_t sub_209F3F988()
{
  unint64_t result;

  result = qword_2545BC2B0;
  if (!qword_2545BC2B0)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7A6F8, &type metadata for EmptyElement);
    atomic_store(result, (unint64_t *)&qword_2545BC2B0);
  }
  return result;
}

unint64_t sub_209F3F9CC()
{
  unint64_t result;

  result = qword_2545BC2B8;
  if (!qword_2545BC2B8)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7A720, &type metadata for EmptyElement);
    atomic_store(result, (unint64_t *)&qword_2545BC2B8);
  }
  return result;
}

unint64_t sub_209F3FA10()
{
  unint64_t result;

  result = qword_2545BC2C0;
  if (!qword_2545BC2C0)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7A6A8, &type metadata for EmptyElement);
    atomic_store(result, (unint64_t *)&qword_2545BC2C0);
  }
  return result;
}

uint64_t sub_209F3FA54()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_209F3FA64@<X0>(_QWORD *a1@<X0>, Swift::String *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC288);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_209F3F838();
  sub_209F67B58();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = Decoder.decodeRUIID()();
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *a2 = v10;
  return result;
}

ValueMetadata *type metadata accessor for EmptyElement()
{
  return &type metadata for EmptyElement;
}

uint64_t storeEnumTagSinglePayload for EmptyElement.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_209F3FBF0 + 4 * asc_209F7A540[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_209F3FC10 + 4 * byte_209F7A545[v4]))();
}

_BYTE *sub_209F3FBF0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_209F3FC10(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_209F3FC18(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_209F3FC20(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_209F3FC28(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_209F3FC30(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for EmptyElement.CodingKeys()
{
  return &type metadata for EmptyElement.CodingKeys;
}

uint64_t sub_209F3FC4C()
{
  return MEMORY[0x24BDF5130];
}

void *sub_209F3FC58()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8RemoteUI15RUIEmptyElement__view);
  v2 = v1;
  return v1;
}

id sub_209F3FC98(uint64_t a1, void *a2)
{
  char *v2;
  uint64_t v5;
  id v6;
  char *v7;
  void *v8;
  id v9;
  id v10;
  objc_super v12;

  v5 = OBJC_IVAR____TtC8RemoteUI15RUIEmptyElement__view;
  v6 = objc_allocWithZone(MEMORY[0x24BEBDB00]);
  v7 = v2;
  *(_QWORD *)&v2[v5] = objc_msgSend(v6, sel_init);

  if (a1)
  {
    v8 = (void *)sub_209F6724C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = 0;
  }
  v12.receiver = v7;
  v12.super_class = (Class)type metadata accessor for RUIEmptyElement();
  v9 = objc_msgSendSuper2(&v12, sel_initWithAttributes_parent_, v8, a2);

  v10 = v9;
  if (v10)

  return v10;
}

uint64_t type metadata accessor for RUIEmptyElement()
{
  return objc_opt_self();
}

id sub_209F3FE94()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RUIEmptyElement();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_209F3FED4(void *a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  os_log_type_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  uint64_t v18;
  uint64_t v19;

  v4 = sub_209F66E98();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v16 = a1;
  }
  else
  {
    swift_retain();
    v9 = sub_209F67540();
    v10 = sub_209F67030();
    v11 = v9;
    if (os_log_type_enabled(v10, v9))
    {
      v12 = swift_slowAlloc();
      v13 = swift_slowAlloc();
      v19 = v13;
      *(_DWORD *)v12 = 136315138;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545BB7A0);
      v14 = sub_209F67BA0();
      *(_QWORD *)(v12 + 4) = sub_209EE75A0(v14, v15, &v19);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_209E87000, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x20BD1DC00](v13, -1, -1);
      MEMORY[0x20BD1DC00](v12, -1, -1);
    }

    sub_209F66E8C();
    swift_getAtKeyPath();
    sub_209EEC698(a1, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    return v19;
  }
  return (uint64_t)a1;
}

uint64_t sub_209F40080(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_allocObject();
  sub_209F40548(a1, a2);
  v5 = v4;

  return v5;
}

uint64_t sub_209F400D8()
{
  id *v0;

  return swift_deallocClassInstance();
}

unint64_t sub_209F4010C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB760);
  v2 = sub_209F67810();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_209F40B48(v6, (uint64_t)v15);
    result = sub_209EE3224((uint64_t)v15);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v9 = v3[6] + 40 * result;
    v10 = v15[0];
    v11 = v15[1];
    *(_QWORD *)(v9 + 32) = v16;
    *(_OWORD *)v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    result = (unint64_t)sub_209EE3510(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_209F40238@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t KeyPath;
  Swift::String v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  id v10;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;

  KeyPath = swift_getKeyPath();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  swift_retain();
  v5 = Decoder.decodeRUIID()();
  if (v6)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return swift_release();
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    swift_bridgeObjectRetain();
    sub_209F67B40();
    v8 = v12;
    v9 = v13;
    __swift_project_boxed_opaque_existential_1(v11, v12);
    v10 = (id)SingleValueDecodingContainer.ruiXMLElement.getter(v8, v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_release();

    result = swift_bridgeObjectRelease();
    *(Swift::String *)a2 = v5;
    *(_QWORD *)(a2 + 16) = v10;
    *(_QWORD *)(a2 + 24) = KeyPath;
    *(_BYTE *)(a2 + 32) = 0;
  }
  return result;
}

void sub_209F403DC(uint64_t a1)
{
  uint64_t v1;

  sub_209F406E8(a1, *(void **)(v1 + 24), *(_BYTE *)(v1 + 32));
}

void sub_209F403E8(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v3;
  void *v4;
  char v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(void **)(v1 + 16);
  v4 = *(void **)(v1 + 24);
  v5 = *(_BYTE *)(v1 + 32);
  v6 = v3;
  sub_209EEC018(v4, v5);
  v7 = (void *)sub_209F3FED4(v4, v5);
  sub_209EEC698(v4, v5);
  if (v7)
  {
    type metadata accessor for LegacyRUIContent.Coordinator();
    swift_allocObject();
    sub_209F40548(v6, v7);
    v9 = v8;

    *a1 = v9;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_209F40484()
{
  sub_209F40B04();
  return sub_209F67000();
}

uint64_t sub_209F404D4()
{
  sub_209F40B04();
  return sub_209F66FD0();
}

void sub_209F40524()
{
  sub_209F40B04();
  sub_209F66FF4();
  __break(1u);
}

void sub_209F40548(void *a1, void *a2)
{
  _QWORD *v2;
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;

  v2[2] = a1;
  v5 = objc_allocWithZone((Class)RUITopLevelElementProvider);
  v6 = a1;
  v7 = objc_msgSend(v5, sel_initWithParentElement_, a2);
  v8 = objc_msgSend(a2, sel_pageElement);
  if (!v8)
  {
    __break(1u);
    goto LABEL_8;
  }
  v9 = v8;
  v10 = objc_msgSend(v8, sel_page);

  if (!v10)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  objc_msgSend(v10, sel_addElementProvider_, v7);

  v11 = objc_msgSend(a2, sel_pageElement);
  if (!v11)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v12 = v11;
  v13 = objc_msgSend(v11, sel_page);

  if (!v13)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v14 = objc_msgSend(v13, sel_objectModel);

  if (v14)
  {
    v15 = objc_allocWithZone((Class)RUITopLevelElementParser);
    v16 = v7;
    v17 = objc_msgSend(v15, sel_initWithXMLElement_elementProvider_objectModel_delegate_, v6, v16, v14, 0);

    v2[3] = v17;
    v2[4] = v16;
    return;
  }
LABEL_11:
  __break(1u);
}

uint64_t type metadata accessor for LegacyRUIContent.Coordinator()
{
  return objc_opt_self();
}

void sub_209F406E8(uint64_t a1, void *a2, char a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545BC2E0);
  sub_209F67024();
  v5 = *(id *)(v13 + 24);
  swift_release();
  objc_msgSend(v5, sel_parse);

  sub_209F67024();
  v6 = *(id *)(v13 + 24);
  swift_release();
  v7 = objc_msgSend(v6, sel_elementProvider);

  if (objc_msgSend(v7, sel_hasTableView))
  {
    v8 = objc_msgSend(v7, sel_makeTableViewOM);
LABEL_5:
    v9 = v8;
LABEL_7:
    objc_msgSend(objc_allocWithZone((Class)RUIElementViewController), sel_initWithElement_, v9);

    return;
  }
  if (objc_msgSend(v7, sel_hasPasscodeView))
  {
    v8 = objc_msgSend(v7, sel_makePasscodeViewOM);
    goto LABEL_5;
  }
  sub_209F4010C(MEMORY[0x24BEE4AF8]);
  sub_209EEC018(a2, a3 & 1);
  v10 = (void *)sub_209F3FED4(a2, a3 & 1);
  sub_209EEC698(a2, a3 & 1);
  v11 = objc_allocWithZone((Class)type metadata accessor for RUIEmptyElement());
  v12 = (void *)sub_209F6724C();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v11, sel_initWithAttributes_parent_, v12, v10);

  if (v9)
    goto LABEL_7;
  __break(1u);
}

void destroy for LegacyRUIContent(uint64_t a1)
{
  swift_bridgeObjectRelease();

  sub_209EEC698(*(id *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for LegacyRUIContent(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  char v6;
  id v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v5 = *(void **)(a2 + 16);
  v4 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  v6 = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  v7 = v5;
  sub_209EEC018(v4, v6);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = v6;
  return a1;
}

uint64_t assignWithCopy for LegacyRUIContent(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  char v9;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)v2[2];
  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  v6 = v4;

  v7 = (void *)v2[3];
  LOBYTE(v2) = *((_BYTE *)v2 + 32);
  sub_209EEC018(v7, (char)v2);
  v8 = *(void **)(a1 + 24);
  v9 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = (_BYTE)v2;
  sub_209EEC698(v8, v9);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for LegacyRUIContent(uint64_t a1, uint64_t a2)
{
  void *v4;
  char v5;
  void *v6;
  char v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  v5 = *(_BYTE *)(a2 + 32);
  v6 = *(void **)(a1 + 24);
  v7 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = v5;
  sub_209EEC698(v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for LegacyRUIContent(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 33))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LegacyRUIContent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LegacyRUIContent()
{
  return &type metadata for LegacyRUIContent;
}

unint64_t sub_209F40B04()
{
  unint64_t result;

  result = qword_2545BC2D8;
  if (!qword_2545BC2D8)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7A7A8, &type metadata for LegacyRUIContent);
    atomic_store(result, (unint64_t *)&qword_2545BC2D8);
  }
  return result;
}

uint64_t sub_209F40B48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545BC2F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_209F40B90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a3)
  {
    v6 = (void *)sub_209F672A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithStyle_reuseIdentifier_, a1, v6);

  return v7;
}

id sub_209F40C08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  objc_class *ObjectType;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  objc_super v15;

  v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  v8 = *(_QWORD *)v3;
  v9 = (_QWORD *)MEMORY[0x24BEE4EA0];
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)((*MEMORY[0x24BEE4EA0] & v8) + 0x50) - 8)
                                                   + 56))(&v4[*(_QWORD *)((*MEMORY[0x24BEE4EA0] & v8) + 0x60)], 1, 1);
  v10 = *(_QWORD *)((*v9 & *(_QWORD *)v4) + 0x68);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545BB590);
  swift_allocObject();
  v11 = v4;
  *(_QWORD *)&v4[v10] = sub_209F66C7C();

  if (a3)
  {
    v12 = (void *)sub_209F672A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = 0;
  }
  v15.receiver = v11;
  v15.super_class = ObjectType;
  v13 = objc_msgSendSuper2(&v15, sel_initWithStyle_reuseIdentifier_, a1, v12);

  return v13;
}

id sub_209F40D1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  if (a4)
  {
    a4 = sub_209F672C4();
    v6 = v5;
  }
  else
  {
    v6 = 0;
  }
  return sub_209F40C08(a3, a4, v6);
}

void sub_209F40D64(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_209F41278();
}

uint64_t sub_209F40D88(char a1, char a2)
{
  _QWORD *v2;
  objc_class *ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v19;
  objc_super v20;

  ObjectType = (objc_class *)swift_getObjectType();
  v6 = *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v2) + 0x50);
  v7 = sub_209F675DC();
  v8 = *(_QWORD *)(v7 - 8);
  v10 = MEMORY[0x24BDAC7A8](v7, v9);
  v12 = (char *)&v19 - v11;
  v13 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v10, v14);
  v16 = (char *)&v19 - v15;
  v20.receiver = v2;
  v20.super_class = ObjectType;
  objc_msgSendSuper2(&v20, sel_setHighlighted_animated_, a1 & 1, a2 & 1);
  v17 = (char *)v2 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v2) + 0x60);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v12, v17, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, v6) == 1)
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v12, v7);
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v16, v12, v6);
  sub_209F40F0C((uint64_t)v16);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v6);
}

uint64_t sub_209F40F0C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23[3];
  uint64_t v24;
  uint64_t v25;

  v2 = v1;
  v5 = *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x58);
  v23[0] = *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x50);
  v4 = v23[0];
  v23[1] = MEMORY[0x24BDF5150];
  v23[2] = v5;
  v24 = MEMORY[0x24BDF5130];
  v6 = sub_209F66F88();
  v19 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v18 - v8;
  v10 = sub_209F675DC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)&v18 - v13;
  v15 = *(_QWORD *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)&v18 - v13, a1, v4);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v14, 0, 1, v4);
  v16 = (char *)v2 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v2) + 0x60);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v16, v14, v10);
  swift_endAccess();
  v20 = v4;
  v21 = v5;
  v22 = a1;
  sub_209F66F7C();
  sub_209F67048();
  v24 = v6;
  v25 = MEMORY[0x20BD1DB1C](MEMORY[0x24BDEFE98], v6);
  __swift_allocate_boxed_opaque_existential_0(v23);
  sub_209F66F70();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v6);
  return MEMORY[0x20BD1C910](v23);
}

void sub_209F410F4(void *a1, uint64_t a2, char a3, char a4)
{
  id v6;

  v6 = a1;
  sub_209F40D88(a3, a4);

}

uint64_t sub_209F4113C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void (*v8)(char *);
  uint64_t v10;

  v5 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1, a1);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(void (**)(char *))(v5 + 16);
  v8(v7);
  ((void (*)(uint64_t, char *, uint64_t))v8)(a3, v7, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, a2);
}

id sub_209F411D0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_209F41204(_QWORD *a1)
{
  char *v1;
  uint64_t v2;

  v1 = (char *)a1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *a1) + 0x60);
  v2 = sub_209F675DC();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_release();
}

void sub_209F41278()
{
  char *v0;
  char *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v1 = v0;
  v2 = *(_QWORD *)v0;
  v3 = (_QWORD *)MEMORY[0x24BEE4EA0];
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)((*MEMORY[0x24BEE4EA0] & v2) + 0x50) - 8)
                                                   + 56))(&v1[*(_QWORD *)((*MEMORY[0x24BEE4EA0] & v2) + 0x60)], 1, 1);
  v4 = *(_QWORD *)((*v3 & *(_QWORD *)v1) + 0x68);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545BB590);
  swift_allocObject();
  *(_QWORD *)&v1[v4] = sub_209F66C7C();

  sub_209F677E0();
  __break(1u);
}

uint64_t sub_209F41348@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_209F4113C(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_209F41354()
{
  uint64_t result;
  unint64_t v1;

  result = sub_209F675DC();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for RUISwiftUIHostingCell(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RUISwiftUIHostingCell);
}

uint64_t sub_209F413DC()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for ResourceLoader();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_209F66A00();

  return v2;
}

uint64_t sub_209F41480(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD v14[2];

  v4 = sub_209F66940();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = a1;
  v14[1] = a2;
  sub_209F66934();
  sub_209F4155C();
  v9 = sub_209F67600();
  v11 = v10;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  v12 = HIBYTE(v11) & 0xF;
  if ((v11 & 0x2000000000000000) == 0)
    v12 = v9 & 0xFFFFFFFFFFFFLL;
  if (!v12)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v9;
}

unint64_t sub_209F4155C()
{
  unint64_t result;

  result = qword_2545BC570;
  if (!qword_2545BC570)
  {
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_2545BC570);
  }
  return result;
}

unint64_t sub_209F415A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2545BC310;
  if (!qword_2545BC310)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2545BC560);
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_2545BC310);
  }
  return result;
}

unint64_t KeyedDecodingContainer.decodeRUIAttributeDictionary(forKey:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC318);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_209F678C4() & 1) == 0)
    return sub_209F416EC(MEMORY[0x24BEE4AF8]);
  sub_209F4180C();
  sub_209F67864();
  if (!v1)
  {
    v0 = sub_209F41850();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return v0;
}

unint64_t sub_209F416EC(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC5A0);
  v2 = (_QWORD *)sub_209F67810();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_209EE31C0(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_209F4180C()
{
  unint64_t result;

  result = qword_2545BC320;
  if (!qword_2545BC320)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7A93C, &type metadata for XMLAttributeKey);
    atomic_store(result, (unint64_t *)&qword_2545BC320);
  }
  return result;
}

uint64_t sub_209F41850()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  char v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;

  v1 = v0;
  v2 = (_QWORD *)sub_209F416EC(MEMORY[0x24BEE4AF8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC318);
  v3 = sub_209F678B8();
  v4 = *(_QWORD *)(v3 + 16);
  if (!v4)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return (uint64_t)v2;
  }
  v5 = v3 + 56;
  while (1)
  {
    v8 = *(_QWORD *)(v5 - 24);
    v7 = *(_QWORD *)(v5 - 16);
    swift_bridgeObjectRetain_n();
    v9 = sub_209F678A0();
    if (v1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      return (uint64_t)v2;
    }
    v11 = v9;
    v28 = v10;
    v27 = v4;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = sub_209EE31C0(v8, v7);
    v15 = v2[2];
    v16 = (v13 & 1) == 0;
    v17 = v15 + v16;
    if (__OFADD__(v15, v16))
      break;
    v18 = v13;
    if (v2[3] >= v17)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v13 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_209F42EAC();
        if ((v18 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_209F42B88(v17, isUniquelyReferenced_nonNull_native);
      v19 = sub_209EE31C0(v8, v7);
      if ((v18 & 1) != (v20 & 1))
        goto LABEL_22;
      v14 = v19;
      if ((v18 & 1) != 0)
      {
LABEL_3:
        v6 = (uint64_t *)(v2[7] + 16 * v14);
        swift_bridgeObjectRelease();
        *v6 = v11;
        v6[1] = v28;
        goto LABEL_4;
      }
    }
    v2[(v14 >> 6) + 8] |= 1 << v14;
    v21 = (uint64_t *)(v2[6] + 16 * v14);
    *v21 = v8;
    v21[1] = v7;
    v22 = (uint64_t *)(v2[7] + 16 * v14);
    *v22 = v11;
    v22[1] = v28;
    v23 = v2[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_21;
    v2[2] = v25;
    swift_bridgeObjectRetain();
LABEL_4:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 += 32;
    v1 = 0;
    v4 = v27 - 1;
    if (v27 == 1)
      goto LABEL_18;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  result = sub_209F67AA4();
  __break(1u);
  return result;
}

uint64_t KeyedDecodingContainer<>.decodeRUIAttributeDictionary()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char isUniquelyReferenced_nonNull_native;
  char v30;
  unint64_t v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  char v37;
  _QWORD *v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t result;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  _QWORD *v59;

  v4 = v3;
  v52 = a2;
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = MEMORY[0x24BDAC7A8](a1, a2);
  v10 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)&v47 - v12;
  v58 = sub_209F416EC(MEMORY[0x24BEE4AF8]);
  v51 = a1;
  v53 = v2;
  v14 = sub_209F678B8();
  if (!MEMORY[0x20BD1C814](v14, v6))
  {
LABEL_21:
    swift_bridgeObjectRelease();
    return v58;
  }
  v47 = v8;
  v48 = v13;
  v15 = 0;
  v49 = v10;
  v50 = v14;
  while (1)
  {
    v19 = sub_209F67444();
    sub_209F67420();
    if ((v19 & 1) == 0)
      break;
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v13, v14+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v15, v6);
    v20 = v15 + 1;
    if (__OFADD__(v15, 1))
      goto LABEL_23;
LABEL_7:
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v13, v6);
    v21 = sub_209F67B64();
    v23 = v22;
    v24 = sub_209F678A0();
    if (v4)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    v56 = v24;
    v57 = v25;
    v54 = v20;
    v55 = 0;
    v26 = v7;
    v27 = v6;
    v28 = v58;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v59 = (_QWORD *)v28;
    v31 = sub_209EE31C0(v21, v23);
    v32 = *(_QWORD *)(v28 + 16);
    v33 = (v30 & 1) == 0;
    v34 = v32 + v33;
    if (__OFADD__(v32, v33))
      goto LABEL_24;
    v35 = v30;
    if (*(_QWORD *)(v28 + 24) >= v34)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_209F42EAC();
    }
    else
    {
      sub_209F42B88(v34, isUniquelyReferenced_nonNull_native);
      v36 = sub_209EE31C0(v21, v23);
      if ((v35 & 1) != (v37 & 1))
        goto LABEL_27;
      v31 = v36;
    }
    v6 = v27;
    v38 = v59;
    v7 = v26;
    v58 = (unint64_t)v59;
    if ((v35 & 1) != 0)
    {
      v16 = (uint64_t *)(v59[7] + 16 * v31);
      swift_bridgeObjectRelease();
      v17 = v57;
      *v16 = v56;
      v16[1] = v17;
      v10 = v49;
    }
    else
    {
      v59[(v31 >> 6) + 8] |= 1 << v31;
      v39 = (uint64_t *)(v38[6] + 16 * v31);
      *v39 = v21;
      v39[1] = v23;
      v40 = (uint64_t *)(v38[7] + 16 * v31);
      v41 = v57;
      *v40 = v56;
      v40[1] = v41;
      v42 = v38[2];
      v43 = __OFADD__(v42, 1);
      v44 = v42 + 1;
      v10 = v49;
      if (v43)
        goto LABEL_25;
      v38[2] = v44;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    v14 = v50;
    v18 = MEMORY[0x20BD1C814](v50, v6);
    ++v15;
    v4 = v55;
    v13 = v48;
    if (v54 == v18)
      goto LABEL_21;
  }
  v45 = sub_209F676F0();
  if (v47 != 8)
    goto LABEL_26;
  v59 = (_QWORD *)v45;
  (*(void (**)(char *, _QWORD **, uint64_t))(v7 + 16))(v13, &v59, v6);
  swift_unknownObjectRelease();
  v20 = v15 + 1;
  if (!__OFADD__(v15, 1))
    goto LABEL_7;
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  result = sub_209F67AA4();
  __break(1u);
  return result;
}

uint64_t sub_209F41E30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB828);
  v1 = sub_209F678B8();
  if (*(_QWORD *)(v1 + 16))
  {
    v0 = *(_QWORD *)(v1 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v2 = sub_209F67720();
    swift_allocError();
    v4 = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC328);
    *v4 = MEMORY[0x24BEE0D00];
    sub_209F67870();
    sub_209F67714();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v4, *MEMORY[0x24BEE26E0], v2);
    swift_willThrow();
  }
  return v0;
}

uint64_t KeyedDecodingContainer<>.decodeRUITagName()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;

  v19[1] = a2;
  v3 = *(_QWORD *)(a1 + 16);
  v19[0] = sub_209F675DC();
  v4 = *(_QWORD *)(v19[0] - 8);
  v6 = MEMORY[0x24BDAC7A8](v19[0], v5);
  v8 = (char *)v19 - v7;
  v9 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v6, v10);
  v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = v2;
  v21 = sub_209F678B8();
  v13 = sub_209F67468();
  MEMORY[0x20BD1DB1C](MEMORY[0x24BEE12E0], v13);
  sub_209F67504();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v3) == 1)
  {
    (*(void (**)(char *, _QWORD))(v4 + 8))(v8, v19[0]);
    v14 = sub_209F67720();
    swift_allocError();
    v16 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC328);
    *v16 = MEMORY[0x24BEE0D00];
    v17 = v20;
    sub_209F67870();
    sub_209F67714();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v16, *MEMORY[0x24BEE26E0], v14);
    swift_willThrow();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v8, v3);
    v17 = sub_209F67B64();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v3);
  }
  return v17;
}

uint64_t sub_209F42168(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  result = sub_209F41E30();
  if (!v2)
  {
    if (result == a1 && v6 == a2 || (sub_209F679A8() & 1) != 0)
    {
      return swift_bridgeObjectRelease();
    }
    else
    {
      v7 = sub_209F67720();
      swift_allocError();
      v9 = v8;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC328);
      *v9 = MEMORY[0x24BEE0D00];
      __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB828);
      sub_209F67870();
      sub_209F676CC();
      swift_bridgeObjectRelease();
      sub_209F67354();
      sub_209F67354();
      sub_209F67354();
      swift_bridgeObjectRelease();
      sub_209F67714();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v9, *MEMORY[0x24BEE26E0], v7);
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t KeyedDecodingContainer<>.assertRUITagName(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;

  result = KeyedDecodingContainer<>.decodeRUITagName()(a3, a4);
  if (!v4)
  {
    if (result == a1 && v8 == a2 || (sub_209F679A8() & 1) != 0)
    {
      return swift_bridgeObjectRelease();
    }
    else
    {
      v9 = sub_209F67720();
      swift_allocError();
      v11 = v10;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC328);
      *v11 = MEMORY[0x24BEE0D00];
      sub_209F67870();
      sub_209F676CC();
      swift_bridgeObjectRelease();
      sub_209F67354();
      sub_209F67354();
      sub_209F67354();
      swift_bridgeObjectRelease();
      sub_209F67714();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v11, *MEMORY[0x24BEE26E0], v9);
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t Decoder.decodeRUIAttributeDictionary()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC318);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_209F4180C();
  sub_209F67B58();
  if (!v1)
  {
    v0 = sub_209F41850();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return v0;
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Decoder.decodeRUIID()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  Swift::String result;
  _QWORD v16[3];
  char v17;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC318);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_209F4180C();
  sub_209F67B58();
  if (!v1)
  {
    v16[0] = 25705;
    v16[1] = 0xE200000000000000;
    v16[2] = 0;
    v17 = 1;
    v8 = sub_209F6787C();
    v2 = v9;
    if (v9)
    {
      v0 = v8;
    }
    else
    {
      v12 = sub_209F679B4();
      v13 = sub_209F42780(v12);
      swift_bridgeObjectRelease();
      v16[0] = &unk_24C296E78;
      sub_209F43064(v13);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545BC560);
      sub_209F415A0();
      v0 = sub_209F6727C();
      v2 = v14;
      swift_bridgeObjectRelease();
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  v10 = v0;
  v11 = v2;
  result._object = v11;
  result._countAndFlagsBits = v10;
  return result;
}

uint64_t sub_209F42780(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v12 = MEMORY[0x24BEE4AF8];
    sub_209F06D20(0, v1, 0);
    v2 = v12;
    v4 = (_QWORD *)(a1 + 32);
    do
    {
      __swift_project_boxed_opaque_existential_1(v4, v4[3]);
      v5 = sub_209F67B64();
      v7 = v6;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_209F06D20(0, *(_QWORD *)(v12 + 16) + 1, 1);
      v9 = *(_QWORD *)(v12 + 16);
      v8 = *(_QWORD *)(v12 + 24);
      if (v9 >= v8 >> 1)
        sub_209F06D20((char *)(v8 > 1), v9 + 1, 1);
      *(_QWORD *)(v12 + 16) = v9 + 1;
      v10 = v12 + 16 * v9;
      *(_QWORD *)(v10 + 32) = v5;
      *(_QWORD *)(v10 + 40) = v7;
      v4 += 5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Decoder.decodeRUITagName()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  Swift::String result;
  uint64_t v13;

  v3 = v0;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB828);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_209F0AD80();
  sub_209F67B58();
  if (!v2)
  {
    v1 = sub_209F41E30();
    v3 = v9;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  v10 = v1;
  v11 = v3;
  result._object = v11;
  result._countAndFlagsBits = v10;
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Decoder.assertRUITagName(_:)(Swift::String a1)
{
  uint64_t v1;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;

  object = a1._object;
  countAndFlagsBits = a1._countAndFlagsBits;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB828);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v9 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_209F0AD80();
  sub_209F67B58();
  if (!v1)
  {
    sub_209F42168(countAndFlagsBits, (uint64_t)object);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
}

uint64_t sub_209F42A64@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = a2;
  *(_QWORD *)(a3 + 16) = 0;
  *(_BYTE *)(a3 + 24) = 1;
  return result;
}

uint64_t sub_209F42A78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;

  result = sub_209F678F4();
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v5;
  *(_QWORD *)(a2 + 16) = a1;
  *(_BYTE *)(a2 + 24) = 0;
  return result;
}

uint64_t sub_209F42AD0()
{
  sub_209F4180C();
  return sub_209F67B88();
}

uint64_t sub_209F42AF8()
{
  sub_209F4180C();
  return sub_209F67B94();
}

double sub_209F42B20@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  result = 0.0;
  *(_OWORD *)a2 = xmmword_209F7A910;
  *(_QWORD *)(a2 + 16) = a1;
  *(_BYTE *)(a2 + 24) = 0;
  return result;
}

uint64_t sub_209F42B38()
{
  sub_209F0AD80();
  return sub_209F67B88();
}

uint64_t sub_209F42B60()
{
  sub_209F0AD80();
  return sub_209F67B94();
}

uint64_t sub_209F42B88(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  uint64_t v41;
  char v42;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC5A0);
  v42 = a2;
  v6 = sub_209F67804();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v41 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v39 = v2;
  v40 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      v13 = v23 + 1;
      if (v23 + 1 >= v40)
        goto LABEL_33;
      v25 = *(_QWORD *)(v41 + 8 * v13);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          v3 = v39;
          if ((v42 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v13 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v13 >= v40)
              goto LABEL_33;
            v25 = *(_QWORD *)(v41 + 8 * v13);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v13 = v26;
      }
    }
LABEL_30:
    v10 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    v31 = 16 * v22;
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v31);
    v34 = *v32;
    v33 = v32[1];
    v35 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v31);
    v36 = *v35;
    v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_209F67B10();
    sub_209F6733C();
    result = sub_209F67B28();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v16 == v28;
        if (v16 == v28)
          v16 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = 16 * v17;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v19 = v34;
    v19[1] = v33;
    v20 = (_QWORD *)(*(_QWORD *)(v7 + 56) + v18);
    *v20 = v36;
    v20[1] = v37;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v39;
  v24 = (_QWORD *)(v5 + 64);
  if ((v42 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v38 = 1 << *(_BYTE *)(v5 + 32);
  if (v38 >= 64)
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v38;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

void *sub_209F42EAC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC5A0);
  v2 = *v0;
  v3 = sub_209F677F8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_209F43064(uint64_t result)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  int64_t v10;

  v2 = *(_QWORD *)(result + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v6 = result;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)result && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    if (*(_QWORD *)(v6 + 16))
      goto LABEL_5;
    goto LABEL_13;
  }
  if (v4 <= v5)
    v10 = v4 + v2;
  else
    v10 = v4;
  result = (uint64_t)sub_209F4314C((char *)result, v10, 1, (char *)v3);
  v3 = result;
  if (!*(_QWORD *)(v6 + 16))
  {
LABEL_13:
    if (!v2)
      goto LABEL_14;
    goto LABEL_16;
  }
LABEL_5:
  if ((*(_QWORD *)(v3 + 24) >> 1) - *(_QWORD *)(v3 + 16) < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  result = swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
  v7 = *(_QWORD *)(v3 + 16);
  v8 = __OFADD__(v7, v2);
  v9 = v7 + v2;
  if (!v8)
  {
    *(_QWORD *)(v3 + 16) = v9;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

char *sub_209F4314C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB780);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_209F4324C(uint64_t a1)
{
  unint64_t result;

  result = sub_209F4180C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_209F43274()
{
  unint64_t result;

  result = qword_2545BC330;
  if (!qword_2545BC330)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7A9B4, &type metadata for XMLAttributeKey);
    atomic_store(result, (unint64_t *)&qword_2545BC330);
  }
  return result;
}

unint64_t sub_209F432BC()
{
  unint64_t result;

  result = qword_2545BC338;
  if (!qword_2545BC338)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7A98C, &type metadata for XMLAttributeKey);
    atomic_store(result, (unint64_t *)&qword_2545BC338);
  }
  return result;
}

unint64_t sub_209F43300(uint64_t a1)
{
  unint64_t result;

  result = sub_209F0AD80();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_209F43328()
{
  unint64_t result;

  result = qword_2545BC340;
  if (!qword_2545BC340)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7AA70, &type metadata for BuddyMLKey);
    atomic_store(result, (unint64_t *)&qword_2545BC340);
  }
  return result;
}

unint64_t sub_209F43370()
{
  unint64_t result;

  result = qword_2545BC348;
  if (!qword_2545BC348)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7AA48, &type metadata for BuddyMLKey);
    atomic_store(result, (unint64_t *)&qword_2545BC348);
  }
  return result;
}

ValueMetadata *type metadata accessor for XMLAttributeKey()
{
  return &type metadata for XMLAttributeKey;
}

ValueMetadata *type metadata accessor for BuddyMLKey()
{
  return &type metadata for BuddyMLKey;
}

id sub_209F433F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *boxed_opaque_existential_0;
  id v5;
  uint64_t v7[5];

  v7[4] = a2;
  v7[3] = a1;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v7);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(boxed_opaque_existential_0, v2, a1);
  v5 = objc_allocWithZone((Class)type metadata accessor for ImageElement());
  return sub_209F44074(v7);
}

id sub_209F4345C(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return sub_209F44074(a1);
}

uint64_t type metadata accessor for ImageElement()
{
  uint64_t result;

  result = qword_2545C43C0;
  if (!qword_2545C43C0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_209F434D8()
{
  return sub_209F43A0C();
}

uint64_t sub_209F434EC@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0x70))();
  *a2 = result;
  return result;
}

uint64_t sub_209F4352C(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((*MEMORY[0x24BEE4EA0] & **a2) + 0x78);
  v4 = *a1;
  return v3(v2);
}

uint64_t sub_209F43578()
{
  return sub_209F43B14();
}

uint64_t (*sub_209F4358C(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_209F66CD0();
  return sub_209F43604;
}

uint64_t sub_209F43608()
{
  return sub_209F43C50((uint64_t)&OBJC_IVAR____TtC8RemoteUI12ImageElement__image, &qword_2545BC358);
}

uint64_t sub_209F4361C(uint64_t a1)
{
  return sub_209F43CD0(a1, &qword_2545BC360, (uint64_t)&OBJC_IVAR____TtC8RemoteUI12ImageElement__image, &qword_2545BC358);
}

uint64_t (*sub_209F43638(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC360);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC8RemoteUI12ImageElement__image;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC358);
  sub_209F66CB8();
  swift_endAccess();
  return sub_209F43700;
}

uint64_t sub_209F43704()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_209F66CDC();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_209F43778@<X0>(_QWORD **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  char v5;

  result = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0xA0))();
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v4;
  *(_BYTE *)(a2 + 16) = v5 & 1;
  return result;
}

uint64_t sub_209F437C0(uint64_t a1, _QWORD **a2)
{
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))((*MEMORY[0x24BEE4EA0] & **a2) + 0xA8))(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned __int8 *)(a1 + 16));
}

uint64_t sub_209F43808()
{
  void *v0;
  id v1;

  swift_getKeyPath();
  swift_getKeyPath();
  v1 = v0;
  return sub_209F66CE8();
}

uint64_t (*sub_209F43888(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_209F66CD0();
  return sub_209F43604;
}

uint64_t sub_209F43900()
{
  return sub_209F43C50((uint64_t)&OBJC_IVAR____TtC8RemoteUI12ImageElement__imageSize, &qword_2545BC368);
}

uint64_t sub_209F43914(uint64_t a1)
{
  return sub_209F43CD0(a1, &qword_2545BC370, (uint64_t)&OBJC_IVAR____TtC8RemoteUI12ImageElement__imageSize, &qword_2545BC368);
}

uint64_t (*sub_209F43930(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC370);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC8RemoteUI12ImageElement__imageSize;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC368);
  sub_209F66CB8();
  swift_endAccess();
  return sub_209F43700;
}

uint64_t sub_209F439F8()
{
  return sub_209F43A0C();
}

uint64_t sub_209F43A0C()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_209F66CDC();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_209F43A74@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0xD0))();
  *a2 = result;
  return result;
}

uint64_t sub_209F43AB4(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((*MEMORY[0x24BEE4EA0] & **a2) + 0xD8);
  v4 = *a1;
  return v3(v2);
}

uint64_t sub_209F43B00()
{
  return sub_209F43B14();
}

uint64_t sub_209F43B14()
{
  void *v0;
  id v1;

  swift_getKeyPath();
  swift_getKeyPath();
  v1 = v0;
  return sub_209F66CE8();
}

uint64_t (*sub_209F43B78(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_209F66CD0();
  return sub_209F43604;
}

void sub_209F43BF0(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 48))(*a1, 0);
  swift_release();
  swift_release();
  free(v1);
}

uint64_t sub_209F43C3C()
{
  return sub_209F43C50((uint64_t)&OBJC_IVAR____TtC8RemoteUI12ImageElement__tintColor, &qword_2545BC380);
}

uint64_t sub_209F43C50(uint64_t a1, uint64_t *a2)
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(a2);
  sub_209F66CB8();
  return swift_endAccess();
}

uint64_t sub_209F43CB4(uint64_t a1)
{
  return sub_209F43CD0(a1, &qword_2545BC388, (uint64_t)&OBJC_IVAR____TtC8RemoteUI12ImageElement__tintColor, &qword_2545BC380);
}

uint64_t sub_209F43CD0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v11 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(a4);
  sub_209F66CC4();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
}

uint64_t (*sub_209F43DA8(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC388);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC8RemoteUI12ImageElement__tintColor;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC380);
  sub_209F66CB8();
  swift_endAccess();
  return sub_209F43700;
}

void sub_209F43E70(uint64_t a1, char a2)
{
  _QWORD *v3;
  void (*v4)(_QWORD, _QWORD, _QWORD);
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void *, uint64_t);

  v3 = *(_QWORD **)a1;
  v4 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)a1 + 88) + 16);
  v4(*(_QWORD *)(*(_QWORD *)a1 + 104), v3[14], v3[10]);
  v5 = (void *)v3[13];
  v6 = (void *)v3[14];
  v8 = v3[11];
  v7 = (void *)v3[12];
  v9 = v3[10];
  if ((a2 & 1) != 0)
  {
    v4(v3[12], v3[13], v3[10]);
    swift_beginAccess();
    sub_209F66CC4();
    swift_endAccess();
    v10 = *(void (**)(void *, uint64_t))(v8 + 8);
    v10(v5, v9);
  }
  else
  {
    swift_beginAccess();
    sub_209F66CC4();
    swift_endAccess();
    v10 = *(void (**)(void *, uint64_t))(v8 + 8);
  }
  v10(v6, v9);
  free(v6);
  free(v5);
  free(v7);
  free(v3);
}

uint64_t sub_209F43F88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC8RemoteUI12ImageElement_baseURL;
  swift_beginAccess();
  return sub_209EDF8C0(v3, a1);
}

uint64_t sub_209F43FD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC8RemoteUI12ImageElement_baseURL;
  swift_beginAccess();
  sub_209F3A728(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_209F44030())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id sub_209F44074(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  void (*v17)(char *, char *, uint64_t);
  _QWORD *v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  objc_class *v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  objc_super v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;

  v31 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC380);
  v33 = *(_QWORD *)(v2 - 8);
  v34 = v2;
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC368);
  v6 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32, v7);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC358);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = &v1[OBJC_IVAR____TtC8RemoteUI12ImageElement__image];
  v36 = 0;
  v16 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC350);
  sub_209F66CAC();
  v17 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v18 = v31;
  v17(v15, v14, v10);
  v19 = &v16[OBJC_IVAR____TtC8RemoteUI12ImageElement__imageSize];
  v36 = 0;
  v37 = 0;
  v38 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BBC78);
  sub_209F66CAC();
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v19, v9, v32);
  v20 = &v16[OBJC_IVAR____TtC8RemoteUI12ImageElement__tintColor];
  v36 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC378);
  sub_209F66CAC();
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v20, v5, v34);
  v21 = &v16[OBJC_IVAR____TtC8RemoteUI12ImageElement_baseURL];
  v22 = sub_209F66A90();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);

  v23 = (objc_class *)type metadata accessor for ImageElement();
  v35.receiver = v16;
  v35.super_class = v23;
  v24 = objc_msgSendSuper2(&v35, sel_init);
  __swift_project_boxed_opaque_existential_1(v18, v18[3]);
  v25 = v24;
  v26 = v39;
  v27 = Decoder.decodeRUIAttributeDictionary()();
  if (v26)
  {

  }
  else
  {
    sub_209F04D90(v27);
    swift_bridgeObjectRelease();
    v28 = (void *)sub_209F6724C();
    swift_bridgeObjectRelease();
    objc_msgSend(v25, sel_setAttributes_, v28);

  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  return v25;
}

id sub_209F445E4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ImageElement();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_209F446C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for ImageElement();
  result = sub_209F66C70();
  *a1 = result;
  return result;
}

uint64_t sub_209F44700()
{
  return type metadata accessor for ImageElement();
}

void sub_209F44708()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_209F447F4(319, &qword_2545BC390, &qword_2545BC350);
  if (v0 <= 0x3F)
  {
    sub_209F447F4(319, &qword_2545BC398, &qword_2545BBC78);
    if (v1 <= 0x3F)
    {
      sub_209F447F4(319, &qword_2545BC3A0, &qword_2545BC378);
      if (v2 <= 0x3F)
      {
        sub_209EE0664();
        if (v3 <= 0x3F)
          swift_updateClassMetadata2();
      }
    }
  }
}

void sub_209F447F4(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    v4 = sub_209F66CF4();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_209F44840()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id *v4;
  uint64_t (*v5)(void);
  id v6;

  v1 = OBJC_IVAR____TtC8RemoteUI19RUICustomContentRow____lazy_storage___contentLoader;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC8RemoteUI19RUICustomContentRow____lazy_storage___contentLoader))
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8RemoteUI19RUICustomContentRow____lazy_storage___contentLoader);
  }
  else
  {
    v3 = v0;
    v4 = (id *)sub_209EFF884();
    v5 = *(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *(_QWORD *)*v4) + 0xB8);
    v6 = *v4;
    v2 = v5();

    *(_QWORD *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_209F44960()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  _QWORD *v7;
  void (*v8)(id);
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  void *v22;
  id v23;
  uint64_t result;
  uint64_t v25;
  _QWORD v26[4];
  __int128 v27;
  uint64_t v28;
  _OWORD v29[3];
  uint64_t v30;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC3B0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v4 = OBJC_IVAR____TtC8RemoteUI19RUICustomContentRow_cell;
  v5 = *(void **)((char *)v0 + OBJC_IVAR____TtC8RemoteUI19RUICustomContentRow_cell);
  if (v5)
  {
    v6 = *(id *)((char *)v0 + OBJC_IVAR____TtC8RemoteUI19RUICustomContentRow_cell);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC3C0);
    v6 = sub_209F40B90(0, 0, 0);
    v5 = 0;
  }
  v7 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v8 = *(void (**)(id))((*MEMORY[0x24BEE4EA0] & *v0) + 0x128);
  v9 = v5;
  v8(v6);
  v10 = objc_msgSend(v0, sel_pageElement);
  if (!v10)
  {
    __break(1u);
    goto LABEL_9;
  }
  v11 = v10;
  v12 = objc_msgSend(v10, sel_page);

  if (!v12)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v25 = v4;
  v13 = objc_msgSend(v12, sel_objectModel, v2);

  if (v13)
  {
    v14 = (*(uint64_t (**)(void))((*v7 & *v1) + 0xA0))();
    sub_209F44840();
    v15 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8RemoteUI19RUICustomContentRow_childElementDirectory);
    v16 = v13;
    swift_retain();
    v17 = RUIObjectModel.decodingUserInfo.getter();
    v18 = v1;
    sub_209F0E020(v14, (uint64_t)v13, (uint64_t)v1, v15, v17, v29);
    v27 = v29[2];
    v28 = v30;
    RUIObjectModel.activityIndicatorManager.getter();
    v19 = type metadata accessor for ActivityIndicatorManager(0);
    v20 = sub_209F44C5C();
    v21 = sub_209F23EBC();
    sub_209F67114();
    swift_release();
    sub_209F44CA0((uint64_t)v29);
    v26[1] = v19;
    v26[2] = v20;
    v26[3] = v21;
    swift_getOpaqueTypeConformance2();
    v26[0] = sub_209F671C8();
    sub_209F40F0C((uint64_t)v26);
    swift_release();

    v22 = *(void **)((char *)v1 + v25);
    *(_QWORD *)((char *)v1 + v25) = v6;
    v23 = v6;

    return (uint64_t)v6;
  }
LABEL_10:
  result = sub_209F677E0();
  __break(1u);
  return result;
}

unint64_t sub_209F44C5C()
{
  unint64_t result;

  result = qword_2545BC3C8;
  if (!qword_2545BC3C8)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F784F8, &type metadata for BuddyMLRendererWrapper);
    atomic_store(result, (unint64_t *)&qword_2545BC3C8);
  }
  return result;
}

uint64_t sub_209F44CA0(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = *(void **)a1;
  v3 = *(void **)(a1 + 24);
  v4 = *(void **)(a1 + 32);

  swift_release();
  swift_release();

  return a1;
}

uint64_t sub_209F44D30()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  void *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;

  v1 = sub_209F66BA4();
  MEMORY[0x24BDAC7A8](v1, v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
  v5 = MEMORY[0x24BDAC7A8](v3, v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (*(uint64_t (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA0))(v5);
  if (!result)
    return result;
  v9 = (void *)result;
  v10 = objc_msgSend(v0, sel_pageElement);
  if (!v10)
  {
    __break(1u);
    goto LABEL_11;
  }
  v11 = v10;
  v12 = objc_msgSend(v10, sel_page);

  if (!v12)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v13 = objc_msgSend(v12, sel_objectModel);

  if (!v13)
  {
LABEL_12:
    result = sub_209F677E0();
    __break(1u);
    return result;
  }
  v14 = objc_msgSend(v13, sel_sourceURL);
  if (v14)
  {
    v15 = v14;
    sub_209F66A60();

    v16 = sub_209F66A90();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v7, 0, 1, v16);
  }
  else
  {
    v17 = sub_209F66A90();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v7, 1, 1, v17);
  }
  v18 = (void *)RUIObjectModel.decodingUserInfo.getter();
  type metadata accessor for HTTPDataSource();
  v19 = HTTPDataSource.__allocating_init()();
  sub_209F3C120((uint64_t)v9, (uint64_t)v7, v18, v19, (uint64_t)&protocol witness table for HTTPDataSource);
  sub_209EF528C((uint64_t)v7);

  return swift_release();
}

id RUICustomContentRow.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id RUICustomContentRow.init()()
{
  char *v0;
  uint64_t v1;
  char *v2;
  objc_super v4;

  *(_QWORD *)&v0[OBJC_IVAR____TtC8RemoteUI19RUICustomContentRow_cell] = 0;
  v1 = OBJC_IVAR____TtC8RemoteUI19RUICustomContentRow_childElementDirectory;
  type metadata accessor for ElementDirectory();
  v2 = v0;
  *(_QWORD *)&v0[v1] = sub_209F48184();
  *(_QWORD *)&v2[OBJC_IVAR____TtC8RemoteUI19RUICustomContentRow____lazy_storage___contentLoader] = 0;

  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for RUICustomContentRow();
  return objc_msgSendSuper2(&v4, sel_init);
}

id RUICustomContentRow.__allocating_init(attributes:parent:)(uint64_t a1, void *a2)
{
  objc_class *v2;
  void *v4;
  id v5;

  if (a1)
  {
    v4 = (void *)sub_209F6724C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithAttributes_parent_, v4, a2);

  return v5;
}

id RUICustomContentRow.init(attributes:parent:)(uint64_t a1, void *a2)
{
  char *v2;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  id v9;
  objc_super v11;

  *(_QWORD *)&v2[OBJC_IVAR____TtC8RemoteUI19RUICustomContentRow_cell] = 0;
  v5 = OBJC_IVAR____TtC8RemoteUI19RUICustomContentRow_childElementDirectory;
  type metadata accessor for ElementDirectory();
  v6 = v2;
  *(_QWORD *)&v2[v5] = sub_209F48184();
  *(_QWORD *)&v6[OBJC_IVAR____TtC8RemoteUI19RUICustomContentRow____lazy_storage___contentLoader] = 0;

  if (a1)
  {
    v7 = (void *)sub_209F6724C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0;
  }
  v11.receiver = v6;
  v11.super_class = (Class)type metadata accessor for RUICustomContentRow();
  v8 = objc_msgSendSuper2(&v11, sel_initWithAttributes_parent_, v7, a2);

  v9 = v8;
  if (v9)

  return v9;
}

uint64_t sub_209F45498()
{
  uint64_t v0;

  swift_release();
  return swift_release();
}

id RUICustomContentRow.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RUICustomContentRow();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for RUICustomContentRow()
{
  return objc_opt_self();
}

uint64_t method lookup function for RUICustomContentRow()
{
  return swift_lookUpClassMethod();
}

id RemoteUIController.decodingUserInfo.getter()
{
  void *v0;
  id result;
  void *v2;
  id v3;

  result = objc_msgSend(v0, sel_loader);
  if (result)
  {
    v2 = result;
    v3 = objc_msgSend(result, sel_decodingUserInfo);

    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_209F455D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB098);
  MEMORY[0x24BDAC7A8](v0, v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_209F677B0();
  __swift_allocate_value_buffer(v4, qword_2545C6F10);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_2545C6F10);
  sub_209F677A4();
  v6 = *(_QWORD *)(v4 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v3, 1, v4);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(v5, v3, v4);
  __break(1u);
  return result;
}

uint64_t sub_209F456BC()
{
  uint64_t v0;

  if (qword_2545C43D0 != -1)
    swift_once();
  v0 = sub_209F677B0();
  return __swift_project_value_buffer(v0, (uint64_t)qword_2545C6F10);
}

uint64_t sub_209F45704()
{
  _BYTE *v0;

  if (*v0)
    return 0x6874654D70747468;
  else
    return 7107189;
}

uint64_t sub_209F4573C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_209F45AF0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_209F45760()
{
  sub_209F462B8();
  return sub_209F67B88();
}

uint64_t sub_209F45788()
{
  sub_209F462B8();
  return sub_209F67B94();
}

uint64_t sub_209F457B0()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)v0;
  *(_OWORD *)(v1 + 32) = v2;
  *(_QWORD *)(v1 + 48) = *(_QWORD *)(v0 + 32);
  v5 = (uint64_t (*)(void))((char *)&dword_2545BC3D8 + dword_2545BC3D8);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 56) = v3;
  *v3 = v1;
  v3[1] = sub_209F45824;
  return v5();
}

uint64_t sub_209F45824()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_209F4586C()
{
  return sub_209F66BB0();
}

uint64_t sub_209F45880()
{
  sub_209F46230();
  return sub_209F66BBC();
}

double sub_209F458E4@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_209F45BDC(a1, v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_209F45928()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 120) = v0;
  return swift_task_switch();
}

uint64_t sub_209F45940()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = **(void ***)(v0 + 120);
  v2 = sub_209F672A0();
  *(_QWORD *)(v0 + 128) = v2;
  v3 = sub_209F672A0();
  *(_QWORD *)(v0 + 136) = v3;
  *(_QWORD *)(v0 + 56) = v0 + 152;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_209F45A10;
  v4 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
  v5 = (_QWORD *)(v0 + 80);
  v5[1] = 0x40000000;
  v5[2] = sub_209F33FB0;
  v5[3] = &block_descriptor_5;
  v5[4] = v4;
  objc_msgSend(v1, sel_openLink_HTTPMethod_completion_, v2, v3, v5);
  return swift_continuation_await();
}

uint64_t sub_209F45A10()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 144) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_209F45A70()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 128);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_209F45AA8()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 136);
  v2 = *(void **)(v0 + 128);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_209F45AF0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 7107189 && a2 == 0xE300000000000000;
  if (v2 || (sub_209F679A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6874654D70747468 && a2 == 0xEA0000000000646FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_209F679A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void sub_209F45BDC(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  void *v16;
  id v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  void *v34;

  v29 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC408);
  v30 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_209F677B0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v12 = sub_209F67B4C();
  if (qword_2545C43D0 != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v7, (uint64_t)qword_2545C6F10);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v13, v7);
  if (*(_QWORD *)(v12 + 16) && (v14 = sub_209EE628C((uint64_t)v11), (v15 & 1) != 0))
  {
    sub_209EE3288(*(_QWORD *)(v12 + 56) + 32 * v14, (uint64_t)&v32);
  }
  else
  {
    v32 = 0u;
    v33 = 0u;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  if (!*((_QWORD *)&v33 + 1))
  {
    sub_209EE58AC((uint64_t)&v32);
    goto LABEL_13;
  }
  sub_209F20020();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_13:
    sub_209F46274();
    swift_allocError();
    *v19 = 0;
    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return;
  }
  v16 = v34;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_209F462B8();
  v17 = v16;
  v18 = v31;
  sub_209F67B58();
  if (v18)
  {

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    LOBYTE(v32) = 0;
    v20 = sub_209F678A0();
    v22 = v21;
    LOBYTE(v32) = 1;
    swift_bridgeObjectRetain();
    v23 = sub_209F6787C();
    if (v24)
      v25 = v23;
    else
      v25 = 5522759;
    if (v24)
      v26 = v24;
    else
      v26 = 0xE300000000000000;
    (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v27 = v29;
    *v29 = v17;
    v27[1] = v20;
    v27[2] = v22;
    v27[3] = v25;
    v27[4] = v26;
  }
}

unint64_t sub_209F45F3C()
{
  unint64_t result;

  result = qword_2545BC3E0;
  if (!qword_2545BC3E0)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7AC18, &_s14descr24C29A739C10LoadActionV6ErrorsON);
    atomic_store(result, (unint64_t *)&qword_2545BC3E0);
  }
  return result;
}

unint64_t sub_209F45F84()
{
  unint64_t result;

  result = qword_2545BC3E8;
  if (!qword_2545BC3E8)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7ACF8, &_s14descr24C29A739C10LoadActionVN);
    atomic_store(result, (unint64_t *)&qword_2545BC3E8);
  }
  return result;
}

unint64_t sub_209F45FCC()
{
  unint64_t result;

  result = qword_2545BC3F8;
  if (!qword_2545BC3F8)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7AD28, &_s14descr24C29A739C10LoadActionVN);
    atomic_store(result, (unint64_t *)&qword_2545BC3F8);
  }
  return result;
}

uint64_t _s14descr24C29A739C10LoadActionVwxx(id *a1)
{

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s14descr24C29A739C10LoadActionVwcp(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v5;
  a1[4] = *(_QWORD *)(a2 + 32);
  v6 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s14descr24C29A739C10LoadActionVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s14descr24C29A739C10LoadActionVwta(uint64_t a1, _QWORD *a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v5 = a2[2];
  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  v6 = a2[4];
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s14descr24C29A739C10LoadActionVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s14descr24C29A739C10LoadActionVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s14descr24C29A739C10LoadActionVMa()
{
  return &_s14descr24C29A739C10LoadActionVN;
}

ValueMetadata *_s14descr24C29A739C10LoadActionV6ErrorsOMa()
{
  return &_s14descr24C29A739C10LoadActionV6ErrorsON;
}

unint64_t sub_209F46230()
{
  unint64_t result;

  result = qword_2545BC400;
  if (!qword_2545BC400)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7ACC0, &_s14descr24C29A739C10LoadActionVN);
    atomic_store(result, (unint64_t *)&qword_2545BC400);
  }
  return result;
}

unint64_t sub_209F46274()
{
  unint64_t result;

  result = qword_2545BC410;
  if (!qword_2545BC410)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7AC80, &_s14descr24C29A739C10LoadActionV6ErrorsON);
    atomic_store(result, (unint64_t *)&qword_2545BC410);
  }
  return result;
}

unint64_t sub_209F462B8()
{
  unint64_t result;

  result = qword_2545C46E0[0];
  if (!qword_2545C46E0[0])
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7AE28, &_s14descr24C29A739C10LoadActionV10CodingKeysON);
    atomic_store(result, qword_2545C46E0);
  }
  return result;
}

uint64_t _s14descr24C29A739C10LoadActionV6ErrorsOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_209F46348 + 4 * byte_209F7AC11[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_209F4637C + 4 * byte_209F7AC0C[v4]))();
}

uint64_t sub_209F4637C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_209F46384(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x209F4638CLL);
  return result;
}

uint64_t sub_209F46398(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x209F463A0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_209F463A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_209F463AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s14descr24C29A739C10LoadActionV10CodingKeysOMa()
{
  return &_s14descr24C29A739C10LoadActionV10CodingKeysON;
}

unint64_t sub_209F463CC()
{
  unint64_t result;

  result = qword_2545C47F0[0];
  if (!qword_2545C47F0[0])
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7AE00, &_s14descr24C29A739C10LoadActionV10CodingKeysON);
    atomic_store(result, qword_2545C47F0);
  }
  return result;
}

unint64_t sub_209F46414()
{
  unint64_t result;

  result = qword_2545C4900;
  if (!qword_2545C4900)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7AD70, &_s14descr24C29A739C10LoadActionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2545C4900);
  }
  return result;
}

unint64_t sub_209F4645C()
{
  unint64_t result;

  result = qword_2545C4908[0];
  if (!qword_2545C4908[0])
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7AD98, &_s14descr24C29A739C10LoadActionV10CodingKeysON);
    atomic_store(result, qword_2545C4908);
  }
  return result;
}

_QWORD *sub_209F464A0(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  _QWORD *v21;
  void (*v22)(void);
  _QWORD *v23;
  objc_super v25;
  uint64_t v26;

  v9 = OBJC_IVAR____TtC8RemoteUI28RUITextActivityIndicatorView_activityIndicator;
  v10 = objc_allocWithZone(MEMORY[0x24BEBD398]);
  v11 = v4;
  v12 = objc_msgSend(v10, sel_initWithActivityIndicatorStyle_, 100);
  *(_QWORD *)&v4[v9] = v12;
  v13 = OBJC_IVAR____TtC8RemoteUI28RUITextActivityIndicatorView_label;
  v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  *(_QWORD *)&v11[v13] = v14;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545BB750);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_209F7AE80;
  *(_QWORD *)(v15 + 32) = v12;
  *(_QWORD *)(v15 + 40) = v14;
  v26 = v15;
  sub_209F67414();
  v16 = objc_allocWithZone(MEMORY[0x24BEBD978]);
  sub_209F0A438(0, &qword_2545BC428);
  v17 = v12;
  v18 = v14;
  v19 = (void *)sub_209F673FC();
  swift_bridgeObjectRelease();
  v20 = objc_msgSend(v16, sel_initWithArrangedSubviews_, v19);

  *(_QWORD *)&v11[OBJC_IVAR____TtC8RemoteUI28RUITextActivityIndicatorView_stackView] = v20;
  v25.receiver = v11;
  v25.super_class = (Class)type metadata accessor for RUITextActivityIndicatorView();
  v21 = objc_msgSendSuper2(&v25, sel_initWithFrame_, a1, a2, a3, a4);
  v22 = *(void (**)(void))((*MEMORY[0x24BEE4EA0] & *v21) + 0x78);
  v23 = v21;
  v22();

  return v23;
}

uint64_t type metadata accessor for RUITextActivityIndicatorView()
{
  return objc_opt_self();
}

id sub_209F4675C()
{
  return sub_209F4678C((SEL *)&selRef_startAnimating, 0);
}

id sub_209F4677C()
{
  return sub_209F4678C((SEL *)&selRef_stopAnimating, 1);
}

id sub_209F4678C(SEL *a1, char a2)
{
  char *v2;

  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC8RemoteUI28RUITextActivityIndicatorView_activityIndicator], *a1);
  return objc_msgSend(v2, sel_setHidden_, a2 & 1);
}

void sub_209F467E0(char *a1, uint64_t a2, SEL *a3, char a4)
{
  void *v6;
  char *v7;

  v6 = *(void **)&a1[OBJC_IVAR____TtC8RemoteUI28RUITextActivityIndicatorView_activityIndicator];
  v7 = a1;
  objc_msgSend(v6, *a3);
  objc_msgSend(v7, sel_setHidden_, a4 & 1);

}

void sub_209F46848()
{
  char *v0;
  char *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  id v33;

  v1 = v0;
  (*(void (**)(void))((*MEMORY[0x24BEE4EA0] & *(_QWORD *)v0) + 0x70))();
  v2 = *(void **)&v0[OBJC_IVAR____TtC8RemoteUI28RUITextActivityIndicatorView_stackView];
  objc_msgSend(v2, sel_setAlignment_, 3);
  objc_msgSend(v2, sel_setSpacing_, 5.0);
  objc_msgSend(v2, sel_setAxis_, 1);
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v0, sel_addSubview_, v2);
  v3 = *(void **)&v0[OBJC_IVAR____TtC8RemoteUI28RUITextActivityIndicatorView_label];
  sub_209F413DC();
  v4 = (void *)sub_209F672A0();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setText_, v4);

  v5 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  objc_msgSend(v3, sel_setTextColor_, v5);

  v32 = (void *)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545BB750);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_209F7AE90;
  v7 = objc_msgSend(v2, sel_leadingAnchor);
  v8 = objc_msgSend(v1, sel_leadingAnchor);
  v9 = objc_msgSend(v7, sel_constraintEqualToAnchor_, v8);

  *(_QWORD *)(v6 + 32) = v9;
  v10 = objc_msgSend(v2, sel_trailingAnchor);
  v11 = objc_msgSend(v1, sel_trailingAnchor);
  v12 = objc_msgSend(v10, sel_constraintEqualToAnchor_, v11);

  *(_QWORD *)(v6 + 40) = v12;
  v13 = objc_msgSend(v2, sel_topAnchor);
  v14 = objc_msgSend(v1, sel_topAnchor);
  v15 = objc_msgSend(v13, sel_constraintEqualToAnchor_, v14);

  *(_QWORD *)(v6 + 48) = v15;
  v16 = objc_msgSend(v2, sel_bottomAnchor);
  v17 = objc_msgSend(v1, sel_bottomAnchor);
  v18 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v17);

  *(_QWORD *)(v6 + 56) = v18;
  v19 = *(void **)&v1[OBJC_IVAR____TtC8RemoteUI28RUITextActivityIndicatorView_activityIndicator];
  v20 = objc_msgSend(v19, sel_leadingAnchor);
  v21 = objc_msgSend(v2, sel_leadingAnchor);
  v22 = objc_msgSend(v20, sel_constraintGreaterThanOrEqualToAnchor_, v21);

  *(_QWORD *)(v6 + 64) = v22;
  v23 = objc_msgSend(v19, sel_trailingAnchor);
  v24 = objc_msgSend(v2, sel_trailingAnchor);
  v25 = objc_msgSend(v23, sel_constraintLessThanOrEqualToAnchor_, v24);

  *(_QWORD *)(v6 + 72) = v25;
  v26 = objc_msgSend(v3, sel_leadingAnchor);
  v27 = objc_msgSend(v2, sel_leadingAnchor);
  v28 = objc_msgSend(v26, sel_constraintGreaterThanOrEqualToAnchor_, v27);

  *(_QWORD *)(v6 + 80) = v28;
  v29 = objc_msgSend(v3, sel_trailingAnchor);
  v30 = objc_msgSend(v2, sel_trailingAnchor);
  v31 = objc_msgSend(v29, sel_constraintLessThanOrEqualToAnchor_, v30);

  *(_QWORD *)(v6 + 88) = v31;
  sub_209F67414();
  sub_209F0A438(0, (unint64_t *)&qword_2545BAFA0);
  v33 = (id)sub_209F673FC();
  swift_bridgeObjectRelease();
  objc_msgSend(v32, sel_activateConstraints_, v33);

}

id RUITextActivityIndicatorView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RUITextActivityIndicatorView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for RUITextActivityIndicatorView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RUITextActivityIndicatorView.startAnimating()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of RUITextActivityIndicatorView.stopAnimating()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x70))();
}

uint64_t sub_209F46DDC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_209F46E1C + 4 * byte_209F7AED0[a1]))(0x72616C7563726963, 0xED00006567646142);
}

uint64_t sub_209F46E1C()
{
  return 0x616D496567646162;
}

uint64_t sub_209F46E98(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_209F46ED8 + 4 * byte_209F7AED6[a1]))(0x72616C7563726963, 0xED00006567646142);
}

uint64_t sub_209F46ED8()
{
  return 0x616D496567646162;
}

void sub_209F46F54(char *a1)
{
  sub_209F46F60(*a1);
}

void sub_209F46F60(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_209F46FCC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_209F47070 + 4 * byte_209F7AEE2[a2]))(0x616D496567646162);
}

uint64_t sub_209F47070(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x616D496567646162 && v1 == 0xEA00000000006567)
    v2 = 1;
  else
    v2 = sub_209F679A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_209F4714C()
{
  char *v0;

  sub_209F47154(*v0);
}

void sub_209F47154(char a1)
{
  sub_209F67B10();
  __asm { BR              X10 }
}

uint64_t sub_209F471B0()
{
  sub_209F6733C();
  swift_bridgeObjectRelease();
  return sub_209F67B28();
}

void sub_209F47254(uint64_t a1)
{
  char *v1;

  sub_209F4725C(a1, *v1);
}

void sub_209F4725C(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_209F472A8()
{
  sub_209F6733C();
  return swift_bridgeObjectRelease();
}

void sub_209F47338(uint64_t a1)
{
  char *v1;

  sub_209F47340(a1, *v1);
}

void sub_209F47340(uint64_t a1, char a2)
{
  sub_209F67B10();
  __asm { BR              X10 }
}

uint64_t sub_209F47398()
{
  sub_209F6733C();
  swift_bridgeObjectRelease();
  return sub_209F67B28();
}

uint64_t sub_209F4743C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_209F47898();
  *a1 = result;
  return result;
}

uint64_t sub_209F47468@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_209F46DDC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_209F47490()
{
  unsigned __int8 *v0;

  return sub_209F46E98(*v0);
}

uint64_t sub_209F47498@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_209F47898();
  *a1 = result;
  return result;
}

void sub_209F474BC(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_209F474C8()
{
  sub_209F478E0();
  return sub_209F67B88();
}

uint64_t sub_209F474F0()
{
  sub_209F478E0();
  return sub_209F67B94();
}

uint64_t sub_209F47518@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  char *v37;
  int v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;
  int v44;
  char v45;
  _QWORD v46[5];
  uint64_t v47;
  uint64_t v48;
  unsigned __int8 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unsigned __int8 v53;
  uint64_t v54;
  unsigned __int8 v55;
  uint64_t v56;
  _BYTE *v57;

  v57 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC438);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v9 = sub_209F478E0();
  sub_209F67B58();
  if (!v2)
  {
    v10 = v5;
    LOBYTE(v47) = 0;
    v11 = v4;
    v12 = sub_209F67888();
    v37 = v8;
    sub_209EE0E3C((uint64_t)a1, (uint64_t)v46);
    LOBYTE(v38) = 1;
    v43 = 2;
    v42 = 3;
    v41 = 4;
    v40 = 5;
    RUIImage.Keys.init(image:systemImage:tintColor:imageWidth:imageHeight:)((uint64_t)&v38, (uint64_t)&v43, (uint64_t)&v42, (uint64_t)&v41, (uint64_t)&v40, (uint64_t)&type metadata for ImageBadge.CodingKeys, v9, (uint64_t)&v44);
    v38 = v44;
    v39 = v45;
    RUIImage.init<A>(from:keys:decodeBadge:)(&v47, v46, &v38, 0, &type metadata for ImageBadge.CodingKeys, v9);
    v33 = v12 & 1;
    v32 = v10;
    v15 = v47;
    v14 = v48;
    v29 = v47;
    v30 = v48;
    v16 = v49;
    v31 = v49;
    v17 = v50;
    v28 = v50;
    v27 = v51;
    v26 = v52;
    HIDWORD(v25) = v53;
    v36 = v54;
    v35 = v55;
    v34 = v56;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    Decoder.ruiDecodingContext.getter();
    v18 = v46[0];

    v47 = v15;
    v48 = v14;
    v49 = v16;
    v19 = v27;
    v50 = v17;
    v51 = v27;
    v20 = v26;
    v52 = v26;
    LOBYTE(v17) = BYTE4(v25);
    v53 = BYTE4(v25);
    v54 = v36;
    v55 = v35;
    v56 = v34;
    v21 = sub_209EDFDCC();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)v18 + 160))(&v47, v21, v22);
    swift_release();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v37, v11);
    v23 = v57;
    *v57 = v33;
    v24 = v30;
    *((_QWORD *)v23 + 1) = v29;
    *((_QWORD *)v23 + 2) = v24;
    v23[24] = v31;
    *((_QWORD *)v23 + 4) = v28;
    *((_QWORD *)v23 + 5) = v19;
    *((_QWORD *)v23 + 6) = v20;
    v23[56] = v17;
    *((_QWORD *)v23 + 8) = v36;
    v23[72] = v35;
    *((_QWORD *)v23 + 10) = v34;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_209F47884@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_209F47518(a1, a2);
}

uint64_t sub_209F47898()
{
  unint64_t v0;

  v0 = sub_209F67840();
  swift_bridgeObjectRelease();
  if (v0 >= 6)
    return 6;
  else
    return v0;
}

unint64_t sub_209F478E0()
{
  unint64_t result;

  result = qword_2545BC440;
  if (!qword_2545BC440)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7AFA4, &type metadata for ImageBadge.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BC440);
  }
  return result;
}

unint64_t sub_209F47928()
{
  unint64_t result;

  result = qword_2545BC448;
  if (!qword_2545BC448)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7AF04, &type metadata for ImageBadge.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BC448);
  }
  return result;
}

unint64_t sub_209F47970()
{
  unint64_t result;

  result = qword_2545BC450;
  if (!qword_2545BC450)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7B01C, &type metadata for ImageBadge.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BC450);
  }
  return result;
}

unint64_t sub_209F479B8()
{
  unint64_t result;

  result = qword_2545BC458;
  if (!qword_2545BC458)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7AFF4, &type metadata for ImageBadge.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BC458);
  }
  return result;
}

uint64_t destroy for ImageBadge(uint64_t a1)
{
  sub_209EEB098();

  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for ImageBadge(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  void *v7;
  uint64_t v8;
  id v9;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_209EEAFF0();
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  v7 = *(void **)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v9 = v7;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ImageBadge(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_209EEAFF0();
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  sub_209EEB098();
  v7 = *(void **)(a1 + 32);
  v8 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v8;
  v9 = v8;

  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  v10 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v10;
  LOBYTE(v10) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = v10;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for ImageBadge(uint64_t a1, uint64_t a2)
{
  char v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_BYTE *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = v4;
  sub_209EEB098();

  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageBadge(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ImageBadge(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageBadge()
{
  return &type metadata for ImageBadge;
}

uint64_t getEnumTagSinglePayload for ImageBadge.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ImageBadge.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_209F47DE8 + 4 * byte_209F7AEFF[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_209F47E1C + 4 * byte_209F7AEFA[v4]))();
}

uint64_t sub_209F47E1C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_209F47E24(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x209F47E2CLL);
  return result;
}

uint64_t sub_209F47E38(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x209F47E40);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_209F47E44(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_209F47E4C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ImageBadge.CodingKeys()
{
  return &type metadata for ImageBadge.CodingKeys;
}

id sub_209F47E68()
{
  id v0;

  v0 = objc_msgSend(objc_allocWithZone((Class)sub_209F66C10()), sel_init);
  sub_209F46230();
  sub_209F66C04();
  return v0;
}

unint64_t sub_209F47ED4(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC460);
  v2 = (_QWORD *)sub_209F67810();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 48);
  while (1)
  {
    v5 = (uint64_t)*(v4 - 2);
    v6 = (uint64_t)*(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    v8 = v7;
    result = sub_209EE31C0(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v8;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

id sub_209F47FEC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id result;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v11;

  v2 = v1;
  result = objc_msgSend(a1, sel_identifier);
  if (result)
  {
    v5 = result;
    v6 = sub_209F672C4();
    v8 = v7;

    swift_beginAccess();
    v9 = a1;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *(_QWORD *)(v2 + 16);
    *(_QWORD *)(v2 + 16) = 0x8000000000000000;
    sub_209F48508((uint64_t)v9, v6, v8, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v2 + 16) = v11;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (id)swift_endAccess();
  }
  return result;
}

void *sub_209F480C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  char v7;
  void *v8;
  id v9;

  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 16);
  if (!*(_QWORD *)(v5 + 16))
    return 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = sub_209EE31C0(a1, a2);
  if ((v7 & 1) != 0)
  {
    v8 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v6);
    v9 = v8;
  }
  else
  {
    v8 = 0;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_209F48160()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_209F48184()
{
  uint64_t v0;

  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = sub_209F47ED4(MEMORY[0x24BEE4AF8]);
  return v0;
}

uint64_t sub_209F481C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for ElementDirectory();
  result = sub_209F66C70();
  *a1 = result;
  return result;
}

uint64_t sub_209F481FC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC460);
  v38 = a2;
  v6 = sub_209F67804();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v35 = v2;
  v36 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v36)
        goto LABEL_33;
      v23 = *(_QWORD *)(v37 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v36)
              goto LABEL_33;
            v23 = *(_QWORD *)(v37 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v33 = v32;
    }
    sub_209F67B10();
    sub_209F6733C();
    result = sub_209F67B28();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v22 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

void sub_209F48508(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = sub_209EE31C0(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_209F48684();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];

      *(_QWORD *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      swift_bridgeObjectRetain();
      return;
    }
    goto LABEL_14;
  }
  sub_209F481FC(v15, a4 & 1);
  v20 = sub_209EE31C0(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_209F67AA4();
  __break(1u);
}

uint64_t type metadata accessor for ElementDirectory()
{
  return objc_opt_self();
}

id sub_209F48684()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC460);
  v2 = *v0;
  v3 = sub_209F677F8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(void **)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = v20;
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_209F48834()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 88));
  return swift_deallocClassInstance();
}

uint64_t sub_209F4886C(uint64_t a1)
{
  MEMORY[0x20BD1DB1C](&unk_209F7B130, a1);
  return sub_209F67B88();
}

uint64_t sub_209F488A0(uint64_t a1)
{
  MEMORY[0x20BD1DB1C](&unk_209F7B130, a1);
  return sub_209F67B94();
}

uint64_t RUIImage.Keys.image.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_209F675DC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t RUIImage.Keys.systemImage.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 36);
  v5 = sub_209F675DC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t RUIImage.Keys.tintColor.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 40);
  v5 = sub_209F675DC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t RUIImage.Keys.imageWidth.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 44);
  v5 = sub_209F675DC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t RUIImage.Keys.imageHeight.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 48);
  v5 = sub_209F675DC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t RUIImage.Keys.init(image:systemImage:tintColor:imageWidth:imageHeight:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v16;
  uint64_t v17;
  int *v18;
  void (*v20)(uint64_t, uint64_t, uint64_t);

  v16 = sub_209F675DC();
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32);
  v20(a8, a1, v16);
  v18 = (int *)type metadata accessor for RUIImage.Keys(0, a6, a7, v17);
  v20(a8 + v18[9], a2, v16);
  v20(a8 + v18[10], a3, v16);
  v20(a8 + v18[11], a4, v16);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v20)(a8 + v18[12], a5, v16);
}

void sub_209F48B20(char *a1)
{
  sub_209F48B2C(*a1);
}

void sub_209F48B2C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_209F48B74(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_209F48C0C + 4 * byte_209F7B0EF[a2]))(0x6D496D6574737973);
}

uint64_t sub_209F48C0C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6D496D6574737973 && v1 == 0xEB00000000656761)
    v2 = 1;
  else
    v2 = sub_209F679A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_209F48CE8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_209F67B10();
  __asm { BR              X9 }
}

uint64_t sub_209F48D30()
{
  sub_209F6733C();
  swift_bridgeObjectRelease();
  return sub_209F67B28();
}

void sub_209F48DD8()
{
  __asm { BR              X10 }
}

uint64_t sub_209F48E10()
{
  sub_209F6733C();
  return swift_bridgeObjectRelease();
}

void sub_209F48EA4()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_209F67B10();
  __asm { BR              X9 }
}

uint64_t sub_209F48EE8()
{
  sub_209F6733C();
  swift_bridgeObjectRelease();
  return sub_209F67B28();
}

uint64_t sub_209F48F90@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_209F4E300();
  *a1 = result;
  return result;
}

uint64_t sub_209F48FBC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_209F48FE8 + 4 * byte_209F7B103[*v0]))();
}

void sub_209F48FE8(_QWORD *a1@<X8>)
{
  *a1 = 0x6D496D6574737973;
  a1[1] = 0xEB00000000656761;
}

void sub_209F4900C(char *a1@<X8>)
{
  strcpy(a1, "imageTintColor");
  a1[15] = -18;
}

void sub_209F49034(_QWORD *a1@<X8>)
{
  *a1 = 0x6469576567616D69;
  a1[1] = 0xEA00000000006874;
}

void sub_209F49054(_QWORD *a1@<X8>)
{
  *a1 = 0x6965486567616D69;
  a1[1] = 0xEB00000000746867;
}

uint64_t sub_209F49078()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_209F490A4 + 4 * byte_209F7B108[*v0]))(0x6567616D69, 0xE500000000000000);
}

uint64_t sub_209F490A4()
{
  return 0x6D496D6574737973;
}

uint64_t sub_209F490C4()
{
  return 0x6E69546567616D69;
}

uint64_t sub_209F490E8()
{
  return 0x6469576567616D69;
}

uint64_t sub_209F49104()
{
  return 0x6965486567616D69;
}

uint64_t sub_209F49124@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_209F4E300();
  *a1 = result;
  return result;
}

void sub_209F49148(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_209F49154()
{
  sub_209F1BFCC();
  return sub_209F67B88();
}

uint64_t sub_209F4917C()
{
  sub_209F1BFCC();
  return sub_209F67B94();
}

uint64_t RUIImage.type.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_BYTE *)(v1 + 16);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
  return sub_209EEAFF0();
}

void *RUIImage.tintColor.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 24);
  v2 = v1;
  return v1;
}

uint64_t RUIImage.width.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t RUIImage.height.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 56);
}

__n128 RUIImage.init(from:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  _QWORD v12[5];
  __int128 v13;
  char v14;
  __n128 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;

  sub_209EE0E3C(a1, (uint64_t)v12);
  sub_209F492A4(v12, 0x505050505uLL, 1, (uint64_t)&v13);
  __swift_destroy_boxed_opaque_existential_1(a1);
  if (!v2)
  {
    v6 = v14;
    result = v15;
    v7 = v16;
    v8 = v17;
    v9 = v18;
    v10 = v19;
    v11 = v20;
    *(_OWORD *)a2 = v13;
    *(_BYTE *)(a2 + 16) = v6;
    *(__n128 *)(a2 + 24) = result;
    *(_QWORD *)(a2 + 40) = v7;
    *(_BYTE *)(a2 + 48) = v8;
    *(_QWORD *)(a2 + 56) = v9;
    *(_BYTE *)(a2 + 64) = v10;
    *(_QWORD *)(a2 + 72) = v11;
  }
  return result;
}

uint64_t sub_209F492A4@<X0>(_QWORD *a1@<X0>, unint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  char v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  _QWORD *v31;
  char *v32;
  _QWORD v34[5];
  int v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  unint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  _QWORD *v49;
  char v50;
  char v51;
  char v52;
  char v53;
  char v54;

  v35 = a3;
  v4 = a2;
  v49 = a1;
  v36 = a4;
  v5 = a2 >> 8;
  v6 = a2 >> 16;
  v7 = a2 >> 24;
  v8 = HIDWORD(a2);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
  v11 = MEMORY[0x24BDAC7A8](v9, v10);
  v39 = (char *)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11, v13);
  v41 = (char *)v34 - v15;
  MEMORY[0x24BDAC7A8](v14, v16);
  v44 = (char *)v34 - v17;
  v45 = sub_209F66A90();
  v46 = *(_QWORD *)(v45 - 8);
  v19 = MEMORY[0x24BDAC7A8](v45, v18);
  v40 = (char *)v34 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19, v21);
  v43 = (char *)v34 - v22;
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC468);
  v38 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48, v23);
  v25 = (char *)v34 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC470);
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26, v28);
  v30 = (char *)v34 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = v4;
  v42 = v5;
  v51 = v5;
  v52 = v6;
  v53 = v7;
  v31 = v49;
  v54 = v8;
  __swift_project_boxed_opaque_existential_1(v49, v49[3]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC478);
  sub_209F4E348();
  v32 = v47;
  sub_209F67B58();
  if (!v32)
  {
    v47 = v25;
    v34[3] = v27;
    v37 = v30;
    v34[4] = v26;
    __asm { BR              X11 }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
}

uint64_t sub_209F4956C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  double v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  int v41;
  char v42;
  unint64_t v43;
  uint64_t v44;
  _BOOL8 v45;
  uint64_t v46;
  char v47;
  unint64_t v48;
  char v49;
  _QWORD *v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  _BYTE v64[32];

  *(_QWORD *)(v2 - 192) = 0x6D496D6574737973;
  *(_QWORD *)(v2 - 184) = 0xEB00000000656761;
  *(_QWORD *)(v2 - 176) = 0;
  *(_BYTE *)(v2 - 168) = 1;
  v3 = sub_209F678A0();
  v4 = v0;
  if (v0)
  {
    swift_bridgeObjectRelease();
    __swift_project_boxed_opaque_existential_1(*(_QWORD **)(v2 - 240), *(_QWORD *)(*(_QWORD *)(v2 - 240) + 24));
    sub_209F4E394();
    sub_209F67B58();
    v5 = 0;
    v7 = *(_QWORD *)(v2 - 248);
    v8 = sub_209F678B8();
    MEMORY[0x24BDAC7A8](v8, v9);
    *(_QWORD *)&v64[16] = v2 - 93;
    v11 = sub_209F4B420((uint64_t)sub_209F503FC, (uint64_t)v64, v10);
    v12 = v11;
    v13 = *(_QWORD *)(v11 + 16);
    if (!v13)
    {
      v57 = MEMORY[0x24BEE4B00];
      v58 = *(_QWORD *)(v2 - 272);
      goto LABEL_34;
    }
    swift_bridgeObjectRetain();
    *(_QWORD *)(v2 - 424) = v12;
    v14 = (_BYTE *)(v12 + 64);
    *(_QWORD *)(v2 - 368) = MEMORY[0x24BEE4B00];
    *(_QWORD *)(v2 - 416) = v4;
    while (1)
    {
      v15 = *v14;
      v17 = *((_QWORD *)v14 - 2);
      v16 = *((_QWORD *)v14 - 1);
      v18 = *((_OWORD *)v14 - 2);
      *(_OWORD *)(v2 - 320) = v18;
      *(_OWORD *)(v2 - 192) = v18;
      *(_QWORD *)(v2 - 176) = v17;
      *(_QWORD *)(v2 - 168) = v16;
      *(_BYTE *)(v2 - 160) = v15;
      swift_bridgeObjectRetain();
      sub_209F6787C();
      if (v5)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 408) + 8))(v1, *(_QWORD *)(v2 - 400));
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v2 - 352) + 8))(*(_QWORD *)(v2 - 256), *(_QWORD *)(v2 - 248));
        goto LABEL_42;
      }
      if (v19)
      {
        *(_QWORD *)(v2 - 360) = 0;
        v20 = v4;
        v21 = v1;
        v22 = *(_QWORD *)(v2 - 280);
        sub_209F66A84();
        swift_bridgeObjectRelease();
        v23 = *(_QWORD *)(v2 - 264);
        v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
        v25 = *(_QWORD *)(v2 - 272);
        if (v24(v22, 1, v25) != 1)
        {
          v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32);
          v27 = *(_QWORD *)(v2 - 304);
          v26(v27, v22, v25);
          v28 = (double)*(uint64_t *)(v2 - 320);
          v29 = *(_QWORD *)(v2 - 328);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v29, v27, v25);
          v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56);
          v30(v29, 0, 1, v25);
          if (v24(v29, 1, v25) == 1)
          {
            *(_QWORD *)(v2 - 320) = v26;
            sub_209EE017C(v29, &qword_2545BB600);
            v31 = *(_QWORD *)(v2 - 368);
            v32 = sub_209F4C4BC(v28);
            v5 = *(_QWORD *)(v2 - 360);
            if ((v33 & 1) != 0)
            {
              v34 = v32;
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              *(_QWORD *)(v2 - 192) = v31;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                sub_209F4CA84();
                v31 = *(_QWORD *)(v2 - 192);
              }
              v36 = *(_QWORD *)(v2 - 344);
              v37 = *(_QWORD *)(v2 - 272);
              (*(void (**)(uint64_t, unint64_t, uint64_t))(v2 - 320))(v36, *(_QWORD *)(v31 + 56) + *(_QWORD *)(*(_QWORD *)(v2 - 264) + 72) * v34, v37);
              *(_QWORD *)(v2 - 368) = v31;
              sub_209F4C828(v34, v31);
              swift_bridgeObjectRelease();
              v38 = 0;
            }
            else
            {
              v38 = 1;
              v37 = *(_QWORD *)(v2 - 272);
              v36 = *(_QWORD *)(v2 - 344);
            }
            v30(v36, v38, 1, v37);
            sub_209EE017C(v36, &qword_2545BB600);
            v4 = *(void **)(v2 - 416);
            v54 = *(_QWORD *)(v2 - 264);
            v55 = *(_QWORD *)(v2 - 304);
            goto LABEL_28;
          }
          v39 = v26;
          v26(*(_QWORD *)(v2 - 336), v29, v25);
          v40 = *(_QWORD *)(v2 - 368);
          v41 = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)(v2 - 192) = v40;
          v43 = sub_209F4C4BC(v28);
          v44 = *(_QWORD *)(v40 + 16);
          v45 = (v42 & 1) == 0;
          v46 = v44 + v45;
          v5 = *(_QWORD *)(v2 - 360);
          if (__OFADD__(v44, v45))
          {
            __break(1u);
LABEL_39:
            __break(1u);
LABEL_40:
            sub_209F67AA4();
            __break(1u);
            JUMPOUT(0x209F4A380);
          }
          v47 = v42;
          if (*(_QWORD *)(v40 + 24) >= v46)
          {
            if ((v41 & 1) != 0)
            {
              v50 = *(_QWORD **)(v2 - 192);
              if ((v42 & 1) == 0)
                goto LABEL_20;
            }
            else
            {
              sub_209F4CA84();
              v50 = *(_QWORD **)(v2 - 192);
              if ((v47 & 1) == 0)
                goto LABEL_20;
            }
          }
          else
          {
            sub_209F4C4F0(v46, v41);
            v48 = sub_209F4C4BC(v28);
            if ((v47 & 1) != (v49 & 1))
              goto LABEL_40;
            v43 = v48;
            v50 = *(_QWORD **)(v2 - 192);
            if ((v47 & 1) == 0)
            {
LABEL_20:
              v50[(v43 >> 6) + 8] |= 1 << v43;
              *(double *)(v50[6] + 8 * v43) = v28;
              v39(v50[7] + *(_QWORD *)(*(_QWORD *)(v2 - 264) + 72) * v43, *(_QWORD *)(v2 - 336), *(_QWORD *)(v2 - 272));
              v51 = v50[2];
              v52 = __OFADD__(v51, 1);
              v53 = v51 + 1;
              if (v52)
                goto LABEL_39;
              v50[2] = v53;
              v4 = *(void **)(v2 - 416);
              v37 = *(_QWORD *)(v2 - 272);
              v54 = *(_QWORD *)(v2 - 264);
              goto LABEL_27;
            }
          }
          v56 = v50[7];
          v54 = *(_QWORD *)(v2 - 264);
          v37 = *(_QWORD *)(v2 - 272);
          (*(void (**)(unint64_t, _QWORD, uint64_t))(v54 + 40))(v56 + *(_QWORD *)(v54 + 72) * v43, *(_QWORD *)(v2 - 336), v37);
          v4 = *(void **)(v2 - 416);
LABEL_27:
          v55 = *(_QWORD *)(v2 - 304);
          *(_QWORD *)(v2 - 368) = *(_QWORD *)(v2 - 192);
          swift_bridgeObjectRelease();
LABEL_28:
          (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v55, v37);
          v1 = *(_QWORD *)(v2 - 376);
          goto LABEL_7;
        }
        sub_209EE017C(v22, &qword_2545BB600);
        v1 = v21;
        v4 = v20;
        v5 = *(_QWORD *)(v2 - 360);
      }
LABEL_7:
      swift_bridgeObjectRelease();
      v14 += 40;
      if (!--v13)
      {
        swift_bridgeObjectRelease();
        v7 = *(_QWORD *)(v2 - 248);
        v58 = *(_QWORD *)(v2 - 272);
        v57 = *(_QWORD *)(v2 - 368);
LABEL_34:
        swift_bridgeObjectRelease();
        v59 = *(_QWORD *)(v2 - 352);
        if (*(_QWORD *)(v57 + 16))
        {
          *(_QWORD *)(v2 - 368) = v57;

          v6 = (*(uint64_t (**)(_QWORD, uint64_t))(v59 + 8))(*(_QWORD *)(v2 - 256), v7);
          return ((uint64_t (*)(uint64_t))((char *)&loc_209F49C34
                                                  + *((int *)qword_209F4A398 + *(unsigned __int8 *)(v2 - 91))))(v6);
        }
        swift_bridgeObjectRelease();
        v61 = sub_209F67720();
        swift_allocError();
        v63 = v62;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC328);
        *v63 = v58;
        *(_QWORD *)(v2 - 416) = v4;
        __swift_project_boxed_opaque_existential_1(*(_QWORD **)(v2 - 240), *(_QWORD *)(*(_QWORD *)(v2 - 240) + 24));
        sub_209F679B4();
        sub_209F67714();
        (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v61 - 8) + 104))(v63, *MEMORY[0x24BEE26E0], v61);
        swift_willThrow();

        (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 408) + 8))(v1, *(_QWORD *)(v2 - 400));
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v2 - 352) + 8))(*(_QWORD *)(v2 - 256), *(_QWORD *)(v2 - 248));
LABEL_42:
        JUMPOUT(0x209F494E0);
      }
    }
  }
  *(_QWORD *)(v2 - 368) = v3;
  v6 = swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t))((char *)&loc_209F49C34
                                          + *((int *)qword_209F4A398 + *(unsigned __int8 *)(v2 - 91))))(v6);
}

void RUIImage.init<A>(from:keys:decodeBadge:)(_QWORD *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  void *v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  id v49;
  void *v50;
  uint64_t v51;
  id v52;
  void *v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  _BYTE *v73;
  uint64_t *v74;
  _BYTE v75[24];
  uint64_t v76;
  _BYTE *v77;
  uint64_t v78;
  _BYTE *v79;
  _QWORD *v80;
  _BYTE *v81;
  uint64_t v82;
  int v83;
  uint64_t *v84;
  uint64_t v85;
  _BYTE *v86;
  _BYTE *v87;
  __int128 v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  _BYTE *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unsigned __int8 v99;
  uint64_t v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  __int128 v104;
  _BYTE *v105;
  unsigned __int8 v106;
  uint64_t v107;
  unsigned __int8 v108;
  _BYTE *v109;
  char v110;

  v96 = a5;
  v93 = a4;
  v83 = a3;
  v97 = a2;
  v84 = a6;
  v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC468);
  v85 = *(_QWORD *)(v94 - 8);
  MEMORY[0x24BDAC7A8](v94, v7);
  v95 = &v75[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB600);
  v11 = MEMORY[0x24BDAC7A8](v9, v10);
  v86 = &v75[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = MEMORY[0x24BDAC7A8](v11, v13);
  v87 = &v75[-v15];
  MEMORY[0x24BDAC7A8](v14, v16);
  *(_QWORD *)&v88 = &v75[-v17];
  v90 = sub_209F66A90();
  v91 = *(_QWORD *)(v90 - 8);
  v19 = MEMORY[0x24BDAC7A8](v90, v18);
  v21 = &v75[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v19, v22);
  v24 = &v75[-v23];
  v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC470);
  v25 = *(_QWORD *)(v89 - 8);
  MEMORY[0x24BDAC7A8](v89, v26);
  v28 = &v75[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC478);
  sub_209F4E348();
  v29 = v92;
  sub_209F67B58();
  if (v29)
  {
    v31 = type metadata accessor for RUIImage.Keys(0, v93, v96, v30);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v97, v31);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v81 = v24;
    v77 = v21;
    v80 = a1;
    v78 = v25;
    v32 = v93;
    v33 = v96;
    v34 = type metadata accessor for RUIImage.Keys(0, v93, v96, v30);
    v35 = v97 + *(int *)(v34 + 36);
    LOBYTE(v100) = 1;
    v36 = sub_209F1BFCC();
    v100 = sub_209F35174(v35, (uint64_t)&v100, (uint64_t)&type metadata for RUIImage.DefaultCodingKeys, v32, v36, v33);
    v101 = v37;
    v102 = v38;
    LOBYTE(v103) = v39 & 1;
    v79 = v28;
    v40 = sub_209F678A0();
    v95 = v41;
    v82 = v40;
    swift_bridgeObjectRelease();
    v110 = 1;
    v42 = v97 + *(int *)(v34 + 40);
    LOBYTE(v100) = 2;
    v100 = sub_209F35174(v42, (uint64_t)&v100, (uint64_t)&type metadata for RUIImage.DefaultCodingKeys, v32, v36, v96);
    v101 = v43;
    v102 = v44;
    LOBYTE(v103) = v45 & 1;
    v94 = sub_209F6787C();
    v47 = v46;
    v76 = v34;
    swift_bridgeObjectRelease();
    if (v47)
    {
      swift_bridgeObjectRetain();
      v48 = (void *)sub_209F672A0();
      swift_bridgeObjectRelease();
      v49 = objc_msgSend((id)objc_opt_self(), sel__remoteUI_colorWithString_, v48);
      swift_bridgeObjectRelease();

      v50 = v49;
    }
    else
    {
      v50 = 0;
    }
    v51 = v97 + *(int *)(v76 + 44);
    LOBYTE(v100) = 3;
    v94 = (uint64_t)v50;
    v52 = v50;
    v100 = sub_209F35174(v51, (uint64_t)&v100, (uint64_t)&type metadata for RUIImage.DefaultCodingKeys, v32, v36, v96);
    v101 = v53;
    v102 = v54;
    LOBYTE(v103) = v55 & 1;
    sub_209F4E488();
    v56 = v89;
    sub_209F67894();
    v92 = v52;
    swift_bridgeObjectRelease();
    v57 = v98;
    LODWORD(v52) = v99;
    v58 = v97 + *(int *)(v76 + 48);
    LOBYTE(v100) = 4;
    v100 = sub_209F35174(v58, (uint64_t)&v100, (uint64_t)&type metadata for RUIImage.DefaultCodingKeys, v93, v36, v96);
    v101 = v59;
    v102 = v60;
    LOBYTE(v103) = v61 & 1;
    sub_209F67894();
    LODWORD(v96) = (_DWORD)v52;
    v62 = v97;
    swift_bridgeObjectRelease();
    v93 = v98;
    LODWORD(v91) = v99;
    if ((v83 & 1) != 0)
    {
      sub_209EE0E3C((uint64_t)v80, (uint64_t)&v98);
      sub_209F47518(&v98, &v100);
      v63 = v78;
      v64 = v57;
      v65 = v100;
      v66 = v101;
      v67 = v102;
      LODWORD(v90) = v103;
      v88 = v104;
      v87 = v105;
      LODWORD(v86) = v106;
      v85 = v107;
      v83 = v108;
      v81 = v109;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC498);
      v68 = swift_allocObject();
      *(_BYTE *)(v68 + 16) = v65;
      *(_QWORD *)(v68 + 24) = v66;
      *(_QWORD *)(v68 + 32) = v67;
      *(_BYTE *)(v68 + 40) = v90;
      *(_OWORD *)(v68 + 48) = v88;
      *(_QWORD *)(v68 + 64) = v87;
      *(_BYTE *)(v68 + 72) = (_BYTE)v86;
      *(_QWORD *)(v68 + 80) = v85;
      *(_BYTE *)(v68 + 88) = v83;
      *(_QWORD *)(v68 + 96) = v81;
    }
    else
    {
      v64 = v57;
      v68 = 0;
      v63 = v78;
    }
    v69 = v80;
    __swift_project_boxed_opaque_existential_1(v80, v80[3]);
    Decoder.ruiDecodingContext.getter();
    (*(void (**)(_BYTE *, uint64_t))(v63 + 8))(v79, v56);
    (*(void (**)(uint64_t))(*(_QWORD *)(v76 - 8) + 8))(v62);
    v70 = v100;

    v71 = v110;
    v72 = v82;
    v73 = v95;
    sub_209EEAFF0();
    v74 = v84;
    *v84 = v72;
    v74[1] = (uint64_t)v73;
    *((_BYTE *)v74 + 16) = v71;
    v74[3] = v94;
    v74[4] = v70;
    v74[5] = v64;
    *((_BYTE *)v74 + 48) = v96;
    v74[7] = v93;
    *((_BYTE *)v74 + 64) = v91;
    v74[9] = v68;
    swift_retain();
    swift_retain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v69);
    sub_209EEB098();
    swift_release();
    swift_release();

  }
}

uint64_t sub_209F4B420(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(_QWORD *);
  uint64_t v20;
  _QWORD v21[4];
  char v22;
  uint64_t v23;

  v4 = v3;
  v19 = (uint64_t (*)(_QWORD *))result;
  v18 = *(_QWORD *)(a3 + 16);
  if (v18)
  {
    v5 = 0;
    v6 = (_BYTE *)(a3 + 64);
    v7 = MEMORY[0x24BEE4AF8];
    v17 = a3;
    while (v5 < *(_QWORD *)(a3 + 16))
    {
      v8 = *((_QWORD *)v6 - 4);
      v9 = *((_QWORD *)v6 - 2);
      v10 = *((_QWORD *)v6 - 1);
      v11 = *v6;
      v20 = *((_QWORD *)v6 - 3);
      v21[0] = v8;
      v21[1] = v20;
      v21[2] = v9;
      v21[3] = v10;
      v22 = v11;
      swift_bridgeObjectRetain();
      v12 = v4;
      v13 = v19(v21);
      if (v4)
      {
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      if ((v13 & 1) != 0)
      {
        result = swift_isUniquelyReferenced_nonNull_native();
        v23 = v7;
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_209F4C214(0, *(_QWORD *)(v7 + 16) + 1, 1);
          v7 = v23;
        }
        v15 = *(_QWORD *)(v7 + 16);
        v14 = *(_QWORD *)(v7 + 24);
        if (v15 >= v14 >> 1)
        {
          result = (uint64_t)sub_209F4C214((char *)(v14 > 1), v15 + 1, 1);
          v7 = v23;
        }
        *(_QWORD *)(v7 + 16) = v15 + 1;
        v16 = v7 + 40 * v15;
        *(_QWORD *)(v16 + 32) = v8;
        *(_QWORD *)(v16 + 40) = v20;
        *(_QWORD *)(v16 + 48) = v9;
        *(_QWORD *)(v16 + 56) = v10;
        *(_BYTE *)(v16 + 64) = v11;
        v4 = v12;
      }
      else
      {
        result = swift_bridgeObjectRelease();
      }
      ++v5;
      v6 += 40;
      a3 = v17;
      if (v18 == v5)
        goto LABEL_16;
    }
    __break(1u);
  }
  else
  {
    v7 = MEMORY[0x24BEE4AF8];
LABEL_16:
    swift_bridgeObjectRelease();
    return v7;
  }
  return result;
}

id RUIImage.preloadedImage.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  double v18;
  double v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  double v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  _BYTE v32[4];
  int v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  char v45;
  uint64_t v46;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BAF08);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (double *)&v32[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BAF10);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = &v32[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = *(_QWORD *)v0;
  v11 = *(_QWORD *)(v0 + 8);
  if (*(_BYTE *)(v0 + 16) == 1)
  {
    swift_bridgeObjectRetain();
    v12 = (void *)sub_209F672A0();
    sub_209EEB098();
    v13 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v12);

  }
  else
  {
    v36 = *(_QWORD *)(v0 + 72);
    v35 = *(unsigned __int8 *)(v0 + 64);
    v34 = *(_QWORD *)(v0 + 56);
    v33 = *(unsigned __int8 *)(v0 + 48);
    v14 = *(_QWORD *)(v0 + 32);
    v15 = *(_QWORD *)(v0 + 40);
    v16 = *(_QWORD *)(v0 + 24);
    v17 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
    objc_msgSend(v17, sel_scale);
    v19 = v18;

    v37 = v10;
    v38 = v11;
    v39 = 0;
    v40 = v16;
    v41 = v14;
    v42 = v15;
    v43 = v33;
    v44 = v34;
    v45 = v35;
    v46 = v36;
    RUIImage.resource(forScale:)(v4, v19);
    if ((*(unsigned int (**)(double *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      v20 = &qword_2545BAF08;
      v21 = (uint64_t)v4;
    }
    else
    {
      v22 = *(int *)(v5 + 48);
      v23 = (char *)v9 + v22;
      v24 = (char *)v4 + v22;
      v25 = *v4;
      *v9 = *(_QWORD *)v4;
      v26 = sub_209F66A90();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v23, v24, v26);
      (*(void (**)(uint64_t *__return_ptr, _QWORD, char *, _QWORD))(*(_QWORD *)v14 + 128))(&v37, MEMORY[0x24BDCDDE8], v23, MEMORY[0x24BDCDDE8]);
      v27 = v38;
      if (v38 >> 60 != 15)
      {
        v28 = v37;
        v29 = objc_allocWithZone(MEMORY[0x24BEBD640]);
        v30 = (void *)sub_209F66AA8();
        v13 = objc_msgSend(v29, sel_initWithData_scale_, v30, v25);
        sub_209EE4914(v28, v27);

        sub_209EE017C((uint64_t)v9, &qword_2545BAF10);
        return v13;
      }
      v20 = &qword_2545BAF10;
      v21 = (uint64_t)v9;
    }
    sub_209EE017C(v21, v20);
    return 0;
  }
  return v13;
}

uint64_t RUIImage.resourceForMaxScreenScale()@<X0>(_QWORD *a1@<X8>)
{
  id v2;
  double v3;
  double v4;

  v2 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v2, sel_scale);
  v4 = v3;

  return RUIImage.resource(forScale:)(a1, v4);
}

uint64_t RUIImage.resource(forScale:)@<X0>(_QWORD *a1@<X8>, double a2@<D0>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  unint64_t v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  _QWORD *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  _QWORD *v61;
  uint64_t *v62;
  char *v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC4A0);
  v6 = *(_QWORD *)(v5 - 8);
  v8 = MEMORY[0x24BDAC7A8](v5, v7);
  v10 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v8, v11);
  v14 = (char *)&v59 - v13;
  v16 = MEMORY[0x24BDAC7A8](v12, v15);
  v18 = (char *)&v59 - v17;
  v20 = MEMORY[0x24BDAC7A8](v16, v19);
  v22 = (double *)((char *)&v59 - v21);
  MEMORY[0x24BDAC7A8](v20, v23);
  v25 = (char *)&v59 - v24;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC4A8);
  v28 = MEMORY[0x24BDAC7A8](v26, v27);
  v30 = (char *)&v59 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28, v31);
  if (*(_BYTE *)(v2 + 16) == 1)
  {
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BAF10);
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(a1, 1, 1, v33);
  }
  else
  {
    v62 = (uint64_t *)v14;
    v63 = v10;
    v65 = v5;
    v66 = (uint64_t)&v59 - v32;
    v64 = (uint64_t *)v18;
    v35 = swift_bridgeObjectRetain();
    v36 = (_QWORD *)sub_209F4C0DC(v35);
    sub_209EEB098();
    v67 = v36;
    sub_209F4CCB4(&v67);
    v37 = v67;
    v38 = v67[2];
    if (v38)
    {
      v61 = a1;
      v39 = (char *)v67 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      v40 = *(_QWORD *)(v6 + 72);
      swift_retain();
      v60 = v39;
      v41 = v38;
      do
      {
        sub_209EE3528((uint64_t)v39, (uint64_t)v22, &qword_2545BC4A0);
        if (*v22 >= a2)
        {
          swift_release();
          sub_209EF1E0C((uint64_t)v22, (uint64_t)v25, &qword_2545BC4A0);
          swift_release();
          v43 = v66;
          sub_209EF1E0C((uint64_t)v25, v66, &qword_2545BC4A0);
          v44 = v65;
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(v43, 0, 1, v65);
          goto LABEL_11;
        }
        sub_209EE017C((uint64_t)v22, &qword_2545BC4A0);
        v39 += v40;
        --v41;
      }
      while (v41);
      swift_release();
      if (v38 <= v37[2])
      {
        v42 = (uint64_t)&v60[v40 * (v38 - 1)];
        v43 = v66;
        sub_209EE3528(v42, v66, &qword_2545BC4A0);
        v44 = v65;
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(v43, 0, 1, v65);
        swift_release();
LABEL_11:
        a1 = v61;
        goto LABEL_12;
      }
      __break(1u);
      result = swift_release();
      __break(1u);
    }
    else
    {
      v44 = v65;
      v43 = v66;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v66, 1, 1, v65);
      swift_release();
LABEL_12:
      sub_209EE3528(v43, (uint64_t)v30, &qword_2545BC4A8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v30, 1, v44) == 1)
      {
        v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BAF10);
        (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(a1, 1, 1, v45);
      }
      else
      {
        v46 = v64;
        sub_209EF1E0C((uint64_t)v30, (uint64_t)v64, &qword_2545BC4A0);
        v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BAF10);
        v48 = (char *)a1 + *(int *)(v47 + 48);
        v49 = *(int *)(v44 + 48);
        v50 = (char *)v62 + v49;
        v51 = (char *)v46 + v49;
        v52 = *v46;
        *v62 = *v46;
        v53 = sub_209F66A90();
        v54 = *(_QWORD *)(v53 - 8);
        v55 = *(void (**)(char *, char *, uint64_t))(v54 + 16);
        v55(v50, v51, v53);
        *a1 = v52;
        v56 = *(int *)(v44 + 48);
        v57 = a1;
        v58 = &v63[v56];
        v55(&v63[v56], v51, v53);
        v43 = v66;
        (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v48, v58, v53);
        (*(void (**)(char *, uint64_t))(v54 + 8))(v50, v53);
        sub_209EE017C((uint64_t)v46, &qword_2545BC4A0);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v57, 0, 1, v47);
      }
      return sub_209EE017C(v43, &qword_2545BC4A8);
    }
  }
  return result;
}

__n128 sub_209F4BDFC@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  _QWORD v12[5];
  __int128 v13;
  char v14;
  __n128 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;

  sub_209EE0E3C(a1, (uint64_t)v12);
  sub_209F492A4(v12, 0x505050505uLL, 1, (uint64_t)&v13);
  __swift_destroy_boxed_opaque_existential_1(a1);
  if (!v2)
  {
    v6 = v14;
    result = v15;
    v7 = v16;
    v8 = v17;
    v9 = v18;
    v10 = v19;
    v11 = v20;
    *(_OWORD *)a2 = v13;
    *(_BYTE *)(a2 + 16) = v6;
    *(__n128 *)(a2 + 24) = result;
    *(_QWORD *)(a2 + 40) = v7;
    *(_BYTE *)(a2 + 48) = v8;
    *(_QWORD *)(a2 + 56) = v9;
    *(_BYTE *)(a2 + 64) = v10;
    *(_QWORD *)(a2 + 72) = v11;
  }
  return result;
}

uint64_t sub_209F4BEAC()
{
  _QWORD *v0;
  uint64_t v1;
  __int128 v3;

  if (*v0 == 1)
  {
    v1 = v0[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    v3 = *(_OWORD *)(v0 + 1);
    sub_209F4E4CC((uint64_t)v0);
    sub_209F678F4();
    sub_209F67354();
    swift_bridgeObjectRelease();
    sub_209F67354();
    return v3;
  }
  return v1;
}

uint64_t sub_209F4BF44()
{
  return sub_209F4BEAC();
}

uint64_t sub_209F4BF7C@<X0>(uint64_t a1@<X8>)
{
  _BYTE v3[40];

  sub_209F4E4F4((uint64_t)v3);
  return sub_209EF1E0C((uint64_t)v3, a1, &qword_2545BC4B0);
}

uint64_t sub_209F4BFBC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

double sub_209F4BFC8@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_BYTE *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_209F4BFD8()
{
  sub_209F4E394();
  return sub_209F67B88();
}

uint64_t sub_209F4C000()
{
  sub_209F4E394();
  return sub_209F67B94();
}

uint64_t sub_209F4C028@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t result;

  v3 = *(_QWORD *)(v1 + 72);
  if (v3)
  {
    v4 = *(_QWORD *)(v3 + 24);
    v5 = *(_QWORD *)(v3 + 32);
    v6 = *(unsigned __int8 *)(v3 + 40);
    v8 = *(void **)(v3 + 48);
    v7 = *(_QWORD *)(v3 + 56);
    v9 = *(_QWORD *)(v3 + 64);
    v10 = *(unsigned __int8 *)(v3 + 72);
    v11 = *(_QWORD *)(v3 + 80);
    v12 = *(unsigned __int8 *)(v3 + 88);
    v13 = *(_QWORD *)(v3 + 96);
    *a1 = *(unsigned __int8 *)(v3 + 16);
    a1[1] = v4;
    a1[2] = v5;
    a1[3] = v6;
    a1[4] = v8;
    a1[5] = v7;
    a1[6] = v9;
    sub_209EEAFF0();
    swift_retain();
    v14 = v8;
    result = swift_retain();
  }
  else
  {
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v13 = 0;
    a1[6] = 0;
    *((_OWORD *)a1 + 1) = 0u;
    *((_OWORD *)a1 + 2) = 0u;
    *(_OWORD *)a1 = 0u;
  }
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v12;
  a1[10] = v13;
  return result;
}

size_t sub_209F4C0DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  size_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC4E0);
  v3 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545BC4A0) - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      v9 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545BC4A0) - 8) + 80);
      v10 = sub_209F4DFE8(&v11, (uint64_t)v6 + ((v9 + 32) & ~v9), v1, a1);
      swift_bridgeObjectRetain();
      sub_209EE3520();
      if (v10 == v1)
        return (size_t)v6;
      __break(1u);
      return MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

char *sub_209F4C214(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_209F4C230(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

char *sub_209F4C230(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC4F8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8])
      memmove(v12, v13, 40 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

size_t sub_209F4C340(size_t result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  unint64_t v16;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC4E0);
  v10 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545BC4A0) - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_29;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  v15 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545BC4A0) - 8);
  if ((v5 & 1) != 0)
  {
    if (v13 < a4
      || (v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80),
          (char *)v13 + v16 >= (char *)a4 + v16 + *(_QWORD *)(v15 + 72) * v8))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return (size_t)v13;
}

unint64_t sub_209F4C4BC(double a1)
{
  uint64_t v2;

  v2 = sub_209F67B04();
  return sub_209F4C9EC(v2, a1);
}

uint64_t sub_209F4C4F0(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t v43;

  v3 = v2;
  v5 = sub_209F66A90();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC4F0);
  result = sub_209F67804();
  v12 = result;
  if (*(_QWORD *)(v10 + 16))
  {
    v39 = v3;
    v13 = 0;
    v14 = *(_QWORD *)(v10 + 64);
    v42 = (_QWORD *)(v10 + 64);
    v15 = 1 << *(_BYTE *)(v10 + 32);
    if (v15 < 64)
      v16 = ~(-1 << v15);
    else
      v16 = -1;
    v17 = v16 & v14;
    v41 = (unint64_t)(v15 + 63) >> 6;
    v18 = a2;
    v19 = result + 64;
    v40 = v18;
    v20 = (v18 & 1) == 0;
    v21 = 16;
    if (!v20)
      v21 = 32;
    v43 = v21;
    while (1)
    {
      if (v17)
      {
        v23 = __clz(__rbit64(v17));
        v17 &= v17 - 1;
        v24 = v23 | (v13 << 6);
      }
      else
      {
        v25 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = (uint64_t)v42;
        if (v25 >= v41)
          goto LABEL_33;
        v26 = v42[v25];
        ++v13;
        if (!v26)
        {
          v13 = v25 + 1;
          if (v25 + 1 >= v41)
            goto LABEL_33;
          v26 = v42[v13];
          if (!v26)
          {
            v27 = v25 + 2;
            if (v27 >= v41)
            {
LABEL_33:
              if ((v40 & 1) == 0)
              {
                result = swift_release();
                v3 = v39;
                goto LABEL_40;
              }
              v37 = 1 << *(_BYTE *)(v10 + 32);
              if (v37 >= 64)
                bzero(v42, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v42 = -1 << v37;
              v3 = v39;
              *(_QWORD *)(v10 + 16) = 0;
              break;
            }
            v26 = v42[v27];
            if (!v26)
            {
              while (1)
              {
                v13 = v27 + 1;
                if (__OFADD__(v27, 1))
                  goto LABEL_42;
                if (v13 >= v41)
                  goto LABEL_33;
                v26 = v42[v13];
                ++v27;
                if (v26)
                  goto LABEL_23;
              }
            }
            v13 = v27;
          }
        }
LABEL_23:
        v17 = (v26 - 1) & v26;
        v24 = __clz(__rbit64(v26)) + (v13 << 6);
      }
      v28 = *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * v24);
      v29 = *(_QWORD *)(v6 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + v43))(v9, *(_QWORD *)(v10 + 56) + v29 * v24, v5);
      result = sub_209F67B04();
      v30 = -1 << *(_BYTE *)(v12 + 32);
      v31 = result & ~v30;
      v32 = v31 >> 6;
      if (((-1 << v31) & ~*(_QWORD *)(v19 + 8 * (v31 >> 6))) != 0)
      {
        v22 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v19 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v33 = 0;
        v34 = (unint64_t)(63 - v30) >> 6;
        do
        {
          if (++v32 == v34 && (v33 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v35 = v32 == v34;
          if (v32 == v34)
            v32 = 0;
          v33 |= v35;
          v36 = *(_QWORD *)(v19 + 8 * v32);
        }
        while (v36 == -1);
        v22 = __clz(__rbit64(~v36)) + (v32 << 6);
      }
      *(_QWORD *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(_QWORD *)(*(_QWORD *)(v12 + 48) + 8 * v22) = v28;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v12 + 56) + v29 * v22, v9, v5);
      ++*(_QWORD *)(v12 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v12;
  return result;
}

unint64_t sub_209F4C828(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  int64_t v18;
  unint64_t v19;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_209F67678();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = sub_209F67B04();
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8 || v3 < (uint64_t)v11)
            goto LABEL_6;
        }
        else if (v11 < v8 && v3 < (uint64_t)v11)
        {
          goto LABEL_6;
        }
        v14 = (_QWORD *)(v9 + 8 * v3);
        if (v3 != v6 || v14 >= v10 + 1)
          *v14 = *v10;
        v15 = *(_QWORD *)(a2 + 56);
        v16 = *(_QWORD *)(*(_QWORD *)(sub_209F66A90() - 8) + 72);
        v17 = v16 * v3;
        result = v15 + v16 * v3;
        v18 = v16 * v6;
        v19 = v15 + v16 * v6 + v16;
        if (v17 < v18 || result >= v19)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v17 == v18)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    v23 = *v21;
    v22 = (-1 << result) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_209F4C9EC(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  uint64_t v7;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  result = a1 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v6 = *(_QWORD *)(v2 + 48);
    if (*(double *)(v6 + 8 * result) != a2)
    {
      v7 = ~v4;
      for (result = (result + 1) & v7;
            ((*(_QWORD *)(v3 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v7)
      {
        if (*(double *)(v6 + 8 * result) == a2)
          break;
      }
    }
  }
  return result;
}

void *sub_209F4CA84()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *result;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v1 = v0;
  v2 = sub_209F66A90();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC4F0);
  v7 = *v0;
  v8 = sub_209F677F8();
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v9;
    return result;
  }
  v26 = v1;
  result = (void *)(v8 + 64);
  v11 = (unint64_t)((1 << *(_BYTE *)(v9 + 32)) + 63) >> 6;
  if (v9 != v7 || (unint64_t)result >= v7 + 64 + 8 * v11)
    result = memmove(result, (const void *)(v7 + 64), 8 * v11);
  v27 = v7 + 64;
  v13 = 0;
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v7 + 16);
  v14 = 1 << *(_BYTE *)(v7 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v7 + 64);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v23 >= v17)
      goto LABEL_26;
    v24 = *(_QWORD *)(v27 + 8 * v23);
    ++v13;
    if (!v24)
    {
      v13 = v23 + 1;
      if (v23 + 1 >= v17)
        goto LABEL_26;
      v24 = *(_QWORD *)(v27 + 8 * v13);
      if (!v24)
        break;
    }
LABEL_25:
    v16 = (v24 - 1) & v24;
    v19 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_12:
    v20 = 8 * v19;
    v21 = *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v19);
    v22 = *(_QWORD *)(v3 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v6, *(_QWORD *)(v7 + 56) + v22, v2);
    *(_QWORD *)(*(_QWORD *)(v9 + 48) + v20) = v21;
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v9 + 56) + v22, v6, v2);
  }
  v25 = v23 + 2;
  if (v25 >= v17)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v26;
    goto LABEL_28;
  }
  v24 = *(_QWORD *)(v27 + 8 * v25);
  if (v24)
  {
    v13 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v13 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v13 >= v17)
      goto LABEL_26;
    v24 = *(_QWORD *)(v27 + 8 * v13);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_209F4CCB4(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6[2];

  v2 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545BC4A0) - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_209F4E2E0(v3);
  v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  result = sub_209F4CD38(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_209F4CD38(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double *v26;
  uint64_t v27;
  double *v28;
  double v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double *v36;
  double *v37;
  _BOOL4 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  double *v45;
  uint64_t v46;
  double *v47;
  double v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  BOOL v75;
  unint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  BOOL v85;
  uint64_t v86;
  char v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  BOOL v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  double *v130;
  double *v131;
  uint64_t *v132;
  uint64_t v133;
  uint64_t v134;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC4A0);
  v127 = *(_QWORD *)(v4 - 8);
  v128 = v4;
  v6 = MEMORY[0x24BDAC7A8](v4, v5);
  v124 = (uint64_t)&v118 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6, v8);
  v133 = (uint64_t)&v118 - v10;
  v12 = MEMORY[0x24BDAC7A8](v9, v11);
  v131 = (double *)((char *)&v118 - v13);
  MEMORY[0x24BDAC7A8](v12, v14);
  v130 = (double *)((char *)&v118 - v15);
  v16 = a1[1];
  result = sub_209F678E8();
  if (result >= v16)
  {
    if (v16 < 0)
      goto LABEL_139;
    if (v16)
      return sub_209F4D6C8(0, v16, 1, a1);
    return result;
  }
  if (v16 >= 0)
    v18 = v16;
  else
    v18 = v16 + 1;
  if (v16 < -1)
    goto LABEL_138;
  v120 = result;
  if (v16 > 1)
  {
    v19 = v18 >> 1;
    result = sub_209F67438();
    *(_QWORD *)(result + 16) = v19;
    v20 = *(unsigned __int8 *)(v127 + 80);
    v119 = result;
    v126 = result + ((v20 + 32) & ~v20);
LABEL_12:
    v22 = 0;
    v21 = MEMORY[0x24BEE4AF8];
    v132 = a1;
    while (1)
    {
      v24 = v22 + 1;
      v125 = v22;
      if (v22 + 1 >= v16)
      {
        v31 = v22 + 1;
        goto LABEL_24;
      }
      v122 = *a1;
      v25 = v122;
      v134 = *(_QWORD *)(v127 + 72);
      v26 = v130;
      sub_209EE3528(v122 + v134 * v24, (uint64_t)v130, &qword_2545BC4A0);
      v27 = v25 + v134 * v22;
      v28 = v131;
      sub_209EE3528(v27, (uint64_t)v131, &qword_2545BC4A0);
      v29 = *v26;
      v30 = *v28;
      sub_209EE017C((uint64_t)v28, &qword_2545BC4A0);
      result = sub_209EE017C((uint64_t)v26, &qword_2545BC4A0);
      v31 = v22 + 2;
      if (v22 + 2 >= v16)
        break;
      v123 = v2;
      v121 = v21;
      v129 = v134 * v24;
      v32 = v122;
      v33 = v22 + 2;
      v34 = v134 * (v22 + 2);
      while (1)
      {
        v35 = v16;
        v36 = v130;
        sub_209EE3528(v32 + v34, (uint64_t)v130, &qword_2545BC4A0);
        v37 = v131;
        sub_209EE3528(v32 + v129, (uint64_t)v131, &qword_2545BC4A0);
        v38 = *v36 >= *v37;
        sub_209EE017C((uint64_t)v37, &qword_2545BC4A0);
        result = sub_209EE017C((uint64_t)v36, &qword_2545BC4A0);
        if (v29 < v30 == v38)
          break;
        v32 += v134;
        ++v33;
        v16 = v35;
        if (v35 == v33)
        {
          v31 = v35;
          v21 = v121;
          v2 = v123;
          v22 = v125;
          goto LABEL_21;
        }
      }
      v21 = v121;
      v31 = v33;
      v2 = v123;
      v22 = v125;
      v16 = v35;
      if (v29 < v30)
        goto LABEL_42;
LABEL_24:
      if (v31 < v16)
      {
        if (__OFSUB__(v31, v22))
          goto LABEL_137;
        if (v31 - v22 < v120)
        {
          if (__OFADD__(v22, v120))
            goto LABEL_141;
          if (v22 + v120 >= v16)
            v39 = v16;
          else
            v39 = v22 + v120;
          if (v39 < v22)
          {
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
            return result;
          }
          if (v31 != v39)
          {
            v121 = v21;
            v122 = v39;
            v123 = v2;
            v40 = *(_QWORD *)(v127 + 72);
            v134 = v40 * (v31 - 1);
            v129 = v40;
            v41 = v31 * v40;
            do
            {
              v42 = 0;
              while (1)
              {
                v43 = v31;
                v44 = *a1;
                v45 = v130;
                sub_209EE3528(v41 + v42 + *a1, (uint64_t)v130, &qword_2545BC4A0);
                v46 = v134 + v42 + v44;
                v47 = v131;
                sub_209EE3528(v46, (uint64_t)v131, &qword_2545BC4A0);
                v48 = *v45;
                v49 = *v47;
                sub_209EE017C((uint64_t)v47, &qword_2545BC4A0);
                result = sub_209EE017C((uint64_t)v45, &qword_2545BC4A0);
                if (v48 >= v49)
                  break;
                v50 = *a1;
                if (!*a1)
                  goto LABEL_143;
                v51 = v50 + v134 + v42;
                sub_209EF1E0C(v50 + v41 + v42, v133, &qword_2545BC4A0);
                swift_arrayInitWithTakeFrontToBack();
                result = sub_209EF1E0C(v133, v51, &qword_2545BC4A0);
                v42 -= v129;
                ++v22;
                v31 = v43;
                a1 = v132;
                if (v43 == v22)
                  goto LABEL_35;
              }
              v31 = v43;
LABEL_35:
              ++v31;
              v134 += v129;
              v41 += v129;
              v22 = v125;
            }
            while (v31 != v122);
            v31 = v122;
            v2 = v123;
            v21 = v121;
          }
        }
      }
      if (v31 < v22)
        goto LABEL_132;
      result = swift_isUniquelyReferenced_nonNull_native();
      v134 = v31;
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_209F4DD14(0, *(_QWORD *)(v21 + 16) + 1, 1, (char *)v21);
        v21 = result;
      }
      v60 = *(_QWORD *)(v21 + 16);
      v59 = *(_QWORD *)(v21 + 24);
      v23 = v60 + 1;
      if (v60 >= v59 >> 1)
      {
        result = (uint64_t)sub_209F4DD14((char *)(v59 > 1), v60 + 1, 1, (char *)v21);
        v21 = result;
      }
      *(_QWORD *)(v21 + 16) = v23;
      v61 = v21 + 32;
      v62 = (uint64_t *)(v21 + 32 + 16 * v60);
      v63 = v134;
      *v62 = v22;
      v62[1] = v63;
      if (v60)
      {
        while (1)
        {
          v64 = v23 - 1;
          if (v23 >= 4)
          {
            v69 = v61 + 16 * v23;
            v70 = *(_QWORD *)(v69 - 64);
            v71 = *(_QWORD *)(v69 - 56);
            v75 = __OFSUB__(v71, v70);
            v72 = v71 - v70;
            if (v75)
              goto LABEL_121;
            v74 = *(_QWORD *)(v69 - 48);
            v73 = *(_QWORD *)(v69 - 40);
            v75 = __OFSUB__(v73, v74);
            v67 = v73 - v74;
            v68 = v75;
            if (v75)
              goto LABEL_122;
            v76 = v23 - 2;
            v77 = (uint64_t *)(v61 + 16 * (v23 - 2));
            v79 = *v77;
            v78 = v77[1];
            v75 = __OFSUB__(v78, v79);
            v80 = v78 - v79;
            if (v75)
              goto LABEL_123;
            v75 = __OFADD__(v67, v80);
            v81 = v67 + v80;
            if (v75)
              goto LABEL_125;
            if (v81 >= v72)
            {
              v99 = (uint64_t *)(v61 + 16 * v64);
              v101 = *v99;
              v100 = v99[1];
              v75 = __OFSUB__(v100, v101);
              v102 = v100 - v101;
              if (v75)
                goto LABEL_131;
              v92 = v67 < v102;
              goto LABEL_93;
            }
          }
          else
          {
            if (v23 != 3)
            {
              v93 = *(_QWORD *)(v21 + 32);
              v94 = *(_QWORD *)(v21 + 40);
              v75 = __OFSUB__(v94, v93);
              v86 = v94 - v93;
              v87 = v75;
              goto LABEL_87;
            }
            v66 = *(_QWORD *)(v21 + 32);
            v65 = *(_QWORD *)(v21 + 40);
            v75 = __OFSUB__(v65, v66);
            v67 = v65 - v66;
            v68 = v75;
          }
          if ((v68 & 1) != 0)
            goto LABEL_124;
          v76 = v23 - 2;
          v82 = (uint64_t *)(v61 + 16 * (v23 - 2));
          v84 = *v82;
          v83 = v82[1];
          v85 = __OFSUB__(v83, v84);
          v86 = v83 - v84;
          v87 = v85;
          if (v85)
            goto LABEL_126;
          v88 = (uint64_t *)(v61 + 16 * v64);
          v90 = *v88;
          v89 = v88[1];
          v75 = __OFSUB__(v89, v90);
          v91 = v89 - v90;
          if (v75)
            goto LABEL_128;
          if (__OFADD__(v86, v91))
            goto LABEL_130;
          if (v86 + v91 >= v67)
          {
            v92 = v67 < v91;
LABEL_93:
            if (v92)
              v64 = v76;
            goto LABEL_95;
          }
LABEL_87:
          if ((v87 & 1) != 0)
            goto LABEL_127;
          v95 = (uint64_t *)(v61 + 16 * v64);
          v97 = *v95;
          v96 = v95[1];
          v75 = __OFSUB__(v96, v97);
          v98 = v96 - v97;
          if (v75)
            goto LABEL_129;
          if (v98 < v86)
            goto LABEL_14;
LABEL_95:
          v103 = v64 - 1;
          if (v64 - 1 >= v23)
          {
            __break(1u);
LABEL_118:
            __break(1u);
LABEL_119:
            __break(1u);
LABEL_120:
            __break(1u);
LABEL_121:
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
            goto LABEL_142;
          }
          v104 = *a1;
          if (!*a1)
            goto LABEL_144;
          v105 = v21;
          v106 = (uint64_t *)(v61 + 16 * v103);
          v107 = *v106;
          v108 = (_QWORD *)(v61 + 16 * v64);
          v109 = v108[1];
          result = sub_209F4D8FC(v104 + *(_QWORD *)(v127 + 72) * *v106, v104 + *(_QWORD *)(v127 + 72) * *v108, v104 + *(_QWORD *)(v127 + 72) * v109, v126);
          if (v2)
            goto LABEL_115;
          if (v109 < v107)
            goto LABEL_118;
          if (v64 > *(_QWORD *)(v105 + 16))
            goto LABEL_119;
          *v106 = v107;
          *(_QWORD *)(v61 + 16 * v103 + 8) = v109;
          v110 = *(_QWORD *)(v105 + 16);
          if (v64 >= v110)
            goto LABEL_120;
          v21 = v105;
          v23 = v110 - 1;
          result = (uint64_t)memmove((void *)(v61 + 16 * v64), v108 + 2, 16 * (v110 - 1 - v64));
          *(_QWORD *)(v105 + 16) = v110 - 1;
          a1 = v132;
          if (v110 <= 2)
            goto LABEL_14;
        }
      }
      v23 = 1;
LABEL_14:
      v16 = a1[1];
      v22 = v134;
      if (v134 >= v16)
        goto LABEL_104;
    }
LABEL_21:
    if (v29 >= v30)
      goto LABEL_24;
LABEL_42:
    if (v31 < v22)
      goto LABEL_140;
    if (v22 < v31)
    {
      v129 = v16;
      v121 = v21;
      v52 = 0;
      v53 = v134;
      v54 = v134 * (v31 - 1);
      v55 = v31 * v134;
      v56 = v22 * v134;
      do
      {
        if (v22 != v31 + v52 - 1)
        {
          v123 = v2;
          v57 = v122;
          if (!v122)
            goto LABEL_145;
          v58 = v122 + v56;
          sub_209EF1E0C(v122 + v56, v124, &qword_2545BC4A0);
          if (v56 < v54 || v58 >= v57 + v55)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v56 != v54)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          result = sub_209EF1E0C(v124, v57 + v54, &qword_2545BC4A0);
          a1 = v132;
          v2 = v123;
          v53 = v134;
        }
        ++v22;
        --v52;
        v54 -= v53;
        v55 -= v53;
        v56 += v53;
      }
      while (v22 < v31 + v52);
      v21 = v121;
      v22 = v125;
      v16 = v129;
    }
    goto LABEL_24;
  }
  v21 = MEMORY[0x24BEE4AF8];
  v126 = MEMORY[0x24BEE4AF8]
       + ((*(unsigned __int8 *)(v127 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v127 + 80));
  v119 = MEMORY[0x24BEE4AF8];
  if (v16 == 1)
    goto LABEL_12;
  v23 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_104:
  if (v23 >= 2)
  {
    v111 = *a1;
    do
    {
      v112 = v23 - 2;
      if (v23 < 2)
        goto LABEL_133;
      if (!v111)
        goto LABEL_146;
      v113 = v21;
      v114 = *(_QWORD *)(v21 + 32 + 16 * v112);
      v115 = *(_QWORD *)(v21 + 32 + 16 * (v23 - 1) + 8);
      result = sub_209F4D8FC(v111 + *(_QWORD *)(v127 + 72) * v114, v111 + *(_QWORD *)(v127 + 72) * *(_QWORD *)(v21 + 32 + 16 * (v23 - 1)), v111 + *(_QWORD *)(v127 + 72) * v115, v126);
      if (v2)
        break;
      if (v115 < v114)
        goto LABEL_134;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_209F4DEC0(v21);
        v113 = result;
      }
      if (v112 >= *(_QWORD *)(v113 + 16))
        goto LABEL_135;
      v116 = (_QWORD *)(v113 + 32 + 16 * v112);
      *v116 = v114;
      v116[1] = v115;
      v117 = *(_QWORD *)(v113 + 16);
      if (v23 > v117)
        goto LABEL_136;
      result = (uint64_t)memmove((void *)(v113 + 32 + 16 * (v23 - 1)), (const void *)(v113 + 32 + 16 * v23), 16 * (v117 - v23));
      *(_QWORD *)(v113 + 16) = v117 - 1;
      v23 = v117 - 1;
      v21 = v113;
    }
    while (v117 > 2);
  }
LABEL_115:
  swift_bridgeObjectRelease();
  *(_QWORD *)(v119 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_209F4D6C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  double *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double *v23;
  double v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v30 = a1;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC4A0);
  v8 = MEMORY[0x24BDAC7A8](v31, v7);
  v35 = (uint64_t)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8, v10);
  v32 = (double *)((char *)&v28 - v12);
  result = MEMORY[0x24BDAC7A8](v11, v13);
  v17 = (double *)((char *)&v28 - v16);
  v34 = a3;
  v29 = a2;
  if (a3 != a2)
  {
    v18 = *(_QWORD *)(v15 + 72);
    v37 = v18 * (v34 - 1);
    v33 = v18;
    v36 = v18 * v34;
LABEL_5:
    v19 = 0;
    v20 = v30;
    while (1)
    {
      v21 = *a4;
      sub_209EE3528(v36 + v19 + *a4, (uint64_t)v17, &qword_2545BC4A0);
      v22 = v37 + v19 + v21;
      v23 = v32;
      sub_209EE3528(v22, (uint64_t)v32, &qword_2545BC4A0);
      v24 = *v17;
      v25 = *v23;
      sub_209EE017C((uint64_t)v23, &qword_2545BC4A0);
      result = sub_209EE017C((uint64_t)v17, &qword_2545BC4A0);
      if (v24 >= v25)
      {
LABEL_4:
        v37 += v33;
        v36 += v33;
        if (++v34 == v29)
          return result;
        goto LABEL_5;
      }
      v26 = *a4;
      if (!*a4)
        break;
      v27 = v26 + v37 + v19;
      sub_209EF1E0C(v26 + v36 + v19, v35, &qword_2545BC4A0);
      swift_arrayInitWithTakeFrontToBack();
      result = sub_209EF1E0C(v35, v27, &qword_2545BC4A0);
      v19 -= v33;
      if (v34 == ++v20)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_209F4D8FC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  double *v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v23;
  double v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v28;
  unint64_t v30;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  double v35;
  double v36;
  unint64_t v37;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;

  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC4A0);
  v9 = MEMORY[0x24BDAC7A8](v41, v8);
  v11 = (double *)((char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = MEMORY[0x24BDAC7A8](v9, v12);
  v15 = (double *)((char *)&v39 - v14);
  v17 = *(_QWORD *)(v16 + 72);
  if (!v17)
  {
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
    return result;
  }
  if (a2 - a1 == 0x8000000000000000 && v17 == -1)
    goto LABEL_68;
  v18 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v17 == -1)
    goto LABEL_69;
  v19 = (uint64_t)(a2 - a1) / v17;
  v44 = a1;
  v43 = a4;
  if (v19 >= v18 / v17)
  {
    v21 = v18 / v17 * v17;
    if (a4 < a2 || a2 + v21 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a2)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v30 = a4 + v21;
    v42 = a4 + v21;
    v44 = a2;
    v40 = a1;
    if (v21 >= 1 && a1 < a2)
    {
      v32 = -v17;
      do
      {
        v33 = a3 + v32;
        sub_209EE3528(v30 + v32, (uint64_t)v15, &qword_2545BC4A0);
        v34 = a2 + v32;
        sub_209EE3528(a2 + v32, (uint64_t)v11, &qword_2545BC4A0);
        v35 = *v15;
        v36 = *v11;
        sub_209EE017C((uint64_t)v11, &qword_2545BC4A0);
        sub_209EE017C((uint64_t)v15, &qword_2545BC4A0);
        if (v35 >= v36)
        {
          v37 = v42;
          v42 += v32;
          if (a3 < v37 || v33 >= v37)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (a3 != v37)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v34 = a2;
        }
        else
        {
          if (a3 < a2 || v33 >= a2)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (a3 != a2)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v44 += v32;
        }
        v30 = v42;
        if (v42 <= a4)
          break;
        a2 = v34;
        a3 += v32;
      }
      while (v34 > v40);
    }
  }
  else
  {
    v20 = v19 * v17;
    if (a4 < a1 || a1 + v20 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v40 = a4 + v20;
    v42 = a4 + v20;
    if (v20 >= 1 && a2 < a3)
    {
      do
      {
        sub_209EE3528(a2, (uint64_t)v15, &qword_2545BC4A0);
        sub_209EE3528(a4, (uint64_t)v11, &qword_2545BC4A0);
        v23 = *v15;
        v24 = *v11;
        sub_209EE017C((uint64_t)v11, &qword_2545BC4A0);
        sub_209EE017C((uint64_t)v15, &qword_2545BC4A0);
        v25 = v44;
        if (v23 >= v24)
        {
          v28 = v43 + v17;
          if (v44 < v43 || v44 >= v28)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v44 != v43)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v43 = v28;
          v26 = a2;
        }
        else
        {
          v26 = a2 + v17;
          if (v44 < a2 || v44 >= v26)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v44 == a2)
          {
            v25 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        v44 = v25 + v17;
        a4 = v43;
        if (v43 >= v40)
          break;
        a2 = v26;
      }
      while (v26 < a3);
    }
  }
  sub_209F4DE0C(&v44, &v43, (uint64_t *)&v42);
  return 1;
}

char *sub_209F4DD14(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC4E8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_209F4DE0C(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  v4 = *a2;
  v5 = *a3;
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC4A0);
  v7 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    return result;
  }
  if (v5 - v4 == 0x8000000000000000 && v7 == -1)
    goto LABEL_13;
  if (v3 < v4 || v3 >= v4 + (uint64_t)(v5 - v4) / v7 * v7)
    return swift_arrayInitWithTakeFrontToBack();
  if (v3 != v4)
    return swift_arrayInitWithTakeBackToFront();
  return result;
}

char *sub_209F4DEC0(uint64_t a1)
{
  return sub_209F4DD14(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

void sub_209F4DED4(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_209F4DF20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v3;

  if (a1 == 0x6D496D6574737973 && a2 == 0xEB00000000656761)
    v3 = 1;
  else
    v3 = sub_209F679A8();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_209F4DFE8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  _QWORD *v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC4A0);
  v39 = *(_QWORD *)(v8 - 8);
  v40 = v8;
  v10 = MEMORY[0x24BDAC7A8](v8, v9);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v10, v13);
  v16 = (char *)&v33 - v15;
  v17 = *(_QWORD *)(a4 + 64);
  v38 = a4 + 64;
  v18 = -1 << *(_BYTE *)(a4 + 32);
  if (-v18 < 64)
    v19 = ~(-1 << -(char)v18);
  else
    v19 = -1;
  v20 = v19 & v17;
  if (!a2)
  {
    v21 = 0;
    a3 = 0;
LABEL_39:
    v32 = v38;
    *a1 = a4;
    a1[1] = v32;
    a1[2] = ~v18;
    a1[3] = v21;
    a1[4] = v20;
    return a3;
  }
  if (!a3)
  {
    v21 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v35 = -1 << *(_BYTE *)(a4 + 32);
  v36 = a1;
  v21 = 0;
  v22 = 0;
  v37 = (unint64_t)(63 - v18) >> 6;
  v34 = v37 - 1;
  v23 = a3;
  if (!v20)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v20));
  v20 &= v20 - 1;
  v25 = v24 | (v21 << 6);
  while (1)
  {
    ++v22;
    v29 = *(_QWORD *)(a4 + 56);
    v30 = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * v25);
    v31 = sub_209F66A90();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(&v12[*(int *)(v40 + 48)], v29 + *(_QWORD *)(*(_QWORD *)(v31 - 8) + 72) * v25, v31);
    *(_QWORD *)v12 = v30;
    sub_209EF1E0C((uint64_t)v12, (uint64_t)v16, &qword_2545BC4A0);
    result = sub_209EF1E0C((uint64_t)v16, a2, &qword_2545BC4A0);
    if (v22 == v23)
    {
      a3 = v23;
      goto LABEL_38;
    }
    a2 += *(_QWORD *)(v39 + 72);
    if (v20)
      goto LABEL_8;
LABEL_9:
    v26 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v26 >= v37)
      goto LABEL_33;
    v27 = *(_QWORD *)(v38 + 8 * v26);
    if (!v27)
    {
      v21 += 2;
      if (v26 + 1 >= v37)
      {
        v20 = 0;
        v21 = v26;
      }
      else
      {
        v27 = *(_QWORD *)(v38 + 8 * v21);
        if (v27)
          goto LABEL_14;
        v28 = v26 + 2;
        if (v26 + 2 >= v37)
          goto LABEL_33;
        v27 = *(_QWORD *)(v38 + 8 * v28);
        if (v27)
        {
LABEL_17:
          v26 = v28;
          goto LABEL_18;
        }
        v21 = v26 + 3;
        if (v26 + 3 < v37)
        {
          v27 = *(_QWORD *)(v38 + 8 * v21);
          if (v27)
          {
LABEL_14:
            v26 = v21;
            goto LABEL_18;
          }
          v28 = v26 + 4;
          if (v26 + 4 >= v37)
          {
LABEL_33:
            v20 = 0;
            goto LABEL_37;
          }
          v27 = *(_QWORD *)(v38 + 8 * v28);
          if (!v27)
          {
            while (1)
            {
              v26 = v28 + 1;
              if (__OFADD__(v28, 1))
                goto LABEL_42;
              if (v26 >= v37)
              {
                v20 = 0;
                v21 = v34;
                goto LABEL_37;
              }
              v27 = *(_QWORD *)(v38 + 8 * v26);
              ++v28;
              if (v27)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v20 = 0;
        v21 = v26 + 2;
      }
LABEL_37:
      a3 = v22;
LABEL_38:
      v18 = v35;
      a1 = v36;
      goto LABEL_39;
    }
LABEL_18:
    v20 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v21 = v26;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

size_t sub_209F4E2E0(_QWORD *a1)
{
  return sub_209F4C340(0, a1[2], 0, a1);
}

uint64_t type metadata accessor for RUIImage.Keys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RUIImage.Keys);
}

uint64_t sub_209F4E300()
{
  unint64_t v0;

  v0 = sub_209F67840();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

unint64_t sub_209F4E348()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2545BC480;
  if (!qword_2545BC480)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BC478);
    result = MEMORY[0x20BD1DB1C](&unk_209F7B130, v1);
    atomic_store(result, (unint64_t *)&qword_2545BC480);
  }
  return result;
}

unint64_t sub_209F4E394()
{
  unint64_t result;

  result = qword_2545BC488;
  if (!qword_2545BC488)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7B338, &type metadata for RUIImage.ImageURLCodingKey);
    atomic_store(result, (unint64_t *)&qword_2545BC488);
  }
  return result;
}

uint64_t sub_209F4E3D8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char v10;
  char v12;

  v2 = v1[2];
  v3 = v1[3];
  v4 = v1[4];
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v12 = 0;
  v7 = sub_209F1BFCC();
  if (v6 == sub_209F35174(v4, (uint64_t)&v12, (uint64_t)&type metadata for RUIImage.DefaultCodingKeys, v2, v7, v3)
    && v5 == v8)
  {
    v10 = 1;
  }
  else
  {
    v10 = sub_209F679A8();
  }
  swift_bridgeObjectRelease();
  return v10 & 1;
}

unint64_t sub_209F4E488()
{
  unint64_t result;

  result = qword_2545BC490;
  if (!qword_2545BC490)
  {
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BEE50E8], MEMORY[0x24BEE50B0]);
    atomic_store(result, (unint64_t *)&qword_2545BC490);
  }
  return result;
}

uint64_t sub_209F4E4CC(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

void sub_209F4E4F4(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  char v24;
  uint64_t v25;

  v2 = sub_209F675C4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_209F66940();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_allocWithZone(MEMORY[0x24BDD17A8]);
  v13 = (void *)sub_209F672A0();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v12, sel_initWithString_, v13);

  sub_209F66928();
  v15 = sub_209F675B8();
  v17 = v16;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  if (!v17)
  {

    v18 = 0;
    v15 = 0;
LABEL_12:
    v24 = 0;
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  if ((objc_msgSend(v14, sel_isAtEnd) & 1) != 0)
  {
    v18 = 1;
  }
  else
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v6, *MEMORY[0x24BDD0458], v2);
    v18 = sub_209F675D0();
    v20 = v19;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    if ((v20 & 1) != 0 || (sub_209F675AC(), v22 = v21, swift_bridgeObjectRelease(), !v22))
    {
      swift_bridgeObjectRelease_n();

LABEL_11:
      v18 = 0;
      v15 = 0;
      v17 = 0;
      goto LABEL_12;
    }
  }
  v23 = objc_msgSend(v14, sel_isAtEnd);
  swift_bridgeObjectRelease();

  if ((v23 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  v24 = 1;
LABEL_13:
  *(_QWORD *)a1 = v18;
  *(_QWORD *)(a1 + 8) = v15;
  *(_QWORD *)(a1 + 16) = v17;
  *(_QWORD *)(a1 + 24) = 0;
  *(_BYTE *)(a1 + 32) = v24;
}

void sub_209F4E70C()
{
  JUMPOUT(0x20BD1DB1CLL);
}

void sub_209F4E71C()
{
  JUMPOUT(0x20BD1DB1CLL);
}

unint64_t sub_209F4E730()
{
  unint64_t result;

  result = qword_2545BC4B8;
  if (!qword_2545BC4B8)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7B1D0, &type metadata for RUIImage.DefaultCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BC4B8);
  }
  return result;
}

unint64_t sub_209F4E778()
{
  unint64_t result;

  result = qword_2545BC4C0;
  if (!qword_2545BC4C0)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7B2E8, &type metadata for RUIImage.DefaultCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BC4C0);
  }
  return result;
}

unint64_t sub_209F4E7C0()
{
  unint64_t result;

  result = qword_2545BC4C8;
  if (!qword_2545BC4C8)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7B2C0, &type metadata for RUIImage.DefaultCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545BC4C8);
  }
  return result;
}

unint64_t sub_209F4E808()
{
  unint64_t result;

  result = qword_2545BC4D0;
  if (!qword_2545BC4D0)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7B3B0, &type metadata for RUIImage.ImageURLCodingKey);
    atomic_store(result, (unint64_t *)&qword_2545BC4D0);
  }
  return result;
}

unint64_t sub_209F4E850()
{
  unint64_t result;

  result = qword_2545BC4D8;
  if (!qword_2545BC4D8)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7B388, &type metadata for RUIImage.ImageURLCodingKey);
    atomic_store(result, (unint64_t *)&qword_2545BC4D8);
  }
  return result;
}

uint64_t _s8RemoteUI3BoxCMa_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s8RemoteUI3BoxCMn_0);
}

uint64_t destroy for RUIImage(uint64_t a1)
{
  sub_209EEB098();

  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for RUIImage(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  void *v7;
  uint64_t v8;
  id v9;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_209EEAFF0();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  v7 = (void *)a2[3];
  v8 = a2[4];
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = a2[5];
  *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
  *(_QWORD *)(a1 + 56) = a2[7];
  *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
  *(_QWORD *)(a1 + 72) = a2[9];
  v9 = v7;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for RUIImage(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_209EEAFF0();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  sub_209EEB098();
  v7 = *(void **)(a1 + 24);
  v8 = (void *)a2[3];
  *(_QWORD *)(a1 + 24) = v8;
  v9 = v8;

  *(_QWORD *)(a1 + 32) = a2[4];
  swift_retain();
  swift_release();
  v10 = a2[5];
  *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
  *(_QWORD *)(a1 + 40) = v10;
  LOBYTE(v10) = *((_BYTE *)a2 + 64);
  *(_QWORD *)(a1 + 56) = a2[7];
  *(_BYTE *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = a2[9];
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for RUIImage(uint64_t a1, uint64_t a2)
{
  char v4;

  v4 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v4;
  sub_209EEB098();

  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for RUIImage(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RUIImage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RUIImage()
{
  return &type metadata for RUIImage;
}

uint64_t type metadata accessor for RUIImage.RawKey(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RUIImage.RawKey);
}

uint64_t sub_209F4EB9C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_209F4EBA4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_209F675DC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_209F4EC18(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  uint64_t v8;
  uint64_t v9;
  size_t v10;
  uint64_t v13;
  unsigned int (*v14)(uint64_t *, uint64_t, uint64_t);
  _QWORD *v15;
  void *v16;
  _QWORD *v17;
  void *v18;
  _QWORD *v19;
  void *v20;
  _QWORD *v21;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if (*(_DWORD *)(v6 + 84))
    v7 = *(_QWORD *)(v6 + 64);
  else
    v7 = *(_QWORD *)(v6 + 64) + 1;
  v8 = *(_DWORD *)(v6 + 80);
  v9 = ~v8;
  v10 = v7 + v8;
  if (v8 > 7
    || (*(_DWORD *)(v6 + 80) & 0x100000) != 0
    || ((v10 + ((v10 + ((v10 + (v10 & v9)) & v9)) & v9)) & v9) + v7 > 0x18)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v8 + 16) & v9));
    swift_retain();
  }
  else
  {
    v14 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v6 + 48);
    if (v14(a2, 1, *(_QWORD *)(a3 + 16)))
    {
      memcpy(a1, a2, v7);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    }
    v15 = (_QWORD *)(((unint64_t)a2 + v10) & v9);
    if (v14(v15, 1, v5))
    {
      memcpy((void *)(((unint64_t)a1 + v10) & v9), v15, v7);
    }
    else
    {
      (*(void (**)(unint64_t, _QWORD *, uint64_t))(v6 + 16))(((unint64_t)a1 + v10) & v9, v15, v5);
      (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(((unint64_t)a1 + v10) & v9, 0, 1, v5);
    }
    v16 = (void *)((v10 + (((unint64_t)a1 + v10) & v9)) & v9);
    v17 = (_QWORD *)(((unint64_t)v15 + v10) & v9);
    if (v14(v17, 1, v5))
    {
      memcpy(v16, v17, v7);
    }
    else
    {
      (*(void (**)(void *, _QWORD *, uint64_t))(v6 + 16))(v16, v17, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v16, 0, 1, v5);
    }
    v18 = (void *)(((unint64_t)v16 + v10) & v9);
    v19 = (_QWORD *)(((unint64_t)v17 + v10) & v9);
    if (v14(v19, 1, v5))
    {
      memcpy(v18, v19, v7);
    }
    else
    {
      (*(void (**)(void *, _QWORD *, uint64_t))(v6 + 16))(v18, v19, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v18, 0, 1, v5);
    }
    v20 = (void *)(((unint64_t)v18 + v10) & v9);
    v21 = (_QWORD *)(((unint64_t)v19 + v10) & v9);
    if (v14(v21, 1, v5))
    {
      memcpy(v20, v21, v7);
    }
    else
    {
      (*(void (**)(void *, _QWORD *, uint64_t))(v6 + 16))(v20, v21, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v20, 0, 1, v5);
    }
  }
  return a1;
}

uint64_t sub_209F4EEB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned int (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (!v5(a1, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  if (*(_DWORD *)(v4 + 84))
    v6 = *(_QWORD *)(v4 + 64);
  else
    v6 = *(_QWORD *)(v4 + 64) + 1;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = v6 + v7;
  v9 = ~v7;
  v10 = (v6 + v7 + a1) & ~v7;
  if (!v5(v10, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v10, v3);
  v11 = (v8 + v10) & v9;
  if (!v5(v11, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v11, v3);
  v12 = (v8 + v11) & v9;
  if (!v5(v12, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v12, v3);
  v13 = (v8 + v12) & v9;
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v5)(v13, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v13, v3);
  return result;
}

void *sub_209F4EFEC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(const void *, uint64_t, uint64_t);
  int v8;
  size_t v9;
  size_t v10;
  size_t v11;
  uint64_t v12;
  size_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  void *v17;
  const void *v18;
  void *v19;
  const void *v20;
  void *v21;
  const void *v22;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48);
  if (v7(a2, 1, v5))
  {
    v8 = *(_DWORD *)(v6 + 84);
    v9 = *(_QWORD *)(v6 + 64);
    if (v8)
      v10 = *(_QWORD *)(v6 + 64);
    else
      v10 = v9 + 1;
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    v8 = *(_DWORD *)(v6 + 84);
    v9 = *(_QWORD *)(v6 + 64);
  }
  if (v8)
    v11 = v9;
  else
    v11 = v9 + 1;
  v12 = *(unsigned __int8 *)(v6 + 80);
  v13 = v11 + v12;
  v14 = ~v12;
  v15 = (void *)(((unint64_t)a1 + v11 + v12) & ~v12);
  v16 = (const void *)(((unint64_t)a2 + v11 + v12) & ~v12);
  if (v7(v16, 1, v5))
  {
    memcpy(v15, v16, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v15, v16, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v15, 0, 1, v5);
  }
  v17 = (void *)(((unint64_t)v15 + v13) & v14);
  v18 = (const void *)(((unint64_t)v16 + v13) & v14);
  if (v7(v18, 1, v5))
  {
    memcpy(v17, v18, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v17, v18, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v17, 0, 1, v5);
  }
  v19 = (void *)(((unint64_t)v17 + v13) & v14);
  v20 = (const void *)(((unint64_t)v18 + v13) & v14);
  if (v7(v20, 1, v5))
  {
    memcpy(v19, v20, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v19, v20, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v19, 0, 1, v5);
  }
  v21 = (void *)(((unint64_t)v19 + v13) & v14);
  v22 = (const void *)(((unint64_t)v20 + v13) & v14);
  if (v7(v22, 1, v5))
  {
    memcpy(v21, v22, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v21, v22, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v21, 0, 1, v5);
  }
  return a1;
}

void *sub_209F4F248(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  int v8;
  int v9;
  size_t v10;
  size_t v11;
  uint64_t v12;
  size_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  int v17;
  int v18;
  void *v19;
  void *v20;
  int v21;
  int v22;
  void *v23;
  void *v24;
  int v25;
  int v26;
  void *v27;
  void *v28;
  int v29;
  int v30;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v6 + 64) + 1;
  memcpy(a1, a2, v10);
LABEL_10:
  if (*(_DWORD *)(v6 + 84))
    v11 = *(_QWORD *)(v6 + 64);
  else
    v11 = *(_QWORD *)(v6 + 64) + 1;
  v12 = *(unsigned __int8 *)(v6 + 80);
  v13 = v11 + v12;
  v14 = ~v12;
  v15 = (void *)(((unint64_t)a1 + v11 + v12) & ~v12);
  v16 = (void *)(((unint64_t)a2 + v11 + v12) & ~v12);
  v17 = v7(v15, 1, v5);
  v18 = v7(v16, 1, v5);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(v15, v16, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v15, 0, 1, v5);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v6 + 8))(v15, v5);
LABEL_18:
    memcpy(v15, v16, v11);
    goto LABEL_19;
  }
  (*(void (**)(void *, void *, uint64_t))(v6 + 24))(v15, v16, v5);
LABEL_19:
  v19 = (void *)(((unint64_t)v15 + v13) & v14);
  v20 = (void *)(((unint64_t)v16 + v13) & v14);
  v21 = v7(v19, 1, v5);
  v22 = v7(v20, 1, v5);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(v19, v20, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v19, 0, 1, v5);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v22)
  {
    (*(void (**)(void *, uint64_t))(v6 + 8))(v19, v5);
LABEL_24:
    memcpy(v19, v20, v11);
    goto LABEL_25;
  }
  (*(void (**)(void *, void *, uint64_t))(v6 + 24))(v19, v20, v5);
LABEL_25:
  v23 = (void *)(((unint64_t)v19 + v13) & v14);
  v24 = (void *)(((unint64_t)v20 + v13) & v14);
  v25 = v7(v23, 1, v5);
  v26 = v7(v24, 1, v5);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(v23, v24, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v23, 0, 1, v5);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v26)
  {
    (*(void (**)(void *, uint64_t))(v6 + 8))(v23, v5);
LABEL_30:
    memcpy(v23, v24, v11);
    goto LABEL_31;
  }
  (*(void (**)(void *, void *, uint64_t))(v6 + 24))(v23, v24, v5);
LABEL_31:
  v27 = (void *)(((unint64_t)v23 + v13) & v14);
  v28 = (void *)(((unint64_t)v24 + v13) & v14);
  v29 = v7(v27, 1, v5);
  v30 = v7(v28, 1, v5);
  if (!v29)
  {
    if (!v30)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(v27, v28, v5);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(v27, v5);
    goto LABEL_36;
  }
  if (v30)
  {
LABEL_36:
    memcpy(v27, v28, v11);
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v6 + 16))(v27, v28, v5);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v27, 0, 1, v5);
  return a1;
}

void *sub_209F4F5F4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(const void *, uint64_t, uint64_t);
  int v8;
  size_t v9;
  size_t v10;
  size_t v11;
  uint64_t v12;
  size_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  void *v17;
  const void *v18;
  void *v19;
  const void *v20;
  void *v21;
  const void *v22;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48);
  if (v7(a2, 1, v5))
  {
    v8 = *(_DWORD *)(v6 + 84);
    v9 = *(_QWORD *)(v6 + 64);
    if (v8)
      v10 = *(_QWORD *)(v6 + 64);
    else
      v10 = v9 + 1;
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    v8 = *(_DWORD *)(v6 + 84);
    v9 = *(_QWORD *)(v6 + 64);
  }
  if (v8)
    v11 = v9;
  else
    v11 = v9 + 1;
  v12 = *(unsigned __int8 *)(v6 + 80);
  v13 = v11 + v12;
  v14 = ~v12;
  v15 = (void *)(((unint64_t)a1 + v11 + v12) & ~v12);
  v16 = (const void *)(((unint64_t)a2 + v11 + v12) & ~v12);
  if (v7(v16, 1, v5))
  {
    memcpy(v15, v16, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(v15, v16, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v15, 0, 1, v5);
  }
  v17 = (void *)(((unint64_t)v15 + v13) & v14);
  v18 = (const void *)(((unint64_t)v16 + v13) & v14);
  if (v7(v18, 1, v5))
  {
    memcpy(v17, v18, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(v17, v18, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v17, 0, 1, v5);
  }
  v19 = (void *)(((unint64_t)v17 + v13) & v14);
  v20 = (const void *)(((unint64_t)v18 + v13) & v14);
  if (v7(v20, 1, v5))
  {
    memcpy(v19, v20, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(v19, v20, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v19, 0, 1, v5);
  }
  v21 = (void *)(((unint64_t)v19 + v13) & v14);
  v22 = (const void *)(((unint64_t)v20 + v13) & v14);
  if (v7(v22, 1, v5))
  {
    memcpy(v21, v22, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(v21, v22, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v21, 0, 1, v5);
  }
  return a1;
}

void *sub_209F4F850(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  int v8;
  int v9;
  size_t v10;
  size_t v11;
  uint64_t v12;
  size_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  int v17;
  int v18;
  void *v19;
  void *v20;
  int v21;
  int v22;
  void *v23;
  void *v24;
  int v25;
  int v26;
  void *v27;
  void *v28;
  int v29;
  int v30;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v6 + 64) + 1;
  memcpy(a1, a2, v10);
LABEL_10:
  if (*(_DWORD *)(v6 + 84))
    v11 = *(_QWORD *)(v6 + 64);
  else
    v11 = *(_QWORD *)(v6 + 64) + 1;
  v12 = *(unsigned __int8 *)(v6 + 80);
  v13 = v11 + v12;
  v14 = ~v12;
  v15 = (void *)(((unint64_t)a1 + v11 + v12) & ~v12);
  v16 = (void *)(((unint64_t)a2 + v11 + v12) & ~v12);
  v17 = v7(v15, 1, v5);
  v18 = v7(v16, 1, v5);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(v15, v16, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v15, 0, 1, v5);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v6 + 8))(v15, v5);
LABEL_18:
    memcpy(v15, v16, v11);
    goto LABEL_19;
  }
  (*(void (**)(void *, void *, uint64_t))(v6 + 40))(v15, v16, v5);
LABEL_19:
  v19 = (void *)(((unint64_t)v15 + v13) & v14);
  v20 = (void *)(((unint64_t)v16 + v13) & v14);
  v21 = v7(v19, 1, v5);
  v22 = v7(v20, 1, v5);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(v19, v20, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v19, 0, 1, v5);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v22)
  {
    (*(void (**)(void *, uint64_t))(v6 + 8))(v19, v5);
LABEL_24:
    memcpy(v19, v20, v11);
    goto LABEL_25;
  }
  (*(void (**)(void *, void *, uint64_t))(v6 + 40))(v19, v20, v5);
LABEL_25:
  v23 = (void *)(((unint64_t)v19 + v13) & v14);
  v24 = (void *)(((unint64_t)v20 + v13) & v14);
  v25 = v7(v23, 1, v5);
  v26 = v7(v24, 1, v5);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(v23, v24, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v23, 0, 1, v5);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v26)
  {
    (*(void (**)(void *, uint64_t))(v6 + 8))(v23, v5);
LABEL_30:
    memcpy(v23, v24, v11);
    goto LABEL_31;
  }
  (*(void (**)(void *, void *, uint64_t))(v6 + 40))(v23, v24, v5);
LABEL_31:
  v27 = (void *)(((unint64_t)v23 + v13) & v14);
  v28 = (void *)(((unint64_t)v24 + v13) & v14);
  v29 = v7(v27, 1, v5);
  v30 = v7(v28, 1, v5);
  if (!v29)
  {
    if (!v30)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(v27, v28, v5);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(v27, v5);
    goto LABEL_36;
  }
  if (v30)
  {
LABEL_36:
    memcpy(v27, v28, v11);
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v6 + 32))(v27, v28, v5);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v27, 0, 1, v5);
  return a1;
}

uint64_t sub_209F4FBFC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  int v12;
  unsigned int v13;
  int v14;
  unsigned int v16;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = v5 - 1;
  if (!v5)
    v6 = 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (!v5)
    ++v7;
  if (!a2)
    return 0;
  v8 = a2 - v6;
  if (a2 > v6)
  {
    v9 = *(unsigned __int8 *)(v4 + 80);
    v10 = ((v7 + v9 + ((v7 + v9 + ((v7 + v9 + ((v7 + v9) & ~v9)) & ~v9)) & ~v9)) & ~v9) + v7;
    v11 = 8 * v10;
    if (v10 > 3)
      goto LABEL_8;
    v13 = ((v8 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v13))
    {
      v12 = *(_DWORD *)(a1 + v10);
      if (v12)
        goto LABEL_15;
    }
    else
    {
      if (v13 <= 0xFF)
      {
        if (v13 < 2)
          goto LABEL_22;
LABEL_8:
        v12 = *(unsigned __int8 *)(a1 + v10);
        if (!*(_BYTE *)(a1 + v10))
          goto LABEL_22;
LABEL_15:
        v14 = (v12 - 1) << v11;
        if (v10 > 3)
          v14 = 0;
        if ((_DWORD)v10)
        {
          if (v10 > 3)
            LODWORD(v10) = 4;
          __asm { BR              X12 }
        }
        return v6 + v14 + 1;
      }
      v12 = *(unsigned __int16 *)(a1 + v10);
      if (*(_WORD *)(a1 + v10))
        goto LABEL_15;
    }
  }
LABEL_22:
  if (v5 < 2)
    return 0;
  v16 = (*(uint64_t (**)(void))(v4 + 48))();
  if (v16 >= 2)
    return v16 - 1;
  else
    return 0;
}

void sub_209F4FD5C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  BOOL v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;

  v6 = 0;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = v8 - 1;
  if (!v8)
    v9 = 0;
  v10 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v10;
  v11 = *(unsigned __int8 *)(v7 + 80);
  v12 = ((v10 + v11 + ((v10 + v11 + ((v10 + v11 + ((v10 + v11) & ~v11)) & ~v11)) & ~v11)) & ~v11) + v10;
  v13 = a3 >= v9;
  v14 = a3 - v9;
  if (v14 != 0 && v13)
  {
    if (v12 > 3)
    {
      v6 = 1u;
      if (v9 < a2)
        goto LABEL_15;
      goto LABEL_22;
    }
    v15 = ((v14 + ~(-1 << (8 * v12))) >> (8 * v12)) + 1;
    if (HIWORD(v15))
    {
      v6 = 4u;
      if (v9 < a2)
      {
LABEL_15:
        v16 = ~v9 + a2;
        if (v12 < 4)
        {
          if ((_DWORD)v12)
          {
            v17 = v16 & ~(-1 << (8 * v12));
            bzero(a1, v12);
            if ((_DWORD)v12 == 3)
            {
              *a1 = v17;
              *((_BYTE *)a1 + 2) = BYTE2(v17);
            }
            else if ((_DWORD)v12 == 2)
            {
              *a1 = v17;
            }
            else
            {
              *(_BYTE *)a1 = v17;
            }
          }
        }
        else
        {
          bzero(a1, v12);
          *(_DWORD *)a1 = v16;
        }
        __asm { BR              X10 }
      }
LABEL_22:
      __asm { BR              X11 }
    }
    if (v15 >= 0x100)
      v6 = 2;
    else
      v6 = v15 > 1;
  }
  if (v9 < a2)
    goto LABEL_15;
  goto LABEL_22;
}

void sub_209F4FF2C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_209F4FF34()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

uint64_t destroy for RUIImage.ImageType()
{
  return sub_209EEB098();
}

uint64_t _s8RemoteUI8RUIImageV9ImageTypeOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_209EEAFF0();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for RUIImage.ImageType(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_209EEAFF0();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_209EEB098();
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for RUIImage.ImageType(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_209EEB098();
  return a1;
}

uint64_t getEnumTagSinglePayload for RUIImage.ImageType(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RUIImage.ImageType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_209F500EC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_209F500F4(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for RUIImage.ImageType()
{
  return &type metadata for RUIImage.ImageType;
}

uint64_t getEnumTagSinglePayload for RUIImage.DefaultCodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for RUIImage.DefaultCodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_209F501EC + 4 * byte_209F7B126[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_209F50220 + 4 * byte_209F7B121[v4]))();
}

uint64_t sub_209F50220(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_209F50228(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x209F50230);
  return result;
}

uint64_t sub_209F5023C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x209F50244);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_209F50248(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_209F50250(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RUIImage.DefaultCodingKeys()
{
  return &type metadata for RUIImage.DefaultCodingKeys;
}

uint64_t destroy for RUIImage.ImageURLCodingKey()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RUIImage.ImageURLCodingKey(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RUIImage.ImageURLCodingKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v4;
  return a1;
}

uint64_t assignWithTake for RUIImage.ImageURLCodingKey(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for RUIImage.ImageURLCodingKey(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 33))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RUIImage.ImageURLCodingKey(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RUIImage.ImageURLCodingKey()
{
  return &type metadata for RUIImage.ImageURLCodingKey;
}

uint64_t sub_209F503FC(uint64_t a1)
{
  uint64_t v1;
  char v2;

  sub_209F4DED4(a1, *(_QWORD *)(v1 + 16));
  return v2 & 1;
}

id RUIXMLElement.traverse(withDelegate:)(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  void *v13;
  id v14;
  unint64_t v15;
  uint64_t v16;
  id result;
  uint64_t i;
  id v19;
  void *v20;
  uint64_t v21;

  v3 = sub_209F67300();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(a1, sel_traversalDelegateDidStartElement_, v1);
  v8 = objc_msgSend(v1, sel_stringValue);
  if (v8)
  {
    v9 = v8;
    sub_209F672C4();

    sub_209F672E8();
    v10 = sub_209F672D0();
    v12 = v11;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    if (v12 >> 60 != 15)
    {
      v13 = (void *)sub_209F66AA8();
      objc_msgSend(a1, sel_traversalDelegateFoundCData_, v13);

      sub_209EE4914(v10, v12);
    }
  }
  v14 = objc_msgSend(v1, sel_children);
  type metadata accessor for RUIXMLElement((uint64_t)v14);
  v15 = sub_209F67408();

  if (!(v15 >> 62))
  {
    v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (id)swift_bridgeObjectRetain();
    if (v16)
      goto LABEL_6;
LABEL_13:
    swift_bridgeObjectRelease_n();
    return objc_msgSend(a1, sel_traversalDelegateDidEndlement_, v1);
  }
  swift_bridgeObjectRetain();
  result = (id)sub_209F677EC();
  v16 = (uint64_t)result;
  if (!result)
    goto LABEL_13;
LABEL_6:
  if (v16 >= 1)
  {
    for (i = 0; i != v16; ++i)
    {
      if ((v15 & 0xC000000000000001) != 0)
        v19 = (id)MEMORY[0x20BD1CAB4](i, v15);
      else
        v19 = *(id *)(v15 + 8 * i + 32);
      v20 = v19;
      objc_msgSend(v19, sel_traverseWithDelegate_, a1);

    }
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for RUIXMLElement(uint64_t a1)
{
  return sub_209F0A438(a1, &qword_2545C59A8);
}

id _RUIXMLNamespace.init()()
{
  objc_super v1;

  v1.super_class = (Class)_RUIXMLNamespace;
  return objc_msgSendSuper2(&v1, sel_init);
}

uint64_t RUIXMLElement.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___RUIXMLElement_name);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RUIXMLElement.attributtes.getter()
{
  return sub_209F515D8();
}

uint64_t RUIXMLElement.attributtes.setter(uint64_t a1)
{
  return sub_209F5168C(a1, &OBJC_IVAR___RUIXMLElement_attributtes);
}

void sub_209F5088C(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;

  v3 = objc_msgSend(*a1, sel_attributtes);
  v4 = sub_209F67258();

  *a2 = v4;
}

void sub_209F508F0(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = (id)sub_209F6724C();
  objc_msgSend(v2, sel_setAttributtes_, v3);

}

void RUIXMLElement.parent.getter()
{
  JUMPOUT(0x20BD1DC9CLL);
}

uint64_t RUIXMLElement.stringValue.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR___RUIXMLElement_stringValue);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t RUIXMLElement.stringValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR___RUIXMLElement_stringValue);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

void sub_209F50B1C(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = objc_msgSend(*a1, sel_stringValue);
  if (v3)
  {
    v4 = v3;
    v5 = sub_209F672C4();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_209F50B80(uint64_t a1, void **a2)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *a2;
  if (*(_QWORD *)(a1 + 8))
    v3 = sub_209F672A0();
  else
    v3 = 0;
  v4 = (id)v3;
  objc_msgSend(v2, sel_setStringValue_);

}

uint64_t RUIXMLElement.children.getter()
{
  return sub_209F515D8();
}

void __swiftcall RUIXMLElement.init(name:)(RUIXMLElement *__return_ptr retstr, Swift::String name)
{
  id v2;
  void *v3;

  v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v3 = (void *)sub_209F672A0();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_initWithName_, v3);

}

id RUIXMLElement.init(name:)()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;

  v1 = (void *)sub_209F672A0();
  swift_bridgeObjectRelease();
  sub_209F416EC(MEMORY[0x24BEE4AF8]);
  v2 = (void *)sub_209F6724C();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v0, sel_initWithName_attributes_, v1, v2);

  return v3;
}

void __swiftcall RUIXMLElement.init(name:attributes:)(RUIXMLElement *__return_ptr retstr, Swift::String name, Swift::OpaquePointer attributes)
{
  id v3;
  void *v4;
  void *v5;

  v3 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v4 = (void *)sub_209F672A0();
  swift_bridgeObjectRelease();
  v5 = (void *)sub_209F6724C();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_initWithName_attributes_, v4, v5);

}

id RUIXMLElement.init(name:attributes:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  _QWORD *v7;
  _QWORD *v8;
  objc_super v10;

  v7 = &v3[OBJC_IVAR___RUIXMLElement_stringValue];
  *v7 = 0;
  v7[1] = 0;
  v3[OBJC_IVAR___RUIXMLElement_shouldTrimWhitespaces] = 1;
  *(_QWORD *)&v3[OBJC_IVAR___RUIXMLElement_mutableChildren] = MEMORY[0x24BEE4AF8];
  swift_unknownObjectWeakInit();
  v8 = &v3[OBJC_IVAR___RUIXMLElement_name];
  *v8 = a1;
  v8[1] = a2;
  *(_QWORD *)&v3[OBJC_IVAR___RUIXMLElement_attributtes] = a3;
  v10.receiver = v3;
  v10.super_class = (Class)RUIXMLElement;
  return objc_msgSendSuper2(&v10, sel_init);
}

Swift::Void __swiftcall RUIXMLElement.appendChildren(_:)(Swift::OpaquePointer a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  id v5;
  uint64_t i;
  id v7;
  void *v8;
  id v9;
  id v10;

  v2 = v1;
  if (!((unint64_t)a1._rawValue >> 62))
  {
    v4 = *(_QWORD *)(((unint64_t)a1._rawValue & 0xFFFFFFFFFFFFF8) + 0x10);
    v5 = v2;
    swift_bridgeObjectRetain();
    if (v4)
      goto LABEL_3;
LABEL_10:
    swift_bridgeObjectRelease();

    return;
  }
  v9 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_209F677EC();
  if (!v4)
    goto LABEL_10;
LABEL_3:
  if (v4 >= 1)
  {
    for (i = 0; i != v4; ++i)
    {
      if (((unint64_t)a1._rawValue & 0xC000000000000001) != 0)
        v7 = (id)MEMORY[0x20BD1CAB4](i, a1._rawValue);
      else
        v7 = *((id *)a1._rawValue + i + 4);
      v8 = v7;
      objc_msgSend(v10, sel_appendChild_, v7);

    }
    goto LABEL_10;
  }
  __break(1u);
}

Swift::Void __swiftcall RUIXMLElement.appendChild(_:)(RUIXMLElement *a1)
{
  uint64_t v1;
  _QWORD *v3;
  RUIXMLElement *v4;

  v3 = (_QWORD *)(v1 + OBJC_IVAR___RUIXMLElement_mutableChildren);
  swift_beginAccess();
  v4 = a1;
  MEMORY[0x20BD1C7A8]();
  if (*(_QWORD *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_209F6742C();
  sub_209F67450();
  sub_209F67414();
  swift_endAccess();
  swift_unknownObjectWeakAssign();
}

id _sSo16_RUIXMLNamespaceC8RemoteUIEABycfC_0()
{
  return objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

void RUIXMLElement.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void *sub_209F51430()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR___RUIXMLParserDelegate_xmlElement);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_209F514C4(void *a1)
{
  sub_209F55254(a1);

}

uint64_t sub_209F514E8@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0x68))();
  *a2 = result;
  return result;
}

void sub_209F51528(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  sub_209F55254(v1);

}

uint64_t sub_209F515CC()
{
  return sub_209F515D8();
}

uint64_t sub_209F515D8()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_209F51680(uint64_t a1)
{
  return sub_209F5168C(a1, &OBJC_IVAR___RUIXMLParserDelegate_stack);
}

uint64_t sub_209F5168C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)(v2 + *a2);
  swift_beginAccess();
  *v4 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_209F516D8@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0x98))();
  *a2 = result;
  return result;
}

uint64_t sub_209F51718(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR___RUIXMLParserDelegate_stack);
  swift_beginAccess();
  *v3 = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

id _RUIXMLNamespace.ParserDelegate.__allocating_init(root:)(void *a1)
{
  objc_class *v1;
  char *v3;
  void **v4;
  uint64_t v5;
  void *v6;
  char *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  objc_super v13;

  v3 = (char *)objc_allocWithZone(v1);
  v4 = (void **)&v3[OBJC_IVAR___RUIXMLParserDelegate_xmlElement];
  *(_QWORD *)&v3[OBJC_IVAR___RUIXMLParserDelegate_xmlElement] = 0;
  v5 = OBJC_IVAR___RUIXMLParserDelegate_root;
  *(_QWORD *)&v3[OBJC_IVAR___RUIXMLParserDelegate_root] = 0;
  *(_QWORD *)&v3[OBJC_IVAR___RUIXMLParserDelegate_stack] = MEMORY[0x24BEE4AF8];
  swift_beginAccess();
  v6 = *v4;
  *v4 = a1;
  v7 = v3;
  v8 = a1;

  v9 = *(void **)&v3[v5];
  *(_QWORD *)&v3[v5] = a1;
  v10 = v8;

  v13.receiver = v7;
  v13.super_class = v1;
  v11 = objc_msgSendSuper2(&v13, sel_init);

  return v11;
}

id _RUIXMLNamespace.ParserDelegate.init(root:)(void *a1)
{
  id v2;

  v2 = sub_209F552DC(a1);

  return v2;
}

id _RUIXMLNamespace.ParserDelegate.init()()
{
  void *v0;

  return objc_msgSend(v0, sel_initWithRoot_, 0);
}

void sub_209F518F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_209F5539C(a2, a3);
}

void sub_209F519DC()
{
  sub_209F5559C();
}

void sub_209F51A70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_209F55734(a2, a3);
}

void sub_209F51ADC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_209F55A24(a2, a3);
}

id _RUIXMLNamespace.ParserDelegate.__deallocating_deinit()
{
  return sub_209F05AD8(type metadata accessor for _RUIXMLNamespace.ParserDelegate);
}

uint64_t RUIXMLSanitizer.Options.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

RemoteUI::RUIXMLSanitizer::Options __swiftcall RUIXMLSanitizer.Options.init(rawValue:)(RemoteUI::RUIXMLSanitizer::Options rawValue)
{
  RemoteUI::RUIXMLSanitizer::Options *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static RUIXMLSanitizer.Options.moveTableViewToMultiChoiceView.getter(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

void static RUIXMLSanitizer.Options.moveWebViewToMultiChoiceView.getter(_QWORD *a1@<X8>)
{
  *a1 = 2;
}

void static RUIXMLSanitizer.Options.movePinViewToMultiChoiceView.getter(_QWORD *a1@<X8>)
{
  *a1 = 4;
}

void sub_209F51C10()
{
  qword_2545C5598 = 1;
}

uint64_t sub_209F51C20@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = (uint64_t *)(a1 + 32);
    do
    {
      v7 = *v5++;
      v6 = v7;
      if ((v7 & ~v4) == 0)
        v6 = 0;
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    v4 = 0;
  }
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t static RUIXMLSanitizer.Options.all.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  if (qword_2545C5590 != -1)
    result = swift_once();
  *a1 = qword_2545C5598;
  return result;
}

void static RUIXMLSanitizer.Options.default.getter(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_209F51CCC@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

_QWORD *sub_209F51CD8@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_209F51CEC@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_209F51D00@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_209F51D14(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_209F51D44@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_209F51D70@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_209F51D94(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_209F51DA8(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

_QWORD *sub_209F51DBC(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_209F51DD0@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_209F51DE4(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_209F51DF8(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_209F51E0C(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_209F51E20()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_209F51E30()
{
  return sub_209F67660();
}

_QWORD *sub_209F51E48(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

_QWORD *sub_209F51E5C@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_209F51E6C(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

BOOL sub_209F51E78(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_209F51E90@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(v1 + OBJC_IVAR___RUIXMLSanitizer_options);
  result = swift_beginAccess();
  *a1 = *v3;
  return result;
}

uint64_t sub_209F51EDC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_QWORD *)(v1 + OBJC_IVAR___RUIXMLSanitizer_options);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

uint64_t (*sub_209F51F2C())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id RUIXMLSanitizer.__allocating_init(options:)(_QWORD *a1)
{
  objc_class *v1;
  char *v3;
  objc_super v5;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR___RUIXMLSanitizer_options] = *a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id RUIXMLSanitizer.init(options:)(_QWORD *a1)
{
  char *v1;
  objc_super v3;

  *(_QWORD *)&v1[OBJC_IVAR___RUIXMLSanitizer_options] = *a1;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for RUIXMLSanitizer();
  return objc_msgSendSuper2(&v3, sel_init);
}

id RUIXMLSanitizer.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

uint64_t RUIXMLSanitizer.init()()
{
  uint64_t ObjectType;
  uint64_t v1;
  uint64_t v3;

  ObjectType = swift_getObjectType();
  v3 = 0;
  v1 = (*(uint64_t (**)(uint64_t *))(ObjectType + 112))(&v3);
  swift_deallocPartialClassInstance();
  return v1;
}

_QWORD *sub_209F520E4(uint64_t a1, unint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  id v13;
  _QWORD *v14;
  _QWORD *v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  unint64_t v21;
  unint64_t v22;
  _BYTE *v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;

  v3 = v2;
  v6 = sub_209F67300();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_allocWithZone(MEMORY[0x24BDD1978]);
  sub_209EE4050(a1, a2);
  v12 = (void *)sub_209F66AA8();
  v13 = objc_msgSend(v11, sel_initWithData_, v12);
  sub_209EE4928(a1, a2);

  v14 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for _RUIXMLNamespace.ParserDelegate()), sel_init);
  objc_msgSend(v13, sel_setDelegate_, v14);
  objc_msgSend(v13, sel_parse);
  if (objc_msgSend(v13, sel_parserError))
    goto LABEL_2;
  v16 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v17 = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v14) + 0x68))();
  if (!v17)
  {
    sub_209F55E9C();
    swift_allocError();
    *v24 = 0;
LABEL_2:
    swift_willThrow();

    return v14;
  }
  v18 = (void *)v17;

  (*(void (**)(uint64_t *__return_ptr))((*v16 & *v3) + 0x58))(&v26);
  v19 = sub_209F52A90(&v26);
  v20 = objc_msgSend(v19, sel_xmlString);

  sub_209F672C4();
  sub_209F672E8();
  v14 = (_QWORD *)sub_209F672D0();
  v22 = v21;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  if (v22 >> 60 == 15)
  {
    sub_209F55E9C();
    swift_allocError();
    *v23 = 1;
    swift_willThrow();
  }

  return v14;
}

void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Data.xmlElement()(RUIXMLElement *__return_ptr retstr)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  _QWORD *v8;
  _BYTE *v9;

  v3 = v2;
  v4 = v1;
  v5 = objc_allocWithZone(MEMORY[0x24BDD1978]);
  sub_209EE4050(v4, v3);
  v6 = (void *)sub_209F66AA8();
  v7 = objc_msgSend(v5, sel_initWithData_, v6);
  sub_209EE4928(v4, v3);

  v8 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for _RUIXMLNamespace.ParserDelegate()), sel_init);
  objc_msgSend(v7, sel_setDelegate_, v8);
  objc_msgSend(v7, sel_parse);
  if (objc_msgSend(v7, sel_parserError))
    goto LABEL_2;
  if (!(*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v8) + 0x68))())
  {
    sub_209F55E9C();
    swift_allocError();
    *v9 = 0;
LABEL_2:
    swift_willThrow();

    return;
  }

}

uint64_t sub_209F525C0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _BYTE *v12;
  uint64_t v14;
  uint64_t v15;

  v1 = sub_209F67300();
  v2 = *(_QWORD *)(v1 - 8);
  v4 = MEMORY[0x24BDAC7A8](v1, v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t *__return_ptr, uint64_t))((*MEMORY[0x24BEE4EA0] & *v0) + 0x58))(&v15, v4);
  v7 = sub_209F52A90(&v15);
  v8 = objc_msgSend(v7, sel_xmlString);

  sub_209F672C4();
  sub_209F672E8();
  v9 = sub_209F672D0();
  v11 = v10;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v6, v1);
  if (v11 >> 60 == 15)
  {
    sub_209F55E9C();
    swift_allocError();
    *v12 = 1;
    swift_willThrow();
  }
  return v9;
}

uint64_t sub_209F527E0(uint64_t a1, unint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  id v8;
  void *v9;
  id v10;
  _QWORD *v11;
  _QWORD *v13;
  uint64_t v14;
  void *v15;
  _BYTE *v16;

  v4 = v3;
  v5 = v2;
  v8 = objc_allocWithZone(MEMORY[0x24BDD1978]);
  sub_209EE4050(a1, a2);
  v9 = (void *)sub_209F66AA8();
  v10 = objc_msgSend(v8, sel_initWithData_, v9);
  sub_209EE4928(a1, a2);

  v11 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for _RUIXMLNamespace.ParserDelegate()), sel_init);
  objc_msgSend(v10, sel_setDelegate_, v11);
  objc_msgSend(v10, sel_parse);
  if (!objc_msgSend(v10, sel_parserError))
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4EA0];
    v14 = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v11) + 0x68))();
    if (v14)
    {
      v15 = (void *)v14;

      v4 = (*(uint64_t (**)(void *))((*v13 & *v5) + 0x90))(v15);
      return v4;
    }
    sub_209F55E9C();
    swift_allocError();
    *v16 = 0;
  }
  swift_willThrow();

  return v4;
}

id sub_209F52A38()
{
  _QWORD *v0;
  uint64_t v2;

  (*(void (**)(uint64_t *__return_ptr))((*MEMORY[0x24BEE4EA0] & *v0) + 0x58))(&v2);
  return sub_209F52A90(&v2);
}

id sub_209F52A90(uint64_t *a1)
{
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  id result;
  void *v9;
  uint64_t v10;
  uint64_t inited;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  uint64_t v25;
  id v26;
  unint64_t v27;
  id v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  id v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  id v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  id v52;
  unint64_t v53;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  unint64_t v66;
  id v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  id v72;
  _QWORD v73[7];
  _QWORD v74[2];

  v70 = *a1;
  v2 = objc_msgSend(v1, sel_name);
  sub_209F672C4();

  v3 = sub_209F67318();
  v5 = v4;
  swift_bridgeObjectRelease();
  if (v3 == 0x69756C6D78 && v5 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = sub_209F679A8();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
      return v72;
  }
  v9 = (void *)sub_209F53500();
  v10 = sub_209F35FFC((uint64_t)&unk_24C296758);
  swift_arrayDestroy();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB780);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_209F7A4E0;
  v12 = objc_msgSend(v9, sel_name);
  v13 = sub_209F672C4();
  v15 = v14;

  *(_QWORD *)(inited + 32) = v13;
  *(_QWORD *)(inited + 40) = v15;
  v16 = sub_209F35FFC(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  v17 = MEMORY[0x24BEE4AF8];
  v73[0] = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_209F55EE0(v73, 0x7FFFFFFFFFFFFFFFLL, v9, v10, v16);
  swift_bridgeObjectRelease();
  v18 = swift_bridgeObjectRelease();
  type metadata accessor for RUIXMLElement(v18);
  v19 = (void *)sub_209F673FC();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_appendChildren_, v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v73[0] = v17;
  v20 = v9;
  sub_209F5628C(v73, 1, v20, v20);

  if (v73[0] >> 62)
  {
    swift_bridgeObjectRetain();
    v25 = sub_209F677EC();
    swift_bridgeObjectRelease();
    if (v25)
      goto LABEL_10;
  }
  else if (*(_QWORD *)((v73[0] & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_10:
    v21 = objc_allocWithZone((Class)RUIXMLElement);
    v22 = (void *)sub_209F672A0();
    v23 = objc_msgSend(v21, sel_initWithName_, v22);

    v24 = (void *)sub_209F673FC();
    swift_bridgeObjectRelease();
    objc_msgSend(v23, sel_appendChildren_, v24);

    objc_msgSend(v20, sel_appendChild_, v23);
    goto LABEL_13;
  }
  swift_bridgeObjectRelease();
LABEL_13:
  v26 = objc_msgSend(v20, sel_children);
  v27 = sub_209F67408();

  v28 = v20;
  v29 = sub_209F56658(v27);

  swift_bridgeObjectRelease();
  if (v29 >> 62)
    goto LABEL_59;
  v30 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = (id)swift_bridgeObjectRetain();
  v31 = v70;
  if (v30)
  {
    do
    {
      if (v30 < 1)
      {
        __break(1u);
        return result;
      }
      v32 = 0;
      v71 = v29 & 0xC000000000000001;
      v65 = v28;
      v66 = v29 + 32;
      v68 = v30;
      v69 = v29;
      while (1)
      {
        if (v71)
          v33 = (id)MEMORY[0x20BD1CAB4](v32, v29);
        else
          v33 = *(id *)(v66 + 8 * v32);
        v34 = v33;
        v35 = sub_209F53D30(0x656956656C626174, 0xE900000000000077);
        if (!v35)
          goto LABEL_46;
        v36 = v35;
        v37 = sub_209F53D30(0x6F684369746C756DLL, 0xEF77656956656369);
        if (v37)
        {
          v38 = v37;
          v39 = objc_msgSend(v36, sel_parent);
          if (v39)
          {
            v67 = v39;
            __swift_instantiateConcreteTypeFromMangledName(&qword_2545BB780);
            v40 = swift_initStackObject();
            *(_OWORD *)(v40 + 16) = xmmword_209F7A4E0;
            v41 = objc_msgSend(v38, sel_name);
            v42 = sub_209F672C4();
            v44 = v43;

            *(_QWORD *)(v40 + 32) = v42;
            *(_QWORD *)(v40 + 40) = v44;
            v45 = sub_209F35FFC(v40);
            swift_setDeallocating();
            swift_arrayDestroy();
            v46 = swift_initStackObject();
            *(_OWORD *)(v46 + 16) = xmmword_209F7A4E0;
            v47 = objc_msgSend(v67, sel_name);
            v48 = sub_209F672C4();
            v50 = v49;

            *(_QWORD *)(v46 + 32) = v48;
            *(_QWORD *)(v46 + 40) = v50;
            v28 = (id)sub_209F35FFC(v46);
            swift_setDeallocating();
            swift_arrayDestroy();
            v74[0] = MEMORY[0x24BEE4AF8];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_209F55EE0(v74, 0x7FFFFFFFFFFFFFFFLL, v34, v45, (uint64_t)v28);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v51 = (void *)sub_209F673FC();
            swift_bridgeObjectRelease();
            objc_msgSend(v67, sel_appendChildren_, v51);

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

          }
        }
        v52 = objc_msgSend(v36, sel_children);
        v53 = sub_209F67408();

        if (v53 >> 62)
          break;
        v29 = *(_QWORD *)((v53 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v29)
          goto LABEL_28;
LABEL_40:
        v62 = 0;
LABEL_43:
        swift_bridgeObjectRelease();
        v30 = v68;
        if (!v62)
          v62 = v36;
        v63 = sub_209F35FFC((uint64_t)&unk_24C2966B8);
        swift_arrayDestroy();
        v64 = sub_209F35FFC((uint64_t)&unk_24C296678);
        swift_arrayDestroy();
        v74[0] = MEMORY[0x24BEE4AF8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_209F55EE0(v74, 0x7FFFFFFFFFFFFFFFLL, v34, v63, v64);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v28 = (id)sub_209F673FC();
        swift_bridgeObjectRelease();
        objc_msgSend(v62, sel_appendChildren_, v28);

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        v29 = v69;
        v31 = v70;
LABEL_46:
        if ((v31 & 1) != 0)
        {
          sub_209F53918(0x656956656C626174, 0xE900000000000077);
          if ((v31 & 4) == 0)
          {
LABEL_48:
            if ((v31 & 2) != 0)
              goto LABEL_52;
            goto LABEL_17;
          }
        }
        else if ((v31 & 4) == 0)
        {
          goto LABEL_48;
        }
        sub_209F53918(0x776569566E6970, 0xE700000000000000);
        if ((v31 & 2) != 0)
LABEL_52:
          sub_209F53918(1819112552, 0xE400000000000000);
LABEL_17:

        if (++v32 == v30)
        {
          swift_bridgeObjectRelease_n();
          return v65;
        }
      }
      swift_bridgeObjectRetain();
      v29 = sub_209F677EC();
      swift_bridgeObjectRelease();
      if (!v29)
        goto LABEL_40;
LABEL_28:
      while (!__OFSUB__(v29--, 1))
      {
        if ((v53 & 0xC000000000000001) != 0)
        {
          v55 = (id)MEMORY[0x20BD1CAB4](v29, v53);
        }
        else
        {
          if ((v29 & 0x8000000000000000) != 0)
            goto LABEL_57;
          if (v29 >= *(_QWORD *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_58;
          v55 = *(id *)(v53 + 32 + 8 * v29);
        }
        v28 = v55;
        v56 = objc_msgSend(v55, sel_name);
        v57 = sub_209F672C4();
        v59 = v58;

        if (v57 == 0x6E6F6974636573 && v59 == 0xE700000000000000)
        {

          swift_bridgeObjectRelease();
LABEL_42:
          v62 = (id)sub_209F54F30(v29, v53);
          goto LABEL_43;
        }
        v61 = sub_209F679A8();

        swift_bridgeObjectRelease();
        if ((v61 & 1) != 0)
          goto LABEL_42;
        if (!v29)
          goto LABEL_40;
      }
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      swift_bridgeObjectRetain();
      result = (id)sub_209F677EC();
      v30 = (uint64_t)result;
      v31 = v70;
    }
    while (result);
  }
  swift_bridgeObjectRelease_n();
  return v28;
}

uint64_t sub_209F53408(uint64_t a1, uint64_t a2)
{
  return sub_209F57474(a1, a2);
}

uint64_t RUIXMLElement.xmlLogString.getter()
{
  char *v0;

  return sub_209F542E0(v0);
}

id RUIXMLSanitizer.__deallocating_deinit()
{
  return sub_209F05AD8(type metadata accessor for RUIXMLSanitizer);
}

uint64_t sub_209F53500()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;

  v1 = objc_msgSend(v0, sel_name);
  sub_209F672C4();

  v2 = objc_msgSend(v0, sel_attributtes);
  sub_209F67258();

  v3 = objc_allocWithZone((Class)RUIXMLElement);
  v4 = (void *)sub_209F672A0();
  swift_bridgeObjectRelease();
  v5 = (void *)sub_209F6724C();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v3, sel_initWithName_attributes_, v4, v5);

  v7 = objc_msgSend(v0, sel_stringValue);
  objc_msgSend(v6, sel_setStringValue_, v7);

  v8 = objc_msgSend(v0, sel_children);
  type metadata accessor for RUIXMLElement((uint64_t)v8);
  v9 = sub_209F67408();

  if (!(v9 >> 62))
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v10)
      goto LABEL_3;
LABEL_11:
    swift_bridgeObjectRelease();
    v15 = (void *)sub_209F673FC();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_appendChildren_, v15);

    return (uint64_t)v6;
  }
  swift_bridgeObjectRetain();
  v10 = sub_209F677EC();
  swift_bridgeObjectRelease();
  if (!v10)
    goto LABEL_11;
LABEL_3:
  result = sub_209F67750();
  if ((v10 & 0x8000000000000000) == 0)
  {
    v12 = 0;
    do
    {
      if ((v9 & 0xC000000000000001) != 0)
        v13 = (id)MEMORY[0x20BD1CAB4](v12, v9);
      else
        v13 = *(id *)(v9 + 8 * v12 + 32);
      v14 = v13;
      ++v12;
      sub_209F53500();

      sub_209F67738();
      sub_209F6775C();
      sub_209F67768();
      sub_209F67744();
    }
    while (v10 != v12);
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

char *sub_209F537B8(unint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;

  if (a1 >> 62)
    goto LABEL_15;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v5 = MEMORY[0x24BEE4AF8];
    if (!v4)
      return (char *)v5;
    v17 = MEMORY[0x24BEE4AF8];
    result = sub_209F06D20(0, v4 & ~(v4 >> 63), 0);
    if (v4 < 0)
      break;
    v7 = 0;
    v5 = v17;
    while (v4 != v7)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v8 = (id)MEMORY[0x20BD1CAB4](v7, a1);
      else
        v8 = *(id *)(a1 + 8 * v7 + 32);
      v9 = v8;
      v10 = a3();
      v12 = v11;

      v14 = *(_QWORD *)(v17 + 16);
      v13 = *(_QWORD *)(v17 + 24);
      if (v14 >= v13 >> 1)
        sub_209F06D20((char *)(v13 > 1), v14 + 1, 1);
      ++v7;
      *(_QWORD *)(v17 + 16) = v14 + 1;
      v15 = v17 + 16 * v14;
      *(_QWORD *)(v15 + 32) = v10;
      *(_QWORD *)(v15 + 40) = v12;
      if (v4 == v7)
        return (char *)v5;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v4 = sub_209F677EC();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_209F53918(uint64_t a1, uint64_t a2)
{
  char **v2;
  id v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  id v17;
  unint64_t v18;
  void *v19;
  unint64_t *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  unint64_t v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  char **v32;
  id v33;

  v5 = objc_msgSend(v2, sel_children);
  type metadata accessor for RUIXMLElement((uint64_t)v5);
  v6 = sub_209F67408();

  if (v6 >> 62)
  {
LABEL_28:
    swift_bridgeObjectRetain();
    v7 = sub_209F677EC();
    if (v7)
      goto LABEL_3;
LABEL_15:
    swift_bridgeObjectRelease_n();
    return;
  }
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v7)
    goto LABEL_15;
LABEL_3:
  v30 = a1;
  v31 = a2;
  v32 = v2;
  a2 = 0x6F684369746C756DLL;
  a1 = 4;
  v2 = &selRef_loadSystemImage;
  while (1)
  {
    v8 = a1 - 4;
    if ((v6 & 0xC000000000000001) != 0)
    {
      v9 = (id)MEMORY[0x20BD1CAB4](a1 - 4, v6);
      v10 = a1 - 3;
      if (__OFADD__(v8, 1))
        goto LABEL_27;
    }
    else
    {
      v9 = *(id *)(v6 + 8 * a1);
      v10 = a1 - 3;
      if (__OFADD__(v8, 1))
      {
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
    }
    v33 = v9;
    v11 = objc_msgSend(v9, sel_name);
    v12 = sub_209F672C4();
    v14 = v13;

    if (v12 == 0x6F684369746C756DLL && v14 == 0xEF77656956656369)
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
    v16 = sub_209F679A8();
    swift_bridgeObjectRelease();
    if ((v16 & 1) != 0)
      break;

    ++a1;
    if (v10 == v7)
      goto LABEL_15;
  }
  swift_bridgeObjectRelease_n();
LABEL_18:
  v17 = objc_msgSend(v32, sel_children);
  v18 = sub_209F67408();

  swift_bridgeObjectRetain();
  v19 = sub_209F57078(v18, v30, v31);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v19)
  {

    return;
  }
  v20 = (unint64_t *)((char *)v32 + OBJC_IVAR___RUIXMLElement_mutableChildren);
  swift_beginAccess();
  v21 = v19;
  v22 = sub_209F569B4(v20, v21);

  if (*v20 >> 62)
  {
    swift_bridgeObjectRetain();
    v23 = sub_209F677EC();
    swift_bridgeObjectRelease();
    if (v23 >= v22)
      goto LABEL_21;
LABEL_31:
    __break(1u);
    return;
  }
  v23 = *(_QWORD *)((*v20 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v23 < v22)
    goto LABEL_31;
LABEL_21:
  sub_209F56D84(v22, v23);
  swift_endAccess();
  v24 = objc_msgSend(v33, sel_children);
  v25 = sub_209F67408();

  v26 = sub_209F57078(v25, 0x746E65746E6F63, 0xE700000000000000);
  swift_bridgeObjectRelease();
  if (!v26)
  {
    v27 = objc_allocWithZone((Class)RUIXMLElement);
    v28 = (void *)sub_209F672A0();
    v26 = objc_msgSend(v27, sel_initWithName_, v28);

  }
  v29 = objc_msgSend(v26, sel_parent);

  if (!v29)
    objc_msgSend(v33, sel_appendChild_, v26);
  objc_msgSend(v26, sel_appendChild_, v21);

}

void *sub_209F53D30(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  id v11;
  id v12;
  id v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;

  v5 = objc_msgSend(v2, sel_name);
  v6 = sub_209F672C4();
  v8 = v7;

  if (v6 == a1 && v8 == a2)
  {
    swift_bridgeObjectRelease();
    v12 = v2;
  }
  else
  {
    v10 = sub_209F679A8();
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0)
    {
      v11 = v2;
    }
    else
    {
      v13 = objc_msgSend(v2, sel_children);
      type metadata accessor for RUIXMLElement((uint64_t)v13);
      v14 = sub_209F67408();

      if (v14 >> 62)
        goto LABEL_21;
      v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
      while (v15)
      {
        v16 = 4;
        while (1)
        {
          v17 = (v14 & 0xC000000000000001) != 0
              ? (id)MEMORY[0x20BD1CAB4](v16 - 4, v14)
              : *(id *)(v14 + 8 * v16);
          v18 = v17;
          v19 = v16 - 3;
          if (__OFADD__(v16 - 4, 1))
            break;
          v2 = (void *)sub_209F53D30(a1, a2);

          if (v2)
          {
            swift_bridgeObjectRelease();
            return v2;
          }
          ++v16;
          if (v19 == v15)
            goto LABEL_17;
        }
        __break(1u);
LABEL_21:
        swift_bridgeObjectRetain();
        v15 = sub_209F677EC();
        swift_bridgeObjectRelease();
      }
LABEL_17:
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v2;
}

uint64_t sub_209F53EDC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  int v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  os_log_t v42;
  uint64_t v43;
  uint64_t v44;
  os_log_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v51 = a3;
  v5 = sub_209F66BA4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (uint64_t)objc_msgSend(a1, sel_parent);
  if (result)
  {
    v11 = (void *)result;
    v12 = objc_msgSend(a1, sel_name);
    v13 = sub_209F672C4();
    v15 = v14;

    v16 = sub_209F2F114(v13, v15, a2);
    swift_bridgeObjectRelease();
    if ((v16 & 1) != 0
      && (v17 = objc_msgSend(v11, sel_name),
          v18 = sub_209F672C4(),
          v20 = v19,
          v17,
          LOBYTE(v17) = sub_209F2F114(v18, v20, v51),
          swift_bridgeObjectRelease(),
          (v17 & 1) == 0))
    {
      v21 = sub_209F015C8();
      v22 = v5;
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v21, v5);
      v23 = a1;
      v24 = v11;
      swift_bridgeObjectRetain_n();
      v25 = v23;
      v26 = v24;
      v27 = sub_209F66B8C();
      v28 = sub_209F67534();
      v29 = v28;
      if (os_log_type_enabled(v27, v28))
      {
        v30 = swift_slowAlloc();
        v47 = swift_slowAlloc();
        v53 = v47;
        *(_DWORD *)v30 = 136315650;
        v48 = v6;
        v49 = v9;
        v46 = v29;
        v50 = v22;
        v31 = objc_msgSend(v25, (SEL)&selRef_remoteUIController_objectModel_shouldDisplayNamedElement_page_);
        v32 = sub_209F672C4();
        v45 = v27;
        v34 = v33;

        v52 = sub_209EE75A0(v32, v34, &v53);
        sub_209F675E8();

        swift_bridgeObjectRelease();
        *(_WORD *)(v30 + 12) = 2080;
        v35 = objc_msgSend(v26, (SEL)&selRef_remoteUIController_objectModel_shouldDisplayNamedElement_page_);
        v36 = sub_209F672C4();
        v38 = v37;

        v52 = sub_209EE75A0(v36, v38, &v53);
        sub_209F675E8();

        swift_bridgeObjectRelease();
        *(_WORD *)(v30 + 22) = 2080;
        swift_bridgeObjectRetain();
        v39 = sub_209F674F8();
        v41 = v40;
        swift_bridgeObjectRelease();
        v52 = sub_209EE75A0(v39, v41, &v53);
        sub_209F675E8();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        v42 = v45;
        _os_log_impl(&dword_209E87000, v45, (os_log_type_t)v46, "Found %s inside %s. Expected in %s", (uint8_t *)v30, 0x20u);
        v43 = v47;
        swift_arrayDestroy();
        MEMORY[0x20BD1DC00](v43, -1, -1);
        MEMORY[0x20BD1DC00](v30, -1, -1);

        (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v50);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v22);
      }
      return 1;
    }
    else
    {

      return 0;
    }
  }
  return result;
}

uint64_t sub_209F542E0(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  char *v13;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  unint64_t v24;
  uint64_t v25;
  char *v26;
  unint64_t v27;
  id v28;
  unint64_t v29;
  char *v30;
  id v31;
  void *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  id v44;
  void *v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54[16];
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;

  v2 = sub_209F66940();
  v3 = *(_QWORD *)(v2 - 8);
  v50 = v2;
  v51 = v3;
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(a1, sel_name);
  v8 = sub_209F672C4();
  v10 = v9;

  if (v8 == 0x6E49726576726573 && v10 == 0xEA00000000006F66)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    v15 = objc_msgSend(a1, sel_attributtes, v50, v51);
    v16 = sub_209F67258();

    sub_209F54F88(v16);
    swift_bridgeObjectRelease();
    v17 = objc_msgSend(a1, sel_name);
    sub_209F672C4();

    v18 = objc_allocWithZone((Class)RUIXMLElement);
    v19 = (void *)sub_209F672A0();
    swift_bridgeObjectRelease();
    v20 = (void *)sub_209F6724C();
    swift_release();
    v13 = (char *)objc_msgSend(v18, sel_initWithName_attributes_, v19, v20);

    v21 = objc_msgSend(a1, sel_stringValue);
    objc_msgSend(v13, sel_setStringValue_, v21);

    v22 = objc_msgSend(a1, sel_children);
    if (!v22)
    {
      type metadata accessor for RUIXMLElement(0);
      sub_209F67408();
      v22 = (id)sub_209F673FC();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v13, sel_appendChildren_, v22);

    if (!v13)
      return 0;
    goto LABEL_12;
  }
  v12 = sub_209F679A8();
  swift_bridgeObjectRelease();
  if ((v12 & 1) != 0)
    goto LABEL_9;
  v13 = a1;
  if (!v13)
    return 0;
LABEL_12:
  v55 = 60;
  v56 = 0xE100000000000000;
  v23 = objc_msgSend(a1, sel_name, v50, v51);
  sub_209F672C4();

  sub_209F67354();
  swift_bridgeObjectRelease();
  sub_209F54D4C();
  sub_209F67354();
  swift_bridgeObjectRelease();
  v25 = v55;
  v24 = v56;
  v57 = v55;
  v58 = v56;
  v26 = &a1[OBJC_IVAR___RUIXMLElement_mutableChildren];
  swift_beginAccess();
  v27 = *(_QWORD *)v26;
  if (v27 >> 62)
  {
    swift_bridgeObjectRetain();
    v43 = sub_209F677EC();
    swift_bridgeObjectRelease();
    if (v43)
      goto LABEL_14;
  }
  else if (*(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_14:
    sub_209F67354();
    v28 = objc_msgSend(a1, sel_children);
    type metadata accessor for RUIXMLElement((uint64_t)v28);
    v29 = sub_209F67408();

    v30 = sub_209F537B8(v29, (uint64_t)v54, sub_209F542E0);
    swift_bridgeObjectRelease();
    v52 = (uint64_t)v30;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545BC560);
    sub_209EE83E8((unint64_t *)&qword_2545BC310, (uint64_t *)&unk_2545BC560, MEMORY[0x24BEE12B0]);
    sub_209F6727C();
    swift_bridgeObjectRelease();
    sub_209F67354();
    swift_bridgeObjectRelease();
    v31 = objc_msgSend(a1, sel_stringValue);
    if (v31)
    {
      v32 = v31;
      v33 = sub_209F672C4();
      v35 = v34;

      v52 = v33;
      v53 = v35;
      sub_209F66934();
      sub_209F4155C();
      v36 = sub_209F67600();
      v38 = v37;
      (*(void (**)(char *, uint64_t))(v51 + 8))(v6, v50);
      swift_bridgeObjectRelease();
      v39 = HIBYTE(v38) & 0xF;
      if ((v38 & 0x2000000000000000) == 0)
        v39 = v36 & 0xFFFFFFFFFFFFLL;
      if (v39)
      {
        v52 = 0x41544144435B213CLL;
        v53 = 0xE90000000000005BLL;
        sub_209F67354();
        swift_bridgeObjectRelease();
        sub_209F67354();
        sub_209F67354();
      }
      swift_bridgeObjectRelease();
    }
    v41 = v57;
    v40 = v58;
    v52 = 12092;
    v53 = 0xE200000000000000;
    v42 = objc_msgSend(a1, (SEL)&selRef_remoteUIController_objectModel_shouldDisplayNamedElement_page_);
    sub_209F672C4();

    sub_209F67354();
    swift_bridgeObjectRelease();
    sub_209F67354();
    v52 = v41;
    v53 = v40;
    swift_bridgeObjectRetain();
    sub_209F67354();
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  v44 = objc_msgSend(a1, sel_stringValue);
  if (v44)
  {
    v45 = v44;
    v46 = sub_209F672C4();
    v48 = v47;

    swift_bridgeObjectRelease();
    v49 = HIBYTE(v48) & 0xF;
    if ((v48 & 0x2000000000000000) == 0)
      v49 = v46 & 0xFFFFFFFFFFFFLL;
    if (v49)
      goto LABEL_14;
  }
  v52 = v25;
  v53 = v24;
  swift_bridgeObjectRetain();
  sub_209F67354();
LABEL_27:
  swift_bridgeObjectRelease();

  return v52;
}

uint64_t sub_209F54930(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  id v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  id v13;
  unint64_t v14;
  char *v15;
  id v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39[16];
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;

  v2 = sub_209F66940();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = 60;
  v41 = 0xE100000000000000;
  v7 = a1;
  v8 = objc_msgSend(v7, sel_name);
  sub_209F672C4();

  sub_209F67354();
  swift_bridgeObjectRelease();
  sub_209F54D4C();
  sub_209F67354();
  swift_bridgeObjectRelease();
  v10 = v40;
  v9 = v41;
  v42 = v40;
  v43 = v41;
  v11 = &v7[OBJC_IVAR___RUIXMLElement_mutableChildren];
  swift_beginAccess();
  v12 = *(_QWORD *)v11;
  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    v28 = sub_209F677EC();
    swift_bridgeObjectRelease();
    if (v28)
      goto LABEL_3;
  }
  else if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v29 = objc_msgSend(v7, sel_stringValue);
  if (!v29)
    goto LABEL_15;
  v30 = v29;
  v31 = sub_209F672C4();
  v33 = v32;

  swift_bridgeObjectRelease();
  v34 = HIBYTE(v33) & 0xF;
  if ((v33 & 0x2000000000000000) == 0)
    v34 = v31 & 0xFFFFFFFFFFFFLL;
  if (!v34)
  {
LABEL_15:
    v37 = v10;
    v38 = v9;
    swift_bridgeObjectRetain();
    sub_209F67354();
    goto LABEL_16;
  }
LABEL_3:
  sub_209F67354();
  v13 = objc_msgSend(v7, sel_children);
  type metadata accessor for RUIXMLElement((uint64_t)v13);
  v14 = sub_209F67408();

  v15 = sub_209F537B8(v14, (uint64_t)v39, sub_209F54930);
  swift_bridgeObjectRelease();
  v37 = (uint64_t)v15;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545BC560);
  sub_209EE83E8((unint64_t *)&qword_2545BC310, (uint64_t *)&unk_2545BC560, MEMORY[0x24BEE12B0]);
  sub_209F6727C();
  swift_bridgeObjectRelease();
  sub_209F67354();
  swift_bridgeObjectRelease();
  v16 = objc_msgSend(v7, sel_stringValue);
  if (v16)
  {
    v17 = v16;
    v18 = sub_209F672C4();
    v20 = v19;

    v37 = v18;
    v38 = v20;
    sub_209F66934();
    sub_209F4155C();
    v21 = sub_209F67600();
    v23 = v22;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    swift_bridgeObjectRelease();
    v24 = HIBYTE(v23) & 0xF;
    if ((v23 & 0x2000000000000000) == 0)
      v24 = v21 & 0xFFFFFFFFFFFFLL;
    if (v24)
    {
      v37 = 0x41544144435B213CLL;
      v38 = 0xE90000000000005BLL;
      sub_209F67354();
      swift_bridgeObjectRelease();
      sub_209F67354();
      sub_209F67354();
    }
    swift_bridgeObjectRelease();
  }
  v26 = v42;
  v25 = v43;
  v37 = 12092;
  v38 = 0xE200000000000000;
  v27 = objc_msgSend(v7, sel_name);
  sub_209F672C4();

  sub_209F67354();
  swift_bridgeObjectRelease();
  sub_209F67354();
  v37 = v26;
  v38 = v25;
  swift_bridgeObjectRetain();
  sub_209F67354();
  swift_bridgeObjectRelease();
LABEL_16:
  swift_bridgeObjectRelease();

  return v37;
}

uint64_t sub_209F54D4C()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = objc_msgSend(v0, sel_attributtes);
  v2 = sub_209F67258();

  v3 = *(_QWORD *)(v2 + 16);
  swift_bridgeObjectRelease();
  if (!v3)
    return 0;
  v4 = objc_msgSend(v0, sel_attributtes);
  v5 = sub_209F67258();

  MEMORY[0x24BDAC7A8](v6, v7);
  sub_209F5721C(v5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_209F57BC0);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545BC560);
  sub_209EE83E8((unint64_t *)&qword_2545BC310, (uint64_t *)&unk_2545BC560, MEMORY[0x24BEE12B0]);
  sub_209F6727C();
  swift_bridgeObjectRelease();
  sub_209F67354();
  swift_bridgeObjectRelease();
  return 32;
}

uint64_t RUIXMLElement.xmlString.getter()
{
  void *v0;

  return sub_209F54930(v0);
}

unint64_t sub_209F54F30(unint64_t result, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) != 0)
    return MEMORY[0x20BD1CAB4]();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10) > result)
  {
    return (unint64_t)*(id *)(a2 + 8 * result + 32);
  }
  __break(1u);
  return result;
}

uint64_t sub_209F54F88(uint64_t a1)
{
  uint64_t result;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC5A0);
  result = sub_209F677F8();
  v3 = (_QWORD *)result;
  v4 = 0;
  v5 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = result + 64;
  if (!v8)
    goto LABEL_5;
LABEL_4:
  v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v11 | (v4 << 6); ; i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    v16 = 16 * i;
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v18 = *v17;
    result = v17[1];
    *(_QWORD *)(v10 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v19 = (_QWORD *)(v3[6] + 16 * i);
    *v19 = v18;
    v19[1] = result;
    v20 = (_QWORD *)(v3[7] + v16);
    *v20 = 0x657463616465527BLL;
    v20[1] = 0xEA00000000007D64;
    v21 = v3[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v23;
    result = swift_bridgeObjectRetain();
    if (v8)
      goto LABEL_4;
LABEL_5:
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_24;
    if (v13 >= v9)
      return (uint64_t)v3;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v4;
    if (!v14)
    {
      v4 = v13 + 1;
      if (v13 + 1 >= v9)
        return (uint64_t)v3;
      v14 = *(_QWORD *)(v5 + 8 * v4);
      if (!v14)
      {
        v4 = v13 + 2;
        if (v13 + 2 >= v9)
          return (uint64_t)v3;
        v14 = *(_QWORD *)(v5 + 8 * v4);
        if (!v14)
          break;
      }
    }
LABEL_18:
    v8 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v9)
    return (uint64_t)v3;
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
  {
    v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    v4 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v4 >= v9)
      return (uint64_t)v3;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    ++v15;
    if (v14)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

char *sub_209F55150(uint64_t a1)
{
  return sub_209F4314C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

void sub_209F55164(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_209F677EC();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x20BD1CAC0);
}

uint64_t sub_209F551CC(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

void sub_209F55254(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v3 = (void **)(v1 + OBJC_IVAR___RUIXMLParserDelegate_xmlElement);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;
  v5 = a1;

  if (!*(_QWORD *)(v1 + OBJC_IVAR___RUIXMLParserDelegate_root))
  {
    v6 = *v3;
    *(_QWORD *)(v1 + OBJC_IVAR___RUIXMLParserDelegate_root) = *v3;
    v7 = v6;
  }
}

id sub_209F552DC(void *a1)
{
  char *v1;
  void **v3;
  uint64_t v4;
  void *v5;
  char *v6;
  id v7;
  void *v8;
  id v9;
  objc_super v11;

  v3 = (void **)&v1[OBJC_IVAR___RUIXMLParserDelegate_xmlElement];
  *(_QWORD *)&v1[OBJC_IVAR___RUIXMLParserDelegate_xmlElement] = 0;
  v4 = OBJC_IVAR___RUIXMLParserDelegate_root;
  *(_QWORD *)&v1[OBJC_IVAR___RUIXMLParserDelegate_root] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___RUIXMLParserDelegate_stack] = MEMORY[0x24BEE4AF8];
  swift_beginAccess();
  v5 = *v3;
  *v3 = a1;
  v6 = v1;
  v7 = a1;

  v8 = *(void **)&v1[v4];
  *(_QWORD *)&v1[v4] = a1;
  v9 = v7;

  v11.receiver = v6;
  v11.super_class = (Class)type metadata accessor for _RUIXMLNamespace.ParserDelegate();
  return objc_msgSendSuper2(&v11, sel_init);
}

void sub_209F5539C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  id v5;
  void *v6;
  void *v7;
  id v8;
  char **v9;
  char *v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  unint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  void **v17;
  void *v18;
  id v19;
  void *v20;
  id v21;

  v5 = objc_allocWithZone((Class)RUIXMLElement);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = (void *)sub_209F672A0();
  swift_bridgeObjectRelease();
  v7 = (void *)sub_209F6724C();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v5, sel_initWithName_attributes_, v6, v7);

  v9 = (char **)((char *)v2 + OBJC_IVAR___RUIXMLParserDelegate_stack);
  swift_beginAccess();
  v10 = *v9;
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v9 = v10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v10 = sub_209F4314C(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
    *v9 = v10;
  }
  v13 = *((_QWORD *)v10 + 2);
  v12 = *((_QWORD *)v10 + 3);
  if (v13 >= v12 >> 1)
  {
    v10 = sub_209F4314C((char *)(v12 > 1), v13 + 1, 1, v10);
    *v9 = v10;
  }
  *((_QWORD *)v10 + 2) = v13 + 1;
  v14 = &v10[16 * v13];
  *((_QWORD *)v14 + 4) = a1;
  *((_QWORD *)v14 + 5) = a2;
  v15 = swift_endAccess();
  v16 = (void *)(*(uint64_t (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *v2) + 0x68))(v15);
  objc_msgSend(v16, sel_appendChild_, v8);

  v17 = (void **)((char *)v2 + OBJC_IVAR___RUIXMLParserDelegate_xmlElement);
  swift_beginAccess();
  v18 = *v17;
  *v17 = v8;
  v19 = v8;

  if (!*(_QWORD *)((char *)v2 + OBJC_IVAR___RUIXMLParserDelegate_root))
  {
    v20 = *v17;
    *(_QWORD *)((char *)v2 + OBJC_IVAR___RUIXMLParserDelegate_root) = *v17;
    v21 = v20;
  }

}

void sub_209F5559C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  _BYTE *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;

  v1 = sub_209F67300();
  v3 = MEMORY[0x24BDAC7A8](v1, v2);
  v4 = *(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x68);
  v5 = (_BYTE *)((uint64_t (*)(uint64_t))v4)(v3);
  if (v5)
  {
    v5[OBJC_IVAR___RUIXMLElement_shouldTrimWhitespaces] = 0;

  }
  sub_209F672E8();
  sub_209F672DC();
  if (v6)
  {
    v7 = (void *)v4();
    if (v7
      && (v8 = v7, v9 = objc_msgSend(v7, sel_stringValue), v8, v9))
    {
      v10 = sub_209F672C4();
      v12 = v11;

      v13 = v4();
      if (!v13)
      {
LABEL_7:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return;
      }
    }
    else
    {
      v10 = 0;
      v12 = 0xE000000000000000;
      v13 = v4();
      if (!v13)
        goto LABEL_7;
    }
    v14 = (void *)v13;
    swift_bridgeObjectRetain();
    sub_209F67354();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v15 = (void *)sub_209F672A0();
    swift_bridgeObjectRelease();
    objc_msgSend(v14, sel_setStringValue_, v15, v10, v12);

  }
}

void sub_209F55734(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t (*v15)(void);
  void *v16;
  void *v17;
  id v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;

  v5 = sub_209F66940();
  v31 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC5C8);
  v10 = *(_QWORD *)(v9 - 8);
  v12 = MEMORY[0x24BDAC7A8](v9, v11);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v2) + 0x68);
  v16 = (void *)((uint64_t (*)(uint64_t))v15)(v12);
  v32 = v5;
  if (v16
    && (v17 = v16, v18 = objc_msgSend(v16, sel_stringValue), v17, v18))
  {
    v29 = sub_209F672C4();
    v30 = v19;

  }
  else
  {
    v29 = 0;
    v30 = 0xE000000000000000;
  }
  v35 = a1;
  v36 = a2;
  sub_209F66B5C();
  v33 = 32;
  v34 = 0xE100000000000000;
  sub_209F57E80();
  sub_209F57EC4();
  sub_209EE83E8((unint64_t *)&unk_2545BC5E0, &qword_2545BC5C8, MEMORY[0x24BEE7460]);
  sub_209F67510();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
  sub_209F66934();
  sub_209F4155C();
  v20 = sub_209F67600();
  v22 = v21;
  (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v32);
  v23 = swift_bridgeObjectRelease();
  v24 = HIBYTE(v22) & 0xF;
  if ((v22 & 0x2000000000000000) == 0)
    v24 = v20 & 0xFFFFFFFFFFFFLL;
  if (!v24)
    goto LABEL_12;
  v25 = (_BYTE *)((uint64_t (*)(uint64_t))v15)(v23);
  if (v25)
  {
    v25[OBJC_IVAR___RUIXMLElement_shouldTrimWhitespaces] = 1;

  }
  v26 = v15();
  if (v26)
  {
    v27 = (void *)v26;
    v37 = v29;
    v38 = v30;
    swift_bridgeObjectRetain();
    sub_209F67354();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v28 = (void *)sub_209F672A0();
    swift_bridgeObjectRelease();
    objc_msgSend(v27, sel_setStringValue_, v28);

  }
  else
  {
LABEL_12:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

void sub_209F55A24(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t (*v19)(void);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v26;
  char **v27;
  char *v28;
  uint64_t v29;
  id v30;
  void *v31;
  void **v32;
  void *v33;
  id v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v3 = v2;
  v6 = sub_209F66940();
  v7 = *(_QWORD *)(v6 - 8);
  v9 = MEMORY[0x24BDAC7A8](v6, v8);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v13 = (void *)(*(uint64_t (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *v2) + 0x68))(v9);
  if (!v13)
    goto LABEL_32;
  v14 = v13;
  if (*((_BYTE *)v13 + OBJC_IVAR___RUIXMLElement_shouldTrimWhitespaces) == 1)
  {
    v15 = objc_msgSend(v13, sel_stringValue);
    if (v15)
    {
      v16 = sub_209F672C4();
      v18 = v17;

      v44 = v16;
      v45 = v18;
      sub_209F66934();
      sub_209F4155C();
      sub_209F67600();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
      swift_bridgeObjectRelease();
      v15 = (id)sub_209F672A0();
      v12 = (_QWORD *)MEMORY[0x24BEE4EA0];
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v14, sel_setStringValue_, v15);

  }
  v19 = *(uint64_t (**)(void))((*v12 & *v3) + 0x98);
  v20 = v19();
  v21 = *(_QWORD *)(v20 + 16);
  if (!v21)
  {
    swift_bridgeObjectRelease();
LABEL_28:
    v44 = 0;
    v45 = 0xE000000000000000;
    sub_209F676CC();
    sub_209F67354();
    sub_209F67354();
    v37 = sub_209F67354();
    v38 = ((uint64_t (*)(uint64_t))v19)(v37);
    v39 = *(_QWORD *)(v38 + 16);
    if (v39)
    {
      v40 = v38 + 16 * v39;
      v42 = *(_QWORD *)(v40 + 16);
      v41 = *(_QWORD *)(v40 + 24);
      swift_bridgeObjectRetain();
    }
    else
    {
      v42 = 0;
      v41 = 0;
    }
    swift_bridgeObjectRelease();
    v46 = v42;
    v47 = v41;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC5C0);
    sub_209F6730C();
    sub_209F67354();
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
  v22 = v20 + 16 * v21;
  v24 = *(_QWORD *)(v22 + 16);
  v23 = *(_QWORD *)(v22 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (v24 == a1 && v23 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v26 = sub_209F679A8();
    swift_bridgeObjectRelease();
    if ((v26 & 1) == 0)
      goto LABEL_28;
  }
  v27 = (char **)((char *)v3 + OBJC_IVAR___RUIXMLParserDelegate_stack);
  swift_beginAccess();
  v28 = *v27;
  if (!*((_QWORD *)*v27 + 2))
  {
    __break(1u);
LABEL_24:
    v28 = sub_209F55150((uint64_t)v28);
    v29 = *((_QWORD *)v28 + 2);
    if (v29)
      goto LABEL_17;
    goto LABEL_25;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    goto LABEL_24;
  v29 = *((_QWORD *)v28 + 2);
  if (!v29)
  {
LABEL_25:
    __break(1u);
LABEL_32:
    sub_209F677E0();
    __break(1u);
    return;
  }
LABEL_17:
  *((_QWORD *)v28 + 2) = v29 - 1;
  *v27 = v28;
  swift_endAccess();
  swift_bridgeObjectRelease();
  v30 = objc_msgSend(v14, sel_parent);
  if (v30)
  {
    v31 = v30;
    v32 = (void **)((char *)v3 + OBJC_IVAR___RUIXMLParserDelegate_xmlElement);
    swift_beginAccess();
    v33 = *v32;
    *v32 = v31;
    v34 = v31;

    if (!*(_QWORD *)((char *)v3 + OBJC_IVAR___RUIXMLParserDelegate_root))
    {
      v35 = *v32;
      *(_QWORD *)((char *)v3 + OBJC_IVAR___RUIXMLParserDelegate_root) = *v32;
      v36 = v35;
    }

  }
  else
  {
    v34 = v14;
  }

}

uint64_t type metadata accessor for _RUIXMLNamespace.ParserDelegate()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for RUIXMLSanitizer()
{
  return objc_opt_self();
}

unint64_t sub_209F55E9C()
{
  unint64_t result;

  result = qword_2545BC550;
  if (!qword_2545BC550)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7B580, &type metadata for RUIXMLSanitizerError);
    atomic_store(result, (unint64_t *)&qword_2545BC550);
  }
  return result;
}

uint64_t sub_209F55EE0(_QWORD *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  char *v28;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;

  v10 = sub_209F66B08();
  v11 = *(_QWORD *)(v10 - 8);
  result = MEMORY[0x24BDAC7A8](v10, v12);
  v34 = (char *)v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 >= 1)
  {
    v33 = a2 - 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = sub_209F35FFC((uint64_t)&unk_24C296728);
    swift_arrayDestroy();
    v16 = objc_msgSend(a3, sel_name);
    v17 = sub_209F672C4();
    v19 = v18;

    LOBYTE(v16) = sub_209F2F114(v17, v19, v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    v30 = v11;
    v31 = v10;
    sub_209F66AFC();
    v29[1] = a3;
    v20 = objc_msgSend(a3, sel_children);
    type metadata accessor for RUIXMLElement((uint64_t)v20);
    v21 = sub_209F67408();

    if (v21 >> 62)
    {
      swift_bridgeObjectRetain();
      result = sub_209F677EC();
      v22 = result;
      v23 = v33;
      if (result)
        goto LABEL_6;
    }
    else
    {
      v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain();
      v23 = v33;
      if (v22)
      {
LABEL_6:
        if (v22 < 1)
        {
          __break(1u);
          return result;
        }
        v24 = 0;
        v32 = a5;
        do
        {
          if ((v21 & 0xC000000000000001) != 0)
            v25 = (id)MEMORY[0x20BD1CAB4](v24, v21);
          else
            v25 = *(id *)(v21 + 8 * v24 + 32);
          v26 = v25;
          if ((sub_209F53EDC(v25, a4, a5) & 1) != 0)
          {
            v27 = v26;
            MEMORY[0x20BD1C7A8]();
            if (*(_QWORD *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_209F6742C();
            sub_209F67450();
            sub_209F67414();
            sub_209F66AF0();
            a5 = v32;
            v23 = v33;
          }
          ++v24;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_209F55EE0(a1, v23, v26, a4, a5);

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        while (v22 != v24);
      }
    }
    swift_bridgeObjectRelease_n();
    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC5A8);
    sub_209EE83E8(&qword_2545BC5B0, &qword_2545BC5A8, MEMORY[0x24BEE12B8]);
    sub_209EE83E8(&qword_2545BC5B8, &qword_2545BC5A8, MEMORY[0x24BEE12E8]);
    v28 = v34;
    sub_209F6751C();
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v28, v31);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_209F5628C(_QWORD *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  id v23;
  void *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  char *v31;
  _QWORD v32[2];
  uint64_t v33;
  uint64_t v34;
  char *v35;
  unint64_t v36;
  id v37;

  v8 = sub_209F66B08();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v35 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 >= 1)
  {
    v37 = a4;
    v12 = sub_209F35FFC((uint64_t)&unk_24C2966F8);
    swift_arrayDestroy();
    v13 = objc_msgSend(a3, sel_name);
    v14 = sub_209F672C4();
    v16 = v15;

    LOBYTE(v13) = sub_209F2F114(v14, v16, v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v13 & 1) != 0)
    {

      return;
    }
    v33 = v9;
    v34 = v8;
    sub_209F66AFC();
    v17 = objc_msgSend(a3, sel_children);
    type metadata accessor for RUIXMLElement((uint64_t)v17);
    v18 = sub_209F67408();

    v32[1] = a3;
    if (v18 >> 62)
    {
      swift_bridgeObjectRetain();
      v19 = sub_209F677EC();
      if (v19)
        goto LABEL_6;
    }
    else
    {
      v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v19)
      {
LABEL_6:
        if (v19 < 1)
        {
          __break(1u);
          return;
        }
        v20 = 0;
        v36 = v18 & 0xC000000000000001;
        v21 = v18;
        do
        {
          if (v36)
            v23 = (id)MEMORY[0x20BD1CAB4](v20, v18);
          else
            v23 = *(id *)(v18 + 8 * v20 + 32);
          v24 = v23;
          v25 = sub_209F35FFC((uint64_t)&unk_24C296758);
          swift_arrayDestroy();
          v26 = objc_msgSend(v24, sel_name);
          v27 = sub_209F672C4();
          v29 = v28;

          LOBYTE(v26) = sub_209F2F114(v27, v29, v25);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v26 & 1) == 0)
          {
            v30 = v24;
            MEMORY[0x20BD1C7A8]();
            if (*(_QWORD *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_209F6742C();
            sub_209F67450();
            sub_209F67414();
            sub_209F66AF0();
          }
          ++v20;
          v22 = v37;
          sub_209F5628C(a1, 0, v24, v22);

          v18 = v21;
        }
        while (v19 != v20);
      }
    }
    swift_bridgeObjectRelease_n();
    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC5A8);
    sub_209EE83E8(&qword_2545BC5B0, &qword_2545BC5A8, MEMORY[0x24BEE12B8]);
    sub_209EE83E8(&qword_2545BC5B8, &qword_2545BC5A8, MEMORY[0x24BEE12E8]);
    v31 = v35;
    sub_209F6751C();
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v31, v34);

  }
}

uint64_t sub_209F56658(unint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  id v4;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t v15;

  v15 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_22;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
    while (1)
    {
      v3 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v4 = (id)MEMORY[0x20BD1CAB4](v3, a1);
LABEL_9:
        v5 = v4;
        v6 = v3 + 1;
        if (__OFADD__(v3, 1))
          goto LABEL_21;
        v7 = v2;
        v8 = objc_msgSend(v4, sel_name);
        v9 = sub_209F672C4();
        v11 = v10;

        if (v9 == 1701273968 && v11 == 0xE400000000000000)
        {
          swift_bridgeObjectRelease();
LABEL_17:
          sub_209F67738();
          sub_209F6775C();
          sub_209F67768();
          sub_209F67744();
          goto LABEL_5;
        }
        v13 = sub_209F679A8();
        swift_bridgeObjectRelease();
        if ((v13 & 1) != 0)
          goto LABEL_17;

LABEL_5:
        ++v3;
        v2 = v7;
        if (v6 == v7)
          return v15;
      }
      if (v3 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      v2 = sub_209F677EC();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    v4 = *(id *)(a1 + 8 * v3 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_209F56814(unint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  uint64_t v20;

  v3 = v2;
  if (a1 >> 62)
    goto LABEL_18;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v5)
  {
    v6 = 0;
    v20 = v3;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v7 = (id)MEMORY[0x20BD1CAB4](v6, a1);
      else
        v7 = *(id *)(a1 + 8 * v6 + 32);
      v8 = v7;
      v9 = objc_msgSend(v7, sel_name, v20);
      v10 = sub_209F672C4();
      v12 = v11;

      v13 = objc_msgSend(a2, sel_name);
      v3 = sub_209F672C4();
      v15 = v14;

      if (v10 == v3 && v12 == v15)
      {

        swift_bridgeObjectRelease_n();
        return v6;
      }
      v17 = sub_209F679A8();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v17 & 1) != 0)
        return v6;
      v18 = v6 + 1;
      if (__OFADD__(v6, 1))
        break;
      ++v6;
      if (v18 == v5)
        return 0;
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    v5 = sub_209F677EC();
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_209F569B4(unint64_t *a1, void *a2)
{
  uint64_t v2;
  unint64_t v5;
  char v6;
  char v7;
  id v8;
  unint64_t i;
  unint64_t v10;
  unint64_t v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  unint64_t v23;
  id v24;
  id v25;
  int isUniquelyReferenced_nonNull_bridgeObject;
  void *v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  unint64_t v39;

  v5 = swift_bridgeObjectRetain();
  v38 = a2;
  v39 = sub_209F56814(v5, a2);
  v7 = v6;
  swift_bridgeObjectRelease();
  v37 = v2;
  if (v2)
    return v39;
  if ((v7 & 1) == 0)
  {
    v8 = (id)(v39 + 1);
    if (__OFADD__(v39, 1))
      goto LABEL_60;
    if (*a1 >> 62)
    {
LABEL_61:
      swift_bridgeObjectRetain();
      v35 = sub_209F677EC();
      swift_bridgeObjectRelease();
      if (v8 != (id)v35)
        goto LABEL_6;
    }
    else if (v8 != *(id *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      for (i = v39 + 5; ; ++i)
      {
        v10 = i - 4;
        v11 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          v12 = (id)MEMORY[0x20BD1CAB4](i - 4);
        }
        else
        {
          if ((v10 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_51:
            __break(1u);
LABEL_52:
            __break(1u);
LABEL_53:
            __break(1u);
LABEL_54:
            __break(1u);
LABEL_55:
            __break(1u);
LABEL_56:
            __break(1u);
LABEL_57:
            __break(1u);
LABEL_58:
            __break(1u);
LABEL_59:
            __break(1u);
LABEL_60:
            __break(1u);
            goto LABEL_61;
          }
          if (v10 >= *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_51;
          v12 = *(id *)(v11 + 8 * i);
        }
        v13 = v12;
        v14 = objc_msgSend(v12, sel_name, v37);
        v15 = sub_209F672C4();
        v17 = v16;

        v8 = objc_msgSend(v38, sel_name);
        v18 = sub_209F672C4();
        v20 = v19;

        if (v15 == v18 && v17 == v20)
        {

          swift_bridgeObjectRelease_n();
          goto LABEL_38;
        }
        v22 = sub_209F679A8();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v22 & 1) != 0)
          goto LABEL_38;
        if (v10 != v39)
          break;
LABEL_35:
        if (__OFADD__(v39, 1))
          goto LABEL_53;
        ++v39;
LABEL_38:
        v8 = (id)(i - 3);
        if (__OFADD__(v10, 1))
          goto LABEL_52;
        if (*a1 >> 62)
        {
          swift_bridgeObjectRetain();
          v32 = sub_209F677EC();
          swift_bridgeObjectRelease();
        }
        else
        {
          v32 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        if (v8 == (id)v32)
          return v39;
      }
      v23 = *a1;
      if ((*a1 & 0xC000000000000001) != 0)
      {
        v24 = (id)MEMORY[0x20BD1CAB4](v39, *a1);
        v23 = *a1;
        if ((*a1 & 0xC000000000000001) == 0)
        {
LABEL_21:
          if ((v10 & 0x8000000000000000) != 0)
            goto LABEL_56;
          if (v10 >= *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_57;
          v25 = *(id *)(v23 + 8 * i);
          goto LABEL_24;
        }
      }
      else
      {
        if ((v39 & 0x8000000000000000) != 0)
          goto LABEL_54;
        if (v39 >= *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_55;
        v24 = *(id *)(v23 + 8 * v39 + 32);
        if ((v23 & 0xC000000000000001) == 0)
          goto LABEL_21;
      }
      v25 = (id)MEMORY[0x20BD1CAB4](i - 4, v23);
      v23 = *a1;
LABEL_24:
      isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v23;
      if (!isUniquelyReferenced_nonNull_bridgeObject
        || (v23 & 0x8000000000000000) != 0
        || (v23 & 0x4000000000000000) != 0)
      {
        sub_209F55164(v23);
      }
      v27 = *(void **)((v23 & 0xFFFFFFFFFFFFFF8) + 8 * v39 + 0x20);
      *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 8 * v39 + 0x20) = v25;

      sub_209F67414();
      v28 = *a1;
      v29 = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v28;
      if (!v29 || (v28 & 0x8000000000000000) != 0 || (v28 & 0x4000000000000000) != 0)
        sub_209F55164(v28);
      if ((v10 & 0x8000000000000000) != 0)
        goto LABEL_58;
      v30 = v28 & 0xFFFFFFFFFFFFFF8;
      if (v10 >= *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_59;
      v31 = *(void **)(v30 + 8 * i);
      *(_QWORD *)(v30 + 8 * i) = v24;

      sub_209F67414();
      goto LABEL_35;
    }
    return v39;
  }
  v33 = *a1;
  if (!(v33 >> 62))
    return *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v36 = sub_209F677EC();
  swift_bridgeObjectRelease();
  return v36;
}

uint64_t sub_209F56D84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v4 = a1;
    if (!(*v3 >> 62))
    {
      if (*(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
        goto LABEL_4;
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
  }
  swift_bridgeObjectRetain();
  v21 = sub_209F677EC();
  swift_bridgeObjectRelease();
  if (v21 < v2)
    goto LABEL_31;
LABEL_4:
  v6 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v5 = v4 - v2;
  if (__OFSUB__(0, v6))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
    v7 = sub_209F677EC();
    swift_bridgeObjectRelease();
    v8 = v7 + v5;
    if (!__OFADD__(v7, v5))
      goto LABEL_8;
LABEL_36:
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
    v12 = sub_209F677EC();
    swift_bridgeObjectRelease();
    v9 = *v3;
    goto LABEL_15;
  }
  if (*v3 >> 62)
    goto LABEL_34;
  v7 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  v8 = v7 - v6;
  if (__OFADD__(v7, v5))
    goto LABEL_36;
LABEL_8:
  v9 = *v3;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v3 = v9;
  v7 = 0;
  if ((_DWORD)isUniquelyReferenced_nonNull_bridgeObject
    && (v9 & 0x8000000000000000) == 0
    && (v9 & 0x4000000000000000) == 0)
  {
    v11 = v9 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v7 = 1;
  }
  if (v9 >> 62)
    goto LABEL_37;
  v12 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v8)
    v12 = v8;
  swift_bridgeObjectRetain();
  *v3 = MEMORY[0x20BD1CAC0](v7, v12, 1, v9);
  isUniquelyReferenced_nonNull_bridgeObject = swift_bridgeObjectRelease();
  v11 = *v3 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v13 = v11 + 32;
  v14 = (char *)(v11 + 32 + 8 * v4);
  type metadata accessor for RUIXMLElement(isUniquelyReferenced_nonNull_bridgeObject);
  swift_arrayDestroy();
  if (!v5)
    return sub_209F67414();
  if (!(*v3 >> 62))
  {
    v15 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    v16 = v15 - v2;
    if (!__OFSUB__(v15, v2))
      goto LABEL_21;
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  v22 = sub_209F677EC();
  swift_bridgeObjectRelease();
  v16 = v22 - v2;
  if (__OFSUB__(v22, v2))
    goto LABEL_40;
LABEL_21:
  if ((v16 & 0x8000000000000000) == 0)
  {
    v17 = (char *)(v13 + 8 * v2);
    if (v4 != v2 || v14 >= &v17[8 * v16])
      memmove(v14, v17, 8 * v16);
    if (!(*v3 >> 62))
    {
      v18 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
      v19 = v18 + v5;
      if (!__OFADD__(v18, v5))
      {
LABEL_27:
        *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10) = v19;
        return sub_209F67414();
      }
      goto LABEL_43;
    }
LABEL_41:
    swift_bridgeObjectRetain();
    v23 = sub_209F677EC();
    swift_bridgeObjectRelease();
    v19 = v23 + v5;
    if (!__OFADD__(v23, v5))
      goto LABEL_27;
LABEL_43:
    __break(1u);
  }
  result = sub_209F6781C();
  __break(1u);
  return result;
}

void *sub_209F57078(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char v20;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;

  v4 = v3;
  v7 = a1;
  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    v8 = sub_209F677EC();
    if (v8)
      goto LABEL_3;
  }
  else
  {
    v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8)
    {
LABEL_3:
      v22 = v4;
      v23 = v7;
      v24 = v7 & 0xC000000000000001;
      v4 = 4;
      do
      {
        v9 = v4 - 4;
        if (v24)
        {
          v10 = (id)MEMORY[0x20BD1CAB4](v4 - 4, v7);
          v11 = v4 - 3;
          if (__OFADD__(v9, 1))
            goto LABEL_19;
        }
        else
        {
          v10 = *(id *)(v7 + 8 * v4);
          v11 = v4 - 3;
          if (__OFADD__(v9, 1))
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        v12 = v8;
        v13 = v10;
        v14 = a3;
        v15 = objc_msgSend(v10, sel_name, v22);
        v16 = sub_209F672C4();
        v18 = v17;

        a3 = v14;
        v19 = v16 == a2 && v18 == v14;
        if (v19)
        {
          swift_bridgeObjectRelease();
LABEL_18:
          swift_bridgeObjectRelease();
          return v13;
        }
        v20 = sub_209F679A8();
        swift_bridgeObjectRelease();
        if ((v20 & 1) != 0)
          goto LABEL_18;

        ++v4;
        v8 = v12;
        v19 = v11 == v12;
        v7 = v23;
      }
      while (!v19);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_209F5721C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  int64_t v2;
  uint64_t v3;
  uint64_t result;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  int64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  int64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x24BEE4AF8];
  if (!v2)
    return v3;
  v35 = MEMORY[0x24BEE4AF8];
  sub_209F06D20(0, v2, 0);
  v3 = v35;
  result = sub_209F551CC(a1);
  v7 = result;
  v8 = 0;
  v9 = a1 + 64;
  v30 = v2;
  v31 = v6;
  v32 = a1 + 64;
  while ((v7 & 0x8000000000000000) == 0 && v7 < 1 << *(_BYTE *)(a1 + 32))
  {
    v12 = (unint64_t)v7 >> 6;
    if ((*(_QWORD *)(v9 + 8 * ((unint64_t)v7 >> 6)) & (1 << v7)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(a1 + 36) != v6)
      goto LABEL_24;
    v34 = v8;
    v13 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v7);
    v14 = *v13;
    v15 = v13[1];
    v16 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * v7);
    v17 = *v16;
    v18 = v16[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19 = a2(v14, v15, v17, v18);
    v21 = v20;
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    v23 = *(_QWORD *)(v35 + 16);
    v22 = *(_QWORD *)(v35 + 24);
    if (v23 >= v22 >> 1)
      result = (uint64_t)sub_209F06D20((char *)(v22 > 1), v23 + 1, 1);
    *(_QWORD *)(v35 + 16) = v23 + 1;
    v24 = v35 + 16 * v23;
    *(_QWORD *)(v24 + 32) = v19;
    *(_QWORD *)(v24 + 40) = v21;
    v10 = 1 << *(_BYTE *)(a1 + 32);
    if (v7 >= v10)
      goto LABEL_25;
    v9 = a1 + 64;
    v25 = *(_QWORD *)(v32 + 8 * v12);
    if ((v25 & (1 << v7)) == 0)
      goto LABEL_26;
    v6 = v31;
    if (*(_DWORD *)(a1 + 36) != v31)
      goto LABEL_27;
    v26 = v25 & (-2 << (v7 & 0x3F));
    if (v26)
    {
      v10 = __clz(__rbit64(v26)) | v7 & 0xFFFFFFFFFFFFFFC0;
      v11 = v30;
    }
    else
    {
      v27 = v12 + 1;
      v28 = (unint64_t)(v10 + 63) >> 6;
      v11 = v30;
      if (v12 + 1 < v28)
      {
        v29 = *(_QWORD *)(v32 + 8 * v27);
        if (v29)
        {
LABEL_20:
          v10 = __clz(__rbit64(v29)) + (v27 << 6);
        }
        else
        {
          while (v28 - 2 != v12)
          {
            v29 = *(_QWORD *)(a1 + 80 + 8 * v12++);
            if (v29)
            {
              v27 = v12 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    v8 = v34 + 1;
    v7 = v10;
    if (v34 + 1 == v11)
      return v3;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_209F57474(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _BYTE *v17;
  _QWORD v19[2];

  v4 = sub_209F67300();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_209F66940();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = a1;
  v19[1] = a2;
  sub_209F66934();
  sub_209F4155C();
  v14 = sub_209F67600();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  sub_209F672E8();
  sub_209F672D0();
  v16 = v15;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  if (v16 >> 60 != 15)
    __asm { BR              X10 }
  sub_209F55E9C();
  swift_allocError();
  *v17 = 1;
  swift_willThrow();
  return v14;
}

unint64_t sub_209F577A8()
{
  unint64_t result;

  result = qword_2545BC578;
  if (!qword_2545BC578)
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7B518, &type metadata for RUIXMLSanitizerError);
    atomic_store(result, (unint64_t *)&qword_2545BC578);
  }
  return result;
}

unint64_t sub_209F577F0()
{
  unint64_t result;

  result = qword_2545BC580;
  if (!qword_2545BC580)
  {
    result = MEMORY[0x20BD1DB1C](&protocol conformance descriptor for RUIXMLSanitizer.Options, &type metadata for RUIXMLSanitizer.Options);
    atomic_store(result, (unint64_t *)&qword_2545BC580);
  }
  return result;
}

unint64_t sub_209F57838()
{
  unint64_t result;

  result = qword_2545BC588;
  if (!qword_2545BC588)
  {
    result = MEMORY[0x20BD1DB1C](&protocol conformance descriptor for RUIXMLSanitizer.Options, &type metadata for RUIXMLSanitizer.Options);
    atomic_store(result, (unint64_t *)&qword_2545BC588);
  }
  return result;
}

unint64_t sub_209F57880()
{
  unint64_t result;

  result = qword_2545BC590;
  if (!qword_2545BC590)
  {
    result = MEMORY[0x20BD1DB1C](&protocol conformance descriptor for RUIXMLSanitizer.Options, &type metadata for RUIXMLSanitizer.Options);
    atomic_store(result, (unint64_t *)&qword_2545BC590);
  }
  return result;
}

unint64_t sub_209F578C8()
{
  unint64_t result;

  result = qword_2545BC598;
  if (!qword_2545BC598)
  {
    result = MEMORY[0x20BD1DB1C](&protocol conformance descriptor for RUIXMLSanitizer.Options, &type metadata for RUIXMLSanitizer.Options);
    atomic_store(result, (unint64_t *)&qword_2545BC598);
  }
  return result;
}

char *keypath_get_selector_attributtes()
{
  return sel_attributtes;
}

char *keypath_get_selector_stringValue()
{
  return sel_stringValue;
}

uint64_t type metadata accessor for _RUIXMLNamespace(uint64_t a1)
{
  return sub_209F0A438(a1, &qword_2545C59A0);
}

uint64_t method lookup function for _RUIXMLNamespace.ParserDelegate()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of _RUIXMLNamespace.ParserDelegate.xmlElement.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of _RUIXMLNamespace.ParserDelegate.stack.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of _RUIXMLNamespace.ParserDelegate.__allocating_init(root:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of _RUIXMLNamespace.ParserDelegate.parser(_:didStartElement:namespaceURI:qualifiedName:attributes:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of _RUIXMLNamespace.ParserDelegate.parser(_:foundCDATA:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of _RUIXMLNamespace.ParserDelegate.parser(_:foundCharacters:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of _RUIXMLNamespace.ParserDelegate.parser(_:didEndElement:namespaceURI:qualifiedName:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xD0))();
}

uint64_t storeEnumTagSinglePayload for RUIXMLSanitizerError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_209F57A40 + 4 * byte_209F7B505[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_209F57A74 + 4 * byte_209F7B500[v4]))();
}

uint64_t sub_209F57A74(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_209F57A7C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x209F57A84);
  return result;
}

uint64_t sub_209F57A90(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x209F57A98);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_209F57A9C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_209F57AA4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RUIXMLSanitizerError()
{
  return &type metadata for RUIXMLSanitizerError;
}

uint64_t method lookup function for RUIXMLSanitizer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RUIXMLSanitizer.__allocating_init(options:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of RUIXMLSanitizer.sanitizedXML(data:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of RUIXMLSanitizer.sanitizedXMLData(element:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of RUIXMLSanitizer.sanitizedXMLElement(data:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of RUIXMLSanitizer.sanitizedXML(element:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of RUIXMLSanitizer.logString(xmlString:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x98))();
}

ValueMetadata *type metadata accessor for RUIXMLSanitizer.Options()
{
  return &type metadata for RUIXMLSanitizer.Options;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_209F57BC0()
{
  swift_bridgeObjectRetain();
  sub_209F67354();
  sub_209F4155C();
  sub_209F6760C();
  sub_209F6760C();
  swift_bridgeObjectRelease();
  sub_209F6760C();
  swift_bridgeObjectRelease();
  sub_209F6760C();
  swift_bridgeObjectRelease();
  sub_209F6760C();
  swift_bridgeObjectRelease();
  sub_209F6760C();
  swift_bridgeObjectRelease();
  sub_209F67354();
  swift_bridgeObjectRelease();
  sub_209F67354();
}

unint64_t sub_209F57E80()
{
  unint64_t result;

  result = qword_2545BC5D0;
  if (!qword_2545BC5D0)
  {
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BEE0D48], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_2545BC5D0);
  }
  return result;
}

unint64_t sub_209F57EC4()
{
  unint64_t result;

  result = qword_2545BC5D8;
  if (!qword_2545BC5D8)
  {
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BEE0D40], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_2545BC5D8);
  }
  return result;
}

uint64_t sub_209F57F10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 *v2;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (**v9)();
  __int128 v11;
  __int128 v12;

  v5 = *((_QWORD *)v2 + 2);
  v6 = *(__int128 *)((char *)v2 + 24);
  v11 = *v2;
  v12 = v6;
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = *v2;
  *(_QWORD *)(v7 + 32) = v5;
  *(_OWORD *)(v7 + 40) = *(__int128 *)((char *)v2 + 24);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545BC5F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a2, a1, v8);
  v9 = (uint64_t (**)())(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545BC5F8) + 36));
  *v9 = sub_209F58424;
  v9[1] = (uint64_t (*)())v7;
  v9[2] = 0;
  v9[3] = 0;
  sub_209F0A630((uint64_t)&v11);
  swift_unknownObjectRetain();
  return sub_209F584B0((uint64_t)&v12);
}

uint64_t View.registerScriptInterface<A>(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[5];
  _QWORD v13[2];
  _QWORD v14[2];

  sub_209F673C0();
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 24))(a3, a5);
  type metadata accessor for ScriptEnvironment();
  sub_209F580D0();
  v14[0] = sub_209F66E38();
  v14[1] = v10;
  v13[0] = v12[0];
  v13[1] = v12[1];
  v12[2] = v9;
  v12[3] = v14[0];
  v12[4] = v10;
  MEMORY[0x20BD1C4F0](v12, a2, &type metadata for ScriptInterfaceModifier, a4);
  sub_209F0A658((uint64_t)v13);
  swift_unknownObjectRelease();
  return sub_209F58118((uint64_t)v14);
}

unint64_t sub_209F580D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2545BB990;
  if (!qword_2545BB990)
  {
    v1 = type metadata accessor for ScriptEnvironment();
    result = MEMORY[0x20BD1DB1C](&protocol conformance descriptor for ScriptEnvironment, v1);
    atomic_store(result, (unint64_t *)&qword_2545BB990);
  }
  return result;
}

uint64_t sub_209F58118(uint64_t a1)
{
  swift_release();
  return a1;
}

uint64_t sub_209F58140(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 16);
  v2 = sub_209F66E08();
  v4[0] = v1;
  v4[1] = sub_209F58198();
  return MEMORY[0x20BD1DB1C](MEMORY[0x24BDED300], v2, v4);
}

unint64_t sub_209F58198()
{
  unint64_t result;

  result = qword_2545C59B0[0];
  if (!qword_2545C59B0[0])
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7B7E0, &type metadata for ScriptInterfaceModifier);
    atomic_store(result, qword_2545C59B0);
  }
  return result;
}

uint64_t destroy for ScriptInterfaceModifier()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_release();
}

_QWORD *initializeWithCopy for ScriptInterfaceModifier(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for ScriptInterfaceModifier(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  return a1;
}

uint64_t assignWithTake for ScriptInterfaceModifier(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ScriptInterfaceModifier(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScriptInterfaceModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ScriptInterfaceModifier()
{
  return &type metadata for ScriptInterfaceModifier;
}

uint64_t sub_209F583E0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_209F583F0()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_209F58424()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t result;

  v1 = v0[5];
  if (v1)
  {
    v2 = v0[2];
    v5 = v0 + 3;
    v3 = v0[3];
    v4 = v5[1];
    v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v1 + 136);
    swift_retain();
    v6(v4, v2, v3);
    return swift_release();
  }
  else
  {
    type metadata accessor for ScriptEnvironment();
    sub_209F580D0();
    result = sub_209F66E2C();
    __break(1u);
  }
  return result;
}

uint64_t sub_209F584B0(uint64_t a1)
{
  swift_retain();
  return a1;
}

unint64_t sub_209F584DC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2545BC600;
  if (!qword_2545BC600)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BC5F8);
    v2[0] = sub_209F58548();
    v2[1] = MEMORY[0x24BDF0908];
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BDED300], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2545BC600);
  }
  return result;
}

unint64_t sub_209F58548()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2545BC608;
  if (!qword_2545BC608)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545BC5F0);
    result = MEMORY[0x20BD1DB1C](MEMORY[0x24BDEFB70], v1);
    atomic_store(result, (unint64_t *)&qword_2545BC608);
  }
  return result;
}

uint64_t sub_209F58594()
{
  return sub_209F58600((void (*)(void))sub_209F585A8);
}

unint64_t sub_209F585A8()
{
  unint64_t result;

  result = qword_2545C5A40[0];
  if (!qword_2545C5A40[0])
  {
    result = MEMORY[0x20BD1DB1C](&unk_209F7B8C4, &type metadata for ReplaceXMLEnvironmentKey);
    atomic_store(result, qword_2545C5A40);
  }
  return result;
}

uint64_t sub_209F585EC(uint64_t a1, uint64_t a2)
{
  return sub_209F58640(a1, a2, (void (*)(uint64_t, uint64_t))sub_209F585A8);
}

uint64_t sub_209F58600(void (*a1)(void))
{
  uint64_t v2;

  a1();
  sub_209F66EA4();
  return v2;
}

uint64_t sub_209F58640(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  a3(a1, a2);
  return sub_209F66EB0();
}

ValueMetadata *type metadata accessor for ReplaceXMLAction()
{
  return &type metadata for ReplaceXMLAction;
}

ValueMetadata *type metadata accessor for ParentReplaceXMLEnvironmentKey()
{
  return &type metadata for ParentReplaceXMLEnvironmentKey;
}

ValueMetadata *type metadata accessor for ReplaceXMLEnvironmentKey()
{
  return &type metadata for ReplaceXMLEnvironmentKey;
}

uint64_t type metadata accessor for SwiftUIContentView.ContentLoader()
{
  uint64_t result;

  result = qword_2545C6070;
  if (!qword_2545C6070)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_209F586EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2545BB890;
  if (!qword_2545BB890)
  {
    v1 = type metadata accessor for SwiftUIContentView.ContentLoader();
    result = MEMORY[0x20BD1DB1C](&unk_209F7B9A8, v1);
    atomic_store(result, (unint64_t *)&qword_2545BB890);
  }
  return result;
}

